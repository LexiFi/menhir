State 0:
program' -> . program [ # ]
-- On MODULE shift to state 1
-- On program shift to state 402

State 1:
program -> MODULE . modname semi imports block opt_ident DOT [ # ]
-- On IDENT shift to state 2
-- On name shift to state 3
-- On modname shift to state 4

State 2:
name -> IDENT . [ UPARROW TO THEN SUB STAR SEMI RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS IDENT EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production name -> IDENT 
-- On TO reduce production name -> IDENT 
-- On THEN reduce production name -> IDENT 
-- On SUB reduce production name -> IDENT 
-- On STAR reduce production name -> IDENT 
-- On SEMI reduce production name -> IDENT 
-- On RPAR reduce production name -> IDENT 
-- On RELOP reduce production name -> IDENT 
-- On RBRACE reduce production name -> IDENT 
-- On PLUS reduce production name -> IDENT 
-- On OF reduce production name -> IDENT 
-- On MULOP reduce production name -> IDENT 
-- On MINUS reduce production name -> IDENT 
-- On LPAR reduce production name -> IDENT 
-- On IS reduce production name -> IDENT 
-- On IDENT reduce production name -> IDENT 
-- On EQUAL reduce production name -> IDENT 
-- On DOTDOT reduce production name -> IDENT 
-- On DOT reduce production name -> IDENT 
-- On DO reduce production name -> IDENT 
-- On COMMA reduce production name -> IDENT 
-- On COLON reduce production name -> IDENT 
-- On BY reduce production name -> IDENT 
-- On BUS reduce production name -> IDENT 
-- On ASSIGN reduce production name -> IDENT 
-- On ADDOP reduce production name -> IDENT 

State 3:
modname -> name . [ SEMI IDENT COMMA ]
-- On SEMI reduce production modname -> name 
-- On IDENT reduce production modname -> name 
-- On COMMA reduce production modname -> name 

State 4:
program -> MODULE modname . semi imports block opt_ident DOT [ # ]
-- On SEMI shift to state 5
-- On COMMA shift to state 6
-- On semi shift to state 7
-- On IDENT reduce production semi -> 

State 5:
semi -> SEMI . [ VAR IDENT ]
-- On VAR reduce production semi -> SEMI 
-- On IDENT reduce production semi -> SEMI 

State 6:
semi -> COMMA . [ VAR IDENT ]
-- On VAR reduce production semi -> COMMA 
-- On IDENT reduce production semi -> COMMA 

State 7:
program -> MODULE modname semi . imports block opt_ident DOT [ # ]
-- On IDENT shift to state 8
-- On name shift to state 9
-- On imports shift to state 12
-- On import shift to state 401

State 8:
name -> IDENT . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production name -> IDENT 
-- On WITH reduce production name -> IDENT 
-- On WHILE reduce production name -> IDENT 
-- On VBAR reduce production name -> IDENT 
-- On VAR reduce production name -> IDENT 
-- On UPARROW reduce production name -> IDENT 
-- On UNTIL reduce production name -> IDENT 
-- On TYPE reduce production name -> IDENT 
-- On SUB reduce production name -> IDENT 
-- On STAR reduce production name -> IDENT 
-- On SEMI reduce production name -> IDENT 
-- On RPAR reduce production name -> IDENT 
-- On RETURN reduce production name -> IDENT 
-- On REPEAT reduce production name -> IDENT 
-- On RELOP reduce production name -> IDENT 
-- On PROCEDURE reduce production name -> IDENT 
-- On PLUS reduce production name -> IDENT 
-- On MULOP reduce production name -> IDENT 
-- On MINUS reduce production name -> IDENT 
-- On LPAR reduce production name -> IDENT 
-- On LOOP reduce production name -> IDENT 
-- On LOCAL reduce production name -> IDENT 
-- On IS reduce production name -> IDENT 
-- On IF reduce production name -> IDENT 
-- On IDENT reduce production name -> IDENT 
-- On FOR reduce production name -> IDENT 
-- On EXIT reduce production name -> IDENT 
-- On EQUAL reduce production name -> IDENT 
-- On END reduce production name -> IDENT 
-- On ELSIF reduce production name -> IDENT 
-- On ELSE reduce production name -> IDENT 
-- On DOT reduce production name -> IDENT 
-- On CONST reduce production name -> IDENT 
-- On COMMA reduce production name -> IDENT 
-- On CASE reduce production name -> IDENT 
-- On BUS reduce production name -> IDENT 
-- On BEGIN reduce production name -> IDENT 
-- On ASSIGN reduce production name -> IDENT 
-- On ADDOP reduce production name -> IDENT 
-- On ABSTRACT reduce production name -> IDENT 

State 9:
import -> name . [ error VAR TYPE PROCEDURE END CONST COMMA BEGIN ABSTRACT ]
import -> name . ASSIGN IDENT [ error VAR TYPE PROCEDURE END CONST COMMA BEGIN ABSTRACT ]
-- On ASSIGN shift to state 10
-- On error reduce production import -> name 
-- On VAR reduce production import -> name 
-- On TYPE reduce production import -> name 
-- On PROCEDURE reduce production import -> name 
-- On END reduce production import -> name 
-- On CONST reduce production import -> name 
-- On COMMA reduce production import -> name 
-- On BEGIN reduce production import -> name 
-- On ABSTRACT reduce production import -> name 

State 10:
import -> name ASSIGN . IDENT [ error VAR TYPE PROCEDURE END CONST COMMA BEGIN ABSTRACT ]
-- On IDENT shift to state 11

State 11:
import -> name ASSIGN IDENT . [ error VAR TYPE PROCEDURE END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production import -> name ASSIGN IDENT 
-- On VAR reduce production import -> name ASSIGN IDENT 
-- On TYPE reduce production import -> name ASSIGN IDENT 
-- On PROCEDURE reduce production import -> name ASSIGN IDENT 
-- On END reduce production import -> name ASSIGN IDENT 
-- On CONST reduce production import -> name ASSIGN IDENT 
-- On COMMA reduce production import -> name ASSIGN IDENT 
-- On BEGIN reduce production import -> name ASSIGN IDENT 
-- On ABSTRACT reduce production import -> name ASSIGN IDENT 

State 12:
imports -> imports . COMMA import [ error VAR TYPE PROCEDURE END CONST COMMA BEGIN ABSTRACT ]
program -> MODULE modname semi imports . block opt_ident DOT [ # ]
-- On COMMA shift to state 13
-- On decls shift to state 15
-- On block shift to state 397
-- On error reduce production decls -> 
-- On VAR reduce production decls -> 
-- On TYPE reduce production decls -> 
-- On PROCEDURE reduce production decls -> 
-- On END reduce production decls -> 
-- On CONST reduce production decls -> 
-- On BEGIN reduce production decls -> 
-- On ABSTRACT reduce production decls -> 

State 13:
imports -> imports COMMA . import [ error VAR TYPE PROCEDURE END CONST COMMA BEGIN ABSTRACT ]
-- On IDENT shift to state 8
-- On name shift to state 9
-- On import shift to state 14

State 14:
imports -> imports COMMA import . [ error VAR TYPE PROCEDURE END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production imports -> imports COMMA import 
-- On VAR reduce production imports -> imports COMMA import 
-- On TYPE reduce production imports -> imports COMMA import 
-- On PROCEDURE reduce production imports -> imports COMMA import 
-- On END reduce production imports -> imports COMMA import 
-- On CONST reduce production imports -> imports COMMA import 
-- On COMMA reduce production imports -> imports COMMA import 
-- On BEGIN reduce production imports -> imports COMMA import 
-- On ABSTRACT reduce production imports -> imports COMMA import 

State 15:
block -> decls . body END [ IDENT DOT ]
decls -> decls . decl [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error shift to state 16
-- On VAR shift to state 18
-- On TYPE shift to state 180
-- On PROCEDURE shift to state 188
-- On CONST shift to state 191
-- On BEGIN shift to state 254
-- On ABSTRACT shift to state 285
-- On proc shift to state 305
-- On decl shift to state 306
-- On body shift to state 395
-- On END reduce production body -> 

State 16:
decl -> error . SEMI [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On SEMI shift to state 17

State 17:
decl -> error SEMI . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production decl -> error SEMI 
-- On VAR reduce production decl -> error SEMI 
-- On TYPE reduce production decl -> error SEMI 
-- On PROCEDURE reduce production decl -> error SEMI 
-- On END reduce production decl -> error SEMI 
-- On CONST reduce production decl -> error SEMI 
-- On BEGIN reduce production decl -> error SEMI 
-- On ABSTRACT reduce production decl -> error SEMI 

State 18:
decl -> VAR . var_decls [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On IDENT shift to state 19
-- On var_decls shift to state 23
-- On var_decl shift to state 24
-- On defids shift to state 26
-- On defid shift to state 55

State 19:
defid -> IDENT . export [ RPAR EQUAL COMMA COLON ]
-- On STAR shift to state 20
-- On MINUS shift to state 21
-- On export shift to state 22
-- On RPAR reduce production export -> 
-- On EQUAL reduce production export -> 
-- On COMMA reduce production export -> 
-- On COLON reduce production export -> 

State 20:
export -> STAR . [ RPAR EQUAL COMMA COLON ]
-- On RPAR reduce production export -> STAR 
-- On EQUAL reduce production export -> STAR 
-- On COMMA reduce production export -> STAR 
-- On COLON reduce production export -> STAR 

State 21:
export -> MINUS . [ RPAR EQUAL COMMA COLON ]
-- On RPAR reduce production export -> MINUS 
-- On EQUAL reduce production export -> MINUS 
-- On COMMA reduce production export -> MINUS 
-- On COLON reduce production export -> MINUS 

State 22:
defid -> IDENT export . [ RPAR EQUAL COMMA COLON ]
-- On RPAR reduce production defid -> IDENT export 
-- On EQUAL reduce production defid -> IDENT export 
-- On COMMA reduce production defid -> IDENT export 
-- On COLON reduce production defid -> IDENT export 

State 23:
decl -> VAR var_decls . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production decl -> VAR var_decls 
-- On VAR reduce production decl -> VAR var_decls 
-- On TYPE reduce production decl -> VAR var_decls 
-- On PROCEDURE reduce production decl -> VAR var_decls 
-- On END reduce production decl -> VAR var_decls 
-- On CONST reduce production decl -> VAR var_decls 
-- On BEGIN reduce production decl -> VAR var_decls 
-- On ABSTRACT reduce production decl -> VAR var_decls 

State 24:
var_decls -> var_decl . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
var_decls -> var_decl . var_decls [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On IDENT shift to state 19
-- On var_decls shift to state 25
-- On var_decl shift to state 24
-- On defids shift to state 26
-- On defid shift to state 55
-- On error reduce production var_decls -> var_decl 
-- On VAR reduce production var_decls -> var_decl 
-- On TYPE reduce production var_decls -> var_decl 
-- On PROCEDURE reduce production var_decls -> var_decl 
-- On END reduce production var_decls -> var_decl 
-- On CONST reduce production var_decls -> var_decl 
-- On BEGIN reduce production var_decls -> var_decl 
-- On ABSTRACT reduce production var_decls -> var_decl 

State 25:
var_decls -> var_decl var_decls . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production var_decls -> var_decl var_decls 
-- On VAR reduce production var_decls -> var_decl var_decls 
-- On TYPE reduce production var_decls -> var_decl var_decls 
-- On PROCEDURE reduce production var_decls -> var_decl var_decls 
-- On END reduce production var_decls -> var_decl var_decls 
-- On CONST reduce production var_decls -> var_decl var_decls 
-- On BEGIN reduce production var_decls -> var_decl var_decls 
-- On ABSTRACT reduce production var_decls -> var_decl var_decls 

State 26:
var_decl -> defids . COLON typexpr semi [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On COLON shift to state 27

State 27:
var_decl -> defids COLON . typexpr semi [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On PROCEDURE shift to state 28
-- On POINTER shift to state 157
-- On LPAR shift to state 159
-- On IDENT shift to state 148
-- On ARRAY shift to state 162
-- On ABSTRACT shift to state 121
-- On typexpr shift to state 176
-- On typename shift to state 165
-- On qualid shift to state 166
-- On absmark shift to state 167
-- On RECORD reduce production absmark -> 

State 28:
typexpr -> PROCEDURE . params [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On LPAR shift to state 29
-- On params shift to state 156
-- On error reduce production params -> 
-- On VAR reduce production params -> 
-- On TYPE reduce production params -> 
-- On SEMI reduce production params -> 
-- On PROCEDURE reduce production params -> 
-- On IDENT reduce production params -> 
-- On END reduce production params -> 
-- On CONST reduce production params -> 
-- On COMMA reduce production params -> 
-- On BEGIN reduce production params -> 
-- On ABSTRACT reduce production params -> 

State 29:
params -> LPAR . RPAR result [ error VAR TYPE SEMI PROCEDURE IS IDENT END CONST COMMA BEGIN ABSTRACT ]
params -> LPAR . formals RPAR result [ error VAR TYPE SEMI PROCEDURE IS IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On VAR shift to state 30
-- On RPAR shift to state 146
-- On IDENT shift to state 19
-- On formals shift to state 153
-- On formal shift to state 45
-- On defids shift to state 48
-- On defid shift to state 55

State 30:
formal -> VAR . defids COLON typexpr [ VAR SEMI RPAR IDENT COMMA ]
-- On IDENT shift to state 19
-- On defids shift to state 31
-- On defid shift to state 55

State 31:
formal -> VAR defids . COLON typexpr [ VAR SEMI RPAR IDENT COMMA ]
-- On COLON shift to state 32

State 32:
formal -> VAR defids COLON . typexpr [ VAR SEMI RPAR IDENT COMMA ]
-- On PROCEDURE shift to state 33
-- On POINTER shift to state 50
-- On LPAR shift to state 52
-- On IDENT shift to state 37
-- On ARRAY shift to state 58
-- On ABSTRACT shift to state 121
-- On typexpr shift to state 145
-- On typename shift to state 123
-- On qualid shift to state 124
-- On absmark shift to state 125
-- On RECORD reduce production absmark -> 

State 33:
typexpr -> PROCEDURE . params [ VAR SEMI RPAR IDENT END COMMA ]
-- On LPAR shift to state 34
-- On params shift to state 144
-- On VAR reduce production params -> 
-- On SEMI reduce production params -> 
-- On RPAR reduce production params -> 
-- On IDENT reduce production params -> 
-- On END reduce production params -> 
-- On COMMA reduce production params -> 

State 34:
params -> LPAR . RPAR result [ VAR SEMI RPAR IDENT END COMMA ]
params -> LPAR . formals RPAR result [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR shift to state 30
-- On RPAR shift to state 35
-- On IDENT shift to state 19
-- On formals shift to state 42
-- On formal shift to state 45
-- On defids shift to state 48
-- On defid shift to state 55

State 35:
params -> LPAR RPAR . result [ VAR SEMI RPAR IDENT END COMMA ]
-- On COLON shift to state 36
-- On result shift to state 41
-- On VAR reduce production result -> 
-- On SEMI reduce production result -> 
-- On RPAR reduce production result -> 
-- On IDENT reduce production result -> 
-- On END reduce production result -> 
-- On COMMA reduce production result -> 

State 36:
result -> COLON . qualid [ VAR SEMI RPAR IDENT END COMMA ]
-- On IDENT shift to state 37
-- On qualid shift to state 40

State 37:
qualid -> IDENT . [ VAR UPARROW TO THEN SUB STAR SEMI RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS IDENT EQUAL END DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
qualid -> IDENT . DOT IDENT [ VAR UPARROW TO THEN SUB STAR SEMI RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS IDENT EQUAL END DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On DOT shift to state 38
-- On VAR reduce production qualid -> IDENT 
-- On UPARROW reduce production qualid -> IDENT 
-- On TO reduce production qualid -> IDENT 
-- On THEN reduce production qualid -> IDENT 
-- On SUB reduce production qualid -> IDENT 
-- On STAR reduce production qualid -> IDENT 
-- On SEMI reduce production qualid -> IDENT 
-- On RPAR reduce production qualid -> IDENT 
-- On RELOP reduce production qualid -> IDENT 
-- On RBRACE reduce production qualid -> IDENT 
-- On PLUS reduce production qualid -> IDENT 
-- On OF reduce production qualid -> IDENT 
-- On MULOP reduce production qualid -> IDENT 
-- On MINUS reduce production qualid -> IDENT 
-- On LPAR reduce production qualid -> IDENT 
-- On IS reduce production qualid -> IDENT 
-- On IDENT reduce production qualid -> IDENT 
-- On EQUAL reduce production qualid -> IDENT 
-- On END reduce production qualid -> IDENT 
-- On DOTDOT reduce production qualid -> IDENT 
-- On DO reduce production qualid -> IDENT 
-- On COMMA reduce production qualid -> IDENT 
-- On COLON reduce production qualid -> IDENT 
-- On BY reduce production qualid -> IDENT 
-- On BUS reduce production qualid -> IDENT 
-- On ASSIGN reduce production qualid -> IDENT 
-- On ADDOP reduce production qualid -> IDENT 

State 38:
qualid -> IDENT DOT . IDENT [ VAR UPARROW TO THEN SUB STAR SEMI RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS IDENT EQUAL END DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On IDENT shift to state 39

State 39:
qualid -> IDENT DOT IDENT . [ VAR UPARROW TO THEN SUB STAR SEMI RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS IDENT EQUAL END DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On VAR reduce production qualid -> IDENT DOT IDENT 
-- On UPARROW reduce production qualid -> IDENT DOT IDENT 
-- On TO reduce production qualid -> IDENT DOT IDENT 
-- On THEN reduce production qualid -> IDENT DOT IDENT 
-- On SUB reduce production qualid -> IDENT DOT IDENT 
-- On STAR reduce production qualid -> IDENT DOT IDENT 
-- On SEMI reduce production qualid -> IDENT DOT IDENT 
-- On RPAR reduce production qualid -> IDENT DOT IDENT 
-- On RELOP reduce production qualid -> IDENT DOT IDENT 
-- On RBRACE reduce production qualid -> IDENT DOT IDENT 
-- On PLUS reduce production qualid -> IDENT DOT IDENT 
-- On OF reduce production qualid -> IDENT DOT IDENT 
-- On MULOP reduce production qualid -> IDENT DOT IDENT 
-- On MINUS reduce production qualid -> IDENT DOT IDENT 
-- On LPAR reduce production qualid -> IDENT DOT IDENT 
-- On IS reduce production qualid -> IDENT DOT IDENT 
-- On IDENT reduce production qualid -> IDENT DOT IDENT 
-- On EQUAL reduce production qualid -> IDENT DOT IDENT 
-- On END reduce production qualid -> IDENT DOT IDENT 
-- On DOTDOT reduce production qualid -> IDENT DOT IDENT 
-- On DOT reduce production qualid -> IDENT DOT IDENT 
-- On DO reduce production qualid -> IDENT DOT IDENT 
-- On COMMA reduce production qualid -> IDENT DOT IDENT 
-- On COLON reduce production qualid -> IDENT DOT IDENT 
-- On BY reduce production qualid -> IDENT DOT IDENT 
-- On BUS reduce production qualid -> IDENT DOT IDENT 
-- On ASSIGN reduce production qualid -> IDENT DOT IDENT 
-- On ADDOP reduce production qualid -> IDENT DOT IDENT 

State 40:
result -> COLON qualid . [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR reduce production result -> COLON qualid 
-- On SEMI reduce production result -> COLON qualid 
-- On RPAR reduce production result -> COLON qualid 
-- On IDENT reduce production result -> COLON qualid 
-- On END reduce production result -> COLON qualid 
-- On COMMA reduce production result -> COLON qualid 

State 41:
params -> LPAR RPAR result . [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR reduce production params -> LPAR RPAR result 
-- On SEMI reduce production params -> LPAR RPAR result 
-- On RPAR reduce production params -> LPAR RPAR result 
-- On IDENT reduce production params -> LPAR RPAR result 
-- On END reduce production params -> LPAR RPAR result 
-- On COMMA reduce production params -> LPAR RPAR result 

State 42:
params -> LPAR formals . RPAR result [ VAR SEMI RPAR IDENT END COMMA ]
-- On RPAR shift to state 43

State 43:
params -> LPAR formals RPAR . result [ VAR SEMI RPAR IDENT END COMMA ]
-- On COLON shift to state 36
-- On result shift to state 44
-- On VAR reduce production result -> 
-- On SEMI reduce production result -> 
-- On RPAR reduce production result -> 
-- On IDENT reduce production result -> 
-- On END reduce production result -> 
-- On COMMA reduce production result -> 

State 44:
params -> LPAR formals RPAR result . [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR reduce production params -> LPAR formals RPAR result 
-- On SEMI reduce production params -> LPAR formals RPAR result 
-- On RPAR reduce production params -> LPAR formals RPAR result 
-- On IDENT reduce production params -> LPAR formals RPAR result 
-- On END reduce production params -> LPAR formals RPAR result 
-- On COMMA reduce production params -> LPAR formals RPAR result 

State 45:
formals -> formal . [ RPAR ]
formals -> formal . semi formals [ RPAR ]
-- On SEMI shift to state 5
-- On COMMA shift to state 6
-- On semi shift to state 46
-- On VAR reduce production semi -> 
-- On RPAR reduce production formals -> formal 
-- On IDENT reduce production semi -> 

State 46:
formals -> formal semi . formals [ RPAR ]
-- On VAR shift to state 30
-- On IDENT shift to state 19
-- On formals shift to state 47
-- On formal shift to state 45
-- On defids shift to state 48
-- On defid shift to state 55

State 47:
formals -> formal semi formals . [ RPAR ]
-- On RPAR reduce production formals -> formal semi formals 

State 48:
formal -> defids . COLON typexpr [ VAR SEMI RPAR IDENT COMMA ]
-- On COLON shift to state 49

State 49:
formal -> defids COLON . typexpr [ VAR SEMI RPAR IDENT COMMA ]
-- On PROCEDURE shift to state 33
-- On POINTER shift to state 50
-- On LPAR shift to state 52
-- On IDENT shift to state 37
-- On ARRAY shift to state 58
-- On ABSTRACT shift to state 121
-- On typexpr shift to state 143
-- On typename shift to state 123
-- On qualid shift to state 124
-- On absmark shift to state 125
-- On RECORD reduce production absmark -> 

State 50:
typexpr -> POINTER . TO typexpr [ VAR SEMI RPAR IDENT END COMMA ]
-- On TO shift to state 51

State 51:
typexpr -> POINTER TO . typexpr [ VAR SEMI RPAR IDENT END COMMA ]
-- On PROCEDURE shift to state 33
-- On POINTER shift to state 50
-- On LPAR shift to state 52
-- On IDENT shift to state 37
-- On ARRAY shift to state 58
-- On ABSTRACT shift to state 121
-- On typexpr shift to state 142
-- On typename shift to state 123
-- On qualid shift to state 124
-- On absmark shift to state 125
-- On RECORD reduce production absmark -> 

State 52:
typexpr -> LPAR . defids RPAR [ VAR SEMI RPAR IDENT END COMMA ]
-- On IDENT shift to state 19
-- On defids shift to state 53
-- On defid shift to state 55

State 53:
typexpr -> LPAR defids . RPAR [ VAR SEMI RPAR IDENT END COMMA ]
-- On RPAR shift to state 54

State 54:
typexpr -> LPAR defids RPAR . [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR reduce production typexpr -> LPAR defids RPAR 
-- On SEMI reduce production typexpr -> LPAR defids RPAR 
-- On RPAR reduce production typexpr -> LPAR defids RPAR 
-- On IDENT reduce production typexpr -> LPAR defids RPAR 
-- On END reduce production typexpr -> LPAR defids RPAR 
-- On COMMA reduce production typexpr -> LPAR defids RPAR 

State 55:
defids -> defid . [ RPAR COLON ]
defids -> defid . COMMA defids [ RPAR COLON ]
-- On COMMA shift to state 56
-- On RPAR reduce production defids -> defid 
-- On COLON reduce production defids -> defid 

State 56:
defids -> defid COMMA . defids [ RPAR COLON ]
-- On IDENT shift to state 19
-- On defids shift to state 57
-- On defid shift to state 55

State 57:
defids -> defid COMMA defids . [ RPAR COLON ]
-- On RPAR reduce production defids -> defid COMMA defids 
-- On COLON reduce production defids -> defid COMMA defids 

State 58:
typexpr -> ARRAY . exprs OF typexpr [ VAR SEMI RPAR IDENT END COMMA ]
typexpr -> ARRAY . OF typexpr [ VAR SEMI RPAR IDENT END COMMA ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On OF shift to state 120
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On exprs shift to state 139
-- On expr shift to state 97
-- On designator shift to state 76

State 59:
factor -> STRING . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production factor -> STRING 
-- On TO reduce production factor -> STRING 
-- On THEN reduce production factor -> STRING 
-- On SUB reduce production factor -> STRING 
-- On STAR reduce production factor -> STRING 
-- On RPAR reduce production factor -> STRING 
-- On RELOP reduce production factor -> STRING 
-- On RBRACE reduce production factor -> STRING 
-- On PLUS reduce production factor -> STRING 
-- On OF reduce production factor -> STRING 
-- On MULOP reduce production factor -> STRING 
-- On MINUS reduce production factor -> STRING 
-- On LPAR reduce production factor -> STRING 
-- On IS reduce production factor -> STRING 
-- On EQUAL reduce production factor -> STRING 
-- On DOTDOT reduce production factor -> STRING 
-- On DOT reduce production factor -> STRING 
-- On DO reduce production factor -> STRING 
-- On COMMA reduce production factor -> STRING 
-- On COLON reduce production factor -> STRING 
-- On BY reduce production factor -> STRING 
-- On BUS reduce production factor -> STRING 
-- On ASSIGN reduce production factor -> STRING 
-- On ADDOP reduce production factor -> STRING 

State 60:
simple -> PLUS . term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 119
-- On name shift to state 74
-- On factor shift to state 86
-- On designator shift to state 76

State 61:
factor -> NUMBER . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production factor -> NUMBER 
-- On TO reduce production factor -> NUMBER 
-- On THEN reduce production factor -> NUMBER 
-- On SUB reduce production factor -> NUMBER 
-- On STAR reduce production factor -> NUMBER 
-- On RPAR reduce production factor -> NUMBER 
-- On RELOP reduce production factor -> NUMBER 
-- On RBRACE reduce production factor -> NUMBER 
-- On PLUS reduce production factor -> NUMBER 
-- On OF reduce production factor -> NUMBER 
-- On MULOP reduce production factor -> NUMBER 
-- On MINUS reduce production factor -> NUMBER 
-- On LPAR reduce production factor -> NUMBER 
-- On IS reduce production factor -> NUMBER 
-- On EQUAL reduce production factor -> NUMBER 
-- On DOTDOT reduce production factor -> NUMBER 
-- On DOT reduce production factor -> NUMBER 
-- On DO reduce production factor -> NUMBER 
-- On COMMA reduce production factor -> NUMBER 
-- On COLON reduce production factor -> NUMBER 
-- On BY reduce production factor -> NUMBER 
-- On BUS reduce production factor -> NUMBER 
-- On ASSIGN reduce production factor -> NUMBER 
-- On ADDOP reduce production factor -> NUMBER 

State 62:
factor -> NOT . factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On name shift to state 74
-- On factor shift to state 118
-- On designator shift to state 76

State 63:
factor -> NIL . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production factor -> NIL 
-- On TO reduce production factor -> NIL 
-- On THEN reduce production factor -> NIL 
-- On SUB reduce production factor -> NIL 
-- On STAR reduce production factor -> NIL 
-- On RPAR reduce production factor -> NIL 
-- On RELOP reduce production factor -> NIL 
-- On RBRACE reduce production factor -> NIL 
-- On PLUS reduce production factor -> NIL 
-- On OF reduce production factor -> NIL 
-- On MULOP reduce production factor -> NIL 
-- On MINUS reduce production factor -> NIL 
-- On LPAR reduce production factor -> NIL 
-- On IS reduce production factor -> NIL 
-- On EQUAL reduce production factor -> NIL 
-- On DOTDOT reduce production factor -> NIL 
-- On DOT reduce production factor -> NIL 
-- On DO reduce production factor -> NIL 
-- On COMMA reduce production factor -> NIL 
-- On COLON reduce production factor -> NIL 
-- On BY reduce production factor -> NIL 
-- On BUS reduce production factor -> NIL 
-- On ASSIGN reduce production factor -> NIL 
-- On ADDOP reduce production factor -> NIL 

State 64:
factor -> LPAR . expr RPAR [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
factor -> LPAR . expr [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 116
-- On designator shift to state 76

State 65:
simple -> MINUS . term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 115
-- On name shift to state 74
-- On factor shift to state 86
-- On designator shift to state 76

State 66:
factor -> LBRACE . RBRACE [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
factor -> LBRACE . elements RBRACE [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On RBRACE shift to state 67
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 107
-- On elements shift to state 110
-- On element shift to state 112
-- On designator shift to state 76

State 67:
factor -> LBRACE RBRACE . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production factor -> LBRACE RBRACE 
-- On TO reduce production factor -> LBRACE RBRACE 
-- On THEN reduce production factor -> LBRACE RBRACE 
-- On SUB reduce production factor -> LBRACE RBRACE 
-- On STAR reduce production factor -> LBRACE RBRACE 
-- On RPAR reduce production factor -> LBRACE RBRACE 
-- On RELOP reduce production factor -> LBRACE RBRACE 
-- On RBRACE reduce production factor -> LBRACE RBRACE 
-- On PLUS reduce production factor -> LBRACE RBRACE 
-- On OF reduce production factor -> LBRACE RBRACE 
-- On MULOP reduce production factor -> LBRACE RBRACE 
-- On MINUS reduce production factor -> LBRACE RBRACE 
-- On LPAR reduce production factor -> LBRACE RBRACE 
-- On IS reduce production factor -> LBRACE RBRACE 
-- On EQUAL reduce production factor -> LBRACE RBRACE 
-- On DOTDOT reduce production factor -> LBRACE RBRACE 
-- On DOT reduce production factor -> LBRACE RBRACE 
-- On DO reduce production factor -> LBRACE RBRACE 
-- On COMMA reduce production factor -> LBRACE RBRACE 
-- On COLON reduce production factor -> LBRACE RBRACE 
-- On BY reduce production factor -> LBRACE RBRACE 
-- On BUS reduce production factor -> LBRACE RBRACE 
-- On ASSIGN reduce production factor -> LBRACE RBRACE 
-- On ADDOP reduce production factor -> LBRACE RBRACE 

State 68:
factor -> FLOCON . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production factor -> FLOCON 
-- On TO reduce production factor -> FLOCON 
-- On THEN reduce production factor -> FLOCON 
-- On SUB reduce production factor -> FLOCON 
-- On STAR reduce production factor -> FLOCON 
-- On RPAR reduce production factor -> FLOCON 
-- On RELOP reduce production factor -> FLOCON 
-- On RBRACE reduce production factor -> FLOCON 
-- On PLUS reduce production factor -> FLOCON 
-- On OF reduce production factor -> FLOCON 
-- On MULOP reduce production factor -> FLOCON 
-- On MINUS reduce production factor -> FLOCON 
-- On LPAR reduce production factor -> FLOCON 
-- On IS reduce production factor -> FLOCON 
-- On EQUAL reduce production factor -> FLOCON 
-- On DOTDOT reduce production factor -> FLOCON 
-- On DOT reduce production factor -> FLOCON 
-- On DO reduce production factor -> FLOCON 
-- On COMMA reduce production factor -> FLOCON 
-- On COLON reduce production factor -> FLOCON 
-- On BY reduce production factor -> FLOCON 
-- On BUS reduce production factor -> FLOCON 
-- On ASSIGN reduce production factor -> FLOCON 
-- On ADDOP reduce production factor -> FLOCON 

State 69:
factor -> DECIMAL . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production factor -> DECIMAL 
-- On TO reduce production factor -> DECIMAL 
-- On THEN reduce production factor -> DECIMAL 
-- On SUB reduce production factor -> DECIMAL 
-- On STAR reduce production factor -> DECIMAL 
-- On RPAR reduce production factor -> DECIMAL 
-- On RELOP reduce production factor -> DECIMAL 
-- On RBRACE reduce production factor -> DECIMAL 
-- On PLUS reduce production factor -> DECIMAL 
-- On OF reduce production factor -> DECIMAL 
-- On MULOP reduce production factor -> DECIMAL 
-- On MINUS reduce production factor -> DECIMAL 
-- On LPAR reduce production factor -> DECIMAL 
-- On IS reduce production factor -> DECIMAL 
-- On EQUAL reduce production factor -> DECIMAL 
-- On DOTDOT reduce production factor -> DECIMAL 
-- On DOT reduce production factor -> DECIMAL 
-- On DO reduce production factor -> DECIMAL 
-- On COMMA reduce production factor -> DECIMAL 
-- On COLON reduce production factor -> DECIMAL 
-- On BY reduce production factor -> DECIMAL 
-- On BUS reduce production factor -> DECIMAL 
-- On ASSIGN reduce production factor -> DECIMAL 
-- On ADDOP reduce production factor -> DECIMAL 

State 70:
factor -> DBLCON . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production factor -> DBLCON 
-- On TO reduce production factor -> DBLCON 
-- On THEN reduce production factor -> DBLCON 
-- On SUB reduce production factor -> DBLCON 
-- On STAR reduce production factor -> DBLCON 
-- On RPAR reduce production factor -> DBLCON 
-- On RELOP reduce production factor -> DBLCON 
-- On RBRACE reduce production factor -> DBLCON 
-- On PLUS reduce production factor -> DBLCON 
-- On OF reduce production factor -> DBLCON 
-- On MULOP reduce production factor -> DBLCON 
-- On MINUS reduce production factor -> DBLCON 
-- On LPAR reduce production factor -> DBLCON 
-- On IS reduce production factor -> DBLCON 
-- On EQUAL reduce production factor -> DBLCON 
-- On DOTDOT reduce production factor -> DBLCON 
-- On DOT reduce production factor -> DBLCON 
-- On DO reduce production factor -> DBLCON 
-- On COMMA reduce production factor -> DBLCON 
-- On COLON reduce production factor -> DBLCON 
-- On BY reduce production factor -> DBLCON 
-- On BUS reduce production factor -> DBLCON 
-- On ASSIGN reduce production factor -> DBLCON 
-- On ADDOP reduce production factor -> DBLCON 

State 71:
factor -> CHAR . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production factor -> CHAR 
-- On TO reduce production factor -> CHAR 
-- On THEN reduce production factor -> CHAR 
-- On SUB reduce production factor -> CHAR 
-- On STAR reduce production factor -> CHAR 
-- On RPAR reduce production factor -> CHAR 
-- On RELOP reduce production factor -> CHAR 
-- On RBRACE reduce production factor -> CHAR 
-- On PLUS reduce production factor -> CHAR 
-- On OF reduce production factor -> CHAR 
-- On MULOP reduce production factor -> CHAR 
-- On MINUS reduce production factor -> CHAR 
-- On LPAR reduce production factor -> CHAR 
-- On IS reduce production factor -> CHAR 
-- On EQUAL reduce production factor -> CHAR 
-- On DOTDOT reduce production factor -> CHAR 
-- On DOT reduce production factor -> CHAR 
-- On DO reduce production factor -> CHAR 
-- On COMMA reduce production factor -> CHAR 
-- On COLON reduce production factor -> CHAR 
-- On BY reduce production factor -> CHAR 
-- On BUS reduce production factor -> CHAR 
-- On ASSIGN reduce production factor -> CHAR 
-- On ADDOP reduce production factor -> CHAR 

State 72:
simple -> term . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . MULOP factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . STAR factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STAR shift to state 73
-- On MULOP shift to state 84
-- On UPARROW reduce production simple -> term 
-- On TO reduce production simple -> term 
-- On THEN reduce production simple -> term 
-- On SUB reduce production simple -> term 
-- On RPAR reduce production simple -> term 
-- On RELOP reduce production simple -> term 
-- On RBRACE reduce production simple -> term 
-- On PLUS reduce production simple -> term 
-- On OF reduce production simple -> term 
-- On MINUS reduce production simple -> term 
-- On LPAR reduce production simple -> term 
-- On IS reduce production simple -> term 
-- On EQUAL reduce production simple -> term 
-- On DOTDOT reduce production simple -> term 
-- On DOT reduce production simple -> term 
-- On DO reduce production simple -> term 
-- On COMMA reduce production simple -> term 
-- On COLON reduce production simple -> term 
-- On BY reduce production simple -> term 
-- On BUS reduce production simple -> term 
-- On ASSIGN reduce production simple -> term 
-- On ADDOP reduce production simple -> term 

State 73:
term -> term STAR . factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On name shift to state 74
-- On factor shift to state 75
-- On designator shift to state 76

State 74:
designator -> name . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production designator -> name 
-- On TO reduce production designator -> name 
-- On THEN reduce production designator -> name 
-- On SUB reduce production designator -> name 
-- On STAR reduce production designator -> name 
-- On RPAR reduce production designator -> name 
-- On RELOP reduce production designator -> name 
-- On RBRACE reduce production designator -> name 
-- On PLUS reduce production designator -> name 
-- On OF reduce production designator -> name 
-- On MULOP reduce production designator -> name 
-- On MINUS reduce production designator -> name 
-- On LPAR reduce production designator -> name 
-- On IS reduce production designator -> name 
-- On EQUAL reduce production designator -> name 
-- On DOTDOT reduce production designator -> name 
-- On DOT reduce production designator -> name 
-- On DO reduce production designator -> name 
-- On COMMA reduce production designator -> name 
-- On COLON reduce production designator -> name 
-- On BY reduce production designator -> name 
-- On BUS reduce production designator -> name 
-- On ASSIGN reduce production designator -> name 
-- On ADDOP reduce production designator -> name 

State 75:
term -> term STAR factor . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production term -> term STAR factor 
-- On TO reduce production term -> term STAR factor 
-- On THEN reduce production term -> term STAR factor 
-- On SUB reduce production term -> term STAR factor 
-- On STAR reduce production term -> term STAR factor 
-- On RPAR reduce production term -> term STAR factor 
-- On RELOP reduce production term -> term STAR factor 
-- On RBRACE reduce production term -> term STAR factor 
-- On PLUS reduce production term -> term STAR factor 
-- On OF reduce production term -> term STAR factor 
-- On MULOP reduce production term -> term STAR factor 
-- On MINUS reduce production term -> term STAR factor 
-- On LPAR reduce production term -> term STAR factor 
-- On IS reduce production term -> term STAR factor 
-- On EQUAL reduce production term -> term STAR factor 
-- On DOTDOT reduce production term -> term STAR factor 
-- On DOT reduce production term -> term STAR factor 
-- On DO reduce production term -> term STAR factor 
-- On COMMA reduce production term -> term STAR factor 
-- On COLON reduce production term -> term STAR factor 
-- On BY reduce production term -> term STAR factor 
-- On BUS reduce production term -> term STAR factor 
-- On ASSIGN reduce production term -> term STAR factor 
-- On ADDOP reduce production term -> term STAR factor 

State 76:
designator -> designator . UPARROW [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
designator -> designator . SUB exprs BUS [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
designator -> designator . SUB exprs [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
designator -> designator . DOT name [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
designator -> designator . actuals [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
factor -> designator . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW shift to state 77
-- On SUB shift to state 78
-- On LPAR shift to state 100
-- On DOT shift to state 104
-- On actuals shift to state 106
-- On TO reduce production factor -> designator 
-- On THEN reduce production factor -> designator 
-- On STAR reduce production factor -> designator 
-- On RPAR reduce production factor -> designator 
-- On RELOP reduce production factor -> designator 
-- On RBRACE reduce production factor -> designator 
-- On PLUS reduce production factor -> designator 
-- On OF reduce production factor -> designator 
-- On MULOP reduce production factor -> designator 
-- On MINUS reduce production factor -> designator 
-- On IS reduce production factor -> designator 
-- On EQUAL reduce production factor -> designator 
-- On DOTDOT reduce production factor -> designator 
-- On DO reduce production factor -> designator 
-- On COMMA reduce production factor -> designator 
-- On COLON reduce production factor -> designator 
-- On BY reduce production factor -> designator 
-- On BUS reduce production factor -> designator 
-- On ASSIGN reduce production factor -> designator 
-- On ADDOP reduce production factor -> designator 

State 77:
designator -> designator UPARROW . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production designator -> designator UPARROW 
-- On TO reduce production designator -> designator UPARROW 
-- On THEN reduce production designator -> designator UPARROW 
-- On SUB reduce production designator -> designator UPARROW 
-- On STAR reduce production designator -> designator UPARROW 
-- On RPAR reduce production designator -> designator UPARROW 
-- On RELOP reduce production designator -> designator UPARROW 
-- On RBRACE reduce production designator -> designator UPARROW 
-- On PLUS reduce production designator -> designator UPARROW 
-- On OF reduce production designator -> designator UPARROW 
-- On MULOP reduce production designator -> designator UPARROW 
-- On MINUS reduce production designator -> designator UPARROW 
-- On LPAR reduce production designator -> designator UPARROW 
-- On IS reduce production designator -> designator UPARROW 
-- On EQUAL reduce production designator -> designator UPARROW 
-- On DOTDOT reduce production designator -> designator UPARROW 
-- On DOT reduce production designator -> designator UPARROW 
-- On DO reduce production designator -> designator UPARROW 
-- On COMMA reduce production designator -> designator UPARROW 
-- On COLON reduce production designator -> designator UPARROW 
-- On BY reduce production designator -> designator UPARROW 
-- On BUS reduce production designator -> designator UPARROW 
-- On ASSIGN reduce production designator -> designator UPARROW 
-- On ADDOP reduce production designator -> designator UPARROW 

State 78:
designator -> designator SUB . exprs BUS [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
designator -> designator SUB . exprs [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On exprs shift to state 95
-- On expr shift to state 97
-- On designator shift to state 76

State 79:
expr -> simple . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
expr -> simple . RELOP simple [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
expr -> simple . EQUAL simple [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
expr -> simple . IS qualid [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
simple -> simple . PLUS term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
simple -> simple . MINUS term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
simple -> simple . ADDOP term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On RELOP shift to state 80
-- On PLUS shift to state 82
-- On MINUS shift to state 87
-- On IS shift to state 91
-- On EQUAL shift to state 93
-- On ADDOP shift to state 89
-- On UPARROW reduce production expr -> simple 
-- On TO reduce production expr -> simple 
-- On THEN reduce production expr -> simple 
-- On SUB reduce production expr -> simple 
-- On STAR reduce production expr -> simple 
-- On RPAR reduce production expr -> simple 
-- On RBRACE reduce production expr -> simple 
-- On OF reduce production expr -> simple 
-- On MULOP reduce production expr -> simple 
-- On LPAR reduce production expr -> simple 
-- On DOTDOT reduce production expr -> simple 
-- On DOT reduce production expr -> simple 
-- On DO reduce production expr -> simple 
-- On COMMA reduce production expr -> simple 
-- On COLON reduce production expr -> simple 
-- On BY reduce production expr -> simple 
-- On BUS reduce production expr -> simple 
-- On ASSIGN reduce production expr -> simple 

State 80:
expr -> simple RELOP . simple [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 81
-- On name shift to state 74
-- On factor shift to state 86
-- On designator shift to state 76

State 81:
expr -> simple RELOP simple . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
simple -> simple . PLUS term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
simple -> simple . MINUS term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
simple -> simple . ADDOP term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On PLUS shift to state 82
-- On MINUS shift to state 87
-- On ADDOP shift to state 89
-- On UPARROW reduce production expr -> simple RELOP simple 
-- On TO reduce production expr -> simple RELOP simple 
-- On THEN reduce production expr -> simple RELOP simple 
-- On SUB reduce production expr -> simple RELOP simple 
-- On STAR reduce production expr -> simple RELOP simple 
-- On RPAR reduce production expr -> simple RELOP simple 
-- On RELOP reduce production expr -> simple RELOP simple 
-- On RBRACE reduce production expr -> simple RELOP simple 
-- On OF reduce production expr -> simple RELOP simple 
-- On MULOP reduce production expr -> simple RELOP simple 
-- On LPAR reduce production expr -> simple RELOP simple 
-- On IS reduce production expr -> simple RELOP simple 
-- On EQUAL reduce production expr -> simple RELOP simple 
-- On DOTDOT reduce production expr -> simple RELOP simple 
-- On DOT reduce production expr -> simple RELOP simple 
-- On DO reduce production expr -> simple RELOP simple 
-- On COMMA reduce production expr -> simple RELOP simple 
-- On COLON reduce production expr -> simple RELOP simple 
-- On BY reduce production expr -> simple RELOP simple 
-- On BUS reduce production expr -> simple RELOP simple 
-- On ASSIGN reduce production expr -> simple RELOP simple 

State 82:
simple -> simple PLUS . term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 83
-- On name shift to state 74
-- On factor shift to state 86
-- On designator shift to state 76

State 83:
simple -> simple PLUS term . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . MULOP factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . STAR factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STAR shift to state 73
-- On MULOP shift to state 84
-- On UPARROW reduce production simple -> simple PLUS term 
-- On TO reduce production simple -> simple PLUS term 
-- On THEN reduce production simple -> simple PLUS term 
-- On SUB reduce production simple -> simple PLUS term 
-- On RPAR reduce production simple -> simple PLUS term 
-- On RELOP reduce production simple -> simple PLUS term 
-- On RBRACE reduce production simple -> simple PLUS term 
-- On PLUS reduce production simple -> simple PLUS term 
-- On OF reduce production simple -> simple PLUS term 
-- On MINUS reduce production simple -> simple PLUS term 
-- On LPAR reduce production simple -> simple PLUS term 
-- On IS reduce production simple -> simple PLUS term 
-- On EQUAL reduce production simple -> simple PLUS term 
-- On DOTDOT reduce production simple -> simple PLUS term 
-- On DOT reduce production simple -> simple PLUS term 
-- On DO reduce production simple -> simple PLUS term 
-- On COMMA reduce production simple -> simple PLUS term 
-- On COLON reduce production simple -> simple PLUS term 
-- On BY reduce production simple -> simple PLUS term 
-- On BUS reduce production simple -> simple PLUS term 
-- On ASSIGN reduce production simple -> simple PLUS term 
-- On ADDOP reduce production simple -> simple PLUS term 

State 84:
term -> term MULOP . factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On name shift to state 74
-- On factor shift to state 85
-- On designator shift to state 76

State 85:
term -> term MULOP factor . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production term -> term MULOP factor 
-- On TO reduce production term -> term MULOP factor 
-- On THEN reduce production term -> term MULOP factor 
-- On SUB reduce production term -> term MULOP factor 
-- On STAR reduce production term -> term MULOP factor 
-- On RPAR reduce production term -> term MULOP factor 
-- On RELOP reduce production term -> term MULOP factor 
-- On RBRACE reduce production term -> term MULOP factor 
-- On PLUS reduce production term -> term MULOP factor 
-- On OF reduce production term -> term MULOP factor 
-- On MULOP reduce production term -> term MULOP factor 
-- On MINUS reduce production term -> term MULOP factor 
-- On LPAR reduce production term -> term MULOP factor 
-- On IS reduce production term -> term MULOP factor 
-- On EQUAL reduce production term -> term MULOP factor 
-- On DOTDOT reduce production term -> term MULOP factor 
-- On DOT reduce production term -> term MULOP factor 
-- On DO reduce production term -> term MULOP factor 
-- On COMMA reduce production term -> term MULOP factor 
-- On COLON reduce production term -> term MULOP factor 
-- On BY reduce production term -> term MULOP factor 
-- On BUS reduce production term -> term MULOP factor 
-- On ASSIGN reduce production term -> term MULOP factor 
-- On ADDOP reduce production term -> term MULOP factor 

State 86:
term -> factor . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production term -> factor 
-- On TO reduce production term -> factor 
-- On THEN reduce production term -> factor 
-- On SUB reduce production term -> factor 
-- On STAR reduce production term -> factor 
-- On RPAR reduce production term -> factor 
-- On RELOP reduce production term -> factor 
-- On RBRACE reduce production term -> factor 
-- On PLUS reduce production term -> factor 
-- On OF reduce production term -> factor 
-- On MULOP reduce production term -> factor 
-- On MINUS reduce production term -> factor 
-- On LPAR reduce production term -> factor 
-- On IS reduce production term -> factor 
-- On EQUAL reduce production term -> factor 
-- On DOTDOT reduce production term -> factor 
-- On DOT reduce production term -> factor 
-- On DO reduce production term -> factor 
-- On COMMA reduce production term -> factor 
-- On COLON reduce production term -> factor 
-- On BY reduce production term -> factor 
-- On BUS reduce production term -> factor 
-- On ASSIGN reduce production term -> factor 
-- On ADDOP reduce production term -> factor 

State 87:
simple -> simple MINUS . term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 88
-- On name shift to state 74
-- On factor shift to state 86
-- On designator shift to state 76

State 88:
simple -> simple MINUS term . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . MULOP factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . STAR factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STAR shift to state 73
-- On MULOP shift to state 84
-- On UPARROW reduce production simple -> simple MINUS term 
-- On TO reduce production simple -> simple MINUS term 
-- On THEN reduce production simple -> simple MINUS term 
-- On SUB reduce production simple -> simple MINUS term 
-- On RPAR reduce production simple -> simple MINUS term 
-- On RELOP reduce production simple -> simple MINUS term 
-- On RBRACE reduce production simple -> simple MINUS term 
-- On PLUS reduce production simple -> simple MINUS term 
-- On OF reduce production simple -> simple MINUS term 
-- On MINUS reduce production simple -> simple MINUS term 
-- On LPAR reduce production simple -> simple MINUS term 
-- On IS reduce production simple -> simple MINUS term 
-- On EQUAL reduce production simple -> simple MINUS term 
-- On DOTDOT reduce production simple -> simple MINUS term 
-- On DOT reduce production simple -> simple MINUS term 
-- On DO reduce production simple -> simple MINUS term 
-- On COMMA reduce production simple -> simple MINUS term 
-- On COLON reduce production simple -> simple MINUS term 
-- On BY reduce production simple -> simple MINUS term 
-- On BUS reduce production simple -> simple MINUS term 
-- On ASSIGN reduce production simple -> simple MINUS term 
-- On ADDOP reduce production simple -> simple MINUS term 

State 89:
simple -> simple ADDOP . term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 90
-- On name shift to state 74
-- On factor shift to state 86
-- On designator shift to state 76

State 90:
simple -> simple ADDOP term . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . MULOP factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . STAR factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STAR shift to state 73
-- On MULOP shift to state 84
-- On UPARROW reduce production simple -> simple ADDOP term 
-- On TO reduce production simple -> simple ADDOP term 
-- On THEN reduce production simple -> simple ADDOP term 
-- On SUB reduce production simple -> simple ADDOP term 
-- On RPAR reduce production simple -> simple ADDOP term 
-- On RELOP reduce production simple -> simple ADDOP term 
-- On RBRACE reduce production simple -> simple ADDOP term 
-- On PLUS reduce production simple -> simple ADDOP term 
-- On OF reduce production simple -> simple ADDOP term 
-- On MINUS reduce production simple -> simple ADDOP term 
-- On LPAR reduce production simple -> simple ADDOP term 
-- On IS reduce production simple -> simple ADDOP term 
-- On EQUAL reduce production simple -> simple ADDOP term 
-- On DOTDOT reduce production simple -> simple ADDOP term 
-- On DOT reduce production simple -> simple ADDOP term 
-- On DO reduce production simple -> simple ADDOP term 
-- On COMMA reduce production simple -> simple ADDOP term 
-- On COLON reduce production simple -> simple ADDOP term 
-- On BY reduce production simple -> simple ADDOP term 
-- On BUS reduce production simple -> simple ADDOP term 
-- On ASSIGN reduce production simple -> simple ADDOP term 
-- On ADDOP reduce production simple -> simple ADDOP term 

State 91:
expr -> simple IS . qualid [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On IDENT shift to state 37
-- On qualid shift to state 92

State 92:
expr -> simple IS qualid . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production expr -> simple IS qualid 
-- On TO reduce production expr -> simple IS qualid 
-- On THEN reduce production expr -> simple IS qualid 
-- On SUB reduce production expr -> simple IS qualid 
-- On STAR reduce production expr -> simple IS qualid 
-- On RPAR reduce production expr -> simple IS qualid 
-- On RELOP reduce production expr -> simple IS qualid 
-- On RBRACE reduce production expr -> simple IS qualid 
-- On PLUS reduce production expr -> simple IS qualid 
-- On OF reduce production expr -> simple IS qualid 
-- On MULOP reduce production expr -> simple IS qualid 
-- On MINUS reduce production expr -> simple IS qualid 
-- On LPAR reduce production expr -> simple IS qualid 
-- On IS reduce production expr -> simple IS qualid 
-- On EQUAL reduce production expr -> simple IS qualid 
-- On DOTDOT reduce production expr -> simple IS qualid 
-- On DOT reduce production expr -> simple IS qualid 
-- On DO reduce production expr -> simple IS qualid 
-- On COMMA reduce production expr -> simple IS qualid 
-- On COLON reduce production expr -> simple IS qualid 
-- On BY reduce production expr -> simple IS qualid 
-- On BUS reduce production expr -> simple IS qualid 
-- On ASSIGN reduce production expr -> simple IS qualid 
-- On ADDOP reduce production expr -> simple IS qualid 

State 93:
expr -> simple EQUAL . simple [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 94
-- On name shift to state 74
-- On factor shift to state 86
-- On designator shift to state 76

State 94:
expr -> simple EQUAL simple . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
simple -> simple . PLUS term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
simple -> simple . MINUS term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
simple -> simple . ADDOP term [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On PLUS shift to state 82
-- On MINUS shift to state 87
-- On ADDOP shift to state 89
-- On UPARROW reduce production expr -> simple EQUAL simple 
-- On TO reduce production expr -> simple EQUAL simple 
-- On THEN reduce production expr -> simple EQUAL simple 
-- On SUB reduce production expr -> simple EQUAL simple 
-- On STAR reduce production expr -> simple EQUAL simple 
-- On RPAR reduce production expr -> simple EQUAL simple 
-- On RELOP reduce production expr -> simple EQUAL simple 
-- On RBRACE reduce production expr -> simple EQUAL simple 
-- On OF reduce production expr -> simple EQUAL simple 
-- On MULOP reduce production expr -> simple EQUAL simple 
-- On LPAR reduce production expr -> simple EQUAL simple 
-- On IS reduce production expr -> simple EQUAL simple 
-- On EQUAL reduce production expr -> simple EQUAL simple 
-- On DOTDOT reduce production expr -> simple EQUAL simple 
-- On DOT reduce production expr -> simple EQUAL simple 
-- On DO reduce production expr -> simple EQUAL simple 
-- On COMMA reduce production expr -> simple EQUAL simple 
-- On COLON reduce production expr -> simple EQUAL simple 
-- On BY reduce production expr -> simple EQUAL simple 
-- On BUS reduce production expr -> simple EQUAL simple 
-- On ASSIGN reduce production expr -> simple EQUAL simple 

State 95:
designator -> designator SUB exprs . BUS [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
designator -> designator SUB exprs . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On BUS shift to state 96
-- On UPARROW reduce production designator -> designator SUB exprs 
-- On TO reduce production designator -> designator SUB exprs 
-- On THEN reduce production designator -> designator SUB exprs 
-- On SUB reduce production designator -> designator SUB exprs 
-- On STAR reduce production designator -> designator SUB exprs 
-- On RPAR reduce production designator -> designator SUB exprs 
-- On RELOP reduce production designator -> designator SUB exprs 
-- On RBRACE reduce production designator -> designator SUB exprs 
-- On PLUS reduce production designator -> designator SUB exprs 
-- On OF reduce production designator -> designator SUB exprs 
-- On MULOP reduce production designator -> designator SUB exprs 
-- On MINUS reduce production designator -> designator SUB exprs 
-- On LPAR reduce production designator -> designator SUB exprs 
-- On IS reduce production designator -> designator SUB exprs 
-- On EQUAL reduce production designator -> designator SUB exprs 
-- On DOTDOT reduce production designator -> designator SUB exprs 
-- On DOT reduce production designator -> designator SUB exprs 
-- On DO reduce production designator -> designator SUB exprs 
-- On COMMA reduce production designator -> designator SUB exprs 
-- On COLON reduce production designator -> designator SUB exprs 
-- On BY reduce production designator -> designator SUB exprs 
-- On ASSIGN reduce production designator -> designator SUB exprs 
-- On ADDOP reduce production designator -> designator SUB exprs 

State 96:
designator -> designator SUB exprs BUS . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production designator -> designator SUB exprs BUS 
-- On TO reduce production designator -> designator SUB exprs BUS 
-- On THEN reduce production designator -> designator SUB exprs BUS 
-- On SUB reduce production designator -> designator SUB exprs BUS 
-- On STAR reduce production designator -> designator SUB exprs BUS 
-- On RPAR reduce production designator -> designator SUB exprs BUS 
-- On RELOP reduce production designator -> designator SUB exprs BUS 
-- On RBRACE reduce production designator -> designator SUB exprs BUS 
-- On PLUS reduce production designator -> designator SUB exprs BUS 
-- On OF reduce production designator -> designator SUB exprs BUS 
-- On MULOP reduce production designator -> designator SUB exprs BUS 
-- On MINUS reduce production designator -> designator SUB exprs BUS 
-- On LPAR reduce production designator -> designator SUB exprs BUS 
-- On IS reduce production designator -> designator SUB exprs BUS 
-- On EQUAL reduce production designator -> designator SUB exprs BUS 
-- On DOTDOT reduce production designator -> designator SUB exprs BUS 
-- On DOT reduce production designator -> designator SUB exprs BUS 
-- On DO reduce production designator -> designator SUB exprs BUS 
-- On COMMA reduce production designator -> designator SUB exprs BUS 
-- On COLON reduce production designator -> designator SUB exprs BUS 
-- On BY reduce production designator -> designator SUB exprs BUS 
-- On BUS reduce production designator -> designator SUB exprs BUS 
-- On ASSIGN reduce production designator -> designator SUB exprs BUS 
-- On ADDOP reduce production designator -> designator SUB exprs BUS 

State 97:
exprs -> expr . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
exprs -> expr . COMMA exprs [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On COMMA shift to state 98
-- On UPARROW reduce production exprs -> expr 
-- On TO reduce production exprs -> expr 
-- On THEN reduce production exprs -> expr 
-- On SUB reduce production exprs -> expr 
-- On STAR reduce production exprs -> expr 
-- On RPAR reduce production exprs -> expr 
-- On RELOP reduce production exprs -> expr 
-- On RBRACE reduce production exprs -> expr 
-- On PLUS reduce production exprs -> expr 
-- On OF reduce production exprs -> expr 
-- On MULOP reduce production exprs -> expr 
-- On MINUS reduce production exprs -> expr 
-- On LPAR reduce production exprs -> expr 
-- On IS reduce production exprs -> expr 
-- On EQUAL reduce production exprs -> expr 
-- On DOTDOT reduce production exprs -> expr 
-- On DOT reduce production exprs -> expr 
-- On DO reduce production exprs -> expr 
-- On COLON reduce production exprs -> expr 
-- On BY reduce production exprs -> expr 
-- On BUS reduce production exprs -> expr 
-- On ASSIGN reduce production exprs -> expr 
-- On ADDOP reduce production exprs -> expr 

State 98:
exprs -> expr COMMA . exprs [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On exprs shift to state 99
-- On expr shift to state 97
-- On designator shift to state 76

State 99:
exprs -> expr COMMA exprs . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production exprs -> expr COMMA exprs 
-- On TO reduce production exprs -> expr COMMA exprs 
-- On THEN reduce production exprs -> expr COMMA exprs 
-- On SUB reduce production exprs -> expr COMMA exprs 
-- On STAR reduce production exprs -> expr COMMA exprs 
-- On RPAR reduce production exprs -> expr COMMA exprs 
-- On RELOP reduce production exprs -> expr COMMA exprs 
-- On RBRACE reduce production exprs -> expr COMMA exprs 
-- On PLUS reduce production exprs -> expr COMMA exprs 
-- On OF reduce production exprs -> expr COMMA exprs 
-- On MULOP reduce production exprs -> expr COMMA exprs 
-- On MINUS reduce production exprs -> expr COMMA exprs 
-- On LPAR reduce production exprs -> expr COMMA exprs 
-- On IS reduce production exprs -> expr COMMA exprs 
-- On EQUAL reduce production exprs -> expr COMMA exprs 
-- On DOTDOT reduce production exprs -> expr COMMA exprs 
-- On DOT reduce production exprs -> expr COMMA exprs 
-- On DO reduce production exprs -> expr COMMA exprs 
-- On COMMA reduce production exprs -> expr COMMA exprs 
-- On COLON reduce production exprs -> expr COMMA exprs 
-- On BY reduce production exprs -> expr COMMA exprs 
-- On BUS reduce production exprs -> expr COMMA exprs 
-- On ASSIGN reduce production exprs -> expr COMMA exprs 
-- On ADDOP reduce production exprs -> expr COMMA exprs 

State 100:
actuals -> LPAR . RPAR [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
actuals -> LPAR . exprs RPAR [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
actuals -> LPAR . exprs [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STRING shift to state 59
-- On RPAR shift to state 101
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On exprs shift to state 102
-- On expr shift to state 97
-- On designator shift to state 76

State 101:
actuals -> LPAR RPAR . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production actuals -> LPAR RPAR 
-- On TO reduce production actuals -> LPAR RPAR 
-- On THEN reduce production actuals -> LPAR RPAR 
-- On SUB reduce production actuals -> LPAR RPAR 
-- On STAR reduce production actuals -> LPAR RPAR 
-- On RPAR reduce production actuals -> LPAR RPAR 
-- On RELOP reduce production actuals -> LPAR RPAR 
-- On RBRACE reduce production actuals -> LPAR RPAR 
-- On PLUS reduce production actuals -> LPAR RPAR 
-- On OF reduce production actuals -> LPAR RPAR 
-- On MULOP reduce production actuals -> LPAR RPAR 
-- On MINUS reduce production actuals -> LPAR RPAR 
-- On LPAR reduce production actuals -> LPAR RPAR 
-- On IS reduce production actuals -> LPAR RPAR 
-- On EQUAL reduce production actuals -> LPAR RPAR 
-- On DOTDOT reduce production actuals -> LPAR RPAR 
-- On DOT reduce production actuals -> LPAR RPAR 
-- On DO reduce production actuals -> LPAR RPAR 
-- On COMMA reduce production actuals -> LPAR RPAR 
-- On COLON reduce production actuals -> LPAR RPAR 
-- On BY reduce production actuals -> LPAR RPAR 
-- On BUS reduce production actuals -> LPAR RPAR 
-- On ASSIGN reduce production actuals -> LPAR RPAR 
-- On ADDOP reduce production actuals -> LPAR RPAR 

State 102:
actuals -> LPAR exprs . RPAR [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
actuals -> LPAR exprs . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On RPAR shift to state 103
-- On UPARROW reduce production actuals -> LPAR exprs 
-- On TO reduce production actuals -> LPAR exprs 
-- On THEN reduce production actuals -> LPAR exprs 
-- On SUB reduce production actuals -> LPAR exprs 
-- On STAR reduce production actuals -> LPAR exprs 
-- On RELOP reduce production actuals -> LPAR exprs 
-- On RBRACE reduce production actuals -> LPAR exprs 
-- On PLUS reduce production actuals -> LPAR exprs 
-- On OF reduce production actuals -> LPAR exprs 
-- On MULOP reduce production actuals -> LPAR exprs 
-- On MINUS reduce production actuals -> LPAR exprs 
-- On LPAR reduce production actuals -> LPAR exprs 
-- On IS reduce production actuals -> LPAR exprs 
-- On EQUAL reduce production actuals -> LPAR exprs 
-- On DOTDOT reduce production actuals -> LPAR exprs 
-- On DOT reduce production actuals -> LPAR exprs 
-- On DO reduce production actuals -> LPAR exprs 
-- On COMMA reduce production actuals -> LPAR exprs 
-- On COLON reduce production actuals -> LPAR exprs 
-- On BY reduce production actuals -> LPAR exprs 
-- On BUS reduce production actuals -> LPAR exprs 
-- On ASSIGN reduce production actuals -> LPAR exprs 
-- On ADDOP reduce production actuals -> LPAR exprs 

State 103:
actuals -> LPAR exprs RPAR . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production actuals -> LPAR exprs RPAR 
-- On TO reduce production actuals -> LPAR exprs RPAR 
-- On THEN reduce production actuals -> LPAR exprs RPAR 
-- On SUB reduce production actuals -> LPAR exprs RPAR 
-- On STAR reduce production actuals -> LPAR exprs RPAR 
-- On RPAR reduce production actuals -> LPAR exprs RPAR 
-- On RELOP reduce production actuals -> LPAR exprs RPAR 
-- On RBRACE reduce production actuals -> LPAR exprs RPAR 
-- On PLUS reduce production actuals -> LPAR exprs RPAR 
-- On OF reduce production actuals -> LPAR exprs RPAR 
-- On MULOP reduce production actuals -> LPAR exprs RPAR 
-- On MINUS reduce production actuals -> LPAR exprs RPAR 
-- On LPAR reduce production actuals -> LPAR exprs RPAR 
-- On IS reduce production actuals -> LPAR exprs RPAR 
-- On EQUAL reduce production actuals -> LPAR exprs RPAR 
-- On DOTDOT reduce production actuals -> LPAR exprs RPAR 
-- On DOT reduce production actuals -> LPAR exprs RPAR 
-- On DO reduce production actuals -> LPAR exprs RPAR 
-- On COMMA reduce production actuals -> LPAR exprs RPAR 
-- On COLON reduce production actuals -> LPAR exprs RPAR 
-- On BY reduce production actuals -> LPAR exprs RPAR 
-- On BUS reduce production actuals -> LPAR exprs RPAR 
-- On ASSIGN reduce production actuals -> LPAR exprs RPAR 
-- On ADDOP reduce production actuals -> LPAR exprs RPAR 

State 104:
designator -> designator DOT . name [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On IDENT shift to state 2
-- On name shift to state 105

State 105:
designator -> designator DOT name . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production designator -> designator DOT name 
-- On TO reduce production designator -> designator DOT name 
-- On THEN reduce production designator -> designator DOT name 
-- On SUB reduce production designator -> designator DOT name 
-- On STAR reduce production designator -> designator DOT name 
-- On RPAR reduce production designator -> designator DOT name 
-- On RELOP reduce production designator -> designator DOT name 
-- On RBRACE reduce production designator -> designator DOT name 
-- On PLUS reduce production designator -> designator DOT name 
-- On OF reduce production designator -> designator DOT name 
-- On MULOP reduce production designator -> designator DOT name 
-- On MINUS reduce production designator -> designator DOT name 
-- On LPAR reduce production designator -> designator DOT name 
-- On IS reduce production designator -> designator DOT name 
-- On EQUAL reduce production designator -> designator DOT name 
-- On DOTDOT reduce production designator -> designator DOT name 
-- On DOT reduce production designator -> designator DOT name 
-- On DO reduce production designator -> designator DOT name 
-- On COMMA reduce production designator -> designator DOT name 
-- On COLON reduce production designator -> designator DOT name 
-- On BY reduce production designator -> designator DOT name 
-- On BUS reduce production designator -> designator DOT name 
-- On ASSIGN reduce production designator -> designator DOT name 
-- On ADDOP reduce production designator -> designator DOT name 

State 106:
designator -> designator actuals . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production designator -> designator actuals 
-- On TO reduce production designator -> designator actuals 
-- On THEN reduce production designator -> designator actuals 
-- On SUB reduce production designator -> designator actuals 
-- On STAR reduce production designator -> designator actuals 
-- On RPAR reduce production designator -> designator actuals 
-- On RELOP reduce production designator -> designator actuals 
-- On RBRACE reduce production designator -> designator actuals 
-- On PLUS reduce production designator -> designator actuals 
-- On OF reduce production designator -> designator actuals 
-- On MULOP reduce production designator -> designator actuals 
-- On MINUS reduce production designator -> designator actuals 
-- On LPAR reduce production designator -> designator actuals 
-- On IS reduce production designator -> designator actuals 
-- On EQUAL reduce production designator -> designator actuals 
-- On DOTDOT reduce production designator -> designator actuals 
-- On DOT reduce production designator -> designator actuals 
-- On DO reduce production designator -> designator actuals 
-- On COMMA reduce production designator -> designator actuals 
-- On COLON reduce production designator -> designator actuals 
-- On BY reduce production designator -> designator actuals 
-- On BUS reduce production designator -> designator actuals 
-- On ASSIGN reduce production designator -> designator actuals 
-- On ADDOP reduce production designator -> designator actuals 

State 107:
element -> expr . [ RBRACE COMMA COLON ]
element -> expr . DOTDOT expr [ RBRACE COMMA COLON ]
-- On DOTDOT shift to state 108
-- On RBRACE reduce production element -> expr 
-- On COMMA reduce production element -> expr 
-- On COLON reduce production element -> expr 

State 108:
element -> expr DOTDOT . expr [ RBRACE COMMA COLON ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 109
-- On designator shift to state 76

State 109:
element -> expr DOTDOT expr . [ RBRACE COMMA COLON ]
-- On RBRACE reduce production element -> expr DOTDOT expr 
-- On COMMA reduce production element -> expr DOTDOT expr 
-- On COLON reduce production element -> expr DOTDOT expr 

State 110:
factor -> LBRACE elements . RBRACE [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On RBRACE shift to state 111

State 111:
factor -> LBRACE elements RBRACE . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production factor -> LBRACE elements RBRACE 
-- On TO reduce production factor -> LBRACE elements RBRACE 
-- On THEN reduce production factor -> LBRACE elements RBRACE 
-- On SUB reduce production factor -> LBRACE elements RBRACE 
-- On STAR reduce production factor -> LBRACE elements RBRACE 
-- On RPAR reduce production factor -> LBRACE elements RBRACE 
-- On RELOP reduce production factor -> LBRACE elements RBRACE 
-- On RBRACE reduce production factor -> LBRACE elements RBRACE 
-- On PLUS reduce production factor -> LBRACE elements RBRACE 
-- On OF reduce production factor -> LBRACE elements RBRACE 
-- On MULOP reduce production factor -> LBRACE elements RBRACE 
-- On MINUS reduce production factor -> LBRACE elements RBRACE 
-- On LPAR reduce production factor -> LBRACE elements RBRACE 
-- On IS reduce production factor -> LBRACE elements RBRACE 
-- On EQUAL reduce production factor -> LBRACE elements RBRACE 
-- On DOTDOT reduce production factor -> LBRACE elements RBRACE 
-- On DOT reduce production factor -> LBRACE elements RBRACE 
-- On DO reduce production factor -> LBRACE elements RBRACE 
-- On COMMA reduce production factor -> LBRACE elements RBRACE 
-- On COLON reduce production factor -> LBRACE elements RBRACE 
-- On BY reduce production factor -> LBRACE elements RBRACE 
-- On BUS reduce production factor -> LBRACE elements RBRACE 
-- On ASSIGN reduce production factor -> LBRACE elements RBRACE 
-- On ADDOP reduce production factor -> LBRACE elements RBRACE 

State 112:
elements -> element . [ RBRACE COLON ]
elements -> element . COMMA elements [ RBRACE COLON ]
-- On COMMA shift to state 113
-- On RBRACE reduce production elements -> element 
-- On COLON reduce production elements -> element 

State 113:
elements -> element COMMA . elements [ RBRACE COLON ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 107
-- On elements shift to state 114
-- On element shift to state 112
-- On designator shift to state 76

State 114:
elements -> element COMMA elements . [ RBRACE COLON ]
-- On RBRACE reduce production elements -> element COMMA elements 
-- On COLON reduce production elements -> element COMMA elements 

State 115:
simple -> MINUS term . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . MULOP factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . STAR factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STAR shift to state 73
-- On MULOP shift to state 84
-- On UPARROW reduce production simple -> MINUS term 
-- On TO reduce production simple -> MINUS term 
-- On THEN reduce production simple -> MINUS term 
-- On SUB reduce production simple -> MINUS term 
-- On RPAR reduce production simple -> MINUS term 
-- On RELOP reduce production simple -> MINUS term 
-- On RBRACE reduce production simple -> MINUS term 
-- On PLUS reduce production simple -> MINUS term 
-- On OF reduce production simple -> MINUS term 
-- On MINUS reduce production simple -> MINUS term 
-- On LPAR reduce production simple -> MINUS term 
-- On IS reduce production simple -> MINUS term 
-- On EQUAL reduce production simple -> MINUS term 
-- On DOTDOT reduce production simple -> MINUS term 
-- On DOT reduce production simple -> MINUS term 
-- On DO reduce production simple -> MINUS term 
-- On COMMA reduce production simple -> MINUS term 
-- On COLON reduce production simple -> MINUS term 
-- On BY reduce production simple -> MINUS term 
-- On BUS reduce production simple -> MINUS term 
-- On ASSIGN reduce production simple -> MINUS term 
-- On ADDOP reduce production simple -> MINUS term 

State 116:
factor -> LPAR expr . RPAR [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
factor -> LPAR expr . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On RPAR shift to state 117
-- On UPARROW reduce production factor -> LPAR expr 
-- On TO reduce production factor -> LPAR expr 
-- On THEN reduce production factor -> LPAR expr 
-- On SUB reduce production factor -> LPAR expr 
-- On STAR reduce production factor -> LPAR expr 
-- On RELOP reduce production factor -> LPAR expr 
-- On RBRACE reduce production factor -> LPAR expr 
-- On PLUS reduce production factor -> LPAR expr 
-- On OF reduce production factor -> LPAR expr 
-- On MULOP reduce production factor -> LPAR expr 
-- On MINUS reduce production factor -> LPAR expr 
-- On LPAR reduce production factor -> LPAR expr 
-- On IS reduce production factor -> LPAR expr 
-- On EQUAL reduce production factor -> LPAR expr 
-- On DOTDOT reduce production factor -> LPAR expr 
-- On DOT reduce production factor -> LPAR expr 
-- On DO reduce production factor -> LPAR expr 
-- On COMMA reduce production factor -> LPAR expr 
-- On COLON reduce production factor -> LPAR expr 
-- On BY reduce production factor -> LPAR expr 
-- On BUS reduce production factor -> LPAR expr 
-- On ASSIGN reduce production factor -> LPAR expr 
-- On ADDOP reduce production factor -> LPAR expr 

State 117:
factor -> LPAR expr RPAR . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production factor -> LPAR expr RPAR 
-- On TO reduce production factor -> LPAR expr RPAR 
-- On THEN reduce production factor -> LPAR expr RPAR 
-- On SUB reduce production factor -> LPAR expr RPAR 
-- On STAR reduce production factor -> LPAR expr RPAR 
-- On RPAR reduce production factor -> LPAR expr RPAR 
-- On RELOP reduce production factor -> LPAR expr RPAR 
-- On RBRACE reduce production factor -> LPAR expr RPAR 
-- On PLUS reduce production factor -> LPAR expr RPAR 
-- On OF reduce production factor -> LPAR expr RPAR 
-- On MULOP reduce production factor -> LPAR expr RPAR 
-- On MINUS reduce production factor -> LPAR expr RPAR 
-- On LPAR reduce production factor -> LPAR expr RPAR 
-- On IS reduce production factor -> LPAR expr RPAR 
-- On EQUAL reduce production factor -> LPAR expr RPAR 
-- On DOTDOT reduce production factor -> LPAR expr RPAR 
-- On DOT reduce production factor -> LPAR expr RPAR 
-- On DO reduce production factor -> LPAR expr RPAR 
-- On COMMA reduce production factor -> LPAR expr RPAR 
-- On COLON reduce production factor -> LPAR expr RPAR 
-- On BY reduce production factor -> LPAR expr RPAR 
-- On BUS reduce production factor -> LPAR expr RPAR 
-- On ASSIGN reduce production factor -> LPAR expr RPAR 
-- On ADDOP reduce production factor -> LPAR expr RPAR 

State 118:
factor -> NOT factor . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On UPARROW reduce production factor -> NOT factor 
-- On TO reduce production factor -> NOT factor 
-- On THEN reduce production factor -> NOT factor 
-- On SUB reduce production factor -> NOT factor 
-- On STAR reduce production factor -> NOT factor 
-- On RPAR reduce production factor -> NOT factor 
-- On RELOP reduce production factor -> NOT factor 
-- On RBRACE reduce production factor -> NOT factor 
-- On PLUS reduce production factor -> NOT factor 
-- On OF reduce production factor -> NOT factor 
-- On MULOP reduce production factor -> NOT factor 
-- On MINUS reduce production factor -> NOT factor 
-- On LPAR reduce production factor -> NOT factor 
-- On IS reduce production factor -> NOT factor 
-- On EQUAL reduce production factor -> NOT factor 
-- On DOTDOT reduce production factor -> NOT factor 
-- On DOT reduce production factor -> NOT factor 
-- On DO reduce production factor -> NOT factor 
-- On COMMA reduce production factor -> NOT factor 
-- On COLON reduce production factor -> NOT factor 
-- On BY reduce production factor -> NOT factor 
-- On BUS reduce production factor -> NOT factor 
-- On ASSIGN reduce production factor -> NOT factor 
-- On ADDOP reduce production factor -> NOT factor 

State 119:
simple -> PLUS term . [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . MULOP factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
term -> term . STAR factor [ UPARROW TO THEN SUB STAR RPAR RELOP RBRACE PLUS OF MULOP MINUS LPAR IS EQUAL DOTDOT DOT DO COMMA COLON BY BUS ASSIGN ADDOP ]
-- On STAR shift to state 73
-- On MULOP shift to state 84
-- On UPARROW reduce production simple -> PLUS term 
-- On TO reduce production simple -> PLUS term 
-- On THEN reduce production simple -> PLUS term 
-- On SUB reduce production simple -> PLUS term 
-- On RPAR reduce production simple -> PLUS term 
-- On RELOP reduce production simple -> PLUS term 
-- On RBRACE reduce production simple -> PLUS term 
-- On PLUS reduce production simple -> PLUS term 
-- On OF reduce production simple -> PLUS term 
-- On MINUS reduce production simple -> PLUS term 
-- On LPAR reduce production simple -> PLUS term 
-- On IS reduce production simple -> PLUS term 
-- On EQUAL reduce production simple -> PLUS term 
-- On DOTDOT reduce production simple -> PLUS term 
-- On DOT reduce production simple -> PLUS term 
-- On DO reduce production simple -> PLUS term 
-- On COMMA reduce production simple -> PLUS term 
-- On COLON reduce production simple -> PLUS term 
-- On BY reduce production simple -> PLUS term 
-- On BUS reduce production simple -> PLUS term 
-- On ASSIGN reduce production simple -> PLUS term 
-- On ADDOP reduce production simple -> PLUS term 

State 120:
typexpr -> ARRAY OF . typexpr [ VAR SEMI RPAR IDENT END COMMA ]
-- On PROCEDURE shift to state 33
-- On POINTER shift to state 50
-- On LPAR shift to state 52
-- On IDENT shift to state 37
-- On ARRAY shift to state 58
-- On ABSTRACT shift to state 121
-- On typexpr shift to state 122
-- On typename shift to state 123
-- On qualid shift to state 124
-- On absmark shift to state 125
-- On RECORD reduce production absmark -> 

State 121:
absmark -> ABSTRACT . [ RECORD ]
-- On RECORD reduce production absmark -> ABSTRACT 

State 122:
typexpr -> ARRAY OF typexpr . [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR reduce production typexpr -> ARRAY OF typexpr 
-- On SEMI reduce production typexpr -> ARRAY OF typexpr 
-- On RPAR reduce production typexpr -> ARRAY OF typexpr 
-- On IDENT reduce production typexpr -> ARRAY OF typexpr 
-- On END reduce production typexpr -> ARRAY OF typexpr 
-- On COMMA reduce production typexpr -> ARRAY OF typexpr 

State 123:
typexpr -> typename . [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR reduce production typexpr -> typename 
-- On SEMI reduce production typexpr -> typename 
-- On RPAR reduce production typexpr -> typename 
-- On IDENT reduce production typexpr -> typename 
-- On END reduce production typexpr -> typename 
-- On COMMA reduce production typexpr -> typename 

State 124:
typename -> qualid . [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR reduce production typename -> qualid 
-- On SEMI reduce production typename -> qualid 
-- On RPAR reduce production typename -> qualid 
-- On IDENT reduce production typename -> qualid 
-- On END reduce production typename -> qualid 
-- On COMMA reduce production typename -> qualid 

State 125:
typexpr -> absmark . RECORD parent fields END [ VAR SEMI RPAR IDENT END COMMA ]
-- On RECORD shift to state 126

State 126:
typexpr -> absmark RECORD . parent fields END [ VAR SEMI RPAR IDENT END COMMA ]
-- On LPAR shift to state 127
-- On parent shift to state 130
-- On SEMI reduce production parent -> 
-- On IDENT reduce production parent -> 
-- On END reduce production parent -> 

State 127:
parent -> LPAR . typename RPAR [ SEMI IDENT END ]
-- On IDENT shift to state 37
-- On typename shift to state 128
-- On qualid shift to state 124

State 128:
parent -> LPAR typename . RPAR [ SEMI IDENT END ]
-- On RPAR shift to state 129

State 129:
parent -> LPAR typename RPAR . [ SEMI IDENT END ]
-- On SEMI reduce production parent -> LPAR typename RPAR 
-- On IDENT reduce production parent -> LPAR typename RPAR 
-- On END reduce production parent -> LPAR typename RPAR 

State 130:
typexpr -> absmark RECORD parent . fields END [ VAR SEMI RPAR IDENT END COMMA ]
-- On IDENT shift to state 19
-- On fields shift to state 131
-- On fieldlist shift to state 133
-- On defids shift to state 136
-- On defid shift to state 55
-- On SEMI reduce production fieldlist -> 
-- On END reduce production fieldlist -> 

State 131:
typexpr -> absmark RECORD parent fields . END [ VAR SEMI RPAR IDENT END COMMA ]
-- On END shift to state 132

State 132:
typexpr -> absmark RECORD parent fields END . [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR reduce production typexpr -> absmark RECORD parent fields END 
-- On SEMI reduce production typexpr -> absmark RECORD parent fields END 
-- On RPAR reduce production typexpr -> absmark RECORD parent fields END 
-- On IDENT reduce production typexpr -> absmark RECORD parent fields END 
-- On END reduce production typexpr -> absmark RECORD parent fields END 
-- On COMMA reduce production typexpr -> absmark RECORD parent fields END 

State 133:
fields -> fieldlist . [ END ]
fields -> fieldlist . SEMI fields [ END ]
-- On SEMI shift to state 134
-- On END reduce production fields -> fieldlist 

State 134:
fields -> fieldlist SEMI . fields [ END ]
-- On IDENT shift to state 19
-- On fields shift to state 135
-- On fieldlist shift to state 133
-- On defids shift to state 136
-- On defid shift to state 55
-- On SEMI reduce production fieldlist -> 
-- On END reduce production fieldlist -> 

State 135:
fields -> fieldlist SEMI fields . [ END ]
-- On END reduce production fields -> fieldlist SEMI fields 

State 136:
fieldlist -> defids . COLON typexpr [ SEMI END ]
-- On COLON shift to state 137

State 137:
fieldlist -> defids COLON . typexpr [ SEMI END ]
-- On PROCEDURE shift to state 33
-- On POINTER shift to state 50
-- On LPAR shift to state 52
-- On IDENT shift to state 37
-- On ARRAY shift to state 58
-- On ABSTRACT shift to state 121
-- On typexpr shift to state 138
-- On typename shift to state 123
-- On qualid shift to state 124
-- On absmark shift to state 125
-- On RECORD reduce production absmark -> 

State 138:
fieldlist -> defids COLON typexpr . [ SEMI END ]
-- On SEMI reduce production fieldlist -> defids COLON typexpr 
-- On END reduce production fieldlist -> defids COLON typexpr 

State 139:
typexpr -> ARRAY exprs . OF typexpr [ VAR SEMI RPAR IDENT END COMMA ]
-- On OF shift to state 140

State 140:
typexpr -> ARRAY exprs OF . typexpr [ VAR SEMI RPAR IDENT END COMMA ]
-- On PROCEDURE shift to state 33
-- On POINTER shift to state 50
-- On LPAR shift to state 52
-- On IDENT shift to state 37
-- On ARRAY shift to state 58
-- On ABSTRACT shift to state 121
-- On typexpr shift to state 141
-- On typename shift to state 123
-- On qualid shift to state 124
-- On absmark shift to state 125
-- On RECORD reduce production absmark -> 

State 141:
typexpr -> ARRAY exprs OF typexpr . [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR reduce production typexpr -> ARRAY exprs OF typexpr 
-- On SEMI reduce production typexpr -> ARRAY exprs OF typexpr 
-- On RPAR reduce production typexpr -> ARRAY exprs OF typexpr 
-- On IDENT reduce production typexpr -> ARRAY exprs OF typexpr 
-- On END reduce production typexpr -> ARRAY exprs OF typexpr 
-- On COMMA reduce production typexpr -> ARRAY exprs OF typexpr 

State 142:
typexpr -> POINTER TO typexpr . [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR reduce production typexpr -> POINTER TO typexpr 
-- On SEMI reduce production typexpr -> POINTER TO typexpr 
-- On RPAR reduce production typexpr -> POINTER TO typexpr 
-- On IDENT reduce production typexpr -> POINTER TO typexpr 
-- On END reduce production typexpr -> POINTER TO typexpr 
-- On COMMA reduce production typexpr -> POINTER TO typexpr 

State 143:
formal -> defids COLON typexpr . [ VAR SEMI RPAR IDENT COMMA ]
-- On VAR reduce production formal -> defids COLON typexpr 
-- On SEMI reduce production formal -> defids COLON typexpr 
-- On RPAR reduce production formal -> defids COLON typexpr 
-- On IDENT reduce production formal -> defids COLON typexpr 
-- On COMMA reduce production formal -> defids COLON typexpr 

State 144:
typexpr -> PROCEDURE params . [ VAR SEMI RPAR IDENT END COMMA ]
-- On VAR reduce production typexpr -> PROCEDURE params 
-- On SEMI reduce production typexpr -> PROCEDURE params 
-- On RPAR reduce production typexpr -> PROCEDURE params 
-- On IDENT reduce production typexpr -> PROCEDURE params 
-- On END reduce production typexpr -> PROCEDURE params 
-- On COMMA reduce production typexpr -> PROCEDURE params 

State 145:
formal -> VAR defids COLON typexpr . [ VAR SEMI RPAR IDENT COMMA ]
-- On VAR reduce production formal -> VAR defids COLON typexpr 
-- On SEMI reduce production formal -> VAR defids COLON typexpr 
-- On RPAR reduce production formal -> VAR defids COLON typexpr 
-- On IDENT reduce production formal -> VAR defids COLON typexpr 
-- On COMMA reduce production formal -> VAR defids COLON typexpr 

State 146:
params -> LPAR RPAR . result [ error VAR TYPE SEMI PROCEDURE IS IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On COLON shift to state 147
-- On result shift to state 152
-- On error reduce production result -> 
-- On VAR reduce production result -> 
-- On TYPE reduce production result -> 
-- On SEMI reduce production result -> 
-- On PROCEDURE reduce production result -> 
-- On IS reduce production result -> 
-- On IDENT reduce production result -> 
-- On END reduce production result -> 
-- On CONST reduce production result -> 
-- On COMMA reduce production result -> 
-- On BEGIN reduce production result -> 
-- On ABSTRACT reduce production result -> 

State 147:
result -> COLON . qualid [ error VAR TYPE SEMI PROCEDURE IS IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On IDENT shift to state 148
-- On qualid shift to state 151

State 148:
qualid -> IDENT . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
qualid -> IDENT . DOT IDENT [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On DOT shift to state 149
-- On error reduce production qualid -> IDENT 
-- On WITH reduce production qualid -> IDENT 
-- On WHILE reduce production qualid -> IDENT 
-- On VBAR reduce production qualid -> IDENT 
-- On VAR reduce production qualid -> IDENT 
-- On UPARROW reduce production qualid -> IDENT 
-- On UNTIL reduce production qualid -> IDENT 
-- On TYPE reduce production qualid -> IDENT 
-- On SUB reduce production qualid -> IDENT 
-- On STAR reduce production qualid -> IDENT 
-- On SEMI reduce production qualid -> IDENT 
-- On RPAR reduce production qualid -> IDENT 
-- On RETURN reduce production qualid -> IDENT 
-- On REPEAT reduce production qualid -> IDENT 
-- On RELOP reduce production qualid -> IDENT 
-- On PROCEDURE reduce production qualid -> IDENT 
-- On PLUS reduce production qualid -> IDENT 
-- On MULOP reduce production qualid -> IDENT 
-- On MINUS reduce production qualid -> IDENT 
-- On LPAR reduce production qualid -> IDENT 
-- On LOOP reduce production qualid -> IDENT 
-- On LOCAL reduce production qualid -> IDENT 
-- On IS reduce production qualid -> IDENT 
-- On IF reduce production qualid -> IDENT 
-- On IDENT reduce production qualid -> IDENT 
-- On FOR reduce production qualid -> IDENT 
-- On EXIT reduce production qualid -> IDENT 
-- On EQUAL reduce production qualid -> IDENT 
-- On END reduce production qualid -> IDENT 
-- On ELSIF reduce production qualid -> IDENT 
-- On ELSE reduce production qualid -> IDENT 
-- On CONST reduce production qualid -> IDENT 
-- On COMMA reduce production qualid -> IDENT 
-- On CASE reduce production qualid -> IDENT 
-- On BUS reduce production qualid -> IDENT 
-- On BEGIN reduce production qualid -> IDENT 
-- On ASSIGN reduce production qualid -> IDENT 
-- On ADDOP reduce production qualid -> IDENT 
-- On ABSTRACT reduce production qualid -> IDENT 

State 149:
qualid -> IDENT DOT . IDENT [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On IDENT shift to state 150

State 150:
qualid -> IDENT DOT IDENT . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production qualid -> IDENT DOT IDENT 
-- On WITH reduce production qualid -> IDENT DOT IDENT 
-- On WHILE reduce production qualid -> IDENT DOT IDENT 
-- On VBAR reduce production qualid -> IDENT DOT IDENT 
-- On VAR reduce production qualid -> IDENT DOT IDENT 
-- On UPARROW reduce production qualid -> IDENT DOT IDENT 
-- On UNTIL reduce production qualid -> IDENT DOT IDENT 
-- On TYPE reduce production qualid -> IDENT DOT IDENT 
-- On SUB reduce production qualid -> IDENT DOT IDENT 
-- On STAR reduce production qualid -> IDENT DOT IDENT 
-- On SEMI reduce production qualid -> IDENT DOT IDENT 
-- On RPAR reduce production qualid -> IDENT DOT IDENT 
-- On RETURN reduce production qualid -> IDENT DOT IDENT 
-- On REPEAT reduce production qualid -> IDENT DOT IDENT 
-- On RELOP reduce production qualid -> IDENT DOT IDENT 
-- On PROCEDURE reduce production qualid -> IDENT DOT IDENT 
-- On PLUS reduce production qualid -> IDENT DOT IDENT 
-- On MULOP reduce production qualid -> IDENT DOT IDENT 
-- On MINUS reduce production qualid -> IDENT DOT IDENT 
-- On LPAR reduce production qualid -> IDENT DOT IDENT 
-- On LOOP reduce production qualid -> IDENT DOT IDENT 
-- On LOCAL reduce production qualid -> IDENT DOT IDENT 
-- On IS reduce production qualid -> IDENT DOT IDENT 
-- On IF reduce production qualid -> IDENT DOT IDENT 
-- On IDENT reduce production qualid -> IDENT DOT IDENT 
-- On FOR reduce production qualid -> IDENT DOT IDENT 
-- On EXIT reduce production qualid -> IDENT DOT IDENT 
-- On EQUAL reduce production qualid -> IDENT DOT IDENT 
-- On END reduce production qualid -> IDENT DOT IDENT 
-- On ELSIF reduce production qualid -> IDENT DOT IDENT 
-- On ELSE reduce production qualid -> IDENT DOT IDENT 
-- On DOT reduce production qualid -> IDENT DOT IDENT 
-- On CONST reduce production qualid -> IDENT DOT IDENT 
-- On COMMA reduce production qualid -> IDENT DOT IDENT 
-- On CASE reduce production qualid -> IDENT DOT IDENT 
-- On BUS reduce production qualid -> IDENT DOT IDENT 
-- On BEGIN reduce production qualid -> IDENT DOT IDENT 
-- On ASSIGN reduce production qualid -> IDENT DOT IDENT 
-- On ADDOP reduce production qualid -> IDENT DOT IDENT 
-- On ABSTRACT reduce production qualid -> IDENT DOT IDENT 

State 151:
result -> COLON qualid . [ error VAR TYPE SEMI PROCEDURE IS IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production result -> COLON qualid 
-- On VAR reduce production result -> COLON qualid 
-- On TYPE reduce production result -> COLON qualid 
-- On SEMI reduce production result -> COLON qualid 
-- On PROCEDURE reduce production result -> COLON qualid 
-- On IS reduce production result -> COLON qualid 
-- On IDENT reduce production result -> COLON qualid 
-- On END reduce production result -> COLON qualid 
-- On CONST reduce production result -> COLON qualid 
-- On COMMA reduce production result -> COLON qualid 
-- On BEGIN reduce production result -> COLON qualid 
-- On ABSTRACT reduce production result -> COLON qualid 

State 152:
params -> LPAR RPAR result . [ error VAR TYPE SEMI PROCEDURE IS IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production params -> LPAR RPAR result 
-- On VAR reduce production params -> LPAR RPAR result 
-- On TYPE reduce production params -> LPAR RPAR result 
-- On SEMI reduce production params -> LPAR RPAR result 
-- On PROCEDURE reduce production params -> LPAR RPAR result 
-- On IS reduce production params -> LPAR RPAR result 
-- On IDENT reduce production params -> LPAR RPAR result 
-- On END reduce production params -> LPAR RPAR result 
-- On CONST reduce production params -> LPAR RPAR result 
-- On COMMA reduce production params -> LPAR RPAR result 
-- On BEGIN reduce production params -> LPAR RPAR result 
-- On ABSTRACT reduce production params -> LPAR RPAR result 

State 153:
params -> LPAR formals . RPAR result [ error VAR TYPE SEMI PROCEDURE IS IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On RPAR shift to state 154

State 154:
params -> LPAR formals RPAR . result [ error VAR TYPE SEMI PROCEDURE IS IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On COLON shift to state 147
-- On result shift to state 155
-- On error reduce production result -> 
-- On VAR reduce production result -> 
-- On TYPE reduce production result -> 
-- On SEMI reduce production result -> 
-- On PROCEDURE reduce production result -> 
-- On IS reduce production result -> 
-- On IDENT reduce production result -> 
-- On END reduce production result -> 
-- On CONST reduce production result -> 
-- On COMMA reduce production result -> 
-- On BEGIN reduce production result -> 
-- On ABSTRACT reduce production result -> 

State 155:
params -> LPAR formals RPAR result . [ error VAR TYPE SEMI PROCEDURE IS IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production params -> LPAR formals RPAR result 
-- On VAR reduce production params -> LPAR formals RPAR result 
-- On TYPE reduce production params -> LPAR formals RPAR result 
-- On SEMI reduce production params -> LPAR formals RPAR result 
-- On PROCEDURE reduce production params -> LPAR formals RPAR result 
-- On IS reduce production params -> LPAR formals RPAR result 
-- On IDENT reduce production params -> LPAR formals RPAR result 
-- On END reduce production params -> LPAR formals RPAR result 
-- On CONST reduce production params -> LPAR formals RPAR result 
-- On COMMA reduce production params -> LPAR formals RPAR result 
-- On BEGIN reduce production params -> LPAR formals RPAR result 
-- On ABSTRACT reduce production params -> LPAR formals RPAR result 

State 156:
typexpr -> PROCEDURE params . [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production typexpr -> PROCEDURE params 
-- On VAR reduce production typexpr -> PROCEDURE params 
-- On TYPE reduce production typexpr -> PROCEDURE params 
-- On SEMI reduce production typexpr -> PROCEDURE params 
-- On PROCEDURE reduce production typexpr -> PROCEDURE params 
-- On IDENT reduce production typexpr -> PROCEDURE params 
-- On END reduce production typexpr -> PROCEDURE params 
-- On CONST reduce production typexpr -> PROCEDURE params 
-- On COMMA reduce production typexpr -> PROCEDURE params 
-- On BEGIN reduce production typexpr -> PROCEDURE params 
-- On ABSTRACT reduce production typexpr -> PROCEDURE params 

State 157:
typexpr -> POINTER . TO typexpr [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On TO shift to state 158

State 158:
typexpr -> POINTER TO . typexpr [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On PROCEDURE shift to state 28
-- On POINTER shift to state 157
-- On LPAR shift to state 159
-- On IDENT shift to state 148
-- On ARRAY shift to state 162
-- On ABSTRACT shift to state 121
-- On typexpr shift to state 175
-- On typename shift to state 165
-- On qualid shift to state 166
-- On absmark shift to state 167
-- On RECORD reduce production absmark -> 

State 159:
typexpr -> LPAR . defids RPAR [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On IDENT shift to state 19
-- On defids shift to state 160
-- On defid shift to state 55

State 160:
typexpr -> LPAR defids . RPAR [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On RPAR shift to state 161

State 161:
typexpr -> LPAR defids RPAR . [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production typexpr -> LPAR defids RPAR 
-- On VAR reduce production typexpr -> LPAR defids RPAR 
-- On TYPE reduce production typexpr -> LPAR defids RPAR 
-- On SEMI reduce production typexpr -> LPAR defids RPAR 
-- On PROCEDURE reduce production typexpr -> LPAR defids RPAR 
-- On IDENT reduce production typexpr -> LPAR defids RPAR 
-- On END reduce production typexpr -> LPAR defids RPAR 
-- On CONST reduce production typexpr -> LPAR defids RPAR 
-- On COMMA reduce production typexpr -> LPAR defids RPAR 
-- On BEGIN reduce production typexpr -> LPAR defids RPAR 
-- On ABSTRACT reduce production typexpr -> LPAR defids RPAR 

State 162:
typexpr -> ARRAY . exprs OF typexpr [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
typexpr -> ARRAY . OF typexpr [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On OF shift to state 163
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On exprs shift to state 172
-- On expr shift to state 97
-- On designator shift to state 76

State 163:
typexpr -> ARRAY OF . typexpr [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On PROCEDURE shift to state 28
-- On POINTER shift to state 157
-- On LPAR shift to state 159
-- On IDENT shift to state 148
-- On ARRAY shift to state 162
-- On ABSTRACT shift to state 121
-- On typexpr shift to state 164
-- On typename shift to state 165
-- On qualid shift to state 166
-- On absmark shift to state 167
-- On RECORD reduce production absmark -> 

State 164:
typexpr -> ARRAY OF typexpr . [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production typexpr -> ARRAY OF typexpr 
-- On VAR reduce production typexpr -> ARRAY OF typexpr 
-- On TYPE reduce production typexpr -> ARRAY OF typexpr 
-- On SEMI reduce production typexpr -> ARRAY OF typexpr 
-- On PROCEDURE reduce production typexpr -> ARRAY OF typexpr 
-- On IDENT reduce production typexpr -> ARRAY OF typexpr 
-- On END reduce production typexpr -> ARRAY OF typexpr 
-- On CONST reduce production typexpr -> ARRAY OF typexpr 
-- On COMMA reduce production typexpr -> ARRAY OF typexpr 
-- On BEGIN reduce production typexpr -> ARRAY OF typexpr 
-- On ABSTRACT reduce production typexpr -> ARRAY OF typexpr 

State 165:
typexpr -> typename . [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production typexpr -> typename 
-- On VAR reduce production typexpr -> typename 
-- On TYPE reduce production typexpr -> typename 
-- On SEMI reduce production typexpr -> typename 
-- On PROCEDURE reduce production typexpr -> typename 
-- On IDENT reduce production typexpr -> typename 
-- On END reduce production typexpr -> typename 
-- On CONST reduce production typexpr -> typename 
-- On COMMA reduce production typexpr -> typename 
-- On BEGIN reduce production typexpr -> typename 
-- On ABSTRACT reduce production typexpr -> typename 

State 166:
typename -> qualid . [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production typename -> qualid 
-- On VAR reduce production typename -> qualid 
-- On TYPE reduce production typename -> qualid 
-- On SEMI reduce production typename -> qualid 
-- On PROCEDURE reduce production typename -> qualid 
-- On IDENT reduce production typename -> qualid 
-- On END reduce production typename -> qualid 
-- On CONST reduce production typename -> qualid 
-- On COMMA reduce production typename -> qualid 
-- On BEGIN reduce production typename -> qualid 
-- On ABSTRACT reduce production typename -> qualid 

State 167:
typexpr -> absmark . RECORD parent fields END [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On RECORD shift to state 168

State 168:
typexpr -> absmark RECORD . parent fields END [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On LPAR shift to state 127
-- On parent shift to state 169
-- On SEMI reduce production parent -> 
-- On IDENT reduce production parent -> 
-- On END reduce production parent -> 

State 169:
typexpr -> absmark RECORD parent . fields END [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On IDENT shift to state 19
-- On fields shift to state 170
-- On fieldlist shift to state 133
-- On defids shift to state 136
-- On defid shift to state 55
-- On SEMI reduce production fieldlist -> 
-- On END reduce production fieldlist -> 

State 170:
typexpr -> absmark RECORD parent fields . END [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On END shift to state 171

State 171:
typexpr -> absmark RECORD parent fields END . [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production typexpr -> absmark RECORD parent fields END 
-- On VAR reduce production typexpr -> absmark RECORD parent fields END 
-- On TYPE reduce production typexpr -> absmark RECORD parent fields END 
-- On SEMI reduce production typexpr -> absmark RECORD parent fields END 
-- On PROCEDURE reduce production typexpr -> absmark RECORD parent fields END 
-- On IDENT reduce production typexpr -> absmark RECORD parent fields END 
-- On END reduce production typexpr -> absmark RECORD parent fields END 
-- On CONST reduce production typexpr -> absmark RECORD parent fields END 
-- On COMMA reduce production typexpr -> absmark RECORD parent fields END 
-- On BEGIN reduce production typexpr -> absmark RECORD parent fields END 
-- On ABSTRACT reduce production typexpr -> absmark RECORD parent fields END 

State 172:
typexpr -> ARRAY exprs . OF typexpr [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On OF shift to state 173

State 173:
typexpr -> ARRAY exprs OF . typexpr [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On PROCEDURE shift to state 28
-- On POINTER shift to state 157
-- On LPAR shift to state 159
-- On IDENT shift to state 148
-- On ARRAY shift to state 162
-- On ABSTRACT shift to state 121
-- On typexpr shift to state 174
-- On typename shift to state 165
-- On qualid shift to state 166
-- On absmark shift to state 167
-- On RECORD reduce production absmark -> 

State 174:
typexpr -> ARRAY exprs OF typexpr . [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production typexpr -> ARRAY exprs OF typexpr 
-- On VAR reduce production typexpr -> ARRAY exprs OF typexpr 
-- On TYPE reduce production typexpr -> ARRAY exprs OF typexpr 
-- On SEMI reduce production typexpr -> ARRAY exprs OF typexpr 
-- On PROCEDURE reduce production typexpr -> ARRAY exprs OF typexpr 
-- On IDENT reduce production typexpr -> ARRAY exprs OF typexpr 
-- On END reduce production typexpr -> ARRAY exprs OF typexpr 
-- On CONST reduce production typexpr -> ARRAY exprs OF typexpr 
-- On COMMA reduce production typexpr -> ARRAY exprs OF typexpr 
-- On BEGIN reduce production typexpr -> ARRAY exprs OF typexpr 
-- On ABSTRACT reduce production typexpr -> ARRAY exprs OF typexpr 

State 175:
typexpr -> POINTER TO typexpr . [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production typexpr -> POINTER TO typexpr 
-- On VAR reduce production typexpr -> POINTER TO typexpr 
-- On TYPE reduce production typexpr -> POINTER TO typexpr 
-- On SEMI reduce production typexpr -> POINTER TO typexpr 
-- On PROCEDURE reduce production typexpr -> POINTER TO typexpr 
-- On IDENT reduce production typexpr -> POINTER TO typexpr 
-- On END reduce production typexpr -> POINTER TO typexpr 
-- On CONST reduce production typexpr -> POINTER TO typexpr 
-- On COMMA reduce production typexpr -> POINTER TO typexpr 
-- On BEGIN reduce production typexpr -> POINTER TO typexpr 
-- On ABSTRACT reduce production typexpr -> POINTER TO typexpr 

State 176:
var_decl -> defids COLON typexpr . semi [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On SEMI shift to state 177
-- On COMMA shift to state 178
-- On semi shift to state 179
-- On error reduce production semi -> 
-- On VAR reduce production semi -> 
-- On TYPE reduce production semi -> 
-- On PROCEDURE reduce production semi -> 
-- On IDENT reduce production semi -> 
-- On END reduce production semi -> 
-- On CONST reduce production semi -> 
-- On BEGIN reduce production semi -> 
-- On ABSTRACT reduce production semi -> 

State 177:
semi -> SEMI . [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On error reduce production semi -> SEMI 
-- On VAR reduce production semi -> SEMI 
-- On TYPE reduce production semi -> SEMI 
-- On PROCEDURE reduce production semi -> SEMI 
-- On IDENT reduce production semi -> SEMI 
-- On END reduce production semi -> SEMI 
-- On CONST reduce production semi -> SEMI 
-- On BEGIN reduce production semi -> SEMI 
-- On ABSTRACT reduce production semi -> SEMI 

State 178:
semi -> COMMA . [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On error reduce production semi -> COMMA 
-- On VAR reduce production semi -> COMMA 
-- On TYPE reduce production semi -> COMMA 
-- On PROCEDURE reduce production semi -> COMMA 
-- On IDENT reduce production semi -> COMMA 
-- On END reduce production semi -> COMMA 
-- On CONST reduce production semi -> COMMA 
-- On BEGIN reduce production semi -> COMMA 
-- On ABSTRACT reduce production semi -> COMMA 

State 179:
var_decl -> defids COLON typexpr semi . [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On error reduce production var_decl -> defids COLON typexpr semi 
-- On VAR reduce production var_decl -> defids COLON typexpr semi 
-- On TYPE reduce production var_decl -> defids COLON typexpr semi 
-- On PROCEDURE reduce production var_decl -> defids COLON typexpr semi 
-- On IDENT reduce production var_decl -> defids COLON typexpr semi 
-- On END reduce production var_decl -> defids COLON typexpr semi 
-- On CONST reduce production var_decl -> defids COLON typexpr semi 
-- On BEGIN reduce production var_decl -> defids COLON typexpr semi 
-- On ABSTRACT reduce production var_decl -> defids COLON typexpr semi 

State 180:
decl -> TYPE . type_decls [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On IDENT shift to state 19
-- On type_decls shift to state 181
-- On type_decl shift to state 182
-- On defid shift to state 184

State 181:
decl -> TYPE type_decls . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production decl -> TYPE type_decls 
-- On VAR reduce production decl -> TYPE type_decls 
-- On TYPE reduce production decl -> TYPE type_decls 
-- On PROCEDURE reduce production decl -> TYPE type_decls 
-- On END reduce production decl -> TYPE type_decls 
-- On CONST reduce production decl -> TYPE type_decls 
-- On BEGIN reduce production decl -> TYPE type_decls 
-- On ABSTRACT reduce production decl -> TYPE type_decls 

State 182:
type_decls -> type_decl . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
type_decls -> type_decl . type_decls [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On IDENT shift to state 19
-- On type_decls shift to state 183
-- On type_decl shift to state 182
-- On defid shift to state 184
-- On error reduce production type_decls -> type_decl 
-- On VAR reduce production type_decls -> type_decl 
-- On TYPE reduce production type_decls -> type_decl 
-- On PROCEDURE reduce production type_decls -> type_decl 
-- On END reduce production type_decls -> type_decl 
-- On CONST reduce production type_decls -> type_decl 
-- On BEGIN reduce production type_decls -> type_decl 
-- On ABSTRACT reduce production type_decls -> type_decl 

State 183:
type_decls -> type_decl type_decls . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production type_decls -> type_decl type_decls 
-- On VAR reduce production type_decls -> type_decl type_decls 
-- On TYPE reduce production type_decls -> type_decl type_decls 
-- On PROCEDURE reduce production type_decls -> type_decl type_decls 
-- On END reduce production type_decls -> type_decl type_decls 
-- On CONST reduce production type_decls -> type_decl type_decls 
-- On BEGIN reduce production type_decls -> type_decl type_decls 
-- On ABSTRACT reduce production type_decls -> type_decl type_decls 

State 184:
type_decl -> defid . EQUAL typexpr semi [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On EQUAL shift to state 185

State 185:
type_decl -> defid EQUAL . typexpr semi [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On PROCEDURE shift to state 28
-- On POINTER shift to state 157
-- On LPAR shift to state 159
-- On IDENT shift to state 148
-- On ARRAY shift to state 162
-- On ABSTRACT shift to state 121
-- On typexpr shift to state 186
-- On typename shift to state 165
-- On qualid shift to state 166
-- On absmark shift to state 167
-- On RECORD reduce production absmark -> 

State 186:
type_decl -> defid EQUAL typexpr . semi [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On SEMI shift to state 177
-- On COMMA shift to state 178
-- On semi shift to state 187
-- On error reduce production semi -> 
-- On VAR reduce production semi -> 
-- On TYPE reduce production semi -> 
-- On PROCEDURE reduce production semi -> 
-- On IDENT reduce production semi -> 
-- On END reduce production semi -> 
-- On CONST reduce production semi -> 
-- On BEGIN reduce production semi -> 
-- On ABSTRACT reduce production semi -> 

State 187:
type_decl -> defid EQUAL typexpr semi . [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On error reduce production type_decl -> defid EQUAL typexpr semi 
-- On VAR reduce production type_decl -> defid EQUAL typexpr semi 
-- On TYPE reduce production type_decl -> defid EQUAL typexpr semi 
-- On PROCEDURE reduce production type_decl -> defid EQUAL typexpr semi 
-- On IDENT reduce production type_decl -> defid EQUAL typexpr semi 
-- On END reduce production type_decl -> defid EQUAL typexpr semi 
-- On CONST reduce production type_decl -> defid EQUAL typexpr semi 
-- On BEGIN reduce production type_decl -> defid EQUAL typexpr semi 
-- On ABSTRACT reduce production type_decl -> defid EQUAL typexpr semi 

State 188:
proc -> PROCEDURE . defid params semi block opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
proc -> PROCEDURE . receiver defid params semi block opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
proc -> PROCEDURE . defid params IS STRING semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
proc -> PROCEDURE . error block opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error shift to state 189
-- On LPAR shift to state 287
-- On IDENT shift to state 298
-- On receiver shift to state 379
-- On defid shift to state 386

State 189:
proc -> PROCEDURE error . block opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On decls shift to state 190
-- On block shift to state 375
-- On error reduce production decls -> 
-- On VAR reduce production decls -> 
-- On TYPE reduce production decls -> 
-- On PROCEDURE reduce production decls -> 
-- On END reduce production decls -> 
-- On CONST reduce production decls -> 
-- On BEGIN reduce production decls -> 
-- On ABSTRACT reduce production decls -> 

State 190:
block -> decls . body END [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
decls -> decls . decl [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error shift to state 16
-- On VAR shift to state 18
-- On TYPE shift to state 180
-- On PROCEDURE shift to state 188
-- On CONST shift to state 191
-- On BEGIN shift to state 254
-- On ABSTRACT shift to state 285
-- On proc shift to state 305
-- On decl shift to state 306
-- On body shift to state 373
-- On END reduce production body -> 

State 191:
decl -> CONST . const_decls [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On IDENT shift to state 19
-- On defid shift to state 192
-- On const_decls shift to state 251
-- On const_decl shift to state 252

State 192:
const_decl -> defid . EQUAL expr semi [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On EQUAL shift to state 193

State 193:
const_decl -> defid EQUAL . expr semi [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On STRING shift to state 194
-- On PLUS shift to state 195
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On MINUS shift to state 200
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 216
-- On simple shift to state 219
-- On name shift to state 211
-- On factor shift to state 224
-- On expr shift to state 249
-- On designator shift to state 213

State 194:
factor -> STRING . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production factor -> STRING 
-- On WITH reduce production factor -> STRING 
-- On WHILE reduce production factor -> STRING 
-- On VBAR reduce production factor -> STRING 
-- On VAR reduce production factor -> STRING 
-- On UPARROW reduce production factor -> STRING 
-- On UNTIL reduce production factor -> STRING 
-- On TYPE reduce production factor -> STRING 
-- On SUB reduce production factor -> STRING 
-- On STAR reduce production factor -> STRING 
-- On SEMI reduce production factor -> STRING 
-- On RPAR reduce production factor -> STRING 
-- On RETURN reduce production factor -> STRING 
-- On REPEAT reduce production factor -> STRING 
-- On RELOP reduce production factor -> STRING 
-- On PROCEDURE reduce production factor -> STRING 
-- On PLUS reduce production factor -> STRING 
-- On MULOP reduce production factor -> STRING 
-- On MINUS reduce production factor -> STRING 
-- On LPAR reduce production factor -> STRING 
-- On LOOP reduce production factor -> STRING 
-- On LOCAL reduce production factor -> STRING 
-- On IS reduce production factor -> STRING 
-- On IF reduce production factor -> STRING 
-- On IDENT reduce production factor -> STRING 
-- On FOR reduce production factor -> STRING 
-- On EXIT reduce production factor -> STRING 
-- On EQUAL reduce production factor -> STRING 
-- On END reduce production factor -> STRING 
-- On ELSIF reduce production factor -> STRING 
-- On ELSE reduce production factor -> STRING 
-- On DOT reduce production factor -> STRING 
-- On CONST reduce production factor -> STRING 
-- On COMMA reduce production factor -> STRING 
-- On CASE reduce production factor -> STRING 
-- On BUS reduce production factor -> STRING 
-- On BEGIN reduce production factor -> STRING 
-- On ASSIGN reduce production factor -> STRING 
-- On ADDOP reduce production factor -> STRING 
-- On ABSTRACT reduce production factor -> STRING 

State 195:
simple -> PLUS . term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 248
-- On name shift to state 211
-- On factor shift to state 224
-- On designator shift to state 213

State 196:
factor -> NUMBER . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production factor -> NUMBER 
-- On WITH reduce production factor -> NUMBER 
-- On WHILE reduce production factor -> NUMBER 
-- On VBAR reduce production factor -> NUMBER 
-- On VAR reduce production factor -> NUMBER 
-- On UPARROW reduce production factor -> NUMBER 
-- On UNTIL reduce production factor -> NUMBER 
-- On TYPE reduce production factor -> NUMBER 
-- On SUB reduce production factor -> NUMBER 
-- On STAR reduce production factor -> NUMBER 
-- On SEMI reduce production factor -> NUMBER 
-- On RPAR reduce production factor -> NUMBER 
-- On RETURN reduce production factor -> NUMBER 
-- On REPEAT reduce production factor -> NUMBER 
-- On RELOP reduce production factor -> NUMBER 
-- On PROCEDURE reduce production factor -> NUMBER 
-- On PLUS reduce production factor -> NUMBER 
-- On MULOP reduce production factor -> NUMBER 
-- On MINUS reduce production factor -> NUMBER 
-- On LPAR reduce production factor -> NUMBER 
-- On LOOP reduce production factor -> NUMBER 
-- On LOCAL reduce production factor -> NUMBER 
-- On IS reduce production factor -> NUMBER 
-- On IF reduce production factor -> NUMBER 
-- On IDENT reduce production factor -> NUMBER 
-- On FOR reduce production factor -> NUMBER 
-- On EXIT reduce production factor -> NUMBER 
-- On EQUAL reduce production factor -> NUMBER 
-- On END reduce production factor -> NUMBER 
-- On ELSIF reduce production factor -> NUMBER 
-- On ELSE reduce production factor -> NUMBER 
-- On DOT reduce production factor -> NUMBER 
-- On CONST reduce production factor -> NUMBER 
-- On COMMA reduce production factor -> NUMBER 
-- On CASE reduce production factor -> NUMBER 
-- On BUS reduce production factor -> NUMBER 
-- On BEGIN reduce production factor -> NUMBER 
-- On ASSIGN reduce production factor -> NUMBER 
-- On ADDOP reduce production factor -> NUMBER 
-- On ABSTRACT reduce production factor -> NUMBER 

State 197:
factor -> NOT . factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On name shift to state 211
-- On factor shift to state 247
-- On designator shift to state 213

State 198:
factor -> NIL . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production factor -> NIL 
-- On WITH reduce production factor -> NIL 
-- On WHILE reduce production factor -> NIL 
-- On VBAR reduce production factor -> NIL 
-- On VAR reduce production factor -> NIL 
-- On UPARROW reduce production factor -> NIL 
-- On UNTIL reduce production factor -> NIL 
-- On TYPE reduce production factor -> NIL 
-- On SUB reduce production factor -> NIL 
-- On STAR reduce production factor -> NIL 
-- On SEMI reduce production factor -> NIL 
-- On RPAR reduce production factor -> NIL 
-- On RETURN reduce production factor -> NIL 
-- On REPEAT reduce production factor -> NIL 
-- On RELOP reduce production factor -> NIL 
-- On PROCEDURE reduce production factor -> NIL 
-- On PLUS reduce production factor -> NIL 
-- On MULOP reduce production factor -> NIL 
-- On MINUS reduce production factor -> NIL 
-- On LPAR reduce production factor -> NIL 
-- On LOOP reduce production factor -> NIL 
-- On LOCAL reduce production factor -> NIL 
-- On IS reduce production factor -> NIL 
-- On IF reduce production factor -> NIL 
-- On IDENT reduce production factor -> NIL 
-- On FOR reduce production factor -> NIL 
-- On EXIT reduce production factor -> NIL 
-- On EQUAL reduce production factor -> NIL 
-- On END reduce production factor -> NIL 
-- On ELSIF reduce production factor -> NIL 
-- On ELSE reduce production factor -> NIL 
-- On DOT reduce production factor -> NIL 
-- On CONST reduce production factor -> NIL 
-- On COMMA reduce production factor -> NIL 
-- On CASE reduce production factor -> NIL 
-- On BUS reduce production factor -> NIL 
-- On BEGIN reduce production factor -> NIL 
-- On ASSIGN reduce production factor -> NIL 
-- On ADDOP reduce production factor -> NIL 
-- On ABSTRACT reduce production factor -> NIL 

State 199:
factor -> LPAR . expr RPAR [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
factor -> LPAR . expr [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On PLUS shift to state 195
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On MINUS shift to state 200
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 216
-- On simple shift to state 219
-- On name shift to state 211
-- On factor shift to state 224
-- On expr shift to state 245
-- On designator shift to state 213

State 200:
simple -> MINUS . term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 209
-- On name shift to state 211
-- On factor shift to state 224
-- On designator shift to state 213

State 201:
factor -> LBRACE . RBRACE [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
factor -> LBRACE . elements RBRACE [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 59
-- On RBRACE shift to state 202
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 107
-- On elements shift to state 203
-- On element shift to state 112
-- On designator shift to state 76

State 202:
factor -> LBRACE RBRACE . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production factor -> LBRACE RBRACE 
-- On WITH reduce production factor -> LBRACE RBRACE 
-- On WHILE reduce production factor -> LBRACE RBRACE 
-- On VBAR reduce production factor -> LBRACE RBRACE 
-- On VAR reduce production factor -> LBRACE RBRACE 
-- On UPARROW reduce production factor -> LBRACE RBRACE 
-- On UNTIL reduce production factor -> LBRACE RBRACE 
-- On TYPE reduce production factor -> LBRACE RBRACE 
-- On SUB reduce production factor -> LBRACE RBRACE 
-- On STAR reduce production factor -> LBRACE RBRACE 
-- On SEMI reduce production factor -> LBRACE RBRACE 
-- On RPAR reduce production factor -> LBRACE RBRACE 
-- On RETURN reduce production factor -> LBRACE RBRACE 
-- On REPEAT reduce production factor -> LBRACE RBRACE 
-- On RELOP reduce production factor -> LBRACE RBRACE 
-- On PROCEDURE reduce production factor -> LBRACE RBRACE 
-- On PLUS reduce production factor -> LBRACE RBRACE 
-- On MULOP reduce production factor -> LBRACE RBRACE 
-- On MINUS reduce production factor -> LBRACE RBRACE 
-- On LPAR reduce production factor -> LBRACE RBRACE 
-- On LOOP reduce production factor -> LBRACE RBRACE 
-- On LOCAL reduce production factor -> LBRACE RBRACE 
-- On IS reduce production factor -> LBRACE RBRACE 
-- On IF reduce production factor -> LBRACE RBRACE 
-- On IDENT reduce production factor -> LBRACE RBRACE 
-- On FOR reduce production factor -> LBRACE RBRACE 
-- On EXIT reduce production factor -> LBRACE RBRACE 
-- On EQUAL reduce production factor -> LBRACE RBRACE 
-- On END reduce production factor -> LBRACE RBRACE 
-- On ELSIF reduce production factor -> LBRACE RBRACE 
-- On ELSE reduce production factor -> LBRACE RBRACE 
-- On DOT reduce production factor -> LBRACE RBRACE 
-- On CONST reduce production factor -> LBRACE RBRACE 
-- On COMMA reduce production factor -> LBRACE RBRACE 
-- On CASE reduce production factor -> LBRACE RBRACE 
-- On BUS reduce production factor -> LBRACE RBRACE 
-- On BEGIN reduce production factor -> LBRACE RBRACE 
-- On ASSIGN reduce production factor -> LBRACE RBRACE 
-- On ADDOP reduce production factor -> LBRACE RBRACE 
-- On ABSTRACT reduce production factor -> LBRACE RBRACE 

State 203:
factor -> LBRACE elements . RBRACE [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On RBRACE shift to state 204

State 204:
factor -> LBRACE elements RBRACE . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production factor -> LBRACE elements RBRACE 
-- On WITH reduce production factor -> LBRACE elements RBRACE 
-- On WHILE reduce production factor -> LBRACE elements RBRACE 
-- On VBAR reduce production factor -> LBRACE elements RBRACE 
-- On VAR reduce production factor -> LBRACE elements RBRACE 
-- On UPARROW reduce production factor -> LBRACE elements RBRACE 
-- On UNTIL reduce production factor -> LBRACE elements RBRACE 
-- On TYPE reduce production factor -> LBRACE elements RBRACE 
-- On SUB reduce production factor -> LBRACE elements RBRACE 
-- On STAR reduce production factor -> LBRACE elements RBRACE 
-- On SEMI reduce production factor -> LBRACE elements RBRACE 
-- On RPAR reduce production factor -> LBRACE elements RBRACE 
-- On RETURN reduce production factor -> LBRACE elements RBRACE 
-- On REPEAT reduce production factor -> LBRACE elements RBRACE 
-- On RELOP reduce production factor -> LBRACE elements RBRACE 
-- On PROCEDURE reduce production factor -> LBRACE elements RBRACE 
-- On PLUS reduce production factor -> LBRACE elements RBRACE 
-- On MULOP reduce production factor -> LBRACE elements RBRACE 
-- On MINUS reduce production factor -> LBRACE elements RBRACE 
-- On LPAR reduce production factor -> LBRACE elements RBRACE 
-- On LOOP reduce production factor -> LBRACE elements RBRACE 
-- On LOCAL reduce production factor -> LBRACE elements RBRACE 
-- On IS reduce production factor -> LBRACE elements RBRACE 
-- On IF reduce production factor -> LBRACE elements RBRACE 
-- On IDENT reduce production factor -> LBRACE elements RBRACE 
-- On FOR reduce production factor -> LBRACE elements RBRACE 
-- On EXIT reduce production factor -> LBRACE elements RBRACE 
-- On EQUAL reduce production factor -> LBRACE elements RBRACE 
-- On END reduce production factor -> LBRACE elements RBRACE 
-- On ELSIF reduce production factor -> LBRACE elements RBRACE 
-- On ELSE reduce production factor -> LBRACE elements RBRACE 
-- On DOT reduce production factor -> LBRACE elements RBRACE 
-- On CONST reduce production factor -> LBRACE elements RBRACE 
-- On COMMA reduce production factor -> LBRACE elements RBRACE 
-- On CASE reduce production factor -> LBRACE elements RBRACE 
-- On BUS reduce production factor -> LBRACE elements RBRACE 
-- On BEGIN reduce production factor -> LBRACE elements RBRACE 
-- On ASSIGN reduce production factor -> LBRACE elements RBRACE 
-- On ADDOP reduce production factor -> LBRACE elements RBRACE 
-- On ABSTRACT reduce production factor -> LBRACE elements RBRACE 

State 205:
factor -> FLOCON . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production factor -> FLOCON 
-- On WITH reduce production factor -> FLOCON 
-- On WHILE reduce production factor -> FLOCON 
-- On VBAR reduce production factor -> FLOCON 
-- On VAR reduce production factor -> FLOCON 
-- On UPARROW reduce production factor -> FLOCON 
-- On UNTIL reduce production factor -> FLOCON 
-- On TYPE reduce production factor -> FLOCON 
-- On SUB reduce production factor -> FLOCON 
-- On STAR reduce production factor -> FLOCON 
-- On SEMI reduce production factor -> FLOCON 
-- On RPAR reduce production factor -> FLOCON 
-- On RETURN reduce production factor -> FLOCON 
-- On REPEAT reduce production factor -> FLOCON 
-- On RELOP reduce production factor -> FLOCON 
-- On PROCEDURE reduce production factor -> FLOCON 
-- On PLUS reduce production factor -> FLOCON 
-- On MULOP reduce production factor -> FLOCON 
-- On MINUS reduce production factor -> FLOCON 
-- On LPAR reduce production factor -> FLOCON 
-- On LOOP reduce production factor -> FLOCON 
-- On LOCAL reduce production factor -> FLOCON 
-- On IS reduce production factor -> FLOCON 
-- On IF reduce production factor -> FLOCON 
-- On IDENT reduce production factor -> FLOCON 
-- On FOR reduce production factor -> FLOCON 
-- On EXIT reduce production factor -> FLOCON 
-- On EQUAL reduce production factor -> FLOCON 
-- On END reduce production factor -> FLOCON 
-- On ELSIF reduce production factor -> FLOCON 
-- On ELSE reduce production factor -> FLOCON 
-- On DOT reduce production factor -> FLOCON 
-- On CONST reduce production factor -> FLOCON 
-- On COMMA reduce production factor -> FLOCON 
-- On CASE reduce production factor -> FLOCON 
-- On BUS reduce production factor -> FLOCON 
-- On BEGIN reduce production factor -> FLOCON 
-- On ASSIGN reduce production factor -> FLOCON 
-- On ADDOP reduce production factor -> FLOCON 
-- On ABSTRACT reduce production factor -> FLOCON 

State 206:
factor -> DECIMAL . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production factor -> DECIMAL 
-- On WITH reduce production factor -> DECIMAL 
-- On WHILE reduce production factor -> DECIMAL 
-- On VBAR reduce production factor -> DECIMAL 
-- On VAR reduce production factor -> DECIMAL 
-- On UPARROW reduce production factor -> DECIMAL 
-- On UNTIL reduce production factor -> DECIMAL 
-- On TYPE reduce production factor -> DECIMAL 
-- On SUB reduce production factor -> DECIMAL 
-- On STAR reduce production factor -> DECIMAL 
-- On SEMI reduce production factor -> DECIMAL 
-- On RPAR reduce production factor -> DECIMAL 
-- On RETURN reduce production factor -> DECIMAL 
-- On REPEAT reduce production factor -> DECIMAL 
-- On RELOP reduce production factor -> DECIMAL 
-- On PROCEDURE reduce production factor -> DECIMAL 
-- On PLUS reduce production factor -> DECIMAL 
-- On MULOP reduce production factor -> DECIMAL 
-- On MINUS reduce production factor -> DECIMAL 
-- On LPAR reduce production factor -> DECIMAL 
-- On LOOP reduce production factor -> DECIMAL 
-- On LOCAL reduce production factor -> DECIMAL 
-- On IS reduce production factor -> DECIMAL 
-- On IF reduce production factor -> DECIMAL 
-- On IDENT reduce production factor -> DECIMAL 
-- On FOR reduce production factor -> DECIMAL 
-- On EXIT reduce production factor -> DECIMAL 
-- On EQUAL reduce production factor -> DECIMAL 
-- On END reduce production factor -> DECIMAL 
-- On ELSIF reduce production factor -> DECIMAL 
-- On ELSE reduce production factor -> DECIMAL 
-- On DOT reduce production factor -> DECIMAL 
-- On CONST reduce production factor -> DECIMAL 
-- On COMMA reduce production factor -> DECIMAL 
-- On CASE reduce production factor -> DECIMAL 
-- On BUS reduce production factor -> DECIMAL 
-- On BEGIN reduce production factor -> DECIMAL 
-- On ASSIGN reduce production factor -> DECIMAL 
-- On ADDOP reduce production factor -> DECIMAL 
-- On ABSTRACT reduce production factor -> DECIMAL 

State 207:
factor -> DBLCON . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production factor -> DBLCON 
-- On WITH reduce production factor -> DBLCON 
-- On WHILE reduce production factor -> DBLCON 
-- On VBAR reduce production factor -> DBLCON 
-- On VAR reduce production factor -> DBLCON 
-- On UPARROW reduce production factor -> DBLCON 
-- On UNTIL reduce production factor -> DBLCON 
-- On TYPE reduce production factor -> DBLCON 
-- On SUB reduce production factor -> DBLCON 
-- On STAR reduce production factor -> DBLCON 
-- On SEMI reduce production factor -> DBLCON 
-- On RPAR reduce production factor -> DBLCON 
-- On RETURN reduce production factor -> DBLCON 
-- On REPEAT reduce production factor -> DBLCON 
-- On RELOP reduce production factor -> DBLCON 
-- On PROCEDURE reduce production factor -> DBLCON 
-- On PLUS reduce production factor -> DBLCON 
-- On MULOP reduce production factor -> DBLCON 
-- On MINUS reduce production factor -> DBLCON 
-- On LPAR reduce production factor -> DBLCON 
-- On LOOP reduce production factor -> DBLCON 
-- On LOCAL reduce production factor -> DBLCON 
-- On IS reduce production factor -> DBLCON 
-- On IF reduce production factor -> DBLCON 
-- On IDENT reduce production factor -> DBLCON 
-- On FOR reduce production factor -> DBLCON 
-- On EXIT reduce production factor -> DBLCON 
-- On EQUAL reduce production factor -> DBLCON 
-- On END reduce production factor -> DBLCON 
-- On ELSIF reduce production factor -> DBLCON 
-- On ELSE reduce production factor -> DBLCON 
-- On DOT reduce production factor -> DBLCON 
-- On CONST reduce production factor -> DBLCON 
-- On COMMA reduce production factor -> DBLCON 
-- On CASE reduce production factor -> DBLCON 
-- On BUS reduce production factor -> DBLCON 
-- On BEGIN reduce production factor -> DBLCON 
-- On ASSIGN reduce production factor -> DBLCON 
-- On ADDOP reduce production factor -> DBLCON 
-- On ABSTRACT reduce production factor -> DBLCON 

State 208:
factor -> CHAR . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production factor -> CHAR 
-- On WITH reduce production factor -> CHAR 
-- On WHILE reduce production factor -> CHAR 
-- On VBAR reduce production factor -> CHAR 
-- On VAR reduce production factor -> CHAR 
-- On UPARROW reduce production factor -> CHAR 
-- On UNTIL reduce production factor -> CHAR 
-- On TYPE reduce production factor -> CHAR 
-- On SUB reduce production factor -> CHAR 
-- On STAR reduce production factor -> CHAR 
-- On SEMI reduce production factor -> CHAR 
-- On RPAR reduce production factor -> CHAR 
-- On RETURN reduce production factor -> CHAR 
-- On REPEAT reduce production factor -> CHAR 
-- On RELOP reduce production factor -> CHAR 
-- On PROCEDURE reduce production factor -> CHAR 
-- On PLUS reduce production factor -> CHAR 
-- On MULOP reduce production factor -> CHAR 
-- On MINUS reduce production factor -> CHAR 
-- On LPAR reduce production factor -> CHAR 
-- On LOOP reduce production factor -> CHAR 
-- On LOCAL reduce production factor -> CHAR 
-- On IS reduce production factor -> CHAR 
-- On IF reduce production factor -> CHAR 
-- On IDENT reduce production factor -> CHAR 
-- On FOR reduce production factor -> CHAR 
-- On EXIT reduce production factor -> CHAR 
-- On EQUAL reduce production factor -> CHAR 
-- On END reduce production factor -> CHAR 
-- On ELSIF reduce production factor -> CHAR 
-- On ELSE reduce production factor -> CHAR 
-- On DOT reduce production factor -> CHAR 
-- On CONST reduce production factor -> CHAR 
-- On COMMA reduce production factor -> CHAR 
-- On CASE reduce production factor -> CHAR 
-- On BUS reduce production factor -> CHAR 
-- On BEGIN reduce production factor -> CHAR 
-- On ASSIGN reduce production factor -> CHAR 
-- On ADDOP reduce production factor -> CHAR 
-- On ABSTRACT reduce production factor -> CHAR 

State 209:
simple -> MINUS term . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . MULOP factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . STAR factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STAR shift to state 210
-- On MULOP shift to state 217
-- On error reduce production simple -> MINUS term 
-- On WITH reduce production simple -> MINUS term 
-- On WHILE reduce production simple -> MINUS term 
-- On VBAR reduce production simple -> MINUS term 
-- On VAR reduce production simple -> MINUS term 
-- On UPARROW reduce production simple -> MINUS term 
-- On UNTIL reduce production simple -> MINUS term 
-- On TYPE reduce production simple -> MINUS term 
-- On SUB reduce production simple -> MINUS term 
-- On SEMI reduce production simple -> MINUS term 
-- On RPAR reduce production simple -> MINUS term 
-- On RETURN reduce production simple -> MINUS term 
-- On REPEAT reduce production simple -> MINUS term 
-- On RELOP reduce production simple -> MINUS term 
-- On PROCEDURE reduce production simple -> MINUS term 
-- On PLUS reduce production simple -> MINUS term 
-- On MINUS reduce production simple -> MINUS term 
-- On LPAR reduce production simple -> MINUS term 
-- On LOOP reduce production simple -> MINUS term 
-- On LOCAL reduce production simple -> MINUS term 
-- On IS reduce production simple -> MINUS term 
-- On IF reduce production simple -> MINUS term 
-- On IDENT reduce production simple -> MINUS term 
-- On FOR reduce production simple -> MINUS term 
-- On EXIT reduce production simple -> MINUS term 
-- On EQUAL reduce production simple -> MINUS term 
-- On END reduce production simple -> MINUS term 
-- On ELSIF reduce production simple -> MINUS term 
-- On ELSE reduce production simple -> MINUS term 
-- On DOT reduce production simple -> MINUS term 
-- On CONST reduce production simple -> MINUS term 
-- On COMMA reduce production simple -> MINUS term 
-- On CASE reduce production simple -> MINUS term 
-- On BUS reduce production simple -> MINUS term 
-- On BEGIN reduce production simple -> MINUS term 
-- On ASSIGN reduce production simple -> MINUS term 
-- On ADDOP reduce production simple -> MINUS term 
-- On ABSTRACT reduce production simple -> MINUS term 

State 210:
term -> term STAR . factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On name shift to state 211
-- On factor shift to state 212
-- On designator shift to state 213

State 211:
designator -> name . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production designator -> name 
-- On WITH reduce production designator -> name 
-- On WHILE reduce production designator -> name 
-- On VBAR reduce production designator -> name 
-- On VAR reduce production designator -> name 
-- On UPARROW reduce production designator -> name 
-- On UNTIL reduce production designator -> name 
-- On TYPE reduce production designator -> name 
-- On SUB reduce production designator -> name 
-- On STAR reduce production designator -> name 
-- On SEMI reduce production designator -> name 
-- On RPAR reduce production designator -> name 
-- On RETURN reduce production designator -> name 
-- On REPEAT reduce production designator -> name 
-- On RELOP reduce production designator -> name 
-- On PROCEDURE reduce production designator -> name 
-- On PLUS reduce production designator -> name 
-- On MULOP reduce production designator -> name 
-- On MINUS reduce production designator -> name 
-- On LPAR reduce production designator -> name 
-- On LOOP reduce production designator -> name 
-- On LOCAL reduce production designator -> name 
-- On IS reduce production designator -> name 
-- On IF reduce production designator -> name 
-- On IDENT reduce production designator -> name 
-- On FOR reduce production designator -> name 
-- On EXIT reduce production designator -> name 
-- On EQUAL reduce production designator -> name 
-- On END reduce production designator -> name 
-- On ELSIF reduce production designator -> name 
-- On ELSE reduce production designator -> name 
-- On DOT reduce production designator -> name 
-- On CONST reduce production designator -> name 
-- On COMMA reduce production designator -> name 
-- On CASE reduce production designator -> name 
-- On BUS reduce production designator -> name 
-- On BEGIN reduce production designator -> name 
-- On ASSIGN reduce production designator -> name 
-- On ADDOP reduce production designator -> name 
-- On ABSTRACT reduce production designator -> name 

State 212:
term -> term STAR factor . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production term -> term STAR factor 
-- On WITH reduce production term -> term STAR factor 
-- On WHILE reduce production term -> term STAR factor 
-- On VBAR reduce production term -> term STAR factor 
-- On VAR reduce production term -> term STAR factor 
-- On UPARROW reduce production term -> term STAR factor 
-- On UNTIL reduce production term -> term STAR factor 
-- On TYPE reduce production term -> term STAR factor 
-- On SUB reduce production term -> term STAR factor 
-- On STAR reduce production term -> term STAR factor 
-- On SEMI reduce production term -> term STAR factor 
-- On RPAR reduce production term -> term STAR factor 
-- On RETURN reduce production term -> term STAR factor 
-- On REPEAT reduce production term -> term STAR factor 
-- On RELOP reduce production term -> term STAR factor 
-- On PROCEDURE reduce production term -> term STAR factor 
-- On PLUS reduce production term -> term STAR factor 
-- On MULOP reduce production term -> term STAR factor 
-- On MINUS reduce production term -> term STAR factor 
-- On LPAR reduce production term -> term STAR factor 
-- On LOOP reduce production term -> term STAR factor 
-- On LOCAL reduce production term -> term STAR factor 
-- On IS reduce production term -> term STAR factor 
-- On IF reduce production term -> term STAR factor 
-- On IDENT reduce production term -> term STAR factor 
-- On FOR reduce production term -> term STAR factor 
-- On EXIT reduce production term -> term STAR factor 
-- On EQUAL reduce production term -> term STAR factor 
-- On END reduce production term -> term STAR factor 
-- On ELSIF reduce production term -> term STAR factor 
-- On ELSE reduce production term -> term STAR factor 
-- On DOT reduce production term -> term STAR factor 
-- On CONST reduce production term -> term STAR factor 
-- On COMMA reduce production term -> term STAR factor 
-- On CASE reduce production term -> term STAR factor 
-- On BUS reduce production term -> term STAR factor 
-- On BEGIN reduce production term -> term STAR factor 
-- On ASSIGN reduce production term -> term STAR factor 
-- On ADDOP reduce production term -> term STAR factor 
-- On ABSTRACT reduce production term -> term STAR factor 

State 213:
designator -> designator . UPARROW [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
designator -> designator . SUB exprs BUS [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
designator -> designator . SUB exprs [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
designator -> designator . DOT name [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
designator -> designator . actuals [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
factor -> designator . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On UPARROW shift to state 214
-- On SUB shift to state 215
-- On LPAR shift to state 238
-- On DOT shift to state 242
-- On actuals shift to state 244
-- On error reduce production factor -> designator 
-- On WITH reduce production factor -> designator 
-- On WHILE reduce production factor -> designator 
-- On VBAR reduce production factor -> designator 
-- On VAR reduce production factor -> designator 
-- On UNTIL reduce production factor -> designator 
-- On TYPE reduce production factor -> designator 
-- On STAR reduce production factor -> designator 
-- On SEMI reduce production factor -> designator 
-- On RPAR reduce production factor -> designator 
-- On RETURN reduce production factor -> designator 
-- On REPEAT reduce production factor -> designator 
-- On RELOP reduce production factor -> designator 
-- On PROCEDURE reduce production factor -> designator 
-- On PLUS reduce production factor -> designator 
-- On MULOP reduce production factor -> designator 
-- On MINUS reduce production factor -> designator 
-- On LOOP reduce production factor -> designator 
-- On LOCAL reduce production factor -> designator 
-- On IS reduce production factor -> designator 
-- On IF reduce production factor -> designator 
-- On IDENT reduce production factor -> designator 
-- On FOR reduce production factor -> designator 
-- On EXIT reduce production factor -> designator 
-- On EQUAL reduce production factor -> designator 
-- On END reduce production factor -> designator 
-- On ELSIF reduce production factor -> designator 
-- On ELSE reduce production factor -> designator 
-- On CONST reduce production factor -> designator 
-- On COMMA reduce production factor -> designator 
-- On CASE reduce production factor -> designator 
-- On BUS reduce production factor -> designator 
-- On BEGIN reduce production factor -> designator 
-- On ASSIGN reduce production factor -> designator 
-- On ADDOP reduce production factor -> designator 
-- On ABSTRACT reduce production factor -> designator 

State 214:
designator -> designator UPARROW . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production designator -> designator UPARROW 
-- On WITH reduce production designator -> designator UPARROW 
-- On WHILE reduce production designator -> designator UPARROW 
-- On VBAR reduce production designator -> designator UPARROW 
-- On VAR reduce production designator -> designator UPARROW 
-- On UPARROW reduce production designator -> designator UPARROW 
-- On UNTIL reduce production designator -> designator UPARROW 
-- On TYPE reduce production designator -> designator UPARROW 
-- On SUB reduce production designator -> designator UPARROW 
-- On STAR reduce production designator -> designator UPARROW 
-- On SEMI reduce production designator -> designator UPARROW 
-- On RPAR reduce production designator -> designator UPARROW 
-- On RETURN reduce production designator -> designator UPARROW 
-- On REPEAT reduce production designator -> designator UPARROW 
-- On RELOP reduce production designator -> designator UPARROW 
-- On PROCEDURE reduce production designator -> designator UPARROW 
-- On PLUS reduce production designator -> designator UPARROW 
-- On MULOP reduce production designator -> designator UPARROW 
-- On MINUS reduce production designator -> designator UPARROW 
-- On LPAR reduce production designator -> designator UPARROW 
-- On LOOP reduce production designator -> designator UPARROW 
-- On LOCAL reduce production designator -> designator UPARROW 
-- On IS reduce production designator -> designator UPARROW 
-- On IF reduce production designator -> designator UPARROW 
-- On IDENT reduce production designator -> designator UPARROW 
-- On FOR reduce production designator -> designator UPARROW 
-- On EXIT reduce production designator -> designator UPARROW 
-- On EQUAL reduce production designator -> designator UPARROW 
-- On END reduce production designator -> designator UPARROW 
-- On ELSIF reduce production designator -> designator UPARROW 
-- On ELSE reduce production designator -> designator UPARROW 
-- On DOT reduce production designator -> designator UPARROW 
-- On CONST reduce production designator -> designator UPARROW 
-- On COMMA reduce production designator -> designator UPARROW 
-- On CASE reduce production designator -> designator UPARROW 
-- On BUS reduce production designator -> designator UPARROW 
-- On BEGIN reduce production designator -> designator UPARROW 
-- On ASSIGN reduce production designator -> designator UPARROW 
-- On ADDOP reduce production designator -> designator UPARROW 
-- On ABSTRACT reduce production designator -> designator UPARROW 

State 215:
designator -> designator SUB . exprs BUS [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
designator -> designator SUB . exprs [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On PLUS shift to state 195
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On MINUS shift to state 200
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 216
-- On simple shift to state 219
-- On name shift to state 211
-- On factor shift to state 224
-- On exprs shift to state 233
-- On expr shift to state 235
-- On designator shift to state 213

State 216:
simple -> term . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . MULOP factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . STAR factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STAR shift to state 210
-- On MULOP shift to state 217
-- On error reduce production simple -> term 
-- On WITH reduce production simple -> term 
-- On WHILE reduce production simple -> term 
-- On VBAR reduce production simple -> term 
-- On VAR reduce production simple -> term 
-- On UPARROW reduce production simple -> term 
-- On UNTIL reduce production simple -> term 
-- On TYPE reduce production simple -> term 
-- On SUB reduce production simple -> term 
-- On SEMI reduce production simple -> term 
-- On RPAR reduce production simple -> term 
-- On RETURN reduce production simple -> term 
-- On REPEAT reduce production simple -> term 
-- On RELOP reduce production simple -> term 
-- On PROCEDURE reduce production simple -> term 
-- On PLUS reduce production simple -> term 
-- On MINUS reduce production simple -> term 
-- On LPAR reduce production simple -> term 
-- On LOOP reduce production simple -> term 
-- On LOCAL reduce production simple -> term 
-- On IS reduce production simple -> term 
-- On IF reduce production simple -> term 
-- On IDENT reduce production simple -> term 
-- On FOR reduce production simple -> term 
-- On EXIT reduce production simple -> term 
-- On EQUAL reduce production simple -> term 
-- On END reduce production simple -> term 
-- On ELSIF reduce production simple -> term 
-- On ELSE reduce production simple -> term 
-- On DOT reduce production simple -> term 
-- On CONST reduce production simple -> term 
-- On COMMA reduce production simple -> term 
-- On CASE reduce production simple -> term 
-- On BUS reduce production simple -> term 
-- On BEGIN reduce production simple -> term 
-- On ASSIGN reduce production simple -> term 
-- On ADDOP reduce production simple -> term 
-- On ABSTRACT reduce production simple -> term 

State 217:
term -> term MULOP . factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On name shift to state 211
-- On factor shift to state 218
-- On designator shift to state 213

State 218:
term -> term MULOP factor . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production term -> term MULOP factor 
-- On WITH reduce production term -> term MULOP factor 
-- On WHILE reduce production term -> term MULOP factor 
-- On VBAR reduce production term -> term MULOP factor 
-- On VAR reduce production term -> term MULOP factor 
-- On UPARROW reduce production term -> term MULOP factor 
-- On UNTIL reduce production term -> term MULOP factor 
-- On TYPE reduce production term -> term MULOP factor 
-- On SUB reduce production term -> term MULOP factor 
-- On STAR reduce production term -> term MULOP factor 
-- On SEMI reduce production term -> term MULOP factor 
-- On RPAR reduce production term -> term MULOP factor 
-- On RETURN reduce production term -> term MULOP factor 
-- On REPEAT reduce production term -> term MULOP factor 
-- On RELOP reduce production term -> term MULOP factor 
-- On PROCEDURE reduce production term -> term MULOP factor 
-- On PLUS reduce production term -> term MULOP factor 
-- On MULOP reduce production term -> term MULOP factor 
-- On MINUS reduce production term -> term MULOP factor 
-- On LPAR reduce production term -> term MULOP factor 
-- On LOOP reduce production term -> term MULOP factor 
-- On LOCAL reduce production term -> term MULOP factor 
-- On IS reduce production term -> term MULOP factor 
-- On IF reduce production term -> term MULOP factor 
-- On IDENT reduce production term -> term MULOP factor 
-- On FOR reduce production term -> term MULOP factor 
-- On EXIT reduce production term -> term MULOP factor 
-- On EQUAL reduce production term -> term MULOP factor 
-- On END reduce production term -> term MULOP factor 
-- On ELSIF reduce production term -> term MULOP factor 
-- On ELSE reduce production term -> term MULOP factor 
-- On DOT reduce production term -> term MULOP factor 
-- On CONST reduce production term -> term MULOP factor 
-- On COMMA reduce production term -> term MULOP factor 
-- On CASE reduce production term -> term MULOP factor 
-- On BUS reduce production term -> term MULOP factor 
-- On BEGIN reduce production term -> term MULOP factor 
-- On ASSIGN reduce production term -> term MULOP factor 
-- On ADDOP reduce production term -> term MULOP factor 
-- On ABSTRACT reduce production term -> term MULOP factor 

State 219:
expr -> simple . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
expr -> simple . RELOP simple [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
expr -> simple . EQUAL simple [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
expr -> simple . IS qualid [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
simple -> simple . PLUS term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
simple -> simple . MINUS term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
simple -> simple . ADDOP term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On RELOP shift to state 220
-- On PLUS shift to state 222
-- On MINUS shift to state 225
-- On IS shift to state 229
-- On EQUAL shift to state 231
-- On ADDOP shift to state 227
-- On error reduce production expr -> simple 
-- On WITH reduce production expr -> simple 
-- On WHILE reduce production expr -> simple 
-- On VBAR reduce production expr -> simple 
-- On VAR reduce production expr -> simple 
-- On UPARROW reduce production expr -> simple 
-- On UNTIL reduce production expr -> simple 
-- On TYPE reduce production expr -> simple 
-- On SUB reduce production expr -> simple 
-- On STAR reduce production expr -> simple 
-- On SEMI reduce production expr -> simple 
-- On RPAR reduce production expr -> simple 
-- On RETURN reduce production expr -> simple 
-- On REPEAT reduce production expr -> simple 
-- On PROCEDURE reduce production expr -> simple 
-- On MULOP reduce production expr -> simple 
-- On LPAR reduce production expr -> simple 
-- On LOOP reduce production expr -> simple 
-- On LOCAL reduce production expr -> simple 
-- On IF reduce production expr -> simple 
-- On IDENT reduce production expr -> simple 
-- On FOR reduce production expr -> simple 
-- On EXIT reduce production expr -> simple 
-- On END reduce production expr -> simple 
-- On ELSIF reduce production expr -> simple 
-- On ELSE reduce production expr -> simple 
-- On DOT reduce production expr -> simple 
-- On CONST reduce production expr -> simple 
-- On COMMA reduce production expr -> simple 
-- On CASE reduce production expr -> simple 
-- On BUS reduce production expr -> simple 
-- On BEGIN reduce production expr -> simple 
-- On ASSIGN reduce production expr -> simple 
-- On ABSTRACT reduce production expr -> simple 

State 220:
expr -> simple RELOP . simple [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On PLUS shift to state 195
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On MINUS shift to state 200
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 216
-- On simple shift to state 221
-- On name shift to state 211
-- On factor shift to state 224
-- On designator shift to state 213

State 221:
expr -> simple RELOP simple . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
simple -> simple . PLUS term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
simple -> simple . MINUS term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
simple -> simple . ADDOP term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On PLUS shift to state 222
-- On MINUS shift to state 225
-- On ADDOP shift to state 227
-- On error reduce production expr -> simple RELOP simple 
-- On WITH reduce production expr -> simple RELOP simple 
-- On WHILE reduce production expr -> simple RELOP simple 
-- On VBAR reduce production expr -> simple RELOP simple 
-- On VAR reduce production expr -> simple RELOP simple 
-- On UPARROW reduce production expr -> simple RELOP simple 
-- On UNTIL reduce production expr -> simple RELOP simple 
-- On TYPE reduce production expr -> simple RELOP simple 
-- On SUB reduce production expr -> simple RELOP simple 
-- On STAR reduce production expr -> simple RELOP simple 
-- On SEMI reduce production expr -> simple RELOP simple 
-- On RPAR reduce production expr -> simple RELOP simple 
-- On RETURN reduce production expr -> simple RELOP simple 
-- On REPEAT reduce production expr -> simple RELOP simple 
-- On RELOP reduce production expr -> simple RELOP simple 
-- On PROCEDURE reduce production expr -> simple RELOP simple 
-- On MULOP reduce production expr -> simple RELOP simple 
-- On LPAR reduce production expr -> simple RELOP simple 
-- On LOOP reduce production expr -> simple RELOP simple 
-- On LOCAL reduce production expr -> simple RELOP simple 
-- On IS reduce production expr -> simple RELOP simple 
-- On IF reduce production expr -> simple RELOP simple 
-- On IDENT reduce production expr -> simple RELOP simple 
-- On FOR reduce production expr -> simple RELOP simple 
-- On EXIT reduce production expr -> simple RELOP simple 
-- On EQUAL reduce production expr -> simple RELOP simple 
-- On END reduce production expr -> simple RELOP simple 
-- On ELSIF reduce production expr -> simple RELOP simple 
-- On ELSE reduce production expr -> simple RELOP simple 
-- On DOT reduce production expr -> simple RELOP simple 
-- On CONST reduce production expr -> simple RELOP simple 
-- On COMMA reduce production expr -> simple RELOP simple 
-- On CASE reduce production expr -> simple RELOP simple 
-- On BUS reduce production expr -> simple RELOP simple 
-- On BEGIN reduce production expr -> simple RELOP simple 
-- On ASSIGN reduce production expr -> simple RELOP simple 
-- On ABSTRACT reduce production expr -> simple RELOP simple 

State 222:
simple -> simple PLUS . term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 223
-- On name shift to state 211
-- On factor shift to state 224
-- On designator shift to state 213

State 223:
simple -> simple PLUS term . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . MULOP factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . STAR factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STAR shift to state 210
-- On MULOP shift to state 217
-- On error reduce production simple -> simple PLUS term 
-- On WITH reduce production simple -> simple PLUS term 
-- On WHILE reduce production simple -> simple PLUS term 
-- On VBAR reduce production simple -> simple PLUS term 
-- On VAR reduce production simple -> simple PLUS term 
-- On UPARROW reduce production simple -> simple PLUS term 
-- On UNTIL reduce production simple -> simple PLUS term 
-- On TYPE reduce production simple -> simple PLUS term 
-- On SUB reduce production simple -> simple PLUS term 
-- On SEMI reduce production simple -> simple PLUS term 
-- On RPAR reduce production simple -> simple PLUS term 
-- On RETURN reduce production simple -> simple PLUS term 
-- On REPEAT reduce production simple -> simple PLUS term 
-- On RELOP reduce production simple -> simple PLUS term 
-- On PROCEDURE reduce production simple -> simple PLUS term 
-- On PLUS reduce production simple -> simple PLUS term 
-- On MINUS reduce production simple -> simple PLUS term 
-- On LPAR reduce production simple -> simple PLUS term 
-- On LOOP reduce production simple -> simple PLUS term 
-- On LOCAL reduce production simple -> simple PLUS term 
-- On IS reduce production simple -> simple PLUS term 
-- On IF reduce production simple -> simple PLUS term 
-- On IDENT reduce production simple -> simple PLUS term 
-- On FOR reduce production simple -> simple PLUS term 
-- On EXIT reduce production simple -> simple PLUS term 
-- On EQUAL reduce production simple -> simple PLUS term 
-- On END reduce production simple -> simple PLUS term 
-- On ELSIF reduce production simple -> simple PLUS term 
-- On ELSE reduce production simple -> simple PLUS term 
-- On DOT reduce production simple -> simple PLUS term 
-- On CONST reduce production simple -> simple PLUS term 
-- On COMMA reduce production simple -> simple PLUS term 
-- On CASE reduce production simple -> simple PLUS term 
-- On BUS reduce production simple -> simple PLUS term 
-- On BEGIN reduce production simple -> simple PLUS term 
-- On ASSIGN reduce production simple -> simple PLUS term 
-- On ADDOP reduce production simple -> simple PLUS term 
-- On ABSTRACT reduce production simple -> simple PLUS term 

State 224:
term -> factor . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production term -> factor 
-- On WITH reduce production term -> factor 
-- On WHILE reduce production term -> factor 
-- On VBAR reduce production term -> factor 
-- On VAR reduce production term -> factor 
-- On UPARROW reduce production term -> factor 
-- On UNTIL reduce production term -> factor 
-- On TYPE reduce production term -> factor 
-- On SUB reduce production term -> factor 
-- On STAR reduce production term -> factor 
-- On SEMI reduce production term -> factor 
-- On RPAR reduce production term -> factor 
-- On RETURN reduce production term -> factor 
-- On REPEAT reduce production term -> factor 
-- On RELOP reduce production term -> factor 
-- On PROCEDURE reduce production term -> factor 
-- On PLUS reduce production term -> factor 
-- On MULOP reduce production term -> factor 
-- On MINUS reduce production term -> factor 
-- On LPAR reduce production term -> factor 
-- On LOOP reduce production term -> factor 
-- On LOCAL reduce production term -> factor 
-- On IS reduce production term -> factor 
-- On IF reduce production term -> factor 
-- On IDENT reduce production term -> factor 
-- On FOR reduce production term -> factor 
-- On EXIT reduce production term -> factor 
-- On EQUAL reduce production term -> factor 
-- On END reduce production term -> factor 
-- On ELSIF reduce production term -> factor 
-- On ELSE reduce production term -> factor 
-- On DOT reduce production term -> factor 
-- On CONST reduce production term -> factor 
-- On COMMA reduce production term -> factor 
-- On CASE reduce production term -> factor 
-- On BUS reduce production term -> factor 
-- On BEGIN reduce production term -> factor 
-- On ASSIGN reduce production term -> factor 
-- On ADDOP reduce production term -> factor 
-- On ABSTRACT reduce production term -> factor 

State 225:
simple -> simple MINUS . term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 226
-- On name shift to state 211
-- On factor shift to state 224
-- On designator shift to state 213

State 226:
simple -> simple MINUS term . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . MULOP factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . STAR factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STAR shift to state 210
-- On MULOP shift to state 217
-- On error reduce production simple -> simple MINUS term 
-- On WITH reduce production simple -> simple MINUS term 
-- On WHILE reduce production simple -> simple MINUS term 
-- On VBAR reduce production simple -> simple MINUS term 
-- On VAR reduce production simple -> simple MINUS term 
-- On UPARROW reduce production simple -> simple MINUS term 
-- On UNTIL reduce production simple -> simple MINUS term 
-- On TYPE reduce production simple -> simple MINUS term 
-- On SUB reduce production simple -> simple MINUS term 
-- On SEMI reduce production simple -> simple MINUS term 
-- On RPAR reduce production simple -> simple MINUS term 
-- On RETURN reduce production simple -> simple MINUS term 
-- On REPEAT reduce production simple -> simple MINUS term 
-- On RELOP reduce production simple -> simple MINUS term 
-- On PROCEDURE reduce production simple -> simple MINUS term 
-- On PLUS reduce production simple -> simple MINUS term 
-- On MINUS reduce production simple -> simple MINUS term 
-- On LPAR reduce production simple -> simple MINUS term 
-- On LOOP reduce production simple -> simple MINUS term 
-- On LOCAL reduce production simple -> simple MINUS term 
-- On IS reduce production simple -> simple MINUS term 
-- On IF reduce production simple -> simple MINUS term 
-- On IDENT reduce production simple -> simple MINUS term 
-- On FOR reduce production simple -> simple MINUS term 
-- On EXIT reduce production simple -> simple MINUS term 
-- On EQUAL reduce production simple -> simple MINUS term 
-- On END reduce production simple -> simple MINUS term 
-- On ELSIF reduce production simple -> simple MINUS term 
-- On ELSE reduce production simple -> simple MINUS term 
-- On DOT reduce production simple -> simple MINUS term 
-- On CONST reduce production simple -> simple MINUS term 
-- On COMMA reduce production simple -> simple MINUS term 
-- On CASE reduce production simple -> simple MINUS term 
-- On BUS reduce production simple -> simple MINUS term 
-- On BEGIN reduce production simple -> simple MINUS term 
-- On ASSIGN reduce production simple -> simple MINUS term 
-- On ADDOP reduce production simple -> simple MINUS term 
-- On ABSTRACT reduce production simple -> simple MINUS term 

State 227:
simple -> simple ADDOP . term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 228
-- On name shift to state 211
-- On factor shift to state 224
-- On designator shift to state 213

State 228:
simple -> simple ADDOP term . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . MULOP factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . STAR factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STAR shift to state 210
-- On MULOP shift to state 217
-- On error reduce production simple -> simple ADDOP term 
-- On WITH reduce production simple -> simple ADDOP term 
-- On WHILE reduce production simple -> simple ADDOP term 
-- On VBAR reduce production simple -> simple ADDOP term 
-- On VAR reduce production simple -> simple ADDOP term 
-- On UPARROW reduce production simple -> simple ADDOP term 
-- On UNTIL reduce production simple -> simple ADDOP term 
-- On TYPE reduce production simple -> simple ADDOP term 
-- On SUB reduce production simple -> simple ADDOP term 
-- On SEMI reduce production simple -> simple ADDOP term 
-- On RPAR reduce production simple -> simple ADDOP term 
-- On RETURN reduce production simple -> simple ADDOP term 
-- On REPEAT reduce production simple -> simple ADDOP term 
-- On RELOP reduce production simple -> simple ADDOP term 
-- On PROCEDURE reduce production simple -> simple ADDOP term 
-- On PLUS reduce production simple -> simple ADDOP term 
-- On MINUS reduce production simple -> simple ADDOP term 
-- On LPAR reduce production simple -> simple ADDOP term 
-- On LOOP reduce production simple -> simple ADDOP term 
-- On LOCAL reduce production simple -> simple ADDOP term 
-- On IS reduce production simple -> simple ADDOP term 
-- On IF reduce production simple -> simple ADDOP term 
-- On IDENT reduce production simple -> simple ADDOP term 
-- On FOR reduce production simple -> simple ADDOP term 
-- On EXIT reduce production simple -> simple ADDOP term 
-- On EQUAL reduce production simple -> simple ADDOP term 
-- On END reduce production simple -> simple ADDOP term 
-- On ELSIF reduce production simple -> simple ADDOP term 
-- On ELSE reduce production simple -> simple ADDOP term 
-- On DOT reduce production simple -> simple ADDOP term 
-- On CONST reduce production simple -> simple ADDOP term 
-- On COMMA reduce production simple -> simple ADDOP term 
-- On CASE reduce production simple -> simple ADDOP term 
-- On BUS reduce production simple -> simple ADDOP term 
-- On BEGIN reduce production simple -> simple ADDOP term 
-- On ASSIGN reduce production simple -> simple ADDOP term 
-- On ADDOP reduce production simple -> simple ADDOP term 
-- On ABSTRACT reduce production simple -> simple ADDOP term 

State 229:
expr -> simple IS . qualid [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On IDENT shift to state 148
-- On qualid shift to state 230

State 230:
expr -> simple IS qualid . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production expr -> simple IS qualid 
-- On WITH reduce production expr -> simple IS qualid 
-- On WHILE reduce production expr -> simple IS qualid 
-- On VBAR reduce production expr -> simple IS qualid 
-- On VAR reduce production expr -> simple IS qualid 
-- On UPARROW reduce production expr -> simple IS qualid 
-- On UNTIL reduce production expr -> simple IS qualid 
-- On TYPE reduce production expr -> simple IS qualid 
-- On SUB reduce production expr -> simple IS qualid 
-- On STAR reduce production expr -> simple IS qualid 
-- On SEMI reduce production expr -> simple IS qualid 
-- On RPAR reduce production expr -> simple IS qualid 
-- On RETURN reduce production expr -> simple IS qualid 
-- On REPEAT reduce production expr -> simple IS qualid 
-- On RELOP reduce production expr -> simple IS qualid 
-- On PROCEDURE reduce production expr -> simple IS qualid 
-- On PLUS reduce production expr -> simple IS qualid 
-- On MULOP reduce production expr -> simple IS qualid 
-- On MINUS reduce production expr -> simple IS qualid 
-- On LPAR reduce production expr -> simple IS qualid 
-- On LOOP reduce production expr -> simple IS qualid 
-- On LOCAL reduce production expr -> simple IS qualid 
-- On IS reduce production expr -> simple IS qualid 
-- On IF reduce production expr -> simple IS qualid 
-- On IDENT reduce production expr -> simple IS qualid 
-- On FOR reduce production expr -> simple IS qualid 
-- On EXIT reduce production expr -> simple IS qualid 
-- On EQUAL reduce production expr -> simple IS qualid 
-- On END reduce production expr -> simple IS qualid 
-- On ELSIF reduce production expr -> simple IS qualid 
-- On ELSE reduce production expr -> simple IS qualid 
-- On DOT reduce production expr -> simple IS qualid 
-- On CONST reduce production expr -> simple IS qualid 
-- On COMMA reduce production expr -> simple IS qualid 
-- On CASE reduce production expr -> simple IS qualid 
-- On BUS reduce production expr -> simple IS qualid 
-- On BEGIN reduce production expr -> simple IS qualid 
-- On ASSIGN reduce production expr -> simple IS qualid 
-- On ADDOP reduce production expr -> simple IS qualid 
-- On ABSTRACT reduce production expr -> simple IS qualid 

State 231:
expr -> simple EQUAL . simple [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On PLUS shift to state 195
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On MINUS shift to state 200
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 216
-- On simple shift to state 232
-- On name shift to state 211
-- On factor shift to state 224
-- On designator shift to state 213

State 232:
expr -> simple EQUAL simple . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
simple -> simple . PLUS term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
simple -> simple . MINUS term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
simple -> simple . ADDOP term [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On PLUS shift to state 222
-- On MINUS shift to state 225
-- On ADDOP shift to state 227
-- On error reduce production expr -> simple EQUAL simple 
-- On WITH reduce production expr -> simple EQUAL simple 
-- On WHILE reduce production expr -> simple EQUAL simple 
-- On VBAR reduce production expr -> simple EQUAL simple 
-- On VAR reduce production expr -> simple EQUAL simple 
-- On UPARROW reduce production expr -> simple EQUAL simple 
-- On UNTIL reduce production expr -> simple EQUAL simple 
-- On TYPE reduce production expr -> simple EQUAL simple 
-- On SUB reduce production expr -> simple EQUAL simple 
-- On STAR reduce production expr -> simple EQUAL simple 
-- On SEMI reduce production expr -> simple EQUAL simple 
-- On RPAR reduce production expr -> simple EQUAL simple 
-- On RETURN reduce production expr -> simple EQUAL simple 
-- On REPEAT reduce production expr -> simple EQUAL simple 
-- On RELOP reduce production expr -> simple EQUAL simple 
-- On PROCEDURE reduce production expr -> simple EQUAL simple 
-- On MULOP reduce production expr -> simple EQUAL simple 
-- On LPAR reduce production expr -> simple EQUAL simple 
-- On LOOP reduce production expr -> simple EQUAL simple 
-- On LOCAL reduce production expr -> simple EQUAL simple 
-- On IS reduce production expr -> simple EQUAL simple 
-- On IF reduce production expr -> simple EQUAL simple 
-- On IDENT reduce production expr -> simple EQUAL simple 
-- On FOR reduce production expr -> simple EQUAL simple 
-- On EXIT reduce production expr -> simple EQUAL simple 
-- On EQUAL reduce production expr -> simple EQUAL simple 
-- On END reduce production expr -> simple EQUAL simple 
-- On ELSIF reduce production expr -> simple EQUAL simple 
-- On ELSE reduce production expr -> simple EQUAL simple 
-- On DOT reduce production expr -> simple EQUAL simple 
-- On CONST reduce production expr -> simple EQUAL simple 
-- On COMMA reduce production expr -> simple EQUAL simple 
-- On CASE reduce production expr -> simple EQUAL simple 
-- On BUS reduce production expr -> simple EQUAL simple 
-- On BEGIN reduce production expr -> simple EQUAL simple 
-- On ASSIGN reduce production expr -> simple EQUAL simple 
-- On ABSTRACT reduce production expr -> simple EQUAL simple 

State 233:
designator -> designator SUB exprs . BUS [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
designator -> designator SUB exprs . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On BUS shift to state 234
-- On error reduce production designator -> designator SUB exprs 
-- On WITH reduce production designator -> designator SUB exprs 
-- On WHILE reduce production designator -> designator SUB exprs 
-- On VBAR reduce production designator -> designator SUB exprs 
-- On VAR reduce production designator -> designator SUB exprs 
-- On UPARROW reduce production designator -> designator SUB exprs 
-- On UNTIL reduce production designator -> designator SUB exprs 
-- On TYPE reduce production designator -> designator SUB exprs 
-- On SUB reduce production designator -> designator SUB exprs 
-- On STAR reduce production designator -> designator SUB exprs 
-- On SEMI reduce production designator -> designator SUB exprs 
-- On RPAR reduce production designator -> designator SUB exprs 
-- On RETURN reduce production designator -> designator SUB exprs 
-- On REPEAT reduce production designator -> designator SUB exprs 
-- On RELOP reduce production designator -> designator SUB exprs 
-- On PROCEDURE reduce production designator -> designator SUB exprs 
-- On PLUS reduce production designator -> designator SUB exprs 
-- On MULOP reduce production designator -> designator SUB exprs 
-- On MINUS reduce production designator -> designator SUB exprs 
-- On LPAR reduce production designator -> designator SUB exprs 
-- On LOOP reduce production designator -> designator SUB exprs 
-- On LOCAL reduce production designator -> designator SUB exprs 
-- On IS reduce production designator -> designator SUB exprs 
-- On IF reduce production designator -> designator SUB exprs 
-- On IDENT reduce production designator -> designator SUB exprs 
-- On FOR reduce production designator -> designator SUB exprs 
-- On EXIT reduce production designator -> designator SUB exprs 
-- On EQUAL reduce production designator -> designator SUB exprs 
-- On END reduce production designator -> designator SUB exprs 
-- On ELSIF reduce production designator -> designator SUB exprs 
-- On ELSE reduce production designator -> designator SUB exprs 
-- On DOT reduce production designator -> designator SUB exprs 
-- On CONST reduce production designator -> designator SUB exprs 
-- On COMMA reduce production designator -> designator SUB exprs 
-- On CASE reduce production designator -> designator SUB exprs 
-- On BEGIN reduce production designator -> designator SUB exprs 
-- On ASSIGN reduce production designator -> designator SUB exprs 
-- On ADDOP reduce production designator -> designator SUB exprs 
-- On ABSTRACT reduce production designator -> designator SUB exprs 

State 234:
designator -> designator SUB exprs BUS . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production designator -> designator SUB exprs BUS 
-- On WITH reduce production designator -> designator SUB exprs BUS 
-- On WHILE reduce production designator -> designator SUB exprs BUS 
-- On VBAR reduce production designator -> designator SUB exprs BUS 
-- On VAR reduce production designator -> designator SUB exprs BUS 
-- On UPARROW reduce production designator -> designator SUB exprs BUS 
-- On UNTIL reduce production designator -> designator SUB exprs BUS 
-- On TYPE reduce production designator -> designator SUB exprs BUS 
-- On SUB reduce production designator -> designator SUB exprs BUS 
-- On STAR reduce production designator -> designator SUB exprs BUS 
-- On SEMI reduce production designator -> designator SUB exprs BUS 
-- On RPAR reduce production designator -> designator SUB exprs BUS 
-- On RETURN reduce production designator -> designator SUB exprs BUS 
-- On REPEAT reduce production designator -> designator SUB exprs BUS 
-- On RELOP reduce production designator -> designator SUB exprs BUS 
-- On PROCEDURE reduce production designator -> designator SUB exprs BUS 
-- On PLUS reduce production designator -> designator SUB exprs BUS 
-- On MULOP reduce production designator -> designator SUB exprs BUS 
-- On MINUS reduce production designator -> designator SUB exprs BUS 
-- On LPAR reduce production designator -> designator SUB exprs BUS 
-- On LOOP reduce production designator -> designator SUB exprs BUS 
-- On LOCAL reduce production designator -> designator SUB exprs BUS 
-- On IS reduce production designator -> designator SUB exprs BUS 
-- On IF reduce production designator -> designator SUB exprs BUS 
-- On IDENT reduce production designator -> designator SUB exprs BUS 
-- On FOR reduce production designator -> designator SUB exprs BUS 
-- On EXIT reduce production designator -> designator SUB exprs BUS 
-- On EQUAL reduce production designator -> designator SUB exprs BUS 
-- On END reduce production designator -> designator SUB exprs BUS 
-- On ELSIF reduce production designator -> designator SUB exprs BUS 
-- On ELSE reduce production designator -> designator SUB exprs BUS 
-- On DOT reduce production designator -> designator SUB exprs BUS 
-- On CONST reduce production designator -> designator SUB exprs BUS 
-- On COMMA reduce production designator -> designator SUB exprs BUS 
-- On CASE reduce production designator -> designator SUB exprs BUS 
-- On BUS reduce production designator -> designator SUB exprs BUS 
-- On BEGIN reduce production designator -> designator SUB exprs BUS 
-- On ASSIGN reduce production designator -> designator SUB exprs BUS 
-- On ADDOP reduce production designator -> designator SUB exprs BUS 
-- On ABSTRACT reduce production designator -> designator SUB exprs BUS 

State 235:
exprs -> expr . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
exprs -> expr . COMMA exprs [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On COMMA shift to state 236
-- On error reduce production exprs -> expr 
-- On WITH reduce production exprs -> expr 
-- On WHILE reduce production exprs -> expr 
-- On VBAR reduce production exprs -> expr 
-- On VAR reduce production exprs -> expr 
-- On UPARROW reduce production exprs -> expr 
-- On UNTIL reduce production exprs -> expr 
-- On TYPE reduce production exprs -> expr 
-- On SUB reduce production exprs -> expr 
-- On STAR reduce production exprs -> expr 
-- On SEMI reduce production exprs -> expr 
-- On RPAR reduce production exprs -> expr 
-- On RETURN reduce production exprs -> expr 
-- On REPEAT reduce production exprs -> expr 
-- On RELOP reduce production exprs -> expr 
-- On PROCEDURE reduce production exprs -> expr 
-- On PLUS reduce production exprs -> expr 
-- On MULOP reduce production exprs -> expr 
-- On MINUS reduce production exprs -> expr 
-- On LPAR reduce production exprs -> expr 
-- On LOOP reduce production exprs -> expr 
-- On LOCAL reduce production exprs -> expr 
-- On IS reduce production exprs -> expr 
-- On IF reduce production exprs -> expr 
-- On IDENT reduce production exprs -> expr 
-- On FOR reduce production exprs -> expr 
-- On EXIT reduce production exprs -> expr 
-- On EQUAL reduce production exprs -> expr 
-- On END reduce production exprs -> expr 
-- On ELSIF reduce production exprs -> expr 
-- On ELSE reduce production exprs -> expr 
-- On DOT reduce production exprs -> expr 
-- On CONST reduce production exprs -> expr 
-- On CASE reduce production exprs -> expr 
-- On BUS reduce production exprs -> expr 
-- On BEGIN reduce production exprs -> expr 
-- On ASSIGN reduce production exprs -> expr 
-- On ADDOP reduce production exprs -> expr 
-- On ABSTRACT reduce production exprs -> expr 

State 236:
exprs -> expr COMMA . exprs [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On PLUS shift to state 195
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On MINUS shift to state 200
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 216
-- On simple shift to state 219
-- On name shift to state 211
-- On factor shift to state 224
-- On exprs shift to state 237
-- On expr shift to state 235
-- On designator shift to state 213

State 237:
exprs -> expr COMMA exprs . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production exprs -> expr COMMA exprs 
-- On WITH reduce production exprs -> expr COMMA exprs 
-- On WHILE reduce production exprs -> expr COMMA exprs 
-- On VBAR reduce production exprs -> expr COMMA exprs 
-- On VAR reduce production exprs -> expr COMMA exprs 
-- On UPARROW reduce production exprs -> expr COMMA exprs 
-- On UNTIL reduce production exprs -> expr COMMA exprs 
-- On TYPE reduce production exprs -> expr COMMA exprs 
-- On SUB reduce production exprs -> expr COMMA exprs 
-- On STAR reduce production exprs -> expr COMMA exprs 
-- On SEMI reduce production exprs -> expr COMMA exprs 
-- On RPAR reduce production exprs -> expr COMMA exprs 
-- On RETURN reduce production exprs -> expr COMMA exprs 
-- On REPEAT reduce production exprs -> expr COMMA exprs 
-- On RELOP reduce production exprs -> expr COMMA exprs 
-- On PROCEDURE reduce production exprs -> expr COMMA exprs 
-- On PLUS reduce production exprs -> expr COMMA exprs 
-- On MULOP reduce production exprs -> expr COMMA exprs 
-- On MINUS reduce production exprs -> expr COMMA exprs 
-- On LPAR reduce production exprs -> expr COMMA exprs 
-- On LOOP reduce production exprs -> expr COMMA exprs 
-- On LOCAL reduce production exprs -> expr COMMA exprs 
-- On IS reduce production exprs -> expr COMMA exprs 
-- On IF reduce production exprs -> expr COMMA exprs 
-- On IDENT reduce production exprs -> expr COMMA exprs 
-- On FOR reduce production exprs -> expr COMMA exprs 
-- On EXIT reduce production exprs -> expr COMMA exprs 
-- On EQUAL reduce production exprs -> expr COMMA exprs 
-- On END reduce production exprs -> expr COMMA exprs 
-- On ELSIF reduce production exprs -> expr COMMA exprs 
-- On ELSE reduce production exprs -> expr COMMA exprs 
-- On DOT reduce production exprs -> expr COMMA exprs 
-- On CONST reduce production exprs -> expr COMMA exprs 
-- On COMMA reduce production exprs -> expr COMMA exprs 
-- On CASE reduce production exprs -> expr COMMA exprs 
-- On BUS reduce production exprs -> expr COMMA exprs 
-- On BEGIN reduce production exprs -> expr COMMA exprs 
-- On ASSIGN reduce production exprs -> expr COMMA exprs 
-- On ADDOP reduce production exprs -> expr COMMA exprs 
-- On ABSTRACT reduce production exprs -> expr COMMA exprs 

State 238:
actuals -> LPAR . RPAR [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
actuals -> LPAR . exprs RPAR [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
actuals -> LPAR . exprs [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STRING shift to state 194
-- On RPAR shift to state 239
-- On PLUS shift to state 195
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On MINUS shift to state 200
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 216
-- On simple shift to state 219
-- On name shift to state 211
-- On factor shift to state 224
-- On exprs shift to state 240
-- On expr shift to state 235
-- On designator shift to state 213

State 239:
actuals -> LPAR RPAR . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production actuals -> LPAR RPAR 
-- On WITH reduce production actuals -> LPAR RPAR 
-- On WHILE reduce production actuals -> LPAR RPAR 
-- On VBAR reduce production actuals -> LPAR RPAR 
-- On VAR reduce production actuals -> LPAR RPAR 
-- On UPARROW reduce production actuals -> LPAR RPAR 
-- On UNTIL reduce production actuals -> LPAR RPAR 
-- On TYPE reduce production actuals -> LPAR RPAR 
-- On SUB reduce production actuals -> LPAR RPAR 
-- On STAR reduce production actuals -> LPAR RPAR 
-- On SEMI reduce production actuals -> LPAR RPAR 
-- On RPAR reduce production actuals -> LPAR RPAR 
-- On RETURN reduce production actuals -> LPAR RPAR 
-- On REPEAT reduce production actuals -> LPAR RPAR 
-- On RELOP reduce production actuals -> LPAR RPAR 
-- On PROCEDURE reduce production actuals -> LPAR RPAR 
-- On PLUS reduce production actuals -> LPAR RPAR 
-- On MULOP reduce production actuals -> LPAR RPAR 
-- On MINUS reduce production actuals -> LPAR RPAR 
-- On LPAR reduce production actuals -> LPAR RPAR 
-- On LOOP reduce production actuals -> LPAR RPAR 
-- On LOCAL reduce production actuals -> LPAR RPAR 
-- On IS reduce production actuals -> LPAR RPAR 
-- On IF reduce production actuals -> LPAR RPAR 
-- On IDENT reduce production actuals -> LPAR RPAR 
-- On FOR reduce production actuals -> LPAR RPAR 
-- On EXIT reduce production actuals -> LPAR RPAR 
-- On EQUAL reduce production actuals -> LPAR RPAR 
-- On END reduce production actuals -> LPAR RPAR 
-- On ELSIF reduce production actuals -> LPAR RPAR 
-- On ELSE reduce production actuals -> LPAR RPAR 
-- On DOT reduce production actuals -> LPAR RPAR 
-- On CONST reduce production actuals -> LPAR RPAR 
-- On COMMA reduce production actuals -> LPAR RPAR 
-- On CASE reduce production actuals -> LPAR RPAR 
-- On BUS reduce production actuals -> LPAR RPAR 
-- On BEGIN reduce production actuals -> LPAR RPAR 
-- On ASSIGN reduce production actuals -> LPAR RPAR 
-- On ADDOP reduce production actuals -> LPAR RPAR 
-- On ABSTRACT reduce production actuals -> LPAR RPAR 

State 240:
actuals -> LPAR exprs . RPAR [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
actuals -> LPAR exprs . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On RPAR shift to state 241
-- On error reduce production actuals -> LPAR exprs 
-- On WITH reduce production actuals -> LPAR exprs 
-- On WHILE reduce production actuals -> LPAR exprs 
-- On VBAR reduce production actuals -> LPAR exprs 
-- On VAR reduce production actuals -> LPAR exprs 
-- On UPARROW reduce production actuals -> LPAR exprs 
-- On UNTIL reduce production actuals -> LPAR exprs 
-- On TYPE reduce production actuals -> LPAR exprs 
-- On SUB reduce production actuals -> LPAR exprs 
-- On STAR reduce production actuals -> LPAR exprs 
-- On SEMI reduce production actuals -> LPAR exprs 
-- On RETURN reduce production actuals -> LPAR exprs 
-- On REPEAT reduce production actuals -> LPAR exprs 
-- On RELOP reduce production actuals -> LPAR exprs 
-- On PROCEDURE reduce production actuals -> LPAR exprs 
-- On PLUS reduce production actuals -> LPAR exprs 
-- On MULOP reduce production actuals -> LPAR exprs 
-- On MINUS reduce production actuals -> LPAR exprs 
-- On LPAR reduce production actuals -> LPAR exprs 
-- On LOOP reduce production actuals -> LPAR exprs 
-- On LOCAL reduce production actuals -> LPAR exprs 
-- On IS reduce production actuals -> LPAR exprs 
-- On IF reduce production actuals -> LPAR exprs 
-- On IDENT reduce production actuals -> LPAR exprs 
-- On FOR reduce production actuals -> LPAR exprs 
-- On EXIT reduce production actuals -> LPAR exprs 
-- On EQUAL reduce production actuals -> LPAR exprs 
-- On END reduce production actuals -> LPAR exprs 
-- On ELSIF reduce production actuals -> LPAR exprs 
-- On ELSE reduce production actuals -> LPAR exprs 
-- On DOT reduce production actuals -> LPAR exprs 
-- On CONST reduce production actuals -> LPAR exprs 
-- On COMMA reduce production actuals -> LPAR exprs 
-- On CASE reduce production actuals -> LPAR exprs 
-- On BUS reduce production actuals -> LPAR exprs 
-- On BEGIN reduce production actuals -> LPAR exprs 
-- On ASSIGN reduce production actuals -> LPAR exprs 
-- On ADDOP reduce production actuals -> LPAR exprs 
-- On ABSTRACT reduce production actuals -> LPAR exprs 

State 241:
actuals -> LPAR exprs RPAR . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production actuals -> LPAR exprs RPAR 
-- On WITH reduce production actuals -> LPAR exprs RPAR 
-- On WHILE reduce production actuals -> LPAR exprs RPAR 
-- On VBAR reduce production actuals -> LPAR exprs RPAR 
-- On VAR reduce production actuals -> LPAR exprs RPAR 
-- On UPARROW reduce production actuals -> LPAR exprs RPAR 
-- On UNTIL reduce production actuals -> LPAR exprs RPAR 
-- On TYPE reduce production actuals -> LPAR exprs RPAR 
-- On SUB reduce production actuals -> LPAR exprs RPAR 
-- On STAR reduce production actuals -> LPAR exprs RPAR 
-- On SEMI reduce production actuals -> LPAR exprs RPAR 
-- On RPAR reduce production actuals -> LPAR exprs RPAR 
-- On RETURN reduce production actuals -> LPAR exprs RPAR 
-- On REPEAT reduce production actuals -> LPAR exprs RPAR 
-- On RELOP reduce production actuals -> LPAR exprs RPAR 
-- On PROCEDURE reduce production actuals -> LPAR exprs RPAR 
-- On PLUS reduce production actuals -> LPAR exprs RPAR 
-- On MULOP reduce production actuals -> LPAR exprs RPAR 
-- On MINUS reduce production actuals -> LPAR exprs RPAR 
-- On LPAR reduce production actuals -> LPAR exprs RPAR 
-- On LOOP reduce production actuals -> LPAR exprs RPAR 
-- On LOCAL reduce production actuals -> LPAR exprs RPAR 
-- On IS reduce production actuals -> LPAR exprs RPAR 
-- On IF reduce production actuals -> LPAR exprs RPAR 
-- On IDENT reduce production actuals -> LPAR exprs RPAR 
-- On FOR reduce production actuals -> LPAR exprs RPAR 
-- On EXIT reduce production actuals -> LPAR exprs RPAR 
-- On EQUAL reduce production actuals -> LPAR exprs RPAR 
-- On END reduce production actuals -> LPAR exprs RPAR 
-- On ELSIF reduce production actuals -> LPAR exprs RPAR 
-- On ELSE reduce production actuals -> LPAR exprs RPAR 
-- On DOT reduce production actuals -> LPAR exprs RPAR 
-- On CONST reduce production actuals -> LPAR exprs RPAR 
-- On COMMA reduce production actuals -> LPAR exprs RPAR 
-- On CASE reduce production actuals -> LPAR exprs RPAR 
-- On BUS reduce production actuals -> LPAR exprs RPAR 
-- On BEGIN reduce production actuals -> LPAR exprs RPAR 
-- On ASSIGN reduce production actuals -> LPAR exprs RPAR 
-- On ADDOP reduce production actuals -> LPAR exprs RPAR 
-- On ABSTRACT reduce production actuals -> LPAR exprs RPAR 

State 242:
designator -> designator DOT . name [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On IDENT shift to state 8
-- On name shift to state 243

State 243:
designator -> designator DOT name . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production designator -> designator DOT name 
-- On WITH reduce production designator -> designator DOT name 
-- On WHILE reduce production designator -> designator DOT name 
-- On VBAR reduce production designator -> designator DOT name 
-- On VAR reduce production designator -> designator DOT name 
-- On UPARROW reduce production designator -> designator DOT name 
-- On UNTIL reduce production designator -> designator DOT name 
-- On TYPE reduce production designator -> designator DOT name 
-- On SUB reduce production designator -> designator DOT name 
-- On STAR reduce production designator -> designator DOT name 
-- On SEMI reduce production designator -> designator DOT name 
-- On RPAR reduce production designator -> designator DOT name 
-- On RETURN reduce production designator -> designator DOT name 
-- On REPEAT reduce production designator -> designator DOT name 
-- On RELOP reduce production designator -> designator DOT name 
-- On PROCEDURE reduce production designator -> designator DOT name 
-- On PLUS reduce production designator -> designator DOT name 
-- On MULOP reduce production designator -> designator DOT name 
-- On MINUS reduce production designator -> designator DOT name 
-- On LPAR reduce production designator -> designator DOT name 
-- On LOOP reduce production designator -> designator DOT name 
-- On LOCAL reduce production designator -> designator DOT name 
-- On IS reduce production designator -> designator DOT name 
-- On IF reduce production designator -> designator DOT name 
-- On IDENT reduce production designator -> designator DOT name 
-- On FOR reduce production designator -> designator DOT name 
-- On EXIT reduce production designator -> designator DOT name 
-- On EQUAL reduce production designator -> designator DOT name 
-- On END reduce production designator -> designator DOT name 
-- On ELSIF reduce production designator -> designator DOT name 
-- On ELSE reduce production designator -> designator DOT name 
-- On DOT reduce production designator -> designator DOT name 
-- On CONST reduce production designator -> designator DOT name 
-- On COMMA reduce production designator -> designator DOT name 
-- On CASE reduce production designator -> designator DOT name 
-- On BUS reduce production designator -> designator DOT name 
-- On BEGIN reduce production designator -> designator DOT name 
-- On ASSIGN reduce production designator -> designator DOT name 
-- On ADDOP reduce production designator -> designator DOT name 
-- On ABSTRACT reduce production designator -> designator DOT name 

State 244:
designator -> designator actuals . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production designator -> designator actuals 
-- On WITH reduce production designator -> designator actuals 
-- On WHILE reduce production designator -> designator actuals 
-- On VBAR reduce production designator -> designator actuals 
-- On VAR reduce production designator -> designator actuals 
-- On UPARROW reduce production designator -> designator actuals 
-- On UNTIL reduce production designator -> designator actuals 
-- On TYPE reduce production designator -> designator actuals 
-- On SUB reduce production designator -> designator actuals 
-- On STAR reduce production designator -> designator actuals 
-- On SEMI reduce production designator -> designator actuals 
-- On RPAR reduce production designator -> designator actuals 
-- On RETURN reduce production designator -> designator actuals 
-- On REPEAT reduce production designator -> designator actuals 
-- On RELOP reduce production designator -> designator actuals 
-- On PROCEDURE reduce production designator -> designator actuals 
-- On PLUS reduce production designator -> designator actuals 
-- On MULOP reduce production designator -> designator actuals 
-- On MINUS reduce production designator -> designator actuals 
-- On LPAR reduce production designator -> designator actuals 
-- On LOOP reduce production designator -> designator actuals 
-- On LOCAL reduce production designator -> designator actuals 
-- On IS reduce production designator -> designator actuals 
-- On IF reduce production designator -> designator actuals 
-- On IDENT reduce production designator -> designator actuals 
-- On FOR reduce production designator -> designator actuals 
-- On EXIT reduce production designator -> designator actuals 
-- On EQUAL reduce production designator -> designator actuals 
-- On END reduce production designator -> designator actuals 
-- On ELSIF reduce production designator -> designator actuals 
-- On ELSE reduce production designator -> designator actuals 
-- On DOT reduce production designator -> designator actuals 
-- On CONST reduce production designator -> designator actuals 
-- On COMMA reduce production designator -> designator actuals 
-- On CASE reduce production designator -> designator actuals 
-- On BUS reduce production designator -> designator actuals 
-- On BEGIN reduce production designator -> designator actuals 
-- On ASSIGN reduce production designator -> designator actuals 
-- On ADDOP reduce production designator -> designator actuals 
-- On ABSTRACT reduce production designator -> designator actuals 

State 245:
factor -> LPAR expr . RPAR [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
factor -> LPAR expr . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On RPAR shift to state 246
-- On error reduce production factor -> LPAR expr 
-- On WITH reduce production factor -> LPAR expr 
-- On WHILE reduce production factor -> LPAR expr 
-- On VBAR reduce production factor -> LPAR expr 
-- On VAR reduce production factor -> LPAR expr 
-- On UPARROW reduce production factor -> LPAR expr 
-- On UNTIL reduce production factor -> LPAR expr 
-- On TYPE reduce production factor -> LPAR expr 
-- On SUB reduce production factor -> LPAR expr 
-- On STAR reduce production factor -> LPAR expr 
-- On SEMI reduce production factor -> LPAR expr 
-- On RETURN reduce production factor -> LPAR expr 
-- On REPEAT reduce production factor -> LPAR expr 
-- On RELOP reduce production factor -> LPAR expr 
-- On PROCEDURE reduce production factor -> LPAR expr 
-- On PLUS reduce production factor -> LPAR expr 
-- On MULOP reduce production factor -> LPAR expr 
-- On MINUS reduce production factor -> LPAR expr 
-- On LPAR reduce production factor -> LPAR expr 
-- On LOOP reduce production factor -> LPAR expr 
-- On LOCAL reduce production factor -> LPAR expr 
-- On IS reduce production factor -> LPAR expr 
-- On IF reduce production factor -> LPAR expr 
-- On IDENT reduce production factor -> LPAR expr 
-- On FOR reduce production factor -> LPAR expr 
-- On EXIT reduce production factor -> LPAR expr 
-- On EQUAL reduce production factor -> LPAR expr 
-- On END reduce production factor -> LPAR expr 
-- On ELSIF reduce production factor -> LPAR expr 
-- On ELSE reduce production factor -> LPAR expr 
-- On DOT reduce production factor -> LPAR expr 
-- On CONST reduce production factor -> LPAR expr 
-- On COMMA reduce production factor -> LPAR expr 
-- On CASE reduce production factor -> LPAR expr 
-- On BUS reduce production factor -> LPAR expr 
-- On BEGIN reduce production factor -> LPAR expr 
-- On ASSIGN reduce production factor -> LPAR expr 
-- On ADDOP reduce production factor -> LPAR expr 
-- On ABSTRACT reduce production factor -> LPAR expr 

State 246:
factor -> LPAR expr RPAR . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production factor -> LPAR expr RPAR 
-- On WITH reduce production factor -> LPAR expr RPAR 
-- On WHILE reduce production factor -> LPAR expr RPAR 
-- On VBAR reduce production factor -> LPAR expr RPAR 
-- On VAR reduce production factor -> LPAR expr RPAR 
-- On UPARROW reduce production factor -> LPAR expr RPAR 
-- On UNTIL reduce production factor -> LPAR expr RPAR 
-- On TYPE reduce production factor -> LPAR expr RPAR 
-- On SUB reduce production factor -> LPAR expr RPAR 
-- On STAR reduce production factor -> LPAR expr RPAR 
-- On SEMI reduce production factor -> LPAR expr RPAR 
-- On RPAR reduce production factor -> LPAR expr RPAR 
-- On RETURN reduce production factor -> LPAR expr RPAR 
-- On REPEAT reduce production factor -> LPAR expr RPAR 
-- On RELOP reduce production factor -> LPAR expr RPAR 
-- On PROCEDURE reduce production factor -> LPAR expr RPAR 
-- On PLUS reduce production factor -> LPAR expr RPAR 
-- On MULOP reduce production factor -> LPAR expr RPAR 
-- On MINUS reduce production factor -> LPAR expr RPAR 
-- On LPAR reduce production factor -> LPAR expr RPAR 
-- On LOOP reduce production factor -> LPAR expr RPAR 
-- On LOCAL reduce production factor -> LPAR expr RPAR 
-- On IS reduce production factor -> LPAR expr RPAR 
-- On IF reduce production factor -> LPAR expr RPAR 
-- On IDENT reduce production factor -> LPAR expr RPAR 
-- On FOR reduce production factor -> LPAR expr RPAR 
-- On EXIT reduce production factor -> LPAR expr RPAR 
-- On EQUAL reduce production factor -> LPAR expr RPAR 
-- On END reduce production factor -> LPAR expr RPAR 
-- On ELSIF reduce production factor -> LPAR expr RPAR 
-- On ELSE reduce production factor -> LPAR expr RPAR 
-- On DOT reduce production factor -> LPAR expr RPAR 
-- On CONST reduce production factor -> LPAR expr RPAR 
-- On COMMA reduce production factor -> LPAR expr RPAR 
-- On CASE reduce production factor -> LPAR expr RPAR 
-- On BUS reduce production factor -> LPAR expr RPAR 
-- On BEGIN reduce production factor -> LPAR expr RPAR 
-- On ASSIGN reduce production factor -> LPAR expr RPAR 
-- On ADDOP reduce production factor -> LPAR expr RPAR 
-- On ABSTRACT reduce production factor -> LPAR expr RPAR 

State 247:
factor -> NOT factor . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On error reduce production factor -> NOT factor 
-- On WITH reduce production factor -> NOT factor 
-- On WHILE reduce production factor -> NOT factor 
-- On VBAR reduce production factor -> NOT factor 
-- On VAR reduce production factor -> NOT factor 
-- On UPARROW reduce production factor -> NOT factor 
-- On UNTIL reduce production factor -> NOT factor 
-- On TYPE reduce production factor -> NOT factor 
-- On SUB reduce production factor -> NOT factor 
-- On STAR reduce production factor -> NOT factor 
-- On SEMI reduce production factor -> NOT factor 
-- On RPAR reduce production factor -> NOT factor 
-- On RETURN reduce production factor -> NOT factor 
-- On REPEAT reduce production factor -> NOT factor 
-- On RELOP reduce production factor -> NOT factor 
-- On PROCEDURE reduce production factor -> NOT factor 
-- On PLUS reduce production factor -> NOT factor 
-- On MULOP reduce production factor -> NOT factor 
-- On MINUS reduce production factor -> NOT factor 
-- On LPAR reduce production factor -> NOT factor 
-- On LOOP reduce production factor -> NOT factor 
-- On LOCAL reduce production factor -> NOT factor 
-- On IS reduce production factor -> NOT factor 
-- On IF reduce production factor -> NOT factor 
-- On IDENT reduce production factor -> NOT factor 
-- On FOR reduce production factor -> NOT factor 
-- On EXIT reduce production factor -> NOT factor 
-- On EQUAL reduce production factor -> NOT factor 
-- On END reduce production factor -> NOT factor 
-- On ELSIF reduce production factor -> NOT factor 
-- On ELSE reduce production factor -> NOT factor 
-- On DOT reduce production factor -> NOT factor 
-- On CONST reduce production factor -> NOT factor 
-- On COMMA reduce production factor -> NOT factor 
-- On CASE reduce production factor -> NOT factor 
-- On BUS reduce production factor -> NOT factor 
-- On BEGIN reduce production factor -> NOT factor 
-- On ASSIGN reduce production factor -> NOT factor 
-- On ADDOP reduce production factor -> NOT factor 
-- On ABSTRACT reduce production factor -> NOT factor 

State 248:
simple -> PLUS term . [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . MULOP factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
term -> term . STAR factor [ error WITH WHILE VBAR VAR UPARROW UNTIL TYPE SUB STAR SEMI RPAR RETURN REPEAT RELOP PROCEDURE PLUS MULOP MINUS LPAR LOOP LOCAL IS IF IDENT FOR EXIT EQUAL END ELSIF ELSE DOT CONST COMMA CASE BUS BEGIN ASSIGN ADDOP ABSTRACT ]
-- On STAR shift to state 210
-- On MULOP shift to state 217
-- On error reduce production simple -> PLUS term 
-- On WITH reduce production simple -> PLUS term 
-- On WHILE reduce production simple -> PLUS term 
-- On VBAR reduce production simple -> PLUS term 
-- On VAR reduce production simple -> PLUS term 
-- On UPARROW reduce production simple -> PLUS term 
-- On UNTIL reduce production simple -> PLUS term 
-- On TYPE reduce production simple -> PLUS term 
-- On SUB reduce production simple -> PLUS term 
-- On SEMI reduce production simple -> PLUS term 
-- On RPAR reduce production simple -> PLUS term 
-- On RETURN reduce production simple -> PLUS term 
-- On REPEAT reduce production simple -> PLUS term 
-- On RELOP reduce production simple -> PLUS term 
-- On PROCEDURE reduce production simple -> PLUS term 
-- On PLUS reduce production simple -> PLUS term 
-- On MINUS reduce production simple -> PLUS term 
-- On LPAR reduce production simple -> PLUS term 
-- On LOOP reduce production simple -> PLUS term 
-- On LOCAL reduce production simple -> PLUS term 
-- On IS reduce production simple -> PLUS term 
-- On IF reduce production simple -> PLUS term 
-- On IDENT reduce production simple -> PLUS term 
-- On FOR reduce production simple -> PLUS term 
-- On EXIT reduce production simple -> PLUS term 
-- On EQUAL reduce production simple -> PLUS term 
-- On END reduce production simple -> PLUS term 
-- On ELSIF reduce production simple -> PLUS term 
-- On ELSE reduce production simple -> PLUS term 
-- On DOT reduce production simple -> PLUS term 
-- On CONST reduce production simple -> PLUS term 
-- On COMMA reduce production simple -> PLUS term 
-- On CASE reduce production simple -> PLUS term 
-- On BUS reduce production simple -> PLUS term 
-- On BEGIN reduce production simple -> PLUS term 
-- On ASSIGN reduce production simple -> PLUS term 
-- On ADDOP reduce production simple -> PLUS term 
-- On ABSTRACT reduce production simple -> PLUS term 

State 249:
const_decl -> defid EQUAL expr . semi [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On SEMI shift to state 177
-- On COMMA shift to state 178
-- On semi shift to state 250
-- On error reduce production semi -> 
-- On VAR reduce production semi -> 
-- On TYPE reduce production semi -> 
-- On PROCEDURE reduce production semi -> 
-- On IDENT reduce production semi -> 
-- On END reduce production semi -> 
-- On CONST reduce production semi -> 
-- On BEGIN reduce production semi -> 
-- On ABSTRACT reduce production semi -> 

State 250:
const_decl -> defid EQUAL expr semi . [ error VAR TYPE PROCEDURE IDENT END CONST BEGIN ABSTRACT ]
-- On error reduce production const_decl -> defid EQUAL expr semi 
-- On VAR reduce production const_decl -> defid EQUAL expr semi 
-- On TYPE reduce production const_decl -> defid EQUAL expr semi 
-- On PROCEDURE reduce production const_decl -> defid EQUAL expr semi 
-- On IDENT reduce production const_decl -> defid EQUAL expr semi 
-- On END reduce production const_decl -> defid EQUAL expr semi 
-- On CONST reduce production const_decl -> defid EQUAL expr semi 
-- On BEGIN reduce production const_decl -> defid EQUAL expr semi 
-- On ABSTRACT reduce production const_decl -> defid EQUAL expr semi 

State 251:
decl -> CONST const_decls . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production decl -> CONST const_decls 
-- On VAR reduce production decl -> CONST const_decls 
-- On TYPE reduce production decl -> CONST const_decls 
-- On PROCEDURE reduce production decl -> CONST const_decls 
-- On END reduce production decl -> CONST const_decls 
-- On CONST reduce production decl -> CONST const_decls 
-- On BEGIN reduce production decl -> CONST const_decls 
-- On ABSTRACT reduce production decl -> CONST const_decls 

State 252:
const_decls -> const_decl . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
const_decls -> const_decl . const_decls [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On IDENT shift to state 19
-- On defid shift to state 192
-- On const_decls shift to state 253
-- On const_decl shift to state 252
-- On error reduce production const_decls -> const_decl 
-- On VAR reduce production const_decls -> const_decl 
-- On TYPE reduce production const_decls -> const_decl 
-- On PROCEDURE reduce production const_decls -> const_decl 
-- On END reduce production const_decls -> const_decl 
-- On CONST reduce production const_decls -> const_decl 
-- On BEGIN reduce production const_decls -> const_decl 
-- On ABSTRACT reduce production const_decls -> const_decl 

State 253:
const_decls -> const_decl const_decls . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production const_decls -> const_decl const_decls 
-- On VAR reduce production const_decls -> const_decl const_decls 
-- On TYPE reduce production const_decls -> const_decl const_decls 
-- On PROCEDURE reduce production const_decls -> const_decl const_decls 
-- On END reduce production const_decls -> const_decl const_decls 
-- On CONST reduce production const_decls -> const_decl const_decls 
-- On BEGIN reduce production const_decls -> const_decl const_decls 
-- On ABSTRACT reduce production const_decls -> const_decl const_decls 

State 254:
body -> BEGIN . stmts [ END ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 372
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 255:
stmts -> stmts_b . [ VBAR UNTIL END ELSIF ELSE ]
stmts_a -> stmts_b . SEMI [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF IDENT FOR EXIT END ELSIF ELSE CASE ]
stmts_a -> stmts_b . error SEMI [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF IDENT FOR EXIT END ELSIF ELSE CASE ]
stmts_b -> stmts_b . missing stmt1 [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error shift to state 256
-- On SEMI shift to state 258
-- On missing shift to state 259
-- On WITH reduce production missing -> 
-- On WHILE reduce production missing -> 
-- On VBAR reduce production stmts -> stmts_b 
-- On UNTIL reduce production stmts -> stmts_b 
-- On RETURN reduce production missing -> 
-- On REPEAT reduce production missing -> 
-- On LOOP reduce production missing -> 
-- On LOCAL reduce production missing -> 
-- On IF reduce production missing -> 
-- On FOR reduce production missing -> 
-- On EXIT reduce production missing -> 
-- On END reduce production stmts -> stmts_b 
-- On ELSIF reduce production stmts -> stmts_b 
-- On ELSE reduce production stmts -> stmts_b 
-- On CASE reduce production missing -> 

State 256:
stmts_a -> stmts_b error . SEMI [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF IDENT FOR EXIT END ELSIF ELSE CASE ]
-- On SEMI shift to state 257

State 257:
stmts_a -> stmts_b error SEMI . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF IDENT FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmts_a -> stmts_b error SEMI 
-- On WITH reduce production stmts_a -> stmts_b error SEMI 
-- On WHILE reduce production stmts_a -> stmts_b error SEMI 
-- On VBAR reduce production stmts_a -> stmts_b error SEMI 
-- On UNTIL reduce production stmts_a -> stmts_b error SEMI 
-- On SEMI reduce production stmts_a -> stmts_b error SEMI 
-- On RETURN reduce production stmts_a -> stmts_b error SEMI 
-- On REPEAT reduce production stmts_a -> stmts_b error SEMI 
-- On LOOP reduce production stmts_a -> stmts_b error SEMI 
-- On LOCAL reduce production stmts_a -> stmts_b error SEMI 
-- On IF reduce production stmts_a -> stmts_b error SEMI 
-- On IDENT reduce production stmts_a -> stmts_b error SEMI 
-- On FOR reduce production stmts_a -> stmts_b error SEMI 
-- On EXIT reduce production stmts_a -> stmts_b error SEMI 
-- On END reduce production stmts_a -> stmts_b error SEMI 
-- On ELSIF reduce production stmts_a -> stmts_b error SEMI 
-- On ELSE reduce production stmts_a -> stmts_b error SEMI 
-- On CASE reduce production stmts_a -> stmts_b error SEMI 

State 258:
stmts_a -> stmts_b SEMI . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF IDENT FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmts_a -> stmts_b SEMI 
-- On WITH reduce production stmts_a -> stmts_b SEMI 
-- On WHILE reduce production stmts_a -> stmts_b SEMI 
-- On VBAR reduce production stmts_a -> stmts_b SEMI 
-- On UNTIL reduce production stmts_a -> stmts_b SEMI 
-- On SEMI reduce production stmts_a -> stmts_b SEMI 
-- On RETURN reduce production stmts_a -> stmts_b SEMI 
-- On REPEAT reduce production stmts_a -> stmts_b SEMI 
-- On LOOP reduce production stmts_a -> stmts_b SEMI 
-- On LOCAL reduce production stmts_a -> stmts_b SEMI 
-- On IF reduce production stmts_a -> stmts_b SEMI 
-- On IDENT reduce production stmts_a -> stmts_b SEMI 
-- On FOR reduce production stmts_a -> stmts_b SEMI 
-- On EXIT reduce production stmts_a -> stmts_b SEMI 
-- On END reduce production stmts_a -> stmts_b SEMI 
-- On ELSIF reduce production stmts_a -> stmts_b SEMI 
-- On ELSE reduce production stmts_a -> stmts_b SEMI 
-- On CASE reduce production stmts_a -> stmts_b SEMI 

State 259:
stmts_b -> stmts_b missing . stmt1 [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error shift to state 260
-- On WITH shift to state 261
-- On WHILE shift to state 265
-- On RETURN shift to state 274
-- On REPEAT shift to state 276
-- On LOOP shift to state 280
-- On LOCAL shift to state 283
-- On IF shift to state 309
-- On FOR shift to state 315
-- On EXIT shift to state 327
-- On CASE shift to state 328
-- On stmt1 shift to state 371
-- On if_chain shift to state 346

State 260:
stmt1 -> error . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> error 
-- On WITH reduce production stmt1 -> error 
-- On WHILE reduce production stmt1 -> error 
-- On VBAR reduce production stmt1 -> error 
-- On UNTIL reduce production stmt1 -> error 
-- On SEMI reduce production stmt1 -> error 
-- On RETURN reduce production stmt1 -> error 
-- On REPEAT reduce production stmt1 -> error 
-- On LOOP reduce production stmt1 -> error 
-- On LOCAL reduce production stmt1 -> error 
-- On IF reduce production stmt1 -> error 
-- On FOR reduce production stmt1 -> error 
-- On EXIT reduce production stmt1 -> error 
-- On END reduce production stmt1 -> error 
-- On ELSIF reduce production stmt1 -> error 
-- On ELSE reduce production stmt1 -> error 
-- On CASE reduce production stmt1 -> error 

State 261:
stmt1 -> WITH . with_branches else_part END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On IDENT shift to state 2
-- On with_branches shift to state 262
-- On with_branch shift to state 363
-- On name shift to state 366

State 262:
stmt1 -> WITH with_branches . else_part END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On ELSE shift to state 263
-- On else_part shift to state 361
-- On END reduce production else_part -> 

State 263:
else_part -> ELSE . stmts [ END ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 360
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 264:
stmts -> stmts_a . [ VBAR UNTIL END ELSIF ELSE ]
stmts_a -> stmts_a . SEMI [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF IDENT FOR EXIT END ELSIF ELSE CASE ]
stmts_b -> stmts_a . stmt0 [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
stmts_b -> stmts_a . stmt1 [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error shift to state 260
-- On WITH shift to state 261
-- On WHILE shift to state 265
-- On SEMI shift to state 273
-- On RETURN shift to state 274
-- On REPEAT shift to state 276
-- On LOOP shift to state 280
-- On LOCAL shift to state 283
-- On IF shift to state 309
-- On IDENT shift to state 8
-- On FOR shift to state 315
-- On EXIT shift to state 327
-- On CASE shift to state 328
-- On stmt1 shift to state 344
-- On stmt0 shift to state 345
-- On name shift to state 211
-- On if_chain shift to state 346
-- On designator shift to state 357
-- On VBAR reduce production stmts -> stmts_a 
-- On UNTIL reduce production stmts -> stmts_a 
-- On END reduce production stmts -> stmts_a 
-- On ELSIF reduce production stmts -> stmts_a 
-- On ELSE reduce production stmts -> stmts_a 

State 265:
stmt1 -> WHILE . expr DO stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
stmt1 -> WHILE . error stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error shift to state 266
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 269
-- On designator shift to state 76

State 266:
stmt1 -> WHILE error . stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 267
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 267:
stmt1 -> WHILE error stmts . END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On END shift to state 268

State 268:
stmt1 -> WHILE error stmts END . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> WHILE error stmts END 
-- On WITH reduce production stmt1 -> WHILE error stmts END 
-- On WHILE reduce production stmt1 -> WHILE error stmts END 
-- On VBAR reduce production stmt1 -> WHILE error stmts END 
-- On UNTIL reduce production stmt1 -> WHILE error stmts END 
-- On SEMI reduce production stmt1 -> WHILE error stmts END 
-- On RETURN reduce production stmt1 -> WHILE error stmts END 
-- On REPEAT reduce production stmt1 -> WHILE error stmts END 
-- On LOOP reduce production stmt1 -> WHILE error stmts END 
-- On LOCAL reduce production stmt1 -> WHILE error stmts END 
-- On IF reduce production stmt1 -> WHILE error stmts END 
-- On FOR reduce production stmt1 -> WHILE error stmts END 
-- On EXIT reduce production stmt1 -> WHILE error stmts END 
-- On END reduce production stmt1 -> WHILE error stmts END 
-- On ELSIF reduce production stmt1 -> WHILE error stmts END 
-- On ELSE reduce production stmt1 -> WHILE error stmts END 
-- On CASE reduce production stmt1 -> WHILE error stmts END 

State 269:
stmt1 -> WHILE expr . DO stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On DO shift to state 270

State 270:
stmt1 -> WHILE expr DO . stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 271
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 271:
stmt1 -> WHILE expr DO stmts . END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On END shift to state 272

State 272:
stmt1 -> WHILE expr DO stmts END . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> WHILE expr DO stmts END 
-- On WITH reduce production stmt1 -> WHILE expr DO stmts END 
-- On WHILE reduce production stmt1 -> WHILE expr DO stmts END 
-- On VBAR reduce production stmt1 -> WHILE expr DO stmts END 
-- On UNTIL reduce production stmt1 -> WHILE expr DO stmts END 
-- On SEMI reduce production stmt1 -> WHILE expr DO stmts END 
-- On RETURN reduce production stmt1 -> WHILE expr DO stmts END 
-- On REPEAT reduce production stmt1 -> WHILE expr DO stmts END 
-- On LOOP reduce production stmt1 -> WHILE expr DO stmts END 
-- On LOCAL reduce production stmt1 -> WHILE expr DO stmts END 
-- On IF reduce production stmt1 -> WHILE expr DO stmts END 
-- On FOR reduce production stmt1 -> WHILE expr DO stmts END 
-- On EXIT reduce production stmt1 -> WHILE expr DO stmts END 
-- On END reduce production stmt1 -> WHILE expr DO stmts END 
-- On ELSIF reduce production stmt1 -> WHILE expr DO stmts END 
-- On ELSE reduce production stmt1 -> WHILE expr DO stmts END 
-- On CASE reduce production stmt1 -> WHILE expr DO stmts END 

State 273:
stmts_a -> stmts_a SEMI . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF IDENT FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmts_a -> stmts_a SEMI 
-- On WITH reduce production stmts_a -> stmts_a SEMI 
-- On WHILE reduce production stmts_a -> stmts_a SEMI 
-- On VBAR reduce production stmts_a -> stmts_a SEMI 
-- On UNTIL reduce production stmts_a -> stmts_a SEMI 
-- On SEMI reduce production stmts_a -> stmts_a SEMI 
-- On RETURN reduce production stmts_a -> stmts_a SEMI 
-- On REPEAT reduce production stmts_a -> stmts_a SEMI 
-- On LOOP reduce production stmts_a -> stmts_a SEMI 
-- On LOCAL reduce production stmts_a -> stmts_a SEMI 
-- On IF reduce production stmts_a -> stmts_a SEMI 
-- On IDENT reduce production stmts_a -> stmts_a SEMI 
-- On FOR reduce production stmts_a -> stmts_a SEMI 
-- On EXIT reduce production stmts_a -> stmts_a SEMI 
-- On END reduce production stmts_a -> stmts_a SEMI 
-- On ELSIF reduce production stmts_a -> stmts_a SEMI 
-- On ELSE reduce production stmts_a -> stmts_a SEMI 
-- On CASE reduce production stmts_a -> stmts_a SEMI 

State 274:
stmt1 -> RETURN . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
stmt1 -> RETURN . expr [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On STRING shift to state 194
-- On PLUS shift to state 195
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On MINUS shift to state 200
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 216
-- On simple shift to state 219
-- On name shift to state 211
-- On factor shift to state 224
-- On expr shift to state 275
-- On designator shift to state 213
-- On error reduce production stmt1 -> RETURN 
-- On WITH reduce production stmt1 -> RETURN 
-- On WHILE reduce production stmt1 -> RETURN 
-- On VBAR reduce production stmt1 -> RETURN 
-- On UNTIL reduce production stmt1 -> RETURN 
-- On SEMI reduce production stmt1 -> RETURN 
-- On RETURN reduce production stmt1 -> RETURN 
-- On REPEAT reduce production stmt1 -> RETURN 
-- On LOOP reduce production stmt1 -> RETURN 
-- On LOCAL reduce production stmt1 -> RETURN 
-- On IF reduce production stmt1 -> RETURN 
-- On FOR reduce production stmt1 -> RETURN 
-- On EXIT reduce production stmt1 -> RETURN 
-- On END reduce production stmt1 -> RETURN 
-- On ELSIF reduce production stmt1 -> RETURN 
-- On ELSE reduce production stmt1 -> RETURN 
-- On CASE reduce production stmt1 -> RETURN 

State 275:
stmt1 -> RETURN expr . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> RETURN expr 
-- On WITH reduce production stmt1 -> RETURN expr 
-- On WHILE reduce production stmt1 -> RETURN expr 
-- On VBAR reduce production stmt1 -> RETURN expr 
-- On UNTIL reduce production stmt1 -> RETURN expr 
-- On SEMI reduce production stmt1 -> RETURN expr 
-- On RETURN reduce production stmt1 -> RETURN expr 
-- On REPEAT reduce production stmt1 -> RETURN expr 
-- On LOOP reduce production stmt1 -> RETURN expr 
-- On LOCAL reduce production stmt1 -> RETURN expr 
-- On IF reduce production stmt1 -> RETURN expr 
-- On FOR reduce production stmt1 -> RETURN expr 
-- On EXIT reduce production stmt1 -> RETURN expr 
-- On END reduce production stmt1 -> RETURN expr 
-- On ELSIF reduce production stmt1 -> RETURN expr 
-- On ELSE reduce production stmt1 -> RETURN expr 
-- On CASE reduce production stmt1 -> RETURN expr 

State 276:
stmt1 -> REPEAT . stmts UNTIL expr [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 277
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On UNTIL reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 277:
stmt1 -> REPEAT stmts . UNTIL expr [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On UNTIL shift to state 278

State 278:
stmt1 -> REPEAT stmts UNTIL . expr [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On STRING shift to state 194
-- On PLUS shift to state 195
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On MINUS shift to state 200
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 216
-- On simple shift to state 219
-- On name shift to state 211
-- On factor shift to state 224
-- On expr shift to state 279
-- On designator shift to state 213

State 279:
stmt1 -> REPEAT stmts UNTIL expr . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On WITH reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On WHILE reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On VBAR reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On UNTIL reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On SEMI reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On RETURN reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On REPEAT reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On LOOP reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On LOCAL reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On IF reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On FOR reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On EXIT reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On END reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On ELSIF reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On ELSE reduce production stmt1 -> REPEAT stmts UNTIL expr 
-- On CASE reduce production stmt1 -> REPEAT stmts UNTIL expr 

State 280:
stmt1 -> LOOP . stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 281
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 281:
stmt1 -> LOOP stmts . END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On END shift to state 282

State 282:
stmt1 -> LOOP stmts END . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> LOOP stmts END 
-- On WITH reduce production stmt1 -> LOOP stmts END 
-- On WHILE reduce production stmt1 -> LOOP stmts END 
-- On VBAR reduce production stmt1 -> LOOP stmts END 
-- On UNTIL reduce production stmt1 -> LOOP stmts END 
-- On SEMI reduce production stmt1 -> LOOP stmts END 
-- On RETURN reduce production stmt1 -> LOOP stmts END 
-- On REPEAT reduce production stmt1 -> LOOP stmts END 
-- On LOOP reduce production stmt1 -> LOOP stmts END 
-- On LOCAL reduce production stmt1 -> LOOP stmts END 
-- On IF reduce production stmt1 -> LOOP stmts END 
-- On FOR reduce production stmt1 -> LOOP stmts END 
-- On EXIT reduce production stmt1 -> LOOP stmts END 
-- On END reduce production stmt1 -> LOOP stmts END 
-- On ELSIF reduce production stmt1 -> LOOP stmts END 
-- On ELSE reduce production stmt1 -> LOOP stmts END 
-- On CASE reduce production stmt1 -> LOOP stmts END 

State 283:
stmt1 -> LOCAL . decls body END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On decls shift to state 284
-- On error reduce production decls -> 
-- On VAR reduce production decls -> 
-- On TYPE reduce production decls -> 
-- On PROCEDURE reduce production decls -> 
-- On END reduce production decls -> 
-- On CONST reduce production decls -> 
-- On BEGIN reduce production decls -> 
-- On ABSTRACT reduce production decls -> 

State 284:
decls -> decls . decl [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
stmt1 -> LOCAL decls . body END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error shift to state 16
-- On VAR shift to state 18
-- On TYPE shift to state 180
-- On PROCEDURE shift to state 188
-- On CONST shift to state 191
-- On BEGIN shift to state 254
-- On ABSTRACT shift to state 285
-- On proc shift to state 305
-- On decl shift to state 306
-- On body shift to state 307
-- On END reduce production body -> 

State 285:
proc -> ABSTRACT . PROCEDURE receiver defid params semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On PROCEDURE shift to state 286

State 286:
proc -> ABSTRACT PROCEDURE . receiver defid params semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On LPAR shift to state 287
-- On receiver shift to state 297

State 287:
receiver -> LPAR . defid COLON typename RPAR [ IDENT ]
receiver -> LPAR . VAR defid COLON typename RPAR [ IDENT ]
-- On VAR shift to state 288
-- On IDENT shift to state 19
-- On defid shift to state 293

State 288:
receiver -> LPAR VAR . defid COLON typename RPAR [ IDENT ]
-- On IDENT shift to state 19
-- On defid shift to state 289

State 289:
receiver -> LPAR VAR defid . COLON typename RPAR [ IDENT ]
-- On COLON shift to state 290

State 290:
receiver -> LPAR VAR defid COLON . typename RPAR [ IDENT ]
-- On IDENT shift to state 37
-- On typename shift to state 291
-- On qualid shift to state 124

State 291:
receiver -> LPAR VAR defid COLON typename . RPAR [ IDENT ]
-- On RPAR shift to state 292

State 292:
receiver -> LPAR VAR defid COLON typename RPAR . [ IDENT ]
-- On IDENT reduce production receiver -> LPAR VAR defid COLON typename RPAR 

State 293:
receiver -> LPAR defid . COLON typename RPAR [ IDENT ]
-- On COLON shift to state 294

State 294:
receiver -> LPAR defid COLON . typename RPAR [ IDENT ]
-- On IDENT shift to state 37
-- On typename shift to state 295
-- On qualid shift to state 124

State 295:
receiver -> LPAR defid COLON typename . RPAR [ IDENT ]
-- On RPAR shift to state 296

State 296:
receiver -> LPAR defid COLON typename RPAR . [ IDENT ]
-- On IDENT reduce production receiver -> LPAR defid COLON typename RPAR 

State 297:
proc -> ABSTRACT PROCEDURE receiver . defid params semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On IDENT shift to state 298
-- On defid shift to state 302

State 298:
defid -> IDENT . export [ error VAR TYPE SEMI PROCEDURE LPAR IS END CONST COMMA BEGIN ABSTRACT ]
-- On STAR shift to state 299
-- On MINUS shift to state 300
-- On export shift to state 301
-- On error reduce production export -> 
-- On VAR reduce production export -> 
-- On TYPE reduce production export -> 
-- On SEMI reduce production export -> 
-- On PROCEDURE reduce production export -> 
-- On LPAR reduce production export -> 
-- On IS reduce production export -> 
-- On END reduce production export -> 
-- On CONST reduce production export -> 
-- On COMMA reduce production export -> 
-- On BEGIN reduce production export -> 
-- On ABSTRACT reduce production export -> 

State 299:
export -> STAR . [ error VAR TYPE SEMI PROCEDURE LPAR IS END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production export -> STAR 
-- On VAR reduce production export -> STAR 
-- On TYPE reduce production export -> STAR 
-- On SEMI reduce production export -> STAR 
-- On PROCEDURE reduce production export -> STAR 
-- On LPAR reduce production export -> STAR 
-- On IS reduce production export -> STAR 
-- On END reduce production export -> STAR 
-- On CONST reduce production export -> STAR 
-- On COMMA reduce production export -> STAR 
-- On BEGIN reduce production export -> STAR 
-- On ABSTRACT reduce production export -> STAR 

State 300:
export -> MINUS . [ error VAR TYPE SEMI PROCEDURE LPAR IS END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production export -> MINUS 
-- On VAR reduce production export -> MINUS 
-- On TYPE reduce production export -> MINUS 
-- On SEMI reduce production export -> MINUS 
-- On PROCEDURE reduce production export -> MINUS 
-- On LPAR reduce production export -> MINUS 
-- On IS reduce production export -> MINUS 
-- On END reduce production export -> MINUS 
-- On CONST reduce production export -> MINUS 
-- On COMMA reduce production export -> MINUS 
-- On BEGIN reduce production export -> MINUS 
-- On ABSTRACT reduce production export -> MINUS 

State 301:
defid -> IDENT export . [ error VAR TYPE SEMI PROCEDURE LPAR IS END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production defid -> IDENT export 
-- On VAR reduce production defid -> IDENT export 
-- On TYPE reduce production defid -> IDENT export 
-- On SEMI reduce production defid -> IDENT export 
-- On PROCEDURE reduce production defid -> IDENT export 
-- On LPAR reduce production defid -> IDENT export 
-- On IS reduce production defid -> IDENT export 
-- On END reduce production defid -> IDENT export 
-- On CONST reduce production defid -> IDENT export 
-- On COMMA reduce production defid -> IDENT export 
-- On BEGIN reduce production defid -> IDENT export 
-- On ABSTRACT reduce production defid -> IDENT export 

State 302:
proc -> ABSTRACT PROCEDURE receiver defid . params semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On LPAR shift to state 29
-- On params shift to state 303
-- On error reduce production params -> 
-- On VAR reduce production params -> 
-- On TYPE reduce production params -> 
-- On SEMI reduce production params -> 
-- On PROCEDURE reduce production params -> 
-- On END reduce production params -> 
-- On CONST reduce production params -> 
-- On COMMA reduce production params -> 
-- On BEGIN reduce production params -> 
-- On ABSTRACT reduce production params -> 

State 303:
proc -> ABSTRACT PROCEDURE receiver defid params . semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On SEMI shift to state 177
-- On COMMA shift to state 178
-- On semi shift to state 304
-- On error reduce production semi -> 
-- On VAR reduce production semi -> 
-- On TYPE reduce production semi -> 
-- On PROCEDURE reduce production semi -> 
-- On END reduce production semi -> 
-- On CONST reduce production semi -> 
-- On BEGIN reduce production semi -> 
-- On ABSTRACT reduce production semi -> 

State 304:
proc -> ABSTRACT PROCEDURE receiver defid params semi . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production proc -> ABSTRACT PROCEDURE receiver defid params semi 
-- On VAR reduce production proc -> ABSTRACT PROCEDURE receiver defid params semi 
-- On TYPE reduce production proc -> ABSTRACT PROCEDURE receiver defid params semi 
-- On PROCEDURE reduce production proc -> ABSTRACT PROCEDURE receiver defid params semi 
-- On END reduce production proc -> ABSTRACT PROCEDURE receiver defid params semi 
-- On CONST reduce production proc -> ABSTRACT PROCEDURE receiver defid params semi 
-- On BEGIN reduce production proc -> ABSTRACT PROCEDURE receiver defid params semi 
-- On ABSTRACT reduce production proc -> ABSTRACT PROCEDURE receiver defid params semi 

State 305:
decl -> proc . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production decl -> proc 
-- On VAR reduce production decl -> proc 
-- On TYPE reduce production decl -> proc 
-- On PROCEDURE reduce production decl -> proc 
-- On END reduce production decl -> proc 
-- On CONST reduce production decl -> proc 
-- On BEGIN reduce production decl -> proc 
-- On ABSTRACT reduce production decl -> proc 

State 306:
decls -> decls decl . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production decls -> decls decl 
-- On VAR reduce production decls -> decls decl 
-- On TYPE reduce production decls -> decls decl 
-- On PROCEDURE reduce production decls -> decls decl 
-- On END reduce production decls -> decls decl 
-- On CONST reduce production decls -> decls decl 
-- On BEGIN reduce production decls -> decls decl 
-- On ABSTRACT reduce production decls -> decls decl 

State 307:
stmt1 -> LOCAL decls body . END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On END shift to state 308

State 308:
stmt1 -> LOCAL decls body END . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> LOCAL decls body END 
-- On WITH reduce production stmt1 -> LOCAL decls body END 
-- On WHILE reduce production stmt1 -> LOCAL decls body END 
-- On VBAR reduce production stmt1 -> LOCAL decls body END 
-- On UNTIL reduce production stmt1 -> LOCAL decls body END 
-- On SEMI reduce production stmt1 -> LOCAL decls body END 
-- On RETURN reduce production stmt1 -> LOCAL decls body END 
-- On REPEAT reduce production stmt1 -> LOCAL decls body END 
-- On LOOP reduce production stmt1 -> LOCAL decls body END 
-- On LOCAL reduce production stmt1 -> LOCAL decls body END 
-- On IF reduce production stmt1 -> LOCAL decls body END 
-- On FOR reduce production stmt1 -> LOCAL decls body END 
-- On EXIT reduce production stmt1 -> LOCAL decls body END 
-- On END reduce production stmt1 -> LOCAL decls body END 
-- On ELSIF reduce production stmt1 -> LOCAL decls body END 
-- On ELSE reduce production stmt1 -> LOCAL decls body END 
-- On CASE reduce production stmt1 -> LOCAL decls body END 

State 309:
if_chain -> IF . expr THEN stmts [ END ELSIF ELSE ]
if_chain -> IF . error stmts [ END ELSIF ELSE ]
-- On error shift to state 310
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 312
-- On designator shift to state 76

State 310:
if_chain -> IF error . stmts [ END ELSIF ELSE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 311
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On ELSIF reduce production stmts_a -> 
-- On ELSE reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 311:
if_chain -> IF error stmts . [ END ELSIF ELSE ]
-- On END reduce production if_chain -> IF error stmts 
-- On ELSIF reduce production if_chain -> IF error stmts 
-- On ELSE reduce production if_chain -> IF error stmts 

State 312:
if_chain -> IF expr . THEN stmts [ END ELSIF ELSE ]
-- On THEN shift to state 313

State 313:
if_chain -> IF expr THEN . stmts [ END ELSIF ELSE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 314
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On ELSIF reduce production stmts_a -> 
-- On ELSE reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 314:
if_chain -> IF expr THEN stmts . [ END ELSIF ELSE ]
-- On END reduce production if_chain -> IF expr THEN stmts 
-- On ELSIF reduce production if_chain -> IF expr THEN stmts 
-- On ELSE reduce production if_chain -> IF expr THEN stmts 

State 315:
stmt1 -> FOR . designator ASSIGN expr TO expr by_part DO stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On IDENT shift to state 2
-- On name shift to state 74
-- On designator shift to state 316

State 316:
designator -> designator . UPARROW [ UPARROW SUB LPAR DOT ASSIGN ]
designator -> designator . SUB exprs BUS [ UPARROW SUB LPAR DOT ASSIGN ]
designator -> designator . SUB exprs [ UPARROW SUB LPAR DOT ASSIGN ]
designator -> designator . DOT name [ UPARROW SUB LPAR DOT ASSIGN ]
designator -> designator . actuals [ UPARROW SUB LPAR DOT ASSIGN ]
stmt1 -> FOR designator . ASSIGN expr TO expr by_part DO stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On UPARROW shift to state 77
-- On SUB shift to state 78
-- On LPAR shift to state 100
-- On DOT shift to state 104
-- On ASSIGN shift to state 317
-- On actuals shift to state 106

State 317:
stmt1 -> FOR designator ASSIGN . expr TO expr by_part DO stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 318
-- On designator shift to state 76

State 318:
stmt1 -> FOR designator ASSIGN expr . TO expr by_part DO stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On TO shift to state 319

State 319:
stmt1 -> FOR designator ASSIGN expr TO . expr by_part DO stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 320
-- On designator shift to state 76

State 320:
stmt1 -> FOR designator ASSIGN expr TO expr . by_part DO stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On BY shift to state 321
-- On by_part shift to state 323
-- On DO reduce production by_part -> 

State 321:
by_part -> BY . expr [ DO ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 322
-- On designator shift to state 76

State 322:
by_part -> BY expr . [ DO ]
-- On DO reduce production by_part -> BY expr 

State 323:
stmt1 -> FOR designator ASSIGN expr TO expr by_part . DO stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On DO shift to state 324

State 324:
stmt1 -> FOR designator ASSIGN expr TO expr by_part DO . stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 325
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 325:
stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts . END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On END shift to state 326

State 326:
stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On WITH reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On WHILE reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On VBAR reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On UNTIL reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On SEMI reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On RETURN reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On REPEAT reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On LOOP reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On LOCAL reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On IF reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On FOR reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On EXIT reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On END reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On ELSIF reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On ELSE reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 
-- On CASE reduce production stmt1 -> FOR designator ASSIGN expr TO expr by_part DO stmts END 

State 327:
stmt1 -> EXIT . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> EXIT 
-- On WITH reduce production stmt1 -> EXIT 
-- On WHILE reduce production stmt1 -> EXIT 
-- On VBAR reduce production stmt1 -> EXIT 
-- On UNTIL reduce production stmt1 -> EXIT 
-- On SEMI reduce production stmt1 -> EXIT 
-- On RETURN reduce production stmt1 -> EXIT 
-- On REPEAT reduce production stmt1 -> EXIT 
-- On LOOP reduce production stmt1 -> EXIT 
-- On LOCAL reduce production stmt1 -> EXIT 
-- On IF reduce production stmt1 -> EXIT 
-- On FOR reduce production stmt1 -> EXIT 
-- On EXIT reduce production stmt1 -> EXIT 
-- On END reduce production stmt1 -> EXIT 
-- On ELSIF reduce production stmt1 -> EXIT 
-- On ELSE reduce production stmt1 -> EXIT 
-- On CASE reduce production stmt1 -> EXIT 

State 328:
stmt1 -> CASE . expr OF case_arms else_part END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
stmt1 -> CASE . error case_arms else_part END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error shift to state 329
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 339
-- On designator shift to state 76

State 329:
stmt1 -> CASE error . case_arms else_part END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 107
-- On elements shift to state 330
-- On element shift to state 112
-- On designator shift to state 76
-- On case_arms shift to state 333
-- On case_arm shift to state 336
-- On VBAR reduce production case_arm -> 
-- On END reduce production case_arm -> 
-- On ELSE reduce production case_arm -> 

State 330:
case_arm -> elements . COLON stmts [ VBAR END ELSE ]
-- On COLON shift to state 331

State 331:
case_arm -> elements COLON . stmts [ VBAR END ELSE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 332
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On VBAR reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On ELSE reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 332:
case_arm -> elements COLON stmts . [ VBAR END ELSE ]
-- On VBAR reduce production case_arm -> elements COLON stmts 
-- On END reduce production case_arm -> elements COLON stmts 
-- On ELSE reduce production case_arm -> elements COLON stmts 

State 333:
stmt1 -> CASE error case_arms . else_part END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On ELSE shift to state 263
-- On else_part shift to state 334
-- On END reduce production else_part -> 

State 334:
stmt1 -> CASE error case_arms else_part . END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On END shift to state 335

State 335:
stmt1 -> CASE error case_arms else_part END . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> CASE error case_arms else_part END 
-- On WITH reduce production stmt1 -> CASE error case_arms else_part END 
-- On WHILE reduce production stmt1 -> CASE error case_arms else_part END 
-- On VBAR reduce production stmt1 -> CASE error case_arms else_part END 
-- On UNTIL reduce production stmt1 -> CASE error case_arms else_part END 
-- On SEMI reduce production stmt1 -> CASE error case_arms else_part END 
-- On RETURN reduce production stmt1 -> CASE error case_arms else_part END 
-- On REPEAT reduce production stmt1 -> CASE error case_arms else_part END 
-- On LOOP reduce production stmt1 -> CASE error case_arms else_part END 
-- On LOCAL reduce production stmt1 -> CASE error case_arms else_part END 
-- On IF reduce production stmt1 -> CASE error case_arms else_part END 
-- On FOR reduce production stmt1 -> CASE error case_arms else_part END 
-- On EXIT reduce production stmt1 -> CASE error case_arms else_part END 
-- On END reduce production stmt1 -> CASE error case_arms else_part END 
-- On ELSIF reduce production stmt1 -> CASE error case_arms else_part END 
-- On ELSE reduce production stmt1 -> CASE error case_arms else_part END 
-- On CASE reduce production stmt1 -> CASE error case_arms else_part END 

State 336:
case_arms -> case_arm . [ END ELSE ]
case_arms -> case_arm . VBAR case_arms [ END ELSE ]
-- On VBAR shift to state 337
-- On END reduce production case_arms -> case_arm 
-- On ELSE reduce production case_arms -> case_arm 

State 337:
case_arms -> case_arm VBAR . case_arms [ END ELSE ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 107
-- On elements shift to state 330
-- On element shift to state 112
-- On designator shift to state 76
-- On case_arms shift to state 338
-- On case_arm shift to state 336
-- On VBAR reduce production case_arm -> 
-- On END reduce production case_arm -> 
-- On ELSE reduce production case_arm -> 

State 338:
case_arms -> case_arm VBAR case_arms . [ END ELSE ]
-- On END reduce production case_arms -> case_arm VBAR case_arms 
-- On ELSE reduce production case_arms -> case_arm VBAR case_arms 

State 339:
stmt1 -> CASE expr . OF case_arms else_part END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On OF shift to state 340

State 340:
stmt1 -> CASE expr OF . case_arms else_part END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 107
-- On elements shift to state 330
-- On element shift to state 112
-- On designator shift to state 76
-- On case_arms shift to state 341
-- On case_arm shift to state 336
-- On VBAR reduce production case_arm -> 
-- On END reduce production case_arm -> 
-- On ELSE reduce production case_arm -> 

State 341:
stmt1 -> CASE expr OF case_arms . else_part END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On ELSE shift to state 263
-- On else_part shift to state 342
-- On END reduce production else_part -> 

State 342:
stmt1 -> CASE expr OF case_arms else_part . END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On END shift to state 343

State 343:
stmt1 -> CASE expr OF case_arms else_part END . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On WITH reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On WHILE reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On VBAR reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On UNTIL reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On SEMI reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On RETURN reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On REPEAT reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On LOOP reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On LOCAL reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On IF reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On FOR reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On EXIT reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On END reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On ELSIF reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On ELSE reduce production stmt1 -> CASE expr OF case_arms else_part END 
-- On CASE reduce production stmt1 -> CASE expr OF case_arms else_part END 

State 344:
stmts_b -> stmts_a stmt1 . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmts_b -> stmts_a stmt1 
-- On WITH reduce production stmts_b -> stmts_a stmt1 
-- On WHILE reduce production stmts_b -> stmts_a stmt1 
-- On VBAR reduce production stmts_b -> stmts_a stmt1 
-- On UNTIL reduce production stmts_b -> stmts_a stmt1 
-- On SEMI reduce production stmts_b -> stmts_a stmt1 
-- On RETURN reduce production stmts_b -> stmts_a stmt1 
-- On REPEAT reduce production stmts_b -> stmts_a stmt1 
-- On LOOP reduce production stmts_b -> stmts_a stmt1 
-- On LOCAL reduce production stmts_b -> stmts_a stmt1 
-- On IF reduce production stmts_b -> stmts_a stmt1 
-- On FOR reduce production stmts_b -> stmts_a stmt1 
-- On EXIT reduce production stmts_b -> stmts_a stmt1 
-- On END reduce production stmts_b -> stmts_a stmt1 
-- On ELSIF reduce production stmts_b -> stmts_a stmt1 
-- On ELSE reduce production stmts_b -> stmts_a stmt1 
-- On CASE reduce production stmts_b -> stmts_a stmt1 

State 345:
stmts_b -> stmts_a stmt0 . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmts_b -> stmts_a stmt0 
-- On WITH reduce production stmts_b -> stmts_a stmt0 
-- On WHILE reduce production stmts_b -> stmts_a stmt0 
-- On VBAR reduce production stmts_b -> stmts_a stmt0 
-- On UNTIL reduce production stmts_b -> stmts_a stmt0 
-- On SEMI reduce production stmts_b -> stmts_a stmt0 
-- On RETURN reduce production stmts_b -> stmts_a stmt0 
-- On REPEAT reduce production stmts_b -> stmts_a stmt0 
-- On LOOP reduce production stmts_b -> stmts_a stmt0 
-- On LOCAL reduce production stmts_b -> stmts_a stmt0 
-- On IF reduce production stmts_b -> stmts_a stmt0 
-- On FOR reduce production stmts_b -> stmts_a stmt0 
-- On EXIT reduce production stmts_b -> stmts_a stmt0 
-- On END reduce production stmts_b -> stmts_a stmt0 
-- On ELSIF reduce production stmts_b -> stmts_a stmt0 
-- On ELSE reduce production stmts_b -> stmts_a stmt0 
-- On CASE reduce production stmts_b -> stmts_a stmt0 

State 346:
if_chain -> if_chain . ELSIF expr THEN stmts [ END ELSIF ELSE ]
if_chain -> if_chain . ELSIF error stmts [ END ELSIF ELSE ]
stmt1 -> if_chain . END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
stmt1 -> if_chain . ELSE stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On END shift to state 347
-- On ELSIF shift to state 348
-- On ELSE shift to state 354

State 347:
stmt1 -> if_chain END . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> if_chain END 
-- On WITH reduce production stmt1 -> if_chain END 
-- On WHILE reduce production stmt1 -> if_chain END 
-- On VBAR reduce production stmt1 -> if_chain END 
-- On UNTIL reduce production stmt1 -> if_chain END 
-- On SEMI reduce production stmt1 -> if_chain END 
-- On RETURN reduce production stmt1 -> if_chain END 
-- On REPEAT reduce production stmt1 -> if_chain END 
-- On LOOP reduce production stmt1 -> if_chain END 
-- On LOCAL reduce production stmt1 -> if_chain END 
-- On IF reduce production stmt1 -> if_chain END 
-- On FOR reduce production stmt1 -> if_chain END 
-- On EXIT reduce production stmt1 -> if_chain END 
-- On END reduce production stmt1 -> if_chain END 
-- On ELSIF reduce production stmt1 -> if_chain END 
-- On ELSE reduce production stmt1 -> if_chain END 
-- On CASE reduce production stmt1 -> if_chain END 

State 348:
if_chain -> if_chain ELSIF . expr THEN stmts [ END ELSIF ELSE ]
if_chain -> if_chain ELSIF . error stmts [ END ELSIF ELSE ]
-- On error shift to state 349
-- On STRING shift to state 59
-- On PLUS shift to state 60
-- On NUMBER shift to state 61
-- On NOT shift to state 62
-- On NIL shift to state 63
-- On MINUS shift to state 65
-- On LPAR shift to state 64
-- On LBRACE shift to state 66
-- On IDENT shift to state 2
-- On FLOCON shift to state 68
-- On DECIMAL shift to state 69
-- On DBLCON shift to state 70
-- On CHAR shift to state 71
-- On term shift to state 72
-- On simple shift to state 79
-- On name shift to state 74
-- On factor shift to state 86
-- On expr shift to state 351
-- On designator shift to state 76

State 349:
if_chain -> if_chain ELSIF error . stmts [ END ELSIF ELSE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 350
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On ELSIF reduce production stmts_a -> 
-- On ELSE reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 350:
if_chain -> if_chain ELSIF error stmts . [ END ELSIF ELSE ]
-- On END reduce production if_chain -> if_chain ELSIF error stmts 
-- On ELSIF reduce production if_chain -> if_chain ELSIF error stmts 
-- On ELSE reduce production if_chain -> if_chain ELSIF error stmts 

State 351:
if_chain -> if_chain ELSIF expr . THEN stmts [ END ELSIF ELSE ]
-- On THEN shift to state 352

State 352:
if_chain -> if_chain ELSIF expr THEN . stmts [ END ELSIF ELSE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 353
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On ELSIF reduce production stmts_a -> 
-- On ELSE reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 353:
if_chain -> if_chain ELSIF expr THEN stmts . [ END ELSIF ELSE ]
-- On END reduce production if_chain -> if_chain ELSIF expr THEN stmts 
-- On ELSIF reduce production if_chain -> if_chain ELSIF expr THEN stmts 
-- On ELSE reduce production if_chain -> if_chain ELSIF expr THEN stmts 

State 354:
stmt1 -> if_chain ELSE . stmts END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 355
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 355:
stmt1 -> if_chain ELSE stmts . END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On END shift to state 356

State 356:
stmt1 -> if_chain ELSE stmts END . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> if_chain ELSE stmts END 
-- On WITH reduce production stmt1 -> if_chain ELSE stmts END 
-- On WHILE reduce production stmt1 -> if_chain ELSE stmts END 
-- On VBAR reduce production stmt1 -> if_chain ELSE stmts END 
-- On UNTIL reduce production stmt1 -> if_chain ELSE stmts END 
-- On SEMI reduce production stmt1 -> if_chain ELSE stmts END 
-- On RETURN reduce production stmt1 -> if_chain ELSE stmts END 
-- On REPEAT reduce production stmt1 -> if_chain ELSE stmts END 
-- On LOOP reduce production stmt1 -> if_chain ELSE stmts END 
-- On LOCAL reduce production stmt1 -> if_chain ELSE stmts END 
-- On IF reduce production stmt1 -> if_chain ELSE stmts END 
-- On FOR reduce production stmt1 -> if_chain ELSE stmts END 
-- On EXIT reduce production stmt1 -> if_chain ELSE stmts END 
-- On END reduce production stmt1 -> if_chain ELSE stmts END 
-- On ELSIF reduce production stmt1 -> if_chain ELSE stmts END 
-- On ELSE reduce production stmt1 -> if_chain ELSE stmts END 
-- On CASE reduce production stmt1 -> if_chain ELSE stmts END 

State 357:
designator -> designator . UPARROW [ error WITH WHILE VBAR UPARROW UNTIL SUB SEMI RETURN REPEAT LPAR LOOP LOCAL IF FOR EXIT END ELSIF ELSE DOT CASE ASSIGN ]
designator -> designator . SUB exprs BUS [ error WITH WHILE VBAR UPARROW UNTIL SUB SEMI RETURN REPEAT LPAR LOOP LOCAL IF FOR EXIT END ELSIF ELSE DOT CASE ASSIGN ]
designator -> designator . SUB exprs [ error WITH WHILE VBAR UPARROW UNTIL SUB SEMI RETURN REPEAT LPAR LOOP LOCAL IF FOR EXIT END ELSIF ELSE DOT CASE ASSIGN ]
designator -> designator . DOT name [ error WITH WHILE VBAR UPARROW UNTIL SUB SEMI RETURN REPEAT LPAR LOOP LOCAL IF FOR EXIT END ELSIF ELSE DOT CASE ASSIGN ]
designator -> designator . actuals [ error WITH WHILE VBAR UPARROW UNTIL SUB SEMI RETURN REPEAT LPAR LOOP LOCAL IF FOR EXIT END ELSIF ELSE DOT CASE ASSIGN ]
stmt0 -> designator . ASSIGN expr [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
stmt0 -> designator . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On UPARROW shift to state 214
-- On SUB shift to state 215
-- On LPAR shift to state 238
-- On DOT shift to state 242
-- On ASSIGN shift to state 358
-- On actuals shift to state 244
-- On error reduce production stmt0 -> designator 
-- On WITH reduce production stmt0 -> designator 
-- On WHILE reduce production stmt0 -> designator 
-- On VBAR reduce production stmt0 -> designator 
-- On UNTIL reduce production stmt0 -> designator 
-- On SEMI reduce production stmt0 -> designator 
-- On RETURN reduce production stmt0 -> designator 
-- On REPEAT reduce production stmt0 -> designator 
-- On LOOP reduce production stmt0 -> designator 
-- On LOCAL reduce production stmt0 -> designator 
-- On IF reduce production stmt0 -> designator 
-- On FOR reduce production stmt0 -> designator 
-- On EXIT reduce production stmt0 -> designator 
-- On END reduce production stmt0 -> designator 
-- On ELSIF reduce production stmt0 -> designator 
-- On ELSE reduce production stmt0 -> designator 
-- On CASE reduce production stmt0 -> designator 

State 358:
stmt0 -> designator ASSIGN . expr [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On STRING shift to state 194
-- On PLUS shift to state 195
-- On NUMBER shift to state 196
-- On NOT shift to state 197
-- On NIL shift to state 198
-- On MINUS shift to state 200
-- On LPAR shift to state 199
-- On LBRACE shift to state 201
-- On IDENT shift to state 8
-- On FLOCON shift to state 205
-- On DECIMAL shift to state 206
-- On DBLCON shift to state 207
-- On CHAR shift to state 208
-- On term shift to state 216
-- On simple shift to state 219
-- On name shift to state 211
-- On factor shift to state 224
-- On expr shift to state 359
-- On designator shift to state 213

State 359:
stmt0 -> designator ASSIGN expr . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt0 -> designator ASSIGN expr 
-- On WITH reduce production stmt0 -> designator ASSIGN expr 
-- On WHILE reduce production stmt0 -> designator ASSIGN expr 
-- On VBAR reduce production stmt0 -> designator ASSIGN expr 
-- On UNTIL reduce production stmt0 -> designator ASSIGN expr 
-- On SEMI reduce production stmt0 -> designator ASSIGN expr 
-- On RETURN reduce production stmt0 -> designator ASSIGN expr 
-- On REPEAT reduce production stmt0 -> designator ASSIGN expr 
-- On LOOP reduce production stmt0 -> designator ASSIGN expr 
-- On LOCAL reduce production stmt0 -> designator ASSIGN expr 
-- On IF reduce production stmt0 -> designator ASSIGN expr 
-- On FOR reduce production stmt0 -> designator ASSIGN expr 
-- On EXIT reduce production stmt0 -> designator ASSIGN expr 
-- On END reduce production stmt0 -> designator ASSIGN expr 
-- On ELSIF reduce production stmt0 -> designator ASSIGN expr 
-- On ELSE reduce production stmt0 -> designator ASSIGN expr 
-- On CASE reduce production stmt0 -> designator ASSIGN expr 

State 360:
else_part -> ELSE stmts . [ END ]
-- On END reduce production else_part -> ELSE stmts 

State 361:
stmt1 -> WITH with_branches else_part . END [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On END shift to state 362

State 362:
stmt1 -> WITH with_branches else_part END . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmt1 -> WITH with_branches else_part END 
-- On WITH reduce production stmt1 -> WITH with_branches else_part END 
-- On WHILE reduce production stmt1 -> WITH with_branches else_part END 
-- On VBAR reduce production stmt1 -> WITH with_branches else_part END 
-- On UNTIL reduce production stmt1 -> WITH with_branches else_part END 
-- On SEMI reduce production stmt1 -> WITH with_branches else_part END 
-- On RETURN reduce production stmt1 -> WITH with_branches else_part END 
-- On REPEAT reduce production stmt1 -> WITH with_branches else_part END 
-- On LOOP reduce production stmt1 -> WITH with_branches else_part END 
-- On LOCAL reduce production stmt1 -> WITH with_branches else_part END 
-- On IF reduce production stmt1 -> WITH with_branches else_part END 
-- On FOR reduce production stmt1 -> WITH with_branches else_part END 
-- On EXIT reduce production stmt1 -> WITH with_branches else_part END 
-- On END reduce production stmt1 -> WITH with_branches else_part END 
-- On ELSIF reduce production stmt1 -> WITH with_branches else_part END 
-- On ELSE reduce production stmt1 -> WITH with_branches else_part END 
-- On CASE reduce production stmt1 -> WITH with_branches else_part END 

State 363:
with_branches -> with_branch . [ END ELSE ]
with_branches -> with_branch . VBAR with_branches [ END ELSE ]
-- On VBAR shift to state 364
-- On END reduce production with_branches -> with_branch 
-- On ELSE reduce production with_branches -> with_branch 

State 364:
with_branches -> with_branch VBAR . with_branches [ END ELSE ]
-- On IDENT shift to state 2
-- On with_branches shift to state 365
-- On with_branch shift to state 363
-- On name shift to state 366

State 365:
with_branches -> with_branch VBAR with_branches . [ END ELSE ]
-- On END reduce production with_branches -> with_branch VBAR with_branches 
-- On ELSE reduce production with_branches -> with_branch VBAR with_branches 

State 366:
with_branch -> name . COLON qualid DO stmts [ VBAR END ELSE ]
-- On COLON shift to state 367

State 367:
with_branch -> name COLON . qualid DO stmts [ VBAR END ELSE ]
-- On IDENT shift to state 37
-- On qualid shift to state 368

State 368:
with_branch -> name COLON qualid . DO stmts [ VBAR END ELSE ]
-- On DO shift to state 369

State 369:
with_branch -> name COLON qualid DO . stmts [ VBAR END ELSE ]
-- On stmts_b shift to state 255
-- On stmts_a shift to state 264
-- On stmts shift to state 370
-- On error reduce production stmts_a -> 
-- On WITH reduce production stmts_a -> 
-- On WHILE reduce production stmts_a -> 
-- On VBAR reduce production stmts_a -> 
-- On SEMI reduce production stmts_a -> 
-- On RETURN reduce production stmts_a -> 
-- On REPEAT reduce production stmts_a -> 
-- On LOOP reduce production stmts_a -> 
-- On LOCAL reduce production stmts_a -> 
-- On IF reduce production stmts_a -> 
-- On IDENT reduce production stmts_a -> 
-- On FOR reduce production stmts_a -> 
-- On EXIT reduce production stmts_a -> 
-- On END reduce production stmts_a -> 
-- On ELSE reduce production stmts_a -> 
-- On CASE reduce production stmts_a -> 

State 370:
with_branch -> name COLON qualid DO stmts . [ VBAR END ELSE ]
-- On VBAR reduce production with_branch -> name COLON qualid DO stmts 
-- On END reduce production with_branch -> name COLON qualid DO stmts 
-- On ELSE reduce production with_branch -> name COLON qualid DO stmts 

State 371:
stmts_b -> stmts_b missing stmt1 . [ error WITH WHILE VBAR UNTIL SEMI RETURN REPEAT LOOP LOCAL IF FOR EXIT END ELSIF ELSE CASE ]
-- On error reduce production stmts_b -> stmts_b missing stmt1 
-- On WITH reduce production stmts_b -> stmts_b missing stmt1 
-- On WHILE reduce production stmts_b -> stmts_b missing stmt1 
-- On VBAR reduce production stmts_b -> stmts_b missing stmt1 
-- On UNTIL reduce production stmts_b -> stmts_b missing stmt1 
-- On SEMI reduce production stmts_b -> stmts_b missing stmt1 
-- On RETURN reduce production stmts_b -> stmts_b missing stmt1 
-- On REPEAT reduce production stmts_b -> stmts_b missing stmt1 
-- On LOOP reduce production stmts_b -> stmts_b missing stmt1 
-- On LOCAL reduce production stmts_b -> stmts_b missing stmt1 
-- On IF reduce production stmts_b -> stmts_b missing stmt1 
-- On FOR reduce production stmts_b -> stmts_b missing stmt1 
-- On EXIT reduce production stmts_b -> stmts_b missing stmt1 
-- On END reduce production stmts_b -> stmts_b missing stmt1 
-- On ELSIF reduce production stmts_b -> stmts_b missing stmt1 
-- On ELSE reduce production stmts_b -> stmts_b missing stmt1 
-- On CASE reduce production stmts_b -> stmts_b missing stmt1 

State 372:
body -> BEGIN stmts . [ END ]
-- On END reduce production body -> BEGIN stmts 

State 373:
block -> decls body . END [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On END shift to state 374

State 374:
block -> decls body END . [ error VAR TYPE SEMI PROCEDURE IDENT END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production block -> decls body END 
-- On VAR reduce production block -> decls body END 
-- On TYPE reduce production block -> decls body END 
-- On SEMI reduce production block -> decls body END 
-- On PROCEDURE reduce production block -> decls body END 
-- On IDENT reduce production block -> decls body END 
-- On END reduce production block -> decls body END 
-- On CONST reduce production block -> decls body END 
-- On COMMA reduce production block -> decls body END 
-- On BEGIN reduce production block -> decls body END 
-- On ABSTRACT reduce production block -> decls body END 

State 375:
proc -> PROCEDURE error block . opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On IDENT shift to state 376
-- On opt_ident shift to state 377
-- On error reduce production opt_ident -> 
-- On VAR reduce production opt_ident -> 
-- On TYPE reduce production opt_ident -> 
-- On SEMI reduce production opt_ident -> 
-- On PROCEDURE reduce production opt_ident -> 
-- On END reduce production opt_ident -> 
-- On CONST reduce production opt_ident -> 
-- On COMMA reduce production opt_ident -> 
-- On BEGIN reduce production opt_ident -> 
-- On ABSTRACT reduce production opt_ident -> 

State 376:
opt_ident -> IDENT . [ error VAR TYPE SEMI PROCEDURE END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production opt_ident -> IDENT 
-- On VAR reduce production opt_ident -> IDENT 
-- On TYPE reduce production opt_ident -> IDENT 
-- On SEMI reduce production opt_ident -> IDENT 
-- On PROCEDURE reduce production opt_ident -> IDENT 
-- On END reduce production opt_ident -> IDENT 
-- On CONST reduce production opt_ident -> IDENT 
-- On COMMA reduce production opt_ident -> IDENT 
-- On BEGIN reduce production opt_ident -> IDENT 
-- On ABSTRACT reduce production opt_ident -> IDENT 

State 377:
proc -> PROCEDURE error block opt_ident . semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On SEMI shift to state 177
-- On COMMA shift to state 178
-- On semi shift to state 378
-- On error reduce production semi -> 
-- On VAR reduce production semi -> 
-- On TYPE reduce production semi -> 
-- On PROCEDURE reduce production semi -> 
-- On END reduce production semi -> 
-- On CONST reduce production semi -> 
-- On BEGIN reduce production semi -> 
-- On ABSTRACT reduce production semi -> 

State 378:
proc -> PROCEDURE error block opt_ident semi . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production proc -> PROCEDURE error block opt_ident semi 
-- On VAR reduce production proc -> PROCEDURE error block opt_ident semi 
-- On TYPE reduce production proc -> PROCEDURE error block opt_ident semi 
-- On PROCEDURE reduce production proc -> PROCEDURE error block opt_ident semi 
-- On END reduce production proc -> PROCEDURE error block opt_ident semi 
-- On CONST reduce production proc -> PROCEDURE error block opt_ident semi 
-- On BEGIN reduce production proc -> PROCEDURE error block opt_ident semi 
-- On ABSTRACT reduce production proc -> PROCEDURE error block opt_ident semi 

State 379:
proc -> PROCEDURE receiver . defid params semi block opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On IDENT shift to state 298
-- On defid shift to state 380

State 380:
proc -> PROCEDURE receiver defid . params semi block opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On LPAR shift to state 29
-- On params shift to state 381
-- On error reduce production params -> 
-- On VAR reduce production params -> 
-- On TYPE reduce production params -> 
-- On SEMI reduce production params -> 
-- On PROCEDURE reduce production params -> 
-- On END reduce production params -> 
-- On CONST reduce production params -> 
-- On COMMA reduce production params -> 
-- On BEGIN reduce production params -> 
-- On ABSTRACT reduce production params -> 

State 381:
proc -> PROCEDURE receiver defid params . semi block opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On SEMI shift to state 177
-- On COMMA shift to state 178
-- On semi shift to state 382
-- On error reduce production semi -> 
-- On VAR reduce production semi -> 
-- On TYPE reduce production semi -> 
-- On PROCEDURE reduce production semi -> 
-- On END reduce production semi -> 
-- On CONST reduce production semi -> 
-- On BEGIN reduce production semi -> 
-- On ABSTRACT reduce production semi -> 

State 382:
proc -> PROCEDURE receiver defid params semi . block opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On decls shift to state 190
-- On block shift to state 383
-- On error reduce production decls -> 
-- On VAR reduce production decls -> 
-- On TYPE reduce production decls -> 
-- On PROCEDURE reduce production decls -> 
-- On END reduce production decls -> 
-- On CONST reduce production decls -> 
-- On BEGIN reduce production decls -> 
-- On ABSTRACT reduce production decls -> 

State 383:
proc -> PROCEDURE receiver defid params semi block . opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On IDENT shift to state 376
-- On opt_ident shift to state 384
-- On error reduce production opt_ident -> 
-- On VAR reduce production opt_ident -> 
-- On TYPE reduce production opt_ident -> 
-- On SEMI reduce production opt_ident -> 
-- On PROCEDURE reduce production opt_ident -> 
-- On END reduce production opt_ident -> 
-- On CONST reduce production opt_ident -> 
-- On COMMA reduce production opt_ident -> 
-- On BEGIN reduce production opt_ident -> 
-- On ABSTRACT reduce production opt_ident -> 

State 384:
proc -> PROCEDURE receiver defid params semi block opt_ident . semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On SEMI shift to state 177
-- On COMMA shift to state 178
-- On semi shift to state 385
-- On error reduce production semi -> 
-- On VAR reduce production semi -> 
-- On TYPE reduce production semi -> 
-- On PROCEDURE reduce production semi -> 
-- On END reduce production semi -> 
-- On CONST reduce production semi -> 
-- On BEGIN reduce production semi -> 
-- On ABSTRACT reduce production semi -> 

State 385:
proc -> PROCEDURE receiver defid params semi block opt_ident semi . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production proc -> PROCEDURE receiver defid params semi block opt_ident semi 
-- On VAR reduce production proc -> PROCEDURE receiver defid params semi block opt_ident semi 
-- On TYPE reduce production proc -> PROCEDURE receiver defid params semi block opt_ident semi 
-- On PROCEDURE reduce production proc -> PROCEDURE receiver defid params semi block opt_ident semi 
-- On END reduce production proc -> PROCEDURE receiver defid params semi block opt_ident semi 
-- On CONST reduce production proc -> PROCEDURE receiver defid params semi block opt_ident semi 
-- On BEGIN reduce production proc -> PROCEDURE receiver defid params semi block opt_ident semi 
-- On ABSTRACT reduce production proc -> PROCEDURE receiver defid params semi block opt_ident semi 

State 386:
proc -> PROCEDURE defid . params semi block opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
proc -> PROCEDURE defid . params IS STRING semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On LPAR shift to state 29
-- On params shift to state 387
-- On error reduce production params -> 
-- On VAR reduce production params -> 
-- On TYPE reduce production params -> 
-- On SEMI reduce production params -> 
-- On PROCEDURE reduce production params -> 
-- On IS reduce production params -> 
-- On END reduce production params -> 
-- On CONST reduce production params -> 
-- On COMMA reduce production params -> 
-- On BEGIN reduce production params -> 
-- On ABSTRACT reduce production params -> 

State 387:
proc -> PROCEDURE defid params . semi block opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
proc -> PROCEDURE defid params . IS STRING semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On SEMI shift to state 177
-- On IS shift to state 388
-- On COMMA shift to state 178
-- On semi shift to state 391
-- On error reduce production semi -> 
-- On VAR reduce production semi -> 
-- On TYPE reduce production semi -> 
-- On PROCEDURE reduce production semi -> 
-- On END reduce production semi -> 
-- On CONST reduce production semi -> 
-- On BEGIN reduce production semi -> 
-- On ABSTRACT reduce production semi -> 

State 388:
proc -> PROCEDURE defid params IS . STRING semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On STRING shift to state 389

State 389:
proc -> PROCEDURE defid params IS STRING . semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On SEMI shift to state 177
-- On COMMA shift to state 178
-- On semi shift to state 390
-- On error reduce production semi -> 
-- On VAR reduce production semi -> 
-- On TYPE reduce production semi -> 
-- On PROCEDURE reduce production semi -> 
-- On END reduce production semi -> 
-- On CONST reduce production semi -> 
-- On BEGIN reduce production semi -> 
-- On ABSTRACT reduce production semi -> 

State 390:
proc -> PROCEDURE defid params IS STRING semi . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production proc -> PROCEDURE defid params IS STRING semi 
-- On VAR reduce production proc -> PROCEDURE defid params IS STRING semi 
-- On TYPE reduce production proc -> PROCEDURE defid params IS STRING semi 
-- On PROCEDURE reduce production proc -> PROCEDURE defid params IS STRING semi 
-- On END reduce production proc -> PROCEDURE defid params IS STRING semi 
-- On CONST reduce production proc -> PROCEDURE defid params IS STRING semi 
-- On BEGIN reduce production proc -> PROCEDURE defid params IS STRING semi 
-- On ABSTRACT reduce production proc -> PROCEDURE defid params IS STRING semi 

State 391:
proc -> PROCEDURE defid params semi . block opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On decls shift to state 190
-- On block shift to state 392
-- On error reduce production decls -> 
-- On VAR reduce production decls -> 
-- On TYPE reduce production decls -> 
-- On PROCEDURE reduce production decls -> 
-- On END reduce production decls -> 
-- On CONST reduce production decls -> 
-- On BEGIN reduce production decls -> 
-- On ABSTRACT reduce production decls -> 

State 392:
proc -> PROCEDURE defid params semi block . opt_ident semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On IDENT shift to state 376
-- On opt_ident shift to state 393
-- On error reduce production opt_ident -> 
-- On VAR reduce production opt_ident -> 
-- On TYPE reduce production opt_ident -> 
-- On SEMI reduce production opt_ident -> 
-- On PROCEDURE reduce production opt_ident -> 
-- On END reduce production opt_ident -> 
-- On CONST reduce production opt_ident -> 
-- On COMMA reduce production opt_ident -> 
-- On BEGIN reduce production opt_ident -> 
-- On ABSTRACT reduce production opt_ident -> 

State 393:
proc -> PROCEDURE defid params semi block opt_ident . semi [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On SEMI shift to state 177
-- On COMMA shift to state 178
-- On semi shift to state 394
-- On error reduce production semi -> 
-- On VAR reduce production semi -> 
-- On TYPE reduce production semi -> 
-- On PROCEDURE reduce production semi -> 
-- On END reduce production semi -> 
-- On CONST reduce production semi -> 
-- On BEGIN reduce production semi -> 
-- On ABSTRACT reduce production semi -> 

State 394:
proc -> PROCEDURE defid params semi block opt_ident semi . [ error VAR TYPE PROCEDURE END CONST BEGIN ABSTRACT ]
-- On error reduce production proc -> PROCEDURE defid params semi block opt_ident semi 
-- On VAR reduce production proc -> PROCEDURE defid params semi block opt_ident semi 
-- On TYPE reduce production proc -> PROCEDURE defid params semi block opt_ident semi 
-- On PROCEDURE reduce production proc -> PROCEDURE defid params semi block opt_ident semi 
-- On END reduce production proc -> PROCEDURE defid params semi block opt_ident semi 
-- On CONST reduce production proc -> PROCEDURE defid params semi block opt_ident semi 
-- On BEGIN reduce production proc -> PROCEDURE defid params semi block opt_ident semi 
-- On ABSTRACT reduce production proc -> PROCEDURE defid params semi block opt_ident semi 

State 395:
block -> decls body . END [ IDENT DOT ]
-- On END shift to state 396

State 396:
block -> decls body END . [ IDENT DOT ]
-- On IDENT reduce production block -> decls body END 
-- On DOT reduce production block -> decls body END 

State 397:
program -> MODULE modname semi imports block . opt_ident DOT [ # ]
-- On IDENT shift to state 398
-- On opt_ident shift to state 399
-- On DOT reduce production opt_ident -> 

State 398:
opt_ident -> IDENT . [ DOT ]
-- On DOT reduce production opt_ident -> IDENT 

State 399:
program -> MODULE modname semi imports block opt_ident . DOT [ # ]
-- On DOT shift to state 400

State 400:
program -> MODULE modname semi imports block opt_ident DOT . [ # ]
-- On # reduce production program -> MODULE modname semi imports block opt_ident DOT 

State 401:
imports -> import . [ error VAR TYPE PROCEDURE END CONST COMMA BEGIN ABSTRACT ]
-- On error reduce production imports -> import 
-- On VAR reduce production imports -> import 
-- On TYPE reduce production imports -> import 
-- On PROCEDURE reduce production imports -> import 
-- On END reduce production imports -> import 
-- On CONST reduce production imports -> import 
-- On COMMA reduce production imports -> import 
-- On BEGIN reduce production imports -> import 
-- On ABSTRACT reduce production imports -> import 

State 402:
program' -> program . [ # ]
-- On # accept program

