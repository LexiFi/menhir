State 0:
## Known stack suffix:
##
## LR(1) items:
implementation_file' -> . implementation_file [ # ]
## Transitions:
-- On TYPE shift to state 1
-- On OPEN shift to state 74
-- On LET shift to state 76
-- On EOF shift to state 500
-- On localized(implementation) shift to state 501
-- On is_let shift to state 504
-- On implementation_file shift to state 519
-- On implementation shift to state 520
-- On decl_list(localized(implementation)) shift to state 521
## Reductions:
-- On NODE HYBRID FUN DISCRETE ATOMIC
--   reduce production is_let ->

State 1:
## Known stack suffix:
## TYPE
## LR(1) items:
implementation -> TYPE . type_params IDENT type_declaration [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 4
-- On type_var shift to state 10
-- On type_params shift to state 11
## Reductions:
-- On IDENT
--   reduce production type_params ->

State 2:
## Known stack suffix:
## QUOTE
## LR(1) items:
type_var -> QUOTE . IDENT [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On IDENT shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## QUOTE IDENT
## LR(1) items:
type_var -> QUOTE IDENT . [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_var -> QUOTE IDENT

State 4:
## Known stack suffix:
## LPAREN
## LR(1) items:
type_params -> LPAREN . list_of(COMMA,type_var) RPAREN [ IDENT ]
## Transitions:
-- On QUOTE shift to state 2
-- On type_var shift to state 5
-- On list_of(COMMA,type_var) shift to state 6
## Reductions:

State 5:
## Known stack suffix:
## type_var
## LR(1) items:
list_of(COMMA,type_var) -> type_var . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_of(COMMA,type_var) -> type_var

State 6:
## Known stack suffix:
## LPAREN list_of(COMMA,type_var)
## LR(1) items:
list_of(COMMA,type_var) -> list_of(COMMA,type_var) . COMMA type_var [ RPAREN COMMA ]
type_params -> LPAREN list_of(COMMA,type_var) . RPAREN [ IDENT ]
## Transitions:
-- On RPAREN shift to state 7
-- On COMMA shift to state 8
## Reductions:

State 7:
## Known stack suffix:
## LPAREN list_of(COMMA,type_var) RPAREN
## LR(1) items:
type_params -> LPAREN list_of(COMMA,type_var) RPAREN . [ IDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_params -> LPAREN list_of(COMMA,type_var) RPAREN

State 8:
## Known stack suffix:
## list_of(COMMA,type_var) COMMA
## LR(1) items:
list_of(COMMA,type_var) -> list_of(COMMA,type_var) COMMA . type_var [ RPAREN COMMA ]
## Transitions:
-- On QUOTE shift to state 2
-- On type_var shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## list_of(COMMA,type_var) COMMA type_var
## LR(1) items:
list_of(COMMA,type_var) -> list_of(COMMA,type_var) COMMA type_var . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_of(COMMA,type_var) -> list_of(COMMA,type_var) COMMA type_var

State 10:
## Known stack suffix:
## type_var
## LR(1) items:
type_params -> type_var . [ IDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_params -> type_var

State 11:
## Known stack suffix:
## TYPE type_params
## LR(1) items:
implementation -> TYPE type_params . IDENT type_declaration [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On IDENT shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## TYPE type_params IDENT
## LR(1) items:
implementation -> TYPE type_params IDENT . type_declaration [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On EQUAL shift to state 13
-- On type_declaration shift to state 73
## Reductions:
-- On TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC
--   reduce production type_declaration ->

State 13:
## Known stack suffix:
## EQUAL
## LR(1) items:
type_declaration -> EQUAL . list_of(BAR,CONSTRUCTOR) [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
type_declaration -> EQUAL . LBRACE label_list(label_type) RBRACE [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
type_declaration -> EQUAL . type_expression [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On LBRACE shift to state 59
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 68
-- On type_var shift to state 37
-- On type_star_list shift to state 38
-- On type_expression shift to state 69
-- On simple_type_desc shift to state 52
-- On simple_type shift to state 53
-- On qual_ident shift to state 42
-- On list_of(BAR,CONSTRUCTOR) shift to state 70
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 14:
## Known stack suffix:
## LPAREN
## LR(1) items:
ide -> LPAREN . infx RPAREN [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
simple_type_desc -> LPAREN . type_expression COMMA type_comma_list RPAREN ext_ident [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
simple_type_desc -> LPAREN . type_expression RPAREN [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On SUBTRACTIVE shift to state 15
-- On STAR shift to state 16
-- On QUOTE shift to state 2
-- On PREFIX shift to state 17
-- On OR shift to state 18
-- On ON shift to state 19
-- On LPAREN shift to state 14
-- On INFIX4 shift to state 20
-- On INFIX3 shift to state 21
-- On INFIX2 shift to state 22
-- On INFIX1 shift to state 23
-- On INFIX0 shift to state 24
-- On IDENT shift to state 25
-- On EQUALEQUAL shift to state 26
-- On EQUAL shift to state 27
-- On CONSTRUCTOR shift to state 28
-- On BARBAR shift to state 31
-- On AMPERSAND shift to state 32
-- On AMPERAMPER shift to state 33
-- On type_var shift to state 37
-- On type_star_list shift to state 38
-- On type_expression shift to state 46
-- On simple_type_desc shift to state 52
-- On simple_type shift to state 53
-- On qual_ident shift to state 42
-- On infx shift to state 34
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 15:
## Known stack suffix:
## SUBTRACTIVE
## LR(1) items:
infx -> SUBTRACTIVE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> SUBTRACTIVE

State 16:
## Known stack suffix:
## STAR
## LR(1) items:
infx -> STAR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> STAR

State 17:
## Known stack suffix:
## PREFIX
## LR(1) items:
infx -> PREFIX . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> PREFIX

State 18:
## Known stack suffix:
## OR
## LR(1) items:
infx -> OR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> OR

State 19:
## Known stack suffix:
## ON
## LR(1) items:
infx -> ON . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> ON

State 20:
## Known stack suffix:
## INFIX4
## LR(1) items:
infx -> INFIX4 . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> INFIX4

State 21:
## Known stack suffix:
## INFIX3
## LR(1) items:
infx -> INFIX3 . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> INFIX3

State 22:
## Known stack suffix:
## INFIX2
## LR(1) items:
infx -> INFIX2 . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> INFIX2

State 23:
## Known stack suffix:
## INFIX1
## LR(1) items:
infx -> INFIX1 . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> INFIX1

State 24:
## Known stack suffix:
## INFIX0
## LR(1) items:
infx -> INFIX0 . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> INFIX0

State 25:
## Known stack suffix:
## IDENT
## LR(1) items:
ide -> IDENT . [ WITH WHERE VAL UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE PLUSEQUAL OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE DFUN DEFAULT CONTINUE CONSTRUCTOR COMMA COLON CHAR CFUN BOOL BARBAR BAR ATOMIC AS AND AMPERSAND AMPERAMPER AFUN AFTER ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ide -> IDENT

State 26:
## Known stack suffix:
## EQUALEQUAL
## LR(1) items:
infx -> EQUALEQUAL . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> EQUALEQUAL

State 27:
## Known stack suffix:
## EQUAL
## LR(1) items:
infx -> EQUAL . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> EQUAL

State 28:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
qual_ident -> CONSTRUCTOR . DOT ide [ WITH WHERE VAL UNTIL UNLESS TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE DFUN CONTINUE CONSTRUCTOR COMMA CHAR CFUN BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFUN AFTER ADFUN ]
## Transitions:
-- On DOT shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## CONSTRUCTOR DOT
## LR(1) items:
qual_ident -> CONSTRUCTOR DOT . ide [ WITH WHERE VAL UNTIL UNLESS TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE DFUN CONTINUE CONSTRUCTOR COMMA CHAR CFUN BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFUN AFTER ADFUN ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On ide shift to state 36
## Reductions:

State 30:
## Known stack suffix:
## LPAREN
## LR(1) items:
ide -> LPAREN . infx RPAREN [ WITH WHERE VAL UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE DFUN DEFAULT CONTINUE CONSTRUCTOR COMMA COLON CHAR CFUN BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFUN AFTER ADFUN ]
## Transitions:
-- On SUBTRACTIVE shift to state 15
-- On STAR shift to state 16
-- On PREFIX shift to state 17
-- On OR shift to state 18
-- On ON shift to state 19
-- On INFIX4 shift to state 20
-- On INFIX3 shift to state 21
-- On INFIX2 shift to state 22
-- On INFIX1 shift to state 23
-- On INFIX0 shift to state 24
-- On EQUALEQUAL shift to state 26
-- On EQUAL shift to state 27
-- On BARBAR shift to state 31
-- On AMPERSAND shift to state 32
-- On AMPERAMPER shift to state 33
-- On infx shift to state 34
## Reductions:

State 31:
## Known stack suffix:
## BARBAR
## LR(1) items:
infx -> BARBAR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> BARBAR

State 32:
## Known stack suffix:
## AMPERSAND
## LR(1) items:
infx -> AMPERSAND . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> AMPERSAND

State 33:
## Known stack suffix:
## AMPERAMPER
## LR(1) items:
infx -> AMPERAMPER . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production infx -> AMPERAMPER

State 34:
## Known stack suffix:
## LPAREN infx
## LR(1) items:
ide -> LPAREN infx . RPAREN [ WITH WHERE VAL UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE PLUSEQUAL OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE DFUN DEFAULT CONTINUE CONSTRUCTOR COMMA COLON CHAR CFUN BOOL BARBAR BAR ATOMIC AS AND AMPERSAND AMPERAMPER AFUN AFTER ADFUN ]
## Transitions:
-- On RPAREN shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## LPAREN infx RPAREN
## LR(1) items:
ide -> LPAREN infx RPAREN . [ WITH WHERE VAL UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE PLUSEQUAL OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE DFUN DEFAULT CONTINUE CONSTRUCTOR COMMA COLON CHAR CFUN BOOL BARBAR BAR ATOMIC AS AND AMPERSAND AMPERAMPER AFUN AFTER ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ide -> LPAREN infx RPAREN

State 36:
## Known stack suffix:
## CONSTRUCTOR DOT ide
## LR(1) items:
qual_ident -> CONSTRUCTOR DOT ide . [ WITH WHERE VAL UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE DFUN CONTINUE CONSTRUCTOR COMMA COLON CHAR CFUN BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFUN AFTER ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production qual_ident -> CONSTRUCTOR DOT ide

State 37:
## Known stack suffix:
## type_var
## LR(1) items:
simple_type_desc -> type_var . [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_desc -> type_var

State 38:
## Known stack suffix:
## type_star_list
## LR(1) items:
type_expression -> type_star_list . [ VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN ]
type_star_list -> type_star_list . STAR simple_type [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On STAR shift to state 39
## Reductions:
-- On VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN
--   reduce production type_expression -> type_star_list

State 39:
## Known stack suffix:
## type_star_list STAR
## LR(1) items:
type_star_list -> type_star_list STAR . simple_type [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On type_var shift to state 37
-- On simple_type_desc shift to state 40
-- On simple_type shift to state 41
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 40:
## Known stack suffix:
## simple_type_desc
## LR(1) items:
simple_type -> simple_type_desc . [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type -> simple_type_desc

State 41:
## Known stack suffix:
## type_star_list STAR simple_type
## LR(1) items:
simple_type_desc -> simple_type . ext_ident [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
type_star_list -> type_star_list STAR simple_type . [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 44
## Reductions:
-- On VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN
--   reduce production type_star_list -> type_star_list STAR simple_type

State 42:
## Known stack suffix:
## qual_ident
## LR(1) items:
ext_ident -> qual_ident . [ WITH WHERE VAL UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE DFUN CONTINUE CONSTRUCTOR COMMA COLON CHAR CFUN BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFUN AFTER ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ext_ident -> qual_ident

State 43:
## Known stack suffix:
## ide
## LR(1) items:
ext_ident -> ide . [ WITH WHERE VAL UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE DFUN CONTINUE CONSTRUCTOR COMMA COLON CHAR CFUN BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFUN AFTER ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ext_ident -> ide

State 44:
## Known stack suffix:
## simple_type ext_ident
## LR(1) items:
simple_type_desc -> simple_type ext_ident . [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_desc -> simple_type ext_ident

State 45:
## Known stack suffix:
## ext_ident
## LR(1) items:
simple_type_desc -> ext_ident . [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_desc -> ext_ident

State 46:
## Known stack suffix:
## LPAREN type_expression
## LR(1) items:
simple_type_desc -> LPAREN type_expression . COMMA type_comma_list RPAREN ext_ident [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
simple_type_desc -> LPAREN type_expression . RPAREN [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On RPAREN shift to state 47
-- On COMMA shift to state 48
## Reductions:

State 47:
## Known stack suffix:
## LPAREN type_expression RPAREN
## LR(1) items:
simple_type_desc -> LPAREN type_expression RPAREN . [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_desc -> LPAREN type_expression RPAREN

State 48:
## Known stack suffix:
## LPAREN type_expression COMMA
## LR(1) items:
simple_type_desc -> LPAREN type_expression COMMA . type_comma_list RPAREN ext_ident [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On type_var shift to state 37
-- On type_star_list shift to state 38
-- On type_expression shift to state 49
-- On type_comma_list shift to state 56
-- On simple_type_desc shift to state 52
-- On simple_type shift to state 53
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 49:
## Known stack suffix:
## type_expression
## LR(1) items:
type_comma_list -> type_expression . COMMA type_comma_list [ RPAREN ]
type_comma_list -> type_expression . [ RPAREN ]
## Transitions:
-- On COMMA shift to state 50
## Reductions:
-- On RPAREN
--   reduce production type_comma_list -> type_expression

State 50:
## Known stack suffix:
## type_expression COMMA
## LR(1) items:
type_comma_list -> type_expression COMMA . type_comma_list [ RPAREN ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On type_var shift to state 37
-- On type_star_list shift to state 38
-- On type_expression shift to state 49
-- On type_comma_list shift to state 51
-- On simple_type_desc shift to state 52
-- On simple_type shift to state 53
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 51:
## Known stack suffix:
## type_expression COMMA type_comma_list
## LR(1) items:
type_comma_list -> type_expression COMMA type_comma_list . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_comma_list -> type_expression COMMA type_comma_list

State 52:
## Known stack suffix:
## simple_type_desc
## LR(1) items:
simple_type -> simple_type_desc . [ STAR LPAREN IDENT CONSTRUCTOR ]
type_expression -> simple_type_desc . [ VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
## Reductions:
-- On STAR LPAREN IDENT CONSTRUCTOR
--   reduce production simple_type -> simple_type_desc
-- On VAL TYPE SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN
--   reduce production type_expression -> simple_type_desc

State 53:
## Known stack suffix:
## simple_type
## LR(1) items:
simple_type_desc -> simple_type . ext_ident [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
type_star_list -> simple_type . STAR simple_type [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On STAR shift to state 54
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 44
## Reductions:

State 54:
## Known stack suffix:
## simple_type STAR
## LR(1) items:
type_star_list -> simple_type STAR . simple_type [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On type_var shift to state 37
-- On simple_type_desc shift to state 40
-- On simple_type shift to state 55
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 55:
## Known stack suffix:
## simple_type STAR simple_type
## LR(1) items:
simple_type_desc -> simple_type . ext_ident [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
type_star_list -> simple_type STAR simple_type . [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 44
## Reductions:
-- On VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LET HYBRID FUN EOF DISCRETE DFUN COMMA CFUN ATOMIC AFUN ADFUN
--   reduce production type_star_list -> simple_type STAR simple_type

State 56:
## Known stack suffix:
## LPAREN type_expression COMMA type_comma_list
## LR(1) items:
simple_type_desc -> LPAREN type_expression COMMA type_comma_list . RPAREN ext_ident [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On RPAREN shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## LPAREN type_expression COMMA type_comma_list RPAREN
## LR(1) items:
simple_type_desc -> LPAREN type_expression COMMA type_comma_list RPAREN . ext_ident [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## LPAREN type_expression COMMA type_comma_list RPAREN ext_ident
## LR(1) items:
simple_type_desc -> LPAREN type_expression COMMA type_comma_list RPAREN ext_ident . [ VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE OPEN NODE MINUSGREATER LPAREN LET IDENT HYBRID FUN EOF DISCRETE DFUN CONSTRUCTOR COMMA CFUN ATOMIC AFUN ADFUN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_desc -> LPAREN type_expression COMMA type_comma_list RPAREN ext_ident

State 59:
## Known stack suffix:
## EQUAL LBRACE
## LR(1) items:
type_declaration -> EQUAL LBRACE . label_list(label_type) RBRACE [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On IDENT shift to state 60
-- On label_type shift to state 63
-- On label_list(label_type) shift to state 66
## Reductions:

State 60:
## Known stack suffix:
## IDENT
## LR(1) items:
label_type -> IDENT . COLON type_expression [ SEMI RBRACE ]
## Transitions:
-- On COLON shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
label_type -> IDENT COLON . type_expression [ SEMI RBRACE ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On type_var shift to state 37
-- On type_star_list shift to state 38
-- On type_expression shift to state 62
-- On simple_type_desc shift to state 52
-- On simple_type shift to state 53
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 62:
## Known stack suffix:
## IDENT COLON type_expression
## LR(1) items:
label_type -> IDENT COLON type_expression . [ SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_type -> IDENT COLON type_expression

State 63:
## Known stack suffix:
## label_type
## LR(1) items:
label_list(label_type) -> label_type . [ RBRACE ]
label_list(label_type) -> label_type . SEMI [ RBRACE ]
label_list(label_type) -> label_type . SEMI label_list(label_type) [ RBRACE ]
## Transitions:
-- On SEMI shift to state 64
## Reductions:
-- On RBRACE
--   reduce production label_list(label_type) -> label_type

State 64:
## Known stack suffix:
## label_type SEMI
## LR(1) items:
label_list(label_type) -> label_type SEMI . [ RBRACE ]
label_list(label_type) -> label_type SEMI . label_list(label_type) [ RBRACE ]
## Transitions:
-- On IDENT shift to state 60
-- On label_type shift to state 63
-- On label_list(label_type) shift to state 65
## Reductions:
-- On RBRACE
--   reduce production label_list(label_type) -> label_type SEMI

State 65:
## Known stack suffix:
## label_type SEMI label_list(label_type)
## LR(1) items:
label_list(label_type) -> label_type SEMI label_list(label_type) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_list(label_type) -> label_type SEMI label_list(label_type)

State 66:
## Known stack suffix:
## EQUAL LBRACE label_list(label_type)
## LR(1) items:
type_declaration -> EQUAL LBRACE label_list(label_type) . RBRACE [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On RBRACE shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## EQUAL LBRACE label_list(label_type) RBRACE
## LR(1) items:
type_declaration -> EQUAL LBRACE label_list(label_type) RBRACE . [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_declaration -> EQUAL LBRACE label_list(label_type) RBRACE

State 68:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
list_of(BAR,CONSTRUCTOR) -> CONSTRUCTOR . [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE BAR ATOMIC ]
qual_ident -> CONSTRUCTOR . DOT ide [ VAL TYPE STAR SEMISEMI OPEN NODE LPAREN LET IDENT HYBRID FUN EOF DISCRETE CONSTRUCTOR ATOMIC ]
## Transitions:
-- On DOT shift to state 29
## Reductions:
-- On VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE BAR ATOMIC
--   reduce production list_of(BAR,CONSTRUCTOR) -> CONSTRUCTOR

State 69:
## Known stack suffix:
## EQUAL type_expression
## LR(1) items:
type_declaration -> EQUAL type_expression . [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_declaration -> EQUAL type_expression

State 70:
## Known stack suffix:
## EQUAL list_of(BAR,CONSTRUCTOR)
## LR(1) items:
list_of(BAR,CONSTRUCTOR) -> list_of(BAR,CONSTRUCTOR) . BAR CONSTRUCTOR [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE BAR ATOMIC ]
type_declaration -> EQUAL list_of(BAR,CONSTRUCTOR) . [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On BAR shift to state 71
## Reductions:
-- On VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC
--   reduce production type_declaration -> EQUAL list_of(BAR,CONSTRUCTOR)

State 71:
## Known stack suffix:
## list_of(BAR,CONSTRUCTOR) BAR
## LR(1) items:
list_of(BAR,CONSTRUCTOR) -> list_of(BAR,CONSTRUCTOR) BAR . CONSTRUCTOR [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE BAR ATOMIC ]
## Transitions:
-- On CONSTRUCTOR shift to state 72
## Reductions:

State 72:
## Known stack suffix:
## list_of(BAR,CONSTRUCTOR) BAR CONSTRUCTOR
## LR(1) items:
list_of(BAR,CONSTRUCTOR) -> list_of(BAR,CONSTRUCTOR) BAR CONSTRUCTOR . [ VAL TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE BAR ATOMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_of(BAR,CONSTRUCTOR) -> list_of(BAR,CONSTRUCTOR) BAR CONSTRUCTOR

State 73:
## Known stack suffix:
## TYPE type_params IDENT type_declaration
## LR(1) items:
implementation -> TYPE type_params IDENT type_declaration . [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implementation -> TYPE type_params IDENT type_declaration

State 74:
## Known stack suffix:
## OPEN
## LR(1) items:
implementation -> OPEN . CONSTRUCTOR [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On CONSTRUCTOR shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## OPEN CONSTRUCTOR
## LR(1) items:
implementation -> OPEN CONSTRUCTOR . [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implementation -> OPEN CONSTRUCTOR

State 76:
## Known stack suffix:
## LET
## LR(1) items:
implementation -> LET . IDENT EQUAL seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> LET . IDENT fun_params EQUAL seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> LET . IDENT fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
is_let -> LET . [ NODE HYBRID FUN DISCRETE ATOMIC ]
## Transitions:
-- On IDENT shift to state 77
## Reductions:
-- On NODE HYBRID FUN DISCRETE ATOMIC
--   reduce production is_let -> LET

State 77:
## Known stack suffix:
## LET IDENT
## LR(1) items:
implementation -> LET IDENT . EQUAL seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> LET IDENT . fun_params EQUAL seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> LET IDENT . fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EQUAL shift to state 123
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 492
-- On ide shift to state 106
-- On fun_params shift to state 493
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 78:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
simple_pattern -> UNDERSCORE . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> UNDERSCORE

State 79:
## Known stack suffix:
## SUBTRACTIVE
## LR(1) items:
simple_pattern -> SUBTRACTIVE . INT [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
simple_pattern -> SUBTRACTIVE . FLOAT [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
-- On INT shift to state 80
-- On FLOAT shift to state 81
## Reductions:

State 80:
## Known stack suffix:
## SUBTRACTIVE INT
## LR(1) items:
simple_pattern -> SUBTRACTIVE INT . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> SUBTRACTIVE INT

State 81:
## Known stack suffix:
## SUBTRACTIVE FLOAT
## LR(1) items:
simple_pattern -> SUBTRACTIVE FLOAT . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> SUBTRACTIVE FLOAT

State 82:
## Known stack suffix:
## STRING
## LR(1) items:
atomic_constant -> STRING . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AS AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_constant -> STRING

State 83:
## Known stack suffix:
## LPAREN
## LR(1) items:
ide -> LPAREN . infx RPAREN [ THEN SEMI RPAREN RBRACE PLUSEQUAL ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
simple_pattern -> LPAREN . pattern RPAREN [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
simple_pattern -> LPAREN . pattern_comma_list RPAREN [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
simple_pattern -> LPAREN . RPAREN [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
simple_pattern -> LPAREN . pattern COLON type_expression RPAREN [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 84
-- On STRING shift to state 82
-- On STAR shift to state 16
-- On RPAREN shift to state 85
-- On PREFIX shift to state 17
-- On OR shift to state 18
-- On ON shift to state 19
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INFIX4 shift to state 20
-- On INFIX3 shift to state 21
-- On INFIX2 shift to state 22
-- On INFIX1 shift to state 23
-- On INFIX0 shift to state 24
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EQUALEQUAL shift to state 26
-- On EQUAL shift to state 27
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On BARBAR shift to state 31
-- On AMPERSAND shift to state 32
-- On AMPERAMPER shift to state 33
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 116
-- On pattern shift to state 118
-- On infx shift to state 34
-- On ide shift to state 106
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 84:
## Known stack suffix:
## SUBTRACTIVE
## LR(1) items:
infx -> SUBTRACTIVE . [ RPAREN ]
simple_pattern -> SUBTRACTIVE . INT [ RPAREN COMMA COLON BAR AS ]
simple_pattern -> SUBTRACTIVE . FLOAT [ RPAREN COMMA COLON BAR AS ]
## Transitions:
-- On INT shift to state 80
-- On FLOAT shift to state 81
## Reductions:
-- On RPAREN
--   reduce production infx -> SUBTRACTIVE

State 85:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
simple_pattern -> LPAREN RPAREN . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN RPAREN

State 86:
## Known stack suffix:
## LBRACE
## LR(1) items:
simple_pattern -> LBRACE . pattern_label_list RBRACE [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 87
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On qual_ident shift to state 42
-- On pattern_label_list shift to state 88
-- On pattern_label shift to state 90
-- On ide shift to state 43
-- On ext_ident shift to state 93
## Reductions:
-- On RBRACE
--   reduce production pattern_label_list ->

State 87:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
pattern_label_list -> UNDERSCORE . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern_label_list -> UNDERSCORE

State 88:
## Known stack suffix:
## LBRACE pattern_label_list
## LR(1) items:
simple_pattern -> LBRACE pattern_label_list . RBRACE [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
-- On RBRACE shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## LBRACE pattern_label_list RBRACE
## LR(1) items:
simple_pattern -> LBRACE pattern_label_list RBRACE . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LBRACE pattern_label_list RBRACE

State 90:
## Known stack suffix:
## pattern_label
## LR(1) items:
pattern_label_list -> pattern_label . SEMI pattern_label_list [ RBRACE ]
pattern_label_list -> pattern_label . [ RBRACE ]
## Transitions:
-- On SEMI shift to state 91
## Reductions:
-- On RBRACE
--   reduce production pattern_label_list -> pattern_label

State 91:
## Known stack suffix:
## pattern_label SEMI
## LR(1) items:
pattern_label_list -> pattern_label SEMI . pattern_label_list [ RBRACE ]
## Transitions:
-- On UNDERSCORE shift to state 87
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On qual_ident shift to state 42
-- On pattern_label_list shift to state 92
-- On pattern_label shift to state 90
-- On ide shift to state 43
-- On ext_ident shift to state 93
## Reductions:
-- On RBRACE
--   reduce production pattern_label_list ->

State 92:
## Known stack suffix:
## pattern_label SEMI pattern_label_list
## LR(1) items:
pattern_label_list -> pattern_label SEMI pattern_label_list . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern_label_list -> pattern_label SEMI pattern_label_list

State 93:
## Known stack suffix:
## ext_ident
## LR(1) items:
pattern_label -> ext_ident . EQUAL pattern [ SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## ext_ident EQUAL
## LR(1) items:
pattern_label -> ext_ident EQUAL . pattern [ SEMI RBRACE ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 109
-- On ide shift to state 106
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 95:
## Known stack suffix:
## INT
## LR(1) items:
atomic_constant -> INT . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AS AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_constant -> INT

State 96:
## Known stack suffix:
## FLOAT
## LR(1) items:
atomic_constant -> FLOAT . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AS AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_constant -> FLOAT

State 97:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
constructor -> CONSTRUCTOR . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
constructor -> CONSTRUCTOR . DOT CONSTRUCTOR [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
-- On DOT shift to state 98
## Reductions:
-- On THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND
--   reduce production constructor -> CONSTRUCTOR

State 98:
## Known stack suffix:
## CONSTRUCTOR DOT
## LR(1) items:
constructor -> CONSTRUCTOR DOT . CONSTRUCTOR [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
-- On CONSTRUCTOR shift to state 99
## Reductions:

State 99:
## Known stack suffix:
## CONSTRUCTOR DOT CONSTRUCTOR
## LR(1) items:
constructor -> CONSTRUCTOR DOT CONSTRUCTOR . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AS AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constructor -> CONSTRUCTOR DOT CONSTRUCTOR

State 100:
## Known stack suffix:
## CHAR
## LR(1) items:
atomic_constant -> CHAR . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AS AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_constant -> CHAR

State 101:
## Known stack suffix:
## BOOL
## LR(1) items:
atomic_constant -> BOOL . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AS AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_constant -> BOOL

State 102:
## Known stack suffix:
## simple_pattern
## LR(1) items:
pattern -> simple_pattern . [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> simple_pattern

State 103:
## Known stack suffix:
## pattern_comma_list
## LR(1) items:
pattern -> pattern_comma_list . [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
pattern_comma_list -> pattern_comma_list . COMMA pattern [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
## Transitions:
-- On COMMA shift to state 104
## Reductions:
-- On SEMI RPAREN RBRACE MINUSGREATER EQUAL COLON BAR AS
--   reduce production pattern -> pattern_comma_list

State 104:
## Known stack suffix:
## pattern_comma_list COMMA
## LR(1) items:
pattern_comma_list -> pattern_comma_list COMMA . pattern [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 105
-- On ide shift to state 106
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 105:
## Known stack suffix:
## pattern_comma_list COMMA pattern
## LR(1) items:
pattern -> pattern . AS IDENT [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
pattern -> pattern . BAR pattern [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
pattern_comma_list -> pattern_comma_list COMMA pattern . [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern_comma_list -> pattern_comma_list COMMA pattern

State 106:
## Known stack suffix:
## ide
## LR(1) items:
simple_pattern -> ide . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> ide

State 107:
## Known stack suffix:
## constructor
## LR(1) items:
simple_pattern -> constructor . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> constructor

State 108:
## Known stack suffix:
## atomic_constant
## LR(1) items:
simple_pattern -> atomic_constant . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> atomic_constant

State 109:
## Known stack suffix:
## ext_ident EQUAL pattern
## LR(1) items:
pattern -> pattern . AS IDENT [ SEMI RBRACE COMMA BAR AS ]
pattern -> pattern . BAR pattern [ SEMI RBRACE COMMA BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ SEMI RBRACE COMMA BAR AS ]
pattern_label -> ext_ident EQUAL pattern . [ SEMI RBRACE ]
## Transitions:
-- On COMMA shift to state 110
-- On BAR shift to state 112
-- On AS shift to state 114
## Reductions:
-- On SEMI RBRACE
--   reduce production pattern_label -> ext_ident EQUAL pattern

State 110:
## Known stack suffix:
## pattern COMMA
## LR(1) items:
pattern_comma_list -> pattern COMMA . pattern [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 111
-- On ide shift to state 106
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 111:
## Known stack suffix:
## pattern COMMA pattern
## LR(1) items:
pattern -> pattern . AS IDENT [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
pattern -> pattern . BAR pattern [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
pattern_comma_list -> pattern COMMA pattern . [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern_comma_list -> pattern COMMA pattern

State 112:
## Known stack suffix:
## pattern BAR
## LR(1) items:
pattern -> pattern BAR . pattern [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 113
-- On ide shift to state 106
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 113:
## Known stack suffix:
## pattern BAR pattern
## LR(1) items:
pattern -> pattern . AS IDENT [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
pattern -> pattern . BAR pattern [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
pattern -> pattern BAR pattern . [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
## Transitions:
-- On COMMA shift to state 110
## Reductions:
-- On SEMI RPAREN RBRACE MINUSGREATER EQUAL COLON BAR AS
--   reduce production pattern -> pattern BAR pattern

State 114:
## Known stack suffix:
## pattern AS
## LR(1) items:
pattern -> pattern AS . IDENT [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
## Transitions:
-- On IDENT shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## pattern AS IDENT
## LR(1) items:
pattern -> pattern AS IDENT . [ SEMI RPAREN RBRACE MINUSGREATER EQUAL COMMA COLON BAR AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> pattern AS IDENT

State 116:
## Known stack suffix:
## LPAREN pattern_comma_list
## LR(1) items:
pattern -> pattern_comma_list . [ RPAREN COMMA COLON BAR AS ]
pattern_comma_list -> pattern_comma_list . COMMA pattern [ RPAREN COMMA COLON BAR AS ]
simple_pattern -> LPAREN pattern_comma_list . RPAREN [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
-- On RPAREN shift to state 117
-- On COMMA shift to state 104
## Reductions:
-- On COLON BAR AS
--   reduce production pattern -> pattern_comma_list

State 117:
## Known stack suffix:
## LPAREN pattern_comma_list RPAREN
## LR(1) items:
simple_pattern -> LPAREN pattern_comma_list RPAREN . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN pattern_comma_list RPAREN

State 118:
## Known stack suffix:
## LPAREN pattern
## LR(1) items:
pattern -> pattern . AS IDENT [ RPAREN COMMA COLON BAR AS ]
pattern -> pattern . BAR pattern [ RPAREN COMMA COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ RPAREN COMMA COLON BAR AS ]
simple_pattern -> LPAREN pattern . RPAREN [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
simple_pattern -> LPAREN pattern . COLON type_expression RPAREN [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
-- On RPAREN shift to state 119
-- On COMMA shift to state 110
-- On COLON shift to state 120
-- On BAR shift to state 112
-- On AS shift to state 114
## Reductions:

State 119:
## Known stack suffix:
## LPAREN pattern RPAREN
## LR(1) items:
simple_pattern -> LPAREN pattern RPAREN . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN pattern RPAREN

State 120:
## Known stack suffix:
## LPAREN pattern COLON
## LR(1) items:
simple_pattern -> LPAREN pattern COLON . type_expression RPAREN [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On type_var shift to state 37
-- On type_star_list shift to state 38
-- On type_expression shift to state 121
-- On simple_type_desc shift to state 52
-- On simple_type shift to state 53
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 121:
## Known stack suffix:
## LPAREN pattern COLON type_expression
## LR(1) items:
simple_pattern -> LPAREN pattern COLON type_expression . RPAREN [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
-- On RPAREN shift to state 122
## Reductions:

State 122:
## Known stack suffix:
## LPAREN pattern COLON type_expression RPAREN
## LR(1) items:
simple_pattern -> LPAREN pattern COLON type_expression RPAREN . [ THEN SEMI RPAREN RBRACE ON MINUSGREATER EQUAL CONTINUE COMMA COLON BAR AS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_pattern -> LPAREN pattern COLON type_expression RPAREN

State 123:
## Known stack suffix:
## LET IDENT EQUAL
## LR(1) items:
implementation -> LET IDENT EQUAL . seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 491
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 124:
## Known stack suffix:
## UP
## LR(1) items:
expression_desc -> UP . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 490
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 125:
## Known stack suffix:
## TEST
## LR(1) items:
expression_desc -> TEST . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 489
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 126:
## Known stack suffix:
## SUBTRACTIVE
## LR(1) items:
expression_desc -> SUBTRACTIVE . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 466
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 127:
## Known stack suffix:
## RESET
## LR(1) items:
expression_desc -> RESET . seq_expression EVERY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 486
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 128:
## Known stack suffix:
## PRESENT
## LR(1) items:
expression_desc -> PRESENT . opt_bar present_handlers(expression) opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> PRESENT . opt_bar present_handlers(expression) INIT expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> PRESENT . opt_bar present_handlers(expression) ELSE expression opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On BAR shift to state 129
-- On opt_bar shift to state 130
## Reductions:
-- On UP STRING LPAREN LBRACE INT IDENT FLOAT CONSTRUCTOR CHAR BOOL
--   reduce production opt_bar ->

State 129:
## Known stack suffix:
## BAR
## LR(1) items:
opt_bar -> BAR . [ UP UNDERSCORE SUBTRACTIVE STRING LPAREN LBRACE INT IDENT FLOAT CONSTRUCTOR CHAR BOOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_bar -> BAR

State 130:
## Known stack suffix:
## PRESENT opt_bar
## LR(1) items:
expression_desc -> PRESENT opt_bar . present_handlers(expression) opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> PRESENT opt_bar . present_handlers(expression) INIT expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> PRESENT opt_bar . present_handlers(expression) ELSE expression opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 295
-- On qual_ident shift to state 42
-- On present_handlers(expression) shift to state 479
-- On present_handler(expression) shift to state 307
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 131:
## Known stack suffix:
## UP
## LR(1) items:
scondpat -> UP . simple_expression [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
## Transitions:
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 478
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 132:
## Known stack suffix:
## LPAREN
## LR(1) items:
ide -> LPAREN . infx RPAREN [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
simple_expression_desc -> LPAREN . RPAREN [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
simple_expression_desc -> LPAREN . expression_comma_list RPAREN [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
simple_expression_desc -> LPAREN . seq_expression RPAREN [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
simple_expression_desc -> LPAREN . simple_expression COLON type_expression RPAREN [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 133
-- On STRING shift to state 82
-- On STAR shift to state 16
-- On RPAREN shift to state 467
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 468
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On OR shift to state 18
-- On ON shift to state 19
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On INFIX4 shift to state 20
-- On INFIX3 shift to state 21
-- On INFIX2 shift to state 22
-- On INFIX1 shift to state 23
-- On INFIX0 shift to state 24
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EQUALEQUAL shift to state 26
-- On EQUAL shift to state 27
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On BARBAR shift to state 31
-- On AUTOMATON shift to state 190
-- On AMPERSAND shift to state 32
-- On AMPERAMPER shift to state 33
-- On simple_expression_desc shift to state 469
-- On simple_expression shift to state 470
-- On seq_expression shift to state 474
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On infx shift to state 34
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 476
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 133:
## Known stack suffix:
## SUBTRACTIVE
## LR(1) items:
expression_desc -> SUBTRACTIVE . expression [ SUBTRACTIVE STAR SEMI RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
infx -> SUBTRACTIVE . [ RPAREN ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 466
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On RPAREN
--   reduce production infx -> SUBTRACTIVE
-- On DO
--   reduce production local_list ->

State 134:
## Known stack suffix:
## PREFIX
## LR(1) items:
expression_desc -> PREFIX . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 465
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 135:
## Known stack suffix:
## PRE
## LR(1) items:
expression_desc -> PRE . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 464
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 136:
## Known stack suffix:
## PERIOD
## LR(1) items:
expression_desc -> PERIOD . period_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On FLOAT shift to state 137
-- On phase shift to state 138
-- On period_expression shift to state 143
## Reductions:
-- On LPAREN
--   reduce production phase ->

State 137:
## Known stack suffix:
## FLOAT
## LR(1) items:
phase -> FLOAT . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production phase -> FLOAT

State 138:
## Known stack suffix:
## phase
## LR(1) items:
period_expression -> phase . LPAREN period RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LPAREN shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## phase LPAREN
## LR(1) items:
period_expression -> phase LPAREN . period RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On FLOAT shift to state 140
-- On period shift to state 141
## Reductions:

State 140:
## Known stack suffix:
## FLOAT
## LR(1) items:
period -> FLOAT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production period -> FLOAT

State 141:
## Known stack suffix:
## phase LPAREN period
## LR(1) items:
period_expression -> phase LPAREN period . RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On RPAREN shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## phase LPAREN period RPAREN
## LR(1) items:
period_expression -> phase LPAREN period RPAREN . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production period_expression -> phase LPAREN period RPAREN

State 143:
## Known stack suffix:
## PERIOD period_expression
## LR(1) items:
expression_desc -> PERIOD period_expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> PERIOD period_expression

State 144:
## Known stack suffix:
## MATCH
## LR(1) items:
expression_desc -> MATCH . seq_expression WITH opt_bar match_handlers(expression) opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 453
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 145:
## Known stack suffix:
## LOCAL
## LR(1) items:
local_list -> LOCAL . list_of(COMMA,one_local) IN local_list [ DO ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On one_local shift to state 146
-- On list_of(COMMA,one_local) shift to state 147
-- On ide shift to state 152
## Reductions:

State 146:
## Known stack suffix:
## one_local
## LR(1) items:
list_of(COMMA,one_local) -> one_local . [ IN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_of(COMMA,one_local) -> one_local

State 147:
## Known stack suffix:
## LOCAL list_of(COMMA,one_local)
## LR(1) items:
list_of(COMMA,one_local) -> list_of(COMMA,one_local) . COMMA one_local [ IN COMMA ]
local_list -> LOCAL list_of(COMMA,one_local) . IN local_list [ DO ]
## Transitions:
-- On IN shift to state 148
-- On COMMA shift to state 150
## Reductions:

State 148:
## Known stack suffix:
## LOCAL list_of(COMMA,one_local) IN
## LR(1) items:
local_list -> LOCAL list_of(COMMA,one_local) IN . local_list [ DO ]
## Transitions:
-- On LOCAL shift to state 145
-- On local_list shift to state 149
## Reductions:
-- On DO
--   reduce production local_list ->

State 149:
## Known stack suffix:
## LOCAL list_of(COMMA,one_local) IN local_list
## LR(1) items:
local_list -> LOCAL list_of(COMMA,one_local) IN local_list . [ DO ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production local_list -> LOCAL list_of(COMMA,one_local) IN local_list

State 150:
## Known stack suffix:
## list_of(COMMA,one_local) COMMA
## LR(1) items:
list_of(COMMA,one_local) -> list_of(COMMA,one_local) COMMA . one_local [ IN COMMA ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On one_local shift to state 151
-- On ide shift to state 152
## Reductions:

State 151:
## Known stack suffix:
## list_of(COMMA,one_local) COMMA one_local
## LR(1) items:
list_of(COMMA,one_local) -> list_of(COMMA,one_local) COMMA one_local . [ IN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_of(COMMA,one_local) -> list_of(COMMA,one_local) COMMA one_local

State 152:
## Known stack suffix:
## ide
## LR(1) items:
one_local -> ide . optional(default_or_init) opt_combine [ IN COMMA ]
## Transitions:
-- On INIT shift to state 153
-- On DEFAULT shift to state 157
-- On optional(default_or_init) shift to state 159
-- On default_or_init shift to state 163
## Reductions:
-- On WITH IN COMMA
--   reduce production optional(default_or_init) ->

State 153:
## Known stack suffix:
## INIT
## LR(1) items:
default_or_init -> INIT . constant [ WITH IN COMMA ]
## Transitions:
-- On STRING shift to state 82
-- On LPAREN shift to state 30
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 28
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 154
-- On constant shift to state 155
-- On atomic_constant shift to state 156
## Reductions:

State 154:
## Known stack suffix:
## ext_ident
## LR(1) items:
constant -> ext_ident . [ WITH IN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> ext_ident

State 155:
## Known stack suffix:
## INIT constant
## LR(1) items:
default_or_init -> INIT constant . [ WITH IN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production default_or_init -> INIT constant

State 156:
## Known stack suffix:
## atomic_constant
## LR(1) items:
constant -> atomic_constant . [ WITH IN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> atomic_constant

State 157:
## Known stack suffix:
## DEFAULT
## LR(1) items:
default_or_init -> DEFAULT . constant [ WITH IN COMMA ]
## Transitions:
-- On STRING shift to state 82
-- On LPAREN shift to state 30
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 28
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 154
-- On constant shift to state 158
-- On atomic_constant shift to state 156
## Reductions:

State 158:
## Known stack suffix:
## DEFAULT constant
## LR(1) items:
default_or_init -> DEFAULT constant . [ WITH IN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production default_or_init -> DEFAULT constant

State 159:
## Known stack suffix:
## ide optional(default_or_init)
## LR(1) items:
one_local -> ide optional(default_or_init) . opt_combine [ IN COMMA ]
## Transitions:
-- On WITH shift to state 160
-- On opt_combine shift to state 162
## Reductions:
-- On IN COMMA
--   reduce production opt_combine ->

State 160:
## Known stack suffix:
## WITH
## LR(1) items:
opt_combine -> WITH . ext_ident [ IN COMMA ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## WITH ext_ident
## LR(1) items:
opt_combine -> WITH ext_ident . [ IN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_combine -> WITH ext_ident

State 162:
## Known stack suffix:
## ide optional(default_or_init) opt_combine
## LR(1) items:
one_local -> ide optional(default_or_init) opt_combine . [ IN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production one_local -> ide optional(default_or_init) opt_combine

State 163:
## Known stack suffix:
## default_or_init
## LR(1) items:
optional(default_or_init) -> default_or_init . [ WITH IN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optional(default_or_init) -> default_or_init

State 164:
## Known stack suffix:
## LET
## LR(1) items:
expression_desc -> LET . list_of(AND,localized(equation_desc)) IN seq_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> LET . REC list_of(AND,localized(equation_desc)) IN seq_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On REC shift to state 446
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 312
-- On list_of(AND,localized(equation_desc)) shift to state 450
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 165:
## Known stack suffix:
## RESET
## LR(1) items:
simple_equation_desc -> RESET . list_of(AND,localized(equation_desc)) EVERY expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 312
-- On list_of(AND,localized(equation_desc)) shift to state 443
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 166:
## Known stack suffix:
## PRESENT
## LR(1) items:
simple_equation_desc -> PRESENT . opt_bar present_handlers(block_of_equation) opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
simple_equation_desc -> PRESENT . opt_bar present_handlers(block_of_equation) ELSE block_of_equation opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On BAR shift to state 129
-- On opt_bar shift to state 167
## Reductions:
-- On UP STRING LPAREN LBRACE INT IDENT FLOAT CONSTRUCTOR CHAR BOOL
--   reduce production opt_bar ->

State 167:
## Known stack suffix:
## PRESENT opt_bar
## LR(1) items:
simple_equation_desc -> PRESENT opt_bar . present_handlers(block_of_equation) opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
simple_equation_desc -> PRESENT opt_bar . present_handlers(block_of_equation) ELSE block_of_equation opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 432
-- On qual_ident shift to state 42
-- On present_handlers(block_of_equation) shift to state 435
-- On present_handler(block_of_equation) shift to state 442
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 168:
## Known stack suffix:
## LBRACE
## LR(1) items:
simple_expression_desc -> LBRACE . label_expression_list RBRACE [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On qual_ident shift to state 42
-- On label_expression_list shift to state 169
-- On label_expression shift to state 171
-- On ide shift to state 43
-- On ext_ident shift to state 174
## Reductions:

State 169:
## Known stack suffix:
## LBRACE label_expression_list
## LR(1) items:
simple_expression_desc -> LBRACE label_expression_list . RBRACE [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On RBRACE shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## LBRACE label_expression_list RBRACE
## LR(1) items:
simple_expression_desc -> LBRACE label_expression_list RBRACE . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expression_desc -> LBRACE label_expression_list RBRACE

State 171:
## Known stack suffix:
## label_expression
## LR(1) items:
label_expression_list -> label_expression . [ RBRACE ]
label_expression_list -> label_expression . SEMI [ RBRACE ]
label_expression_list -> label_expression . SEMI label_expression_list [ RBRACE ]
## Transitions:
-- On SEMI shift to state 172
## Reductions:
-- On RBRACE
--   reduce production label_expression_list -> label_expression

State 172:
## Known stack suffix:
## label_expression SEMI
## LR(1) items:
label_expression_list -> label_expression SEMI . [ RBRACE ]
label_expression_list -> label_expression SEMI . label_expression_list [ RBRACE ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On qual_ident shift to state 42
-- On label_expression_list shift to state 173
-- On label_expression shift to state 171
-- On ide shift to state 43
-- On ext_ident shift to state 174
## Reductions:
-- On RBRACE
--   reduce production label_expression_list -> label_expression SEMI

State 173:
## Known stack suffix:
## label_expression SEMI label_expression_list
## LR(1) items:
label_expression_list -> label_expression SEMI label_expression_list . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_expression_list -> label_expression SEMI label_expression_list

State 174:
## Known stack suffix:
## ext_ident
## LR(1) items:
label_expression -> ext_ident . EQUAL expression [ SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 175
## Reductions:

State 175:
## Known stack suffix:
## ext_ident EQUAL
## LR(1) items:
label_expression -> ext_ident EQUAL . expression [ SEMI RBRACE ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 431
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 176:
## Known stack suffix:
## LAST
## LR(1) items:
expression_desc -> LAST . ide [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On ide shift to state 177
## Reductions:

State 177:
## Known stack suffix:
## LAST ide
## LR(1) items:
expression_desc -> LAST ide . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> LAST ide

State 178:
## Known stack suffix:
## INLINE
## LR(1) items:
expression_desc -> INLINE . ext_ident simple_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## INLINE ext_ident
## LR(1) items:
expression_desc -> INLINE ext_ident . simple_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 183
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 180:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
constructor -> CONSTRUCTOR . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
constructor -> CONSTRUCTOR . DOT CONSTRUCTOR [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
qual_ident -> CONSTRUCTOR . DOT ide [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On DOT shift to state 181
## Reductions:
-- On WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production constructor -> CONSTRUCTOR

State 181:
## Known stack suffix:
## CONSTRUCTOR DOT
## LR(1) items:
constructor -> CONSTRUCTOR DOT . CONSTRUCTOR [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
qual_ident -> CONSTRUCTOR DOT . ide [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 99
-- On ide shift to state 36
## Reductions:

State 182:
## Known stack suffix:
## simple_expression_desc
## LR(1) items:
simple_expression -> simple_expression_desc . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expression -> simple_expression_desc

State 183:
## Known stack suffix:
## INLINE ext_ident simple_expression
## LR(1) items:
expression_desc -> INLINE ext_ident simple_expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> INLINE ext_ident simple_expression

State 184:
## Known stack suffix:
## ext_ident
## LR(1) items:
simple_expression_desc -> ext_ident . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expression_desc -> ext_ident

State 185:
## Known stack suffix:
## constructor
## LR(1) items:
simple_expression_desc -> constructor . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expression_desc -> constructor

State 186:
## Known stack suffix:
## atomic_constant
## LR(1) items:
simple_expression_desc -> atomic_constant . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expression_desc -> atomic_constant

State 187:
## Known stack suffix:
## INIT
## LR(1) items:
expression_desc -> INIT . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> INIT

State 188:
## Known stack suffix:
## IF
## LR(1) items:
expression_desc -> IF . seq_expression THEN seq_expression ELSE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 426
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 189:
## Known stack suffix:
## DISC
## LR(1) items:
expression_desc -> DISC . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 425
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 190:
## Known stack suffix:
## AUTOMATON
## LR(1) items:
expression_desc -> AUTOMATON . opt_bar automaton_handlers(expression) [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> AUTOMATON . opt_bar automaton_handlers(expression) INIT state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On BAR shift to state 129
-- On opt_bar shift to state 191
## Reductions:
-- On CONSTRUCTOR
--   reduce production opt_bar ->

State 191:
## Known stack suffix:
## AUTOMATON opt_bar
## LR(1) items:
expression_desc -> AUTOMATON opt_bar . automaton_handlers(expression) [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> AUTOMATON opt_bar . automaton_handlers(expression) INIT state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On CONSTRUCTOR shift to state 192
-- On state_pat shift to state 199
-- On automaton_handlers(expression) shift to state 419
-- On automaton_handler(expression) shift to state 424
## Reductions:

State 192:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
state_pat -> CONSTRUCTOR . [ MINUSGREATER ]
state_pat -> CONSTRUCTOR . LPAREN list_of(COMMA,IDENT) RPAREN [ MINUSGREATER ]
## Transitions:
-- On LPAREN shift to state 193
## Reductions:
-- On MINUSGREATER
--   reduce production state_pat -> CONSTRUCTOR

State 193:
## Known stack suffix:
## CONSTRUCTOR LPAREN
## LR(1) items:
state_pat -> CONSTRUCTOR LPAREN . list_of(COMMA,IDENT) RPAREN [ MINUSGREATER ]
## Transitions:
-- On IDENT shift to state 194
-- On list_of(COMMA,IDENT) shift to state 195
## Reductions:

State 194:
## Known stack suffix:
## IDENT
## LR(1) items:
list_of(COMMA,IDENT) -> IDENT . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_of(COMMA,IDENT) -> IDENT

State 195:
## Known stack suffix:
## CONSTRUCTOR LPAREN list_of(COMMA,IDENT)
## LR(1) items:
list_of(COMMA,IDENT) -> list_of(COMMA,IDENT) . COMMA IDENT [ RPAREN COMMA ]
state_pat -> CONSTRUCTOR LPAREN list_of(COMMA,IDENT) . RPAREN [ MINUSGREATER ]
## Transitions:
-- On RPAREN shift to state 196
-- On COMMA shift to state 197
## Reductions:

State 196:
## Known stack suffix:
## CONSTRUCTOR LPAREN list_of(COMMA,IDENT) RPAREN
## LR(1) items:
state_pat -> CONSTRUCTOR LPAREN list_of(COMMA,IDENT) RPAREN . [ MINUSGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production state_pat -> CONSTRUCTOR LPAREN list_of(COMMA,IDENT) RPAREN

State 197:
## Known stack suffix:
## list_of(COMMA,IDENT) COMMA
## LR(1) items:
list_of(COMMA,IDENT) -> list_of(COMMA,IDENT) COMMA . IDENT [ RPAREN COMMA ]
## Transitions:
-- On IDENT shift to state 198
## Reductions:

State 198:
## Known stack suffix:
## list_of(COMMA,IDENT) COMMA IDENT
## LR(1) items:
list_of(COMMA,IDENT) -> list_of(COMMA,IDENT) COMMA IDENT . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_of(COMMA,IDENT) -> list_of(COMMA,IDENT) COMMA IDENT

State 199:
## Known stack suffix:
## state_pat
## LR(1) items:
automaton_handler(expression) -> state_pat . MINUSGREATER block(expression) DONE [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat . MINUSGREATER block(expression) THEN state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat . MINUSGREATER block(expression) CONTINUE state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat . MINUSGREATER block(expression) THEN emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat . MINUSGREATER block(expression) CONTINUE emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat . MINUSGREATER block(expression) UNTIL escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat . MINUSGREATER block(expression) UNLESS escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat . MINUSGREATER block(expression) UNTIL escape_list UNLESS escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On MINUSGREATER shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## state_pat MINUSGREATER
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER . block(expression) DONE [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER . block(expression) THEN state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER . block(expression) CONTINUE state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER . block(expression) THEN emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER . block(expression) CONTINUE emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER . block(expression) UNTIL escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER . block(expression) UNLESS escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER . block(expression) UNTIL escape_list UNLESS escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LET shift to state 201
-- On one_let shift to state 227
-- On let_list shift to state 399
-- On block(expression) shift to state 403
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 201:
## Known stack suffix:
## LET
## LR(1) items:
one_let -> LET . list_of(AND,localized(equation_desc)) [ IN ]
one_let -> LET . REC list_of(AND,localized(equation_desc)) [ IN ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On REC shift to state 202
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 312
-- On list_of(AND,localized(equation_desc)) shift to state 398
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 202:
## Known stack suffix:
## LET REC
## LR(1) items:
one_let -> LET REC . list_of(AND,localized(equation_desc)) [ IN ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 312
-- On list_of(AND,localized(equation_desc)) shift to state 397
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 203:
## Known stack suffix:
## PERIOD
## LR(1) items:
equation_desc -> PERIOD . pattern EQUAL period_expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 204
-- On ide shift to state 106
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 204:
## Known stack suffix:
## PERIOD pattern
## LR(1) items:
equation_desc -> PERIOD pattern . EQUAL period_expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
pattern -> pattern . AS IDENT [ EQUAL COMMA BAR AS ]
pattern -> pattern . BAR pattern [ EQUAL COMMA BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ EQUAL COMMA BAR AS ]
## Transitions:
-- On EQUAL shift to state 205
-- On COMMA shift to state 110
-- On BAR shift to state 112
-- On AS shift to state 114
## Reductions:

State 205:
## Known stack suffix:
## PERIOD pattern EQUAL
## LR(1) items:
equation_desc -> PERIOD pattern EQUAL . period_expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On FLOAT shift to state 137
-- On phase shift to state 138
-- On period_expression shift to state 206
## Reductions:
-- On LPAREN
--   reduce production phase ->

State 206:
## Known stack suffix:
## PERIOD pattern EQUAL period_expression
## LR(1) items:
equation_desc -> PERIOD pattern EQUAL period_expression . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production equation_desc -> PERIOD pattern EQUAL period_expression

State 207:
## Known stack suffix:
## NEXT
## LR(1) items:
equation_desc -> NEXT . ide EQUAL expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
equation_desc -> NEXT . ide EQUAL expression INIT expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On ide shift to state 208
## Reductions:

State 208:
## Known stack suffix:
## NEXT ide
## LR(1) items:
equation_desc -> NEXT ide . EQUAL expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
equation_desc -> NEXT ide . EQUAL expression INIT expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On EQUAL shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## NEXT ide EQUAL
## LR(1) items:
equation_desc -> NEXT ide EQUAL . expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
equation_desc -> NEXT ide EQUAL . expression INIT expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 394
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 210:
## Known stack suffix:
## simple_expression_desc
## LR(1) items:
expression_desc -> simple_expression_desc . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> simple_expression_desc

State 211:
## Known stack suffix:
## localized(expression_desc)
## LR(1) items:
expression -> localized(expression_desc) . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> localized(expression_desc)

State 212:
## Known stack suffix:
## local_list
## LR(1) items:
expression_desc -> local_list . DO list_of(AND,localized(equation_desc)) IN expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On DO shift to state 213
## Reductions:

State 213:
## Known stack suffix:
## local_list DO
## LR(1) items:
expression_desc -> local_list DO . list_of(AND,localized(equation_desc)) IN expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 312
-- On list_of(AND,localized(equation_desc)) shift to state 391
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 214:
## Known stack suffix:
## MATCH
## LR(1) items:
simple_equation_desc -> MATCH . seq_expression WITH opt_bar match_handlers(block_of_equation) opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 215
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 215:
## Known stack suffix:
## MATCH seq_expression
## LR(1) items:
simple_equation_desc -> MATCH seq_expression . WITH opt_bar match_handlers(block_of_equation) opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On WITH shift to state 216
## Reductions:

State 216:
## Known stack suffix:
## MATCH seq_expression WITH
## LR(1) items:
simple_equation_desc -> MATCH seq_expression WITH . opt_bar match_handlers(block_of_equation) opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On BAR shift to state 129
-- On opt_bar shift to state 217
## Reductions:
-- On UNDERSCORE SUBTRACTIVE STRING LPAREN LBRACE INT IDENT FLOAT CONSTRUCTOR CHAR BOOL
--   reduce production opt_bar ->

State 217:
## Known stack suffix:
## MATCH seq_expression WITH opt_bar
## LR(1) items:
simple_equation_desc -> MATCH seq_expression WITH opt_bar . match_handlers(block_of_equation) opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 218
-- On match_handlers(block_of_equation) shift to state 386
-- On match_handler(block_of_equation) shift to state 390
-- On ide shift to state 106
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 218:
## Known stack suffix:
## pattern
## LR(1) items:
match_handler(block_of_equation) -> pattern . MINUSGREATER block_of_equation [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
pattern -> pattern . AS IDENT [ MINUSGREATER COMMA BAR AS ]
pattern -> pattern . BAR pattern [ MINUSGREATER COMMA BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ MINUSGREATER COMMA BAR AS ]
## Transitions:
-- On MINUSGREATER shift to state 219
-- On COMMA shift to state 110
-- On BAR shift to state 112
-- On AS shift to state 114
## Reductions:

State 219:
## Known stack suffix:
## pattern MINUSGREATER
## LR(1) items:
match_handler(block_of_equation) -> pattern MINUSGREATER . block_of_equation [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On MATCH shift to state 214
-- On LET shift to state 201
-- On IF shift to state 220
-- On AUTOMATON shift to state 223
-- On simple_equation_desc shift to state 376
-- On one_let shift to state 227
-- On localized(simple_equation_desc) shift to state 377
-- On let_list shift to state 316
-- On block_of_equation shift to state 385
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 220:
## Known stack suffix:
## IF
## LR(1) items:
simple_equation_desc -> IF . seq_expression THEN block_of_equation ELSE block_of_equation opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 221
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 221:
## Known stack suffix:
## IF seq_expression
## LR(1) items:
simple_equation_desc -> IF seq_expression . THEN block_of_equation ELSE block_of_equation opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On THEN shift to state 222
## Reductions:

State 222:
## Known stack suffix:
## IF seq_expression THEN
## LR(1) items:
simple_equation_desc -> IF seq_expression THEN . block_of_equation ELSE block_of_equation opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On MATCH shift to state 214
-- On LET shift to state 201
-- On IF shift to state 220
-- On AUTOMATON shift to state 223
-- On simple_equation_desc shift to state 376
-- On one_let shift to state 227
-- On localized(simple_equation_desc) shift to state 377
-- On let_list shift to state 316
-- On block_of_equation shift to state 378
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 223:
## Known stack suffix:
## AUTOMATON
## LR(1) items:
simple_equation_desc -> AUTOMATON . opt_bar automaton_handlers(equation_empty_list) opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
simple_equation_desc -> AUTOMATON . opt_bar automaton_handlers(equation_empty_list) INIT state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On BAR shift to state 129
-- On opt_bar shift to state 224
## Reductions:
-- On CONSTRUCTOR
--   reduce production opt_bar ->

State 224:
## Known stack suffix:
## AUTOMATON opt_bar
## LR(1) items:
simple_equation_desc -> AUTOMATON opt_bar . automaton_handlers(equation_empty_list) opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
simple_equation_desc -> AUTOMATON opt_bar . automaton_handlers(equation_empty_list) INIT state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On CONSTRUCTOR shift to state 192
-- On state_pat shift to state 225
-- On automaton_handlers(equation_empty_list) shift to state 368
-- On automaton_handler(equation_empty_list) shift to state 375
## Reductions:

State 225:
## Known stack suffix:
## state_pat
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat . MINUSGREATER block(equation_empty_list) DONE [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat . MINUSGREATER block(equation_empty_list) THEN state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat . MINUSGREATER block(equation_empty_list) CONTINUE state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat . MINUSGREATER block(equation_empty_list) THEN emission state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat . MINUSGREATER block(equation_empty_list) CONTINUE emission state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat . MINUSGREATER block(equation_empty_list) UNTIL escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat . MINUSGREATER block(equation_empty_list) UNLESS escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat . MINUSGREATER block(equation_empty_list) UNTIL escape_list UNLESS escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On MINUSGREATER shift to state 226
## Reductions:

State 226:
## Known stack suffix:
## state_pat MINUSGREATER
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER . block(equation_empty_list) DONE [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER . block(equation_empty_list) THEN state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER . block(equation_empty_list) CONTINUE state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER . block(equation_empty_list) THEN emission state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER . block(equation_empty_list) CONTINUE emission state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER . block(equation_empty_list) UNTIL escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER . block(equation_empty_list) UNLESS escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER . block(equation_empty_list) UNTIL escape_list UNLESS escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On LET shift to state 201
-- On one_let shift to state 227
-- On let_list shift to state 230
-- On block(equation_empty_list) shift to state 326
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 227:
## Known stack suffix:
## one_let
## LR(1) items:
let_list -> one_let . IN let_list [ LOCAL DO CONSTRUCTOR ]
## Transitions:
-- On IN shift to state 228
## Reductions:

State 228:
## Known stack suffix:
## one_let IN
## LR(1) items:
let_list -> one_let IN . let_list [ LOCAL DO CONSTRUCTOR ]
## Transitions:
-- On LET shift to state 201
-- On one_let shift to state 227
-- On let_list shift to state 229
## Reductions:
-- On LOCAL DO CONSTRUCTOR
--   reduce production let_list ->

State 229:
## Known stack suffix:
## one_let IN let_list
## LR(1) items:
let_list -> one_let IN let_list . [ LOCAL DO CONSTRUCTOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production let_list -> one_let IN let_list

State 230:
## Known stack suffix:
## let_list
## LR(1) items:
block(equation_empty_list) -> let_list . local_list DO equation_empty_list [ UNTIL UNLESS THEN DONE CONTINUE ]
## Transitions:
-- On LOCAL shift to state 145
-- On local_list shift to state 231
## Reductions:
-- On DO
--   reduce production local_list ->

State 231:
## Known stack suffix:
## let_list local_list
## LR(1) items:
block(equation_empty_list) -> let_list local_list . DO equation_empty_list [ UNTIL UNLESS THEN DONE CONTINUE ]
## Transitions:
-- On DO shift to state 232
## Reductions:

State 232:
## Known stack suffix:
## let_list local_list DO
## LR(1) items:
block(equation_empty_list) -> let_list local_list DO . equation_empty_list [ UNTIL UNLESS THEN DONE CONTINUE ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 312
-- On list_of(AND,localized(equation_desc)) shift to state 313
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_empty_list shift to state 325
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On UNTIL UNLESS THEN DONE CONTINUE
--   reduce production equation_empty_list ->
-- On LOCAL DO
--   reduce production let_list ->

State 233:
## Known stack suffix:
## INIT
## LR(1) items:
equation_desc -> INIT . ide EQUAL expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On ide shift to state 234
## Reductions:

State 234:
## Known stack suffix:
## INIT ide
## LR(1) items:
equation_desc -> INIT ide . EQUAL expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On EQUAL shift to state 235
## Reductions:

State 235:
## Known stack suffix:
## INIT ide EQUAL
## LR(1) items:
equation_desc -> INIT ide EQUAL . expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 277
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 236:
## Known stack suffix:
## ext_ident
## LR(1) items:
expression_desc -> ext_ident . simple_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
simple_expression_desc -> ext_ident . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA COLON BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 237
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA COLON BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production simple_expression_desc -> ext_ident

State 237:
## Known stack suffix:
## ext_ident simple_expression
## LR(1) items:
expression_desc -> ext_ident simple_expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> ext_ident simple_expression

State 238:
## Known stack suffix:
## expression_desc
## LR(1) items:
localized(expression_desc) -> expression_desc . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production localized(expression_desc) -> expression_desc

State 239:
## Known stack suffix:
## expression_comma_list
## LR(1) items:
expression_comma_list -> expression_comma_list . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression_comma_list . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On COMMA shift to state 240
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> expression_comma_list

State 240:
## Known stack suffix:
## expression_comma_list COMMA
## LR(1) items:
expression_comma_list -> expression_comma_list COMMA . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 241
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 241:
## Known stack suffix:
## expression_comma_list COMMA expression
## LR(1) items:
expression_comma_list -> expression_comma_list COMMA expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE COMMA BAR ATOMIC AND
--   reduce production expression_comma_list -> expression_comma_list COMMA expression

State 242:
## Known stack suffix:
## expression SUBTRACTIVE
## LR(1) items:
expression_desc -> expression SUBTRACTIVE . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 243
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 243:
## Known stack suffix:
## expression SUBTRACTIVE expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression SUBTRACTIVE expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On STAR shift to state 244
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On FBY shift to state 248
-- On DOT shift to state 250
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX2 INFIX1 INFIX0 IN HYBRID FUN EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER
--   reduce production expression_desc -> expression SUBTRACTIVE expression

State 244:
## Known stack suffix:
## expression STAR
## LR(1) items:
expression_desc -> expression STAR . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 245
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 245:
## Known stack suffix:
## expression STAR expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression STAR expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On INFIX4 shift to state 246
-- On FBY shift to state 248
-- On DOT shift to state 250
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER
--   reduce production expression_desc -> expression STAR expression

State 246:
## Known stack suffix:
## expression INFIX4
## LR(1) items:
expression_desc -> expression INFIX4 . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 247
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 247:
## Known stack suffix:
## expression INFIX4 expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression INFIX4 expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On FBY shift to state 248
-- On DOT shift to state 250
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER
--   reduce production expression_desc -> expression INFIX4 expression

State 248:
## Known stack suffix:
## expression FBY
## LR(1) items:
expression_desc -> expression FBY . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 249
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 249:
## Known stack suffix:
## expression FBY expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression FBY expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On FBY shift to state 248
-- On DOT shift to state 250
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> expression FBY expression

State 250:
## Known stack suffix:
## expression DOT
## LR(1) items:
expression_desc -> expression DOT . ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 251
## Reductions:

State 251:
## Known stack suffix:
## expression DOT ext_ident
## LR(1) items:
expression_desc -> expression DOT ext_ident . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> expression DOT ext_ident

State 252:
## Known stack suffix:
## expression AFTER
## LR(1) items:
expression_desc -> expression AFTER . IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression AFTER . LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LPAREN shift to state 253
-- On IDENT shift to state 256
## Reductions:

State 253:
## Known stack suffix:
## expression AFTER LPAREN
## LR(1) items:
expression_desc -> expression AFTER LPAREN . list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On IDENT shift to state 194
-- On list_of(COMMA,IDENT) shift to state 254
## Reductions:

State 254:
## Known stack suffix:
## expression AFTER LPAREN list_of(COMMA,IDENT)
## LR(1) items:
expression_desc -> expression AFTER LPAREN list_of(COMMA,IDENT) . RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
list_of(COMMA,IDENT) -> list_of(COMMA,IDENT) . COMMA IDENT [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 255
-- On COMMA shift to state 197
## Reductions:

State 255:
## Known stack suffix:
## expression AFTER LPAREN list_of(COMMA,IDENT) RPAREN
## LR(1) items:
expression_desc -> expression AFTER LPAREN list_of(COMMA,IDENT) RPAREN . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> expression AFTER LPAREN list_of(COMMA,IDENT) RPAREN

State 256:
## Known stack suffix:
## expression AFTER IDENT
## LR(1) items:
expression_desc -> expression AFTER IDENT . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> expression AFTER IDENT

State 257:
## Known stack suffix:
## expression INFIX3
## LR(1) items:
expression_desc -> expression INFIX3 . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 258
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 258:
## Known stack suffix:
## expression INFIX3 expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression INFIX3 expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On INFIX4 shift to state 246
-- On FBY shift to state 248
-- On DOT shift to state 250
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER
--   reduce production expression_desc -> expression INFIX3 expression

State 259:
## Known stack suffix:
## expression OR
## LR(1) items:
expression_desc -> expression OR . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 260
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 260:
## Known stack suffix:
## expression OR expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression OR expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND
--   reduce production expression_desc -> expression OR expression

State 261:
## Known stack suffix:
## expression INFIX2
## LR(1) items:
expression_desc -> expression INFIX2 . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 262
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 262:
## Known stack suffix:
## expression INFIX2 expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression INFIX2 expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On STAR shift to state 244
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On FBY shift to state 248
-- On DOT shift to state 250
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX2 INFIX1 INFIX0 IN HYBRID FUN EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER
--   reduce production expression_desc -> expression INFIX2 expression

State 263:
## Known stack suffix:
## expression INFIX1
## LR(1) items:
expression_desc -> expression INFIX1 . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 264
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 264:
## Known stack suffix:
## expression INFIX1 expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression INFIX1 expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On FBY shift to state 248
-- On DOT shift to state 250
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX0 IN HYBRID FUN EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER
--   reduce production expression_desc -> expression INFIX1 expression

State 265:
## Known stack suffix:
## expression INFIX0
## LR(1) items:
expression_desc -> expression INFIX0 . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 266
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 266:
## Known stack suffix:
## expression INFIX0 expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression INFIX0 expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On FBY shift to state 248
-- On DOT shift to state 250
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX0 IN HYBRID FUN EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER
--   reduce production expression_desc -> expression INFIX0 expression

State 267:
## Known stack suffix:
## expression EQUAL
## LR(1) items:
expression_desc -> expression EQUAL . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 268
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 268:
## Known stack suffix:
## expression EQUAL expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression EQUAL expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On FBY shift to state 248
-- On DOT shift to state 250
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX0 IN HYBRID FUN EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER
--   reduce production expression_desc -> expression EQUAL expression

State 269:
## Known stack suffix:
## expression AMPERSAND
## LR(1) items:
expression_desc -> expression AMPERSAND . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 270
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 270:
## Known stack suffix:
## expression AMPERSAND expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression AMPERSAND expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER
--   reduce production expression_desc -> expression AMPERSAND expression

State 271:
## Known stack suffix:
## expression AMPERAMPER
## LR(1) items:
expression_desc -> expression AMPERAMPER . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 272
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 272:
## Known stack suffix:
## expression AMPERAMPER expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression AMPERAMPER expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER
--   reduce production expression_desc -> expression AMPERAMPER expression

State 273:
## Known stack suffix:
## expression MINUSGREATER
## LR(1) items:
expression_desc -> expression MINUSGREATER . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 274
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 274:
## Known stack suffix:
## expression MINUSGREATER expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression MINUSGREATER expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE COMMA BAR ATOMIC AND
--   reduce production expression_desc -> expression MINUSGREATER expression

State 275:
## Known stack suffix:
## expression BARBAR
## LR(1) items:
expression_desc -> expression BARBAR . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 276
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 276:
## Known stack suffix:
## expression BARBAR expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression BARBAR expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND
--   reduce production expression_desc -> expression BARBAR expression

State 277:
## Known stack suffix:
## INIT ide EQUAL expression
## LR(1) items:
equation_desc -> INIT ide EQUAL expression . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
expression_comma_list -> expression . COMMA expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production equation_desc -> INIT ide EQUAL expression

State 278:
## Known stack suffix:
## expression COMMA
## LR(1) items:
expression_comma_list -> expression COMMA . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 279
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 279:
## Known stack suffix:
## expression COMMA expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_comma_list -> expression COMMA expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE COMMA BAR ATOMIC AND
--   reduce production expression_comma_list -> expression COMMA expression

State 280:
## Known stack suffix:
## EMIT
## LR(1) items:
equation_desc -> EMIT . ide [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
equation_desc -> EMIT . ide EQUAL expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On ide shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## EMIT ide
## LR(1) items:
equation_desc -> EMIT ide . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
equation_desc -> EMIT ide . EQUAL expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On EQUAL shift to state 282
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production equation_desc -> EMIT ide

State 282:
## Known stack suffix:
## EMIT ide EQUAL
## LR(1) items:
equation_desc -> EMIT ide EQUAL . expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 283
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 283:
## Known stack suffix:
## EMIT ide EQUAL expression
## LR(1) items:
equation_desc -> EMIT ide EQUAL expression . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
expression_comma_list -> expression . COMMA expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production equation_desc -> EMIT ide EQUAL expression

State 284:
## Known stack suffix:
## DER
## LR(1) items:
equation_desc -> DER . ide EQUAL expression optional_init [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
equation_desc -> DER . ide EQUAL expression optional_init RESET opt_bar present_handlers(expression) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On ide shift to state 285
## Reductions:

State 285:
## Known stack suffix:
## DER ide
## LR(1) items:
equation_desc -> DER ide . EQUAL expression optional_init [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
equation_desc -> DER ide . EQUAL expression optional_init RESET opt_bar present_handlers(expression) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On EQUAL shift to state 286
## Reductions:

State 286:
## Known stack suffix:
## DER ide EQUAL
## LR(1) items:
equation_desc -> DER ide EQUAL . expression optional_init [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
equation_desc -> DER ide EQUAL . expression optional_init RESET opt_bar present_handlers(expression) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 287
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 287:
## Known stack suffix:
## DER ide EQUAL expression
## LR(1) items:
equation_desc -> DER ide EQUAL expression . optional_init [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
equation_desc -> DER ide EQUAL expression . optional_init RESET opt_bar present_handlers(expression) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
expression_comma_list -> expression . COMMA expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INIT shift to state 288
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
-- On optional_init shift to state 290
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI RESET OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production optional_init ->

State 288:
## Known stack suffix:
## INIT
## LR(1) items:
optional_init -> INIT . expression [ UNTIL UNLESS TYPE THEN SEMISEMI RESET OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 289
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 289:
## Known stack suffix:
## INIT expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI RESET OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
optional_init -> INIT expression . [ UNTIL UNLESS TYPE THEN SEMISEMI RESET OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI RESET OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production optional_init -> INIT expression

State 290:
## Known stack suffix:
## DER ide EQUAL expression optional_init
## LR(1) items:
equation_desc -> DER ide EQUAL expression optional_init . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
equation_desc -> DER ide EQUAL expression optional_init . RESET opt_bar present_handlers(expression) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On RESET shift to state 291
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production equation_desc -> DER ide EQUAL expression optional_init

State 291:
## Known stack suffix:
## DER ide EQUAL expression optional_init RESET
## LR(1) items:
equation_desc -> DER ide EQUAL expression optional_init RESET . opt_bar present_handlers(expression) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On BAR shift to state 129
-- On opt_bar shift to state 292
## Reductions:
-- On UP STRING LPAREN LBRACE INT IDENT FLOAT CONSTRUCTOR CHAR BOOL
--   reduce production opt_bar ->

State 292:
## Known stack suffix:
## DER ide EQUAL expression optional_init RESET opt_bar
## LR(1) items:
equation_desc -> DER ide EQUAL expression optional_init RESET opt_bar . present_handlers(expression) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 295
-- On qual_ident shift to state 42
-- On present_handlers(expression) shift to state 304
-- On present_handler(expression) shift to state 307
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 293:
## Known stack suffix:
## simple_expression
## LR(1) items:
scondpat -> simple_expression . simple_pattern [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
scondpat -> simple_expression . [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 294
-- On ide shift to state 106
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On THEN ON MINUSGREATER CONTINUE BAR AMPERSAND
--   reduce production scondpat -> simple_expression

State 294:
## Known stack suffix:
## simple_expression simple_pattern
## LR(1) items:
scondpat -> simple_expression simple_pattern . [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scondpat -> simple_expression simple_pattern

State 295:
## Known stack suffix:
## scondpat
## LR(1) items:
present_handler(expression) -> scondpat . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
scondpat -> scondpat . AMPERSAND scondpat [ ON MINUSGREATER BAR AMPERSAND ]
scondpat -> scondpat . BAR scondpat [ ON MINUSGREATER BAR AMPERSAND ]
scondpat -> scondpat . ON simple_expression [ ON MINUSGREATER BAR AMPERSAND ]
## Transitions:
-- On ON shift to state 296
-- On MINUSGREATER shift to state 298
-- On BAR shift to state 300
-- On AMPERSAND shift to state 302
## Reductions:

State 296:
## Known stack suffix:
## scondpat ON
## LR(1) items:
scondpat -> scondpat ON . simple_expression [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
## Transitions:
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 297
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 297:
## Known stack suffix:
## scondpat ON simple_expression
## LR(1) items:
scondpat -> scondpat ON simple_expression . [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scondpat -> scondpat ON simple_expression

State 298:
## Known stack suffix:
## scondpat MINUSGREATER
## LR(1) items:
present_handler(expression) -> scondpat MINUSGREATER . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 299
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 299:
## Known stack suffix:
## scondpat MINUSGREATER expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
present_handler(expression) -> scondpat MINUSGREATER expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE COMMA BAR ATOMIC AND
--   reduce production present_handler(expression) -> scondpat MINUSGREATER expression

State 300:
## Known stack suffix:
## scondpat BAR
## LR(1) items:
scondpat -> scondpat BAR . scondpat [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 301
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 301:
## Known stack suffix:
## scondpat BAR scondpat
## LR(1) items:
scondpat -> scondpat . AMPERSAND scondpat [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
scondpat -> scondpat . BAR scondpat [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
scondpat -> scondpat BAR scondpat . [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
scondpat -> scondpat . ON simple_expression [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
## Transitions:
-- On ON shift to state 296
-- On AMPERSAND shift to state 302
## Reductions:
-- On THEN MINUSGREATER CONTINUE BAR
--   reduce production scondpat -> scondpat BAR scondpat

State 302:
## Known stack suffix:
## scondpat AMPERSAND
## LR(1) items:
scondpat -> scondpat AMPERSAND . scondpat [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 303
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 303:
## Known stack suffix:
## scondpat AMPERSAND scondpat
## LR(1) items:
scondpat -> scondpat . AMPERSAND scondpat [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
scondpat -> scondpat AMPERSAND scondpat . [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
scondpat -> scondpat . BAR scondpat [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
scondpat -> scondpat . ON simple_expression [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
## Transitions:
-- On ON shift to state 296
## Reductions:
-- On THEN MINUSGREATER CONTINUE BAR AMPERSAND
--   reduce production scondpat -> scondpat AMPERSAND scondpat

State 304:
## Known stack suffix:
## DER ide EQUAL expression optional_init RESET opt_bar present_handlers(expression)
## LR(1) items:
equation_desc -> DER ide EQUAL expression optional_init RESET opt_bar present_handlers(expression) . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
present_handlers(expression) -> present_handlers(expression) . BAR present_handler(expression) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On BAR shift to state 305
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production equation_desc -> DER ide EQUAL expression optional_init RESET opt_bar present_handlers(expression)

State 305:
## Known stack suffix:
## present_handlers(expression) BAR
## LR(1) items:
present_handlers(expression) -> present_handlers(expression) BAR . present_handler(expression) [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 295
-- On qual_ident shift to state 42
-- On present_handler(expression) shift to state 306
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 306:
## Known stack suffix:
## present_handlers(expression) BAR present_handler(expression)
## LR(1) items:
present_handlers(expression) -> present_handlers(expression) BAR present_handler(expression) . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production present_handlers(expression) -> present_handlers(expression) BAR present_handler(expression)

State 307:
## Known stack suffix:
## present_handler(expression)
## LR(1) items:
present_handlers(expression) -> present_handler(expression) . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production present_handlers(expression) -> present_handler(expression)

State 308:
## Known stack suffix:
## simple_equation_desc
## LR(1) items:
equation_desc -> simple_equation_desc . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production equation_desc -> simple_equation_desc

State 309:
## Known stack suffix:
## pattern
## LR(1) items:
equation_desc -> pattern . EQUAL expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
pattern -> pattern . AS IDENT [ EQUAL COMMA BAR AS ]
pattern -> pattern . BAR pattern [ EQUAL COMMA BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ EQUAL COMMA BAR AS ]
## Transitions:
-- On EQUAL shift to state 310
-- On COMMA shift to state 110
-- On BAR shift to state 112
-- On AS shift to state 114
## Reductions:

State 310:
## Known stack suffix:
## pattern EQUAL
## LR(1) items:
equation_desc -> pattern EQUAL . expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 311
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 311:
## Known stack suffix:
## pattern EQUAL expression
## LR(1) items:
equation_desc -> pattern EQUAL expression . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
expression_comma_list -> expression . COMMA expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production equation_desc -> pattern EQUAL expression

State 312:
## Known stack suffix:
## localized(equation_desc)
## LR(1) items:
list_of(AND,localized(equation_desc)) -> localized(equation_desc) . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_of(AND,localized(equation_desc)) -> localized(equation_desc)

State 313:
## Known stack suffix:
## list_of(AND,localized(equation_desc))
## LR(1) items:
equation_empty_list -> list_of(AND,localized(equation_desc)) . [ UNTIL UNLESS THEN IN DONE CONTINUE ]
list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) . AND localized(equation_desc) [ UNTIL UNLESS THEN IN DONE CONTINUE AND ]
## Transitions:
-- On AND shift to state 314
## Reductions:
-- On UNTIL UNLESS THEN IN DONE CONTINUE
--   reduce production equation_empty_list -> list_of(AND,localized(equation_desc))

State 314:
## Known stack suffix:
## list_of(AND,localized(equation_desc)) AND
## LR(1) items:
list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) AND . localized(equation_desc) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 315
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 315:
## Known stack suffix:
## list_of(AND,localized(equation_desc)) AND localized(equation_desc)
## LR(1) items:
list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) AND localized(equation_desc) . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) AND localized(equation_desc)

State 316:
## Known stack suffix:
## let_list
## LR(1) items:
simple_equation_desc -> let_list . local_list DO equation_empty_list DONE [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On LOCAL shift to state 145
-- On local_list shift to state 317
## Reductions:
-- On DO
--   reduce production local_list ->

State 317:
## Known stack suffix:
## let_list local_list
## LR(1) items:
simple_equation_desc -> let_list local_list . DO equation_empty_list DONE [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On DO shift to state 318
## Reductions:

State 318:
## Known stack suffix:
## let_list local_list DO
## LR(1) items:
simple_equation_desc -> let_list local_list DO . equation_empty_list DONE [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 312
-- On list_of(AND,localized(equation_desc)) shift to state 313
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_empty_list shift to state 322
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On DONE
--   reduce production equation_empty_list ->
-- On LOCAL DO
--   reduce production let_list ->

State 319:
## Known stack suffix:
## ide
## LR(1) items:
equation_desc -> ide . PLUSEQUAL expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
simple_pattern -> ide . [ EQUAL COMMA BAR AS ]
## Transitions:
-- On PLUSEQUAL shift to state 320
## Reductions:
-- On EQUAL COMMA BAR AS
--   reduce production simple_pattern -> ide

State 320:
## Known stack suffix:
## ide PLUSEQUAL
## LR(1) items:
equation_desc -> ide PLUSEQUAL . expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 321
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 321:
## Known stack suffix:
## ide PLUSEQUAL expression
## LR(1) items:
equation_desc -> ide PLUSEQUAL expression . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
expression_comma_list -> expression . COMMA expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production equation_desc -> ide PLUSEQUAL expression

State 322:
## Known stack suffix:
## let_list local_list DO equation_empty_list
## LR(1) items:
simple_equation_desc -> let_list local_list DO equation_empty_list . DONE [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On DONE shift to state 323
## Reductions:

State 323:
## Known stack suffix:
## let_list local_list DO equation_empty_list DONE
## LR(1) items:
simple_equation_desc -> let_list local_list DO equation_empty_list DONE . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_equation_desc -> let_list local_list DO equation_empty_list DONE

State 324:
## Known stack suffix:
## equation_desc
## LR(1) items:
localized(equation_desc) -> equation_desc . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production localized(equation_desc) -> equation_desc

State 325:
## Known stack suffix:
## let_list local_list DO equation_empty_list
## LR(1) items:
block(equation_empty_list) -> let_list local_list DO equation_empty_list . [ UNTIL UNLESS THEN DONE CONTINUE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block(equation_empty_list) -> let_list local_list DO equation_empty_list

State 326:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list)
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) . DONE [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) . THEN state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) . CONTINUE state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) . THEN emission state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) . CONTINUE emission state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) . UNTIL escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) . UNLESS escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) . UNTIL escape_list UNLESS escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UNTIL shift to state 327
-- On UNLESS shift to state 357
-- On THEN shift to state 359
-- On DONE shift to state 363
-- On CONTINUE shift to state 364
## Reductions:

State 327:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) UNTIL
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) UNTIL . escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) UNTIL . escape_list UNLESS escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 328
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On escape_list shift to state 351
-- On escape shift to state 356
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 328:
## Known stack suffix:
## scondpat
## LR(1) items:
escape -> scondpat . THEN state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
escape -> scondpat . CONTINUE state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
escape -> scondpat . THEN emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
escape -> scondpat . CONTINUE emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
scondpat -> scondpat . AMPERSAND scondpat [ THEN ON CONTINUE BAR AMPERSAND ]
scondpat -> scondpat . BAR scondpat [ THEN ON CONTINUE BAR AMPERSAND ]
scondpat -> scondpat . ON simple_expression [ THEN ON CONTINUE BAR AMPERSAND ]
## Transitions:
-- On THEN shift to state 329
-- On ON shift to state 296
-- On CONTINUE shift to state 347
-- On BAR shift to state 300
-- On AMPERSAND shift to state 302
## Reductions:

State 329:
## Known stack suffix:
## scondpat THEN
## LR(1) items:
escape -> scondpat THEN . state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
escape -> scondpat THEN . emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LET shift to state 201
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 336
-- On one_let shift to state 337
-- On let_list shift to state 340
-- On emission shift to state 345
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 330:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
state -> CONSTRUCTOR . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
state -> CONSTRUCTOR . LPAREN expression RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
state -> CONSTRUCTOR . LPAREN expression_comma_list RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LPAREN shift to state 331
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production state -> CONSTRUCTOR

State 331:
## Known stack suffix:
## CONSTRUCTOR LPAREN
## LR(1) items:
state -> CONSTRUCTOR LPAREN . expression RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
state -> CONSTRUCTOR LPAREN . expression_comma_list RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 332
-- On expression shift to state 334
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 332:
## Known stack suffix:
## CONSTRUCTOR LPAREN expression_comma_list
## LR(1) items:
expression_comma_list -> expression_comma_list . COMMA expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression_comma_list . [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
state -> CONSTRUCTOR LPAREN expression_comma_list . RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On RPAREN shift to state 333
-- On COMMA shift to state 240
## Reductions:
-- On SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT BARBAR AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> expression_comma_list

State 333:
## Known stack suffix:
## CONSTRUCTOR LPAREN expression_comma_list RPAREN
## LR(1) items:
state -> CONSTRUCTOR LPAREN expression_comma_list RPAREN . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production state -> CONSTRUCTOR LPAREN expression_comma_list RPAREN

State 334:
## Known stack suffix:
## CONSTRUCTOR LPAREN expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ SUBTRACTIVE STAR RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
state -> CONSTRUCTOR LPAREN expression . RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On RPAREN shift to state 335
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:

State 335:
## Known stack suffix:
## CONSTRUCTOR LPAREN expression RPAREN
## LR(1) items:
state -> CONSTRUCTOR LPAREN expression RPAREN . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production state -> CONSTRUCTOR LPAREN expression RPAREN

State 336:
## Known stack suffix:
## scondpat THEN state
## LR(1) items:
escape -> scondpat THEN state . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production escape -> scondpat THEN state

State 337:
## Known stack suffix:
## one_let
## LR(1) items:
emission -> one_let . IN let_list [ CONSTRUCTOR ]
let_list -> one_let . IN let_list [ LOCAL DO ]
## Transitions:
-- On IN shift to state 338
## Reductions:

State 338:
## Known stack suffix:
## one_let IN
## LR(1) items:
emission -> one_let IN . let_list [ CONSTRUCTOR ]
let_list -> one_let IN . let_list [ LOCAL DO ]
## Transitions:
-- On LET shift to state 201
-- On one_let shift to state 227
-- On let_list shift to state 339
## Reductions:
-- On LOCAL DO CONSTRUCTOR
--   reduce production let_list ->

State 339:
## Known stack suffix:
## one_let IN let_list
## LR(1) items:
emission -> one_let IN let_list . [ CONSTRUCTOR ]
let_list -> one_let IN let_list . [ LOCAL DO ]
## Transitions:
## Reductions:
-- On CONSTRUCTOR
--   reduce production emission -> one_let IN let_list
-- On LOCAL DO
--   reduce production let_list -> one_let IN let_list

State 340:
## Known stack suffix:
## let_list
## LR(1) items:
emission -> let_list . local_list DO equation_empty_list IN [ CONSTRUCTOR ]
## Transitions:
-- On LOCAL shift to state 145
-- On local_list shift to state 341
## Reductions:
-- On DO
--   reduce production local_list ->

State 341:
## Known stack suffix:
## let_list local_list
## LR(1) items:
emission -> let_list local_list . DO equation_empty_list IN [ CONSTRUCTOR ]
## Transitions:
-- On DO shift to state 342
## Reductions:

State 342:
## Known stack suffix:
## let_list local_list DO
## LR(1) items:
emission -> let_list local_list DO . equation_empty_list IN [ CONSTRUCTOR ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 312
-- On list_of(AND,localized(equation_desc)) shift to state 313
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_empty_list shift to state 343
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On IN
--   reduce production equation_empty_list ->
-- On LOCAL DO
--   reduce production let_list ->

State 343:
## Known stack suffix:
## let_list local_list DO equation_empty_list
## LR(1) items:
emission -> let_list local_list DO equation_empty_list . IN [ CONSTRUCTOR ]
## Transitions:
-- On IN shift to state 344
## Reductions:

State 344:
## Known stack suffix:
## let_list local_list DO equation_empty_list IN
## LR(1) items:
emission -> let_list local_list DO equation_empty_list IN . [ CONSTRUCTOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production emission -> let_list local_list DO equation_empty_list IN

State 345:
## Known stack suffix:
## scondpat THEN emission
## LR(1) items:
escape -> scondpat THEN emission . state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 346
## Reductions:

State 346:
## Known stack suffix:
## scondpat THEN emission state
## LR(1) items:
escape -> scondpat THEN emission state . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production escape -> scondpat THEN emission state

State 347:
## Known stack suffix:
## scondpat CONTINUE
## LR(1) items:
escape -> scondpat CONTINUE . state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
escape -> scondpat CONTINUE . emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LET shift to state 201
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 348
-- On one_let shift to state 337
-- On let_list shift to state 340
-- On emission shift to state 349
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 348:
## Known stack suffix:
## scondpat CONTINUE state
## LR(1) items:
escape -> scondpat CONTINUE state . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production escape -> scondpat CONTINUE state

State 349:
## Known stack suffix:
## scondpat CONTINUE emission
## LR(1) items:
escape -> scondpat CONTINUE emission . state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 350
## Reductions:

State 350:
## Known stack suffix:
## scondpat CONTINUE emission state
## LR(1) items:
escape -> scondpat CONTINUE emission state . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production escape -> scondpat CONTINUE emission state

State 351:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) UNTIL escape_list
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) UNTIL escape_list . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) UNTIL escape_list . UNLESS escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
escape_list -> escape_list . ELSE escape [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UNLESS shift to state 352
-- On ELSE shift to state 354
## Reductions:
-- On UNTIL TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) UNTIL escape_list

State 352:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) UNTIL escape_list UNLESS
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) UNTIL escape_list UNLESS . escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 328
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On escape_list shift to state 353
-- On escape shift to state 356
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 353:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) UNTIL escape_list UNLESS escape_list
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) UNTIL escape_list UNLESS escape_list . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
escape_list -> escape_list . ELSE escape [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On ELSE shift to state 354
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) UNTIL escape_list UNLESS escape_list

State 354:
## Known stack suffix:
## escape_list ELSE
## LR(1) items:
escape_list -> escape_list ELSE . escape [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 328
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On escape shift to state 355
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 355:
## Known stack suffix:
## escape_list ELSE escape
## LR(1) items:
escape_list -> escape_list ELSE escape . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production escape_list -> escape_list ELSE escape

State 356:
## Known stack suffix:
## escape
## LR(1) items:
escape_list -> escape . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production escape_list -> escape

State 357:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) UNLESS
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) UNLESS . escape_list [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 328
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On escape_list shift to state 358
-- On escape shift to state 356
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 358:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) UNLESS escape_list
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) UNLESS escape_list . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
escape_list -> escape_list . ELSE escape [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On ELSE shift to state 354
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) UNLESS escape_list

State 359:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) THEN
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) THEN . state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) THEN . emission state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On LET shift to state 201
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 360
-- On one_let shift to state 337
-- On let_list shift to state 340
-- On emission shift to state 361
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 360:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) THEN state
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) THEN state . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) THEN state

State 361:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) THEN emission
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) THEN emission . state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 362
## Reductions:

State 362:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) THEN emission state
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) THEN emission state . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) THEN emission state

State 363:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) DONE
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) DONE . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) DONE

State 364:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) CONTINUE
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) CONTINUE . state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) CONTINUE . emission state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On LET shift to state 201
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 365
-- On one_let shift to state 337
-- On let_list shift to state 340
-- On emission shift to state 366
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 365:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) CONTINUE state
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) CONTINUE state . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) CONTINUE state

State 366:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) CONTINUE emission
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) CONTINUE emission . state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 367
## Reductions:

State 367:
## Known stack suffix:
## state_pat MINUSGREATER block(equation_empty_list) CONTINUE emission state
## LR(1) items:
automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) CONTINUE emission state . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handler(equation_empty_list) -> state_pat MINUSGREATER block(equation_empty_list) CONTINUE emission state

State 368:
## Known stack suffix:
## AUTOMATON opt_bar automaton_handlers(equation_empty_list)
## LR(1) items:
automaton_handlers(equation_empty_list) -> automaton_handlers(equation_empty_list) . BAR automaton_handler(equation_empty_list) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
simple_equation_desc -> AUTOMATON opt_bar automaton_handlers(equation_empty_list) . opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
simple_equation_desc -> AUTOMATON opt_bar automaton_handlers(equation_empty_list) . INIT state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On INIT shift to state 369
-- On END shift to state 371
-- On BAR shift to state 372
-- On opt_end shift to state 374
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF ELSE DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production opt_end ->

State 369:
## Known stack suffix:
## AUTOMATON opt_bar automaton_handlers(equation_empty_list) INIT
## LR(1) items:
simple_equation_desc -> AUTOMATON opt_bar automaton_handlers(equation_empty_list) INIT . state [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 370
## Reductions:

State 370:
## Known stack suffix:
## AUTOMATON opt_bar automaton_handlers(equation_empty_list) INIT state
## LR(1) items:
simple_equation_desc -> AUTOMATON opt_bar automaton_handlers(equation_empty_list) INIT state . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_equation_desc -> AUTOMATON opt_bar automaton_handlers(equation_empty_list) INIT state

State 371:
## Known stack suffix:
## END
## LR(1) items:
opt_end -> END . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_end -> END

State 372:
## Known stack suffix:
## automaton_handlers(equation_empty_list) BAR
## LR(1) items:
automaton_handlers(equation_empty_list) -> automaton_handlers(equation_empty_list) BAR . automaton_handler(equation_empty_list) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On CONSTRUCTOR shift to state 192
-- On state_pat shift to state 225
-- On automaton_handler(equation_empty_list) shift to state 373
## Reductions:

State 373:
## Known stack suffix:
## automaton_handlers(equation_empty_list) BAR automaton_handler(equation_empty_list)
## LR(1) items:
automaton_handlers(equation_empty_list) -> automaton_handlers(equation_empty_list) BAR automaton_handler(equation_empty_list) . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handlers(equation_empty_list) -> automaton_handlers(equation_empty_list) BAR automaton_handler(equation_empty_list)

State 374:
## Known stack suffix:
## AUTOMATON opt_bar automaton_handlers(equation_empty_list) opt_end
## LR(1) items:
simple_equation_desc -> AUTOMATON opt_bar automaton_handlers(equation_empty_list) opt_end . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_equation_desc -> AUTOMATON opt_bar automaton_handlers(equation_empty_list) opt_end

State 375:
## Known stack suffix:
## automaton_handler(equation_empty_list)
## LR(1) items:
automaton_handlers(equation_empty_list) -> automaton_handler(equation_empty_list) . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handlers(equation_empty_list) -> automaton_handler(equation_empty_list)

State 376:
## Known stack suffix:
## simple_equation_desc
## LR(1) items:
localized(simple_equation_desc) -> simple_equation_desc . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production localized(simple_equation_desc) -> simple_equation_desc

State 377:
## Known stack suffix:
## localized(simple_equation_desc)
## LR(1) items:
block_of_equation -> localized(simple_equation_desc) . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_of_equation -> localized(simple_equation_desc)

State 378:
## Known stack suffix:
## IF seq_expression THEN block_of_equation
## LR(1) items:
simple_equation_desc -> IF seq_expression THEN block_of_equation . ELSE block_of_equation opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On ELSE shift to state 379
## Reductions:

State 379:
## Known stack suffix:
## IF seq_expression THEN block_of_equation ELSE
## LR(1) items:
simple_equation_desc -> IF seq_expression THEN block_of_equation ELSE . block_of_equation opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On MATCH shift to state 214
-- On LET shift to state 201
-- On IF shift to state 220
-- On AUTOMATON shift to state 223
-- On simple_equation_desc shift to state 376
-- On one_let shift to state 227
-- On localized(simple_equation_desc) shift to state 377
-- On let_list shift to state 316
-- On block_of_equation shift to state 380
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 380:
## Known stack suffix:
## IF seq_expression THEN block_of_equation ELSE block_of_equation
## LR(1) items:
simple_equation_desc -> IF seq_expression THEN block_of_equation ELSE block_of_equation . opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On END shift to state 371
-- On opt_end shift to state 381
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production opt_end ->

State 381:
## Known stack suffix:
## IF seq_expression THEN block_of_equation ELSE block_of_equation opt_end
## LR(1) items:
simple_equation_desc -> IF seq_expression THEN block_of_equation ELSE block_of_equation opt_end . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_equation_desc -> IF seq_expression THEN block_of_equation ELSE block_of_equation opt_end

State 382:
## Known stack suffix:
## expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
seq_expression -> expression . SEMI seq_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
seq_expression -> expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On SEMI shift to state 383
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI RPAREN RESET RBRACE OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production seq_expression -> expression

State 383:
## Known stack suffix:
## expression SEMI
## LR(1) items:
seq_expression -> expression SEMI . seq_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 384
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 384:
## Known stack suffix:
## expression SEMI seq_expression
## LR(1) items:
seq_expression -> expression SEMI seq_expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seq_expression -> expression SEMI seq_expression

State 385:
## Known stack suffix:
## pattern MINUSGREATER block_of_equation
## LR(1) items:
match_handler(block_of_equation) -> pattern MINUSGREATER block_of_equation . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_handler(block_of_equation) -> pattern MINUSGREATER block_of_equation

State 386:
## Known stack suffix:
## MATCH seq_expression WITH opt_bar match_handlers(block_of_equation)
## LR(1) items:
match_handlers(block_of_equation) -> match_handlers(block_of_equation) . BAR match_handler(block_of_equation) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
simple_equation_desc -> MATCH seq_expression WITH opt_bar match_handlers(block_of_equation) . opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On END shift to state 371
-- On BAR shift to state 387
-- On opt_end shift to state 389
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF ELSE DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production opt_end ->

State 387:
## Known stack suffix:
## match_handlers(block_of_equation) BAR
## LR(1) items:
match_handlers(block_of_equation) -> match_handlers(block_of_equation) BAR . match_handler(block_of_equation) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 218
-- On match_handler(block_of_equation) shift to state 388
-- On ide shift to state 106
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 388:
## Known stack suffix:
## match_handlers(block_of_equation) BAR match_handler(block_of_equation)
## LR(1) items:
match_handlers(block_of_equation) -> match_handlers(block_of_equation) BAR match_handler(block_of_equation) . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_handlers(block_of_equation) -> match_handlers(block_of_equation) BAR match_handler(block_of_equation)

State 389:
## Known stack suffix:
## MATCH seq_expression WITH opt_bar match_handlers(block_of_equation) opt_end
## LR(1) items:
simple_equation_desc -> MATCH seq_expression WITH opt_bar match_handlers(block_of_equation) opt_end . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_equation_desc -> MATCH seq_expression WITH opt_bar match_handlers(block_of_equation) opt_end

State 390:
## Known stack suffix:
## match_handler(block_of_equation)
## LR(1) items:
match_handlers(block_of_equation) -> match_handler(block_of_equation) . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_handlers(block_of_equation) -> match_handler(block_of_equation)

State 391:
## Known stack suffix:
## local_list DO list_of(AND,localized(equation_desc))
## LR(1) items:
expression_desc -> local_list DO list_of(AND,localized(equation_desc)) . IN expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) . AND localized(equation_desc) [ IN AND ]
## Transitions:
-- On IN shift to state 392
-- On AND shift to state 314
## Reductions:

State 392:
## Known stack suffix:
## local_list DO list_of(AND,localized(equation_desc)) IN
## LR(1) items:
expression_desc -> local_list DO list_of(AND,localized(equation_desc)) IN . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 393
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 393:
## Known stack suffix:
## local_list DO list_of(AND,localized(equation_desc)) IN expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> local_list DO list_of(AND,localized(equation_desc)) IN expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production expression_desc -> local_list DO list_of(AND,localized(equation_desc)) IN expression

State 394:
## Known stack suffix:
## NEXT ide EQUAL expression
## LR(1) items:
equation_desc -> NEXT ide EQUAL expression . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
equation_desc -> NEXT ide EQUAL expression . INIT expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
expression_comma_list -> expression . COMMA expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INIT shift to state 395
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production equation_desc -> NEXT ide EQUAL expression

State 395:
## Known stack suffix:
## NEXT ide EQUAL expression INIT
## LR(1) items:
equation_desc -> NEXT ide EQUAL expression INIT . expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 396
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 396:
## Known stack suffix:
## NEXT ide EQUAL expression INIT expression
## LR(1) items:
equation_desc -> NEXT ide EQUAL expression INIT expression . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND ]
expression_comma_list -> expression . COMMA expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production equation_desc -> NEXT ide EQUAL expression INIT expression

State 397:
## Known stack suffix:
## LET REC list_of(AND,localized(equation_desc))
## LR(1) items:
list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) . AND localized(equation_desc) [ IN AND ]
one_let -> LET REC list_of(AND,localized(equation_desc)) . [ IN ]
## Transitions:
-- On AND shift to state 314
## Reductions:
-- On IN
--   reduce production one_let -> LET REC list_of(AND,localized(equation_desc))

State 398:
## Known stack suffix:
## LET list_of(AND,localized(equation_desc))
## LR(1) items:
list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) . AND localized(equation_desc) [ IN AND ]
one_let -> LET list_of(AND,localized(equation_desc)) . [ IN ]
## Transitions:
-- On AND shift to state 314
## Reductions:
-- On IN
--   reduce production one_let -> LET list_of(AND,localized(equation_desc))

State 399:
## Known stack suffix:
## let_list
## LR(1) items:
block(expression) -> let_list . local_list DO expression [ UNTIL UNLESS THEN DONE CONTINUE ]
## Transitions:
-- On LOCAL shift to state 145
-- On local_list shift to state 400
## Reductions:
-- On DO
--   reduce production local_list ->

State 400:
## Known stack suffix:
## let_list local_list
## LR(1) items:
block(expression) -> let_list local_list . DO expression [ UNTIL UNLESS THEN DONE CONTINUE ]
## Transitions:
-- On DO shift to state 401
## Reductions:

State 401:
## Known stack suffix:
## let_list local_list DO
## LR(1) items:
block(expression) -> let_list local_list DO . expression [ UNTIL UNLESS THEN DONE CONTINUE ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 402
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 402:
## Known stack suffix:
## let_list local_list DO expression
## LR(1) items:
block(expression) -> let_list local_list DO expression . [ UNTIL UNLESS THEN DONE CONTINUE ]
expression_comma_list -> expression . COMMA expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ UNTIL UNLESS THEN SUBTRACTIVE STAR OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT DONE CONTINUE COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On UNTIL UNLESS THEN DONE CONTINUE
--   reduce production block(expression) -> let_list local_list DO expression

State 403:
## Known stack suffix:
## state_pat MINUSGREATER block(expression)
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) . DONE [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) . THEN state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) . CONTINUE state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) . THEN emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) . CONTINUE emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) . UNTIL escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) . UNLESS escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) . UNTIL escape_list UNLESS escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UNTIL shift to state 404
-- On UNLESS shift to state 408
-- On THEN shift to state 410
-- On DONE shift to state 414
-- On CONTINUE shift to state 415
## Reductions:

State 404:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) UNTIL
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) UNTIL . escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) UNTIL . escape_list UNLESS escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 328
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On escape_list shift to state 405
-- On escape shift to state 356
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 405:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) UNTIL escape_list
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) UNTIL escape_list . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) UNTIL escape_list . UNLESS escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
escape_list -> escape_list . ELSE escape [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UNLESS shift to state 406
-- On ELSE shift to state 354
## Reductions:
-- On WITH WHERE UNTIL TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production automaton_handler(expression) -> state_pat MINUSGREATER block(expression) UNTIL escape_list

State 406:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) UNTIL escape_list UNLESS
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) UNTIL escape_list UNLESS . escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 328
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On escape_list shift to state 407
-- On escape shift to state 356
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 407:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) UNTIL escape_list UNLESS escape_list
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) UNTIL escape_list UNLESS escape_list . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
escape_list -> escape_list . ELSE escape [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On ELSE shift to state 354
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production automaton_handler(expression) -> state_pat MINUSGREATER block(expression) UNTIL escape_list UNLESS escape_list

State 408:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) UNLESS
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) UNLESS . escape_list [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 328
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On escape_list shift to state 409
-- On escape shift to state 356
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 409:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) UNLESS escape_list
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) UNLESS escape_list . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
escape_list -> escape_list . ELSE escape [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On ELSE shift to state 354
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production automaton_handler(expression) -> state_pat MINUSGREATER block(expression) UNLESS escape_list

State 410:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) THEN
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) THEN . state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) THEN . emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LET shift to state 201
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 411
-- On one_let shift to state 337
-- On let_list shift to state 340
-- On emission shift to state 412
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 411:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) THEN state
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) THEN state . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handler(expression) -> state_pat MINUSGREATER block(expression) THEN state

State 412:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) THEN emission
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) THEN emission . state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 413
## Reductions:

State 413:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) THEN emission state
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) THEN emission state . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handler(expression) -> state_pat MINUSGREATER block(expression) THEN emission state

State 414:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) DONE
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) DONE . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handler(expression) -> state_pat MINUSGREATER block(expression) DONE

State 415:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) CONTINUE
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) CONTINUE . state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) CONTINUE . emission state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On LET shift to state 201
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 416
-- On one_let shift to state 337
-- On let_list shift to state 340
-- On emission shift to state 417
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 416:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) CONTINUE state
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) CONTINUE state . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handler(expression) -> state_pat MINUSGREATER block(expression) CONTINUE state

State 417:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) CONTINUE emission
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) CONTINUE emission . state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 418
## Reductions:

State 418:
## Known stack suffix:
## state_pat MINUSGREATER block(expression) CONTINUE emission state
## LR(1) items:
automaton_handler(expression) -> state_pat MINUSGREATER block(expression) CONTINUE emission state . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handler(expression) -> state_pat MINUSGREATER block(expression) CONTINUE emission state

State 419:
## Known stack suffix:
## AUTOMATON opt_bar automaton_handlers(expression)
## LR(1) items:
automaton_handlers(expression) -> automaton_handlers(expression) . BAR automaton_handler(expression) [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> AUTOMATON opt_bar automaton_handlers(expression) . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> AUTOMATON opt_bar automaton_handlers(expression) . INIT state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On INIT shift to state 420
-- On BAR shift to state 422
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> AUTOMATON opt_bar automaton_handlers(expression)

State 420:
## Known stack suffix:
## AUTOMATON opt_bar automaton_handlers(expression) INIT
## LR(1) items:
expression_desc -> AUTOMATON opt_bar automaton_handlers(expression) INIT . state [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On CONSTRUCTOR shift to state 330
-- On state shift to state 421
## Reductions:

State 421:
## Known stack suffix:
## AUTOMATON opt_bar automaton_handlers(expression) INIT state
## LR(1) items:
expression_desc -> AUTOMATON opt_bar automaton_handlers(expression) INIT state . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> AUTOMATON opt_bar automaton_handlers(expression) INIT state

State 422:
## Known stack suffix:
## automaton_handlers(expression) BAR
## LR(1) items:
automaton_handlers(expression) -> automaton_handlers(expression) BAR . automaton_handler(expression) [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On CONSTRUCTOR shift to state 192
-- On state_pat shift to state 199
-- On automaton_handler(expression) shift to state 423
## Reductions:

State 423:
## Known stack suffix:
## automaton_handlers(expression) BAR automaton_handler(expression)
## LR(1) items:
automaton_handlers(expression) -> automaton_handlers(expression) BAR automaton_handler(expression) . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handlers(expression) -> automaton_handlers(expression) BAR automaton_handler(expression)

State 424:
## Known stack suffix:
## automaton_handler(expression)
## LR(1) items:
automaton_handlers(expression) -> automaton_handler(expression) . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production automaton_handlers(expression) -> automaton_handler(expression)

State 425:
## Known stack suffix:
## DISC expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> DISC expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On DOT shift to state 250
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> DISC expression

State 426:
## Known stack suffix:
## IF seq_expression
## LR(1) items:
expression_desc -> IF seq_expression . THEN seq_expression ELSE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On THEN shift to state 427
## Reductions:

State 427:
## Known stack suffix:
## IF seq_expression THEN
## LR(1) items:
expression_desc -> IF seq_expression THEN . seq_expression ELSE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 428
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 428:
## Known stack suffix:
## IF seq_expression THEN seq_expression
## LR(1) items:
expression_desc -> IF seq_expression THEN seq_expression . ELSE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On ELSE shift to state 429
## Reductions:

State 429:
## Known stack suffix:
## IF seq_expression THEN seq_expression ELSE
## LR(1) items:
expression_desc -> IF seq_expression THEN seq_expression ELSE . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 430
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 430:
## Known stack suffix:
## IF seq_expression THEN seq_expression ELSE expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> IF seq_expression THEN seq_expression ELSE expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production expression_desc -> IF seq_expression THEN seq_expression ELSE expression

State 431:
## Known stack suffix:
## ext_ident EQUAL expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ SUBTRACTIVE STAR SEMI RBRACE OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
label_expression -> ext_ident EQUAL expression . [ SEMI RBRACE ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On SEMI RBRACE
--   reduce production label_expression -> ext_ident EQUAL expression

State 432:
## Known stack suffix:
## scondpat
## LR(1) items:
present_handler(block_of_equation) -> scondpat . MINUSGREATER block_of_equation [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
scondpat -> scondpat . AMPERSAND scondpat [ ON MINUSGREATER BAR AMPERSAND ]
scondpat -> scondpat . BAR scondpat [ ON MINUSGREATER BAR AMPERSAND ]
scondpat -> scondpat . ON simple_expression [ ON MINUSGREATER BAR AMPERSAND ]
## Transitions:
-- On ON shift to state 296
-- On MINUSGREATER shift to state 433
-- On BAR shift to state 300
-- On AMPERSAND shift to state 302
## Reductions:

State 433:
## Known stack suffix:
## scondpat MINUSGREATER
## LR(1) items:
present_handler(block_of_equation) -> scondpat MINUSGREATER . block_of_equation [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On MATCH shift to state 214
-- On LET shift to state 201
-- On IF shift to state 220
-- On AUTOMATON shift to state 223
-- On simple_equation_desc shift to state 376
-- On one_let shift to state 227
-- On localized(simple_equation_desc) shift to state 377
-- On let_list shift to state 316
-- On block_of_equation shift to state 434
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 434:
## Known stack suffix:
## scondpat MINUSGREATER block_of_equation
## LR(1) items:
present_handler(block_of_equation) -> scondpat MINUSGREATER block_of_equation . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production present_handler(block_of_equation) -> scondpat MINUSGREATER block_of_equation

State 435:
## Known stack suffix:
## PRESENT opt_bar present_handlers(block_of_equation)
## LR(1) items:
present_handlers(block_of_equation) -> present_handlers(block_of_equation) . BAR present_handler(block_of_equation) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
simple_equation_desc -> PRESENT opt_bar present_handlers(block_of_equation) . opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
simple_equation_desc -> PRESENT opt_bar present_handlers(block_of_equation) . ELSE block_of_equation opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On END shift to state 371
-- On ELSE shift to state 436
-- On BAR shift to state 439
-- On opt_end shift to state 441
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF DONE DISCRETE CONTINUE ATOMIC AND
--   reduce production opt_end ->

State 436:
## Known stack suffix:
## PRESENT opt_bar present_handlers(block_of_equation) ELSE
## LR(1) items:
simple_equation_desc -> PRESENT opt_bar present_handlers(block_of_equation) ELSE . block_of_equation opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On MATCH shift to state 214
-- On LET shift to state 201
-- On IF shift to state 220
-- On AUTOMATON shift to state 223
-- On simple_equation_desc shift to state 376
-- On one_let shift to state 227
-- On localized(simple_equation_desc) shift to state 377
-- On let_list shift to state 316
-- On block_of_equation shift to state 437
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 437:
## Known stack suffix:
## PRESENT opt_bar present_handlers(block_of_equation) ELSE block_of_equation
## LR(1) items:
simple_equation_desc -> PRESENT opt_bar present_handlers(block_of_equation) ELSE block_of_equation . opt_end [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On END shift to state 371
-- On opt_end shift to state 438
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production opt_end ->

State 438:
## Known stack suffix:
## PRESENT opt_bar present_handlers(block_of_equation) ELSE block_of_equation opt_end
## LR(1) items:
simple_equation_desc -> PRESENT opt_bar present_handlers(block_of_equation) ELSE block_of_equation opt_end . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_equation_desc -> PRESENT opt_bar present_handlers(block_of_equation) ELSE block_of_equation opt_end

State 439:
## Known stack suffix:
## present_handlers(block_of_equation) BAR
## LR(1) items:
present_handlers(block_of_equation) -> present_handlers(block_of_equation) BAR . present_handler(block_of_equation) [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UP shift to state 131
-- On STRING shift to state 82
-- On LPAREN shift to state 132
-- On LBRACE shift to state 168
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_expression_desc shift to state 182
-- On simple_expression shift to state 293
-- On scondpat shift to state 432
-- On qual_ident shift to state 42
-- On present_handler(block_of_equation) shift to state 440
-- On ide shift to state 43
-- On ext_ident shift to state 184
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:

State 440:
## Known stack suffix:
## present_handlers(block_of_equation) BAR present_handler(block_of_equation)
## LR(1) items:
present_handlers(block_of_equation) -> present_handlers(block_of_equation) BAR present_handler(block_of_equation) . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production present_handlers(block_of_equation) -> present_handlers(block_of_equation) BAR present_handler(block_of_equation)

State 441:
## Known stack suffix:
## PRESENT opt_bar present_handlers(block_of_equation) opt_end
## LR(1) items:
simple_equation_desc -> PRESENT opt_bar present_handlers(block_of_equation) opt_end . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_equation_desc -> PRESENT opt_bar present_handlers(block_of_equation) opt_end

State 442:
## Known stack suffix:
## present_handler(block_of_equation)
## LR(1) items:
present_handlers(block_of_equation) -> present_handler(block_of_equation) . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production present_handlers(block_of_equation) -> present_handler(block_of_equation)

State 443:
## Known stack suffix:
## RESET list_of(AND,localized(equation_desc))
## LR(1) items:
list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) . AND localized(equation_desc) [ EVERY AND ]
simple_equation_desc -> RESET list_of(AND,localized(equation_desc)) . EVERY expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On EVERY shift to state 444
-- On AND shift to state 314
## Reductions:

State 444:
## Known stack suffix:
## RESET list_of(AND,localized(equation_desc)) EVERY
## LR(1) items:
simple_equation_desc -> RESET list_of(AND,localized(equation_desc)) EVERY . expression [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 445
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 445:
## Known stack suffix:
## RESET list_of(AND,localized(equation_desc)) EVERY expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
simple_equation_desc -> RESET list_of(AND,localized(equation_desc)) EVERY expression . [ UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On UNTIL UNLESS TYPE THEN SEMISEMI OPEN NODE LET IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production simple_equation_desc -> RESET list_of(AND,localized(equation_desc)) EVERY expression

State 446:
## Known stack suffix:
## LET REC
## LR(1) items:
expression_desc -> LET REC . list_of(AND,localized(equation_desc)) IN seq_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 312
-- On list_of(AND,localized(equation_desc)) shift to state 447
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 447:
## Known stack suffix:
## LET REC list_of(AND,localized(equation_desc))
## LR(1) items:
expression_desc -> LET REC list_of(AND,localized(equation_desc)) . IN seq_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) . AND localized(equation_desc) [ IN AND ]
## Transitions:
-- On IN shift to state 448
-- On AND shift to state 314
## Reductions:

State 448:
## Known stack suffix:
## LET REC list_of(AND,localized(equation_desc)) IN
## LR(1) items:
expression_desc -> LET REC list_of(AND,localized(equation_desc)) IN . seq_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 449
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 449:
## Known stack suffix:
## LET REC list_of(AND,localized(equation_desc)) IN seq_expression
## LR(1) items:
expression_desc -> LET REC list_of(AND,localized(equation_desc)) IN seq_expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> LET REC list_of(AND,localized(equation_desc)) IN seq_expression

State 450:
## Known stack suffix:
## LET list_of(AND,localized(equation_desc))
## LR(1) items:
expression_desc -> LET list_of(AND,localized(equation_desc)) . IN seq_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) . AND localized(equation_desc) [ IN AND ]
## Transitions:
-- On IN shift to state 451
-- On AND shift to state 314
## Reductions:

State 451:
## Known stack suffix:
## LET list_of(AND,localized(equation_desc)) IN
## LR(1) items:
expression_desc -> LET list_of(AND,localized(equation_desc)) IN . seq_expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 452
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 452:
## Known stack suffix:
## LET list_of(AND,localized(equation_desc)) IN seq_expression
## LR(1) items:
expression_desc -> LET list_of(AND,localized(equation_desc)) IN seq_expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> LET list_of(AND,localized(equation_desc)) IN seq_expression

State 453:
## Known stack suffix:
## MATCH seq_expression
## LR(1) items:
expression_desc -> MATCH seq_expression . WITH opt_bar match_handlers(expression) opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On WITH shift to state 454
## Reductions:

State 454:
## Known stack suffix:
## MATCH seq_expression WITH
## LR(1) items:
expression_desc -> MATCH seq_expression WITH . opt_bar match_handlers(expression) opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On BAR shift to state 129
-- On opt_bar shift to state 455
## Reductions:
-- On UNDERSCORE SUBTRACTIVE STRING LPAREN LBRACE INT IDENT FLOAT CONSTRUCTOR CHAR BOOL
--   reduce production opt_bar ->

State 455:
## Known stack suffix:
## MATCH seq_expression WITH opt_bar
## LR(1) items:
expression_desc -> MATCH seq_expression WITH opt_bar . match_handlers(expression) opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 456
-- On match_handlers(expression) shift to state 459
-- On match_handler(expression) shift to state 463
-- On ide shift to state 106
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 456:
## Known stack suffix:
## pattern
## LR(1) items:
match_handler(expression) -> pattern . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
pattern -> pattern . AS IDENT [ MINUSGREATER COMMA BAR AS ]
pattern -> pattern . BAR pattern [ MINUSGREATER COMMA BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ MINUSGREATER COMMA BAR AS ]
## Transitions:
-- On MINUSGREATER shift to state 457
-- On COMMA shift to state 110
-- On BAR shift to state 112
-- On AS shift to state 114
## Reductions:

State 457:
## Known stack suffix:
## pattern MINUSGREATER
## LR(1) items:
match_handler(expression) -> pattern MINUSGREATER . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 458
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 458:
## Known stack suffix:
## pattern MINUSGREATER expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
match_handler(expression) -> pattern MINUSGREATER expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE COMMA BAR ATOMIC AND
--   reduce production match_handler(expression) -> pattern MINUSGREATER expression

State 459:
## Known stack suffix:
## MATCH seq_expression WITH opt_bar match_handlers(expression)
## LR(1) items:
expression_desc -> MATCH seq_expression WITH opt_bar match_handlers(expression) . opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
match_handlers(expression) -> match_handlers(expression) . BAR match_handler(expression) [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On END shift to state 371
-- On BAR shift to state 460
-- On opt_end shift to state 462
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production opt_end ->

State 460:
## Known stack suffix:
## match_handlers(expression) BAR
## LR(1) items:
match_handlers(expression) -> match_handlers(expression) BAR . match_handler(expression) [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 456
-- On match_handler(expression) shift to state 461
-- On ide shift to state 106
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 461:
## Known stack suffix:
## match_handlers(expression) BAR match_handler(expression)
## LR(1) items:
match_handlers(expression) -> match_handlers(expression) BAR match_handler(expression) . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_handlers(expression) -> match_handlers(expression) BAR match_handler(expression)

State 462:
## Known stack suffix:
## MATCH seq_expression WITH opt_bar match_handlers(expression) opt_end
## LR(1) items:
expression_desc -> MATCH seq_expression WITH opt_bar match_handlers(expression) opt_end . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> MATCH seq_expression WITH opt_bar match_handlers(expression) opt_end

State 463:
## Known stack suffix:
## match_handler(expression)
## LR(1) items:
match_handlers(expression) -> match_handler(expression) . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production match_handlers(expression) -> match_handler(expression)

State 464:
## Known stack suffix:
## PRE expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> PRE expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On DOT shift to state 250
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> PRE expression

State 465:
## Known stack suffix:
## PREFIX expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> PREFIX expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On DOT shift to state 250
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> PREFIX expression

State 466:
## Known stack suffix:
## SUBTRACTIVE expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> SUBTRACTIVE expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On FBY shift to state 248
-- On DOT shift to state 250
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> SUBTRACTIVE expression

State 467:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
simple_expression_desc -> LPAREN RPAREN . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expression_desc -> LPAREN RPAREN

State 468:
## Known stack suffix:
## PREFIX
## LR(1) items:
expression_desc -> PREFIX . expression [ SUBTRACTIVE STAR SEMI RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
infx -> PREFIX . [ RPAREN ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 465
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On RPAREN
--   reduce production infx -> PREFIX
-- On DO
--   reduce production local_list ->

State 469:
## Known stack suffix:
## simple_expression_desc
## LR(1) items:
expression_desc -> simple_expression_desc . [ SUBTRACTIVE STAR SEMI RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
simple_expression -> simple_expression_desc . [ COLON ]
## Transitions:
## Reductions:
-- On SUBTRACTIVE STAR SEMI RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> simple_expression_desc
-- On COLON
--   reduce production simple_expression -> simple_expression_desc

State 470:
## Known stack suffix:
## LPAREN simple_expression
## LR(1) items:
simple_expression_desc -> LPAREN simple_expression . COLON type_expression RPAREN [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On COLON shift to state 471
## Reductions:

State 471:
## Known stack suffix:
## LPAREN simple_expression COLON
## LR(1) items:
simple_expression_desc -> LPAREN simple_expression COLON . type_expression RPAREN [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On type_var shift to state 37
-- On type_star_list shift to state 38
-- On type_expression shift to state 472
-- On simple_type_desc shift to state 52
-- On simple_type shift to state 53
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 472:
## Known stack suffix:
## LPAREN simple_expression COLON type_expression
## LR(1) items:
simple_expression_desc -> LPAREN simple_expression COLON type_expression . RPAREN [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On RPAREN shift to state 473
## Reductions:

State 473:
## Known stack suffix:
## LPAREN simple_expression COLON type_expression RPAREN
## LR(1) items:
simple_expression_desc -> LPAREN simple_expression COLON type_expression RPAREN . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expression_desc -> LPAREN simple_expression COLON type_expression RPAREN

State 474:
## Known stack suffix:
## LPAREN seq_expression
## LR(1) items:
simple_expression_desc -> LPAREN seq_expression . RPAREN [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On RPAREN shift to state 475
## Reductions:

State 475:
## Known stack suffix:
## LPAREN seq_expression RPAREN
## LR(1) items:
simple_expression_desc -> LPAREN seq_expression RPAREN . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expression_desc -> LPAREN seq_expression RPAREN

State 476:
## Known stack suffix:
## LPAREN expression_comma_list
## LR(1) items:
expression_comma_list -> expression_comma_list . COMMA expression [ SUBTRACTIVE STAR SEMI RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression_comma_list . [ SUBTRACTIVE STAR SEMI RPAREN OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT COMMA BARBAR AMPERSAND AMPERAMPER AFTER ]
simple_expression_desc -> LPAREN expression_comma_list . RPAREN [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On RPAREN shift to state 477
-- On COMMA shift to state 240
## Reductions:
-- On SUBTRACTIVE STAR SEMI OR MINUSGREATER INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FBY EQUAL DOT BARBAR AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> expression_comma_list

State 477:
## Known stack suffix:
## LPAREN expression_comma_list RPAREN
## LR(1) items:
simple_expression_desc -> LPAREN expression_comma_list RPAREN . [ WITH WHERE UNTIL UNLESS UNDERSCORE TYPE THEN SUBTRACTIVE STRING STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN ON NODE MINUSGREATER LPAREN LET LBRACE INT INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN IDENT HYBRID FUN FLOAT FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE CONSTRUCTOR COMMA COLON CHAR BOOL BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expression_desc -> LPAREN expression_comma_list RPAREN

State 478:
## Known stack suffix:
## UP simple_expression
## LR(1) items:
scondpat -> UP simple_expression . [ THEN ON MINUSGREATER CONTINUE BAR AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scondpat -> UP simple_expression

State 479:
## Known stack suffix:
## PRESENT opt_bar present_handlers(expression)
## LR(1) items:
expression_desc -> PRESENT opt_bar present_handlers(expression) . opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> PRESENT opt_bar present_handlers(expression) . INIT expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> PRESENT opt_bar present_handlers(expression) . ELSE expression opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
present_handlers(expression) -> present_handlers(expression) . BAR present_handler(expression) [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On INIT shift to state 480
-- On END shift to state 371
-- On ELSE shift to state 482
-- On BAR shift to state 305
-- On opt_end shift to state 485
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF DOT DONE DISCRETE CONTINUE COMMA BARBAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production opt_end ->

State 480:
## Known stack suffix:
## PRESENT opt_bar present_handlers(expression) INIT
## LR(1) items:
expression_desc -> PRESENT opt_bar present_handlers(expression) INIT . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 481
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 481:
## Known stack suffix:
## PRESENT opt_bar present_handlers(expression) INIT expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> PRESENT opt_bar present_handlers(expression) INIT expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production expression_desc -> PRESENT opt_bar present_handlers(expression) INIT expression

State 482:
## Known stack suffix:
## PRESENT opt_bar present_handlers(expression) ELSE
## LR(1) items:
expression_desc -> PRESENT opt_bar present_handlers(expression) ELSE . expression opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 483
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 483:
## Known stack suffix:
## PRESENT opt_bar present_handlers(expression) ELSE expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> PRESENT opt_bar present_handlers(expression) ELSE expression . opt_end [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On END shift to state 371
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
-- On opt_end shift to state 484
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OPEN NODE LET INIT IN HYBRID FUN EVERY EOF ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production opt_end ->

State 484:
## Known stack suffix:
## PRESENT opt_bar present_handlers(expression) ELSE expression opt_end
## LR(1) items:
expression_desc -> PRESENT opt_bar present_handlers(expression) ELSE expression opt_end . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> PRESENT opt_bar present_handlers(expression) ELSE expression opt_end

State 485:
## Known stack suffix:
## PRESENT opt_bar present_handlers(expression) opt_end
## LR(1) items:
expression_desc -> PRESENT opt_bar present_handlers(expression) opt_end . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_desc -> PRESENT opt_bar present_handlers(expression) opt_end

State 486:
## Known stack suffix:
## RESET seq_expression
## LR(1) items:
expression_desc -> RESET seq_expression . EVERY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On EVERY shift to state 487
## Reductions:

State 487:
## Known stack suffix:
## RESET seq_expression EVERY
## LR(1) items:
expression_desc -> RESET seq_expression EVERY . expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 488
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 488:
## Known stack suffix:
## RESET seq_expression EVERY expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> RESET seq_expression EVERY expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On SUBTRACTIVE shift to state 242
-- On STAR shift to state 244
-- On OR shift to state 259
-- On MINUSGREATER shift to state 273
-- On INFIX4 shift to state 246
-- On INFIX3 shift to state 257
-- On INFIX2 shift to state 261
-- On INFIX1 shift to state 263
-- On INFIX0 shift to state 265
-- On FBY shift to state 248
-- On EQUAL shift to state 267
-- On DOT shift to state 250
-- On COMMA shift to state 278
-- On BARBAR shift to state 275
-- On AMPERSAND shift to state 269
-- On AMPERAMPER shift to state 271
-- On AFTER shift to state 252
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SEMISEMI SEMI RPAREN RESET RBRACE OPEN NODE LET INIT IN HYBRID FUN EVERY EOF END ELSE DONE DISCRETE CONTINUE BAR ATOMIC AND
--   reduce production expression_desc -> RESET seq_expression EVERY expression

State 489:
## Known stack suffix:
## TEST expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> TEST expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On DOT shift to state 250
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> TEST expression

State 490:
## Known stack suffix:
## UP expression
## LR(1) items:
expression_comma_list -> expression . COMMA expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . FBY expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> UP expression . [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX4 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX3 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX2 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX1 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . INFIX0 expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . EQUAL expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . OR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . STAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERSAND expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . SUBTRACTIVE expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AMPERAMPER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . BARBAR expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . MINUSGREATER expression [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER IDENT [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . AFTER LPAREN list_of(COMMA,IDENT) RPAREN [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
expression_desc -> expression . DOT ext_ident [ WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DOT DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER ]
## Transitions:
-- On DOT shift to state 250
## Reductions:
-- On WITH WHERE UNTIL UNLESS TYPE THEN SUBTRACTIVE STAR SEMISEMI SEMI RPAREN RESET RBRACE OR OPEN NODE MINUSGREATER LET INIT INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HYBRID FUN FBY EVERY EQUAL EOF END ELSE DONE DISCRETE CONTINUE COMMA BARBAR BAR ATOMIC AND AMPERSAND AMPERAMPER AFTER
--   reduce production expression_desc -> UP expression

State 491:
## Known stack suffix:
## LET IDENT EQUAL seq_expression
## LR(1) items:
implementation -> LET IDENT EQUAL seq_expression . [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implementation -> LET IDENT EQUAL seq_expression

State 492:
## Known stack suffix:
## pattern
## LR(1) items:
fun_params -> pattern . [ EQUAL ]
pattern -> pattern . AS IDENT [ EQUAL COMMA BAR AS ]
pattern -> pattern . BAR pattern [ EQUAL COMMA BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ EQUAL COMMA BAR AS ]
## Transitions:
-- On COMMA shift to state 110
-- On BAR shift to state 112
-- On AS shift to state 114
## Reductions:
-- On EQUAL
--   reduce production fun_params -> pattern

State 493:
## Known stack suffix:
## LET IDENT fun_params
## LR(1) items:
implementation -> LET IDENT fun_params . EQUAL seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> LET IDENT fun_params . EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On EQUAL shift to state 494
## Reductions:

State 494:
## Known stack suffix:
## LET IDENT fun_params EQUAL
## LR(1) items:
implementation -> LET IDENT fun_params EQUAL . seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> LET IDENT fun_params EQUAL . seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 495
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 495:
## Known stack suffix:
## LET IDENT fun_params EQUAL seq_expression
## LR(1) items:
implementation -> LET IDENT fun_params EQUAL seq_expression . [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> LET IDENT fun_params EQUAL seq_expression . WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On WHERE shift to state 496
## Reductions:
-- On TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC
--   reduce production implementation -> LET IDENT fun_params EQUAL seq_expression

State 496:
## Known stack suffix:
## LET IDENT fun_params EQUAL seq_expression WHERE
## LR(1) items:
implementation -> LET IDENT fun_params EQUAL seq_expression WHERE . is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On REC shift to state 497
-- On is_rec shift to state 498
## Reductions:
-- On UNDERSCORE SUBTRACTIVE STRING RESET PRESENT PERIOD NEXT MATCH LPAREN LOCAL LET LBRACE INT INIT IF IDENT FLOAT EMIT DO DER CONSTRUCTOR CHAR BOOL AUTOMATON
--   reduce production is_rec ->

State 497:
## Known stack suffix:
## REC
## LR(1) items:
is_rec -> REC . [ UNDERSCORE SUBTRACTIVE STRING RESET PRESENT PERIOD NEXT MATCH LPAREN LOCAL LET LBRACE INT INIT IF IDENT FLOAT EMIT DO DER CONSTRUCTOR CHAR BOOL AUTOMATON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production is_rec -> REC

State 498:
## Known stack suffix:
## LET IDENT fun_params EQUAL seq_expression WHERE is_rec
## LR(1) items:
implementation -> LET IDENT fun_params EQUAL seq_expression WHERE is_rec . list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 312
-- On list_of(AND,localized(equation_desc)) shift to state 499
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 499:
## Known stack suffix:
## LET IDENT fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc))
## LR(1) items:
implementation -> LET IDENT fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) . [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) . AND localized(equation_desc) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC AND ]
## Transitions:
-- On AND shift to state 314
## Reductions:
-- On TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC
--   reduce production implementation -> LET IDENT fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc))

State 500:
## Known stack suffix:
## EOF
## LR(1) items:
implementation_file -> EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production implementation_file -> EOF

State 501:
## Known stack suffix:
## localized(implementation)
## LR(1) items:
decl_list(localized(implementation)) -> localized(implementation) . opt_semi_semi [ TYPE OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On SEMISEMI shift to state 502
-- On opt_semi_semi shift to state 503
## Reductions:
-- On TYPE OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC
--   reduce production opt_semi_semi ->

State 502:
## Known stack suffix:
## SEMISEMI
## LR(1) items:
opt_semi_semi -> SEMISEMI . [ VAL TYPE OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opt_semi_semi -> SEMISEMI

State 503:
## Known stack suffix:
## localized(implementation) opt_semi_semi
## LR(1) items:
decl_list(localized(implementation)) -> localized(implementation) opt_semi_semi . [ TYPE OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_list(localized(implementation)) -> localized(implementation) opt_semi_semi

State 504:
## Known stack suffix:
## is_let
## LR(1) items:
implementation -> is_let . is_atomic kind IDENT fun_params EQUAL seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> is_let . is_atomic kind IDENT fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On ATOMIC shift to state 505
-- On is_atomic shift to state 506
## Reductions:
-- On NODE HYBRID FUN DISCRETE
--   reduce production is_atomic ->

State 505:
## Known stack suffix:
## ATOMIC
## LR(1) items:
is_atomic -> ATOMIC . [ NODE HYBRID FUN DISCRETE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production is_atomic -> ATOMIC

State 506:
## Known stack suffix:
## is_let is_atomic
## LR(1) items:
implementation -> is_let is_atomic . kind IDENT fun_params EQUAL seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> is_let is_atomic . kind IDENT fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On NODE shift to state 507
-- On HYBRID shift to state 508
-- On FUN shift to state 509
-- On DISCRETE shift to state 510
-- On kind shift to state 511
## Reductions:

State 507:
## Known stack suffix:
## NODE
## LR(1) items:
kind -> NODE . [ IDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production kind -> NODE

State 508:
## Known stack suffix:
## HYBRID
## LR(1) items:
kind -> HYBRID . [ IDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production kind -> HYBRID

State 509:
## Known stack suffix:
## FUN
## LR(1) items:
kind -> FUN . [ IDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production kind -> FUN

State 510:
## Known stack suffix:
## DISCRETE
## LR(1) items:
kind -> DISCRETE . [ IDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production kind -> DISCRETE

State 511:
## Known stack suffix:
## is_let is_atomic kind
## LR(1) items:
implementation -> is_let is_atomic kind . IDENT fun_params EQUAL seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> is_let is_atomic kind . IDENT fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On IDENT shift to state 512
## Reductions:

State 512:
## Known stack suffix:
## is_let is_atomic kind IDENT
## LR(1) items:
implementation -> is_let is_atomic kind IDENT . fun_params EQUAL seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> is_let is_atomic kind IDENT . fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On LPAREN shift to state 83
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On simple_pattern shift to state 102
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 492
-- On ide shift to state 106
-- On fun_params shift to state 513
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:

State 513:
## Known stack suffix:
## is_let is_atomic kind IDENT fun_params
## LR(1) items:
implementation -> is_let is_atomic kind IDENT fun_params . EQUAL seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> is_let is_atomic kind IDENT fun_params . EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On EQUAL shift to state 514
## Reductions:

State 514:
## Known stack suffix:
## is_let is_atomic kind IDENT fun_params EQUAL
## LR(1) items:
implementation -> is_let is_atomic kind IDENT fun_params EQUAL . seq_expression [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> is_let is_atomic kind IDENT fun_params EQUAL . seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On UP shift to state 124
-- On TEST shift to state 125
-- On SUBTRACTIVE shift to state 126
-- On STRING shift to state 82
-- On RESET shift to state 127
-- On PRESENT shift to state 128
-- On PREFIX shift to state 134
-- On PRE shift to state 135
-- On PERIOD shift to state 136
-- On MATCH shift to state 144
-- On LPAREN shift to state 132
-- On LOCAL shift to state 145
-- On LET shift to state 164
-- On LBRACE shift to state 168
-- On LAST shift to state 176
-- On INT shift to state 95
-- On INLINE shift to state 178
-- On INIT shift to state 187
-- On IF shift to state 188
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On DISC shift to state 189
-- On CONSTRUCTOR shift to state 180
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 190
-- On simple_expression_desc shift to state 210
-- On seq_expression shift to state 515
-- On qual_ident shift to state 42
-- On localized(expression_desc) shift to state 211
-- On local_list shift to state 212
-- On ide shift to state 43
-- On ext_ident shift to state 236
-- On expression_desc shift to state 238
-- On expression_comma_list shift to state 239
-- On expression shift to state 382
-- On constructor shift to state 185
-- On atomic_constant shift to state 186
## Reductions:
-- On DO
--   reduce production local_list ->

State 515:
## Known stack suffix:
## is_let is_atomic kind IDENT fun_params EQUAL seq_expression
## LR(1) items:
implementation -> is_let is_atomic kind IDENT fun_params EQUAL seq_expression . [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation -> is_let is_atomic kind IDENT fun_params EQUAL seq_expression . WHERE is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On WHERE shift to state 516
## Reductions:
-- On TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC
--   reduce production implementation -> is_let is_atomic kind IDENT fun_params EQUAL seq_expression

State 516:
## Known stack suffix:
## is_let is_atomic kind IDENT fun_params EQUAL seq_expression WHERE
## LR(1) items:
implementation -> is_let is_atomic kind IDENT fun_params EQUAL seq_expression WHERE . is_rec list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On REC shift to state 497
-- On is_rec shift to state 517
## Reductions:
-- On UNDERSCORE SUBTRACTIVE STRING RESET PRESENT PERIOD NEXT MATCH LPAREN LOCAL LET LBRACE INT INIT IF IDENT FLOAT EMIT DO DER CONSTRUCTOR CHAR BOOL AUTOMATON
--   reduce production is_rec ->

State 517:
## Known stack suffix:
## is_let is_atomic kind IDENT fun_params EQUAL seq_expression WHERE is_rec
## LR(1) items:
implementation -> is_let is_atomic kind IDENT fun_params EQUAL seq_expression WHERE is_rec . list_of(AND,localized(equation_desc)) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On UNDERSCORE shift to state 78
-- On SUBTRACTIVE shift to state 79
-- On STRING shift to state 82
-- On RESET shift to state 165
-- On PRESENT shift to state 166
-- On PERIOD shift to state 203
-- On NEXT shift to state 207
-- On MATCH shift to state 214
-- On LPAREN shift to state 83
-- On LET shift to state 201
-- On LBRACE shift to state 86
-- On INT shift to state 95
-- On INIT shift to state 233
-- On IF shift to state 220
-- On IDENT shift to state 25
-- On FLOAT shift to state 96
-- On EMIT shift to state 280
-- On DER shift to state 284
-- On CONSTRUCTOR shift to state 97
-- On CHAR shift to state 100
-- On BOOL shift to state 101
-- On AUTOMATON shift to state 223
-- On simple_pattern shift to state 102
-- On simple_equation_desc shift to state 308
-- On pattern_comma_list shift to state 103
-- On pattern shift to state 309
-- On one_let shift to state 227
-- On localized(equation_desc) shift to state 312
-- On list_of(AND,localized(equation_desc)) shift to state 518
-- On let_list shift to state 316
-- On ide shift to state 319
-- On equation_desc shift to state 324
-- On constructor shift to state 107
-- On atomic_constant shift to state 108
## Reductions:
-- On LOCAL DO
--   reduce production let_list ->

State 518:
## Known stack suffix:
## is_let is_atomic kind IDENT fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc))
## LR(1) items:
implementation -> is_let is_atomic kind IDENT fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc)) . [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
list_of(AND,localized(equation_desc)) -> list_of(AND,localized(equation_desc)) . AND localized(equation_desc) [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC AND ]
## Transitions:
-- On AND shift to state 314
## Reductions:
-- On TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC
--   reduce production implementation -> is_let is_atomic kind IDENT fun_params EQUAL seq_expression WHERE is_rec list_of(AND,localized(equation_desc))

State 519:
## Known stack suffix:
## implementation_file
## LR(1) items:
implementation_file' -> implementation_file . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept implementation_file

State 520:
## Known stack suffix:
## implementation
## LR(1) items:
localized(implementation) -> implementation . [ TYPE SEMISEMI OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production localized(implementation) -> implementation

State 521:
## Known stack suffix:
## decl_list(localized(implementation))
## LR(1) items:
decl_list(localized(implementation)) -> decl_list(localized(implementation)) . localized(implementation) opt_semi_semi [ TYPE OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
implementation_file -> decl_list(localized(implementation)) . EOF [ # ]
## Transitions:
-- On TYPE shift to state 1
-- On OPEN shift to state 74
-- On LET shift to state 76
-- On EOF shift to state 522
-- On localized(implementation) shift to state 523
-- On is_let shift to state 504
-- On implementation shift to state 520
## Reductions:
-- On NODE HYBRID FUN DISCRETE ATOMIC
--   reduce production is_let ->

State 522:
## Known stack suffix:
## decl_list(localized(implementation)) EOF
## LR(1) items:
implementation_file -> decl_list(localized(implementation)) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production implementation_file -> decl_list(localized(implementation)) EOF

State 523:
## Known stack suffix:
## decl_list(localized(implementation)) localized(implementation)
## LR(1) items:
decl_list(localized(implementation)) -> decl_list(localized(implementation)) localized(implementation) . opt_semi_semi [ TYPE OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
-- On SEMISEMI shift to state 502
-- On opt_semi_semi shift to state 524
## Reductions:
-- On TYPE OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC
--   reduce production opt_semi_semi ->

State 524:
## Known stack suffix:
## decl_list(localized(implementation)) localized(implementation) opt_semi_semi
## LR(1) items:
decl_list(localized(implementation)) -> decl_list(localized(implementation)) localized(implementation) opt_semi_semi . [ TYPE OPEN NODE LET HYBRID FUN EOF DISCRETE ATOMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_list(localized(implementation)) -> decl_list(localized(implementation)) localized(implementation) opt_semi_semi

State 525:
## Known stack suffix:
##
## LR(1) items:
interface_file' -> . interface_file [ # ]
## Transitions:
-- On VAL shift to state 526
-- On TYPE shift to state 543
-- On OPEN shift to state 547
-- On EOF shift to state 549
-- On localized(interface) shift to state 550
-- On interface_file shift to state 552
-- On interface shift to state 553
-- On decl_list(localized(interface)) shift to state 554
## Reductions:

State 526:
## Known stack suffix:
## VAL
## LR(1) items:
interface -> VAL . ide COLON type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
interface -> VAL . UNSAFE ide COLON type_expression arrow type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
interface -> VAL . ide COLON type_expression arrow type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On UNSAFE shift to state 527
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On ide shift to state 538
## Reductions:

State 527:
## Known stack suffix:
## VAL UNSAFE
## LR(1) items:
interface -> VAL UNSAFE . ide COLON type_expression arrow type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On LPAREN shift to state 30
-- On IDENT shift to state 25
-- On ide shift to state 528
## Reductions:

State 528:
## Known stack suffix:
## VAL UNSAFE ide
## LR(1) items:
interface -> VAL UNSAFE ide . COLON type_expression arrow type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On COLON shift to state 529
## Reductions:

State 529:
## Known stack suffix:
## VAL UNSAFE ide COLON
## LR(1) items:
interface -> VAL UNSAFE ide COLON . type_expression arrow type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On type_var shift to state 37
-- On type_star_list shift to state 38
-- On type_expression shift to state 530
-- On simple_type_desc shift to state 52
-- On simple_type shift to state 53
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 530:
## Known stack suffix:
## VAL UNSAFE ide COLON type_expression
## LR(1) items:
interface -> VAL UNSAFE ide COLON type_expression . arrow type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On MINUSGREATER shift to state 531
-- On DFUN shift to state 532
-- On CFUN shift to state 533
-- On AFUN shift to state 534
-- On ADFUN shift to state 535
-- On arrow shift to state 536
## Reductions:

State 531:
## Known stack suffix:
## MINUSGREATER
## LR(1) items:
arrow -> MINUSGREATER . [ QUOTE LPAREN IDENT CONSTRUCTOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arrow -> MINUSGREATER

State 532:
## Known stack suffix:
## DFUN
## LR(1) items:
arrow -> DFUN . [ QUOTE LPAREN IDENT CONSTRUCTOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arrow -> DFUN

State 533:
## Known stack suffix:
## CFUN
## LR(1) items:
arrow -> CFUN . [ QUOTE LPAREN IDENT CONSTRUCTOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arrow -> CFUN

State 534:
## Known stack suffix:
## AFUN
## LR(1) items:
arrow -> AFUN . [ QUOTE LPAREN IDENT CONSTRUCTOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arrow -> AFUN

State 535:
## Known stack suffix:
## ADFUN
## LR(1) items:
arrow -> ADFUN . [ QUOTE LPAREN IDENT CONSTRUCTOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arrow -> ADFUN

State 536:
## Known stack suffix:
## VAL UNSAFE ide COLON type_expression arrow
## LR(1) items:
interface -> VAL UNSAFE ide COLON type_expression arrow . type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On type_var shift to state 37
-- On type_star_list shift to state 38
-- On type_expression shift to state 537
-- On simple_type_desc shift to state 52
-- On simple_type shift to state 53
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 537:
## Known stack suffix:
## VAL UNSAFE ide COLON type_expression arrow type_expression
## LR(1) items:
interface -> VAL UNSAFE ide COLON type_expression arrow type_expression . [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface -> VAL UNSAFE ide COLON type_expression arrow type_expression

State 538:
## Known stack suffix:
## VAL ide
## LR(1) items:
interface -> VAL ide . COLON type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
interface -> VAL ide . COLON type_expression arrow type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On COLON shift to state 539
## Reductions:

State 539:
## Known stack suffix:
## VAL ide COLON
## LR(1) items:
interface -> VAL ide COLON . type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
interface -> VAL ide COLON . type_expression arrow type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On type_var shift to state 37
-- On type_star_list shift to state 38
-- On type_expression shift to state 540
-- On simple_type_desc shift to state 52
-- On simple_type shift to state 53
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 540:
## Known stack suffix:
## VAL ide COLON type_expression
## LR(1) items:
interface -> VAL ide COLON type_expression . [ VAL TYPE SEMISEMI OPEN EOF ]
interface -> VAL ide COLON type_expression . arrow type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On MINUSGREATER shift to state 531
-- On DFUN shift to state 532
-- On CFUN shift to state 533
-- On AFUN shift to state 534
-- On ADFUN shift to state 535
-- On arrow shift to state 541
## Reductions:
-- On VAL TYPE SEMISEMI OPEN EOF
--   reduce production interface -> VAL ide COLON type_expression

State 541:
## Known stack suffix:
## VAL ide COLON type_expression arrow
## LR(1) items:
interface -> VAL ide COLON type_expression arrow . type_expression [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 14
-- On IDENT shift to state 25
-- On CONSTRUCTOR shift to state 28
-- On type_var shift to state 37
-- On type_star_list shift to state 38
-- On type_expression shift to state 542
-- On simple_type_desc shift to state 52
-- On simple_type shift to state 53
-- On qual_ident shift to state 42
-- On ide shift to state 43
-- On ext_ident shift to state 45
## Reductions:

State 542:
## Known stack suffix:
## VAL ide COLON type_expression arrow type_expression
## LR(1) items:
interface -> VAL ide COLON type_expression arrow type_expression . [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface -> VAL ide COLON type_expression arrow type_expression

State 543:
## Known stack suffix:
## TYPE
## LR(1) items:
interface -> TYPE . type_params IDENT type_declaration [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On QUOTE shift to state 2
-- On LPAREN shift to state 4
-- On type_var shift to state 10
-- On type_params shift to state 544
## Reductions:
-- On IDENT
--   reduce production type_params ->

State 544:
## Known stack suffix:
## TYPE type_params
## LR(1) items:
interface -> TYPE type_params . IDENT type_declaration [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On IDENT shift to state 545
## Reductions:

State 545:
## Known stack suffix:
## TYPE type_params IDENT
## LR(1) items:
interface -> TYPE type_params IDENT . type_declaration [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On EQUAL shift to state 13
-- On type_declaration shift to state 546
## Reductions:
-- On VAL TYPE SEMISEMI OPEN EOF
--   reduce production type_declaration ->

State 546:
## Known stack suffix:
## TYPE type_params IDENT type_declaration
## LR(1) items:
interface -> TYPE type_params IDENT type_declaration . [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface -> TYPE type_params IDENT type_declaration

State 547:
## Known stack suffix:
## OPEN
## LR(1) items:
interface -> OPEN . CONSTRUCTOR [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
-- On CONSTRUCTOR shift to state 548
## Reductions:

State 548:
## Known stack suffix:
## OPEN CONSTRUCTOR
## LR(1) items:
interface -> OPEN CONSTRUCTOR . [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface -> OPEN CONSTRUCTOR

State 549:
## Known stack suffix:
## EOF
## LR(1) items:
interface_file -> EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production interface_file -> EOF

State 550:
## Known stack suffix:
## localized(interface)
## LR(1) items:
decl_list(localized(interface)) -> localized(interface) . opt_semi_semi [ VAL TYPE OPEN EOF ]
## Transitions:
-- On SEMISEMI shift to state 502
-- On opt_semi_semi shift to state 551
## Reductions:
-- On VAL TYPE OPEN EOF
--   reduce production opt_semi_semi ->

State 551:
## Known stack suffix:
## localized(interface) opt_semi_semi
## LR(1) items:
decl_list(localized(interface)) -> localized(interface) opt_semi_semi . [ VAL TYPE OPEN EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_list(localized(interface)) -> localized(interface) opt_semi_semi

State 552:
## Known stack suffix:
## interface_file
## LR(1) items:
interface_file' -> interface_file . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept interface_file

State 553:
## Known stack suffix:
## interface
## LR(1) items:
localized(interface) -> interface . [ VAL TYPE SEMISEMI OPEN EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production localized(interface) -> interface

State 554:
## Known stack suffix:
## decl_list(localized(interface))
## LR(1) items:
decl_list(localized(interface)) -> decl_list(localized(interface)) . localized(interface) opt_semi_semi [ VAL TYPE OPEN EOF ]
interface_file -> decl_list(localized(interface)) . EOF [ # ]
## Transitions:
-- On VAL shift to state 526
-- On TYPE shift to state 543
-- On OPEN shift to state 547
-- On EOF shift to state 555
-- On localized(interface) shift to state 556
-- On interface shift to state 553
## Reductions:

State 555:
## Known stack suffix:
## decl_list(localized(interface)) EOF
## LR(1) items:
interface_file -> decl_list(localized(interface)) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production interface_file -> decl_list(localized(interface)) EOF

State 556:
## Known stack suffix:
## decl_list(localized(interface)) localized(interface)
## LR(1) items:
decl_list(localized(interface)) -> decl_list(localized(interface)) localized(interface) . opt_semi_semi [ VAL TYPE OPEN EOF ]
## Transitions:
-- On SEMISEMI shift to state 502
-- On opt_semi_semi shift to state 557
## Reductions:
-- On VAL TYPE OPEN EOF
--   reduce production opt_semi_semi ->

State 557:
## Known stack suffix:
## decl_list(localized(interface)) localized(interface) opt_semi_semi
## LR(1) items:
decl_list(localized(interface)) -> decl_list(localized(interface)) localized(interface) opt_semi_semi . [ VAL TYPE OPEN EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_list(localized(interface)) -> decl_list(localized(interface)) localized(interface) opt_semi_semi

