State 0:
argument_eol' -> . argument_eol [ # ]
-- On ARGUMENT shift to state 1
-- On argument_eol shift to state 4

State 1:
argument_eol -> ARGUMENT . end_of_line [ # ]
-- On EOL shift to state 2
-- On end_of_line shift to state 3

State 2:
end_of_line -> EOL . [ # ]
-- On # reduce production end_of_line -> EOL

State 3:
argument_eol -> ARGUMENT end_of_line . [ # ]
-- On # reduce production argument_eol -> ARGUMENT end_of_line

State 4:
argument_eol' -> argument_eol . [ # ]
-- On # accept argument_eol

State 5:
argument_list_eol' -> . argument_list_eol [ # ]
-- On EOL shift to state 2
-- On ARGUMENT shift to state 6
-- On end_of_line shift to state 7
-- On argument_list_eol shift to state 9

State 6:
argument_list_eol -> ARGUMENT . argument_list_eol [ # ]
-- On EOL shift to state 2
-- On ARGUMENT shift to state 6
-- On end_of_line shift to state 7
-- On argument_list_eol shift to state 8

State 7:
argument_list_eol -> end_of_line . [ # ]
-- On # reduce production argument_list_eol -> end_of_line

State 8:
argument_list_eol -> ARGUMENT argument_list_eol . [ # ]
-- On # reduce production argument_list_eol -> ARGUMENT argument_list_eol

State 9:
argument_list_eol' -> argument_list_eol . [ # ]
-- On # accept argument_list_eol

State 10:
break_argument_eol' -> . break_argument_eol [ # ]
-- On UIDENT shift to state 11
-- On STAR shift to state 12
-- On OPERATOR shift to state 13
-- On LPAREN shift to state 14
-- On LIDENT shift to state 15
-- On INTEGER shift to state 36
-- On EOL shift to state 2
-- On DOLLAR shift to state 16
-- On BANG shift to state 18
-- On AT shift to state 38
-- On module_path shift to state 19
-- On longident shift to state 23
-- On integer_eol shift to state 50
-- On expression shift to state 51
-- On end_of_line shift to state 53
-- On break_argument_eol shift to state 54

State 11:
module_path -> UIDENT . [ DOT ]
-- On DOT reduce production module_path -> UIDENT

State 12:
expression -> STAR . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production expression -> STAR
-- On STAR reduce production expression -> STAR
-- On RPAREN reduce production expression -> STAR
-- On OPERATOR reduce production expression -> STAR
-- On LPAREN reduce production expression -> STAR
-- On LIDENT reduce production expression -> STAR
-- On EOL reduce production expression -> STAR
-- On DOT reduce production expression -> STAR
-- On DOLLAR reduce production expression -> STAR
-- On BANG reduce production expression -> STAR

State 13:
longident -> OPERATOR . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production longident -> OPERATOR
-- On STAR reduce production longident -> OPERATOR
-- On RPAREN reduce production longident -> OPERATOR
-- On OPERATOR reduce production longident -> OPERATOR
-- On LPAREN reduce production longident -> OPERATOR
-- On LIDENT reduce production longident -> OPERATOR
-- On EOL reduce production longident -> OPERATOR
-- On DOT reduce production longident -> OPERATOR
-- On DOLLAR reduce production longident -> OPERATOR
-- On BANG reduce production longident -> OPERATOR

State 14:
expression -> LPAREN . expression RPAREN [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT shift to state 11
-- On STAR shift to state 12
-- On OPERATOR shift to state 13
-- On LPAREN shift to state 14
-- On LIDENT shift to state 15
-- On DOLLAR shift to state 16
-- On BANG shift to state 18
-- On module_path shift to state 19
-- On longident shift to state 23
-- On expression shift to state 25

State 15:
longident -> LIDENT . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production longident -> LIDENT
-- On STAR reduce production longident -> LIDENT
-- On RPAREN reduce production longident -> LIDENT
-- On OPERATOR reduce production longident -> LIDENT
-- On LPAREN reduce production longident -> LIDENT
-- On LIDENT reduce production longident -> LIDENT
-- On EOL reduce production longident -> LIDENT
-- On DOT reduce production longident -> LIDENT
-- On DOLLAR reduce production longident -> LIDENT
-- On BANG reduce production longident -> LIDENT

State 16:
expression -> DOLLAR . INTEGER [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On INTEGER shift to state 17

State 17:
expression -> DOLLAR INTEGER . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production expression -> DOLLAR INTEGER
-- On STAR reduce production expression -> DOLLAR INTEGER
-- On RPAREN reduce production expression -> DOLLAR INTEGER
-- On OPERATOR reduce production expression -> DOLLAR INTEGER
-- On LPAREN reduce production expression -> DOLLAR INTEGER
-- On LIDENT reduce production expression -> DOLLAR INTEGER
-- On EOL reduce production expression -> DOLLAR INTEGER
-- On DOT reduce production expression -> DOLLAR INTEGER
-- On DOLLAR reduce production expression -> DOLLAR INTEGER
-- On BANG reduce production expression -> DOLLAR INTEGER

State 18:
expression -> BANG . expression [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT shift to state 11
-- On STAR shift to state 12
-- On OPERATOR shift to state 13
-- On LPAREN shift to state 14
-- On LIDENT shift to state 15
-- On DOLLAR shift to state 16
-- On BANG shift to state 18
-- On module_path shift to state 19
-- On longident shift to state 23
-- On expression shift to state 24

State 19:
longident -> module_path . DOT LIDENT [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
module_path -> module_path . DOT UIDENT [ DOT ]
-- On DOT shift to state 20

State 20:
longident -> module_path DOT . LIDENT [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
module_path -> module_path DOT . UIDENT [ DOT ]
-- On UIDENT shift to state 21
-- On LIDENT shift to state 22

State 21:
module_path -> module_path DOT UIDENT . [ DOT ]
-- On DOT reduce production module_path -> module_path DOT UIDENT

State 22:
longident -> module_path DOT LIDENT . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production longident -> module_path DOT LIDENT
-- On STAR reduce production longident -> module_path DOT LIDENT
-- On RPAREN reduce production longident -> module_path DOT LIDENT
-- On OPERATOR reduce production longident -> module_path DOT LIDENT
-- On LPAREN reduce production longident -> module_path DOT LIDENT
-- On LIDENT reduce production longident -> module_path DOT LIDENT
-- On EOL reduce production longident -> module_path DOT LIDENT
-- On DOT reduce production longident -> module_path DOT LIDENT
-- On DOLLAR reduce production longident -> module_path DOT LIDENT
-- On BANG reduce production longident -> module_path DOT LIDENT

State 23:
expression -> longident . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production expression -> longident
-- On STAR reduce production expression -> longident
-- On RPAREN reduce production expression -> longident
-- On OPERATOR reduce production expression -> longident
-- On LPAREN reduce production expression -> longident
-- On LIDENT reduce production expression -> longident
-- On EOL reduce production expression -> longident
-- On DOT reduce production expression -> longident
-- On DOLLAR reduce production expression -> longident
-- On BANG reduce production expression -> longident

State 24:
expression -> expression . DOT INTEGER [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
expression -> expression . DOT LBRACKET INTEGER RBRACKET [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
expression -> expression . DOT LPAREN INTEGER RPAREN [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
expression -> expression . DOT LIDENT [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
expression -> BANG expression . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production expression -> BANG expression
-- On STAR reduce production expression -> BANG expression
-- On RPAREN reduce production expression -> BANG expression
-- On OPERATOR reduce production expression -> BANG expression
-- On LPAREN reduce production expression -> BANG expression
-- On LIDENT reduce production expression -> BANG expression
-- On EOL reduce production expression -> BANG expression
-- On DOT reduce production expression -> BANG expression
-- On DOLLAR reduce production expression -> BANG expression
-- On BANG reduce production expression -> BANG expression

State 25:
expression -> expression . DOT INTEGER [ RPAREN DOT ]
expression -> expression . DOT LBRACKET INTEGER RBRACKET [ RPAREN DOT ]
expression -> expression . DOT LPAREN INTEGER RPAREN [ RPAREN DOT ]
expression -> expression . DOT LIDENT [ RPAREN DOT ]
expression -> LPAREN expression . RPAREN [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On RPAREN shift to state 26
-- On DOT shift to state 27

State 26:
expression -> LPAREN expression RPAREN . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production expression -> LPAREN expression RPAREN
-- On STAR reduce production expression -> LPAREN expression RPAREN
-- On RPAREN reduce production expression -> LPAREN expression RPAREN
-- On OPERATOR reduce production expression -> LPAREN expression RPAREN
-- On LPAREN reduce production expression -> LPAREN expression RPAREN
-- On LIDENT reduce production expression -> LPAREN expression RPAREN
-- On EOL reduce production expression -> LPAREN expression RPAREN
-- On DOT reduce production expression -> LPAREN expression RPAREN
-- On DOLLAR reduce production expression -> LPAREN expression RPAREN
-- On BANG reduce production expression -> LPAREN expression RPAREN

State 27:
expression -> expression DOT . INTEGER [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
expression -> expression DOT . LBRACKET INTEGER RBRACKET [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
expression -> expression DOT . LPAREN INTEGER RPAREN [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
expression -> expression DOT . LIDENT [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On LPAREN shift to state 28
-- On LIDENT shift to state 31
-- On LBRACKET shift to state 32
-- On INTEGER shift to state 35

State 28:
expression -> expression DOT LPAREN . INTEGER RPAREN [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On INTEGER shift to state 29

State 29:
expression -> expression DOT LPAREN INTEGER . RPAREN [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On RPAREN shift to state 30

State 30:
expression -> expression DOT LPAREN INTEGER RPAREN . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production expression -> expression DOT LPAREN INTEGER RPAREN
-- On STAR reduce production expression -> expression DOT LPAREN INTEGER RPAREN
-- On RPAREN reduce production expression -> expression DOT LPAREN INTEGER RPAREN
-- On OPERATOR reduce production expression -> expression DOT LPAREN INTEGER RPAREN
-- On LPAREN reduce production expression -> expression DOT LPAREN INTEGER RPAREN
-- On LIDENT reduce production expression -> expression DOT LPAREN INTEGER RPAREN
-- On EOL reduce production expression -> expression DOT LPAREN INTEGER RPAREN
-- On DOT reduce production expression -> expression DOT LPAREN INTEGER RPAREN
-- On DOLLAR reduce production expression -> expression DOT LPAREN INTEGER RPAREN
-- On BANG reduce production expression -> expression DOT LPAREN INTEGER RPAREN

State 31:
expression -> expression DOT LIDENT . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production expression -> expression DOT LIDENT
-- On STAR reduce production expression -> expression DOT LIDENT
-- On RPAREN reduce production expression -> expression DOT LIDENT
-- On OPERATOR reduce production expression -> expression DOT LIDENT
-- On LPAREN reduce production expression -> expression DOT LIDENT
-- On LIDENT reduce production expression -> expression DOT LIDENT
-- On EOL reduce production expression -> expression DOT LIDENT
-- On DOT reduce production expression -> expression DOT LIDENT
-- On DOLLAR reduce production expression -> expression DOT LIDENT
-- On BANG reduce production expression -> expression DOT LIDENT

State 32:
expression -> expression DOT LBRACKET . INTEGER RBRACKET [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On INTEGER shift to state 33

State 33:
expression -> expression DOT LBRACKET INTEGER . RBRACKET [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On RBRACKET shift to state 34

State 34:
expression -> expression DOT LBRACKET INTEGER RBRACKET . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production expression -> expression DOT LBRACKET INTEGER RBRACKET
-- On STAR reduce production expression -> expression DOT LBRACKET INTEGER RBRACKET
-- On RPAREN reduce production expression -> expression DOT LBRACKET INTEGER RBRACKET
-- On OPERATOR reduce production expression -> expression DOT LBRACKET INTEGER RBRACKET
-- On LPAREN reduce production expression -> expression DOT LBRACKET INTEGER RBRACKET
-- On LIDENT reduce production expression -> expression DOT LBRACKET INTEGER RBRACKET
-- On EOL reduce production expression -> expression DOT LBRACKET INTEGER RBRACKET
-- On DOT reduce production expression -> expression DOT LBRACKET INTEGER RBRACKET
-- On DOLLAR reduce production expression -> expression DOT LBRACKET INTEGER RBRACKET
-- On BANG reduce production expression -> expression DOT LBRACKET INTEGER RBRACKET

State 35:
expression -> expression DOT INTEGER . [ UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
-- On UIDENT reduce production expression -> expression DOT INTEGER
-- On STAR reduce production expression -> expression DOT INTEGER
-- On RPAREN reduce production expression -> expression DOT INTEGER
-- On OPERATOR reduce production expression -> expression DOT INTEGER
-- On LPAREN reduce production expression -> expression DOT INTEGER
-- On LIDENT reduce production expression -> expression DOT INTEGER
-- On EOL reduce production expression -> expression DOT INTEGER
-- On DOT reduce production expression -> expression DOT INTEGER
-- On DOLLAR reduce production expression -> expression DOT INTEGER
-- On BANG reduce production expression -> expression DOT INTEGER

State 36:
integer_eol -> INTEGER . end_of_line [ # ]
-- On EOL shift to state 2
-- On end_of_line shift to state 37

State 37:
integer_eol -> INTEGER end_of_line . [ # ]
-- On # reduce production integer_eol -> INTEGER end_of_line

State 38:
break_argument_eol -> AT . opt_identifier INTEGER opt_integer_eol [ # ]
break_argument_eol -> AT . opt_identifier SHARP integer_eol [ # ]
-- On UIDENT shift to state 39
-- On LIDENT shift to state 40
-- On opt_identifier shift to state 41
-- On identifier shift to state 49
-- On SHARP reduce production opt_identifier -> 
-- On INTEGER reduce production opt_identifier -> 

State 39:
identifier -> UIDENT . [ SHARP INTEGER EOL ]
-- On SHARP reduce production identifier -> UIDENT
-- On INTEGER reduce production identifier -> UIDENT
-- On EOL reduce production identifier -> UIDENT

State 40:
identifier -> LIDENT . [ SHARP INTEGER EOL ]
-- On SHARP reduce production identifier -> LIDENT
-- On INTEGER reduce production identifier -> LIDENT
-- On EOL reduce production identifier -> LIDENT

State 41:
break_argument_eol -> AT opt_identifier . INTEGER opt_integer_eol [ # ]
break_argument_eol -> AT opt_identifier . SHARP integer_eol [ # ]
-- On SHARP shift to state 42
-- On INTEGER shift to state 44

State 42:
break_argument_eol -> AT opt_identifier SHARP . integer_eol [ # ]
-- On INTEGER shift to state 36
-- On integer_eol shift to state 43

State 43:
break_argument_eol -> AT opt_identifier SHARP integer_eol . [ # ]
-- On # reduce production break_argument_eol -> AT opt_identifier SHARP integer_eol

State 44:
break_argument_eol -> AT opt_identifier INTEGER . opt_integer_eol [ # ]
-- On INTEGER shift to state 45
-- On EOL shift to state 2
-- On opt_integer_eol shift to state 47
-- On end_of_line shift to state 48

State 45:
opt_integer_eol -> INTEGER . end_of_line [ # ]
-- On EOL shift to state 2
-- On end_of_line shift to state 46

State 46:
opt_integer_eol -> INTEGER end_of_line . [ # ]
-- On # reduce production opt_integer_eol -> INTEGER end_of_line

State 47:
break_argument_eol -> AT opt_identifier INTEGER opt_integer_eol . [ # ]
-- On # reduce production break_argument_eol -> AT opt_identifier INTEGER opt_integer_eol

State 48:
opt_integer_eol -> end_of_line . [ # ]
-- On # reduce production opt_integer_eol -> end_of_line

State 49:
opt_identifier -> identifier . [ SHARP INTEGER EOL ]
-- On SHARP reduce production opt_identifier -> identifier
-- On INTEGER reduce production opt_identifier -> identifier
-- On EOL reduce production opt_identifier -> identifier

State 50:
break_argument_eol -> integer_eol . [ # ]
-- On # reduce production break_argument_eol -> integer_eol

State 51:
break_argument_eol -> expression . end_of_line [ # ]
expression -> expression . DOT INTEGER [ EOL DOT ]
expression -> expression . DOT LBRACKET INTEGER RBRACKET [ EOL DOT ]
expression -> expression . DOT LPAREN INTEGER RPAREN [ EOL DOT ]
expression -> expression . DOT LIDENT [ EOL DOT ]
-- On EOL shift to state 2
-- On DOT shift to state 27
-- On end_of_line shift to state 52

State 52:
break_argument_eol -> expression end_of_line . [ # ]
-- On # reduce production break_argument_eol -> expression end_of_line

State 53:
break_argument_eol -> end_of_line . [ # ]
-- On # reduce production break_argument_eol -> end_of_line

State 54:
break_argument_eol' -> break_argument_eol . [ # ]
-- On # accept break_argument_eol

State 55:
end_of_line' -> . end_of_line [ # ]
-- On EOL shift to state 2
-- On end_of_line shift to state 56

State 56:
end_of_line' -> end_of_line . [ # ]
-- On # accept end_of_line

State 57:
expression_list_eol' -> . expression_list_eol [ # ]
-- On UIDENT shift to state 11
-- On STAR shift to state 12
-- On OPERATOR shift to state 13
-- On LPAREN shift to state 14
-- On LIDENT shift to state 15
-- On EOL shift to state 2
-- On DOLLAR shift to state 16
-- On BANG shift to state 18
-- On module_path shift to state 19
-- On longident shift to state 23
-- On expression_list_eol shift to state 58
-- On expression shift to state 59
-- On end_of_line shift to state 61

State 58:
expression_list_eol' -> expression_list_eol . [ # ]
-- On # accept expression_list_eol

State 59:
expression -> expression . DOT INTEGER [ UIDENT STAR OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
expression -> expression . DOT LBRACKET INTEGER RBRACKET [ UIDENT STAR OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
expression -> expression . DOT LPAREN INTEGER RPAREN [ UIDENT STAR OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
expression -> expression . DOT LIDENT [ UIDENT STAR OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG ]
expression_list_eol -> expression . expression_list_eol [ # ]
-- On UIDENT shift to state 11
-- On STAR shift to state 12
-- On OPERATOR shift to state 13
-- On LPAREN shift to state 14
-- On LIDENT shift to state 15
-- On EOL shift to state 2
-- On DOT shift to state 27
-- On DOLLAR shift to state 16
-- On BANG shift to state 18
-- On module_path shift to state 19
-- On longident shift to state 23
-- On expression_list_eol shift to state 60
-- On expression shift to state 59
-- On end_of_line shift to state 61

State 60:
expression_list_eol -> expression expression_list_eol . [ # ]
-- On # reduce production expression_list_eol -> expression expression_list_eol

State 61:
expression_list_eol -> end_of_line . [ # ]
-- On # reduce production expression_list_eol -> end_of_line

State 62:
identifier' -> . identifier [ # ]
-- On UIDENT shift to state 63
-- On LIDENT shift to state 64
-- On identifier shift to state 65

State 63:
identifier -> UIDENT . [ # ]
-- On # reduce production identifier -> UIDENT

State 64:
identifier -> LIDENT . [ # ]
-- On # reduce production identifier -> LIDENT

State 65:
identifier' -> identifier . [ # ]
-- On # accept identifier

State 66:
identifier_eol' -> . identifier_eol [ # ]
-- On UIDENT shift to state 39
-- On LIDENT shift to state 40
-- On identifier_eol shift to state 67
-- On identifier shift to state 68

State 67:
identifier_eol' -> identifier_eol . [ # ]
-- On # accept identifier_eol

State 68:
identifier_eol -> identifier . end_of_line [ # ]
-- On EOL shift to state 2
-- On end_of_line shift to state 69

State 69:
identifier_eol -> identifier end_of_line . [ # ]
-- On # reduce production identifier_eol -> identifier end_of_line

State 70:
identifier_or_eol' -> . identifier_or_eol [ # ]
-- On UIDENT shift to state 63
-- On LIDENT shift to state 64
-- On EOL shift to state 2
-- On identifier_or_eol shift to state 71
-- On identifier shift to state 72
-- On end_of_line shift to state 73

State 71:
identifier_or_eol' -> identifier_or_eol . [ # ]
-- On # accept identifier_or_eol

State 72:
identifier_or_eol -> identifier . [ # ]
-- On # reduce production identifier_or_eol -> identifier

State 73:
identifier_or_eol -> end_of_line . [ # ]
-- On # reduce production identifier_or_eol -> end_of_line

State 74:
int64_eol' -> . int64_eol [ # ]
-- On INTEGER shift to state 75
-- On int64_eol shift to state 77

State 75:
int64_eol -> INTEGER . end_of_line [ # ]
-- On EOL shift to state 2
-- On end_of_line shift to state 76

State 76:
int64_eol -> INTEGER end_of_line . [ # ]
-- On # reduce production int64_eol -> INTEGER end_of_line

State 77:
int64_eol' -> int64_eol . [ # ]
-- On # accept int64_eol

State 78:
integer' -> . integer [ # ]
-- On INTEGER shift to state 79
-- On integer shift to state 80

State 79:
integer -> INTEGER . [ # ]
-- On # reduce production integer -> INTEGER

State 80:
integer' -> integer . [ # ]
-- On # accept integer

State 81:
integer_eol' -> . integer_eol [ # ]
-- On INTEGER shift to state 36
-- On integer_eol shift to state 82

State 82:
integer_eol' -> integer_eol . [ # ]
-- On # accept integer_eol

State 83:
integer_list_eol' -> . integer_list_eol [ # ]
-- On INTEGER shift to state 84
-- On EOL shift to state 2
-- On integer_list_eol shift to state 87
-- On end_of_line shift to state 86

State 84:
integer_list_eol -> INTEGER . integer_list_eol [ # ]
-- On INTEGER shift to state 84
-- On EOL shift to state 2
-- On integer_list_eol shift to state 85
-- On end_of_line shift to state 86

State 85:
integer_list_eol -> INTEGER integer_list_eol . [ # ]
-- On # reduce production integer_list_eol -> INTEGER integer_list_eol

State 86:
integer_list_eol -> end_of_line . [ # ]
-- On # reduce production integer_list_eol -> end_of_line

State 87:
integer_list_eol' -> integer_list_eol . [ # ]
-- On # accept integer_list_eol

State 88:
list_arguments_eol' -> . list_arguments_eol [ # ]
-- On UIDENT shift to state 39
-- On LIDENT shift to state 40
-- On opt_identifier_eol shift to state 89
-- On opt_identifier shift to state 90
-- On list_arguments_eol shift to state 95
-- On identifier shift to state 49
-- On INTEGER reduce production opt_identifier -> 
-- On EOL reduce production opt_identifier -> 

State 89:
list_arguments_eol -> opt_identifier_eol . [ # ]
-- On # reduce production list_arguments_eol -> opt_identifier_eol

State 90:
list_arguments_eol -> opt_identifier . integer opt_integer_eol [ # ]
opt_identifier_eol -> opt_identifier . end_of_line [ # ]
-- On INTEGER shift to state 91
-- On EOL shift to state 2
-- On integer shift to state 92
-- On end_of_line shift to state 94

State 91:
integer -> INTEGER . [ INTEGER EOL ]
-- On INTEGER reduce production integer -> INTEGER
-- On EOL reduce production integer -> INTEGER

State 92:
list_arguments_eol -> opt_identifier integer . opt_integer_eol [ # ]
-- On INTEGER shift to state 45
-- On EOL shift to state 2
-- On opt_integer_eol shift to state 93
-- On end_of_line shift to state 48

State 93:
list_arguments_eol -> opt_identifier integer opt_integer_eol . [ # ]
-- On # reduce production list_arguments_eol -> opt_identifier integer opt_integer_eol

State 94:
opt_identifier_eol -> opt_identifier end_of_line . [ # ]
-- On # reduce production opt_identifier_eol -> opt_identifier end_of_line

State 95:
list_arguments_eol' -> list_arguments_eol . [ # ]
-- On # accept list_arguments_eol

State 96:
longident_eol' -> . longident_eol [ # ]
-- On UIDENT shift to state 11
-- On OPERATOR shift to state 13
-- On LIDENT shift to state 15
-- On module_path shift to state 19
-- On longident_eol shift to state 97
-- On longident shift to state 98

State 97:
longident_eol' -> longident_eol . [ # ]
-- On # accept longident_eol

State 98:
longident_eol -> longident . end_of_line [ # ]
-- On EOL shift to state 2
-- On end_of_line shift to state 99

State 99:
longident_eol -> longident end_of_line . [ # ]
-- On # reduce production longident_eol -> longident end_of_line

State 100:
opt_identifier' -> . opt_identifier [ # ]
-- On UIDENT shift to state 63
-- On LIDENT shift to state 64
-- On opt_identifier shift to state 101
-- On identifier shift to state 102
-- On # reduce production opt_identifier -> 
** End-of-stream conflict on UIDENT LIDENT
**   There is a tension between
**   (1) reducing production opt_identifier -> 
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 101:
opt_identifier' -> opt_identifier . [ # ]
-- On # accept opt_identifier

State 102:
opt_identifier -> identifier . [ # ]
-- On # reduce production opt_identifier -> identifier

State 103:
opt_identifier_eol' -> . opt_identifier_eol [ # ]
-- On UIDENT shift to state 39
-- On LIDENT shift to state 40
-- On opt_identifier_eol shift to state 104
-- On opt_identifier shift to state 105
-- On identifier shift to state 49
-- On EOL reduce production opt_identifier -> 

State 104:
opt_identifier_eol' -> opt_identifier_eol . [ # ]
-- On # accept opt_identifier_eol

State 105:
opt_identifier_eol -> opt_identifier . end_of_line [ # ]
-- On EOL shift to state 2
-- On end_of_line shift to state 94

State 106:
opt_integer_eol' -> . opt_integer_eol [ # ]
-- On INTEGER shift to state 45
-- On EOL shift to state 2
-- On opt_integer_eol shift to state 107
-- On end_of_line shift to state 48

State 107:
opt_integer_eol' -> opt_integer_eol . [ # ]
-- On # accept opt_integer_eol

State 108:
opt_signed_int64_eol' -> . opt_signed_int64_eol [ # ]
-- On MINUS shift to state 109
-- On INTEGER shift to state 111
-- On EOL shift to state 2
-- On opt_signed_int64_eol shift to state 113
-- On opt_int64_eol shift to state 114
-- On end_of_line shift to state 115

State 109:
opt_signed_int64_eol -> MINUS . int64_eol [ # ]
-- On INTEGER shift to state 75
-- On int64_eol shift to state 110

State 110:
opt_signed_int64_eol -> MINUS int64_eol . [ # ]
-- On # reduce production opt_signed_int64_eol -> MINUS int64_eol

State 111:
opt_int64_eol -> INTEGER . end_of_line [ # ]
-- On EOL shift to state 2
-- On end_of_line shift to state 112

State 112:
opt_int64_eol -> INTEGER end_of_line . [ # ]
-- On # reduce production opt_int64_eol -> INTEGER end_of_line

State 113:
opt_signed_int64_eol' -> opt_signed_int64_eol . [ # ]
-- On # accept opt_signed_int64_eol

State 114:
opt_signed_int64_eol -> opt_int64_eol . [ # ]
-- On # reduce production opt_signed_int64_eol -> opt_int64_eol

State 115:
opt_int64_eol -> end_of_line . [ # ]
-- On # reduce production opt_int64_eol -> end_of_line

State 116:
opt_signed_integer_eol' -> . opt_signed_integer_eol [ # ]
-- On MINUS shift to state 117
-- On INTEGER shift to state 45
-- On EOL shift to state 2
-- On opt_signed_integer_eol shift to state 119
-- On opt_integer_eol shift to state 120
-- On end_of_line shift to state 48

State 117:
opt_signed_integer_eol -> MINUS . integer_eol [ # ]
-- On INTEGER shift to state 36
-- On integer_eol shift to state 118

State 118:
opt_signed_integer_eol -> MINUS integer_eol . [ # ]
-- On # reduce production opt_signed_integer_eol -> MINUS integer_eol

State 119:
opt_signed_integer_eol' -> opt_signed_integer_eol . [ # ]
-- On # accept opt_signed_integer_eol

State 120:
opt_signed_integer_eol -> opt_integer_eol . [ # ]
-- On # reduce production opt_signed_integer_eol -> opt_integer_eol

