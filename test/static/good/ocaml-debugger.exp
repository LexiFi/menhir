Grammar has 23 nonterminal symbols, among which 19 start symbols.
Grammar has 17 terminal symbols.
Grammar has 49 productions.
nullable(opt_signed_integer_eol) = false
nullable(opt_signed_int64_eol) = false
nullable(opt_integer_eol) = false
nullable(opt_int64_eol) = false
nullable(opt_identifier_eol) = false
nullable(opt_identifier) = true
nullable(module_path) = false
nullable(longident_eol) = false
nullable(longident) = false
nullable(list_arguments_eol) = false
nullable(integer_list_eol) = false
nullable(integer_eol) = false
nullable(integer) = false
nullable(int64_eol) = false
nullable(identifier_or_eol) = false
nullable(identifier_eol) = false
nullable(identifier) = false
nullable(expression_list_eol) = false
nullable(expression) = false
nullable(end_of_line) = false
nullable(break_argument_eol) = false
nullable(argument_list_eol) = false
nullable(argument_eol) = false
first(opt_signed_integer_eol) = MINUS INTEGER EOL
first(opt_signed_int64_eol) = MINUS INTEGER EOL
first(opt_integer_eol) = INTEGER EOL
first(opt_int64_eol) = INTEGER EOL
first(opt_identifier_eol) = UIDENT LIDENT EOL
first(opt_identifier) = UIDENT LIDENT
first(module_path) = UIDENT
first(longident_eol) = UIDENT OPERATOR LIDENT
first(longident) = UIDENT OPERATOR LIDENT
first(list_arguments_eol) = UIDENT LIDENT INTEGER EOL
first(integer_list_eol) = INTEGER EOL
first(integer_eol) = INTEGER
first(integer) = INTEGER
first(int64_eol) = INTEGER
first(identifier_or_eol) = UIDENT LIDENT EOL
first(identifier_eol) = UIDENT LIDENT
first(identifier) = UIDENT LIDENT
first(expression_list_eol) = UIDENT STAR OPERATOR LPAREN LIDENT EOL DOLLAR BANG
first(expression) = UIDENT STAR OPERATOR LPAREN LIDENT DOLLAR BANG
first(end_of_line) = EOL
first(break_argument_eol) = UIDENT STAR OPERATOR LPAREN LIDENT INTEGER EOL DOLLAR BANG AT
first(argument_list_eol) = EOL ARGUMENT
first(argument_eol) = ARGUMENT
minimal(opt_signed_integer_eol) = (* 1 *) EOL
minimal(opt_signed_int64_eol) = (* 1 *) EOL
minimal(opt_integer_eol) = (* 1 *) EOL
minimal(opt_int64_eol) = (* 1 *) EOL
minimal(opt_identifier_eol) = (* 1 *) EOL
minimal(opt_identifier) = (* 0 *) 
minimal(module_path) = (* 1 *) UIDENT
minimal(longident_eol) = (* 2 *) LIDENT EOL
minimal(longident) = (* 1 *) LIDENT
minimal(list_arguments_eol) = (* 1 *) EOL
minimal(integer_list_eol) = (* 1 *) EOL
minimal(integer_eol) = (* 2 *) INTEGER EOL
minimal(integer) = (* 1 *) INTEGER
minimal(int64_eol) = (* 2 *) INTEGER EOL
minimal(identifier_or_eol) = (* 1 *) LIDENT
minimal(identifier_eol) = (* 2 *) LIDENT EOL
minimal(identifier) = (* 1 *) LIDENT
minimal(expression_list_eol) = (* 1 *) EOL
minimal(expression) = (* 1 *) LIDENT
minimal(end_of_line) = (* 1 *) EOL
minimal(break_argument_eol) = (* 1 *) EOL
minimal(argument_list_eol) = (* 1 *) EOL
minimal(argument_eol) = (* 2 *) ARGUMENT EOL
follow(opt_signed_integer_eol) = #
follow(opt_signed_int64_eol) = #
follow(opt_integer_eol) = #
follow(opt_int64_eol) = #
follow(opt_identifier_eol) = #
follow(opt_identifier) = SHARP INTEGER EOL #
follow(module_path) = DOT
follow(longident_eol) = #
follow(longident) = UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG
follow(list_arguments_eol) = #
follow(integer_list_eol) = #
follow(integer_eol) = #
follow(integer) = INTEGER EOL #
follow(int64_eol) = #
follow(identifier_or_eol) = #
follow(identifier_eol) = #
follow(identifier) = SHARP INTEGER EOL #
follow(expression_list_eol) = #
follow(expression) = UIDENT STAR RPAREN OPERATOR LPAREN LIDENT EOL DOT DOLLAR BANG
follow(end_of_line) = #
follow(break_argument_eol) = #
follow(argument_list_eol) = #
follow(argument_eol) = #
Built an LR(0) automaton with 117 states.
The grammar is not SLR(1) -- 1 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 121 states.
One shift/reduce conflict was silently solved.
Warning: one state end-of-stream conflict was arbitrarily resolved.
71 out of 121 states have a default reduction.
40 out of 121 states are represented.
0 out of 61 symbols keep track of their start position.
0 out of 61 symbols keep track of their end position.
60 out of 68 productions exploit shiftreduce optimization.
0 out of 121 states can peek at an error.
357 functions before inlining, 61 functions after inlining.
