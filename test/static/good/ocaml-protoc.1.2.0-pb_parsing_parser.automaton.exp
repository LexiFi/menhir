State 0:
## Known stack suffix:
##
## LR(1) items:
enum_' -> . enum_ [ # ]
## Transitions:
-- On ENUM shift to state 1
-- On enum_ shift to state 36
-- On enum shift to state 37
## Reductions:

State 1:
## Known stack suffix:
## ENUM
## LR(1) items:
enum -> ENUM . IDENT LBRACE enum_values rbrace [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On IDENT shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## ENUM IDENT
## LR(1) items:
enum -> ENUM IDENT . LBRACE enum_values rbrace [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On LBRACE shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## ENUM IDENT LBRACE
## LR(1) items:
enum -> ENUM IDENT LBRACE . enum_values rbrace [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On OPTION shift to state 4
-- On IDENT shift to state 21
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 28
-- On enum_values shift to state 29
-- On enum_value shift to state 33
-- On enum_body_content shift to state 34
## Reductions:
-- On RBRACE
--   reduce production enum_values ->

State 4:
## Known stack suffix:
## OPTION
## LR(1) items:
ocaml_protoc_1_2_0_pb_parsing_parser_option -> OPTION . option_identifier EQUAL constant semicolon [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On LPAREN shift to state 5
-- On IDENT shift to state 8
-- On option_identifier_item shift to state 9
-- On option_identifier shift to state 10
## Reductions:

State 5:
## Known stack suffix:
## LPAREN
## LR(1) items:
option_identifier_item -> LPAREN . IDENT RPAREN [ IDENT EQUAL ]
## Transitions:
-- On IDENT shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## LPAREN IDENT
## LR(1) items:
option_identifier_item -> LPAREN IDENT . RPAREN [ IDENT EQUAL ]
## Transitions:
-- On RPAREN shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## LPAREN IDENT RPAREN
## LR(1) items:
option_identifier_item -> LPAREN IDENT RPAREN . [ IDENT EQUAL ]
## Transitions:
## Reductions:
-- On IDENT EQUAL
--   reduce production option_identifier_item -> LPAREN IDENT RPAREN

State 8:
## Known stack suffix:
## IDENT
## LR(1) items:
option_identifier_item -> IDENT . [ IDENT EQUAL ]
## Transitions:
## Reductions:
-- On IDENT EQUAL
--   reduce production option_identifier_item -> IDENT

State 9:
## Known stack suffix:
## option_identifier_item
## LR(1) items:
option_identifier -> option_identifier_item . [ IDENT EQUAL ]
## Transitions:
## Reductions:
-- On IDENT EQUAL
--   reduce production option_identifier -> option_identifier_item

State 10:
## Known stack suffix:
## OPTION option_identifier
## LR(1) items:
ocaml_protoc_1_2_0_pb_parsing_parser_option -> OPTION option_identifier . EQUAL constant semicolon [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
option_identifier -> option_identifier . IDENT [ IDENT EQUAL ]
## Transitions:
-- On IDENT shift to state 11
-- On EQUAL shift to state 12
## Reductions:

State 11:
## Known stack suffix:
## option_identifier IDENT
## LR(1) items:
option_identifier -> option_identifier IDENT . [ IDENT EQUAL ]
## Transitions:
## Reductions:
-- On IDENT EQUAL
--   reduce production option_identifier -> option_identifier IDENT

State 12:
## Known stack suffix:
## OPTION option_identifier EQUAL
## LR(1) items:
ocaml_protoc_1_2_0_pb_parsing_parser_option -> OPTION option_identifier EQUAL . constant semicolon [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On STRING shift to state 13
-- On INT shift to state 14
-- On IDENT shift to state 15
-- On FLOAT shift to state 16
-- On constant shift to state 17
## Reductions:

State 13:
## Known stack suffix:
## STRING
## LR(1) items:
constant -> STRING . [ SEMICOLON RBRACKET COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON RBRACKET COMMA
--   reduce production constant -> STRING

State 14:
## Known stack suffix:
## INT
## LR(1) items:
constant -> INT . [ SEMICOLON RBRACKET COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON RBRACKET COMMA
--   reduce production constant -> INT

State 15:
## Known stack suffix:
## IDENT
## LR(1) items:
constant -> IDENT . [ SEMICOLON RBRACKET COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON RBRACKET COMMA
--   reduce production constant -> IDENT

State 16:
## Known stack suffix:
## FLOAT
## LR(1) items:
constant -> FLOAT . [ SEMICOLON RBRACKET COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON RBRACKET COMMA
--   reduce production constant -> FLOAT

State 17:
## Known stack suffix:
## OPTION option_identifier EQUAL constant
## LR(1) items:
ocaml_protoc_1_2_0_pb_parsing_parser_option -> OPTION option_identifier EQUAL constant . semicolon [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 19
## Reductions:

State 18:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
semicolon -> SEMICOLON . [ SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
## Reductions:
-- On SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
--   reduce production semicolon -> SEMICOLON

State 19:
## Known stack suffix:
## OPTION option_identifier EQUAL constant semicolon
## LR(1) items:
ocaml_protoc_1_2_0_pb_parsing_parser_option -> OPTION option_identifier EQUAL constant semicolon . [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
semicolon -> semicolon . SEMICOLON [ SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
--   reduce production ocaml_protoc_1_2_0_pb_parsing_parser_option -> OPTION option_identifier EQUAL constant semicolon

State 20:
## Known stack suffix:
## semicolon SEMICOLON
## LR(1) items:
semicolon -> semicolon SEMICOLON . [ SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
## Reductions:
-- On SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
--   reduce production semicolon -> semicolon SEMICOLON

State 21:
## Known stack suffix:
## IDENT
## LR(1) items:
enum_value -> IDENT . EQUAL INT semicolon [ RBRACE OPTION IDENT EOF ]
enum_value -> IDENT . EQUAL INT [ RBRACE OPTION IDENT EOF ]
enum_value -> IDENT . EQUAL INT COMMA [ RBRACE OPTION IDENT EOF ]
enum_value -> IDENT . COMMA [ RBRACE OPTION IDENT EOF ]
enum_value -> IDENT . SEMICOLON [ RBRACE OPTION IDENT EOF ]
enum_value -> IDENT . [ RBRACE OPTION IDENT EOF ]
## Transitions:
-- On SEMICOLON shift to state 22
-- On EQUAL shift to state 23
-- On COMMA shift to state 27
## Reductions:
-- On RBRACE OPTION IDENT EOF
--   reduce production enum_value -> IDENT

State 22:
## Known stack suffix:
## IDENT SEMICOLON
## LR(1) items:
enum_value -> IDENT SEMICOLON . [ RBRACE OPTION IDENT EOF ]
## Transitions:
## Reductions:
-- On RBRACE OPTION IDENT EOF
--   reduce production enum_value -> IDENT SEMICOLON

State 23:
## Known stack suffix:
## IDENT EQUAL
## LR(1) items:
enum_value -> IDENT EQUAL . INT semicolon [ RBRACE OPTION IDENT EOF ]
enum_value -> IDENT EQUAL . INT [ RBRACE OPTION IDENT EOF ]
enum_value -> IDENT EQUAL . INT COMMA [ RBRACE OPTION IDENT EOF ]
## Transitions:
-- On INT shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## IDENT EQUAL INT
## LR(1) items:
enum_value -> IDENT EQUAL INT . semicolon [ RBRACE OPTION IDENT EOF ]
enum_value -> IDENT EQUAL INT . [ RBRACE OPTION IDENT EOF ]
enum_value -> IDENT EQUAL INT . COMMA [ RBRACE OPTION IDENT EOF ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On COMMA shift to state 25
-- On semicolon shift to state 26
## Reductions:
-- On RBRACE OPTION IDENT EOF
--   reduce production enum_value -> IDENT EQUAL INT

State 25:
## Known stack suffix:
## IDENT EQUAL INT COMMA
## LR(1) items:
enum_value -> IDENT EQUAL INT COMMA . [ RBRACE OPTION IDENT EOF ]
## Transitions:
## Reductions:
-- On RBRACE OPTION IDENT EOF
--   reduce production enum_value -> IDENT EQUAL INT COMMA

State 26:
## Known stack suffix:
## IDENT EQUAL INT semicolon
## LR(1) items:
enum_value -> IDENT EQUAL INT semicolon . [ RBRACE OPTION IDENT EOF ]
semicolon -> semicolon . SEMICOLON [ SEMICOLON RBRACE OPTION IDENT EOF ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On RBRACE OPTION IDENT EOF
--   reduce production enum_value -> IDENT EQUAL INT semicolon

State 27:
## Known stack suffix:
## IDENT COMMA
## LR(1) items:
enum_value -> IDENT COMMA . [ RBRACE OPTION IDENT EOF ]
## Transitions:
## Reductions:
-- On RBRACE OPTION IDENT EOF
--   reduce production enum_value -> IDENT COMMA

State 28:
## Known stack suffix:
## ocaml_protoc_1_2_0_pb_parsing_parser_option
## LR(1) items:
enum_body_content -> ocaml_protoc_1_2_0_pb_parsing_parser_option . [ RBRACE OPTION IDENT ]
## Transitions:
## Reductions:
-- On RBRACE OPTION IDENT
--   reduce production enum_body_content -> ocaml_protoc_1_2_0_pb_parsing_parser_option

State 29:
## Known stack suffix:
## ENUM IDENT LBRACE enum_values
## LR(1) items:
enum -> ENUM IDENT LBRACE enum_values . rbrace [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On RBRACE shift to state 30
-- On rbrace shift to state 31
## Reductions:

State 30:
## Known stack suffix:
## RBRACE
## LR(1) items:
rbrace -> RBRACE . [ SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
## Reductions:
-- On SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
--   reduce production rbrace -> RBRACE

State 31:
## Known stack suffix:
## ENUM IDENT LBRACE enum_values rbrace
## LR(1) items:
enum -> ENUM IDENT LBRACE enum_values rbrace . [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
rbrace -> rbrace . SEMICOLON [ SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 32
## Reductions:
-- On SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
--   reduce production enum -> ENUM IDENT LBRACE enum_values rbrace

State 32:
## Known stack suffix:
## rbrace SEMICOLON
## LR(1) items:
rbrace -> rbrace SEMICOLON . [ SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
## Reductions:
-- On SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
--   reduce production rbrace -> rbrace SEMICOLON

State 33:
## Known stack suffix:
## enum_value
## LR(1) items:
enum_body_content -> enum_value . [ RBRACE OPTION IDENT ]
## Transitions:
## Reductions:
-- On RBRACE OPTION IDENT
--   reduce production enum_body_content -> enum_value

State 34:
## Known stack suffix:
## enum_body_content
## LR(1) items:
enum_values -> enum_body_content . enum_values [ RBRACE ]
## Transitions:
-- On OPTION shift to state 4
-- On IDENT shift to state 21
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 28
-- On enum_values shift to state 35
-- On enum_value shift to state 33
-- On enum_body_content shift to state 34
## Reductions:
-- On RBRACE
--   reduce production enum_values ->

State 35:
## Known stack suffix:
## enum_body_content enum_values
## LR(1) items:
enum_values -> enum_body_content enum_values . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production enum_values -> enum_body_content enum_values

State 36:
## Known stack suffix:
## enum_
## LR(1) items:
enum_' -> enum_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept enum_

State 37:
## Known stack suffix:
## enum
## LR(1) items:
enum_ -> enum . EOF [ # ]
## Transitions:
-- On EOF shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## enum EOF
## LR(1) items:
enum_ -> enum EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production enum_ -> enum EOF

State 39:
## Known stack suffix:
##
## LR(1) items:
enum_value_' -> . enum_value_ [ # ]
## Transitions:
-- On IDENT shift to state 21
-- On enum_value_ shift to state 40
-- On enum_value shift to state 41
## Reductions:

State 40:
## Known stack suffix:
## enum_value_
## LR(1) items:
enum_value_' -> enum_value_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept enum_value_

State 41:
## Known stack suffix:
## enum_value
## LR(1) items:
enum_value_ -> enum_value . EOF [ # ]
## Transitions:
-- On EOF shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## enum_value EOF
## LR(1) items:
enum_value_ -> enum_value EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production enum_value_ -> enum_value EOF

State 43:
## Known stack suffix:
##
## LR(1) items:
extension_' -> . extension_ [ # ]
## Transitions:
-- On EXTENSIONS shift to state 44
-- On extension_ shift to state 54
-- On extension shift to state 55
## Reductions:

State 44:
## Known stack suffix:
## EXTENSIONS
## LR(1) items:
extension -> EXTENSIONS . extension_range_list semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On INT shift to state 45
-- On extension_range_list shift to state 49
-- On extension_range shift to state 51
## Reductions:

State 45:
## Known stack suffix:
## INT
## LR(1) items:
extension_range -> INT . [ SEMICOLON EOF COMMA ]
extension_range -> INT . TO INT [ SEMICOLON EOF COMMA ]
extension_range -> INT . TO MAX [ SEMICOLON EOF COMMA ]
## Transitions:
-- On TO shift to state 46
## Reductions:
-- On SEMICOLON EOF COMMA
--   reduce production extension_range -> INT

State 46:
## Known stack suffix:
## INT TO
## LR(1) items:
extension_range -> INT TO . INT [ SEMICOLON EOF COMMA ]
extension_range -> INT TO . MAX [ SEMICOLON EOF COMMA ]
## Transitions:
-- On MAX shift to state 47
-- On INT shift to state 48
## Reductions:

State 47:
## Known stack suffix:
## INT TO MAX
## LR(1) items:
extension_range -> INT TO MAX . [ SEMICOLON EOF COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF COMMA
--   reduce production extension_range -> INT TO MAX

State 48:
## Known stack suffix:
## INT TO INT
## LR(1) items:
extension_range -> INT TO INT . [ SEMICOLON EOF COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF COMMA
--   reduce production extension_range -> INT TO INT

State 49:
## Known stack suffix:
## EXTENSIONS extension_range_list
## LR(1) items:
extension -> EXTENSIONS extension_range_list . semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## EXTENSIONS extension_range_list semicolon
## LR(1) items:
extension -> EXTENSIONS extension_range_list semicolon . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
semicolon -> semicolon . SEMICOLON [ SEMICOLON RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
--   reduce production extension -> EXTENSIONS extension_range_list semicolon

State 51:
## Known stack suffix:
## extension_range
## LR(1) items:
extension_range_list -> extension_range . [ SEMICOLON EOF ]
extension_range_list -> extension_range . COMMA extension_range_list [ SEMICOLON EOF ]
## Transitions:
-- On COMMA shift to state 52
## Reductions:
-- On SEMICOLON EOF
--   reduce production extension_range_list -> extension_range

State 52:
## Known stack suffix:
## extension_range COMMA
## LR(1) items:
extension_range_list -> extension_range COMMA . extension_range_list [ SEMICOLON EOF ]
## Transitions:
-- On INT shift to state 45
-- On extension_range_list shift to state 53
-- On extension_range shift to state 51
## Reductions:

State 53:
## Known stack suffix:
## extension_range COMMA extension_range_list
## LR(1) items:
extension_range_list -> extension_range COMMA extension_range_list . [ SEMICOLON EOF ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF
--   reduce production extension_range_list -> extension_range COMMA extension_range_list

State 54:
## Known stack suffix:
## extension_
## LR(1) items:
extension_' -> extension_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept extension_

State 55:
## Known stack suffix:
## extension
## LR(1) items:
extension_ -> extension . EOF [ # ]
## Transitions:
-- On EOF shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## extension EOF
## LR(1) items:
extension_ -> extension EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production extension_ -> extension EOF

State 57:
## Known stack suffix:
##
## LR(1) items:
extension_range_list_' -> . extension_range_list_ [ # ]
## Transitions:
-- On INT shift to state 45
-- On extension_range_list_ shift to state 58
-- On extension_range_list shift to state 59
-- On extension_range shift to state 51
## Reductions:

State 58:
## Known stack suffix:
## extension_range_list_
## LR(1) items:
extension_range_list_' -> extension_range_list_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept extension_range_list_

State 59:
## Known stack suffix:
## extension_range_list
## LR(1) items:
extension_range_list_ -> extension_range_list . EOF [ # ]
## Transitions:
-- On EOF shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## extension_range_list EOF
## LR(1) items:
extension_range_list_ -> extension_range_list EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production extension_range_list_ -> extension_range_list EOF

State 61:
## Known stack suffix:
##
## LR(1) items:
field_options_' -> . field_options_ [ # ]
## Transitions:
-- On LBRACKET shift to state 62
-- On field_options_ shift to state 77
-- On field_options shift to state 78
## Reductions:

State 62:
## Known stack suffix:
## LBRACKET
## LR(1) items:
field_options -> LBRACKET . field_option_list RBRACKET [ SEMICOLON EOF ]
field_options -> LBRACKET . RBRACKET [ SEMICOLON EOF ]
## Transitions:
-- On RBRACKET shift to state 63
-- On LPAREN shift to state 64
-- On IDENT shift to state 69
-- On field_option_list shift to state 72
-- On field_option shift to state 74
## Reductions:

State 63:
## Known stack suffix:
## LBRACKET RBRACKET
## LR(1) items:
field_options -> LBRACKET RBRACKET . [ SEMICOLON EOF ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF
--   reduce production field_options -> LBRACKET RBRACKET

State 64:
## Known stack suffix:
## LPAREN
## LR(1) items:
field_option -> LPAREN . IDENT RPAREN EQUAL constant [ RBRACKET COMMA ]
## Transitions:
-- On IDENT shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## LPAREN IDENT
## LR(1) items:
field_option -> LPAREN IDENT . RPAREN EQUAL constant [ RBRACKET COMMA ]
## Transitions:
-- On RPAREN shift to state 66
## Reductions:

State 66:
## Known stack suffix:
## LPAREN IDENT RPAREN
## LR(1) items:
field_option -> LPAREN IDENT RPAREN . EQUAL constant [ RBRACKET COMMA ]
## Transitions:
-- On EQUAL shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## LPAREN IDENT RPAREN EQUAL
## LR(1) items:
field_option -> LPAREN IDENT RPAREN EQUAL . constant [ RBRACKET COMMA ]
## Transitions:
-- On STRING shift to state 13
-- On INT shift to state 14
-- On IDENT shift to state 15
-- On FLOAT shift to state 16
-- On constant shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## LPAREN IDENT RPAREN EQUAL constant
## LR(1) items:
field_option -> LPAREN IDENT RPAREN EQUAL constant . [ RBRACKET COMMA ]
## Transitions:
## Reductions:
-- On RBRACKET COMMA
--   reduce production field_option -> LPAREN IDENT RPAREN EQUAL constant

State 69:
## Known stack suffix:
## IDENT
## LR(1) items:
field_option -> IDENT . EQUAL constant [ RBRACKET COMMA ]
## Transitions:
-- On EQUAL shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## IDENT EQUAL
## LR(1) items:
field_option -> IDENT EQUAL . constant [ RBRACKET COMMA ]
## Transitions:
-- On STRING shift to state 13
-- On INT shift to state 14
-- On IDENT shift to state 15
-- On FLOAT shift to state 16
-- On constant shift to state 71
## Reductions:

State 71:
## Known stack suffix:
## IDENT EQUAL constant
## LR(1) items:
field_option -> IDENT EQUAL constant . [ RBRACKET COMMA ]
## Transitions:
## Reductions:
-- On RBRACKET COMMA
--   reduce production field_option -> IDENT EQUAL constant

State 72:
## Known stack suffix:
## LBRACKET field_option_list
## LR(1) items:
field_options -> LBRACKET field_option_list . RBRACKET [ SEMICOLON EOF ]
## Transitions:
-- On RBRACKET shift to state 73
## Reductions:

State 73:
## Known stack suffix:
## LBRACKET field_option_list RBRACKET
## LR(1) items:
field_options -> LBRACKET field_option_list RBRACKET . [ SEMICOLON EOF ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF
--   reduce production field_options -> LBRACKET field_option_list RBRACKET

State 74:
## Known stack suffix:
## field_option
## LR(1) items:
field_option_list -> field_option . [ RBRACKET ]
field_option_list -> field_option . COMMA field_option_list [ RBRACKET ]
## Transitions:
-- On COMMA shift to state 75
## Reductions:
-- On RBRACKET
--   reduce production field_option_list -> field_option

State 75:
## Known stack suffix:
## field_option COMMA
## LR(1) items:
field_option_list -> field_option COMMA . field_option_list [ RBRACKET ]
## Transitions:
-- On LPAREN shift to state 64
-- On IDENT shift to state 69
-- On field_option_list shift to state 76
-- On field_option shift to state 74
## Reductions:

State 76:
## Known stack suffix:
## field_option COMMA field_option_list
## LR(1) items:
field_option_list -> field_option COMMA field_option_list . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production field_option_list -> field_option COMMA field_option_list

State 77:
## Known stack suffix:
## field_options_
## LR(1) items:
field_options_' -> field_options_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept field_options_

State 78:
## Known stack suffix:
## field_options
## LR(1) items:
field_options_ -> field_options . EOF [ # ]
## Transitions:
-- On EOF shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## field_options EOF
## LR(1) items:
field_options_ -> field_options EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production field_options_ -> field_options EOF

State 80:
## Known stack suffix:
##
## LR(1) items:
import_' -> . import_ [ # ]
## Transitions:
-- On IMPORT shift to state 81
-- On import_ shift to state 90
-- On import shift to state 91
## Reductions:

State 81:
## Known stack suffix:
## IMPORT
## LR(1) items:
import -> IMPORT . STRING semicolon [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
import -> IMPORT . PUBLIC STRING semicolon [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
import -> IMPORT . IDENT STRING semicolon [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On STRING shift to state 82
-- On PUBLIC shift to state 84
-- On IDENT shift to state 87
## Reductions:

State 82:
## Known stack suffix:
## IMPORT STRING
## LR(1) items:
import -> IMPORT STRING . semicolon [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## IMPORT STRING semicolon
## LR(1) items:
import -> IMPORT STRING semicolon . [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
semicolon -> semicolon . SEMICOLON [ SYNTAX SEMICOLON PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM
--   reduce production import -> IMPORT STRING semicolon

State 84:
## Known stack suffix:
## IMPORT PUBLIC
## LR(1) items:
import -> IMPORT PUBLIC . STRING semicolon [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On STRING shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## IMPORT PUBLIC STRING
## LR(1) items:
import -> IMPORT PUBLIC STRING . semicolon [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## IMPORT PUBLIC STRING semicolon
## LR(1) items:
import -> IMPORT PUBLIC STRING semicolon . [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
semicolon -> semicolon . SEMICOLON [ SYNTAX SEMICOLON PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM
--   reduce production import -> IMPORT PUBLIC STRING semicolon

State 87:
## Known stack suffix:
## IMPORT IDENT
## LR(1) items:
import -> IMPORT IDENT . STRING semicolon [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On STRING shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## IMPORT IDENT STRING
## LR(1) items:
import -> IMPORT IDENT STRING . semicolon [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## IMPORT IDENT STRING semicolon
## LR(1) items:
import -> IMPORT IDENT STRING semicolon . [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
semicolon -> semicolon . SEMICOLON [ SYNTAX SEMICOLON PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM
--   reduce production import -> IMPORT IDENT STRING semicolon

State 90:
## Known stack suffix:
## import_
## LR(1) items:
import_' -> import_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept import_

State 91:
## Known stack suffix:
## import
## LR(1) items:
import_ -> import . EOF [ # ]
## Transitions:
-- On EOF shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## import EOF
## LR(1) items:
import_ -> import EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production import_ -> import EOF

State 93:
## Known stack suffix:
##
## LR(1) items:
message_' -> . message_ [ # ]
## Transitions:
-- On MESSAGE shift to state 94
-- On message_ shift to state 178
-- On message shift to state 179
## Reductions:

State 94:
## Known stack suffix:
## MESSAGE
## LR(1) items:
message -> MESSAGE . IDENT LBRACE message_body_content_list rbrace [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
message -> MESSAGE . IDENT LBRACE rbrace [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On IDENT shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## MESSAGE IDENT
## LR(1) items:
message -> MESSAGE IDENT . LBRACE message_body_content_list rbrace [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
message -> MESSAGE IDENT . LBRACE rbrace [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On LBRACE shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## MESSAGE IDENT LBRACE
## LR(1) items:
message -> MESSAGE IDENT LBRACE . message_body_content_list rbrace [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
message -> MESSAGE IDENT LBRACE . rbrace [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On RESERVED shift to state 97
-- On REQUIRED shift to state 100
-- On REPEATED shift to state 101
-- On RBRACE shift to state 30
-- On OPTIONAL shift to state 102
-- On OPTION shift to state 4
-- On ONE_OF shift to state 103
-- On MESSAGE shift to state 94
-- On MAP shift to state 138
-- On IDENT shift to state 150
-- On EXTENSIONS shift to state 44
-- On ENUM shift to state 1
-- On reserved shift to state 157
-- On rbrace shift to state 158
-- On oneof shift to state 159
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 160
-- On normal_field shift to state 161
-- On message_body_content_list shift to state 162
-- On message_body_content shift to state 164
-- On message shift to state 166
-- On map shift to state 167
-- On label shift to state 168
-- On extension shift to state 176
-- On enum shift to state 177
## Reductions:

State 97:
## Known stack suffix:
## RESERVED
## LR(1) items:
reserved -> RESERVED . extension_range_list semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On INT shift to state 45
-- On extension_range_list shift to state 98
-- On extension_range shift to state 51
## Reductions:

State 98:
## Known stack suffix:
## RESERVED extension_range_list
## LR(1) items:
reserved -> RESERVED extension_range_list . semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 99
## Reductions:

State 99:
## Known stack suffix:
## RESERVED extension_range_list semicolon
## LR(1) items:
reserved -> RESERVED extension_range_list semicolon . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
semicolon -> semicolon . SEMICOLON [ SEMICOLON RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
--   reduce production reserved -> RESERVED extension_range_list semicolon

State 100:
## Known stack suffix:
## REQUIRED
## LR(1) items:
label -> REQUIRED . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT
--   reduce production label -> REQUIRED

State 101:
## Known stack suffix:
## REPEATED
## LR(1) items:
label -> REPEATED . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT
--   reduce production label -> REPEATED

State 102:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
label -> OPTIONAL . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT
--   reduce production label -> OPTIONAL

State 103:
## Known stack suffix:
## ONE_OF
## LR(1) items:
oneof -> ONE_OF . IDENT LBRACE oneof_field_list rbrace [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
oneof -> ONE_OF . LBRACE oneof_field_list rbrace [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On LBRACE shift to state 104
-- On IDENT shift to state 134
## Reductions:

State 104:
## Known stack suffix:
## ONE_OF LBRACE
## LR(1) items:
oneof -> ONE_OF LBRACE . oneof_field_list rbrace [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On IDENT shift to state 105
-- On oneof_field_list shift to state 130
-- On oneof_field shift to state 132
## Reductions:
-- On RBRACE
--   reduce production oneof_field_list ->

State 105:
## Known stack suffix:
## IDENT
## LR(1) items:
oneof_field -> IDENT . field_name EQUAL INT field_options semicolon [ RBRACE IDENT ]
oneof_field -> IDENT . field_name EQUAL INT semicolon [ RBRACE IDENT ]
## Transitions:
-- On TO shift to state 106
-- On SYNTAX shift to state 107
-- On RESERVED shift to state 108
-- On REQUIRED shift to state 109
-- On REPEATED shift to state 110
-- On PUBLIC shift to state 111
-- On PACKAGE shift to state 112
-- On OPTIONAL shift to state 113
-- On OPTION shift to state 114
-- On ONE_OF shift to state 115
-- On MESSAGE shift to state 116
-- On MAX shift to state 117
-- On MAP shift to state 118
-- On IMPORT shift to state 119
-- On IDENT shift to state 120
-- On EXTENSIONS shift to state 121
-- On EXTEND shift to state 122
-- On ENUM shift to state 123
-- On field_name shift to state 124
## Reductions:

State 106:
## Known stack suffix:
## TO
## LR(1) items:
field_name -> TO . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> TO

State 107:
## Known stack suffix:
## SYNTAX
## LR(1) items:
field_name -> SYNTAX . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> SYNTAX

State 108:
## Known stack suffix:
## RESERVED
## LR(1) items:
field_name -> RESERVED . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> RESERVED

State 109:
## Known stack suffix:
## REQUIRED
## LR(1) items:
field_name -> REQUIRED . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> REQUIRED

State 110:
## Known stack suffix:
## REPEATED
## LR(1) items:
field_name -> REPEATED . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> REPEATED

State 111:
## Known stack suffix:
## PUBLIC
## LR(1) items:
field_name -> PUBLIC . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> PUBLIC

State 112:
## Known stack suffix:
## PACKAGE
## LR(1) items:
field_name -> PACKAGE . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> PACKAGE

State 113:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
field_name -> OPTIONAL . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> OPTIONAL

State 114:
## Known stack suffix:
## OPTION
## LR(1) items:
field_name -> OPTION . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> OPTION

State 115:
## Known stack suffix:
## ONE_OF
## LR(1) items:
field_name -> ONE_OF . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> ONE_OF

State 116:
## Known stack suffix:
## MESSAGE
## LR(1) items:
field_name -> MESSAGE . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> MESSAGE

State 117:
## Known stack suffix:
## MAX
## LR(1) items:
field_name -> MAX . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> MAX

State 118:
## Known stack suffix:
## MAP
## LR(1) items:
field_name -> MAP . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> MAP

State 119:
## Known stack suffix:
## IMPORT
## LR(1) items:
field_name -> IMPORT . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> IMPORT

State 120:
## Known stack suffix:
## IDENT
## LR(1) items:
field_name -> IDENT . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> IDENT

State 121:
## Known stack suffix:
## EXTENSIONS
## LR(1) items:
field_name -> EXTENSIONS . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> EXTENSIONS

State 122:
## Known stack suffix:
## EXTEND
## LR(1) items:
field_name -> EXTEND . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> EXTEND

State 123:
## Known stack suffix:
## ENUM
## LR(1) items:
field_name -> ENUM . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL
--   reduce production field_name -> ENUM

State 124:
## Known stack suffix:
## IDENT field_name
## LR(1) items:
oneof_field -> IDENT field_name . EQUAL INT field_options semicolon [ RBRACE IDENT ]
oneof_field -> IDENT field_name . EQUAL INT semicolon [ RBRACE IDENT ]
## Transitions:
-- On EQUAL shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## IDENT field_name EQUAL
## LR(1) items:
oneof_field -> IDENT field_name EQUAL . INT field_options semicolon [ RBRACE IDENT ]
oneof_field -> IDENT field_name EQUAL . INT semicolon [ RBRACE IDENT ]
## Transitions:
-- On INT shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## IDENT field_name EQUAL INT
## LR(1) items:
oneof_field -> IDENT field_name EQUAL INT . field_options semicolon [ RBRACE IDENT ]
oneof_field -> IDENT field_name EQUAL INT . semicolon [ RBRACE IDENT ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On LBRACKET shift to state 62
-- On semicolon shift to state 127
-- On field_options shift to state 128
## Reductions:

State 127:
## Known stack suffix:
## IDENT field_name EQUAL INT semicolon
## LR(1) items:
oneof_field -> IDENT field_name EQUAL INT semicolon . [ RBRACE IDENT ]
semicolon -> semicolon . SEMICOLON [ SEMICOLON RBRACE IDENT ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On RBRACE IDENT
--   reduce production oneof_field -> IDENT field_name EQUAL INT semicolon

State 128:
## Known stack suffix:
## IDENT field_name EQUAL INT field_options
## LR(1) items:
oneof_field -> IDENT field_name EQUAL INT field_options . semicolon [ RBRACE IDENT ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 129
## Reductions:

State 129:
## Known stack suffix:
## IDENT field_name EQUAL INT field_options semicolon
## LR(1) items:
oneof_field -> IDENT field_name EQUAL INT field_options semicolon . [ RBRACE IDENT ]
semicolon -> semicolon . SEMICOLON [ SEMICOLON RBRACE IDENT ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On RBRACE IDENT
--   reduce production oneof_field -> IDENT field_name EQUAL INT field_options semicolon

State 130:
## Known stack suffix:
## ONE_OF LBRACE oneof_field_list
## LR(1) items:
oneof -> ONE_OF LBRACE oneof_field_list . rbrace [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On RBRACE shift to state 30
-- On rbrace shift to state 131
## Reductions:

State 131:
## Known stack suffix:
## ONE_OF LBRACE oneof_field_list rbrace
## LR(1) items:
oneof -> ONE_OF LBRACE oneof_field_list rbrace . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
rbrace -> rbrace . SEMICOLON [ SEMICOLON RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 32
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
--   reduce production oneof -> ONE_OF LBRACE oneof_field_list rbrace

State 132:
## Known stack suffix:
## oneof_field
## LR(1) items:
oneof_field_list -> oneof_field . oneof_field_list [ RBRACE ]
## Transitions:
-- On IDENT shift to state 105
-- On oneof_field_list shift to state 133
-- On oneof_field shift to state 132
## Reductions:
-- On RBRACE
--   reduce production oneof_field_list ->

State 133:
## Known stack suffix:
## oneof_field oneof_field_list
## LR(1) items:
oneof_field_list -> oneof_field oneof_field_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production oneof_field_list -> oneof_field oneof_field_list

State 134:
## Known stack suffix:
## ONE_OF IDENT
## LR(1) items:
oneof -> ONE_OF IDENT . LBRACE oneof_field_list rbrace [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On LBRACE shift to state 135
## Reductions:

State 135:
## Known stack suffix:
## ONE_OF IDENT LBRACE
## LR(1) items:
oneof -> ONE_OF IDENT LBRACE . oneof_field_list rbrace [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On IDENT shift to state 105
-- On oneof_field_list shift to state 136
-- On oneof_field shift to state 132
## Reductions:
-- On RBRACE
--   reduce production oneof_field_list ->

State 136:
## Known stack suffix:
## ONE_OF IDENT LBRACE oneof_field_list
## LR(1) items:
oneof -> ONE_OF IDENT LBRACE oneof_field_list . rbrace [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On RBRACE shift to state 30
-- On rbrace shift to state 137
## Reductions:

State 137:
## Known stack suffix:
## ONE_OF IDENT LBRACE oneof_field_list rbrace
## LR(1) items:
oneof -> ONE_OF IDENT LBRACE oneof_field_list rbrace . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
rbrace -> rbrace . SEMICOLON [ SEMICOLON RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 32
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
--   reduce production oneof -> ONE_OF IDENT LBRACE oneof_field_list rbrace

State 138:
## Known stack suffix:
## MAP
## LR(1) items:
map -> MAP . LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
map -> MAP . LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On LANGLEB shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## MAP LANGLEB
## LR(1) items:
map -> MAP LANGLEB . IDENT COMMA IDENT RANGLEB field_name EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
map -> MAP LANGLEB . IDENT COMMA IDENT RANGLEB field_name EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On IDENT shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## MAP LANGLEB IDENT
## LR(1) items:
map -> MAP LANGLEB IDENT . COMMA IDENT RANGLEB field_name EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
map -> MAP LANGLEB IDENT . COMMA IDENT RANGLEB field_name EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On COMMA shift to state 141
## Reductions:

State 141:
## Known stack suffix:
## MAP LANGLEB IDENT COMMA
## LR(1) items:
map -> MAP LANGLEB IDENT COMMA . IDENT RANGLEB field_name EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
map -> MAP LANGLEB IDENT COMMA . IDENT RANGLEB field_name EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On IDENT shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## MAP LANGLEB IDENT COMMA IDENT
## LR(1) items:
map -> MAP LANGLEB IDENT COMMA IDENT . RANGLEB field_name EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
map -> MAP LANGLEB IDENT COMMA IDENT . RANGLEB field_name EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On RANGLEB shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## MAP LANGLEB IDENT COMMA IDENT RANGLEB
## LR(1) items:
map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB . field_name EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB . field_name EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On TO shift to state 106
-- On SYNTAX shift to state 107
-- On RESERVED shift to state 108
-- On REQUIRED shift to state 109
-- On REPEATED shift to state 110
-- On PUBLIC shift to state 111
-- On PACKAGE shift to state 112
-- On OPTIONAL shift to state 113
-- On OPTION shift to state 114
-- On ONE_OF shift to state 115
-- On MESSAGE shift to state 116
-- On MAX shift to state 117
-- On MAP shift to state 118
-- On IMPORT shift to state 119
-- On IDENT shift to state 120
-- On EXTENSIONS shift to state 121
-- On EXTEND shift to state 122
-- On ENUM shift to state 123
-- On field_name shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name
## LR(1) items:
map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name . EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name . EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On EQUAL shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL
## LR(1) items:
map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL . INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL . INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On INT shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT
## LR(1) items:
map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT . semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT . field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On LBRACKET shift to state 62
-- On semicolon shift to state 147
-- On field_options shift to state 148
## Reductions:

State 147:
## Known stack suffix:
## MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT semicolon
## LR(1) items:
map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT semicolon . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
semicolon -> semicolon . SEMICOLON [ SEMICOLON RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
--   reduce production map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT semicolon

State 148:
## Known stack suffix:
## MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT field_options
## LR(1) items:
map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT field_options . semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT field_options semicolon
## LR(1) items:
map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT field_options semicolon . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
semicolon -> semicolon . SEMICOLON [ SEMICOLON RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
--   reduce production map -> MAP LANGLEB IDENT COMMA IDENT RANGLEB field_name EQUAL INT field_options semicolon

State 150:
## Known stack suffix:
## IDENT
## LR(1) items:
normal_field -> IDENT . field_name EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
normal_field -> IDENT . field_name EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On TO shift to state 106
-- On SYNTAX shift to state 107
-- On RESERVED shift to state 108
-- On REQUIRED shift to state 109
-- On REPEATED shift to state 110
-- On PUBLIC shift to state 111
-- On PACKAGE shift to state 112
-- On OPTIONAL shift to state 113
-- On OPTION shift to state 114
-- On ONE_OF shift to state 115
-- On MESSAGE shift to state 116
-- On MAX shift to state 117
-- On MAP shift to state 118
-- On IMPORT shift to state 119
-- On IDENT shift to state 120
-- On EXTENSIONS shift to state 121
-- On EXTEND shift to state 122
-- On ENUM shift to state 123
-- On field_name shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## IDENT field_name
## LR(1) items:
normal_field -> IDENT field_name . EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
normal_field -> IDENT field_name . EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On EQUAL shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## IDENT field_name EQUAL
## LR(1) items:
normal_field -> IDENT field_name EQUAL . INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
normal_field -> IDENT field_name EQUAL . INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On INT shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## IDENT field_name EQUAL INT
## LR(1) items:
normal_field -> IDENT field_name EQUAL INT . field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
normal_field -> IDENT field_name EQUAL INT . semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On LBRACKET shift to state 62
-- On semicolon shift to state 154
-- On field_options shift to state 155
## Reductions:

State 154:
## Known stack suffix:
## IDENT field_name EQUAL INT semicolon
## LR(1) items:
normal_field -> IDENT field_name EQUAL INT semicolon . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
semicolon -> semicolon . SEMICOLON [ SEMICOLON RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
--   reduce production normal_field -> IDENT field_name EQUAL INT semicolon

State 155:
## Known stack suffix:
## IDENT field_name EQUAL INT field_options
## LR(1) items:
normal_field -> IDENT field_name EQUAL INT field_options . semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## IDENT field_name EQUAL INT field_options semicolon
## LR(1) items:
normal_field -> IDENT field_name EQUAL INT field_options semicolon . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
semicolon -> semicolon . SEMICOLON [ SEMICOLON RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
--   reduce production normal_field -> IDENT field_name EQUAL INT field_options semicolon

State 157:
## Known stack suffix:
## reserved
## LR(1) items:
message_body_content -> reserved . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
--   reduce production message_body_content -> reserved

State 158:
## Known stack suffix:
## MESSAGE IDENT LBRACE rbrace
## LR(1) items:
message -> MESSAGE IDENT LBRACE rbrace . [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
rbrace -> rbrace . SEMICOLON [ SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 32
## Reductions:
-- On SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
--   reduce production message -> MESSAGE IDENT LBRACE rbrace

State 159:
## Known stack suffix:
## oneof
## LR(1) items:
message_body_content -> oneof . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
--   reduce production message_body_content -> oneof

State 160:
## Known stack suffix:
## ocaml_protoc_1_2_0_pb_parsing_parser_option
## LR(1) items:
message_body_content -> ocaml_protoc_1_2_0_pb_parsing_parser_option . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
--   reduce production message_body_content -> ocaml_protoc_1_2_0_pb_parsing_parser_option

State 161:
## Known stack suffix:
## normal_field
## LR(1) items:
message_body_content -> normal_field . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
--   reduce production message_body_content -> normal_field

State 162:
## Known stack suffix:
## MESSAGE IDENT LBRACE message_body_content_list
## LR(1) items:
message -> MESSAGE IDENT LBRACE message_body_content_list . rbrace [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On RBRACE shift to state 30
-- On rbrace shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## MESSAGE IDENT LBRACE message_body_content_list rbrace
## LR(1) items:
message -> MESSAGE IDENT LBRACE message_body_content_list rbrace . [ SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
rbrace -> rbrace . SEMICOLON [ SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 32
## Reductions:
-- On SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
--   reduce production message -> MESSAGE IDENT LBRACE message_body_content_list rbrace

State 164:
## Known stack suffix:
## message_body_content
## LR(1) items:
message_body_content_list -> message_body_content . [ RBRACE ]
message_body_content_list -> message_body_content . message_body_content_list [ RBRACE ]
## Transitions:
-- On RESERVED shift to state 97
-- On REQUIRED shift to state 100
-- On REPEATED shift to state 101
-- On OPTIONAL shift to state 102
-- On OPTION shift to state 4
-- On ONE_OF shift to state 103
-- On MESSAGE shift to state 94
-- On MAP shift to state 138
-- On IDENT shift to state 150
-- On EXTENSIONS shift to state 44
-- On ENUM shift to state 1
-- On reserved shift to state 157
-- On oneof shift to state 159
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 160
-- On normal_field shift to state 161
-- On message_body_content_list shift to state 165
-- On message_body_content shift to state 164
-- On message shift to state 166
-- On map shift to state 167
-- On label shift to state 168
-- On extension shift to state 176
-- On enum shift to state 177
## Reductions:
-- On RBRACE
--   reduce production message_body_content_list -> message_body_content

State 165:
## Known stack suffix:
## message_body_content message_body_content_list
## LR(1) items:
message_body_content_list -> message_body_content message_body_content_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production message_body_content_list -> message_body_content message_body_content_list

State 166:
## Known stack suffix:
## message
## LR(1) items:
message_body_content -> message . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
--   reduce production message_body_content -> message

State 167:
## Known stack suffix:
## map
## LR(1) items:
message_body_content -> map . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
--   reduce production message_body_content -> map

State 168:
## Known stack suffix:
## label
## LR(1) items:
normal_field -> label . IDENT field_name EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
normal_field -> label . IDENT field_name EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On IDENT shift to state 169
## Reductions:

State 169:
## Known stack suffix:
## label IDENT
## LR(1) items:
normal_field -> label IDENT . field_name EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
normal_field -> label IDENT . field_name EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On TO shift to state 106
-- On SYNTAX shift to state 107
-- On RESERVED shift to state 108
-- On REQUIRED shift to state 109
-- On REPEATED shift to state 110
-- On PUBLIC shift to state 111
-- On PACKAGE shift to state 112
-- On OPTIONAL shift to state 113
-- On OPTION shift to state 114
-- On ONE_OF shift to state 115
-- On MESSAGE shift to state 116
-- On MAX shift to state 117
-- On MAP shift to state 118
-- On IMPORT shift to state 119
-- On IDENT shift to state 120
-- On EXTENSIONS shift to state 121
-- On EXTEND shift to state 122
-- On ENUM shift to state 123
-- On field_name shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## label IDENT field_name
## LR(1) items:
normal_field -> label IDENT field_name . EQUAL INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
normal_field -> label IDENT field_name . EQUAL INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On EQUAL shift to state 171
## Reductions:

State 171:
## Known stack suffix:
## label IDENT field_name EQUAL
## LR(1) items:
normal_field -> label IDENT field_name EQUAL . INT field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
normal_field -> label IDENT field_name EQUAL . INT semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On INT shift to state 172
## Reductions:

State 172:
## Known stack suffix:
## label IDENT field_name EQUAL INT
## LR(1) items:
normal_field -> label IDENT field_name EQUAL INT . field_options semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
normal_field -> label IDENT field_name EQUAL INT . semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On LBRACKET shift to state 62
-- On semicolon shift to state 173
-- On field_options shift to state 174
## Reductions:

State 173:
## Known stack suffix:
## label IDENT field_name EQUAL INT semicolon
## LR(1) items:
normal_field -> label IDENT field_name EQUAL INT semicolon . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
semicolon -> semicolon . SEMICOLON [ SEMICOLON RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
--   reduce production normal_field -> label IDENT field_name EQUAL INT semicolon

State 174:
## Known stack suffix:
## label IDENT field_name EQUAL INT field_options
## LR(1) items:
normal_field -> label IDENT field_name EQUAL INT field_options . semicolon [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 175
## Reductions:

State 175:
## Known stack suffix:
## label IDENT field_name EQUAL INT field_options semicolon
## LR(1) items:
normal_field -> label IDENT field_name EQUAL INT field_options semicolon . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
semicolon -> semicolon . SEMICOLON [ SEMICOLON RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
--   reduce production normal_field -> label IDENT field_name EQUAL INT field_options semicolon

State 176:
## Known stack suffix:
## extension
## LR(1) items:
message_body_content -> extension . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
--   reduce production message_body_content -> extension

State 177:
## Known stack suffix:
## enum
## LR(1) items:
message_body_content -> enum . [ RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM ]
## Transitions:
## Reductions:
-- On RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
--   reduce production message_body_content -> enum

State 178:
## Known stack suffix:
## message_
## LR(1) items:
message_' -> message_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept message_

State 179:
## Known stack suffix:
## message
## LR(1) items:
message_ -> message . EOF [ # ]
## Transitions:
-- On EOF shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## message EOF
## LR(1) items:
message_ -> message EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production message_ -> message EOF

State 181:
## Known stack suffix:
##
## LR(1) items:
normal_field_' -> . normal_field_ [ # ]
## Transitions:
-- On REQUIRED shift to state 100
-- On REPEATED shift to state 101
-- On OPTIONAL shift to state 102
-- On IDENT shift to state 150
-- On normal_field_ shift to state 182
-- On normal_field shift to state 183
-- On label shift to state 168
## Reductions:

State 182:
## Known stack suffix:
## normal_field_
## LR(1) items:
normal_field_' -> normal_field_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept normal_field_

State 183:
## Known stack suffix:
## normal_field
## LR(1) items:
normal_field_ -> normal_field . EOF [ # ]
## Transitions:
-- On EOF shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## normal_field EOF
## LR(1) items:
normal_field_ -> normal_field EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production normal_field_ -> normal_field EOF

State 185:
## Known stack suffix:
##
## LR(1) items:
oneof_' -> . oneof_ [ # ]
## Transitions:
-- On ONE_OF shift to state 103
-- On oneof_ shift to state 186
-- On oneof shift to state 187
## Reductions:

State 186:
## Known stack suffix:
## oneof_
## LR(1) items:
oneof_' -> oneof_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept oneof_

State 187:
## Known stack suffix:
## oneof
## LR(1) items:
oneof_ -> oneof . EOF [ # ]
## Transitions:
-- On EOF shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## oneof EOF
## LR(1) items:
oneof_ -> oneof EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production oneof_ -> oneof EOF

State 189:
## Known stack suffix:
##
## LR(1) items:
option_' -> . option_ [ # ]
## Transitions:
-- On OPTION shift to state 4
-- On option_ shift to state 190
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 191
## Reductions:

State 190:
## Known stack suffix:
## option_
## LR(1) items:
option_' -> option_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept option_

State 191:
## Known stack suffix:
## ocaml_protoc_1_2_0_pb_parsing_parser_option
## LR(1) items:
option_ -> ocaml_protoc_1_2_0_pb_parsing_parser_option . EOF [ # ]
## Transitions:
-- On EOF shift to state 192
## Reductions:

State 192:
## Known stack suffix:
## ocaml_protoc_1_2_0_pb_parsing_parser_option EOF
## LR(1) items:
option_ -> ocaml_protoc_1_2_0_pb_parsing_parser_option EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production option_ -> ocaml_protoc_1_2_0_pb_parsing_parser_option EOF

State 193:
## Known stack suffix:
##
## LR(1) items:
proto_' -> . proto_ [ # ]
## Transitions:
-- On SYNTAX shift to state 194
-- On PACKAGE shift to state 198
-- On OPTION shift to state 4
-- On MESSAGE shift to state 94
-- On IMPORT shift to state 81
-- On EXTEND shift to state 201
-- On ENUM shift to state 1
-- On syntax shift to state 209
-- On proto_content shift to state 212
-- On proto_ shift to state 224
-- On proto shift to state 225
-- On package_declaration shift to state 211
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 214
-- On message shift to state 216
-- On import shift to state 218
-- On extend shift to state 220
-- On enum shift to state 222
## Reductions:

State 194:
## Known stack suffix:
## SYNTAX
## LR(1) items:
syntax -> SYNTAX . EQUAL STRING semicolon [ PACKAGE OPTION MESSAGE IMPORT EXTEND ENUM ]
## Transitions:
-- On EQUAL shift to state 195
## Reductions:

State 195:
## Known stack suffix:
## SYNTAX EQUAL
## LR(1) items:
syntax -> SYNTAX EQUAL . STRING semicolon [ PACKAGE OPTION MESSAGE IMPORT EXTEND ENUM ]
## Transitions:
-- On STRING shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## SYNTAX EQUAL STRING
## LR(1) items:
syntax -> SYNTAX EQUAL STRING . semicolon [ PACKAGE OPTION MESSAGE IMPORT EXTEND ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 197
## Reductions:

State 197:
## Known stack suffix:
## SYNTAX EQUAL STRING semicolon
## LR(1) items:
semicolon -> semicolon . SEMICOLON [ SEMICOLON PACKAGE OPTION MESSAGE IMPORT EXTEND ENUM ]
syntax -> SYNTAX EQUAL STRING semicolon . [ PACKAGE OPTION MESSAGE IMPORT EXTEND ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On PACKAGE OPTION MESSAGE IMPORT EXTEND ENUM
--   reduce production syntax -> SYNTAX EQUAL STRING semicolon

State 198:
## Known stack suffix:
## PACKAGE
## LR(1) items:
package_declaration -> PACKAGE . IDENT semicolon [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On IDENT shift to state 199
## Reductions:

State 199:
## Known stack suffix:
## PACKAGE IDENT
## LR(1) items:
package_declaration -> PACKAGE IDENT . semicolon [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 18
-- On semicolon shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## PACKAGE IDENT semicolon
## LR(1) items:
package_declaration -> PACKAGE IDENT semicolon . [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
semicolon -> semicolon . SEMICOLON [ SYNTAX SEMICOLON PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 20
## Reductions:
-- On SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM
--   reduce production package_declaration -> PACKAGE IDENT semicolon

State 201:
## Known stack suffix:
## EXTEND
## LR(1) items:
extend -> EXTEND . IDENT LBRACE normal_field_list rbrace [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
extend -> EXTEND . IDENT LBRACE rbrace [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On IDENT shift to state 202
## Reductions:

State 202:
## Known stack suffix:
## EXTEND IDENT
## LR(1) items:
extend -> EXTEND IDENT . LBRACE normal_field_list rbrace [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
extend -> EXTEND IDENT . LBRACE rbrace [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On LBRACE shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## EXTEND IDENT LBRACE
## LR(1) items:
extend -> EXTEND IDENT LBRACE . normal_field_list rbrace [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
extend -> EXTEND IDENT LBRACE . rbrace [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On REQUIRED shift to state 100
-- On REPEATED shift to state 101
-- On RBRACE shift to state 30
-- On OPTIONAL shift to state 102
-- On IDENT shift to state 150
-- On rbrace shift to state 204
-- On normal_field_list shift to state 205
-- On normal_field shift to state 207
-- On label shift to state 168
## Reductions:

State 204:
## Known stack suffix:
## EXTEND IDENT LBRACE rbrace
## LR(1) items:
extend -> EXTEND IDENT LBRACE rbrace . [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
rbrace -> rbrace . SEMICOLON [ SYNTAX SEMICOLON PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 32
## Reductions:
-- On SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM
--   reduce production extend -> EXTEND IDENT LBRACE rbrace

State 205:
## Known stack suffix:
## EXTEND IDENT LBRACE normal_field_list
## LR(1) items:
extend -> EXTEND IDENT LBRACE normal_field_list . rbrace [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On RBRACE shift to state 30
-- On rbrace shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## EXTEND IDENT LBRACE normal_field_list rbrace
## LR(1) items:
extend -> EXTEND IDENT LBRACE normal_field_list rbrace . [ SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
rbrace -> rbrace . SEMICOLON [ SYNTAX SEMICOLON PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM ]
## Transitions:
-- On SEMICOLON shift to state 32
## Reductions:
-- On SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM
--   reduce production extend -> EXTEND IDENT LBRACE normal_field_list rbrace

State 207:
## Known stack suffix:
## normal_field
## LR(1) items:
normal_field_list -> normal_field . [ RBRACE ]
normal_field_list -> normal_field . normal_field_list [ RBRACE ]
## Transitions:
-- On REQUIRED shift to state 100
-- On REPEATED shift to state 101
-- On OPTIONAL shift to state 102
-- On IDENT shift to state 150
-- On normal_field_list shift to state 208
-- On normal_field shift to state 207
-- On label shift to state 168
## Reductions:
-- On RBRACE
--   reduce production normal_field_list -> normal_field

State 208:
## Known stack suffix:
## normal_field normal_field_list
## LR(1) items:
normal_field_list -> normal_field normal_field_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production normal_field_list -> normal_field normal_field_list

State 209:
## Known stack suffix:
## syntax
## LR(1) items:
proto -> syntax . proto_content [ EOF ]
## Transitions:
-- On PACKAGE shift to state 198
-- On OPTION shift to state 4
-- On MESSAGE shift to state 94
-- On IMPORT shift to state 81
-- On EXTEND shift to state 201
-- On ENUM shift to state 1
-- On proto_content shift to state 210
-- On package_declaration shift to state 211
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 214
-- On message shift to state 216
-- On import shift to state 218
-- On extend shift to state 220
-- On enum shift to state 222
## Reductions:

State 210:
## Known stack suffix:
## syntax proto_content
## LR(1) items:
proto -> syntax proto_content . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production proto -> syntax proto_content

State 211:
## Known stack suffix:
## package_declaration
## LR(1) items:
proto_content -> package_declaration . [ EOF ]
proto_content -> package_declaration . proto [ EOF ]
## Transitions:
-- On SYNTAX shift to state 194
-- On PACKAGE shift to state 198
-- On OPTION shift to state 4
-- On MESSAGE shift to state 94
-- On IMPORT shift to state 81
-- On EXTEND shift to state 201
-- On ENUM shift to state 1
-- On syntax shift to state 209
-- On proto_content shift to state 212
-- On proto shift to state 213
-- On package_declaration shift to state 211
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 214
-- On message shift to state 216
-- On import shift to state 218
-- On extend shift to state 220
-- On enum shift to state 222
## Reductions:
-- On EOF
--   reduce production proto_content -> package_declaration

State 212:
## Known stack suffix:
## proto_content
## LR(1) items:
proto -> proto_content . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production proto -> proto_content

State 213:
## Known stack suffix:
## package_declaration proto
## LR(1) items:
proto_content -> package_declaration proto . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production proto_content -> package_declaration proto

State 214:
## Known stack suffix:
## ocaml_protoc_1_2_0_pb_parsing_parser_option
## LR(1) items:
proto_content -> ocaml_protoc_1_2_0_pb_parsing_parser_option . [ EOF ]
proto_content -> ocaml_protoc_1_2_0_pb_parsing_parser_option . proto [ EOF ]
## Transitions:
-- On SYNTAX shift to state 194
-- On PACKAGE shift to state 198
-- On OPTION shift to state 4
-- On MESSAGE shift to state 94
-- On IMPORT shift to state 81
-- On EXTEND shift to state 201
-- On ENUM shift to state 1
-- On syntax shift to state 209
-- On proto_content shift to state 212
-- On proto shift to state 215
-- On package_declaration shift to state 211
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 214
-- On message shift to state 216
-- On import shift to state 218
-- On extend shift to state 220
-- On enum shift to state 222
## Reductions:
-- On EOF
--   reduce production proto_content -> ocaml_protoc_1_2_0_pb_parsing_parser_option

State 215:
## Known stack suffix:
## ocaml_protoc_1_2_0_pb_parsing_parser_option proto
## LR(1) items:
proto_content -> ocaml_protoc_1_2_0_pb_parsing_parser_option proto . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production proto_content -> ocaml_protoc_1_2_0_pb_parsing_parser_option proto

State 216:
## Known stack suffix:
## message
## LR(1) items:
proto_content -> message . [ EOF ]
proto_content -> message . proto [ EOF ]
## Transitions:
-- On SYNTAX shift to state 194
-- On PACKAGE shift to state 198
-- On OPTION shift to state 4
-- On MESSAGE shift to state 94
-- On IMPORT shift to state 81
-- On EXTEND shift to state 201
-- On ENUM shift to state 1
-- On syntax shift to state 209
-- On proto_content shift to state 212
-- On proto shift to state 217
-- On package_declaration shift to state 211
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 214
-- On message shift to state 216
-- On import shift to state 218
-- On extend shift to state 220
-- On enum shift to state 222
## Reductions:
-- On EOF
--   reduce production proto_content -> message

State 217:
## Known stack suffix:
## message proto
## LR(1) items:
proto_content -> message proto . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production proto_content -> message proto

State 218:
## Known stack suffix:
## import
## LR(1) items:
proto_content -> import . [ EOF ]
proto_content -> import . proto [ EOF ]
## Transitions:
-- On SYNTAX shift to state 194
-- On PACKAGE shift to state 198
-- On OPTION shift to state 4
-- On MESSAGE shift to state 94
-- On IMPORT shift to state 81
-- On EXTEND shift to state 201
-- On ENUM shift to state 1
-- On syntax shift to state 209
-- On proto_content shift to state 212
-- On proto shift to state 219
-- On package_declaration shift to state 211
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 214
-- On message shift to state 216
-- On import shift to state 218
-- On extend shift to state 220
-- On enum shift to state 222
## Reductions:
-- On EOF
--   reduce production proto_content -> import

State 219:
## Known stack suffix:
## import proto
## LR(1) items:
proto_content -> import proto . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production proto_content -> import proto

State 220:
## Known stack suffix:
## extend
## LR(1) items:
proto_content -> extend . [ EOF ]
proto_content -> extend . proto [ EOF ]
## Transitions:
-- On SYNTAX shift to state 194
-- On PACKAGE shift to state 198
-- On OPTION shift to state 4
-- On MESSAGE shift to state 94
-- On IMPORT shift to state 81
-- On EXTEND shift to state 201
-- On ENUM shift to state 1
-- On syntax shift to state 209
-- On proto_content shift to state 212
-- On proto shift to state 221
-- On package_declaration shift to state 211
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 214
-- On message shift to state 216
-- On import shift to state 218
-- On extend shift to state 220
-- On enum shift to state 222
## Reductions:
-- On EOF
--   reduce production proto_content -> extend

State 221:
## Known stack suffix:
## extend proto
## LR(1) items:
proto_content -> extend proto . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production proto_content -> extend proto

State 222:
## Known stack suffix:
## enum
## LR(1) items:
proto_content -> enum . [ EOF ]
proto_content -> enum . proto [ EOF ]
## Transitions:
-- On SYNTAX shift to state 194
-- On PACKAGE shift to state 198
-- On OPTION shift to state 4
-- On MESSAGE shift to state 94
-- On IMPORT shift to state 81
-- On EXTEND shift to state 201
-- On ENUM shift to state 1
-- On syntax shift to state 209
-- On proto_content shift to state 212
-- On proto shift to state 223
-- On package_declaration shift to state 211
-- On ocaml_protoc_1_2_0_pb_parsing_parser_option shift to state 214
-- On message shift to state 216
-- On import shift to state 218
-- On extend shift to state 220
-- On enum shift to state 222
## Reductions:
-- On EOF
--   reduce production proto_content -> enum

State 223:
## Known stack suffix:
## enum proto
## LR(1) items:
proto_content -> enum proto . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production proto_content -> enum proto

State 224:
## Known stack suffix:
## proto_
## LR(1) items:
proto_' -> proto_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept proto_

State 225:
## Known stack suffix:
## proto
## LR(1) items:
proto_ -> proto . EOF [ # ]
## Transitions:
-- On EOF shift to state 226
## Reductions:

State 226:
## Known stack suffix:
## proto EOF
## LR(1) items:
proto_ -> proto EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production proto_ -> proto EOF

State 227:
## Known stack suffix:
##
## LR(1) items:
reserved_' -> . reserved_ [ # ]
## Transitions:
-- On RESERVED shift to state 97
-- On reserved_ shift to state 228
-- On reserved shift to state 229
## Reductions:

State 228:
## Known stack suffix:
## reserved_
## LR(1) items:
reserved_' -> reserved_ . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept reserved_

State 229:
## Known stack suffix:
## reserved
## LR(1) items:
reserved_ -> reserved . EOF [ # ]
## Transitions:
-- On EOF shift to state 230
## Reductions:

State 230:
## Known stack suffix:
## reserved EOF
## LR(1) items:
reserved_ -> reserved EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production reserved_ -> reserved EOF

