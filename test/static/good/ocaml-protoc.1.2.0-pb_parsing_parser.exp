Note: the nonterminal symbol option (from ocaml-protoc.1.2.0-pb_parsing_parser.mly) is renamed ocaml_protoc_1_2_0_pb_parsing_parser_option.
Grammar has 46 nonterminal symbols, among which 12 start symbols.
Grammar has 33 terminal symbols.
Grammar has 117 productions.
nullable(syntax) = false
nullable(semicolon) = false
nullable(reserved_) = false
nullable(reserved) = false
nullable(rbrace) = false
nullable(proto_content) = false
nullable(proto_) = false
nullable(proto) = false
nullable(package_declaration) = false
nullable(option_identifier_item) = false
nullable(option_identifier) = false
nullable(option_) = false
nullable(oneof_field_list) = true
nullable(oneof_field) = false
nullable(oneof_) = false
nullable(oneof) = false
nullable(ocaml_protoc_1_2_0_pb_parsing_parser_option) = false
nullable(normal_field_list) = false
nullable(normal_field_) = false
nullable(normal_field) = false
nullable(message_body_content_list) = false
nullable(message_body_content) = false
nullable(message_) = false
nullable(message) = false
nullable(map) = false
nullable(label) = false
nullable(import_) = false
nullable(import) = false
nullable(field_options_) = false
nullable(field_options) = false
nullable(field_option_list) = false
nullable(field_option) = false
nullable(field_name) = false
nullable(extension_range_list_) = false
nullable(extension_range_list) = false
nullable(extension_range) = false
nullable(extension_) = false
nullable(extension) = false
nullable(extend) = false
nullable(enum_values) = true
nullable(enum_value_) = false
nullable(enum_value) = false
nullable(enum_body_content) = false
nullable(enum_) = false
nullable(enum) = false
nullable(constant) = false
first(syntax) = SYNTAX
first(semicolon) = SEMICOLON
first(reserved_) = RESERVED
first(reserved) = RESERVED
first(rbrace) = RBRACE
first(proto_content) = PACKAGE OPTION MESSAGE IMPORT EXTEND ENUM
first(proto_) = SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND ENUM
first(proto) = SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND ENUM
first(package_declaration) = PACKAGE
first(option_identifier_item) = LPAREN IDENT
first(option_identifier) = LPAREN IDENT
first(option_) = OPTION
first(oneof_field_list) = IDENT
first(oneof_field) = IDENT
first(oneof_) = ONE_OF
first(oneof) = ONE_OF
first(ocaml_protoc_1_2_0_pb_parsing_parser_option) = OPTION
first(normal_field_list) = REQUIRED REPEATED OPTIONAL IDENT
first(normal_field_) = REQUIRED REPEATED OPTIONAL IDENT
first(normal_field) = REQUIRED REPEATED OPTIONAL IDENT
first(message_body_content_list) = RESERVED REQUIRED REPEATED OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
first(message_body_content) = RESERVED REQUIRED REPEATED OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
first(message_) = MESSAGE
first(message) = MESSAGE
first(map) = MAP
first(label) = REQUIRED REPEATED OPTIONAL
first(import_) = IMPORT
first(import) = IMPORT
first(field_options_) = LBRACKET
first(field_options) = LBRACKET
first(field_option_list) = LPAREN IDENT
first(field_option) = LPAREN IDENT
first(field_name) = TO SYNTAX RESERVED REQUIRED REPEATED PUBLIC PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAX MAP IMPORT IDENT EXTENSIONS EXTEND ENUM
first(extension_range_list_) = INT
first(extension_range_list) = INT
first(extension_range) = INT
first(extension_) = EXTENSIONS
first(extension) = EXTENSIONS
first(extend) = EXTEND
first(enum_values) = OPTION IDENT
first(enum_value_) = IDENT
first(enum_value) = IDENT
first(enum_body_content) = OPTION IDENT
first(enum_) = ENUM
first(enum) = ENUM
first(constant) = STRING INT IDENT FLOAT
minimal(syntax) = (* 4 *) SYNTAX EQUAL STRING SEMICOLON
minimal(semicolon) = (* 1 *) SEMICOLON
minimal(reserved_) = (* 4 *) RESERVED INT SEMICOLON EOF
minimal(reserved) = (* 3 *) RESERVED INT SEMICOLON
minimal(rbrace) = (* 1 *) RBRACE
minimal(proto_content) = (* 3 *) IMPORT STRING SEMICOLON
minimal(proto_) = (* 4 *) IMPORT STRING SEMICOLON EOF
minimal(proto) = (* 3 *) IMPORT STRING SEMICOLON
minimal(package_declaration) = (* 3 *) PACKAGE IDENT SEMICOLON
minimal(option_identifier_item) = (* 1 *) IDENT
minimal(option_identifier) = (* 1 *) IDENT
minimal(option_) = (* 6 *) OPTION IDENT EQUAL INT SEMICOLON EOF
minimal(oneof_field_list) = (* 0 *)
minimal(oneof_field) = (* 5 *) IDENT IDENT EQUAL INT SEMICOLON
minimal(oneof_) = (* 4 *) ONE_OF LBRACE RBRACE EOF
minimal(oneof) = (* 3 *) ONE_OF LBRACE RBRACE
minimal(ocaml_protoc_1_2_0_pb_parsing_parser_option) = (* 5 *) OPTION IDENT EQUAL INT SEMICOLON
minimal(normal_field_list) = (* 5 *) IDENT IDENT EQUAL INT SEMICOLON
minimal(normal_field_) = (* 6 *) IDENT IDENT EQUAL INT SEMICOLON EOF
minimal(normal_field) = (* 5 *) IDENT IDENT EQUAL INT SEMICOLON
minimal(message_body_content_list) = (* 3 *) ONE_OF LBRACE RBRACE
minimal(message_body_content) = (* 3 *) ONE_OF LBRACE RBRACE
minimal(message_) = (* 5 *) MESSAGE IDENT LBRACE RBRACE EOF
minimal(message) = (* 4 *) MESSAGE IDENT LBRACE RBRACE
minimal(map) = (* 10 *) MAP LANGLEB IDENT COMMA IDENT RANGLEB IDENT EQUAL INT SEMICOLON
minimal(label) = (* 1 *) REQUIRED
minimal(import_) = (* 4 *) IMPORT STRING SEMICOLON EOF
minimal(import) = (* 3 *) IMPORT STRING SEMICOLON
minimal(field_options_) = (* 3 *) LBRACKET RBRACKET EOF
minimal(field_options) = (* 2 *) LBRACKET RBRACKET
minimal(field_option_list) = (* 3 *) IDENT EQUAL INT
minimal(field_option) = (* 3 *) IDENT EQUAL INT
minimal(field_name) = (* 1 *) IDENT
minimal(extension_range_list_) = (* 2 *) INT EOF
minimal(extension_range_list) = (* 1 *) INT
minimal(extension_range) = (* 1 *) INT
minimal(extension_) = (* 4 *) EXTENSIONS INT SEMICOLON EOF
minimal(extension) = (* 3 *) EXTENSIONS INT SEMICOLON
minimal(extend) = (* 4 *) EXTEND IDENT LBRACE RBRACE
minimal(enum_values) = (* 0 *)
minimal(enum_value_) = (* 2 *) IDENT EOF
minimal(enum_value) = (* 1 *) IDENT
minimal(enum_body_content) = (* 1 *) IDENT
minimal(enum_) = (* 5 *) ENUM IDENT LBRACE RBRACE EOF
minimal(enum) = (* 4 *) ENUM IDENT LBRACE RBRACE
minimal(constant) = (* 1 *) INT
maximal(syntax) = infinity
maximal(semicolon) = infinity
maximal(reserved_) = infinity
maximal(reserved) = infinity
maximal(rbrace) = infinity
maximal(proto_content) = infinity
maximal(proto_) = infinity
maximal(proto) = infinity
maximal(package_declaration) = infinity
maximal(option_identifier_item) = 3
maximal(option_identifier) = infinity
maximal(option_) = infinity
maximal(oneof_field_list) = infinity
maximal(oneof_field) = infinity
maximal(oneof_) = infinity
maximal(oneof) = infinity
maximal(ocaml_protoc_1_2_0_pb_parsing_parser_option) = infinity
maximal(normal_field_list) = infinity
maximal(normal_field_) = infinity
maximal(normal_field) = infinity
maximal(message_body_content_list) = infinity
maximal(message_body_content) = infinity
maximal(message_) = infinity
maximal(message) = infinity
maximal(map) = infinity
maximal(label) = 1
maximal(import_) = infinity
maximal(import) = infinity
maximal(field_options_) = infinity
maximal(field_options) = infinity
maximal(field_option_list) = infinity
maximal(field_option) = 5
maximal(field_name) = 1
maximal(extension_range_list_) = infinity
maximal(extension_range_list) = infinity
maximal(extension_range) = 3
maximal(extension_) = infinity
maximal(extension) = infinity
maximal(extend) = infinity
maximal(enum_values) = infinity
maximal(enum_value_) = infinity
maximal(enum_value) = infinity
maximal(enum_body_content) = infinity
maximal(enum_) = infinity
maximal(enum) = infinity
maximal(constant) = 1
follow(syntax) = PACKAGE OPTION MESSAGE IMPORT EXTEND ENUM
follow(semicolon) = SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
follow(reserved_) = #
follow(reserved) = RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
follow(rbrace) = SYNTAX SEMICOLON RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
follow(proto_content) = EOF
follow(proto_) = #
follow(proto) = EOF
follow(package_declaration) = SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM
follow(option_identifier_item) = IDENT EQUAL
follow(option_identifier) = IDENT EQUAL
follow(option_) = #
follow(oneof_field_list) = RBRACE
follow(oneof_field) = RBRACE IDENT
follow(oneof_) = #
follow(oneof) = RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
follow(ocaml_protoc_1_2_0_pb_parsing_parser_option) = SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
follow(normal_field_list) = RBRACE
follow(normal_field_) = #
follow(normal_field) = RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
follow(message_body_content_list) = RBRACE
follow(message_body_content) = RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
follow(message_) = #
follow(message) = SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
follow(map) = RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS ENUM
follow(label) = IDENT
follow(import_) = #
follow(import) = SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM
follow(field_options_) = #
follow(field_options) = SEMICOLON EOF
follow(field_option_list) = RBRACKET
follow(field_option) = RBRACKET COMMA
follow(field_name) = EQUAL
follow(extension_range_list_) = #
follow(extension_range_list) = SEMICOLON EOF
follow(extension_range) = SEMICOLON EOF COMMA
follow(extension_) = #
follow(extension) = RESERVED REQUIRED REPEATED RBRACE OPTIONAL OPTION ONE_OF MESSAGE MAP IDENT EXTENSIONS EOF ENUM
follow(extend) = SYNTAX PACKAGE OPTION MESSAGE IMPORT EXTEND EOF ENUM
follow(enum_values) = RBRACE
follow(enum_value_) = #
follow(enum_value) = RBRACE OPTION IDENT EOF
follow(enum_body_content) = RBRACE OPTION IDENT
follow(enum_) = #
follow(enum) = SYNTAX RESERVED REQUIRED REPEATED RBRACE PACKAGE OPTIONAL OPTION ONE_OF MESSAGE MAP IMPORT IDENT EXTENSIONS EXTEND EOF ENUM
follow(constant) = SEMICOLON RBRACKET COMMA
Built an LR(0) automaton with 231 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 231 states.
90 out of 231 states have a default reduction.
62 out of 231 states are represented.
0 out of 93 symbols keep track of their start position.
0 out of 93 symbols keep track of their end position.
67 out of 129 productions exploit shiftreduce optimization.
0 out of 231 states can peek at an error.
653 functions before inlining, 92 functions after inlining.
