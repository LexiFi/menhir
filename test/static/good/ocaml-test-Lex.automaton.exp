State 0:
lexer_definition' -> . lexer_definition [ # ]
-- On Taction shift to state 1
-- On lexer_definition shift to state 2
-- On header shift to state 3
-- On Trule reduce production header -> 

State 1:
header -> Taction . [ Trule ]
-- On Trule reduce production header -> Taction 

State 2:
lexer_definition' -> lexer_definition . [ # ]
-- On # accept lexer_definition

State 3:
lexer_definition -> header . Trule definition other_definitions Tend [ # ]
-- On Trule shift to state 4

State 4:
lexer_definition -> header Trule . definition other_definitions Tend [ # ]
-- On Tident shift to state 5
-- On definition shift to state 39

State 5:
definition -> Tident . Tequal entry [ Tend Tand ]
-- On Tequal shift to state 6

State 6:
definition -> Tident Tequal . entry [ Tend Tand ]
-- On Tparse shift to state 7
-- On entry shift to state 38

State 7:
entry -> Tparse . case rest_of_entry [ Tend Tand ]
-- On Tunderscore shift to state 8
-- On Tstring shift to state 9
-- On Tlparen shift to state 10
-- On Tlbracket shift to state 11
-- On Teof shift to state 22
-- On Tchar shift to state 23
-- On regexp shift to state 32
-- On case shift to state 34

State 8:
regexp -> Tunderscore . [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore reduce production regexp -> Tunderscore 
-- On Tstring reduce production regexp -> Tunderscore 
-- On Tstar reduce production regexp -> Tunderscore 
-- On Trparen reduce production regexp -> Tunderscore 
-- On Tplus reduce production regexp -> Tunderscore 
-- On Tor reduce production regexp -> Tunderscore 
-- On Tmaybe reduce production regexp -> Tunderscore 
-- On Tlparen reduce production regexp -> Tunderscore 
-- On Tlbracket reduce production regexp -> Tunderscore 
-- On Teof reduce production regexp -> Tunderscore 
-- On Tchar reduce production regexp -> Tunderscore 
-- On Taction reduce production regexp -> Tunderscore 

State 9:
regexp -> Tstring . [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore reduce production regexp -> Tstring 
-- On Tstring reduce production regexp -> Tstring 
-- On Tstar reduce production regexp -> Tstring 
-- On Trparen reduce production regexp -> Tstring 
-- On Tplus reduce production regexp -> Tstring 
-- On Tor reduce production regexp -> Tstring 
-- On Tmaybe reduce production regexp -> Tstring 
-- On Tlparen reduce production regexp -> Tstring 
-- On Tlbracket reduce production regexp -> Tstring 
-- On Teof reduce production regexp -> Tstring 
-- On Tchar reduce production regexp -> Tstring 
-- On Taction reduce production regexp -> Tstring 

State 10:
regexp -> Tlparen . regexp Trparen [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore shift to state 8
-- On Tstring shift to state 9
-- On Tlparen shift to state 10
-- On Tlbracket shift to state 11
-- On Teof shift to state 22
-- On Tchar shift to state 23
-- On regexp shift to state 24

State 11:
regexp -> Tlbracket . char_class Trbracket [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tchar shift to state 12
-- On Tcaret shift to state 15
-- On char_class1 shift to state 18
-- On char_class shift to state 20

State 12:
char_class1 -> Tchar . Tdash Tchar [ Trbracket Tchar Tcaret ]
char_class1 -> Tchar . [ Trbracket Tchar Tcaret ]
-- On Tdash shift to state 13
-- On Trbracket reduce production char_class1 -> Tchar 
-- On Tchar reduce production char_class1 -> Tchar 
-- On Tcaret reduce production char_class1 -> Tchar 

State 13:
char_class1 -> Tchar Tdash . Tchar [ Trbracket Tchar Tcaret ]
-- On Tchar shift to state 14

State 14:
char_class1 -> Tchar Tdash Tchar . [ Trbracket Tchar Tcaret ]
-- On Trbracket reduce production char_class1 -> Tchar Tdash Tchar 
-- On Tchar reduce production char_class1 -> Tchar Tdash Tchar 
-- On Tcaret reduce production char_class1 -> Tchar Tdash Tchar 

State 15:
char_class -> Tcaret . char_class1 [ Trbracket Tchar Tcaret ]
-- On Tchar shift to state 12
-- On Tcaret shift to state 15
-- On char_class1 shift to state 16
-- On char_class shift to state 17

State 16:
char_class -> Tcaret char_class1 . [ Trbracket Tchar Tcaret ]
char_class -> char_class1 . [ Tchar Tcaret ]
-- On Trbracket reduce production char_class -> Tcaret char_class1 
-- On Tchar reduce production char_class -> Tcaret char_class1 
-- On Tchar reduce production char_class -> char_class1 
-- On Tcaret reduce production char_class -> Tcaret char_class1 
-- On Tcaret reduce production char_class -> char_class1 
** Conflict on Tchar Tcaret

State 17:
char_class1 -> char_class . char_class [ Trbracket Tchar Tcaret ]
-- On Tchar shift to state 12
-- On Tcaret shift to state 15
-- On char_class1 shift to state 18
-- On char_class shift to state 19

State 18:
char_class -> char_class1 . [ Trbracket Tchar Tcaret ]
-- On Trbracket reduce production char_class -> char_class1 
-- On Tchar reduce production char_class -> char_class1 
-- On Tcaret reduce production char_class -> char_class1 

State 19:
char_class1 -> char_class . char_class [ Trbracket Tchar Tcaret ]
char_class1 -> char_class char_class . [ Trbracket Tchar Tcaret ]
-- On Tchar shift to state 12
-- On Tcaret shift to state 15
-- On char_class1 shift to state 18
-- On char_class shift to state 19
-- On Trbracket reduce production char_class1 -> char_class char_class 
-- On Tchar reduce production char_class1 -> char_class char_class 
-- On Tcaret reduce production char_class1 -> char_class char_class 
** Conflict on Tchar Tcaret

State 20:
char_class1 -> char_class . char_class [ Trbracket Tchar Tcaret ]
regexp -> Tlbracket char_class . Trbracket [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Trbracket shift to state 21
-- On Tchar shift to state 12
-- On Tcaret shift to state 15
-- On char_class1 shift to state 18
-- On char_class shift to state 19

State 21:
regexp -> Tlbracket char_class Trbracket . [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore reduce production regexp -> Tlbracket char_class Trbracket 
-- On Tstring reduce production regexp -> Tlbracket char_class Trbracket 
-- On Tstar reduce production regexp -> Tlbracket char_class Trbracket 
-- On Trparen reduce production regexp -> Tlbracket char_class Trbracket 
-- On Tplus reduce production regexp -> Tlbracket char_class Trbracket 
-- On Tor reduce production regexp -> Tlbracket char_class Trbracket 
-- On Tmaybe reduce production regexp -> Tlbracket char_class Trbracket 
-- On Tlparen reduce production regexp -> Tlbracket char_class Trbracket 
-- On Tlbracket reduce production regexp -> Tlbracket char_class Trbracket 
-- On Teof reduce production regexp -> Tlbracket char_class Trbracket 
-- On Tchar reduce production regexp -> Tlbracket char_class Trbracket 
-- On Taction reduce production regexp -> Tlbracket char_class Trbracket 

State 22:
regexp -> Teof . [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore reduce production regexp -> Teof 
-- On Tstring reduce production regexp -> Teof 
-- On Tstar reduce production regexp -> Teof 
-- On Trparen reduce production regexp -> Teof 
-- On Tplus reduce production regexp -> Teof 
-- On Tor reduce production regexp -> Teof 
-- On Tmaybe reduce production regexp -> Teof 
-- On Tlparen reduce production regexp -> Teof 
-- On Tlbracket reduce production regexp -> Teof 
-- On Teof reduce production regexp -> Teof 
-- On Tchar reduce production regexp -> Teof 
-- On Taction reduce production regexp -> Teof 

State 23:
regexp -> Tchar . [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore reduce production regexp -> Tchar 
-- On Tstring reduce production regexp -> Tchar 
-- On Tstar reduce production regexp -> Tchar 
-- On Trparen reduce production regexp -> Tchar 
-- On Tplus reduce production regexp -> Tchar 
-- On Tor reduce production regexp -> Tchar 
-- On Tmaybe reduce production regexp -> Tchar 
-- On Tlparen reduce production regexp -> Tchar 
-- On Tlbracket reduce production regexp -> Tchar 
-- On Teof reduce production regexp -> Tchar 
-- On Tchar reduce production regexp -> Tchar 
-- On Taction reduce production regexp -> Tchar 

State 24:
regexp -> regexp . Tstar [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar ]
regexp -> regexp . Tmaybe [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar ]
regexp -> regexp . Tplus [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar ]
regexp -> regexp . Tor regexp [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar ]
regexp -> regexp . regexp [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar ]
regexp -> Tlparen regexp . Trparen [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore shift to state 8
-- On Tstring shift to state 9
-- On Tstar shift to state 25
-- On Trparen shift to state 26
-- On Tplus shift to state 27
-- On Tor shift to state 28
-- On Tmaybe shift to state 30
-- On Tlparen shift to state 10
-- On Tlbracket shift to state 11
-- On Teof shift to state 22
-- On Tchar shift to state 23
-- On regexp shift to state 31

State 25:
regexp -> regexp Tstar . [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore reduce production regexp -> regexp Tstar 
-- On Tstring reduce production regexp -> regexp Tstar 
-- On Tstar reduce production regexp -> regexp Tstar 
-- On Trparen reduce production regexp -> regexp Tstar 
-- On Tplus reduce production regexp -> regexp Tstar 
-- On Tor reduce production regexp -> regexp Tstar 
-- On Tmaybe reduce production regexp -> regexp Tstar 
-- On Tlparen reduce production regexp -> regexp Tstar 
-- On Tlbracket reduce production regexp -> regexp Tstar 
-- On Teof reduce production regexp -> regexp Tstar 
-- On Tchar reduce production regexp -> regexp Tstar 
-- On Taction reduce production regexp -> regexp Tstar 

State 26:
regexp -> Tlparen regexp Trparen . [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore reduce production regexp -> Tlparen regexp Trparen 
-- On Tstring reduce production regexp -> Tlparen regexp Trparen 
-- On Tstar reduce production regexp -> Tlparen regexp Trparen 
-- On Trparen reduce production regexp -> Tlparen regexp Trparen 
-- On Tplus reduce production regexp -> Tlparen regexp Trparen 
-- On Tor reduce production regexp -> Tlparen regexp Trparen 
-- On Tmaybe reduce production regexp -> Tlparen regexp Trparen 
-- On Tlparen reduce production regexp -> Tlparen regexp Trparen 
-- On Tlbracket reduce production regexp -> Tlparen regexp Trparen 
-- On Teof reduce production regexp -> Tlparen regexp Trparen 
-- On Tchar reduce production regexp -> Tlparen regexp Trparen 
-- On Taction reduce production regexp -> Tlparen regexp Trparen 

State 27:
regexp -> regexp Tplus . [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore reduce production regexp -> regexp Tplus 
-- On Tstring reduce production regexp -> regexp Tplus 
-- On Tstar reduce production regexp -> regexp Tplus 
-- On Trparen reduce production regexp -> regexp Tplus 
-- On Tplus reduce production regexp -> regexp Tplus 
-- On Tor reduce production regexp -> regexp Tplus 
-- On Tmaybe reduce production regexp -> regexp Tplus 
-- On Tlparen reduce production regexp -> regexp Tplus 
-- On Tlbracket reduce production regexp -> regexp Tplus 
-- On Teof reduce production regexp -> regexp Tplus 
-- On Tchar reduce production regexp -> regexp Tplus 
-- On Taction reduce production regexp -> regexp Tplus 

State 28:
regexp -> regexp Tor . regexp [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore shift to state 8
-- On Tstring shift to state 9
-- On Tlparen shift to state 10
-- On Tlbracket shift to state 11
-- On Teof shift to state 22
-- On Tchar shift to state 23
-- On regexp shift to state 29

State 29:
regexp -> regexp . Tstar [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . Tmaybe [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . Tplus [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . Tor regexp [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp Tor regexp . [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . regexp [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore shift to state 8
-- On Tstring shift to state 9
-- On Tstar shift to state 25
-- On Tplus shift to state 27
-- On Tmaybe shift to state 30
-- On Tlparen shift to state 10
-- On Tlbracket shift to state 11
-- On Teof shift to state 22
-- On Tchar shift to state 23
-- On regexp shift to state 31
-- On Tunderscore reduce production regexp -> regexp Tor regexp 
-- On Tstring reduce production regexp -> regexp Tor regexp 
-- On Trparen reduce production regexp -> regexp Tor regexp 
-- On Tor reduce production regexp -> regexp Tor regexp 
-- On Tlparen reduce production regexp -> regexp Tor regexp 
-- On Tlbracket reduce production regexp -> regexp Tor regexp 
-- On Teof reduce production regexp -> regexp Tor regexp 
-- On Tchar reduce production regexp -> regexp Tor regexp 
-- On Taction reduce production regexp -> regexp Tor regexp 
** Conflict on Tunderscore Tstring Tlparen Tlbracket Teof Tchar

State 30:
regexp -> regexp Tmaybe . [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore reduce production regexp -> regexp Tmaybe 
-- On Tstring reduce production regexp -> regexp Tmaybe 
-- On Tstar reduce production regexp -> regexp Tmaybe 
-- On Trparen reduce production regexp -> regexp Tmaybe 
-- On Tplus reduce production regexp -> regexp Tmaybe 
-- On Tor reduce production regexp -> regexp Tmaybe 
-- On Tmaybe reduce production regexp -> regexp Tmaybe 
-- On Tlparen reduce production regexp -> regexp Tmaybe 
-- On Tlbracket reduce production regexp -> regexp Tmaybe 
-- On Teof reduce production regexp -> regexp Tmaybe 
-- On Tchar reduce production regexp -> regexp Tmaybe 
-- On Taction reduce production regexp -> regexp Tmaybe 

State 31:
regexp -> regexp . Tstar [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . Tmaybe [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . Tplus [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . Tor regexp [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . regexp [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp regexp . [ Tunderscore Tstring Tstar Trparen Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore shift to state 8
-- On Tstring shift to state 9
-- On Tstar shift to state 25
-- On Tplus shift to state 27
-- On Tmaybe shift to state 30
-- On Tlparen shift to state 10
-- On Tlbracket shift to state 11
-- On Teof shift to state 22
-- On Tchar shift to state 23
-- On regexp shift to state 31
-- On Tunderscore reduce production regexp -> regexp regexp 
-- On Tstring reduce production regexp -> regexp regexp 
-- On Trparen reduce production regexp -> regexp regexp 
-- On Tor reduce production regexp -> regexp regexp 
-- On Tlparen reduce production regexp -> regexp regexp 
-- On Tlbracket reduce production regexp -> regexp regexp 
-- On Teof reduce production regexp -> regexp regexp 
-- On Tchar reduce production regexp -> regexp regexp 
-- On Taction reduce production regexp -> regexp regexp 
** Conflict on Tunderscore Tstring Tlparen Tlbracket Teof Tchar

State 32:
case -> regexp . Taction [ Tor Tend Tand ]
regexp -> regexp . Tstar [ Tunderscore Tstring Tstar Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . Tmaybe [ Tunderscore Tstring Tstar Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . Tplus [ Tunderscore Tstring Tstar Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . Tor regexp [ Tunderscore Tstring Tstar Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
regexp -> regexp . regexp [ Tunderscore Tstring Tstar Tplus Tor Tmaybe Tlparen Tlbracket Teof Tchar Taction ]
-- On Tunderscore shift to state 8
-- On Tstring shift to state 9
-- On Tstar shift to state 25
-- On Tplus shift to state 27
-- On Tor shift to state 28
-- On Tmaybe shift to state 30
-- On Tlparen shift to state 10
-- On Tlbracket shift to state 11
-- On Teof shift to state 22
-- On Tchar shift to state 23
-- On Taction shift to state 33
-- On regexp shift to state 31

State 33:
case -> regexp Taction . [ Tor Tend Tand ]
-- On Tor reduce production case -> regexp Taction 
-- On Tend reduce production case -> regexp Taction 
-- On Tand reduce production case -> regexp Taction 

State 34:
entry -> Tparse case . rest_of_entry [ Tend Tand ]
-- On rest_of_entry shift to state 35
-- On Tor reduce production rest_of_entry -> 
-- On Tend reduce production rest_of_entry -> 
-- On Tand reduce production rest_of_entry -> 

State 35:
entry -> Tparse case rest_of_entry . [ Tend Tand ]
rest_of_entry -> rest_of_entry . Tor case [ Tor Tend Tand ]
-- On Tor shift to state 36
-- On Tend reduce production entry -> Tparse case rest_of_entry 
-- On Tand reduce production entry -> Tparse case rest_of_entry 

State 36:
rest_of_entry -> rest_of_entry Tor . case [ Tor Tend Tand ]
-- On Tunderscore shift to state 8
-- On Tstring shift to state 9
-- On Tlparen shift to state 10
-- On Tlbracket shift to state 11
-- On Teof shift to state 22
-- On Tchar shift to state 23
-- On regexp shift to state 32
-- On case shift to state 37

State 37:
rest_of_entry -> rest_of_entry Tor case . [ Tor Tend Tand ]
-- On Tor reduce production rest_of_entry -> rest_of_entry Tor case 
-- On Tend reduce production rest_of_entry -> rest_of_entry Tor case 
-- On Tand reduce production rest_of_entry -> rest_of_entry Tor case 

State 38:
definition -> Tident Tequal entry . [ Tend Tand ]
-- On Tend reduce production definition -> Tident Tequal entry 
-- On Tand reduce production definition -> Tident Tequal entry 

State 39:
lexer_definition -> header Trule definition . other_definitions Tend [ # ]
-- On other_definitions shift to state 40
-- On Tend reduce production other_definitions -> 
-- On Tand reduce production other_definitions -> 

State 40:
lexer_definition -> header Trule definition other_definitions . Tend [ # ]
other_definitions -> other_definitions . Tand definition [ Tend Tand ]
-- On Tend shift to state 41
-- On Tand shift to state 42

State 41:
lexer_definition -> header Trule definition other_definitions Tend . [ # ]
-- On # reduce production lexer_definition -> header Trule definition other_definitions Tend 

State 42:
other_definitions -> other_definitions Tand . definition [ Tend Tand ]
-- On Tident shift to state 5
-- On definition shift to state 43

State 43:
other_definitions -> other_definitions Tand definition . [ Tend Tand ]
-- On Tend reduce production other_definitions -> other_definitions Tand definition 
-- On Tand reduce production other_definitions -> other_definitions Tand definition 

