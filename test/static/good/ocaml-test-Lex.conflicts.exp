
** Conflict (shift/reduce) in state 31.
** Tokens involved: Tunderscore Tstring Tlparen Tlbracket Teof Tchar
** The following explanations concentrate on token Tunderscore.
** This state is reached from lexer_definition after reading:

header Trule Tident Tequal Tparse regexp regexp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

lexer_definition 
header Trule definition other_definitions Tend 
             Tident Tequal entry 
                           Tparse case rest_of_entry 
                                  regexp Taction 
                                  (?)

** In state 31, looking ahead at Tunderscore, shifting is permitted
** because of the following sub-derivation:

regexp regexp 
       regexp regexp 
              . Tunderscore 

** In state 31, looking ahead at Tunderscore, reducing production
** regexp -> regexp regexp
** is permitted because of the following sub-derivation:

regexp regexp // lookahead token appears because regexp can begin with Tunderscore
regexp regexp . 

** Conflict (shift/reduce) in state 29.
** Tokens involved: Tunderscore Tstring Tlparen Tlbracket Teof Tchar
** The following explanations concentrate on token Tunderscore.
** This state is reached from lexer_definition after reading:

header Trule Tident Tequal Tparse regexp Tor regexp

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

lexer_definition 
header Trule definition other_definitions Tend 
             Tident Tequal entry 
                           Tparse case rest_of_entry 
                                  regexp Taction 
                                  (?)

** In state 29, looking ahead at Tunderscore, shifting is permitted
** because of the following sub-derivation:

regexp Tor regexp 
           regexp regexp 
                  . Tunderscore 

** In state 29, looking ahead at Tunderscore, reducing production
** regexp -> regexp Tor regexp
** is permitted because of the following sub-derivation:

regexp regexp // lookahead token appears because regexp can begin with Tunderscore
regexp Tor regexp . 

** Conflict (shift/reduce) in state 19.
** Tokens involved: Tchar Tcaret
** The following explanations concentrate on token Tchar.
** This state is reached from lexer_definition after reading:

header Trule Tident Tequal Tparse Tlbracket char_class char_class

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

lexer_definition 
header Trule definition other_definitions Tend 
             Tident Tequal entry 
                           Tparse case rest_of_entry 
                                  regexp Taction 
                                  Tlbracket char_class Trbracket 
                                            char_class1 
                                            (?)

** In state 19, looking ahead at Tchar, shifting is permitted
** because of the following sub-derivation:

char_class char_class 
           char_class1 
           char_class char_class 
                      char_class1 
                      . Tchar Tdash Tchar 

** In state 19, looking ahead at Tchar, reducing production
** char_class1 -> char_class char_class
** is permitted because of the following sub-derivation:

char_class char_class // lookahead token appears because char_class can begin with Tchar
char_class1 // lookahead token is inherited
char_class char_class . 

** Conflict (reduce/reduce) in state 16.
** Tokens involved: Tchar Tcaret
** The following explanations concentrate on token Tchar.
** This state is reached from lexer_definition after reading:

header Trule Tident Tequal Tparse Tlbracket Tcaret char_class1

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

lexer_definition 
header Trule definition other_definitions Tend 
             Tident Tequal entry 
                           Tparse case rest_of_entry 
                                  regexp Taction 
                                  Tlbracket char_class Trbracket 
                                            (?)

** In state 16, looking ahead at Tchar, reducing production
** char_class -> Tcaret char_class1
** is permitted because of the following sub-derivation:

char_class1 
char_class char_class // lookahead token appears because char_class can begin with Tchar
Tcaret char_class1 . 

** In state 16, looking ahead at Tchar, reducing production
** char_class -> char_class1
** is permitted because of the following sub-derivation:

Tcaret char_class1 
       char_class char_class // lookahead token appears because char_class can begin with Tchar
       char_class1 . 
