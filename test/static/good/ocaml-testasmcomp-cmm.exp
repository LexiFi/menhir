File "ocaml-testasmcomp-cmm.mly", line 112, characters 7-11:
Warning: the token PROJ is unused.
Grammar has 22 nonterminal symbols, among which 1 start symbols.
Grammar has 90 terminal symbols.
Grammar has 122 productions.
nullable(unaryop) = false
nullable(sequence) = false
nullable(phrase) = false
nullable(params) = true
nullable(oneparam) = false
nullable(oneletdef) = false
nullable(onecase) = false
nullable(machtype) = false
nullable(letdefmult) = true
nullable(letdef) = false
nullable(fundecl) = false
nullable(exprlist) = true
nullable(expr) = false
nullable(datalist) = true
nullable(dataitem) = false
nullable(datadecl) = false
nullable(componentlist) = false
nullable(component) = false
nullable(chunk) = false
nullable(caselist) = true
nullable(bind_ident) = false
nullable(binaryop) = false
first(unaryop) = RAISE LOAD INTOFFLOAT FLOATOFINT ALLOC ABSF
first(sequence) = STRING POINTER LPAREN LBRACKET INTCONST IDENT FLOATCONST EXIT
first(phrase) = LPAREN EOF
first(params) = IDENT
first(oneparam) = IDENT
first(oneletdef) = IDENT
first(onecase) = CASE
first(machtype) = UNIT INT FLOAT ADDR
first(letdefmult) = IDENT
first(letdef) = LPAREN IDENT
first(fundecl) = LPAREN
first(exprlist) = STRING POINTER LPAREN LBRACKET INTCONST IDENT FLOATCONST EXIT
first(expr) = STRING POINTER LPAREN LBRACKET INTCONST IDENT FLOATCONST EXIT
first(datalist) = STRING SKIP KSTRING INTCONST INT HALF FLOAT BYTE ALIGN ADDR
first(dataitem) = STRING SKIP KSTRING INTCONST INT HALF FLOAT BYTE ALIGN ADDR
first(datadecl) = LPAREN
first(componentlist) = INT FLOAT ADDR
first(component) = INT FLOAT ADDR
first(chunk) = UNSIGNED SIGNED INT FLOAT64 FLOAT32 FLOAT ADDR
first(caselist) = CASE
first(bind_ident) = IDENT
first(binaryop) = XOR SUBI SUBA STORE OR NEI NEF NEA MULI MULF MODI LTI LTF LTA LSR LSL LEI LEF LEA GTI GTF GTA GEI GEF GEA EQI EQF EQA DIVI DIVF CHECKBOUND ASR AND ADDI ADDF ADDA
minimal(unaryop) = (* 1 *) ALLOC
minimal(sequence) = (* 1 *) INTCONST
minimal(phrase) = (* 1 *) EOF
minimal(params) = (* 0 *)
minimal(oneparam) = (* 3 *) IDENT COLON UNIT
minimal(oneletdef) = (* 2 *) IDENT INTCONST
minimal(onecase) = (* 3 *) CASE INTCONST COLON
minimal(machtype) = (* 1 *) UNIT
minimal(letdefmult) = (* 0 *)
minimal(letdef) = (* 2 *) LPAREN RPAREN
minimal(fundecl) = (* 7 *) LPAREN FUNCTION STRING LPAREN RPAREN INTCONST RPAREN
minimal(exprlist) = (* 0 *)
minimal(expr) = (* 1 *) INTCONST
minimal(datalist) = (* 0 *)
minimal(dataitem) = (* 2 *) STRING COLON
minimal(datadecl) = (* 2 *) LPAREN RPAREN
minimal(componentlist) = (* 1 *) ADDR
minimal(component) = (* 1 *) ADDR
minimal(chunk) = (* 1 *) INT
minimal(caselist) = (* 0 *)
minimal(bind_ident) = (* 1 *) IDENT
minimal(binaryop) = (* 1 *) ADDI
maximal(unaryop) = 3
maximal(sequence) = infinity
maximal(phrase) = infinity
maximal(params) = infinity
maximal(oneparam) = infinity
maximal(oneletdef) = infinity
maximal(onecase) = infinity
maximal(machtype) = infinity
maximal(letdefmult) = infinity
maximal(letdef) = infinity
maximal(fundecl) = infinity
maximal(exprlist) = infinity
maximal(expr) = infinity
maximal(datalist) = infinity
maximal(dataitem) = 2
maximal(datadecl) = infinity
maximal(componentlist) = infinity
maximal(component) = 1
maximal(chunk) = 2
maximal(caselist) = infinity
maximal(bind_ident) = 1
maximal(binaryop) = 3
follow(unaryop) = STRING POINTER LPAREN LBRACKET INTCONST IDENT FLOATCONST EXIT
follow(sequence) = WITH RPAREN CASE
follow(phrase) = #
follow(params) = RPAREN
follow(oneparam) = RPAREN IDENT
follow(oneletdef) = STRING RPAREN POINTER LPAREN LBRACKET INTCONST IDENT FLOATCONST EXIT
follow(onecase) = STRING POINTER LPAREN LBRACKET INTCONST IDENT FLOATCONST EXIT
follow(machtype) = RPAREN IDENT
follow(letdefmult) = RPAREN
follow(letdef) = STRING POINTER LPAREN LBRACKET INTCONST IDENT FLOATCONST EXIT
follow(fundecl) = #
follow(exprlist) = UNIT STRING POINTER LPAREN LBRACKET INTCONST INT IDENT FLOATCONST FLOAT EXIT ADDR
follow(expr) = WITH UNIT STRING RPAREN POINTER LPAREN LBRACKET INTCONST INT IDENT FLOATCONST FLOAT EXIT CASE ADDR
follow(datalist) = STRING SKIP RPAREN KSTRING INTCONST INT HALF FLOAT BYTE ALIGN ADDR
follow(dataitem) = STRING SKIP RPAREN KSTRING INTCONST INT HALF FLOAT BYTE ALIGN ADDR
follow(datadecl) = #
follow(componentlist) = STAR RPAREN IDENT
follow(component) = STAR RPAREN IDENT
follow(chunk) = STRING POINTER LPAREN LBRACKET INTCONST IDENT FLOATCONST EXIT
follow(caselist) = RPAREN
follow(bind_ident) = STRING POINTER LPAREN LBRACKET INTCONST IDENT FLOATCONST EXIT
follow(binaryop) = STRING POINTER LPAREN LBRACKET INTCONST IDENT FLOATCONST EXIT
Built an LR(0) automaton with 220 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 220 states.
117 out of 220 states have a default reduction.
The action table is 20020 entries; 514 non-zero; 446 compressed.
The action table occupies roughly 984 bytes.
The goto table is 5060 entries; 87 non-zero; 307 compressed.
The goto table occupies roughly 400 bytes.
The error table occupies roughly 2536 bytes.
The default_reduction table occupies roughly 256 bytes.
The lhs table occupies roughly 160 bytes.
The trace table occupies roughly 8 bytes.
