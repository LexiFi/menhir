State 0:
## Known stack suffix:
##
## LR(1) items:
yacc_definitions' -> . yacc_definitions [ # ]
## Transitions:
-- On Taction shift to state 1
-- On yacc_definitions shift to state 2
-- On header shift to state 3
## Reductions:
-- On Ttype reduce production header ->
-- On Ttoken reduce production header ->
-- On Tstart reduce production header ->
-- On Tright reduce production header ->
-- On Tnonassoc reduce production header ->
-- On Tmark reduce production header ->
-- On Tleft reduce production header ->

State 1:
## Known stack suffix:
## Taction
## LR(1) items:
header -> Taction . [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft EOF ]
## Transitions:
## Reductions:
-- On Ttype reduce production header -> Taction
-- On Ttoken reduce production header -> Taction
-- On Tstart reduce production header -> Taction
-- On Tright reduce production header -> Taction
-- On Tnonassoc reduce production header -> Taction
-- On Tmark reduce production header -> Taction
-- On Tleft reduce production header -> Taction
-- On EOF reduce production header -> Taction

State 2:
## Known stack suffix:
## yacc_definitions
## LR(1) items:
yacc_definitions' -> yacc_definitions . [ # ]
## Transitions:
## Reductions:
-- On # accept yacc_definitions

State 3:
## Known stack suffix:
## header
## LR(1) items:
yacc_definitions -> header . tokendecls Tmark rules header EOF [ # ]
## Transitions:
-- On Ttype shift to state 4
-- On Ttoken shift to state 9
-- On Tstart shift to state 13
-- On Tright shift to state 15
-- On Tnonassoc shift to state 17
-- On Tleft shift to state 19
-- On tokendecls shift to state 21
-- On tokendecl shift to state 46
## Reductions:
-- On Tmark reduce production tokendecls ->

State 4:
## Known stack suffix:
## Ttype
## LR(1) items:
tokendecl -> Ttype . Ttypedecl idlist [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
-- On Ttypedecl shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## Ttype Ttypedecl
## LR(1) items:
tokendecl -> Ttype Ttypedecl . idlist [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
-- On Tident shift to state 6
-- On idlist shift to state 8
## Reductions:

State 6:
## Known stack suffix:
## Tident
## LR(1) items:
idlist -> Tident . [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
idlist -> Tident . idlist [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
-- On Tident shift to state 6
-- On idlist shift to state 7
## Reductions:
-- On Ttype reduce production idlist -> Tident
-- On Ttoken reduce production idlist -> Tident
-- On Tstart reduce production idlist -> Tident
-- On Tright reduce production idlist -> Tident
-- On Tnonassoc reduce production idlist -> Tident
-- On Tmark reduce production idlist -> Tident
-- On Tleft reduce production idlist -> Tident

State 7:
## Known stack suffix:
## Tident idlist
## LR(1) items:
idlist -> Tident idlist . [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
## Reductions:
-- On Ttype reduce production idlist -> Tident idlist
-- On Ttoken reduce production idlist -> Tident idlist
-- On Tstart reduce production idlist -> Tident idlist
-- On Tright reduce production idlist -> Tident idlist
-- On Tnonassoc reduce production idlist -> Tident idlist
-- On Tmark reduce production idlist -> Tident idlist
-- On Tleft reduce production idlist -> Tident idlist

State 8:
## Known stack suffix:
## Ttype Ttypedecl idlist
## LR(1) items:
tokendecl -> Ttype Ttypedecl idlist . [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
## Reductions:
-- On Ttype reduce production tokendecl -> Ttype Ttypedecl idlist
-- On Ttoken reduce production tokendecl -> Ttype Ttypedecl idlist
-- On Tstart reduce production tokendecl -> Ttype Ttypedecl idlist
-- On Tright reduce production tokendecl -> Ttype Ttypedecl idlist
-- On Tnonassoc reduce production tokendecl -> Ttype Ttypedecl idlist
-- On Tmark reduce production tokendecl -> Ttype Ttypedecl idlist
-- On Tleft reduce production tokendecl -> Ttype Ttypedecl idlist

State 9:
## Known stack suffix:
## Ttoken
## LR(1) items:
tokendecl -> Ttoken . Ttypedecl idlist [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
tokendecl -> Ttoken . idlist [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
-- On Ttypedecl shift to state 10
-- On Tident shift to state 6
-- On idlist shift to state 12
## Reductions:

State 10:
## Known stack suffix:
## Ttoken Ttypedecl
## LR(1) items:
tokendecl -> Ttoken Ttypedecl . idlist [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
-- On Tident shift to state 6
-- On idlist shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## Ttoken Ttypedecl idlist
## LR(1) items:
tokendecl -> Ttoken Ttypedecl idlist . [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
## Reductions:
-- On Ttype reduce production tokendecl -> Ttoken Ttypedecl idlist
-- On Ttoken reduce production tokendecl -> Ttoken Ttypedecl idlist
-- On Tstart reduce production tokendecl -> Ttoken Ttypedecl idlist
-- On Tright reduce production tokendecl -> Ttoken Ttypedecl idlist
-- On Tnonassoc reduce production tokendecl -> Ttoken Ttypedecl idlist
-- On Tmark reduce production tokendecl -> Ttoken Ttypedecl idlist
-- On Tleft reduce production tokendecl -> Ttoken Ttypedecl idlist

State 12:
## Known stack suffix:
## Ttoken idlist
## LR(1) items:
tokendecl -> Ttoken idlist . [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
## Reductions:
-- On Ttype reduce production tokendecl -> Ttoken idlist
-- On Ttoken reduce production tokendecl -> Ttoken idlist
-- On Tstart reduce production tokendecl -> Ttoken idlist
-- On Tright reduce production tokendecl -> Ttoken idlist
-- On Tnonassoc reduce production tokendecl -> Ttoken idlist
-- On Tmark reduce production tokendecl -> Ttoken idlist
-- On Tleft reduce production tokendecl -> Ttoken idlist

State 13:
## Known stack suffix:
## Tstart
## LR(1) items:
tokendecl -> Tstart . idlist [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
-- On Tident shift to state 6
-- On idlist shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## Tstart idlist
## LR(1) items:
tokendecl -> Tstart idlist . [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
## Reductions:
-- On Ttype reduce production tokendecl -> Tstart idlist
-- On Ttoken reduce production tokendecl -> Tstart idlist
-- On Tstart reduce production tokendecl -> Tstart idlist
-- On Tright reduce production tokendecl -> Tstart idlist
-- On Tnonassoc reduce production tokendecl -> Tstart idlist
-- On Tmark reduce production tokendecl -> Tstart idlist
-- On Tleft reduce production tokendecl -> Tstart idlist

State 15:
## Known stack suffix:
## Tright
## LR(1) items:
tokendecl -> Tright . idlist [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
-- On Tident shift to state 6
-- On idlist shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## Tright idlist
## LR(1) items:
tokendecl -> Tright idlist . [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
## Reductions:
-- On Ttype reduce production tokendecl -> Tright idlist
-- On Ttoken reduce production tokendecl -> Tright idlist
-- On Tstart reduce production tokendecl -> Tright idlist
-- On Tright reduce production tokendecl -> Tright idlist
-- On Tnonassoc reduce production tokendecl -> Tright idlist
-- On Tmark reduce production tokendecl -> Tright idlist
-- On Tleft reduce production tokendecl -> Tright idlist

State 17:
## Known stack suffix:
## Tnonassoc
## LR(1) items:
tokendecl -> Tnonassoc . idlist [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
-- On Tident shift to state 6
-- On idlist shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## Tnonassoc idlist
## LR(1) items:
tokendecl -> Tnonassoc idlist . [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
## Reductions:
-- On Ttype reduce production tokendecl -> Tnonassoc idlist
-- On Ttoken reduce production tokendecl -> Tnonassoc idlist
-- On Tstart reduce production tokendecl -> Tnonassoc idlist
-- On Tright reduce production tokendecl -> Tnonassoc idlist
-- On Tnonassoc reduce production tokendecl -> Tnonassoc idlist
-- On Tmark reduce production tokendecl -> Tnonassoc idlist
-- On Tleft reduce production tokendecl -> Tnonassoc idlist

State 19:
## Known stack suffix:
## Tleft
## LR(1) items:
tokendecl -> Tleft . idlist [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
-- On Tident shift to state 6
-- On idlist shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## Tleft idlist
## LR(1) items:
tokendecl -> Tleft idlist . [ Ttype Ttoken Tstart Tright Tnonassoc Tmark Tleft ]
## Transitions:
## Reductions:
-- On Ttype reduce production tokendecl -> Tleft idlist
-- On Ttoken reduce production tokendecl -> Tleft idlist
-- On Tstart reduce production tokendecl -> Tleft idlist
-- On Tright reduce production tokendecl -> Tleft idlist
-- On Tnonassoc reduce production tokendecl -> Tleft idlist
-- On Tmark reduce production tokendecl -> Tleft idlist
-- On Tleft reduce production tokendecl -> Tleft idlist

State 21:
## Known stack suffix:
## header tokendecls
## LR(1) items:
yacc_definitions -> header tokendecls . Tmark rules header EOF [ # ]
## Transitions:
-- On Tmark shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## header tokendecls Tmark
## LR(1) items:
yacc_definitions -> header tokendecls Tmark . rules header EOF [ # ]
## Transitions:
-- On Tident shift to state 23
-- On rules shift to state 39
-- On rule shift to state 42
-- On general_rule shift to state 44
## Reductions:
-- On Taction reduce production rules ->
-- On EOF reduce production rules ->

State 23:
## Known stack suffix:
## Tident
## LR(1) items:
rule -> Tident . Tcolon right_part [ Tsemicolon Tident Taction EOF ]
rule -> Tident . Tcolon Tor right_part [ Tsemicolon Tident Taction EOF ]
## Transitions:
-- On Tcolon shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## Tident Tcolon
## LR(1) items:
rule -> Tident Tcolon . right_part [ Tsemicolon Tident Taction EOF ]
rule -> Tident Tcolon . Tor right_part [ Tsemicolon Tident Taction EOF ]
## Transitions:
-- On Tprec shift to state 25
-- On Tor shift to state 32
-- On Tident shift to state 27
-- On Terror shift to state 28
-- On word shift to state 33
-- On right_part shift to state 38
## Reductions:
-- On Taction reduce production word ->

State 25:
## Known stack suffix:
## Tprec
## LR(1) items:
word -> Tprec . Tident word [ Taction ]
## Transitions:
-- On Tident shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## Tprec Tident
## LR(1) items:
word -> Tprec Tident . word [ Taction ]
## Transitions:
-- On Tprec shift to state 25
-- On Tident shift to state 27
-- On Terror shift to state 28
-- On word shift to state 31
## Reductions:
-- On Taction reduce production word ->

State 27:
## Known stack suffix:
## Tident
## LR(1) items:
word -> Tident . word [ Taction ]
## Transitions:
-- On Tprec shift to state 25
-- On Tident shift to state 27
-- On Terror shift to state 28
-- On word shift to state 30
## Reductions:
-- On Taction reduce production word ->

State 28:
## Known stack suffix:
## Terror
## LR(1) items:
word -> Terror . word [ Taction ]
## Transitions:
-- On Tprec shift to state 25
-- On Tident shift to state 27
-- On Terror shift to state 28
-- On word shift to state 29
## Reductions:
-- On Taction reduce production word ->

State 29:
## Known stack suffix:
## Terror word
## LR(1) items:
word -> Terror word . [ Taction ]
## Transitions:
## Reductions:
-- On Taction reduce production word -> Terror word

State 30:
## Known stack suffix:
## Tident word
## LR(1) items:
word -> Tident word . [ Taction ]
## Transitions:
## Reductions:
-- On Taction reduce production word -> Tident word

State 31:
## Known stack suffix:
## Tprec Tident word
## LR(1) items:
word -> Tprec Tident word . [ Taction ]
## Transitions:
## Reductions:
-- On Taction reduce production word -> Tprec Tident word

State 32:
## Known stack suffix:
## Tident Tcolon Tor
## LR(1) items:
rule -> Tident Tcolon Tor . right_part [ Tsemicolon Tident Taction EOF ]
## Transitions:
-- On Tprec shift to state 25
-- On Tident shift to state 27
-- On Terror shift to state 28
-- On word shift to state 33
-- On right_part shift to state 37
## Reductions:
-- On Taction reduce production word ->

State 33:
## Known stack suffix:
## word
## LR(1) items:
right_part -> word . Taction [ Tsemicolon Tident Taction EOF ]
right_part -> word . Taction Tor right_part [ Tsemicolon Tident Taction EOF ]
## Transitions:
-- On Taction shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## word Taction
## LR(1) items:
right_part -> word Taction . [ Tsemicolon Tident Taction EOF ]
right_part -> word Taction . Tor right_part [ Tsemicolon Tident Taction EOF ]
## Transitions:
-- On Tor shift to state 35
## Reductions:
-- On Tsemicolon reduce production right_part -> word Taction
-- On Tident reduce production right_part -> word Taction
-- On Taction reduce production right_part -> word Taction
-- On EOF reduce production right_part -> word Taction

State 35:
## Known stack suffix:
## word Taction Tor
## LR(1) items:
right_part -> word Taction Tor . right_part [ Tsemicolon Tident Taction EOF ]
## Transitions:
-- On Tprec shift to state 25
-- On Tident shift to state 27
-- On Terror shift to state 28
-- On word shift to state 33
-- On right_part shift to state 36
## Reductions:
-- On Taction reduce production word ->

State 36:
## Known stack suffix:
## word Taction Tor right_part
## LR(1) items:
right_part -> word Taction Tor right_part . [ Tsemicolon Tident Taction EOF ]
## Transitions:
## Reductions:
-- On Tsemicolon reduce production right_part -> word Taction Tor right_part
-- On Tident reduce production right_part -> word Taction Tor right_part
-- On Taction reduce production right_part -> word Taction Tor right_part
-- On EOF reduce production right_part -> word Taction Tor right_part

State 37:
## Known stack suffix:
## Tident Tcolon Tor right_part
## LR(1) items:
rule -> Tident Tcolon Tor right_part . [ Tsemicolon Tident Taction EOF ]
## Transitions:
## Reductions:
-- On Tsemicolon reduce production rule -> Tident Tcolon Tor right_part
-- On Tident reduce production rule -> Tident Tcolon Tor right_part
-- On Taction reduce production rule -> Tident Tcolon Tor right_part
-- On EOF reduce production rule -> Tident Tcolon Tor right_part

State 38:
## Known stack suffix:
## Tident Tcolon right_part
## LR(1) items:
rule -> Tident Tcolon right_part . [ Tsemicolon Tident Taction EOF ]
## Transitions:
## Reductions:
-- On Tsemicolon reduce production rule -> Tident Tcolon right_part
-- On Tident reduce production rule -> Tident Tcolon right_part
-- On Taction reduce production rule -> Tident Tcolon right_part
-- On EOF reduce production rule -> Tident Tcolon right_part

State 39:
## Known stack suffix:
## header tokendecls Tmark rules
## LR(1) items:
yacc_definitions -> header tokendecls Tmark rules . header EOF [ # ]
## Transitions:
-- On Taction shift to state 1
-- On header shift to state 40
## Reductions:
-- On EOF reduce production header ->

State 40:
## Known stack suffix:
## header tokendecls Tmark rules header
## LR(1) items:
yacc_definitions -> header tokendecls Tmark rules header . EOF [ # ]
## Transitions:
-- On EOF shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## header tokendecls Tmark rules header EOF
## LR(1) items:
yacc_definitions -> header tokendecls Tmark rules header EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production yacc_definitions -> header tokendecls Tmark rules header EOF

State 42:
## Known stack suffix:
## rule
## LR(1) items:
general_rule -> rule . Tsemicolon [ Tident Taction EOF ]
general_rule -> rule . [ Tident Taction EOF ]
## Transitions:
-- On Tsemicolon shift to state 43
## Reductions:
-- On Tident reduce production general_rule -> rule
-- On Taction reduce production general_rule -> rule
-- On EOF reduce production general_rule -> rule

State 43:
## Known stack suffix:
## rule Tsemicolon
## LR(1) items:
general_rule -> rule Tsemicolon . [ Tident Taction EOF ]
## Transitions:
## Reductions:
-- On Tident reduce production general_rule -> rule Tsemicolon
-- On Taction reduce production general_rule -> rule Tsemicolon
-- On EOF reduce production general_rule -> rule Tsemicolon

State 44:
## Known stack suffix:
## general_rule
## LR(1) items:
rules -> general_rule . rules [ Taction EOF ]
## Transitions:
-- On Tident shift to state 23
-- On rules shift to state 45
-- On rule shift to state 42
-- On general_rule shift to state 44
## Reductions:
-- On Taction reduce production rules ->
-- On EOF reduce production rules ->

State 45:
## Known stack suffix:
## general_rule rules
## LR(1) items:
rules -> general_rule rules . [ Taction EOF ]
## Transitions:
## Reductions:
-- On Taction reduce production rules -> general_rule rules
-- On EOF reduce production rules -> general_rule rules

State 46:
## Known stack suffix:
## tokendecl
## LR(1) items:
tokendecls -> tokendecl . tokendecls [ Tmark ]
## Transitions:
-- On Ttype shift to state 4
-- On Ttoken shift to state 9
-- On Tstart shift to state 13
-- On Tright shift to state 15
-- On Tnonassoc shift to state 17
-- On Tleft shift to state 19
-- On tokendecls shift to state 47
-- On tokendecl shift to state 46
## Reductions:
-- On Tmark reduce production tokendecls ->

State 47:
## Known stack suffix:
## tokendecl tokendecls
## LR(1) items:
tokendecls -> tokendecl tokendecls . [ Tmark ]
## Transitions:
## Reductions:
-- On Tmark reduce production tokendecls -> tokendecl tokendecls

