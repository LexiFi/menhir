State 0:
## Known stack suffix:
##
## LR(1) items:
entry' -> . entry [ # ]
## Transitions:
-- On LPAREN shift to state 1
-- On INTEGER shift to state 2
-- On DASH shift to state 3
-- On formula shift to state 17
-- On entry shift to state 19
## Reductions:

State 1:
## Known stack suffix:
## LPAREN
## LR(1) items:
formula -> LPAREN . formula RPAREN [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On LPAREN shift to state 1
-- On INTEGER shift to state 2
-- On DASH shift to state 3
-- On formula shift to state 7
## Reductions:

State 2:
## Known stack suffix:
## INTEGER
## LR(1) items:
formula -> INTEGER . [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
## Reductions:
-- On STAR reduce production formula -> INTEGER
-- On SLASH reduce production formula -> INTEGER
-- On RPAREN reduce production formula -> INTEGER
-- On PLUS reduce production formula -> INTEGER
-- On EOF reduce production formula -> INTEGER
-- On DASH reduce production formula -> INTEGER
-- On D reduce production formula -> INTEGER

State 3:
## Known stack suffix:
## DASH
## LR(1) items:
formula -> DASH . formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On LPAREN shift to state 1
-- On INTEGER shift to state 2
-- On DASH shift to state 3
-- On formula shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## DASH formula
## LR(1) items:
formula -> formula . D formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . PLUS formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . DASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . STAR formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . SLASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> DASH formula . [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On D shift to state 5
## Reductions:
-- On STAR reduce production formula -> DASH formula
-- On SLASH reduce production formula -> DASH formula
-- On RPAREN reduce production formula -> DASH formula
-- On PLUS reduce production formula -> DASH formula
-- On EOF reduce production formula -> DASH formula
-- On DASH reduce production formula -> DASH formula

State 5:
## Known stack suffix:
## formula D
## LR(1) items:
formula -> formula D . formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On LPAREN shift to state 1
-- On INTEGER shift to state 2
-- On DASH shift to state 3
-- On formula shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## formula D formula
## LR(1) items:
formula -> formula . D formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula D formula . [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . PLUS formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . DASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . STAR formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . SLASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
## Reductions:
-- On STAR reduce production formula -> formula D formula
-- On SLASH reduce production formula -> formula D formula
-- On RPAREN reduce production formula -> formula D formula
-- On PLUS reduce production formula -> formula D formula
-- On EOF reduce production formula -> formula D formula
-- On DASH reduce production formula -> formula D formula
-- On D reduce production formula -> formula D formula

State 7:
## Known stack suffix:
## LPAREN formula
## LR(1) items:
formula -> LPAREN formula . RPAREN [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . D formula [ STAR SLASH RPAREN PLUS DASH D ]
formula -> formula . PLUS formula [ STAR SLASH RPAREN PLUS DASH D ]
formula -> formula . DASH formula [ STAR SLASH RPAREN PLUS DASH D ]
formula -> formula . STAR formula [ STAR SLASH RPAREN PLUS DASH D ]
formula -> formula . SLASH formula [ STAR SLASH RPAREN PLUS DASH D ]
## Transitions:
-- On STAR shift to state 8
-- On SLASH shift to state 10
-- On RPAREN shift to state 12
-- On PLUS shift to state 13
-- On DASH shift to state 15
-- On D shift to state 5
## Reductions:

State 8:
## Known stack suffix:
## formula STAR
## LR(1) items:
formula -> formula STAR . formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On LPAREN shift to state 1
-- On INTEGER shift to state 2
-- On DASH shift to state 3
-- On formula shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## formula STAR formula
## LR(1) items:
formula -> formula . D formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . PLUS formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . DASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . STAR formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula STAR formula . [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . SLASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On D shift to state 5
## Reductions:
-- On STAR reduce production formula -> formula STAR formula
-- On SLASH reduce production formula -> formula STAR formula
-- On RPAREN reduce production formula -> formula STAR formula
-- On PLUS reduce production formula -> formula STAR formula
-- On EOF reduce production formula -> formula STAR formula
-- On DASH reduce production formula -> formula STAR formula

State 10:
## Known stack suffix:
## formula SLASH
## LR(1) items:
formula -> formula SLASH . formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On LPAREN shift to state 1
-- On INTEGER shift to state 2
-- On DASH shift to state 3
-- On formula shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## formula SLASH formula
## LR(1) items:
formula -> formula . D formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . PLUS formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . DASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . STAR formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . SLASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula SLASH formula . [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On D shift to state 5
## Reductions:
-- On STAR reduce production formula -> formula SLASH formula
-- On SLASH reduce production formula -> formula SLASH formula
-- On RPAREN reduce production formula -> formula SLASH formula
-- On PLUS reduce production formula -> formula SLASH formula
-- On EOF reduce production formula -> formula SLASH formula
-- On DASH reduce production formula -> formula SLASH formula

State 12:
## Known stack suffix:
## LPAREN formula RPAREN
## LR(1) items:
formula -> LPAREN formula RPAREN . [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
## Reductions:
-- On STAR reduce production formula -> LPAREN formula RPAREN
-- On SLASH reduce production formula -> LPAREN formula RPAREN
-- On RPAREN reduce production formula -> LPAREN formula RPAREN
-- On PLUS reduce production formula -> LPAREN formula RPAREN
-- On EOF reduce production formula -> LPAREN formula RPAREN
-- On DASH reduce production formula -> LPAREN formula RPAREN
-- On D reduce production formula -> LPAREN formula RPAREN

State 13:
## Known stack suffix:
## formula PLUS
## LR(1) items:
formula -> formula PLUS . formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On LPAREN shift to state 1
-- On INTEGER shift to state 2
-- On DASH shift to state 3
-- On formula shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## formula PLUS formula
## LR(1) items:
formula -> formula . D formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . PLUS formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula PLUS formula . [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . DASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . STAR formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . SLASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On STAR shift to state 8
-- On SLASH shift to state 10
-- On D shift to state 5
## Reductions:
-- On RPAREN reduce production formula -> formula PLUS formula
-- On PLUS reduce production formula -> formula PLUS formula
-- On EOF reduce production formula -> formula PLUS formula
-- On DASH reduce production formula -> formula PLUS formula

State 15:
## Known stack suffix:
## formula DASH
## LR(1) items:
formula -> formula DASH . formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On LPAREN shift to state 1
-- On INTEGER shift to state 2
-- On DASH shift to state 3
-- On formula shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## formula DASH formula
## LR(1) items:
formula -> formula . D formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . PLUS formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . DASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula DASH formula . [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . STAR formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
formula -> formula . SLASH formula [ STAR SLASH RPAREN PLUS EOF DASH D ]
## Transitions:
-- On STAR shift to state 8
-- On SLASH shift to state 10
-- On D shift to state 5
## Reductions:
-- On RPAREN reduce production formula -> formula DASH formula
-- On PLUS reduce production formula -> formula DASH formula
-- On EOF reduce production formula -> formula DASH formula
-- On DASH reduce production formula -> formula DASH formula

State 17:
## Known stack suffix:
## formula
## LR(1) items:
entry -> formula . EOF [ # ]
formula -> formula . D formula [ STAR SLASH PLUS EOF DASH D ]
formula -> formula . PLUS formula [ STAR SLASH PLUS EOF DASH D ]
formula -> formula . DASH formula [ STAR SLASH PLUS EOF DASH D ]
formula -> formula . STAR formula [ STAR SLASH PLUS EOF DASH D ]
formula -> formula . SLASH formula [ STAR SLASH PLUS EOF DASH D ]
## Transitions:
-- On STAR shift to state 8
-- On SLASH shift to state 10
-- On PLUS shift to state 13
-- On EOF shift to state 18
-- On DASH shift to state 15
-- On D shift to state 5
## Reductions:

State 18:
## Known stack suffix:
## formula EOF
## LR(1) items:
entry -> formula EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production entry -> formula EOF

State 19:
## Known stack suffix:
## entry
## LR(1) items:
entry' -> entry . [ # ]
## Transitions:
## Reductions:
-- On # accept entry

