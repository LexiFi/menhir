State 0:
top_level_program' -> . top_level_program [ # ]
-- On top_level_program shift to state 1
-- On program shift to state 2
-- On code_list shift to state 4
-- On TERMINATE reduce production code_list -> 
-- On STATIC reduce production code_list -> 
-- On SOURCE reduce production code_list -> 
-- On SEQUENCE reduce production code_list -> 
-- On READWRITE reduce production code_list -> 
-- On PRECEDENCE reduce production code_list -> 
-- On POOL reduce production code_list -> 
-- On PLUGIN reduce production code_list -> 
-- On NODE reduce production code_list -> 
-- On MODULE reduce production code_list -> 
-- On INSTANCE reduce production code_list -> 
-- On INITIAL reduce production code_list -> 
-- On IDENTIFIER reduce production code_list -> 
-- On HANDLE reduce production code_list -> 
-- On FREE reduce production code_list -> 
-- On EXTERNAL reduce production code_list -> 
-- On EXCLUSIVE reduce production code_list -> 
-- On ENDOFFILE reduce production code_list -> 
-- On DOOR reduce production code_list -> 
-- On DEPENDS reduce production code_list -> 
-- On CONDITION reduce production code_list -> 

State 1:
top_level_program' -> top_level_program . [ # ]
-- On # accept top_level_program

State 2:
top_level_program -> program . ENDOFFILE [ # ]
-- On ENDOFFILE shift to state 3

State 3:
top_level_program -> program ENDOFFILE . [ # ]
-- On # reduce production top_level_program -> program ENDOFFILE

State 4:
code_list -> code_list . main_fn [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
code_list -> code_list . expr_part [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
code_list -> code_list . err_def [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
code_list -> code_list . mod_inst [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
code_list -> code_list . node_decl [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
code_list -> code_list . atom_decl [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
code_list -> code_list . cond_decl [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
code_list -> code_list . mod_decl [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
code_list -> code_list . plugin_decl [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
code_list -> code_list . plugin_depends_decl [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
code_list -> code_list . term_decl [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
code_list -> code_list . guard_order_decl [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
program -> code_list . [ ENDOFFILE END ]
-- On TERMINATE shift to state 5
-- On STATIC shift to state 11
-- On SOURCE shift to state 12
-- On PRECEDENCE shift to state 13
-- On PLUGIN shift to state 21
-- On INITIAL shift to state 26
-- On IDENTIFIER shift to state 27
-- On HANDLE shift to state 52
-- On EXTERNAL shift to state 58
-- On DOOR shift to state 59
-- On DEPENDS shift to state 60
-- On term_decl shift to state 63
-- On source_or_initial_or_door shift to state 64
-- On plugin_depends_decl shift to state 70
-- On plugin_decl shift to state 71
-- On node_decl shift to state 72
-- On mod_modifier_list shift to state 73
-- On mod_modifier shift to state 79
-- On mod_inst shift to state 81
-- On mod_decl shift to state 82
-- On main_fn shift to state 83
-- On guard_order_decl shift to state 84
-- On external_opt shift to state 85
-- On expr_part shift to state 244
-- On err_def shift to state 245
-- On cond_decl shift to state 246
-- On atom_decl shift to state 247
-- On assn shift to state 248
-- On SEQUENCE reduce production external_opt -> 
-- On READWRITE reduce production external_opt -> 
-- On POOL reduce production external_opt -> 
-- On NODE reduce production external_opt -> 
-- On MODULE reduce production mod_modifier_list -> 
-- On INSTANCE reduce production external_opt -> 
-- On FREE reduce production external_opt -> 
-- On EXCLUSIVE reduce production external_opt -> 
-- On ENDOFFILE reduce production program -> code_list
-- On END reduce production program -> code_list
-- On CONDITION reduce production external_opt -> 

State 5:
term_decl -> TERMINATE . namespaced_ident SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 9

State 6:
namespaced_ident -> IDENTIFIER . [ SEMI PIPE LEFT_PAREN IDENTIFIER BEGIN AMPERSAND ]
namespaced_ident -> IDENTIFIER . DOUBLECOLON namespaced_ident [ SEMI PIPE LEFT_PAREN IDENTIFIER BEGIN AMPERSAND ]
-- On DOUBLECOLON shift to state 7
-- On SEMI reduce production namespaced_ident -> IDENTIFIER
-- On PIPE reduce production namespaced_ident -> IDENTIFIER
-- On LEFT_PAREN reduce production namespaced_ident -> IDENTIFIER
-- On IDENTIFIER reduce production namespaced_ident -> IDENTIFIER
-- On BEGIN reduce production namespaced_ident -> IDENTIFIER
-- On AMPERSAND reduce production namespaced_ident -> IDENTIFIER

State 7:
namespaced_ident -> IDENTIFIER DOUBLECOLON . namespaced_ident [ SEMI PIPE LEFT_PAREN IDENTIFIER BEGIN AMPERSAND ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 8

State 8:
namespaced_ident -> IDENTIFIER DOUBLECOLON namespaced_ident . [ SEMI PIPE LEFT_PAREN IDENTIFIER BEGIN AMPERSAND ]
-- On SEMI reduce production namespaced_ident -> IDENTIFIER DOUBLECOLON namespaced_ident
-- On PIPE reduce production namespaced_ident -> IDENTIFIER DOUBLECOLON namespaced_ident
-- On LEFT_PAREN reduce production namespaced_ident -> IDENTIFIER DOUBLECOLON namespaced_ident
-- On IDENTIFIER reduce production namespaced_ident -> IDENTIFIER DOUBLECOLON namespaced_ident
-- On BEGIN reduce production namespaced_ident -> IDENTIFIER DOUBLECOLON namespaced_ident
-- On AMPERSAND reduce production namespaced_ident -> IDENTIFIER DOUBLECOLON namespaced_ident

State 9:
term_decl -> TERMINATE namespaced_ident . SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SEMI shift to state 10

State 10:
term_decl -> TERMINATE namespaced_ident SEMI . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On STATIC reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On SOURCE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On SEQUENCE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On READWRITE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On PRECEDENCE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On POOL reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On PLUGIN reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On NODE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On MODULE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On INSTANCE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On INITIAL reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On IDENTIFIER reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On HANDLE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On FREE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On EXTERNAL reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On EXCLUSIVE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On ENDOFFILE reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On END reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On DOOR reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On DEPENDS reduce production term_decl -> TERMINATE namespaced_ident SEMI
-- On CONDITION reduce production term_decl -> TERMINATE namespaced_ident SEMI

State 11:
mod_modifier -> STATIC . [ STATIC MODULE ]
-- On STATIC reduce production mod_modifier -> STATIC
-- On MODULE reduce production mod_modifier -> STATIC

State 12:
source_or_initial_or_door -> SOURCE . [ IDENTIFIER ]
-- On IDENTIFIER reduce production source_or_initial_or_door -> SOURCE

State 13:
guard_order_decl -> PRECEDENCE . guard_order_list SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 14
-- On ident shift to state 15
-- On guard_order_list shift to state 19

State 14:
ident -> IDENTIFIER . [ STAR SEMI RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production ident -> IDENTIFIER
-- On SEMI reduce production ident -> IDENTIFIER
-- On RIGHT_SQ_BRACE reduce production ident -> IDENTIFIER
-- On RIGHT_PAREN reduce production ident -> IDENTIFIER
-- On QUESTION reduce production ident -> IDENTIFIER
-- On PLUS reduce production ident -> IDENTIFIER
-- On PIPE reduce production ident -> IDENTIFIER
-- On NUMBER reduce production ident -> IDENTIFIER
-- On NOTEQUALS reduce production ident -> IDENTIFIER
-- On MINUS reduce production ident -> IDENTIFIER
-- On LESSTHAN reduce production ident -> IDENTIFIER
-- On LEFT_SQ_BRACE reduce production ident -> IDENTIFIER
-- On LEFT_PAREN reduce production ident -> IDENTIFIER
-- On ISEQUALS reduce production ident -> IDENTIFIER
-- On IDENTIFIER reduce production ident -> IDENTIFIER
-- On GREATERTHAN reduce production ident -> IDENTIFIER
-- On EXCLAMATION reduce production ident -> IDENTIFIER
-- On DOUBLECOLON reduce production ident -> IDENTIFIER
-- On DOUBLEBAR reduce production ident -> IDENTIFIER
-- On DOUBLEAMPERSAND reduce production ident -> IDENTIFIER
-- On DOT reduce production ident -> IDENTIFIER
-- On COMMA reduce production ident -> IDENTIFIER
-- On COLON reduce production ident -> IDENTIFIER
-- On BACKARROW reduce production ident -> IDENTIFIER
-- On ARROW reduce production ident -> IDENTIFIER

State 15:
guard_order_list -> ident . LESSTHAN ident [ SEMI ]
guard_order_list -> ident . LESSTHAN guard_order_list [ SEMI ]
-- On LESSTHAN shift to state 16

State 16:
guard_order_list -> ident LESSTHAN . ident [ SEMI ]
guard_order_list -> ident LESSTHAN . guard_order_list [ SEMI ]
-- On IDENTIFIER shift to state 14
-- On ident shift to state 17
-- On guard_order_list shift to state 18

State 17:
guard_order_list -> ident . LESSTHAN ident [ SEMI ]
guard_order_list -> ident LESSTHAN ident . [ SEMI ]
guard_order_list -> ident . LESSTHAN guard_order_list [ SEMI ]
-- On LESSTHAN shift to state 16
-- On SEMI reduce production guard_order_list -> ident LESSTHAN ident

State 18:
guard_order_list -> ident LESSTHAN guard_order_list . [ SEMI ]
-- On SEMI reduce production guard_order_list -> ident LESSTHAN guard_order_list

State 19:
guard_order_decl -> PRECEDENCE guard_order_list . SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SEMI shift to state 20

State 20:
guard_order_decl -> PRECEDENCE guard_order_list SEMI . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On STATIC reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On SOURCE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On SEQUENCE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On READWRITE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On PRECEDENCE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On POOL reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On PLUGIN reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On NODE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On MODULE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On INSTANCE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On INITIAL reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On IDENTIFIER reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On HANDLE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On FREE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On EXTERNAL reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On EXCLUSIVE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On ENDOFFILE reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On END reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On DOOR reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On DEPENDS reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI
-- On CONDITION reduce production guard_order_decl -> PRECEDENCE guard_order_list SEMI

State 21:
plugin_decl -> PLUGIN . namespaced_ident BEGIN program END [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 22

State 22:
plugin_decl -> PLUGIN namespaced_ident . BEGIN program END [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On BEGIN shift to state 23

State 23:
plugin_decl -> PLUGIN namespaced_ident BEGIN . program END [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On program shift to state 24
-- On code_list shift to state 4
-- On TERMINATE reduce production code_list -> 
-- On STATIC reduce production code_list -> 
-- On SOURCE reduce production code_list -> 
-- On SEQUENCE reduce production code_list -> 
-- On READWRITE reduce production code_list -> 
-- On PRECEDENCE reduce production code_list -> 
-- On POOL reduce production code_list -> 
-- On PLUGIN reduce production code_list -> 
-- On NODE reduce production code_list -> 
-- On MODULE reduce production code_list -> 
-- On INSTANCE reduce production code_list -> 
-- On INITIAL reduce production code_list -> 
-- On IDENTIFIER reduce production code_list -> 
-- On HANDLE reduce production code_list -> 
-- On FREE reduce production code_list -> 
-- On EXTERNAL reduce production code_list -> 
-- On EXCLUSIVE reduce production code_list -> 
-- On END reduce production code_list -> 
-- On DOOR reduce production code_list -> 
-- On DEPENDS reduce production code_list -> 
-- On CONDITION reduce production code_list -> 

State 24:
plugin_decl -> PLUGIN namespaced_ident BEGIN program . END [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On END shift to state 25

State 25:
plugin_decl -> PLUGIN namespaced_ident BEGIN program END . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On STATIC reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On SOURCE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On SEQUENCE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On READWRITE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On PRECEDENCE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On POOL reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On PLUGIN reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On NODE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On MODULE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On INSTANCE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On INITIAL reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On IDENTIFIER reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On HANDLE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On FREE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On EXTERNAL reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On EXCLUSIVE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On ENDOFFILE reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On END reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On DOOR reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On DEPENDS reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END
-- On CONDITION reduce production plugin_decl -> PLUGIN namespaced_ident BEGIN program END

State 26:
source_or_initial_or_door -> INITIAL . [ IDENTIFIER ]
-- On IDENTIFIER reduce production source_or_initial_or_door -> INITIAL

State 27:
assn -> IDENTIFIER . EQUALS ident_list [ SEMI ]
assn -> IDENTIFIER . COLON LEFT_SQ_BRACE comma_list RIGHT_SQ_BRACE EQUALS ident_list [ SEMI ]
assn -> IDENTIFIER . EQUALS namespaced_ident AMPERSAND par_ident_list [ SEMI ]
assn -> IDENTIFIER . AMPERSANDEQUALS namespaced_ident [ SEMI ]
-- On EQUALS shift to state 28
-- On COLON shift to state 38
-- On AMPERSANDEQUALS shift to state 50

State 28:
assn -> IDENTIFIER EQUALS . ident_list [ SEMI ]
assn -> IDENTIFIER EQUALS . namespaced_ident AMPERSAND par_ident_list [ SEMI ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 29
-- On ident_list shift to state 35
-- On SEMI reduce production ident_list -> 
-- On PIPE reduce production ident_list -> 

State 29:
assn -> IDENTIFIER EQUALS namespaced_ident . AMPERSAND par_ident_list [ SEMI ]
ident_list -> namespaced_ident . [ SEMI PIPE ]
-- On AMPERSAND shift to state 30
-- On SEMI reduce production ident_list -> namespaced_ident
-- On PIPE reduce production ident_list -> namespaced_ident

State 30:
assn -> IDENTIFIER EQUALS namespaced_ident AMPERSAND . par_ident_list [ SEMI ]
-- On IDENTIFIER shift to state 6
-- On par_ident_list shift to state 31
-- On namespaced_ident shift to state 34

State 31:
assn -> IDENTIFIER EQUALS namespaced_ident AMPERSAND par_ident_list . [ SEMI ]
par_ident_list -> par_ident_list . AMPERSAND namespaced_ident [ SEMI AMPERSAND ]
-- On AMPERSAND shift to state 32
-- On SEMI reduce production assn -> IDENTIFIER EQUALS namespaced_ident AMPERSAND par_ident_list

State 32:
par_ident_list -> par_ident_list AMPERSAND . namespaced_ident [ SEMI AMPERSAND ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 33

State 33:
par_ident_list -> par_ident_list AMPERSAND namespaced_ident . [ SEMI AMPERSAND ]
-- On SEMI reduce production par_ident_list -> par_ident_list AMPERSAND namespaced_ident
-- On AMPERSAND reduce production par_ident_list -> par_ident_list AMPERSAND namespaced_ident

State 34:
par_ident_list -> namespaced_ident . [ SEMI AMPERSAND ]
-- On SEMI reduce production par_ident_list -> namespaced_ident
-- On AMPERSAND reduce production par_ident_list -> namespaced_ident

State 35:
assn -> IDENTIFIER EQUALS ident_list . [ SEMI ]
ident_list -> ident_list . PIPE namespaced_ident [ SEMI PIPE ]
-- On PIPE shift to state 36
-- On SEMI reduce production assn -> IDENTIFIER EQUALS ident_list

State 36:
ident_list -> ident_list PIPE . namespaced_ident [ SEMI PIPE ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 37

State 37:
ident_list -> ident_list PIPE namespaced_ident . [ SEMI PIPE ]
-- On SEMI reduce production ident_list -> ident_list PIPE namespaced_ident
-- On PIPE reduce production ident_list -> ident_list PIPE namespaced_ident

State 38:
assn -> IDENTIFIER COLON . LEFT_SQ_BRACE comma_list RIGHT_SQ_BRACE EQUALS ident_list [ SEMI ]
-- On LEFT_SQ_BRACE shift to state 39

State 39:
assn -> IDENTIFIER COLON LEFT_SQ_BRACE . comma_list RIGHT_SQ_BRACE EQUALS ident_list [ SEMI ]
-- On STAR shift to state 40
-- On IDENTIFIER shift to state 41
-- On comma_list shift to state 42

State 40:
comma_list -> STAR . [ RIGHT_SQ_BRACE COMMA ]
-- On RIGHT_SQ_BRACE reduce production comma_list -> STAR
-- On COMMA reduce production comma_list -> STAR

State 41:
comma_list -> IDENTIFIER . [ RIGHT_SQ_BRACE COMMA ]
-- On RIGHT_SQ_BRACE reduce production comma_list -> IDENTIFIER
-- On COMMA reduce production comma_list -> IDENTIFIER

State 42:
assn -> IDENTIFIER COLON LEFT_SQ_BRACE comma_list . RIGHT_SQ_BRACE EQUALS ident_list [ SEMI ]
comma_list -> comma_list . COMMA IDENTIFIER [ RIGHT_SQ_BRACE COMMA ]
comma_list -> comma_list . COMMA STAR [ RIGHT_SQ_BRACE COMMA ]
-- On RIGHT_SQ_BRACE shift to state 43
-- On COMMA shift to state 47

State 43:
assn -> IDENTIFIER COLON LEFT_SQ_BRACE comma_list RIGHT_SQ_BRACE . EQUALS ident_list [ SEMI ]
-- On EQUALS shift to state 44

State 44:
assn -> IDENTIFIER COLON LEFT_SQ_BRACE comma_list RIGHT_SQ_BRACE EQUALS . ident_list [ SEMI ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 45
-- On ident_list shift to state 46
-- On SEMI reduce production ident_list -> 
-- On PIPE reduce production ident_list -> 

State 45:
ident_list -> namespaced_ident . [ SEMI PIPE ]
-- On SEMI reduce production ident_list -> namespaced_ident
-- On PIPE reduce production ident_list -> namespaced_ident

State 46:
assn -> IDENTIFIER COLON LEFT_SQ_BRACE comma_list RIGHT_SQ_BRACE EQUALS ident_list . [ SEMI ]
ident_list -> ident_list . PIPE namespaced_ident [ SEMI PIPE ]
-- On PIPE shift to state 36
-- On SEMI reduce production assn -> IDENTIFIER COLON LEFT_SQ_BRACE comma_list RIGHT_SQ_BRACE EQUALS ident_list

State 47:
comma_list -> comma_list COMMA . IDENTIFIER [ RIGHT_SQ_BRACE COMMA ]
comma_list -> comma_list COMMA . STAR [ RIGHT_SQ_BRACE COMMA ]
-- On STAR shift to state 48
-- On IDENTIFIER shift to state 49

State 48:
comma_list -> comma_list COMMA STAR . [ RIGHT_SQ_BRACE COMMA ]
-- On RIGHT_SQ_BRACE reduce production comma_list -> comma_list COMMA STAR
-- On COMMA reduce production comma_list -> comma_list COMMA STAR

State 49:
comma_list -> comma_list COMMA IDENTIFIER . [ RIGHT_SQ_BRACE COMMA ]
-- On RIGHT_SQ_BRACE reduce production comma_list -> comma_list COMMA IDENTIFIER
-- On COMMA reduce production comma_list -> comma_list COMMA IDENTIFIER

State 50:
assn -> IDENTIFIER AMPERSANDEQUALS . namespaced_ident [ SEMI ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 51

State 51:
assn -> IDENTIFIER AMPERSANDEQUALS namespaced_ident . [ SEMI ]
-- On SEMI reduce production assn -> IDENTIFIER AMPERSANDEQUALS namespaced_ident

State 52:
err_def -> HANDLE . ERROR ident_list PIPE namespaced_ident SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On ERROR shift to state 53

State 53:
err_def -> HANDLE ERROR . ident_list PIPE namespaced_ident SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 45
-- On ident_list shift to state 54
-- On PIPE reduce production ident_list -> 

State 54:
err_def -> HANDLE ERROR ident_list . PIPE namespaced_ident SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
ident_list -> ident_list . PIPE namespaced_ident [ PIPE ]
-- On PIPE shift to state 55

State 55:
err_def -> HANDLE ERROR ident_list PIPE . namespaced_ident SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
ident_list -> ident_list PIPE . namespaced_ident [ PIPE ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 56

State 56:
err_def -> HANDLE ERROR ident_list PIPE namespaced_ident . SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
ident_list -> ident_list PIPE namespaced_ident . [ PIPE ]
-- On SEMI shift to state 57
-- On PIPE reduce production ident_list -> ident_list PIPE namespaced_ident

State 57:
err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On STATIC reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On SOURCE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On SEQUENCE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On READWRITE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On PRECEDENCE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On POOL reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On PLUGIN reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On NODE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On MODULE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On INSTANCE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On INITIAL reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On IDENTIFIER reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On HANDLE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On FREE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On EXTERNAL reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On EXCLUSIVE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On ENDOFFILE reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On END reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On DOOR reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On DEPENDS reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI
-- On CONDITION reduce production err_def -> HANDLE ERROR ident_list PIPE namespaced_ident SEMI

State 58:
external_opt -> EXTERNAL . [ SEQUENCE READWRITE POOL NODE INSTANCE FREE EXCLUSIVE CONDITION ]
-- On SEQUENCE reduce production external_opt -> EXTERNAL
-- On READWRITE reduce production external_opt -> EXTERNAL
-- On POOL reduce production external_opt -> EXTERNAL
-- On NODE reduce production external_opt -> EXTERNAL
-- On INSTANCE reduce production external_opt -> EXTERNAL
-- On FREE reduce production external_opt -> EXTERNAL
-- On EXCLUSIVE reduce production external_opt -> EXTERNAL
-- On CONDITION reduce production external_opt -> EXTERNAL

State 59:
source_or_initial_or_door -> DOOR . [ IDENTIFIER ]
-- On IDENTIFIER reduce production source_or_initial_or_door -> DOOR

State 60:
plugin_depends_decl -> DEPENDS . namespaced_ident SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 61

State 61:
plugin_depends_decl -> DEPENDS namespaced_ident . SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SEMI shift to state 62

State 62:
plugin_depends_decl -> DEPENDS namespaced_ident SEMI . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On STATIC reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On SOURCE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On SEQUENCE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On READWRITE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On PRECEDENCE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On POOL reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On PLUGIN reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On NODE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On MODULE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On INSTANCE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On INITIAL reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On IDENTIFIER reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On HANDLE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On FREE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On EXTERNAL reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On EXCLUSIVE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On ENDOFFILE reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On END reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On DOOR reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On DEPENDS reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI
-- On CONDITION reduce production plugin_depends_decl -> DEPENDS namespaced_ident SEMI

State 63:
code_list -> code_list term_decl . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list term_decl
-- On STATIC reduce production code_list -> code_list term_decl
-- On SOURCE reduce production code_list -> code_list term_decl
-- On SEQUENCE reduce production code_list -> code_list term_decl
-- On READWRITE reduce production code_list -> code_list term_decl
-- On PRECEDENCE reduce production code_list -> code_list term_decl
-- On POOL reduce production code_list -> code_list term_decl
-- On PLUGIN reduce production code_list -> code_list term_decl
-- On NODE reduce production code_list -> code_list term_decl
-- On MODULE reduce production code_list -> code_list term_decl
-- On INSTANCE reduce production code_list -> code_list term_decl
-- On INITIAL reduce production code_list -> code_list term_decl
-- On IDENTIFIER reduce production code_list -> code_list term_decl
-- On HANDLE reduce production code_list -> code_list term_decl
-- On FREE reduce production code_list -> code_list term_decl
-- On EXTERNAL reduce production code_list -> code_list term_decl
-- On EXCLUSIVE reduce production code_list -> code_list term_decl
-- On ENDOFFILE reduce production code_list -> code_list term_decl
-- On END reduce production code_list -> code_list term_decl
-- On DOOR reduce production code_list -> code_list term_decl
-- On DEPENDS reduce production code_list -> code_list term_decl
-- On CONDITION reduce production code_list -> code_list term_decl

State 64:
main_fn -> source_or_initial_or_door . namespaced_ident SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
main_fn -> source_or_initial_or_door . namespaced_ident PIPE ident_list SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 65

State 65:
main_fn -> source_or_initial_or_door namespaced_ident . SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
main_fn -> source_or_initial_or_door namespaced_ident . PIPE ident_list SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SEMI shift to state 66
-- On PIPE shift to state 67

State 66:
main_fn -> source_or_initial_or_door namespaced_ident SEMI . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On STATIC reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On SOURCE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On SEQUENCE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On READWRITE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On PRECEDENCE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On POOL reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On PLUGIN reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On NODE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On MODULE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On INSTANCE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On INITIAL reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On IDENTIFIER reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On HANDLE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On FREE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On EXTERNAL reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On EXCLUSIVE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On ENDOFFILE reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On END reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On DOOR reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On DEPENDS reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI
-- On CONDITION reduce production main_fn -> source_or_initial_or_door namespaced_ident SEMI

State 67:
main_fn -> source_or_initial_or_door namespaced_ident PIPE . ident_list SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 45
-- On ident_list shift to state 68
-- On SEMI reduce production ident_list -> 
-- On PIPE reduce production ident_list -> 

State 68:
ident_list -> ident_list . PIPE namespaced_ident [ SEMI PIPE ]
main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list . SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SEMI shift to state 69
-- On PIPE shift to state 36

State 69:
main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On STATIC reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On SOURCE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On SEQUENCE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On READWRITE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On PRECEDENCE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On POOL reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On PLUGIN reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On NODE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On MODULE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On INSTANCE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On INITIAL reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On IDENTIFIER reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On HANDLE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On FREE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On EXTERNAL reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On EXCLUSIVE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On ENDOFFILE reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On END reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On DOOR reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On DEPENDS reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI
-- On CONDITION reduce production main_fn -> source_or_initial_or_door namespaced_ident PIPE ident_list SEMI

State 70:
code_list -> code_list plugin_depends_decl . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list plugin_depends_decl
-- On STATIC reduce production code_list -> code_list plugin_depends_decl
-- On SOURCE reduce production code_list -> code_list plugin_depends_decl
-- On SEQUENCE reduce production code_list -> code_list plugin_depends_decl
-- On READWRITE reduce production code_list -> code_list plugin_depends_decl
-- On PRECEDENCE reduce production code_list -> code_list plugin_depends_decl
-- On POOL reduce production code_list -> code_list plugin_depends_decl
-- On PLUGIN reduce production code_list -> code_list plugin_depends_decl
-- On NODE reduce production code_list -> code_list plugin_depends_decl
-- On MODULE reduce production code_list -> code_list plugin_depends_decl
-- On INSTANCE reduce production code_list -> code_list plugin_depends_decl
-- On INITIAL reduce production code_list -> code_list plugin_depends_decl
-- On IDENTIFIER reduce production code_list -> code_list plugin_depends_decl
-- On HANDLE reduce production code_list -> code_list plugin_depends_decl
-- On FREE reduce production code_list -> code_list plugin_depends_decl
-- On EXTERNAL reduce production code_list -> code_list plugin_depends_decl
-- On EXCLUSIVE reduce production code_list -> code_list plugin_depends_decl
-- On ENDOFFILE reduce production code_list -> code_list plugin_depends_decl
-- On END reduce production code_list -> code_list plugin_depends_decl
-- On DOOR reduce production code_list -> code_list plugin_depends_decl
-- On DEPENDS reduce production code_list -> code_list plugin_depends_decl
-- On CONDITION reduce production code_list -> code_list plugin_depends_decl

State 71:
code_list -> code_list plugin_decl . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list plugin_decl
-- On STATIC reduce production code_list -> code_list plugin_decl
-- On SOURCE reduce production code_list -> code_list plugin_decl
-- On SEQUENCE reduce production code_list -> code_list plugin_decl
-- On READWRITE reduce production code_list -> code_list plugin_decl
-- On PRECEDENCE reduce production code_list -> code_list plugin_decl
-- On POOL reduce production code_list -> code_list plugin_decl
-- On PLUGIN reduce production code_list -> code_list plugin_decl
-- On NODE reduce production code_list -> code_list plugin_decl
-- On MODULE reduce production code_list -> code_list plugin_decl
-- On INSTANCE reduce production code_list -> code_list plugin_decl
-- On INITIAL reduce production code_list -> code_list plugin_decl
-- On IDENTIFIER reduce production code_list -> code_list plugin_decl
-- On HANDLE reduce production code_list -> code_list plugin_decl
-- On FREE reduce production code_list -> code_list plugin_decl
-- On EXTERNAL reduce production code_list -> code_list plugin_decl
-- On EXCLUSIVE reduce production code_list -> code_list plugin_decl
-- On ENDOFFILE reduce production code_list -> code_list plugin_decl
-- On END reduce production code_list -> code_list plugin_decl
-- On DOOR reduce production code_list -> code_list plugin_decl
-- On DEPENDS reduce production code_list -> code_list plugin_decl
-- On CONDITION reduce production code_list -> code_list plugin_decl

State 72:
code_list -> code_list node_decl . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list node_decl
-- On STATIC reduce production code_list -> code_list node_decl
-- On SOURCE reduce production code_list -> code_list node_decl
-- On SEQUENCE reduce production code_list -> code_list node_decl
-- On READWRITE reduce production code_list -> code_list node_decl
-- On PRECEDENCE reduce production code_list -> code_list node_decl
-- On POOL reduce production code_list -> code_list node_decl
-- On PLUGIN reduce production code_list -> code_list node_decl
-- On NODE reduce production code_list -> code_list node_decl
-- On MODULE reduce production code_list -> code_list node_decl
-- On INSTANCE reduce production code_list -> code_list node_decl
-- On INITIAL reduce production code_list -> code_list node_decl
-- On IDENTIFIER reduce production code_list -> code_list node_decl
-- On HANDLE reduce production code_list -> code_list node_decl
-- On FREE reduce production code_list -> code_list node_decl
-- On EXTERNAL reduce production code_list -> code_list node_decl
-- On EXCLUSIVE reduce production code_list -> code_list node_decl
-- On ENDOFFILE reduce production code_list -> code_list node_decl
-- On END reduce production code_list -> code_list node_decl
-- On DOOR reduce production code_list -> code_list node_decl
-- On DEPENDS reduce production code_list -> code_list node_decl
-- On CONDITION reduce production code_list -> code_list node_decl

State 73:
mod_decl -> mod_modifier_list . MODULE namespaced_ident BEGIN program END [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On MODULE shift to state 74

State 74:
mod_decl -> mod_modifier_list MODULE . namespaced_ident BEGIN program END [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 75

State 75:
mod_decl -> mod_modifier_list MODULE namespaced_ident . BEGIN program END [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On BEGIN shift to state 76

State 76:
mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN . program END [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On program shift to state 77
-- On code_list shift to state 4
-- On TERMINATE reduce production code_list -> 
-- On STATIC reduce production code_list -> 
-- On SOURCE reduce production code_list -> 
-- On SEQUENCE reduce production code_list -> 
-- On READWRITE reduce production code_list -> 
-- On PRECEDENCE reduce production code_list -> 
-- On POOL reduce production code_list -> 
-- On PLUGIN reduce production code_list -> 
-- On NODE reduce production code_list -> 
-- On MODULE reduce production code_list -> 
-- On INSTANCE reduce production code_list -> 
-- On INITIAL reduce production code_list -> 
-- On IDENTIFIER reduce production code_list -> 
-- On HANDLE reduce production code_list -> 
-- On FREE reduce production code_list -> 
-- On EXTERNAL reduce production code_list -> 
-- On EXCLUSIVE reduce production code_list -> 
-- On END reduce production code_list -> 
-- On DOOR reduce production code_list -> 
-- On DEPENDS reduce production code_list -> 
-- On CONDITION reduce production code_list -> 

State 77:
mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program . END [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On END shift to state 78

State 78:
mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On STATIC reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On SOURCE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On SEQUENCE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On READWRITE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On PRECEDENCE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On POOL reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On PLUGIN reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On NODE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On MODULE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On INSTANCE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On INITIAL reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On IDENTIFIER reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On HANDLE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On FREE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On EXTERNAL reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On EXCLUSIVE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On ENDOFFILE reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On END reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On DOOR reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On DEPENDS reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END
-- On CONDITION reduce production mod_decl -> mod_modifier_list MODULE namespaced_ident BEGIN program END

State 79:
mod_modifier_list -> mod_modifier . mod_modifier_list [ MODULE ]
-- On STATIC shift to state 11
-- On mod_modifier_list shift to state 80
-- On mod_modifier shift to state 79
-- On MODULE reduce production mod_modifier_list -> 

State 80:
mod_modifier_list -> mod_modifier mod_modifier_list . [ MODULE ]
-- On MODULE reduce production mod_modifier_list -> mod_modifier mod_modifier_list

State 81:
code_list -> code_list mod_inst . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list mod_inst
-- On STATIC reduce production code_list -> code_list mod_inst
-- On SOURCE reduce production code_list -> code_list mod_inst
-- On SEQUENCE reduce production code_list -> code_list mod_inst
-- On READWRITE reduce production code_list -> code_list mod_inst
-- On PRECEDENCE reduce production code_list -> code_list mod_inst
-- On POOL reduce production code_list -> code_list mod_inst
-- On PLUGIN reduce production code_list -> code_list mod_inst
-- On NODE reduce production code_list -> code_list mod_inst
-- On MODULE reduce production code_list -> code_list mod_inst
-- On INSTANCE reduce production code_list -> code_list mod_inst
-- On INITIAL reduce production code_list -> code_list mod_inst
-- On IDENTIFIER reduce production code_list -> code_list mod_inst
-- On HANDLE reduce production code_list -> code_list mod_inst
-- On FREE reduce production code_list -> code_list mod_inst
-- On EXTERNAL reduce production code_list -> code_list mod_inst
-- On EXCLUSIVE reduce production code_list -> code_list mod_inst
-- On ENDOFFILE reduce production code_list -> code_list mod_inst
-- On END reduce production code_list -> code_list mod_inst
-- On DOOR reduce production code_list -> code_list mod_inst
-- On DEPENDS reduce production code_list -> code_list mod_inst
-- On CONDITION reduce production code_list -> code_list mod_inst

State 82:
code_list -> code_list mod_decl . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list mod_decl
-- On STATIC reduce production code_list -> code_list mod_decl
-- On SOURCE reduce production code_list -> code_list mod_decl
-- On SEQUENCE reduce production code_list -> code_list mod_decl
-- On READWRITE reduce production code_list -> code_list mod_decl
-- On PRECEDENCE reduce production code_list -> code_list mod_decl
-- On POOL reduce production code_list -> code_list mod_decl
-- On PLUGIN reduce production code_list -> code_list mod_decl
-- On NODE reduce production code_list -> code_list mod_decl
-- On MODULE reduce production code_list -> code_list mod_decl
-- On INSTANCE reduce production code_list -> code_list mod_decl
-- On INITIAL reduce production code_list -> code_list mod_decl
-- On IDENTIFIER reduce production code_list -> code_list mod_decl
-- On HANDLE reduce production code_list -> code_list mod_decl
-- On FREE reduce production code_list -> code_list mod_decl
-- On EXTERNAL reduce production code_list -> code_list mod_decl
-- On EXCLUSIVE reduce production code_list -> code_list mod_decl
-- On ENDOFFILE reduce production code_list -> code_list mod_decl
-- On END reduce production code_list -> code_list mod_decl
-- On DOOR reduce production code_list -> code_list mod_decl
-- On DEPENDS reduce production code_list -> code_list mod_decl
-- On CONDITION reduce production code_list -> code_list mod_decl

State 83:
code_list -> code_list main_fn . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list main_fn
-- On STATIC reduce production code_list -> code_list main_fn
-- On SOURCE reduce production code_list -> code_list main_fn
-- On SEQUENCE reduce production code_list -> code_list main_fn
-- On READWRITE reduce production code_list -> code_list main_fn
-- On PRECEDENCE reduce production code_list -> code_list main_fn
-- On POOL reduce production code_list -> code_list main_fn
-- On PLUGIN reduce production code_list -> code_list main_fn
-- On NODE reduce production code_list -> code_list main_fn
-- On MODULE reduce production code_list -> code_list main_fn
-- On INSTANCE reduce production code_list -> code_list main_fn
-- On INITIAL reduce production code_list -> code_list main_fn
-- On IDENTIFIER reduce production code_list -> code_list main_fn
-- On HANDLE reduce production code_list -> code_list main_fn
-- On FREE reduce production code_list -> code_list main_fn
-- On EXTERNAL reduce production code_list -> code_list main_fn
-- On EXCLUSIVE reduce production code_list -> code_list main_fn
-- On ENDOFFILE reduce production code_list -> code_list main_fn
-- On END reduce production code_list -> code_list main_fn
-- On DOOR reduce production code_list -> code_list main_fn
-- On DEPENDS reduce production code_list -> code_list main_fn
-- On CONDITION reduce production code_list -> code_list main_fn

State 84:
code_list -> code_list guard_order_decl . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list guard_order_decl
-- On STATIC reduce production code_list -> code_list guard_order_decl
-- On SOURCE reduce production code_list -> code_list guard_order_decl
-- On SEQUENCE reduce production code_list -> code_list guard_order_decl
-- On READWRITE reduce production code_list -> code_list guard_order_decl
-- On PRECEDENCE reduce production code_list -> code_list guard_order_decl
-- On POOL reduce production code_list -> code_list guard_order_decl
-- On PLUGIN reduce production code_list -> code_list guard_order_decl
-- On NODE reduce production code_list -> code_list guard_order_decl
-- On MODULE reduce production code_list -> code_list guard_order_decl
-- On INSTANCE reduce production code_list -> code_list guard_order_decl
-- On INITIAL reduce production code_list -> code_list guard_order_decl
-- On IDENTIFIER reduce production code_list -> code_list guard_order_decl
-- On HANDLE reduce production code_list -> code_list guard_order_decl
-- On FREE reduce production code_list -> code_list guard_order_decl
-- On EXTERNAL reduce production code_list -> code_list guard_order_decl
-- On EXCLUSIVE reduce production code_list -> code_list guard_order_decl
-- On ENDOFFILE reduce production code_list -> code_list guard_order_decl
-- On END reduce production code_list -> code_list guard_order_decl
-- On DOOR reduce production code_list -> code_list guard_order_decl
-- On DEPENDS reduce production code_list -> code_list guard_order_decl
-- On CONDITION reduce production code_list -> code_list guard_order_decl

State 85:
atom_decl -> external_opt . atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
cond_decl -> external_opt . CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
mod_inst -> external_opt . INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
node_decl -> external_opt . NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SEQUENCE shift to state 86
-- On READWRITE shift to state 87
-- On POOL shift to state 88
-- On NODE shift to state 89
-- On INSTANCE shift to state 211
-- On FREE shift to state 224
-- On EXCLUSIVE shift to state 225
-- On CONDITION shift to state 226
-- On atom_type shift to state 232

State 86:
atom_type -> SEQUENCE . [ SLASH IDENTIFIER ]
-- On SLASH reduce production atom_type -> SEQUENCE
-- On IDENTIFIER reduce production atom_type -> SEQUENCE

State 87:
atom_type -> READWRITE . [ SLASH IDENTIFIER ]
-- On SLASH reduce production atom_type -> READWRITE
-- On IDENTIFIER reduce production atom_type -> READWRITE

State 88:
atom_type -> POOL . [ SLASH IDENTIFIER ]
-- On SLASH reduce production atom_type -> POOL
-- On IDENTIFIER reduce production atom_type -> POOL

State 89:
node_decl -> external_opt NODE . node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On MUTABLE shift to state 90
-- On DETACHED shift to state 91
-- On ABSTRACT shift to state 92
-- On node_mod_list shift to state 96
-- On IDENTIFIER reduce production node_mod_list -> 

State 90:
node_mod_list -> MUTABLE . node_mod_list [ IDENTIFIER ]
-- On MUTABLE shift to state 90
-- On DETACHED shift to state 91
-- On ABSTRACT shift to state 92
-- On node_mod_list shift to state 95
-- On IDENTIFIER reduce production node_mod_list -> 

State 91:
node_mod_list -> DETACHED . node_mod_list [ IDENTIFIER ]
-- On MUTABLE shift to state 90
-- On DETACHED shift to state 91
-- On ABSTRACT shift to state 92
-- On node_mod_list shift to state 94
-- On IDENTIFIER reduce production node_mod_list -> 

State 92:
node_mod_list -> ABSTRACT . node_mod_list [ IDENTIFIER ]
-- On MUTABLE shift to state 90
-- On DETACHED shift to state 91
-- On ABSTRACT shift to state 92
-- On node_mod_list shift to state 93
-- On IDENTIFIER reduce production node_mod_list -> 

State 93:
node_mod_list -> ABSTRACT node_mod_list . [ IDENTIFIER ]
-- On IDENTIFIER reduce production node_mod_list -> ABSTRACT node_mod_list

State 94:
node_mod_list -> DETACHED node_mod_list . [ IDENTIFIER ]
-- On IDENTIFIER reduce production node_mod_list -> DETACHED node_mod_list

State 95:
node_mod_list -> MUTABLE node_mod_list . [ IDENTIFIER ]
-- On IDENTIFIER reduce production node_mod_list -> MUTABLE node_mod_list

State 96:
node_decl -> external_opt NODE node_mod_list . namespaced_ident arg_list ARROW node_target_arg_list SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 97

State 97:
node_decl -> external_opt NODE node_mod_list namespaced_ident . arg_list ARROW node_target_arg_list SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On LEFT_PAREN shift to state 98
-- On arg_list shift to state 198

State 98:
arg_list -> LEFT_PAREN . RIGHT_PAREN [ ARROW ]
arg_list -> LEFT_PAREN . typed_or_guardref_item_list RIGHT_PAREN [ ARROW ]
-- On RIGHT_PAREN shift to state 99
-- On GUARD shift to state 100
-- On CONST shift to state 168
-- On typed_or_guardref_item_list shift to state 169
-- On typed_or_guardref_item shift to state 197
-- On typed_item shift to state 173
-- On type_mod_opt shift to state 174
-- On guardref_item shift to state 194
-- On data_type shift to state 195
-- On LEFT_PAREN reduce production type_mod_opt -> 
-- On IDENTIFIER reduce production type_mod_opt -> 
-- On BOOL reduce production type_mod_opt -> 

State 99:
arg_list -> LEFT_PAREN RIGHT_PAREN . [ ARROW ]
-- On ARROW reduce production arg_list -> LEFT_PAREN RIGHT_PAREN

State 100:
guardref_item -> GUARD . IDENTIFIER guardref_modifier_list LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN as_named_opt if_condition_opt [ RIGHT_PAREN COMMA ]
-- On IDENTIFIER shift to state 101

State 101:
guardref_item -> GUARD IDENTIFIER . guardref_modifier_list LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN as_named_opt if_condition_opt [ RIGHT_PAREN COMMA ]
-- On SLASH shift to state 102
-- On guardref_modifier_list shift to state 111
-- On LEFT_PAREN reduce production guardref_modifier_list -> 

State 102:
guardref_modifier_list -> SLASH . READ guardref_modifier_list [ LEFT_PAREN ]
guardref_modifier_list -> SLASH . WRITE guardref_modifier_list [ LEFT_PAREN ]
guardref_modifier_list -> SLASH . UPGRADEABLE guardref_modifier_list [ LEFT_PAREN ]
guardref_modifier_list -> SLASH . NULLOK guardref_modifier_list [ LEFT_PAREN ]
-- On WRITE shift to state 103
-- On UPGRADEABLE shift to state 105
-- On READ shift to state 107
-- On NULLOK shift to state 109

State 103:
guardref_modifier_list -> SLASH WRITE . guardref_modifier_list [ LEFT_PAREN ]
-- On SLASH shift to state 102
-- On guardref_modifier_list shift to state 104
-- On LEFT_PAREN reduce production guardref_modifier_list -> 

State 104:
guardref_modifier_list -> SLASH WRITE guardref_modifier_list . [ LEFT_PAREN ]
-- On LEFT_PAREN reduce production guardref_modifier_list -> SLASH WRITE guardref_modifier_list

State 105:
guardref_modifier_list -> SLASH UPGRADEABLE . guardref_modifier_list [ LEFT_PAREN ]
-- On SLASH shift to state 102
-- On guardref_modifier_list shift to state 106
-- On LEFT_PAREN reduce production guardref_modifier_list -> 

State 106:
guardref_modifier_list -> SLASH UPGRADEABLE guardref_modifier_list . [ LEFT_PAREN ]
-- On LEFT_PAREN reduce production guardref_modifier_list -> SLASH UPGRADEABLE guardref_modifier_list

State 107:
guardref_modifier_list -> SLASH READ . guardref_modifier_list [ LEFT_PAREN ]
-- On SLASH shift to state 102
-- On guardref_modifier_list shift to state 108
-- On LEFT_PAREN reduce production guardref_modifier_list -> 

State 108:
guardref_modifier_list -> SLASH READ guardref_modifier_list . [ LEFT_PAREN ]
-- On LEFT_PAREN reduce production guardref_modifier_list -> SLASH READ guardref_modifier_list

State 109:
guardref_modifier_list -> SLASH NULLOK . guardref_modifier_list [ LEFT_PAREN ]
-- On SLASH shift to state 102
-- On guardref_modifier_list shift to state 110
-- On LEFT_PAREN reduce production guardref_modifier_list -> 

State 110:
guardref_modifier_list -> SLASH NULLOK guardref_modifier_list . [ LEFT_PAREN ]
-- On LEFT_PAREN reduce production guardref_modifier_list -> SLASH NULLOK guardref_modifier_list

State 111:
guardref_item -> GUARD IDENTIFIER guardref_modifier_list . LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN as_named_opt if_condition_opt [ RIGHT_PAREN COMMA ]
-- On LEFT_PAREN shift to state 112

State 112:
guardref_item -> GUARD IDENTIFIER guardref_modifier_list LEFT_PAREN . uninterpreted_cpp_code_comma_list RIGHT_PAREN as_named_opt if_condition_opt [ RIGHT_PAREN COMMA ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 144
-- On uninterpreted_cpp_code_comma_list shift to state 160
-- On uninterpreted_cpp_code shift to state 148
-- On ident shift to state 134
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code -> 
-- On COMMA reduce production uninterpreted_cpp_code -> 

State 113:
uninterpreted_cpp_code_fragment -> STAR . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 159
-- On ident shift to state 134

State 114:
uninterpreted_cpp_code_fragment -> QUESTION . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 158
-- On ident shift to state 134

State 115:
uninterpreted_cpp_code_fragment -> PLUS . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 157
-- On ident shift to state 134

State 116:
uninterpreted_cpp_code_fragment -> PIPE . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 156
-- On ident shift to state 134

State 117:
uninterpreted_cpp_code_fragment -> NUMBER . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On DOT reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On COLON reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> NUMBER
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> NUMBER

State 118:
uninterpreted_cpp_code_fragment -> NOTEQUALS . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 155
-- On ident shift to state 134

State 119:
uninterpreted_cpp_code_fragment -> MINUS . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 154
-- On ident shift to state 134

State 120:
uninterpreted_cpp_code_fragment -> LESSTHAN . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 153
-- On ident shift to state 134

State 121:
uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE . uninterpreted_cpp_code RIGHT_SQ_BRACE [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 144
-- On uninterpreted_cpp_code shift to state 151
-- On ident shift to state 134
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code -> 

State 122:
uninterpreted_cpp_code_fragment -> LEFT_PAREN . uninterpreted_cpp_code_comma_list RIGHT_PAREN [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 144
-- On uninterpreted_cpp_code_comma_list shift to state 146
-- On uninterpreted_cpp_code shift to state 148
-- On ident shift to state 134
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code -> 
-- On COMMA reduce production uninterpreted_cpp_code -> 

State 123:
uninterpreted_cpp_code_fragment -> ISEQUALS . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 143
-- On ident shift to state 134

State 124:
uninterpreted_cpp_code_fragment -> GREATERTHAN . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 142
-- On ident shift to state 134

State 125:
uninterpreted_cpp_code_fragment -> EXCLAMATION . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 141
-- On ident shift to state 134

State 126:
uninterpreted_cpp_code_fragment -> DOUBLECOLON . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 140
-- On ident shift to state 134

State 127:
uninterpreted_cpp_code_fragment -> DOUBLEBAR . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 139
-- On ident shift to state 134

State 128:
uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 138
-- On ident shift to state 134

State 129:
uninterpreted_cpp_code_fragment -> DOT . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 137
-- On ident shift to state 134

State 130:
uninterpreted_cpp_code_fragment -> COLON . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 136
-- On ident shift to state 134

State 131:
uninterpreted_cpp_code_fragment -> BACKARROW . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 135
-- On ident shift to state 134

State 132:
uninterpreted_cpp_code_fragment -> ARROW . uninterpreted_cpp_code_fragment [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 133
-- On ident shift to state 134

State 133:
uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> ARROW uninterpreted_cpp_code_fragment

State 134:
uninterpreted_cpp_code_fragment -> ident . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> ident
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> ident
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> ident
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> ident
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> ident
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> ident
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> ident
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> ident
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> ident
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> ident
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> ident
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> ident
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> ident
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> ident
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> ident
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> ident
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> ident
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> ident
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> ident
-- On DOT reduce production uninterpreted_cpp_code_fragment -> ident
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> ident
-- On COLON reduce production uninterpreted_cpp_code_fragment -> ident
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> ident
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> ident

State 135:
uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> BACKARROW uninterpreted_cpp_code_fragment

State 136:
uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> COLON uninterpreted_cpp_code_fragment

State 137:
uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> DOT uninterpreted_cpp_code_fragment

State 138:
uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> DOUBLEAMPERSAND uninterpreted_cpp_code_fragment

State 139:
uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> DOUBLEBAR uninterpreted_cpp_code_fragment

State 140:
uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> DOUBLECOLON uninterpreted_cpp_code_fragment

State 141:
uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> EXCLAMATION uninterpreted_cpp_code_fragment

State 142:
uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> GREATERTHAN uninterpreted_cpp_code_fragment

State 143:
uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> ISEQUALS uninterpreted_cpp_code_fragment

State 144:
uninterpreted_cpp_code -> uninterpreted_cpp_code_fragment . uninterpreted_cpp_code [ RIGHT_SQ_BRACE RIGHT_PAREN COMMA ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 144
-- On uninterpreted_cpp_code shift to state 145
-- On ident shift to state 134
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code -> 
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code -> 
-- On COMMA reduce production uninterpreted_cpp_code -> 

State 145:
uninterpreted_cpp_code -> uninterpreted_cpp_code_fragment uninterpreted_cpp_code . [ RIGHT_SQ_BRACE RIGHT_PAREN COMMA ]
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code -> uninterpreted_cpp_code_fragment uninterpreted_cpp_code
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code -> uninterpreted_cpp_code_fragment uninterpreted_cpp_code
-- On COMMA reduce production uninterpreted_cpp_code -> uninterpreted_cpp_code_fragment uninterpreted_cpp_code

State 146:
uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list . RIGHT_PAREN [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On RIGHT_PAREN shift to state 147

State 147:
uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On DOT reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On COLON reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN

State 148:
uninterpreted_cpp_code_comma_list -> uninterpreted_cpp_code . [ RIGHT_PAREN ]
uninterpreted_cpp_code_comma_list -> uninterpreted_cpp_code . COMMA uninterpreted_cpp_code_comma_list [ RIGHT_PAREN ]
-- On COMMA shift to state 149
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_comma_list -> uninterpreted_cpp_code

State 149:
uninterpreted_cpp_code_comma_list -> uninterpreted_cpp_code COMMA . uninterpreted_cpp_code_comma_list [ RIGHT_PAREN ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 144
-- On uninterpreted_cpp_code_comma_list shift to state 150
-- On uninterpreted_cpp_code shift to state 148
-- On ident shift to state 134
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code -> 
-- On COMMA reduce production uninterpreted_cpp_code -> 

State 150:
uninterpreted_cpp_code_comma_list -> uninterpreted_cpp_code COMMA uninterpreted_cpp_code_comma_list . [ RIGHT_PAREN ]
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_comma_list -> uninterpreted_cpp_code COMMA uninterpreted_cpp_code_comma_list

State 151:
uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code . RIGHT_SQ_BRACE [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On RIGHT_SQ_BRACE shift to state 152

State 152:
uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On DOT reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On COLON reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> LEFT_SQ_BRACE uninterpreted_cpp_code RIGHT_SQ_BRACE

State 153:
uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> LESSTHAN uninterpreted_cpp_code_fragment

State 154:
uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> MINUS uninterpreted_cpp_code_fragment

State 155:
uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> NOTEQUALS uninterpreted_cpp_code_fragment

State 156:
uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> PIPE uninterpreted_cpp_code_fragment

State 157:
uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> PLUS uninterpreted_cpp_code_fragment

State 158:
uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> QUESTION uninterpreted_cpp_code_fragment

State 159:
uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment . [ STAR RIGHT_SQ_BRACE RIGHT_PAREN QUESTION PLUS PIPE NUMBER NOTEQUALS MINUS LESSTHAN LEFT_SQ_BRACE LEFT_PAREN ISEQUALS IDENTIFIER GREATERTHAN EXCLAMATION DOUBLECOLON DOUBLEBAR DOUBLEAMPERSAND DOT COMMA COLON BACKARROW ARROW ]
-- On STAR reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On RIGHT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On QUESTION reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On PLUS reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On PIPE reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On NUMBER reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On NOTEQUALS reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On MINUS reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On LESSTHAN reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On LEFT_SQ_BRACE reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On LEFT_PAREN reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On ISEQUALS reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On IDENTIFIER reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On GREATERTHAN reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On EXCLAMATION reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On DOUBLECOLON reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On DOUBLEBAR reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On DOUBLEAMPERSAND reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On DOT reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On COMMA reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On COLON reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On BACKARROW reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment
-- On ARROW reduce production uninterpreted_cpp_code_fragment -> STAR uninterpreted_cpp_code_fragment

State 160:
guardref_item -> GUARD IDENTIFIER guardref_modifier_list LEFT_PAREN uninterpreted_cpp_code_comma_list . RIGHT_PAREN as_named_opt if_condition_opt [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN shift to state 161

State 161:
guardref_item -> GUARD IDENTIFIER guardref_modifier_list LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN . as_named_opt if_condition_opt [ RIGHT_PAREN COMMA ]
-- On AS shift to state 162
-- On as_named_opt shift to state 164
-- On RIGHT_PAREN reduce production as_named_opt -> 
-- On IF reduce production as_named_opt -> 
-- On COMMA reduce production as_named_opt -> 

State 162:
as_named_opt -> AS . IDENTIFIER [ RIGHT_PAREN IF COMMA ]
-- On IDENTIFIER shift to state 163

State 163:
as_named_opt -> AS IDENTIFIER . [ RIGHT_PAREN IF COMMA ]
-- On RIGHT_PAREN reduce production as_named_opt -> AS IDENTIFIER
-- On IF reduce production as_named_opt -> AS IDENTIFIER
-- On COMMA reduce production as_named_opt -> AS IDENTIFIER

State 164:
guardref_item -> GUARD IDENTIFIER guardref_modifier_list LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN as_named_opt . if_condition_opt [ RIGHT_PAREN COMMA ]
-- On IF shift to state 165
-- On if_condition_opt shift to state 167
-- On RIGHT_PAREN reduce production if_condition_opt -> 
-- On COMMA reduce production if_condition_opt -> 

State 165:
if_condition_opt -> IF . uninterpreted_cpp_code [ RIGHT_PAREN COMMA ]
-- On STAR shift to state 113
-- On QUESTION shift to state 114
-- On PLUS shift to state 115
-- On PIPE shift to state 116
-- On NUMBER shift to state 117
-- On NOTEQUALS shift to state 118
-- On MINUS shift to state 119
-- On LESSTHAN shift to state 120
-- On LEFT_SQ_BRACE shift to state 121
-- On LEFT_PAREN shift to state 122
-- On ISEQUALS shift to state 123
-- On IDENTIFIER shift to state 14
-- On GREATERTHAN shift to state 124
-- On EXCLAMATION shift to state 125
-- On DOUBLECOLON shift to state 126
-- On DOUBLEBAR shift to state 127
-- On DOUBLEAMPERSAND shift to state 128
-- On DOT shift to state 129
-- On COLON shift to state 130
-- On BACKARROW shift to state 131
-- On ARROW shift to state 132
-- On uninterpreted_cpp_code_fragment shift to state 144
-- On uninterpreted_cpp_code shift to state 166
-- On ident shift to state 134
-- On RIGHT_PAREN reduce production uninterpreted_cpp_code -> 
-- On COMMA reduce production uninterpreted_cpp_code -> 

State 166:
if_condition_opt -> IF uninterpreted_cpp_code . [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN reduce production if_condition_opt -> IF uninterpreted_cpp_code
-- On COMMA reduce production if_condition_opt -> IF uninterpreted_cpp_code

State 167:
guardref_item -> GUARD IDENTIFIER guardref_modifier_list LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN as_named_opt if_condition_opt . [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN reduce production guardref_item -> GUARD IDENTIFIER guardref_modifier_list LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN as_named_opt if_condition_opt
-- On COMMA reduce production guardref_item -> GUARD IDENTIFIER guardref_modifier_list LEFT_PAREN uninterpreted_cpp_code_comma_list RIGHT_PAREN as_named_opt if_condition_opt

State 168:
type_mod_opt -> CONST . [ LEFT_PAREN IDENTIFIER BOOL ]
-- On LEFT_PAREN reduce production type_mod_opt -> CONST
-- On IDENTIFIER reduce production type_mod_opt -> CONST
-- On BOOL reduce production type_mod_opt -> CONST

State 169:
arg_list -> LEFT_PAREN typed_or_guardref_item_list . RIGHT_PAREN [ ARROW ]
typed_or_guardref_item_list -> typed_or_guardref_item_list . COMMA typed_or_guardref_item [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN shift to state 170
-- On COMMA shift to state 171

State 170:
arg_list -> LEFT_PAREN typed_or_guardref_item_list RIGHT_PAREN . [ ARROW ]
-- On ARROW reduce production arg_list -> LEFT_PAREN typed_or_guardref_item_list RIGHT_PAREN

State 171:
typed_or_guardref_item_list -> typed_or_guardref_item_list COMMA . typed_or_guardref_item [ RIGHT_PAREN COMMA ]
-- On GUARD shift to state 100
-- On CONST shift to state 168
-- On typed_or_guardref_item shift to state 172
-- On typed_item shift to state 173
-- On type_mod_opt shift to state 174
-- On guardref_item shift to state 194
-- On data_type shift to state 195
-- On LEFT_PAREN reduce production type_mod_opt -> 
-- On IDENTIFIER reduce production type_mod_opt -> 
-- On BOOL reduce production type_mod_opt -> 

State 172:
typed_or_guardref_item_list -> typed_or_guardref_item_list COMMA typed_or_guardref_item . [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN reduce production typed_or_guardref_item_list -> typed_or_guardref_item_list COMMA typed_or_guardref_item
-- On COMMA reduce production typed_or_guardref_item_list -> typed_or_guardref_item_list COMMA typed_or_guardref_item

State 173:
typed_or_guardref_item -> typed_item . [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN reduce production typed_or_guardref_item -> typed_item
-- On COMMA reduce production typed_or_guardref_item -> typed_item

State 174:
data_type -> type_mod_opt . raw_data_type star_list [ SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA ]
-- On LEFT_PAREN shift to state 175
-- On IDENTIFIER shift to state 178
-- On BOOL shift to state 188
-- On raw_data_type shift to state 190

State 175:
raw_data_type -> LEFT_PAREN . data_type RIGHT_PAREN [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On CONST shift to state 168
-- On type_mod_opt shift to state 174
-- On data_type shift to state 176
-- On LEFT_PAREN reduce production type_mod_opt -> 
-- On IDENTIFIER reduce production type_mod_opt -> 
-- On BOOL reduce production type_mod_opt -> 

State 176:
raw_data_type -> LEFT_PAREN data_type . RIGHT_PAREN [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On RIGHT_PAREN shift to state 177

State 177:
raw_data_type -> LEFT_PAREN data_type RIGHT_PAREN . [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On STAR reduce production raw_data_type -> LEFT_PAREN data_type RIGHT_PAREN
-- On SEMI reduce production raw_data_type -> LEFT_PAREN data_type RIGHT_PAREN
-- On RIGHT_PAREN reduce production raw_data_type -> LEFT_PAREN data_type RIGHT_PAREN
-- On IDENTIFIER reduce production raw_data_type -> LEFT_PAREN data_type RIGHT_PAREN
-- On GREATERTHAN reduce production raw_data_type -> LEFT_PAREN data_type RIGHT_PAREN
-- On COMMA reduce production raw_data_type -> LEFT_PAREN data_type RIGHT_PAREN
-- On AMPERSAND reduce production raw_data_type -> LEFT_PAREN data_type RIGHT_PAREN

State 178:
raw_data_type -> IDENTIFIER . [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
raw_data_type -> IDENTIFIER . DOUBLECOLON raw_data_type [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
raw_data_type -> IDENTIFIER . LESSTHAN template_item_list GREATERTHAN [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On LESSTHAN shift to state 179
-- On DOUBLECOLON shift to state 187
-- On STAR reduce production raw_data_type -> IDENTIFIER
-- On SEMI reduce production raw_data_type -> IDENTIFIER
-- On RIGHT_PAREN reduce production raw_data_type -> IDENTIFIER
-- On IDENTIFIER reduce production raw_data_type -> IDENTIFIER
-- On GREATERTHAN reduce production raw_data_type -> IDENTIFIER
-- On COMMA reduce production raw_data_type -> IDENTIFIER
-- On AMPERSAND reduce production raw_data_type -> IDENTIFIER

State 179:
raw_data_type -> IDENTIFIER LESSTHAN . template_item_list GREATERTHAN [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On NUMBER shift to state 180
-- On CONST shift to state 168
-- On type_mod_opt shift to state 174
-- On template_item_list shift to state 181
-- On template_item shift to state 186
-- On data_type shift to state 185
-- On LEFT_PAREN reduce production type_mod_opt -> 
-- On IDENTIFIER reduce production type_mod_opt -> 
-- On BOOL reduce production type_mod_opt -> 

State 180:
template_item -> NUMBER . [ GREATERTHAN COMMA ]
-- On GREATERTHAN reduce production template_item -> NUMBER
-- On COMMA reduce production template_item -> NUMBER

State 181:
raw_data_type -> IDENTIFIER LESSTHAN template_item_list . GREATERTHAN [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
template_item_list -> template_item_list . COMMA template_item [ GREATERTHAN COMMA ]
-- On GREATERTHAN shift to state 182
-- On COMMA shift to state 183

State 182:
raw_data_type -> IDENTIFIER LESSTHAN template_item_list GREATERTHAN . [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On STAR reduce production raw_data_type -> IDENTIFIER LESSTHAN template_item_list GREATERTHAN
-- On SEMI reduce production raw_data_type -> IDENTIFIER LESSTHAN template_item_list GREATERTHAN
-- On RIGHT_PAREN reduce production raw_data_type -> IDENTIFIER LESSTHAN template_item_list GREATERTHAN
-- On IDENTIFIER reduce production raw_data_type -> IDENTIFIER LESSTHAN template_item_list GREATERTHAN
-- On GREATERTHAN reduce production raw_data_type -> IDENTIFIER LESSTHAN template_item_list GREATERTHAN
-- On COMMA reduce production raw_data_type -> IDENTIFIER LESSTHAN template_item_list GREATERTHAN
-- On AMPERSAND reduce production raw_data_type -> IDENTIFIER LESSTHAN template_item_list GREATERTHAN

State 183:
template_item_list -> template_item_list COMMA . template_item [ GREATERTHAN COMMA ]
-- On NUMBER shift to state 180
-- On CONST shift to state 168
-- On type_mod_opt shift to state 174
-- On template_item shift to state 184
-- On data_type shift to state 185
-- On LEFT_PAREN reduce production type_mod_opt -> 
-- On IDENTIFIER reduce production type_mod_opt -> 
-- On BOOL reduce production type_mod_opt -> 

State 184:
template_item_list -> template_item_list COMMA template_item . [ GREATERTHAN COMMA ]
-- On GREATERTHAN reduce production template_item_list -> template_item_list COMMA template_item
-- On COMMA reduce production template_item_list -> template_item_list COMMA template_item

State 185:
template_item -> data_type . [ GREATERTHAN COMMA ]
-- On GREATERTHAN reduce production template_item -> data_type
-- On COMMA reduce production template_item -> data_type

State 186:
template_item_list -> template_item . [ GREATERTHAN COMMA ]
-- On GREATERTHAN reduce production template_item_list -> template_item
-- On COMMA reduce production template_item_list -> template_item

State 187:
raw_data_type -> IDENTIFIER DOUBLECOLON . raw_data_type [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On LEFT_PAREN shift to state 175
-- On IDENTIFIER shift to state 178
-- On BOOL shift to state 188
-- On raw_data_type shift to state 189

State 188:
raw_data_type -> BOOL . [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On STAR reduce production raw_data_type -> BOOL
-- On SEMI reduce production raw_data_type -> BOOL
-- On RIGHT_PAREN reduce production raw_data_type -> BOOL
-- On IDENTIFIER reduce production raw_data_type -> BOOL
-- On GREATERTHAN reduce production raw_data_type -> BOOL
-- On COMMA reduce production raw_data_type -> BOOL
-- On AMPERSAND reduce production raw_data_type -> BOOL

State 189:
raw_data_type -> IDENTIFIER DOUBLECOLON raw_data_type . [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On STAR reduce production raw_data_type -> IDENTIFIER DOUBLECOLON raw_data_type
-- On SEMI reduce production raw_data_type -> IDENTIFIER DOUBLECOLON raw_data_type
-- On RIGHT_PAREN reduce production raw_data_type -> IDENTIFIER DOUBLECOLON raw_data_type
-- On IDENTIFIER reduce production raw_data_type -> IDENTIFIER DOUBLECOLON raw_data_type
-- On GREATERTHAN reduce production raw_data_type -> IDENTIFIER DOUBLECOLON raw_data_type
-- On COMMA reduce production raw_data_type -> IDENTIFIER DOUBLECOLON raw_data_type
-- On AMPERSAND reduce production raw_data_type -> IDENTIFIER DOUBLECOLON raw_data_type

State 190:
data_type -> type_mod_opt raw_data_type . star_list [ SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA ]
-- On star_list shift to state 191
-- On STAR reduce production star_list -> 
-- On SEMI reduce production star_list -> 
-- On RIGHT_PAREN reduce production star_list -> 
-- On IDENTIFIER reduce production star_list -> 
-- On GREATERTHAN reduce production star_list -> 
-- On COMMA reduce production star_list -> 
-- On AMPERSAND reduce production star_list -> 

State 191:
data_type -> type_mod_opt raw_data_type star_list . [ SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA ]
star_list -> star_list . STAR [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
star_list -> star_list . AMPERSAND [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On STAR shift to state 192
-- On AMPERSAND shift to state 193
-- On SEMI reduce production data_type -> type_mod_opt raw_data_type star_list
-- On RIGHT_PAREN reduce production data_type -> type_mod_opt raw_data_type star_list
-- On IDENTIFIER reduce production data_type -> type_mod_opt raw_data_type star_list
-- On GREATERTHAN reduce production data_type -> type_mod_opt raw_data_type star_list
-- On COMMA reduce production data_type -> type_mod_opt raw_data_type star_list

State 192:
star_list -> star_list STAR . [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On STAR reduce production star_list -> star_list STAR
-- On SEMI reduce production star_list -> star_list STAR
-- On RIGHT_PAREN reduce production star_list -> star_list STAR
-- On IDENTIFIER reduce production star_list -> star_list STAR
-- On GREATERTHAN reduce production star_list -> star_list STAR
-- On COMMA reduce production star_list -> star_list STAR
-- On AMPERSAND reduce production star_list -> star_list STAR

State 193:
star_list -> star_list AMPERSAND . [ STAR SEMI RIGHT_PAREN IDENTIFIER GREATERTHAN COMMA AMPERSAND ]
-- On STAR reduce production star_list -> star_list AMPERSAND
-- On SEMI reduce production star_list -> star_list AMPERSAND
-- On RIGHT_PAREN reduce production star_list -> star_list AMPERSAND
-- On IDENTIFIER reduce production star_list -> star_list AMPERSAND
-- On GREATERTHAN reduce production star_list -> star_list AMPERSAND
-- On COMMA reduce production star_list -> star_list AMPERSAND
-- On AMPERSAND reduce production star_list -> star_list AMPERSAND

State 194:
typed_or_guardref_item -> guardref_item . [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN reduce production typed_or_guardref_item -> guardref_item
-- On COMMA reduce production typed_or_guardref_item -> guardref_item

State 195:
typed_item -> data_type . [ RIGHT_PAREN COMMA ]
typed_item -> data_type . IDENTIFIER [ RIGHT_PAREN COMMA ]
-- On IDENTIFIER shift to state 196
-- On RIGHT_PAREN reduce production typed_item -> data_type
-- On COMMA reduce production typed_item -> data_type

State 196:
typed_item -> data_type IDENTIFIER . [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN reduce production typed_item -> data_type IDENTIFIER
-- On COMMA reduce production typed_item -> data_type IDENTIFIER

State 197:
typed_or_guardref_item_list -> typed_or_guardref_item . [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN reduce production typed_or_guardref_item_list -> typed_or_guardref_item
-- On COMMA reduce production typed_or_guardref_item_list -> typed_or_guardref_item

State 198:
node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list . ARROW node_target_arg_list SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On ARROW shift to state 199

State 199:
node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW . node_target_arg_list SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On LEFT_PAREN shift to state 200
-- On ELLIPSIS shift to state 207
-- On simple_arg_list shift to state 208
-- On node_target_arg_list shift to state 209

State 200:
simple_arg_list -> LEFT_PAREN . typed_item_list RIGHT_PAREN [ SEMI ARROW ]
simple_arg_list -> LEFT_PAREN . RIGHT_PAREN [ SEMI ARROW ]
-- On RIGHT_PAREN shift to state 201
-- On CONST shift to state 168
-- On typed_item_list shift to state 202
-- On typed_item shift to state 206
-- On type_mod_opt shift to state 174
-- On data_type shift to state 195
-- On LEFT_PAREN reduce production type_mod_opt -> 
-- On IDENTIFIER reduce production type_mod_opt -> 
-- On BOOL reduce production type_mod_opt -> 

State 201:
simple_arg_list -> LEFT_PAREN RIGHT_PAREN . [ SEMI ARROW ]
-- On SEMI reduce production simple_arg_list -> LEFT_PAREN RIGHT_PAREN
-- On ARROW reduce production simple_arg_list -> LEFT_PAREN RIGHT_PAREN

State 202:
simple_arg_list -> LEFT_PAREN typed_item_list . RIGHT_PAREN [ SEMI ARROW ]
typed_item_list -> typed_item_list . COMMA typed_item [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN shift to state 203
-- On COMMA shift to state 204

State 203:
simple_arg_list -> LEFT_PAREN typed_item_list RIGHT_PAREN . [ SEMI ARROW ]
-- On SEMI reduce production simple_arg_list -> LEFT_PAREN typed_item_list RIGHT_PAREN
-- On ARROW reduce production simple_arg_list -> LEFT_PAREN typed_item_list RIGHT_PAREN

State 204:
typed_item_list -> typed_item_list COMMA . typed_item [ RIGHT_PAREN COMMA ]
-- On CONST shift to state 168
-- On typed_item shift to state 205
-- On type_mod_opt shift to state 174
-- On data_type shift to state 195
-- On LEFT_PAREN reduce production type_mod_opt -> 
-- On IDENTIFIER reduce production type_mod_opt -> 
-- On BOOL reduce production type_mod_opt -> 

State 205:
typed_item_list -> typed_item_list COMMA typed_item . [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN reduce production typed_item_list -> typed_item_list COMMA typed_item
-- On COMMA reduce production typed_item_list -> typed_item_list COMMA typed_item

State 206:
typed_item_list -> typed_item . [ RIGHT_PAREN COMMA ]
-- On RIGHT_PAREN reduce production typed_item_list -> typed_item
-- On COMMA reduce production typed_item_list -> typed_item

State 207:
node_target_arg_list -> ELLIPSIS . [ SEMI ]
-- On SEMI reduce production node_target_arg_list -> ELLIPSIS

State 208:
node_target_arg_list -> simple_arg_list . [ SEMI ]
-- On SEMI reduce production node_target_arg_list -> simple_arg_list

State 209:
node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list . SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SEMI shift to state 210

State 210:
node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On STATIC reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On SOURCE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On SEQUENCE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On READWRITE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On PRECEDENCE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On POOL reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On PLUGIN reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On NODE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On MODULE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On INSTANCE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On INITIAL reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On IDENTIFIER reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On HANDLE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On FREE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On EXTERNAL reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On EXCLUSIVE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On ENDOFFILE reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On END reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On DOOR reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On DEPENDS reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI
-- On CONDITION reduce production node_decl -> external_opt NODE node_mod_list namespaced_ident arg_list ARROW node_target_arg_list SEMI

State 211:
mod_inst -> external_opt INSTANCE . namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 212

State 212:
mod_inst -> external_opt INSTANCE namespaced_ident . IDENTIFIER where_guard_indentifications_opt SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 213

State 213:
mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER . where_guard_indentifications_opt SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On WHERE shift to state 214
-- On where_guard_indentifications_opt shift to state 222
-- On SEMI reduce production where_guard_indentifications_opt -> 

State 214:
where_guard_indentifications_opt -> WHERE . guard_indentification_list [ SEMI ]
-- On IDENTIFIER shift to state 215
-- On guard_indentification_list shift to state 218
-- On guard_identification shift to state 219

State 215:
guard_identification -> IDENTIFIER . EQUALS IDENTIFIER [ SEMI COMMA ]
-- On EQUALS shift to state 216

State 216:
guard_identification -> IDENTIFIER EQUALS . IDENTIFIER [ SEMI COMMA ]
-- On IDENTIFIER shift to state 217

State 217:
guard_identification -> IDENTIFIER EQUALS IDENTIFIER . [ SEMI COMMA ]
-- On SEMI reduce production guard_identification -> IDENTIFIER EQUALS IDENTIFIER
-- On COMMA reduce production guard_identification -> IDENTIFIER EQUALS IDENTIFIER

State 218:
where_guard_indentifications_opt -> WHERE guard_indentification_list . [ SEMI ]
-- On SEMI reduce production where_guard_indentifications_opt -> WHERE guard_indentification_list

State 219:
guard_indentification_list -> guard_identification . [ SEMI ]
guard_indentification_list -> guard_identification . COMMA guard_indentification_list [ SEMI ]
-- On COMMA shift to state 220
-- On SEMI reduce production guard_indentification_list -> guard_identification

State 220:
guard_indentification_list -> guard_identification COMMA . guard_indentification_list [ SEMI ]
-- On IDENTIFIER shift to state 215
-- On guard_indentification_list shift to state 221
-- On guard_identification shift to state 219

State 221:
guard_indentification_list -> guard_identification COMMA guard_indentification_list . [ SEMI ]
-- On SEMI reduce production guard_indentification_list -> guard_identification COMMA guard_indentification_list

State 222:
mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt . SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SEMI shift to state 223

State 223:
mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On STATIC reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On SOURCE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On SEQUENCE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On READWRITE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On PRECEDENCE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On POOL reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On PLUGIN reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On NODE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On MODULE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On INSTANCE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On INITIAL reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On IDENTIFIER reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On HANDLE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On FREE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On EXTERNAL reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On EXCLUSIVE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On ENDOFFILE reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On END reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On DOOR reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On DEPENDS reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI
-- On CONDITION reduce production mod_inst -> external_opt INSTANCE namespaced_ident IDENTIFIER where_guard_indentifications_opt SEMI

State 224:
atom_type -> FREE . [ SLASH IDENTIFIER ]
-- On SLASH reduce production atom_type -> FREE
-- On IDENTIFIER reduce production atom_type -> FREE

State 225:
atom_type -> EXCLUSIVE . [ SLASH IDENTIFIER ]
-- On SLASH reduce production atom_type -> EXCLUSIVE
-- On IDENTIFIER reduce production atom_type -> EXCLUSIVE

State 226:
cond_decl -> external_opt CONDITION . namespaced_ident simple_arg_list ARROW BOOL SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 227

State 227:
cond_decl -> external_opt CONDITION namespaced_ident . simple_arg_list ARROW BOOL SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On LEFT_PAREN shift to state 200
-- On simple_arg_list shift to state 228

State 228:
cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list . ARROW BOOL SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On ARROW shift to state 229

State 229:
cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW . BOOL SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On BOOL shift to state 230

State 230:
cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL . SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SEMI shift to state 231

State 231:
cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On STATIC reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On SOURCE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On SEQUENCE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On READWRITE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On PRECEDENCE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On POOL reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On PLUGIN reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On NODE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On MODULE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On INSTANCE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On INITIAL reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On IDENTIFIER reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On HANDLE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On FREE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On EXTERNAL reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On EXCLUSIVE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On ENDOFFILE reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On END reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On DOOR reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On DEPENDS reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI
-- On CONDITION reduce production cond_decl -> external_opt CONDITION namespaced_ident simple_arg_list ARROW BOOL SEMI

State 232:
atom_decl -> external_opt atom_type . atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SLASH shift to state 233
-- On atom_mod_opt_list shift to state 238
-- On IDENTIFIER reduce production atom_mod_opt_list -> 

State 233:
atom_mod_opt_list -> SLASH . atom_mod atom_mod_opt_list [ IDENTIFIER ]
-- On UNORDERED shift to state 234
-- On GC shift to state 235
-- On atom_mod shift to state 236

State 234:
atom_mod -> UNORDERED . [ SLASH IDENTIFIER ]
-- On SLASH reduce production atom_mod -> UNORDERED
-- On IDENTIFIER reduce production atom_mod -> UNORDERED

State 235:
atom_mod -> GC . [ SLASH IDENTIFIER ]
-- On SLASH reduce production atom_mod -> GC
-- On IDENTIFIER reduce production atom_mod -> GC

State 236:
atom_mod_opt_list -> SLASH atom_mod . atom_mod_opt_list [ IDENTIFIER ]
-- On SLASH shift to state 233
-- On atom_mod_opt_list shift to state 237
-- On IDENTIFIER reduce production atom_mod_opt_list -> 

State 237:
atom_mod_opt_list -> SLASH atom_mod atom_mod_opt_list . [ IDENTIFIER ]
-- On IDENTIFIER reduce production atom_mod_opt_list -> SLASH atom_mod atom_mod_opt_list

State 238:
atom_decl -> external_opt atom_type atom_mod_opt_list . namespaced_ident simple_arg_list ARROW data_type SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On IDENTIFIER shift to state 6
-- On namespaced_ident shift to state 239

State 239:
atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident . simple_arg_list ARROW data_type SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On LEFT_PAREN shift to state 200
-- On simple_arg_list shift to state 240

State 240:
atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list . ARROW data_type SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On ARROW shift to state 241

State 241:
atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW . data_type SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On CONST shift to state 168
-- On type_mod_opt shift to state 174
-- On data_type shift to state 242
-- On LEFT_PAREN reduce production type_mod_opt -> 
-- On IDENTIFIER reduce production type_mod_opt -> 
-- On BOOL reduce production type_mod_opt -> 

State 242:
atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type . SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SEMI shift to state 243

State 243:
atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On STATIC reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On SOURCE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On SEQUENCE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On READWRITE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On PRECEDENCE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On POOL reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On PLUGIN reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On NODE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On MODULE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On INSTANCE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On INITIAL reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On IDENTIFIER reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On HANDLE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On FREE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On EXTERNAL reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On EXCLUSIVE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On ENDOFFILE reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On END reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On DOOR reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On DEPENDS reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI
-- On CONDITION reduce production atom_decl -> external_opt atom_type atom_mod_opt_list namespaced_ident simple_arg_list ARROW data_type SEMI

State 244:
code_list -> code_list expr_part . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list expr_part
-- On STATIC reduce production code_list -> code_list expr_part
-- On SOURCE reduce production code_list -> code_list expr_part
-- On SEQUENCE reduce production code_list -> code_list expr_part
-- On READWRITE reduce production code_list -> code_list expr_part
-- On PRECEDENCE reduce production code_list -> code_list expr_part
-- On POOL reduce production code_list -> code_list expr_part
-- On PLUGIN reduce production code_list -> code_list expr_part
-- On NODE reduce production code_list -> code_list expr_part
-- On MODULE reduce production code_list -> code_list expr_part
-- On INSTANCE reduce production code_list -> code_list expr_part
-- On INITIAL reduce production code_list -> code_list expr_part
-- On IDENTIFIER reduce production code_list -> code_list expr_part
-- On HANDLE reduce production code_list -> code_list expr_part
-- On FREE reduce production code_list -> code_list expr_part
-- On EXTERNAL reduce production code_list -> code_list expr_part
-- On EXCLUSIVE reduce production code_list -> code_list expr_part
-- On ENDOFFILE reduce production code_list -> code_list expr_part
-- On END reduce production code_list -> code_list expr_part
-- On DOOR reduce production code_list -> code_list expr_part
-- On DEPENDS reduce production code_list -> code_list expr_part
-- On CONDITION reduce production code_list -> code_list expr_part

State 245:
code_list -> code_list err_def . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list err_def
-- On STATIC reduce production code_list -> code_list err_def
-- On SOURCE reduce production code_list -> code_list err_def
-- On SEQUENCE reduce production code_list -> code_list err_def
-- On READWRITE reduce production code_list -> code_list err_def
-- On PRECEDENCE reduce production code_list -> code_list err_def
-- On POOL reduce production code_list -> code_list err_def
-- On PLUGIN reduce production code_list -> code_list err_def
-- On NODE reduce production code_list -> code_list err_def
-- On MODULE reduce production code_list -> code_list err_def
-- On INSTANCE reduce production code_list -> code_list err_def
-- On INITIAL reduce production code_list -> code_list err_def
-- On IDENTIFIER reduce production code_list -> code_list err_def
-- On HANDLE reduce production code_list -> code_list err_def
-- On FREE reduce production code_list -> code_list err_def
-- On EXTERNAL reduce production code_list -> code_list err_def
-- On EXCLUSIVE reduce production code_list -> code_list err_def
-- On ENDOFFILE reduce production code_list -> code_list err_def
-- On END reduce production code_list -> code_list err_def
-- On DOOR reduce production code_list -> code_list err_def
-- On DEPENDS reduce production code_list -> code_list err_def
-- On CONDITION reduce production code_list -> code_list err_def

State 246:
code_list -> code_list cond_decl . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list cond_decl
-- On STATIC reduce production code_list -> code_list cond_decl
-- On SOURCE reduce production code_list -> code_list cond_decl
-- On SEQUENCE reduce production code_list -> code_list cond_decl
-- On READWRITE reduce production code_list -> code_list cond_decl
-- On PRECEDENCE reduce production code_list -> code_list cond_decl
-- On POOL reduce production code_list -> code_list cond_decl
-- On PLUGIN reduce production code_list -> code_list cond_decl
-- On NODE reduce production code_list -> code_list cond_decl
-- On MODULE reduce production code_list -> code_list cond_decl
-- On INSTANCE reduce production code_list -> code_list cond_decl
-- On INITIAL reduce production code_list -> code_list cond_decl
-- On IDENTIFIER reduce production code_list -> code_list cond_decl
-- On HANDLE reduce production code_list -> code_list cond_decl
-- On FREE reduce production code_list -> code_list cond_decl
-- On EXTERNAL reduce production code_list -> code_list cond_decl
-- On EXCLUSIVE reduce production code_list -> code_list cond_decl
-- On ENDOFFILE reduce production code_list -> code_list cond_decl
-- On END reduce production code_list -> code_list cond_decl
-- On DOOR reduce production code_list -> code_list cond_decl
-- On DEPENDS reduce production code_list -> code_list cond_decl
-- On CONDITION reduce production code_list -> code_list cond_decl

State 247:
code_list -> code_list atom_decl . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production code_list -> code_list atom_decl
-- On STATIC reduce production code_list -> code_list atom_decl
-- On SOURCE reduce production code_list -> code_list atom_decl
-- On SEQUENCE reduce production code_list -> code_list atom_decl
-- On READWRITE reduce production code_list -> code_list atom_decl
-- On PRECEDENCE reduce production code_list -> code_list atom_decl
-- On POOL reduce production code_list -> code_list atom_decl
-- On PLUGIN reduce production code_list -> code_list atom_decl
-- On NODE reduce production code_list -> code_list atom_decl
-- On MODULE reduce production code_list -> code_list atom_decl
-- On INSTANCE reduce production code_list -> code_list atom_decl
-- On INITIAL reduce production code_list -> code_list atom_decl
-- On IDENTIFIER reduce production code_list -> code_list atom_decl
-- On HANDLE reduce production code_list -> code_list atom_decl
-- On FREE reduce production code_list -> code_list atom_decl
-- On EXTERNAL reduce production code_list -> code_list atom_decl
-- On EXCLUSIVE reduce production code_list -> code_list atom_decl
-- On ENDOFFILE reduce production code_list -> code_list atom_decl
-- On END reduce production code_list -> code_list atom_decl
-- On DOOR reduce production code_list -> code_list atom_decl
-- On DEPENDS reduce production code_list -> code_list atom_decl
-- On CONDITION reduce production code_list -> code_list atom_decl

State 248:
expr_part -> assn . SEMI [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On SEMI shift to state 249

State 249:
expr_part -> assn SEMI . [ TERMINATE STATIC SOURCE SEQUENCE READWRITE PRECEDENCE POOL PLUGIN NODE MODULE INSTANCE INITIAL IDENTIFIER HANDLE FREE EXTERNAL EXCLUSIVE ENDOFFILE END DOOR DEPENDS CONDITION ]
-- On TERMINATE reduce production expr_part -> assn SEMI
-- On STATIC reduce production expr_part -> assn SEMI
-- On SOURCE reduce production expr_part -> assn SEMI
-- On SEQUENCE reduce production expr_part -> assn SEMI
-- On READWRITE reduce production expr_part -> assn SEMI
-- On PRECEDENCE reduce production expr_part -> assn SEMI
-- On POOL reduce production expr_part -> assn SEMI
-- On PLUGIN reduce production expr_part -> assn SEMI
-- On NODE reduce production expr_part -> assn SEMI
-- On MODULE reduce production expr_part -> assn SEMI
-- On INSTANCE reduce production expr_part -> assn SEMI
-- On INITIAL reduce production expr_part -> assn SEMI
-- On IDENTIFIER reduce production expr_part -> assn SEMI
-- On HANDLE reduce production expr_part -> assn SEMI
-- On FREE reduce production expr_part -> assn SEMI
-- On EXTERNAL reduce production expr_part -> assn SEMI
-- On EXCLUSIVE reduce production expr_part -> assn SEMI
-- On ENDOFFILE reduce production expr_part -> assn SEMI
-- On END reduce production expr_part -> assn SEMI
-- On DOOR reduce production expr_part -> assn SEMI
-- On DEPENDS reduce production expr_part -> assn SEMI
-- On CONDITION reduce production expr_part -> assn SEMI

