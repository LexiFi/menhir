State 0:
## Known stack suffix:
##
## LR(1) items:
toplevelentries' -> . toplevelentries [ # ]
## Transitions:
-- On EOL shift to state 1
-- On toplevelentries shift to state 3
-- On list(EOL) shift to state 4
## Reductions:
-- On METADATA_ID reduce production list(EOL) ->
-- On LOCAL reduce production list(EOL) ->
-- On KW_TARGET reduce production list(EOL) ->
-- On KW_DEFINE reduce production list(EOL) ->
-- On KW_DECLARE reduce production list(EOL) ->
-- On KW_ATTRIBUTES reduce production list(EOL) ->
-- On GLOBAL reduce production list(EOL) ->
-- On EOF reduce production list(EOL) ->

State 1:
## Known stack suffix:
## EOL
## LR(1) items:
list(EOL) -> EOL . list(EOL) [ METADATA_ID LOCAL LCURLY LABEL KW_ZEXT KW_XOR KW_VAARG KW_UREM KW_UNREACHABLE KW_UITOFP KW_UDIV KW_TRUNC KW_TARGET KW_TAIL KW_SWITCH KW_SUB KW_STORE KW_SREM KW_SITOFP KW_SHUFFLEVECTOR KW_SHL KW_SEXT KW_SELECT KW_SDIV KW_RET KW_RESUME KW_PTRTOINT KW_PHI KW_OR KW_MUL KW_LSHR KW_LOAD KW_LANDINGPAD KW_INVOKE KW_INTTOPTR KW_INSERTVALUE KW_INSERTELEMENT KW_INDIRECTBR KW_INBOUNDS KW_ICMP KW_GETELEMENTPTR KW_FSUB KW_FREM KW_FPTRUNC KW_FPTOUI KW_FPTOSI KW_FPEXT KW_FMUL KW_FENCE KW_FDIV KW_FCMP KW_FADD KW_EXTRACTVALUE KW_EXTRACTELEMENT KW_DEFINE KW_DECLARE KW_CALL KW_BR KW_BITCAST KW_ATTRIBUTES KW_ATOMICRMW KW_ATOMICCMPXCHG KW_ASHR KW_AND KW_ALLOCA KW_ADD GLOBAL EOF ]
## Transitions:
-- On EOL shift to state 1
-- On list(EOL) shift to state 2
## Reductions:
-- On METADATA_ID reduce production list(EOL) ->
-- On LOCAL reduce production list(EOL) ->
-- On LCURLY reduce production list(EOL) ->
-- On LABEL reduce production list(EOL) ->
-- On KW_ZEXT reduce production list(EOL) ->
-- On KW_XOR reduce production list(EOL) ->
-- On KW_VAARG reduce production list(EOL) ->
-- On KW_UREM reduce production list(EOL) ->
-- On KW_UNREACHABLE reduce production list(EOL) ->
-- On KW_UITOFP reduce production list(EOL) ->
-- On KW_UDIV reduce production list(EOL) ->
-- On KW_TRUNC reduce production list(EOL) ->
-- On KW_TARGET reduce production list(EOL) ->
-- On KW_TAIL reduce production list(EOL) ->
-- On KW_SWITCH reduce production list(EOL) ->
-- On KW_SUB reduce production list(EOL) ->
-- On KW_STORE reduce production list(EOL) ->
-- On KW_SREM reduce production list(EOL) ->
-- On KW_SITOFP reduce production list(EOL) ->
-- On KW_SHUFFLEVECTOR reduce production list(EOL) ->
-- On KW_SHL reduce production list(EOL) ->
-- On KW_SEXT reduce production list(EOL) ->
-- On KW_SELECT reduce production list(EOL) ->
-- On KW_SDIV reduce production list(EOL) ->
-- On KW_RET reduce production list(EOL) ->
-- On KW_RESUME reduce production list(EOL) ->
-- On KW_PTRTOINT reduce production list(EOL) ->
-- On KW_PHI reduce production list(EOL) ->
-- On KW_OR reduce production list(EOL) ->
-- On KW_MUL reduce production list(EOL) ->
-- On KW_LSHR reduce production list(EOL) ->
-- On KW_LOAD reduce production list(EOL) ->
-- On KW_LANDINGPAD reduce production list(EOL) ->
-- On KW_INVOKE reduce production list(EOL) ->
-- On KW_INTTOPTR reduce production list(EOL) ->
-- On KW_INSERTVALUE reduce production list(EOL) ->
-- On KW_INSERTELEMENT reduce production list(EOL) ->
-- On KW_INDIRECTBR reduce production list(EOL) ->
-- On KW_INBOUNDS reduce production list(EOL) ->
-- On KW_ICMP reduce production list(EOL) ->
-- On KW_GETELEMENTPTR reduce production list(EOL) ->
-- On KW_FSUB reduce production list(EOL) ->
-- On KW_FREM reduce production list(EOL) ->
-- On KW_FPTRUNC reduce production list(EOL) ->
-- On KW_FPTOUI reduce production list(EOL) ->
-- On KW_FPTOSI reduce production list(EOL) ->
-- On KW_FPEXT reduce production list(EOL) ->
-- On KW_FMUL reduce production list(EOL) ->
-- On KW_FENCE reduce production list(EOL) ->
-- On KW_FDIV reduce production list(EOL) ->
-- On KW_FCMP reduce production list(EOL) ->
-- On KW_FADD reduce production list(EOL) ->
-- On KW_EXTRACTVALUE reduce production list(EOL) ->
-- On KW_EXTRACTELEMENT reduce production list(EOL) ->
-- On KW_DEFINE reduce production list(EOL) ->
-- On KW_DECLARE reduce production list(EOL) ->
-- On KW_CALL reduce production list(EOL) ->
-- On KW_BR reduce production list(EOL) ->
-- On KW_BITCAST reduce production list(EOL) ->
-- On KW_ATTRIBUTES reduce production list(EOL) ->
-- On KW_ATOMICRMW reduce production list(EOL) ->
-- On KW_ATOMICCMPXCHG reduce production list(EOL) ->
-- On KW_ASHR reduce production list(EOL) ->
-- On KW_AND reduce production list(EOL) ->
-- On KW_ALLOCA reduce production list(EOL) ->
-- On KW_ADD reduce production list(EOL) ->
-- On GLOBAL reduce production list(EOL) ->
-- On EOF reduce production list(EOL) ->

State 2:
## Known stack suffix:
## EOL list(EOL)
## LR(1) items:
list(EOL) -> EOL list(EOL) . [ METADATA_ID LOCAL LCURLY LABEL KW_ZEXT KW_XOR KW_VAARG KW_UREM KW_UNREACHABLE KW_UITOFP KW_UDIV KW_TRUNC KW_TARGET KW_TAIL KW_SWITCH KW_SUB KW_STORE KW_SREM KW_SITOFP KW_SHUFFLEVECTOR KW_SHL KW_SEXT KW_SELECT KW_SDIV KW_RET KW_RESUME KW_PTRTOINT KW_PHI KW_OR KW_MUL KW_LSHR KW_LOAD KW_LANDINGPAD KW_INVOKE KW_INTTOPTR KW_INSERTVALUE KW_INSERTELEMENT KW_INDIRECTBR KW_INBOUNDS KW_ICMP KW_GETELEMENTPTR KW_FSUB KW_FREM KW_FPTRUNC KW_FPTOUI KW_FPTOSI KW_FPEXT KW_FMUL KW_FENCE KW_FDIV KW_FCMP KW_FADD KW_EXTRACTVALUE KW_EXTRACTELEMENT KW_DEFINE KW_DECLARE KW_CALL KW_BR KW_BITCAST KW_ATTRIBUTES KW_ATOMICRMW KW_ATOMICCMPXCHG KW_ASHR KW_AND KW_ALLOCA KW_ADD GLOBAL EOF ]
## Transitions:
## Reductions:
-- On METADATA_ID reduce production list(EOL) -> EOL list(EOL)
-- On LOCAL reduce production list(EOL) -> EOL list(EOL)
-- On LCURLY reduce production list(EOL) -> EOL list(EOL)
-- On LABEL reduce production list(EOL) -> EOL list(EOL)
-- On KW_ZEXT reduce production list(EOL) -> EOL list(EOL)
-- On KW_XOR reduce production list(EOL) -> EOL list(EOL)
-- On KW_VAARG reduce production list(EOL) -> EOL list(EOL)
-- On KW_UREM reduce production list(EOL) -> EOL list(EOL)
-- On KW_UNREACHABLE reduce production list(EOL) -> EOL list(EOL)
-- On KW_UITOFP reduce production list(EOL) -> EOL list(EOL)
-- On KW_UDIV reduce production list(EOL) -> EOL list(EOL)
-- On KW_TRUNC reduce production list(EOL) -> EOL list(EOL)
-- On KW_TARGET reduce production list(EOL) -> EOL list(EOL)
-- On KW_TAIL reduce production list(EOL) -> EOL list(EOL)
-- On KW_SWITCH reduce production list(EOL) -> EOL list(EOL)
-- On KW_SUB reduce production list(EOL) -> EOL list(EOL)
-- On KW_STORE reduce production list(EOL) -> EOL list(EOL)
-- On KW_SREM reduce production list(EOL) -> EOL list(EOL)
-- On KW_SITOFP reduce production list(EOL) -> EOL list(EOL)
-- On KW_SHUFFLEVECTOR reduce production list(EOL) -> EOL list(EOL)
-- On KW_SHL reduce production list(EOL) -> EOL list(EOL)
-- On KW_SEXT reduce production list(EOL) -> EOL list(EOL)
-- On KW_SELECT reduce production list(EOL) -> EOL list(EOL)
-- On KW_SDIV reduce production list(EOL) -> EOL list(EOL)
-- On KW_RET reduce production list(EOL) -> EOL list(EOL)
-- On KW_RESUME reduce production list(EOL) -> EOL list(EOL)
-- On KW_PTRTOINT reduce production list(EOL) -> EOL list(EOL)
-- On KW_PHI reduce production list(EOL) -> EOL list(EOL)
-- On KW_OR reduce production list(EOL) -> EOL list(EOL)
-- On KW_MUL reduce production list(EOL) -> EOL list(EOL)
-- On KW_LSHR reduce production list(EOL) -> EOL list(EOL)
-- On KW_LOAD reduce production list(EOL) -> EOL list(EOL)
-- On KW_LANDINGPAD reduce production list(EOL) -> EOL list(EOL)
-- On KW_INVOKE reduce production list(EOL) -> EOL list(EOL)
-- On KW_INTTOPTR reduce production list(EOL) -> EOL list(EOL)
-- On KW_INSERTVALUE reduce production list(EOL) -> EOL list(EOL)
-- On KW_INSERTELEMENT reduce production list(EOL) -> EOL list(EOL)
-- On KW_INDIRECTBR reduce production list(EOL) -> EOL list(EOL)
-- On KW_INBOUNDS reduce production list(EOL) -> EOL list(EOL)
-- On KW_ICMP reduce production list(EOL) -> EOL list(EOL)
-- On KW_GETELEMENTPTR reduce production list(EOL) -> EOL list(EOL)
-- On KW_FSUB reduce production list(EOL) -> EOL list(EOL)
-- On KW_FREM reduce production list(EOL) -> EOL list(EOL)
-- On KW_FPTRUNC reduce production list(EOL) -> EOL list(EOL)
-- On KW_FPTOUI reduce production list(EOL) -> EOL list(EOL)
-- On KW_FPTOSI reduce production list(EOL) -> EOL list(EOL)
-- On KW_FPEXT reduce production list(EOL) -> EOL list(EOL)
-- On KW_FMUL reduce production list(EOL) -> EOL list(EOL)
-- On KW_FENCE reduce production list(EOL) -> EOL list(EOL)
-- On KW_FDIV reduce production list(EOL) -> EOL list(EOL)
-- On KW_FCMP reduce production list(EOL) -> EOL list(EOL)
-- On KW_FADD reduce production list(EOL) -> EOL list(EOL)
-- On KW_EXTRACTVALUE reduce production list(EOL) -> EOL list(EOL)
-- On KW_EXTRACTELEMENT reduce production list(EOL) -> EOL list(EOL)
-- On KW_DEFINE reduce production list(EOL) -> EOL list(EOL)
-- On KW_DECLARE reduce production list(EOL) -> EOL list(EOL)
-- On KW_CALL reduce production list(EOL) -> EOL list(EOL)
-- On KW_BR reduce production list(EOL) -> EOL list(EOL)
-- On KW_BITCAST reduce production list(EOL) -> EOL list(EOL)
-- On KW_ATTRIBUTES reduce production list(EOL) -> EOL list(EOL)
-- On KW_ATOMICRMW reduce production list(EOL) -> EOL list(EOL)
-- On KW_ATOMICCMPXCHG reduce production list(EOL) -> EOL list(EOL)
-- On KW_ASHR reduce production list(EOL) -> EOL list(EOL)
-- On KW_AND reduce production list(EOL) -> EOL list(EOL)
-- On KW_ALLOCA reduce production list(EOL) -> EOL list(EOL)
-- On KW_ADD reduce production list(EOL) -> EOL list(EOL)
-- On GLOBAL reduce production list(EOL) -> EOL list(EOL)
-- On EOF reduce production list(EOL) -> EOL list(EOL)

State 3:
## Known stack suffix:
## toplevelentries
## LR(1) items:
toplevelentries' -> toplevelentries . [ # ]
## Transitions:
## Reductions:
-- On # accept toplevelentries

State 4:
## Known stack suffix:
## list(EOL)
## LR(1) items:
toplevelentries -> list(EOL) . list(terminated(toplevelentry,nonempty_list(EOL))) EOF [ # ]
## Transitions:
-- On METADATA_ID shift to state 5
-- On LOCAL shift to state 91
-- On KW_TARGET shift to state 95
-- On KW_DEFINE shift to state 102
-- On KW_DECLARE shift to state 498
-- On KW_ATTRIBUTES shift to state 526
-- On GLOBAL shift to state 532
-- On toplevelentry shift to state 548
-- On list(terminated(toplevelentry,nonempty_list(EOL))) shift to state 554
-- On global_decl shift to state 551
-- On definition shift to state 552
-- On declaration shift to state 553
## Reductions:
-- On EOF reduce production list(terminated(toplevelentry,nonempty_list(EOL))) ->

State 5:
## Known stack suffix:
## METADATA_ID
## LR(1) items:
toplevelentry -> METADATA_ID . EQ tle_metadata [ EOL ]
## Transitions:
-- On EQ shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## METADATA_ID EQ
## LR(1) items:
toplevelentry -> METADATA_ID EQ . tle_metadata [ EOL ]
## Transitions:
-- On KW_METADATA shift to state 7
-- On BANGLCURLY shift to state 83
-- On tle_metadata shift to state 90
## Reductions:

State 7:
## Known stack suffix:
## KW_METADATA
## LR(1) items:
tle_metadata -> KW_METADATA . metadata_node [ EOL ]
## Transitions:
-- On BANGLCURLY shift to state 8
-- On metadata_node shift to state 82
## Reductions:

State 8:
## Known stack suffix:
## BANGLCURLY
## LR(1) items:
metadata_node -> BANGLCURLY . loption(separated_nonempty_list(COMMA,metadata_value)) RCURLY [ RCURLY EOL COMMA ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_NULL shift to state 45
-- On KW_METADATA shift to state 46
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 50
-- On tconst shift to state 75
-- On separated_nonempty_list(COMMA,metadata_value) shift to state 76
-- On metadata_value shift to state 77
-- On loption(separated_nonempty_list(COMMA,metadata_value)) shift to state 80
## Reductions:
-- On RCURLY reduce production loption(separated_nonempty_list(COMMA,metadata_value)) ->

State 9:
## Known stack suffix:
## LTLCURLY
## LR(1) items:
typ -> LTLCURLY . loption(separated_nonempty_list(COMMA,typ)) RCURLYGT [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 29
-- On separated_nonempty_list(COMMA,typ) shift to state 32
-- On loption(separated_nonempty_list(COMMA,typ)) shift to state 43
## Reductions:
-- On RCURLYGT reduce production loption(separated_nonempty_list(COMMA,typ)) ->

State 10:
## Known stack suffix:
## LT
## LR(1) items:
typ -> LT . INTEGER KW_X typ GT [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On INTEGER shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## LT INTEGER
## LR(1) items:
typ -> LT INTEGER . KW_X typ GT [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On KW_X shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## LT INTEGER KW_X
## LR(1) items:
typ -> LT INTEGER KW_X . typ GT [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 41
## Reductions:

State 13:
## Known stack suffix:
## LSQUARE
## LR(1) items:
typ -> LSQUARE . INTEGER KW_X typ RSQUARE [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On INTEGER shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## LSQUARE INTEGER
## LR(1) items:
typ -> LSQUARE INTEGER . KW_X typ RSQUARE [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On KW_X shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## LSQUARE INTEGER KW_X
## LR(1) items:
typ -> LSQUARE INTEGER KW_X . typ RSQUARE [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 39
## Reductions:

State 16:
## Known stack suffix:
## LCURLY
## LR(1) items:
typ -> LCURLY . loption(separated_nonempty_list(COMMA,typ)) RCURLY [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 29
-- On separated_nonempty_list(COMMA,typ) shift to state 32
-- On loption(separated_nonempty_list(COMMA,typ)) shift to state 37
## Reductions:
-- On RCURLY reduce production loption(separated_nonempty_list(COMMA,typ)) ->

State 17:
## Known stack suffix:
## KW_X86_MMX
## LR(1) items:
typ -> KW_X86_MMX . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_X86_MMX
-- On RSQUARE reduce production typ -> KW_X86_MMX
-- On RPAREN reduce production typ -> KW_X86_MMX
-- On RCURLYGT reduce production typ -> KW_X86_MMX
-- On RCURLY reduce production typ -> KW_X86_MMX
-- On LTLCURLY reduce production typ -> KW_X86_MMX
-- On LT reduce production typ -> KW_X86_MMX
-- On LSQUARE reduce production typ -> KW_X86_MMX
-- On LPAREN reduce production typ -> KW_X86_MMX
-- On LOCAL reduce production typ -> KW_X86_MMX
-- On LCURLY reduce production typ -> KW_X86_MMX
-- On KW_ZEROINITIALIZER reduce production typ -> KW_X86_MMX
-- On KW_ZEROEXT reduce production typ -> KW_X86_MMX
-- On KW_UNDEF reduce production typ -> KW_X86_MMX
-- On KW_TRUE reduce production typ -> KW_X86_MMX
-- On KW_SRET reduce production typ -> KW_X86_MMX
-- On KW_SIGNEXT reduce production typ -> KW_X86_MMX
-- On KW_RETURNED reduce production typ -> KW_X86_MMX
-- On KW_NULL reduce production typ -> KW_X86_MMX
-- On KW_NONNULL reduce production typ -> KW_X86_MMX
-- On KW_NOCAPTURE reduce production typ -> KW_X86_MMX
-- On KW_NOALIAS reduce production typ -> KW_X86_MMX
-- On KW_NEST reduce production typ -> KW_X86_MMX
-- On KW_INREG reduce production typ -> KW_X86_MMX
-- On KW_INALLOCA reduce production typ -> KW_X86_MMX
-- On KW_FALSE reduce production typ -> KW_X86_MMX
-- On KW_DEREFERENCEABLE reduce production typ -> KW_X86_MMX
-- On KW_BYVAL reduce production typ -> KW_X86_MMX
-- On KW_ALIGN reduce production typ -> KW_X86_MMX
-- On INTEGER reduce production typ -> KW_X86_MMX
-- On GT reduce production typ -> KW_X86_MMX
-- On GLOBAL reduce production typ -> KW_X86_MMX
-- On FLOAT reduce production typ -> KW_X86_MMX
-- On EOL reduce production typ -> KW_X86_MMX
-- On COMMA reduce production typ -> KW_X86_MMX

State 18:
## Known stack suffix:
## KW_X86_FP80
## LR(1) items:
typ -> KW_X86_FP80 . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_X86_FP80
-- On RSQUARE reduce production typ -> KW_X86_FP80
-- On RPAREN reduce production typ -> KW_X86_FP80
-- On RCURLYGT reduce production typ -> KW_X86_FP80
-- On RCURLY reduce production typ -> KW_X86_FP80
-- On LTLCURLY reduce production typ -> KW_X86_FP80
-- On LT reduce production typ -> KW_X86_FP80
-- On LSQUARE reduce production typ -> KW_X86_FP80
-- On LPAREN reduce production typ -> KW_X86_FP80
-- On LOCAL reduce production typ -> KW_X86_FP80
-- On LCURLY reduce production typ -> KW_X86_FP80
-- On KW_ZEROINITIALIZER reduce production typ -> KW_X86_FP80
-- On KW_ZEROEXT reduce production typ -> KW_X86_FP80
-- On KW_UNDEF reduce production typ -> KW_X86_FP80
-- On KW_TRUE reduce production typ -> KW_X86_FP80
-- On KW_SRET reduce production typ -> KW_X86_FP80
-- On KW_SIGNEXT reduce production typ -> KW_X86_FP80
-- On KW_RETURNED reduce production typ -> KW_X86_FP80
-- On KW_NULL reduce production typ -> KW_X86_FP80
-- On KW_NONNULL reduce production typ -> KW_X86_FP80
-- On KW_NOCAPTURE reduce production typ -> KW_X86_FP80
-- On KW_NOALIAS reduce production typ -> KW_X86_FP80
-- On KW_NEST reduce production typ -> KW_X86_FP80
-- On KW_INREG reduce production typ -> KW_X86_FP80
-- On KW_INALLOCA reduce production typ -> KW_X86_FP80
-- On KW_FALSE reduce production typ -> KW_X86_FP80
-- On KW_DEREFERENCEABLE reduce production typ -> KW_X86_FP80
-- On KW_BYVAL reduce production typ -> KW_X86_FP80
-- On KW_ALIGN reduce production typ -> KW_X86_FP80
-- On INTEGER reduce production typ -> KW_X86_FP80
-- On GT reduce production typ -> KW_X86_FP80
-- On GLOBAL reduce production typ -> KW_X86_FP80
-- On FLOAT reduce production typ -> KW_X86_FP80
-- On EOL reduce production typ -> KW_X86_FP80
-- On COMMA reduce production typ -> KW_X86_FP80

State 19:
## Known stack suffix:
## KW_VOID
## LR(1) items:
typ -> KW_VOID . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_VOID
-- On RSQUARE reduce production typ -> KW_VOID
-- On RPAREN reduce production typ -> KW_VOID
-- On RCURLYGT reduce production typ -> KW_VOID
-- On RCURLY reduce production typ -> KW_VOID
-- On LTLCURLY reduce production typ -> KW_VOID
-- On LT reduce production typ -> KW_VOID
-- On LSQUARE reduce production typ -> KW_VOID
-- On LPAREN reduce production typ -> KW_VOID
-- On LOCAL reduce production typ -> KW_VOID
-- On LCURLY reduce production typ -> KW_VOID
-- On KW_ZEROINITIALIZER reduce production typ -> KW_VOID
-- On KW_ZEROEXT reduce production typ -> KW_VOID
-- On KW_UNDEF reduce production typ -> KW_VOID
-- On KW_TRUE reduce production typ -> KW_VOID
-- On KW_SRET reduce production typ -> KW_VOID
-- On KW_SIGNEXT reduce production typ -> KW_VOID
-- On KW_RETURNED reduce production typ -> KW_VOID
-- On KW_NULL reduce production typ -> KW_VOID
-- On KW_NONNULL reduce production typ -> KW_VOID
-- On KW_NOCAPTURE reduce production typ -> KW_VOID
-- On KW_NOALIAS reduce production typ -> KW_VOID
-- On KW_NEST reduce production typ -> KW_VOID
-- On KW_INREG reduce production typ -> KW_VOID
-- On KW_INALLOCA reduce production typ -> KW_VOID
-- On KW_FALSE reduce production typ -> KW_VOID
-- On KW_DEREFERENCEABLE reduce production typ -> KW_VOID
-- On KW_BYVAL reduce production typ -> KW_VOID
-- On KW_ALIGN reduce production typ -> KW_VOID
-- On INTEGER reduce production typ -> KW_VOID
-- On GT reduce production typ -> KW_VOID
-- On GLOBAL reduce production typ -> KW_VOID
-- On FLOAT reduce production typ -> KW_VOID
-- On EOL reduce production typ -> KW_VOID
-- On COMMA reduce production typ -> KW_VOID

State 20:
## Known stack suffix:
## KW_PPC_FP128
## LR(1) items:
typ -> KW_PPC_FP128 . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_PPC_FP128
-- On RSQUARE reduce production typ -> KW_PPC_FP128
-- On RPAREN reduce production typ -> KW_PPC_FP128
-- On RCURLYGT reduce production typ -> KW_PPC_FP128
-- On RCURLY reduce production typ -> KW_PPC_FP128
-- On LTLCURLY reduce production typ -> KW_PPC_FP128
-- On LT reduce production typ -> KW_PPC_FP128
-- On LSQUARE reduce production typ -> KW_PPC_FP128
-- On LPAREN reduce production typ -> KW_PPC_FP128
-- On LOCAL reduce production typ -> KW_PPC_FP128
-- On LCURLY reduce production typ -> KW_PPC_FP128
-- On KW_ZEROINITIALIZER reduce production typ -> KW_PPC_FP128
-- On KW_ZEROEXT reduce production typ -> KW_PPC_FP128
-- On KW_UNDEF reduce production typ -> KW_PPC_FP128
-- On KW_TRUE reduce production typ -> KW_PPC_FP128
-- On KW_SRET reduce production typ -> KW_PPC_FP128
-- On KW_SIGNEXT reduce production typ -> KW_PPC_FP128
-- On KW_RETURNED reduce production typ -> KW_PPC_FP128
-- On KW_NULL reduce production typ -> KW_PPC_FP128
-- On KW_NONNULL reduce production typ -> KW_PPC_FP128
-- On KW_NOCAPTURE reduce production typ -> KW_PPC_FP128
-- On KW_NOALIAS reduce production typ -> KW_PPC_FP128
-- On KW_NEST reduce production typ -> KW_PPC_FP128
-- On KW_INREG reduce production typ -> KW_PPC_FP128
-- On KW_INALLOCA reduce production typ -> KW_PPC_FP128
-- On KW_FALSE reduce production typ -> KW_PPC_FP128
-- On KW_DEREFERENCEABLE reduce production typ -> KW_PPC_FP128
-- On KW_BYVAL reduce production typ -> KW_PPC_FP128
-- On KW_ALIGN reduce production typ -> KW_PPC_FP128
-- On INTEGER reduce production typ -> KW_PPC_FP128
-- On GT reduce production typ -> KW_PPC_FP128
-- On GLOBAL reduce production typ -> KW_PPC_FP128
-- On FLOAT reduce production typ -> KW_PPC_FP128
-- On EOL reduce production typ -> KW_PPC_FP128
-- On COMMA reduce production typ -> KW_PPC_FP128

State 21:
## Known stack suffix:
## KW_OPAQUE
## LR(1) items:
typ -> KW_OPAQUE . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_OPAQUE
-- On RSQUARE reduce production typ -> KW_OPAQUE
-- On RPAREN reduce production typ -> KW_OPAQUE
-- On RCURLYGT reduce production typ -> KW_OPAQUE
-- On RCURLY reduce production typ -> KW_OPAQUE
-- On LTLCURLY reduce production typ -> KW_OPAQUE
-- On LT reduce production typ -> KW_OPAQUE
-- On LSQUARE reduce production typ -> KW_OPAQUE
-- On LPAREN reduce production typ -> KW_OPAQUE
-- On LOCAL reduce production typ -> KW_OPAQUE
-- On LCURLY reduce production typ -> KW_OPAQUE
-- On KW_ZEROINITIALIZER reduce production typ -> KW_OPAQUE
-- On KW_ZEROEXT reduce production typ -> KW_OPAQUE
-- On KW_UNDEF reduce production typ -> KW_OPAQUE
-- On KW_TRUE reduce production typ -> KW_OPAQUE
-- On KW_SRET reduce production typ -> KW_OPAQUE
-- On KW_SIGNEXT reduce production typ -> KW_OPAQUE
-- On KW_RETURNED reduce production typ -> KW_OPAQUE
-- On KW_NULL reduce production typ -> KW_OPAQUE
-- On KW_NONNULL reduce production typ -> KW_OPAQUE
-- On KW_NOCAPTURE reduce production typ -> KW_OPAQUE
-- On KW_NOALIAS reduce production typ -> KW_OPAQUE
-- On KW_NEST reduce production typ -> KW_OPAQUE
-- On KW_INREG reduce production typ -> KW_OPAQUE
-- On KW_INALLOCA reduce production typ -> KW_OPAQUE
-- On KW_FALSE reduce production typ -> KW_OPAQUE
-- On KW_DEREFERENCEABLE reduce production typ -> KW_OPAQUE
-- On KW_BYVAL reduce production typ -> KW_OPAQUE
-- On KW_ALIGN reduce production typ -> KW_OPAQUE
-- On INTEGER reduce production typ -> KW_OPAQUE
-- On GT reduce production typ -> KW_OPAQUE
-- On GLOBAL reduce production typ -> KW_OPAQUE
-- On FLOAT reduce production typ -> KW_OPAQUE
-- On EOL reduce production typ -> KW_OPAQUE
-- On COMMA reduce production typ -> KW_OPAQUE

State 22:
## Known stack suffix:
## KW_METADATA
## LR(1) items:
typ -> KW_METADATA . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_METADATA
-- On RSQUARE reduce production typ -> KW_METADATA
-- On RPAREN reduce production typ -> KW_METADATA
-- On RCURLYGT reduce production typ -> KW_METADATA
-- On RCURLY reduce production typ -> KW_METADATA
-- On LTLCURLY reduce production typ -> KW_METADATA
-- On LT reduce production typ -> KW_METADATA
-- On LSQUARE reduce production typ -> KW_METADATA
-- On LPAREN reduce production typ -> KW_METADATA
-- On LOCAL reduce production typ -> KW_METADATA
-- On LCURLY reduce production typ -> KW_METADATA
-- On KW_ZEROINITIALIZER reduce production typ -> KW_METADATA
-- On KW_ZEROEXT reduce production typ -> KW_METADATA
-- On KW_UNDEF reduce production typ -> KW_METADATA
-- On KW_TRUE reduce production typ -> KW_METADATA
-- On KW_SRET reduce production typ -> KW_METADATA
-- On KW_SIGNEXT reduce production typ -> KW_METADATA
-- On KW_RETURNED reduce production typ -> KW_METADATA
-- On KW_NULL reduce production typ -> KW_METADATA
-- On KW_NONNULL reduce production typ -> KW_METADATA
-- On KW_NOCAPTURE reduce production typ -> KW_METADATA
-- On KW_NOALIAS reduce production typ -> KW_METADATA
-- On KW_NEST reduce production typ -> KW_METADATA
-- On KW_INREG reduce production typ -> KW_METADATA
-- On KW_INALLOCA reduce production typ -> KW_METADATA
-- On KW_FALSE reduce production typ -> KW_METADATA
-- On KW_DEREFERENCEABLE reduce production typ -> KW_METADATA
-- On KW_BYVAL reduce production typ -> KW_METADATA
-- On KW_ALIGN reduce production typ -> KW_METADATA
-- On INTEGER reduce production typ -> KW_METADATA
-- On GT reduce production typ -> KW_METADATA
-- On GLOBAL reduce production typ -> KW_METADATA
-- On FLOAT reduce production typ -> KW_METADATA
-- On EOL reduce production typ -> KW_METADATA
-- On COMMA reduce production typ -> KW_METADATA

State 23:
## Known stack suffix:
## KW_LABEL
## LR(1) items:
typ -> KW_LABEL . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_LABEL
-- On RSQUARE reduce production typ -> KW_LABEL
-- On RPAREN reduce production typ -> KW_LABEL
-- On RCURLYGT reduce production typ -> KW_LABEL
-- On RCURLY reduce production typ -> KW_LABEL
-- On LTLCURLY reduce production typ -> KW_LABEL
-- On LT reduce production typ -> KW_LABEL
-- On LSQUARE reduce production typ -> KW_LABEL
-- On LPAREN reduce production typ -> KW_LABEL
-- On LOCAL reduce production typ -> KW_LABEL
-- On LCURLY reduce production typ -> KW_LABEL
-- On KW_ZEROINITIALIZER reduce production typ -> KW_LABEL
-- On KW_ZEROEXT reduce production typ -> KW_LABEL
-- On KW_UNDEF reduce production typ -> KW_LABEL
-- On KW_TRUE reduce production typ -> KW_LABEL
-- On KW_SRET reduce production typ -> KW_LABEL
-- On KW_SIGNEXT reduce production typ -> KW_LABEL
-- On KW_RETURNED reduce production typ -> KW_LABEL
-- On KW_NULL reduce production typ -> KW_LABEL
-- On KW_NONNULL reduce production typ -> KW_LABEL
-- On KW_NOCAPTURE reduce production typ -> KW_LABEL
-- On KW_NOALIAS reduce production typ -> KW_LABEL
-- On KW_NEST reduce production typ -> KW_LABEL
-- On KW_INREG reduce production typ -> KW_LABEL
-- On KW_INALLOCA reduce production typ -> KW_LABEL
-- On KW_FALSE reduce production typ -> KW_LABEL
-- On KW_DEREFERENCEABLE reduce production typ -> KW_LABEL
-- On KW_BYVAL reduce production typ -> KW_LABEL
-- On KW_ALIGN reduce production typ -> KW_LABEL
-- On INTEGER reduce production typ -> KW_LABEL
-- On GT reduce production typ -> KW_LABEL
-- On GLOBAL reduce production typ -> KW_LABEL
-- On FLOAT reduce production typ -> KW_LABEL
-- On EOL reduce production typ -> KW_LABEL
-- On COMMA reduce production typ -> KW_LABEL

State 24:
## Known stack suffix:
## KW_HALF
## LR(1) items:
typ -> KW_HALF . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_HALF
-- On RSQUARE reduce production typ -> KW_HALF
-- On RPAREN reduce production typ -> KW_HALF
-- On RCURLYGT reduce production typ -> KW_HALF
-- On RCURLY reduce production typ -> KW_HALF
-- On LTLCURLY reduce production typ -> KW_HALF
-- On LT reduce production typ -> KW_HALF
-- On LSQUARE reduce production typ -> KW_HALF
-- On LPAREN reduce production typ -> KW_HALF
-- On LOCAL reduce production typ -> KW_HALF
-- On LCURLY reduce production typ -> KW_HALF
-- On KW_ZEROINITIALIZER reduce production typ -> KW_HALF
-- On KW_ZEROEXT reduce production typ -> KW_HALF
-- On KW_UNDEF reduce production typ -> KW_HALF
-- On KW_TRUE reduce production typ -> KW_HALF
-- On KW_SRET reduce production typ -> KW_HALF
-- On KW_SIGNEXT reduce production typ -> KW_HALF
-- On KW_RETURNED reduce production typ -> KW_HALF
-- On KW_NULL reduce production typ -> KW_HALF
-- On KW_NONNULL reduce production typ -> KW_HALF
-- On KW_NOCAPTURE reduce production typ -> KW_HALF
-- On KW_NOALIAS reduce production typ -> KW_HALF
-- On KW_NEST reduce production typ -> KW_HALF
-- On KW_INREG reduce production typ -> KW_HALF
-- On KW_INALLOCA reduce production typ -> KW_HALF
-- On KW_FALSE reduce production typ -> KW_HALF
-- On KW_DEREFERENCEABLE reduce production typ -> KW_HALF
-- On KW_BYVAL reduce production typ -> KW_HALF
-- On KW_ALIGN reduce production typ -> KW_HALF
-- On INTEGER reduce production typ -> KW_HALF
-- On GT reduce production typ -> KW_HALF
-- On GLOBAL reduce production typ -> KW_HALF
-- On FLOAT reduce production typ -> KW_HALF
-- On EOL reduce production typ -> KW_HALF
-- On COMMA reduce production typ -> KW_HALF

State 25:
## Known stack suffix:
## KW_FP128
## LR(1) items:
typ -> KW_FP128 . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_FP128
-- On RSQUARE reduce production typ -> KW_FP128
-- On RPAREN reduce production typ -> KW_FP128
-- On RCURLYGT reduce production typ -> KW_FP128
-- On RCURLY reduce production typ -> KW_FP128
-- On LTLCURLY reduce production typ -> KW_FP128
-- On LT reduce production typ -> KW_FP128
-- On LSQUARE reduce production typ -> KW_FP128
-- On LPAREN reduce production typ -> KW_FP128
-- On LOCAL reduce production typ -> KW_FP128
-- On LCURLY reduce production typ -> KW_FP128
-- On KW_ZEROINITIALIZER reduce production typ -> KW_FP128
-- On KW_ZEROEXT reduce production typ -> KW_FP128
-- On KW_UNDEF reduce production typ -> KW_FP128
-- On KW_TRUE reduce production typ -> KW_FP128
-- On KW_SRET reduce production typ -> KW_FP128
-- On KW_SIGNEXT reduce production typ -> KW_FP128
-- On KW_RETURNED reduce production typ -> KW_FP128
-- On KW_NULL reduce production typ -> KW_FP128
-- On KW_NONNULL reduce production typ -> KW_FP128
-- On KW_NOCAPTURE reduce production typ -> KW_FP128
-- On KW_NOALIAS reduce production typ -> KW_FP128
-- On KW_NEST reduce production typ -> KW_FP128
-- On KW_INREG reduce production typ -> KW_FP128
-- On KW_INALLOCA reduce production typ -> KW_FP128
-- On KW_FALSE reduce production typ -> KW_FP128
-- On KW_DEREFERENCEABLE reduce production typ -> KW_FP128
-- On KW_BYVAL reduce production typ -> KW_FP128
-- On KW_ALIGN reduce production typ -> KW_FP128
-- On INTEGER reduce production typ -> KW_FP128
-- On GT reduce production typ -> KW_FP128
-- On GLOBAL reduce production typ -> KW_FP128
-- On FLOAT reduce production typ -> KW_FP128
-- On EOL reduce production typ -> KW_FP128
-- On COMMA reduce production typ -> KW_FP128

State 26:
## Known stack suffix:
## KW_FLOAT
## LR(1) items:
typ -> KW_FLOAT . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_FLOAT
-- On RSQUARE reduce production typ -> KW_FLOAT
-- On RPAREN reduce production typ -> KW_FLOAT
-- On RCURLYGT reduce production typ -> KW_FLOAT
-- On RCURLY reduce production typ -> KW_FLOAT
-- On LTLCURLY reduce production typ -> KW_FLOAT
-- On LT reduce production typ -> KW_FLOAT
-- On LSQUARE reduce production typ -> KW_FLOAT
-- On LPAREN reduce production typ -> KW_FLOAT
-- On LOCAL reduce production typ -> KW_FLOAT
-- On LCURLY reduce production typ -> KW_FLOAT
-- On KW_ZEROINITIALIZER reduce production typ -> KW_FLOAT
-- On KW_ZEROEXT reduce production typ -> KW_FLOAT
-- On KW_UNDEF reduce production typ -> KW_FLOAT
-- On KW_TRUE reduce production typ -> KW_FLOAT
-- On KW_SRET reduce production typ -> KW_FLOAT
-- On KW_SIGNEXT reduce production typ -> KW_FLOAT
-- On KW_RETURNED reduce production typ -> KW_FLOAT
-- On KW_NULL reduce production typ -> KW_FLOAT
-- On KW_NONNULL reduce production typ -> KW_FLOAT
-- On KW_NOCAPTURE reduce production typ -> KW_FLOAT
-- On KW_NOALIAS reduce production typ -> KW_FLOAT
-- On KW_NEST reduce production typ -> KW_FLOAT
-- On KW_INREG reduce production typ -> KW_FLOAT
-- On KW_INALLOCA reduce production typ -> KW_FLOAT
-- On KW_FALSE reduce production typ -> KW_FLOAT
-- On KW_DEREFERENCEABLE reduce production typ -> KW_FLOAT
-- On KW_BYVAL reduce production typ -> KW_FLOAT
-- On KW_ALIGN reduce production typ -> KW_FLOAT
-- On INTEGER reduce production typ -> KW_FLOAT
-- On GT reduce production typ -> KW_FLOAT
-- On GLOBAL reduce production typ -> KW_FLOAT
-- On FLOAT reduce production typ -> KW_FLOAT
-- On EOL reduce production typ -> KW_FLOAT
-- On COMMA reduce production typ -> KW_FLOAT

State 27:
## Known stack suffix:
## KW_DOUBLE
## LR(1) items:
typ -> KW_DOUBLE . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_DOUBLE
-- On RSQUARE reduce production typ -> KW_DOUBLE
-- On RPAREN reduce production typ -> KW_DOUBLE
-- On RCURLYGT reduce production typ -> KW_DOUBLE
-- On RCURLY reduce production typ -> KW_DOUBLE
-- On LTLCURLY reduce production typ -> KW_DOUBLE
-- On LT reduce production typ -> KW_DOUBLE
-- On LSQUARE reduce production typ -> KW_DOUBLE
-- On LPAREN reduce production typ -> KW_DOUBLE
-- On LOCAL reduce production typ -> KW_DOUBLE
-- On LCURLY reduce production typ -> KW_DOUBLE
-- On KW_ZEROINITIALIZER reduce production typ -> KW_DOUBLE
-- On KW_ZEROEXT reduce production typ -> KW_DOUBLE
-- On KW_UNDEF reduce production typ -> KW_DOUBLE
-- On KW_TRUE reduce production typ -> KW_DOUBLE
-- On KW_SRET reduce production typ -> KW_DOUBLE
-- On KW_SIGNEXT reduce production typ -> KW_DOUBLE
-- On KW_RETURNED reduce production typ -> KW_DOUBLE
-- On KW_NULL reduce production typ -> KW_DOUBLE
-- On KW_NONNULL reduce production typ -> KW_DOUBLE
-- On KW_NOCAPTURE reduce production typ -> KW_DOUBLE
-- On KW_NOALIAS reduce production typ -> KW_DOUBLE
-- On KW_NEST reduce production typ -> KW_DOUBLE
-- On KW_INREG reduce production typ -> KW_DOUBLE
-- On KW_INALLOCA reduce production typ -> KW_DOUBLE
-- On KW_FALSE reduce production typ -> KW_DOUBLE
-- On KW_DEREFERENCEABLE reduce production typ -> KW_DOUBLE
-- On KW_BYVAL reduce production typ -> KW_DOUBLE
-- On KW_ALIGN reduce production typ -> KW_DOUBLE
-- On INTEGER reduce production typ -> KW_DOUBLE
-- On GT reduce production typ -> KW_DOUBLE
-- On GLOBAL reduce production typ -> KW_DOUBLE
-- On FLOAT reduce production typ -> KW_DOUBLE
-- On EOL reduce production typ -> KW_DOUBLE
-- On COMMA reduce production typ -> KW_DOUBLE

State 28:
## Known stack suffix:
## I
## LR(1) items:
typ -> I . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> I
-- On RSQUARE reduce production typ -> I
-- On RPAREN reduce production typ -> I
-- On RCURLYGT reduce production typ -> I
-- On RCURLY reduce production typ -> I
-- On LTLCURLY reduce production typ -> I
-- On LT reduce production typ -> I
-- On LSQUARE reduce production typ -> I
-- On LPAREN reduce production typ -> I
-- On LOCAL reduce production typ -> I
-- On LCURLY reduce production typ -> I
-- On KW_ZEROINITIALIZER reduce production typ -> I
-- On KW_ZEROEXT reduce production typ -> I
-- On KW_UNDEF reduce production typ -> I
-- On KW_TRUE reduce production typ -> I
-- On KW_SRET reduce production typ -> I
-- On KW_SIGNEXT reduce production typ -> I
-- On KW_RETURNED reduce production typ -> I
-- On KW_NULL reduce production typ -> I
-- On KW_NONNULL reduce production typ -> I
-- On KW_NOCAPTURE reduce production typ -> I
-- On KW_NOALIAS reduce production typ -> I
-- On KW_NEST reduce production typ -> I
-- On KW_INREG reduce production typ -> I
-- On KW_INALLOCA reduce production typ -> I
-- On KW_FALSE reduce production typ -> I
-- On KW_DEREFERENCEABLE reduce production typ -> I
-- On KW_BYVAL reduce production typ -> I
-- On KW_ALIGN reduce production typ -> I
-- On INTEGER reduce production typ -> I
-- On GT reduce production typ -> I
-- On GLOBAL reduce production typ -> I
-- On FLOAT reduce production typ -> I
-- On EOL reduce production typ -> I
-- On COMMA reduce production typ -> I

State 29:
## Known stack suffix:
## typ
## LR(1) items:
separated_nonempty_list(COMMA,typ) -> typ . [ RPAREN RCURLYGT RCURLY ]
separated_nonempty_list(COMMA,typ) -> typ . COMMA separated_nonempty_list(COMMA,typ) [ RPAREN RCURLYGT RCURLY ]
typ -> typ . STAR [ STAR RPAREN RCURLYGT RCURLY LPAREN COMMA ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR RPAREN RCURLYGT RCURLY LPAREN COMMA ]
## Transitions:
-- On STAR shift to state 30
-- On LPAREN shift to state 31
-- On COMMA shift to state 35
## Reductions:
-- On RPAREN reduce production separated_nonempty_list(COMMA,typ) -> typ
-- On RCURLYGT reduce production separated_nonempty_list(COMMA,typ) -> typ
-- On RCURLY reduce production separated_nonempty_list(COMMA,typ) -> typ

State 30:
## Known stack suffix:
## typ STAR
## LR(1) items:
typ -> typ STAR . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> typ STAR
-- On RSQUARE reduce production typ -> typ STAR
-- On RPAREN reduce production typ -> typ STAR
-- On RCURLYGT reduce production typ -> typ STAR
-- On RCURLY reduce production typ -> typ STAR
-- On LTLCURLY reduce production typ -> typ STAR
-- On LT reduce production typ -> typ STAR
-- On LSQUARE reduce production typ -> typ STAR
-- On LPAREN reduce production typ -> typ STAR
-- On LOCAL reduce production typ -> typ STAR
-- On LCURLY reduce production typ -> typ STAR
-- On KW_ZEROINITIALIZER reduce production typ -> typ STAR
-- On KW_ZEROEXT reduce production typ -> typ STAR
-- On KW_UNDEF reduce production typ -> typ STAR
-- On KW_TRUE reduce production typ -> typ STAR
-- On KW_SRET reduce production typ -> typ STAR
-- On KW_SIGNEXT reduce production typ -> typ STAR
-- On KW_RETURNED reduce production typ -> typ STAR
-- On KW_NULL reduce production typ -> typ STAR
-- On KW_NONNULL reduce production typ -> typ STAR
-- On KW_NOCAPTURE reduce production typ -> typ STAR
-- On KW_NOALIAS reduce production typ -> typ STAR
-- On KW_NEST reduce production typ -> typ STAR
-- On KW_INREG reduce production typ -> typ STAR
-- On KW_INALLOCA reduce production typ -> typ STAR
-- On KW_FALSE reduce production typ -> typ STAR
-- On KW_DEREFERENCEABLE reduce production typ -> typ STAR
-- On KW_BYVAL reduce production typ -> typ STAR
-- On KW_ALIGN reduce production typ -> typ STAR
-- On INTEGER reduce production typ -> typ STAR
-- On GT reduce production typ -> typ STAR
-- On GLOBAL reduce production typ -> typ STAR
-- On FLOAT reduce production typ -> typ STAR
-- On EOL reduce production typ -> typ STAR
-- On COMMA reduce production typ -> typ STAR

State 31:
## Known stack suffix:
## typ LPAREN
## LR(1) items:
typ -> typ LPAREN . loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 29
-- On separated_nonempty_list(COMMA,typ) shift to state 32
-- On loption(separated_nonempty_list(COMMA,typ)) shift to state 33
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,typ)) ->

State 32:
## Known stack suffix:
## separated_nonempty_list(COMMA,typ)
## LR(1) items:
loption(separated_nonempty_list(COMMA,typ)) -> separated_nonempty_list(COMMA,typ) . [ RPAREN RCURLYGT RCURLY ]
## Transitions:
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,typ)) -> separated_nonempty_list(COMMA,typ)
-- On RCURLYGT reduce production loption(separated_nonempty_list(COMMA,typ)) -> separated_nonempty_list(COMMA,typ)
-- On RCURLY reduce production loption(separated_nonempty_list(COMMA,typ)) -> separated_nonempty_list(COMMA,typ)

State 33:
## Known stack suffix:
## typ LPAREN loption(separated_nonempty_list(COMMA,typ))
## LR(1) items:
typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) . RPAREN [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On RPAREN shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
## LR(1) items:
typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On RSQUARE reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On RPAREN reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On RCURLYGT reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On RCURLY reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On LTLCURLY reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On LT reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On LSQUARE reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On LPAREN reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On LOCAL reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On LCURLY reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_ZEROINITIALIZER reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_ZEROEXT reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_UNDEF reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_TRUE reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_SRET reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_SIGNEXT reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_RETURNED reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_NULL reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_NONNULL reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_NOCAPTURE reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_NOALIAS reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_NEST reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_INREG reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_INALLOCA reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_FALSE reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_DEREFERENCEABLE reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_BYVAL reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On KW_ALIGN reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On INTEGER reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On GT reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On GLOBAL reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On FLOAT reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On EOL reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN
-- On COMMA reduce production typ -> typ LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN

State 35:
## Known stack suffix:
## typ COMMA
## LR(1) items:
separated_nonempty_list(COMMA,typ) -> typ COMMA . separated_nonempty_list(COMMA,typ) [ RPAREN RCURLYGT RCURLY ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 29
-- On separated_nonempty_list(COMMA,typ) shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## typ COMMA separated_nonempty_list(COMMA,typ)
## LR(1) items:
separated_nonempty_list(COMMA,typ) -> typ COMMA separated_nonempty_list(COMMA,typ) . [ RPAREN RCURLYGT RCURLY ]
## Transitions:
## Reductions:
-- On RPAREN reduce production separated_nonempty_list(COMMA,typ) -> typ COMMA separated_nonempty_list(COMMA,typ)
-- On RCURLYGT reduce production separated_nonempty_list(COMMA,typ) -> typ COMMA separated_nonempty_list(COMMA,typ)
-- On RCURLY reduce production separated_nonempty_list(COMMA,typ) -> typ COMMA separated_nonempty_list(COMMA,typ)

State 37:
## Known stack suffix:
## LCURLY loption(separated_nonempty_list(COMMA,typ))
## LR(1) items:
typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) . RCURLY [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On RCURLY shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
## LR(1) items:
typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On RSQUARE reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On RPAREN reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On RCURLYGT reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On RCURLY reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On LTLCURLY reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On LT reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On LSQUARE reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On LPAREN reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On LOCAL reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On LCURLY reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_ZEROINITIALIZER reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_ZEROEXT reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_UNDEF reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_TRUE reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_SRET reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_SIGNEXT reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_RETURNED reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_NULL reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_NONNULL reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_NOCAPTURE reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_NOALIAS reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_NEST reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_INREG reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_INALLOCA reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_FALSE reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_DEREFERENCEABLE reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_BYVAL reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On KW_ALIGN reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On INTEGER reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On GT reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On GLOBAL reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On FLOAT reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On EOL reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY
-- On COMMA reduce production typ -> LCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLY

State 39:
## Known stack suffix:
## LSQUARE INTEGER KW_X typ
## LR(1) items:
typ -> typ . STAR [ STAR RSQUARE LPAREN ]
typ -> LSQUARE INTEGER KW_X typ . RSQUARE [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR RSQUARE LPAREN ]
## Transitions:
-- On STAR shift to state 30
-- On RSQUARE shift to state 40
-- On LPAREN shift to state 31
## Reductions:

State 40:
## Known stack suffix:
## LSQUARE INTEGER KW_X typ RSQUARE
## LR(1) items:
typ -> LSQUARE INTEGER KW_X typ RSQUARE . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On RSQUARE reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On RPAREN reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On RCURLYGT reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On RCURLY reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On LTLCURLY reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On LT reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On LSQUARE reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On LPAREN reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On LOCAL reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On LCURLY reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_ZEROINITIALIZER reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_ZEROEXT reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_UNDEF reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_TRUE reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_SRET reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_SIGNEXT reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_RETURNED reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_NULL reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_NONNULL reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_NOCAPTURE reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_NOALIAS reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_NEST reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_INREG reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_INALLOCA reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_FALSE reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_DEREFERENCEABLE reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_BYVAL reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On KW_ALIGN reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On INTEGER reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On GT reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On GLOBAL reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On FLOAT reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On EOL reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE
-- On COMMA reduce production typ -> LSQUARE INTEGER KW_X typ RSQUARE

State 41:
## Known stack suffix:
## LT INTEGER KW_X typ
## LR(1) items:
typ -> typ . STAR [ STAR LPAREN GT ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LPAREN GT ]
typ -> LT INTEGER KW_X typ . GT [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On STAR shift to state 30
-- On LPAREN shift to state 31
-- On GT shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## LT INTEGER KW_X typ GT
## LR(1) items:
typ -> LT INTEGER KW_X typ GT . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> LT INTEGER KW_X typ GT
-- On RSQUARE reduce production typ -> LT INTEGER KW_X typ GT
-- On RPAREN reduce production typ -> LT INTEGER KW_X typ GT
-- On RCURLYGT reduce production typ -> LT INTEGER KW_X typ GT
-- On RCURLY reduce production typ -> LT INTEGER KW_X typ GT
-- On LTLCURLY reduce production typ -> LT INTEGER KW_X typ GT
-- On LT reduce production typ -> LT INTEGER KW_X typ GT
-- On LSQUARE reduce production typ -> LT INTEGER KW_X typ GT
-- On LPAREN reduce production typ -> LT INTEGER KW_X typ GT
-- On LOCAL reduce production typ -> LT INTEGER KW_X typ GT
-- On LCURLY reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_ZEROINITIALIZER reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_ZEROEXT reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_UNDEF reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_TRUE reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_SRET reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_SIGNEXT reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_RETURNED reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_NULL reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_NONNULL reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_NOCAPTURE reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_NOALIAS reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_NEST reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_INREG reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_INALLOCA reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_FALSE reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_DEREFERENCEABLE reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_BYVAL reduce production typ -> LT INTEGER KW_X typ GT
-- On KW_ALIGN reduce production typ -> LT INTEGER KW_X typ GT
-- On INTEGER reduce production typ -> LT INTEGER KW_X typ GT
-- On GT reduce production typ -> LT INTEGER KW_X typ GT
-- On GLOBAL reduce production typ -> LT INTEGER KW_X typ GT
-- On FLOAT reduce production typ -> LT INTEGER KW_X typ GT
-- On EOL reduce production typ -> LT INTEGER KW_X typ GT
-- On COMMA reduce production typ -> LT INTEGER KW_X typ GT

State 43:
## Known stack suffix:
## LTLCURLY loption(separated_nonempty_list(COMMA,typ))
## LR(1) items:
typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) . RCURLYGT [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
-- On RCURLYGT shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
## LR(1) items:
typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT . [ STAR RSQUARE RPAREN RCURLYGT RCURLY LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_ZEROEXT KW_UNDEF KW_TRUE KW_SRET KW_SIGNEXT KW_RETURNED KW_NULL KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_FALSE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN INTEGER GT GLOBAL FLOAT EOL COMMA ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On RSQUARE reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On RPAREN reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On RCURLYGT reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On RCURLY reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On LTLCURLY reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On LT reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On LSQUARE reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On LPAREN reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On LOCAL reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On LCURLY reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_ZEROINITIALIZER reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_ZEROEXT reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_UNDEF reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_TRUE reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_SRET reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_SIGNEXT reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_RETURNED reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_NULL reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_NONNULL reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_NOCAPTURE reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_NOALIAS reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_NEST reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_INREG reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_INALLOCA reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_FALSE reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_DEREFERENCEABLE reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_BYVAL reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On KW_ALIGN reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On INTEGER reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On GT reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On GLOBAL reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On FLOAT reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On EOL reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT
-- On COMMA reduce production typ -> LTLCURLY loption(separated_nonempty_list(COMMA,typ)) RCURLYGT

State 45:
## Known stack suffix:
## KW_NULL
## LR(1) items:
metadata_value -> KW_NULL . [ RCURLY COMMA ]
## Transitions:
## Reductions:
-- On RCURLY reduce production metadata_value -> KW_NULL
-- On COMMA reduce production metadata_value -> KW_NULL

State 46:
## Known stack suffix:
## KW_METADATA
## LR(1) items:
metadata_value -> KW_METADATA . METADATA_STRING [ RCURLY COMMA ]
metadata_value -> KW_METADATA . METADATA_ID [ RCURLY COMMA ]
metadata_value -> KW_METADATA . metadata_node [ RCURLY COMMA ]
typ -> KW_METADATA . [ STAR LTLCURLY LT LSQUARE LPAREN LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER FLOAT ]
## Transitions:
-- On METADATA_STRING shift to state 47
-- On METADATA_ID shift to state 48
-- On BANGLCURLY shift to state 8
-- On metadata_node shift to state 49
## Reductions:
-- On STAR reduce production typ -> KW_METADATA
-- On LTLCURLY reduce production typ -> KW_METADATA
-- On LT reduce production typ -> KW_METADATA
-- On LSQUARE reduce production typ -> KW_METADATA
-- On LPAREN reduce production typ -> KW_METADATA
-- On LCURLY reduce production typ -> KW_METADATA
-- On KW_ZEROINITIALIZER reduce production typ -> KW_METADATA
-- On KW_UNDEF reduce production typ -> KW_METADATA
-- On KW_TRUE reduce production typ -> KW_METADATA
-- On KW_NULL reduce production typ -> KW_METADATA
-- On KW_FALSE reduce production typ -> KW_METADATA
-- On INTEGER reduce production typ -> KW_METADATA
-- On FLOAT reduce production typ -> KW_METADATA

State 47:
## Known stack suffix:
## KW_METADATA METADATA_STRING
## LR(1) items:
metadata_value -> KW_METADATA METADATA_STRING . [ RCURLY COMMA ]
## Transitions:
## Reductions:
-- On RCURLY reduce production metadata_value -> KW_METADATA METADATA_STRING
-- On COMMA reduce production metadata_value -> KW_METADATA METADATA_STRING

State 48:
## Known stack suffix:
## KW_METADATA METADATA_ID
## LR(1) items:
metadata_value -> KW_METADATA METADATA_ID . [ RCURLY COMMA ]
## Transitions:
## Reductions:
-- On RCURLY reduce production metadata_value -> KW_METADATA METADATA_ID
-- On COMMA reduce production metadata_value -> KW_METADATA METADATA_ID

State 49:
## Known stack suffix:
## KW_METADATA metadata_node
## LR(1) items:
metadata_value -> KW_METADATA metadata_node . [ RCURLY COMMA ]
## Transitions:
## Reductions:
-- On RCURLY reduce production metadata_value -> KW_METADATA metadata_node
-- On COMMA reduce production metadata_value -> KW_METADATA metadata_node

State 50:
## Known stack suffix:
## typ
## LR(1) items:
tconst -> typ . const [ RSQUARE RCURLYGT RCURLY GT COMMA ]
typ -> typ . STAR [ STAR LTLCURLY LT LSQUARE LPAREN LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER FLOAT ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LTLCURLY LT LSQUARE LPAREN LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER FLOAT ]
## Transitions:
-- On STAR shift to state 30
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LPAREN shift to state 31
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On FLOAT shift to state 73
-- On const shift to state 74
## Reductions:

State 51:
## Known stack suffix:
## LTLCURLY
## LR(1) items:
const -> LTLCURLY . loption(separated_nonempty_list(COMMA,tconst)) RCURLYGT [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 50
-- On tconst shift to state 52
-- On separated_nonempty_list(COMMA,tconst) shift to state 55
-- On loption(separated_nonempty_list(COMMA,tconst)) shift to state 56
## Reductions:
-- On RCURLYGT reduce production loption(separated_nonempty_list(COMMA,tconst)) ->

State 52:
## Known stack suffix:
## tconst
## LR(1) items:
separated_nonempty_list(COMMA,tconst) -> tconst . [ RSQUARE RCURLYGT RCURLY GT ]
separated_nonempty_list(COMMA,tconst) -> tconst . COMMA separated_nonempty_list(COMMA,tconst) [ RSQUARE RCURLYGT RCURLY GT ]
## Transitions:
-- On COMMA shift to state 53
## Reductions:
-- On RSQUARE reduce production separated_nonempty_list(COMMA,tconst) -> tconst
-- On RCURLYGT reduce production separated_nonempty_list(COMMA,tconst) -> tconst
-- On RCURLY reduce production separated_nonempty_list(COMMA,tconst) -> tconst
-- On GT reduce production separated_nonempty_list(COMMA,tconst) -> tconst

State 53:
## Known stack suffix:
## tconst COMMA
## LR(1) items:
separated_nonempty_list(COMMA,tconst) -> tconst COMMA . separated_nonempty_list(COMMA,tconst) [ RSQUARE RCURLYGT RCURLY GT ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 50
-- On tconst shift to state 52
-- On separated_nonempty_list(COMMA,tconst) shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## tconst COMMA separated_nonempty_list(COMMA,tconst)
## LR(1) items:
separated_nonempty_list(COMMA,tconst) -> tconst COMMA separated_nonempty_list(COMMA,tconst) . [ RSQUARE RCURLYGT RCURLY GT ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production separated_nonempty_list(COMMA,tconst) -> tconst COMMA separated_nonempty_list(COMMA,tconst)
-- On RCURLYGT reduce production separated_nonempty_list(COMMA,tconst) -> tconst COMMA separated_nonempty_list(COMMA,tconst)
-- On RCURLY reduce production separated_nonempty_list(COMMA,tconst) -> tconst COMMA separated_nonempty_list(COMMA,tconst)
-- On GT reduce production separated_nonempty_list(COMMA,tconst) -> tconst COMMA separated_nonempty_list(COMMA,tconst)

State 55:
## Known stack suffix:
## separated_nonempty_list(COMMA,tconst)
## LR(1) items:
loption(separated_nonempty_list(COMMA,tconst)) -> separated_nonempty_list(COMMA,tconst) . [ RSQUARE RCURLYGT RCURLY GT ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production loption(separated_nonempty_list(COMMA,tconst)) -> separated_nonempty_list(COMMA,tconst)
-- On RCURLYGT reduce production loption(separated_nonempty_list(COMMA,tconst)) -> separated_nonempty_list(COMMA,tconst)
-- On RCURLY reduce production loption(separated_nonempty_list(COMMA,tconst)) -> separated_nonempty_list(COMMA,tconst)
-- On GT reduce production loption(separated_nonempty_list(COMMA,tconst)) -> separated_nonempty_list(COMMA,tconst)

State 56:
## Known stack suffix:
## LTLCURLY loption(separated_nonempty_list(COMMA,tconst))
## LR(1) items:
const -> LTLCURLY loption(separated_nonempty_list(COMMA,tconst)) . RCURLYGT [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
-- On RCURLYGT shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## LTLCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLYGT
## LR(1) items:
const -> LTLCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLYGT . [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production const -> LTLCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLYGT
-- On RPAREN reduce production const -> LTLCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLYGT
-- On RCURLYGT reduce production const -> LTLCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLYGT
-- On RCURLY reduce production const -> LTLCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLYGT
-- On KW_TO reduce production const -> LTLCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLYGT
-- On GT reduce production const -> LTLCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLYGT
-- On EOL reduce production const -> LTLCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLYGT
-- On COMMA reduce production const -> LTLCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLYGT

State 58:
## Known stack suffix:
## LT
## LR(1) items:
const -> LT . loption(separated_nonempty_list(COMMA,tconst)) GT [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 50
-- On tconst shift to state 52
-- On separated_nonempty_list(COMMA,tconst) shift to state 55
-- On loption(separated_nonempty_list(COMMA,tconst)) shift to state 59
## Reductions:
-- On GT reduce production loption(separated_nonempty_list(COMMA,tconst)) ->

State 59:
## Known stack suffix:
## LT loption(separated_nonempty_list(COMMA,tconst))
## LR(1) items:
const -> LT loption(separated_nonempty_list(COMMA,tconst)) . GT [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
-- On GT shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## LT loption(separated_nonempty_list(COMMA,tconst)) GT
## LR(1) items:
const -> LT loption(separated_nonempty_list(COMMA,tconst)) GT . [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production const -> LT loption(separated_nonempty_list(COMMA,tconst)) GT
-- On RPAREN reduce production const -> LT loption(separated_nonempty_list(COMMA,tconst)) GT
-- On RCURLYGT reduce production const -> LT loption(separated_nonempty_list(COMMA,tconst)) GT
-- On RCURLY reduce production const -> LT loption(separated_nonempty_list(COMMA,tconst)) GT
-- On KW_TO reduce production const -> LT loption(separated_nonempty_list(COMMA,tconst)) GT
-- On GT reduce production const -> LT loption(separated_nonempty_list(COMMA,tconst)) GT
-- On EOL reduce production const -> LT loption(separated_nonempty_list(COMMA,tconst)) GT
-- On COMMA reduce production const -> LT loption(separated_nonempty_list(COMMA,tconst)) GT

State 61:
## Known stack suffix:
## LSQUARE
## LR(1) items:
const -> LSQUARE . loption(separated_nonempty_list(COMMA,tconst)) RSQUARE [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 50
-- On tconst shift to state 52
-- On separated_nonempty_list(COMMA,tconst) shift to state 55
-- On loption(separated_nonempty_list(COMMA,tconst)) shift to state 62
## Reductions:
-- On RSQUARE reduce production loption(separated_nonempty_list(COMMA,tconst)) ->

State 62:
## Known stack suffix:
## LSQUARE loption(separated_nonempty_list(COMMA,tconst))
## LR(1) items:
const -> LSQUARE loption(separated_nonempty_list(COMMA,tconst)) . RSQUARE [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
-- On RSQUARE shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## LSQUARE loption(separated_nonempty_list(COMMA,tconst)) RSQUARE
## LR(1) items:
const -> LSQUARE loption(separated_nonempty_list(COMMA,tconst)) RSQUARE . [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production const -> LSQUARE loption(separated_nonempty_list(COMMA,tconst)) RSQUARE
-- On RPAREN reduce production const -> LSQUARE loption(separated_nonempty_list(COMMA,tconst)) RSQUARE
-- On RCURLYGT reduce production const -> LSQUARE loption(separated_nonempty_list(COMMA,tconst)) RSQUARE
-- On RCURLY reduce production const -> LSQUARE loption(separated_nonempty_list(COMMA,tconst)) RSQUARE
-- On KW_TO reduce production const -> LSQUARE loption(separated_nonempty_list(COMMA,tconst)) RSQUARE
-- On GT reduce production const -> LSQUARE loption(separated_nonempty_list(COMMA,tconst)) RSQUARE
-- On EOL reduce production const -> LSQUARE loption(separated_nonempty_list(COMMA,tconst)) RSQUARE
-- On COMMA reduce production const -> LSQUARE loption(separated_nonempty_list(COMMA,tconst)) RSQUARE

State 64:
## Known stack suffix:
## LCURLY
## LR(1) items:
const -> LCURLY . loption(separated_nonempty_list(COMMA,tconst)) RCURLY [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 50
-- On tconst shift to state 52
-- On separated_nonempty_list(COMMA,tconst) shift to state 55
-- On loption(separated_nonempty_list(COMMA,tconst)) shift to state 65
## Reductions:
-- On RCURLY reduce production loption(separated_nonempty_list(COMMA,tconst)) ->

State 65:
## Known stack suffix:
## LCURLY loption(separated_nonempty_list(COMMA,tconst))
## LR(1) items:
const -> LCURLY loption(separated_nonempty_list(COMMA,tconst)) . RCURLY [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
-- On RCURLY shift to state 66
## Reductions:

State 66:
## Known stack suffix:
## LCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLY
## LR(1) items:
const -> LCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLY . [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production const -> LCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLY
-- On RPAREN reduce production const -> LCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLY
-- On RCURLYGT reduce production const -> LCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLY
-- On RCURLY reduce production const -> LCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLY
-- On KW_TO reduce production const -> LCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLY
-- On GT reduce production const -> LCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLY
-- On EOL reduce production const -> LCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLY
-- On COMMA reduce production const -> LCURLY loption(separated_nonempty_list(COMMA,tconst)) RCURLY

State 67:
## Known stack suffix:
## KW_ZEROINITIALIZER
## LR(1) items:
const -> KW_ZEROINITIALIZER . [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production const -> KW_ZEROINITIALIZER
-- On RPAREN reduce production const -> KW_ZEROINITIALIZER
-- On RCURLYGT reduce production const -> KW_ZEROINITIALIZER
-- On RCURLY reduce production const -> KW_ZEROINITIALIZER
-- On KW_TO reduce production const -> KW_ZEROINITIALIZER
-- On GT reduce production const -> KW_ZEROINITIALIZER
-- On EOL reduce production const -> KW_ZEROINITIALIZER
-- On COMMA reduce production const -> KW_ZEROINITIALIZER

State 68:
## Known stack suffix:
## KW_UNDEF
## LR(1) items:
const -> KW_UNDEF . [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production const -> KW_UNDEF
-- On RPAREN reduce production const -> KW_UNDEF
-- On RCURLYGT reduce production const -> KW_UNDEF
-- On RCURLY reduce production const -> KW_UNDEF
-- On KW_TO reduce production const -> KW_UNDEF
-- On GT reduce production const -> KW_UNDEF
-- On EOL reduce production const -> KW_UNDEF
-- On COMMA reduce production const -> KW_UNDEF

State 69:
## Known stack suffix:
## KW_TRUE
## LR(1) items:
const -> KW_TRUE . [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production const -> KW_TRUE
-- On RPAREN reduce production const -> KW_TRUE
-- On RCURLYGT reduce production const -> KW_TRUE
-- On RCURLY reduce production const -> KW_TRUE
-- On KW_TO reduce production const -> KW_TRUE
-- On GT reduce production const -> KW_TRUE
-- On EOL reduce production const -> KW_TRUE
-- On COMMA reduce production const -> KW_TRUE

State 70:
## Known stack suffix:
## KW_NULL
## LR(1) items:
const -> KW_NULL . [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production const -> KW_NULL
-- On RPAREN reduce production const -> KW_NULL
-- On RCURLYGT reduce production const -> KW_NULL
-- On RCURLY reduce production const -> KW_NULL
-- On KW_TO reduce production const -> KW_NULL
-- On GT reduce production const -> KW_NULL
-- On EOL reduce production const -> KW_NULL
-- On COMMA reduce production const -> KW_NULL

State 71:
## Known stack suffix:
## KW_FALSE
## LR(1) items:
const -> KW_FALSE . [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production const -> KW_FALSE
-- On RPAREN reduce production const -> KW_FALSE
-- On RCURLYGT reduce production const -> KW_FALSE
-- On RCURLY reduce production const -> KW_FALSE
-- On KW_TO reduce production const -> KW_FALSE
-- On GT reduce production const -> KW_FALSE
-- On EOL reduce production const -> KW_FALSE
-- On COMMA reduce production const -> KW_FALSE

State 72:
## Known stack suffix:
## INTEGER
## LR(1) items:
const -> INTEGER . [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production const -> INTEGER
-- On RPAREN reduce production const -> INTEGER
-- On RCURLYGT reduce production const -> INTEGER
-- On RCURLY reduce production const -> INTEGER
-- On KW_TO reduce production const -> INTEGER
-- On GT reduce production const -> INTEGER
-- On EOL reduce production const -> INTEGER
-- On COMMA reduce production const -> INTEGER

State 73:
## Known stack suffix:
## FLOAT
## LR(1) items:
const -> FLOAT . [ RSQUARE RPAREN RCURLYGT RCURLY KW_TO GT EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production const -> FLOAT
-- On RPAREN reduce production const -> FLOAT
-- On RCURLYGT reduce production const -> FLOAT
-- On RCURLY reduce production const -> FLOAT
-- On KW_TO reduce production const -> FLOAT
-- On GT reduce production const -> FLOAT
-- On EOL reduce production const -> FLOAT
-- On COMMA reduce production const -> FLOAT

State 74:
## Known stack suffix:
## typ const
## LR(1) items:
tconst -> typ const . [ RSQUARE RCURLYGT RCURLY GT COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production tconst -> typ const
-- On RCURLYGT reduce production tconst -> typ const
-- On RCURLY reduce production tconst -> typ const
-- On GT reduce production tconst -> typ const
-- On COMMA reduce production tconst -> typ const

State 75:
## Known stack suffix:
## tconst
## LR(1) items:
metadata_value -> tconst . [ RCURLY COMMA ]
## Transitions:
## Reductions:
-- On RCURLY reduce production metadata_value -> tconst
-- On COMMA reduce production metadata_value -> tconst

State 76:
## Known stack suffix:
## separated_nonempty_list(COMMA,metadata_value)
## LR(1) items:
loption(separated_nonempty_list(COMMA,metadata_value)) -> separated_nonempty_list(COMMA,metadata_value) . [ RCURLY ]
## Transitions:
## Reductions:
-- On RCURLY reduce production loption(separated_nonempty_list(COMMA,metadata_value)) -> separated_nonempty_list(COMMA,metadata_value)

State 77:
## Known stack suffix:
## metadata_value
## LR(1) items:
separated_nonempty_list(COMMA,metadata_value) -> metadata_value . [ RCURLY ]
separated_nonempty_list(COMMA,metadata_value) -> metadata_value . COMMA separated_nonempty_list(COMMA,metadata_value) [ RCURLY ]
## Transitions:
-- On COMMA shift to state 78
## Reductions:
-- On RCURLY reduce production separated_nonempty_list(COMMA,metadata_value) -> metadata_value

State 78:
## Known stack suffix:
## metadata_value COMMA
## LR(1) items:
separated_nonempty_list(COMMA,metadata_value) -> metadata_value COMMA . separated_nonempty_list(COMMA,metadata_value) [ RCURLY ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_NULL shift to state 45
-- On KW_METADATA shift to state 46
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 50
-- On tconst shift to state 75
-- On separated_nonempty_list(COMMA,metadata_value) shift to state 79
-- On metadata_value shift to state 77
## Reductions:

State 79:
## Known stack suffix:
## metadata_value COMMA separated_nonempty_list(COMMA,metadata_value)
## LR(1) items:
separated_nonempty_list(COMMA,metadata_value) -> metadata_value COMMA separated_nonempty_list(COMMA,metadata_value) . [ RCURLY ]
## Transitions:
## Reductions:
-- On RCURLY reduce production separated_nonempty_list(COMMA,metadata_value) -> metadata_value COMMA separated_nonempty_list(COMMA,metadata_value)

State 80:
## Known stack suffix:
## BANGLCURLY loption(separated_nonempty_list(COMMA,metadata_value))
## LR(1) items:
metadata_node -> BANGLCURLY loption(separated_nonempty_list(COMMA,metadata_value)) . RCURLY [ RCURLY EOL COMMA ]
## Transitions:
-- On RCURLY shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## BANGLCURLY loption(separated_nonempty_list(COMMA,metadata_value)) RCURLY
## LR(1) items:
metadata_node -> BANGLCURLY loption(separated_nonempty_list(COMMA,metadata_value)) RCURLY . [ RCURLY EOL COMMA ]
## Transitions:
## Reductions:
-- On RCURLY reduce production metadata_node -> BANGLCURLY loption(separated_nonempty_list(COMMA,metadata_value)) RCURLY
-- On EOL reduce production metadata_node -> BANGLCURLY loption(separated_nonempty_list(COMMA,metadata_value)) RCURLY
-- On COMMA reduce production metadata_node -> BANGLCURLY loption(separated_nonempty_list(COMMA,metadata_value)) RCURLY

State 82:
## Known stack suffix:
## KW_METADATA metadata_node
## LR(1) items:
tle_metadata -> KW_METADATA metadata_node . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production tle_metadata -> KW_METADATA metadata_node

State 83:
## Known stack suffix:
## BANGLCURLY
## LR(1) items:
tle_metadata -> BANGLCURLY . loption(separated_nonempty_list(COMMA,METADATA_ID)) RCURLY [ EOL ]
## Transitions:
-- On METADATA_ID shift to state 84
-- On separated_nonempty_list(COMMA,METADATA_ID) shift to state 87
-- On loption(separated_nonempty_list(COMMA,METADATA_ID)) shift to state 88
## Reductions:
-- On RCURLY reduce production loption(separated_nonempty_list(COMMA,METADATA_ID)) ->

State 84:
## Known stack suffix:
## METADATA_ID
## LR(1) items:
separated_nonempty_list(COMMA,METADATA_ID) -> METADATA_ID . [ RCURLY ]
separated_nonempty_list(COMMA,METADATA_ID) -> METADATA_ID . COMMA separated_nonempty_list(COMMA,METADATA_ID) [ RCURLY ]
## Transitions:
-- On COMMA shift to state 85
## Reductions:
-- On RCURLY reduce production separated_nonempty_list(COMMA,METADATA_ID) -> METADATA_ID

State 85:
## Known stack suffix:
## METADATA_ID COMMA
## LR(1) items:
separated_nonempty_list(COMMA,METADATA_ID) -> METADATA_ID COMMA . separated_nonempty_list(COMMA,METADATA_ID) [ RCURLY ]
## Transitions:
-- On METADATA_ID shift to state 84
-- On separated_nonempty_list(COMMA,METADATA_ID) shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## METADATA_ID COMMA separated_nonempty_list(COMMA,METADATA_ID)
## LR(1) items:
separated_nonempty_list(COMMA,METADATA_ID) -> METADATA_ID COMMA separated_nonempty_list(COMMA,METADATA_ID) . [ RCURLY ]
## Transitions:
## Reductions:
-- On RCURLY reduce production separated_nonempty_list(COMMA,METADATA_ID) -> METADATA_ID COMMA separated_nonempty_list(COMMA,METADATA_ID)

State 87:
## Known stack suffix:
## separated_nonempty_list(COMMA,METADATA_ID)
## LR(1) items:
loption(separated_nonempty_list(COMMA,METADATA_ID)) -> separated_nonempty_list(COMMA,METADATA_ID) . [ RCURLY ]
## Transitions:
## Reductions:
-- On RCURLY reduce production loption(separated_nonempty_list(COMMA,METADATA_ID)) -> separated_nonempty_list(COMMA,METADATA_ID)

State 88:
## Known stack suffix:
## BANGLCURLY loption(separated_nonempty_list(COMMA,METADATA_ID))
## LR(1) items:
tle_metadata -> BANGLCURLY loption(separated_nonempty_list(COMMA,METADATA_ID)) . RCURLY [ EOL ]
## Transitions:
-- On RCURLY shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## BANGLCURLY loption(separated_nonempty_list(COMMA,METADATA_ID)) RCURLY
## LR(1) items:
tle_metadata -> BANGLCURLY loption(separated_nonempty_list(COMMA,METADATA_ID)) RCURLY . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production tle_metadata -> BANGLCURLY loption(separated_nonempty_list(COMMA,METADATA_ID)) RCURLY

State 90:
## Known stack suffix:
## METADATA_ID EQ tle_metadata
## LR(1) items:
toplevelentry -> METADATA_ID EQ tle_metadata . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production toplevelentry -> METADATA_ID EQ tle_metadata

State 91:
## Known stack suffix:
## LOCAL
## LR(1) items:
toplevelentry -> LOCAL . EQ KW_TYPE typ [ EOL ]
## Transitions:
-- On EQ shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## LOCAL EQ
## LR(1) items:
toplevelentry -> LOCAL EQ . KW_TYPE typ [ EOL ]
## Transitions:
-- On KW_TYPE shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## LOCAL EQ KW_TYPE
## LR(1) items:
toplevelentry -> LOCAL EQ KW_TYPE . typ [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## LOCAL EQ KW_TYPE typ
## LR(1) items:
toplevelentry -> LOCAL EQ KW_TYPE typ . [ EOL ]
typ -> typ . STAR [ STAR LPAREN EOL ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LPAREN EOL ]
## Transitions:
-- On STAR shift to state 30
-- On LPAREN shift to state 31
## Reductions:
-- On EOL reduce production toplevelentry -> LOCAL EQ KW_TYPE typ

State 95:
## Known stack suffix:
## KW_TARGET
## LR(1) items:
toplevelentry -> KW_TARGET . KW_DATALAYOUT EQ STRING [ EOL ]
toplevelentry -> KW_TARGET . KW_TRIPLE EQ STRING [ EOL ]
## Transitions:
-- On KW_TRIPLE shift to state 96
-- On KW_DATALAYOUT shift to state 99
## Reductions:

State 96:
## Known stack suffix:
## KW_TARGET KW_TRIPLE
## LR(1) items:
toplevelentry -> KW_TARGET KW_TRIPLE . EQ STRING [ EOL ]
## Transitions:
-- On EQ shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## KW_TARGET KW_TRIPLE EQ
## LR(1) items:
toplevelentry -> KW_TARGET KW_TRIPLE EQ . STRING [ EOL ]
## Transitions:
-- On STRING shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## KW_TARGET KW_TRIPLE EQ STRING
## LR(1) items:
toplevelentry -> KW_TARGET KW_TRIPLE EQ STRING . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production toplevelentry -> KW_TARGET KW_TRIPLE EQ STRING

State 99:
## Known stack suffix:
## KW_TARGET KW_DATALAYOUT
## LR(1) items:
toplevelentry -> KW_TARGET KW_DATALAYOUT . EQ STRING [ EOL ]
## Transitions:
-- On EQ shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## KW_TARGET KW_DATALAYOUT EQ
## LR(1) items:
toplevelentry -> KW_TARGET KW_DATALAYOUT EQ . STRING [ EOL ]
## Transitions:
-- On STRING shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## KW_TARGET KW_DATALAYOUT EQ STRING
## LR(1) items:
toplevelentry -> KW_TARGET KW_DATALAYOUT EQ STRING . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production toplevelentry -> KW_TARGET KW_DATALAYOUT EQ STRING

State 102:
## Known stack suffix:
## KW_DEFINE
## LR(1) items:
definition -> KW_DEFINE . list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks RCURLY [ EOL ]
## Transitions:
-- On KW_WEAK_ODR shift to state 103
-- On KW_WEAK shift to state 104
-- On KW_PROTECTED shift to state 105
-- On KW_PRIVATE shift to state 106
-- On KW_LINKONCE_ODR shift to state 107
-- On KW_LINKONCE shift to state 108
-- On KW_INTERNAL shift to state 109
-- On KW_HIDDEN shift to state 110
-- On KW_FASTCC shift to state 111
-- On KW_EXTERN_WEAK shift to state 112
-- On KW_EXTERNAL shift to state 113
-- On KW_DLLIMPORT shift to state 114
-- On KW_DLLEXPORT shift to state 115
-- On KW_DEFAULT shift to state 116
-- On KW_COMMON shift to state 117
-- On KW_COLDCC shift to state 118
-- On KW_CCC shift to state 119
-- On KW_CC shift to state 120
-- On KW_AVAILABLE_EXTERNALLY shift to state 122
-- On KW_APPENDING shift to state 123
-- On visibility shift to state 124
-- On list(df_pre_attr) shift to state 125
-- On linkage shift to state 493
-- On dll_storage shift to state 494
-- On df_pre_attr shift to state 495
-- On cconv shift to state 497
## Reductions:
-- On LTLCURLY reduce production list(df_pre_attr) ->
-- On LT reduce production list(df_pre_attr) ->
-- On LSQUARE reduce production list(df_pre_attr) ->
-- On LCURLY reduce production list(df_pre_attr) ->
-- On KW_ZEROEXT reduce production list(df_pre_attr) ->
-- On KW_X86_MMX reduce production list(df_pre_attr) ->
-- On KW_X86_FP80 reduce production list(df_pre_attr) ->
-- On KW_VOID reduce production list(df_pre_attr) ->
-- On KW_SRET reduce production list(df_pre_attr) ->
-- On KW_SIGNEXT reduce production list(df_pre_attr) ->
-- On KW_RETURNED reduce production list(df_pre_attr) ->
-- On KW_PPC_FP128 reduce production list(df_pre_attr) ->
-- On KW_OPAQUE reduce production list(df_pre_attr) ->
-- On KW_NONNULL reduce production list(df_pre_attr) ->
-- On KW_NOCAPTURE reduce production list(df_pre_attr) ->
-- On KW_NOALIAS reduce production list(df_pre_attr) ->
-- On KW_NEST reduce production list(df_pre_attr) ->
-- On KW_METADATA reduce production list(df_pre_attr) ->
-- On KW_LABEL reduce production list(df_pre_attr) ->
-- On KW_INREG reduce production list(df_pre_attr) ->
-- On KW_INALLOCA reduce production list(df_pre_attr) ->
-- On KW_HALF reduce production list(df_pre_attr) ->
-- On KW_FP128 reduce production list(df_pre_attr) ->
-- On KW_FLOAT reduce production list(df_pre_attr) ->
-- On KW_DOUBLE reduce production list(df_pre_attr) ->
-- On KW_DEREFERENCEABLE reduce production list(df_pre_attr) ->
-- On KW_BYVAL reduce production list(df_pre_attr) ->
-- On KW_ALIGN reduce production list(df_pre_attr) ->
-- On I reduce production list(df_pre_attr) ->

State 103:
## Known stack suffix:
## KW_WEAK_ODR
## LR(1) items:
linkage -> KW_WEAK_ODR . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production linkage -> KW_WEAK_ODR
-- On LT reduce production linkage -> KW_WEAK_ODR
-- On LSQUARE reduce production linkage -> KW_WEAK_ODR
-- On LCURLY reduce production linkage -> KW_WEAK_ODR
-- On KW_ZEROEXT reduce production linkage -> KW_WEAK_ODR
-- On KW_X86_MMX reduce production linkage -> KW_WEAK_ODR
-- On KW_X86_FP80 reduce production linkage -> KW_WEAK_ODR
-- On KW_WEAK_ODR reduce production linkage -> KW_WEAK_ODR
-- On KW_WEAK reduce production linkage -> KW_WEAK_ODR
-- On KW_VOID reduce production linkage -> KW_WEAK_ODR
-- On KW_UNNAMED_ADDR reduce production linkage -> KW_WEAK_ODR
-- On KW_THREAD_LOCAL reduce production linkage -> KW_WEAK_ODR
-- On KW_SRET reduce production linkage -> KW_WEAK_ODR
-- On KW_SIGNEXT reduce production linkage -> KW_WEAK_ODR
-- On KW_RETURNED reduce production linkage -> KW_WEAK_ODR
-- On KW_PROTECTED reduce production linkage -> KW_WEAK_ODR
-- On KW_PRIVATE reduce production linkage -> KW_WEAK_ODR
-- On KW_PPC_FP128 reduce production linkage -> KW_WEAK_ODR
-- On KW_OPAQUE reduce production linkage -> KW_WEAK_ODR
-- On KW_NONNULL reduce production linkage -> KW_WEAK_ODR
-- On KW_NOCAPTURE reduce production linkage -> KW_WEAK_ODR
-- On KW_NOALIAS reduce production linkage -> KW_WEAK_ODR
-- On KW_NEST reduce production linkage -> KW_WEAK_ODR
-- On KW_METADATA reduce production linkage -> KW_WEAK_ODR
-- On KW_LINKONCE_ODR reduce production linkage -> KW_WEAK_ODR
-- On KW_LINKONCE reduce production linkage -> KW_WEAK_ODR
-- On KW_LABEL reduce production linkage -> KW_WEAK_ODR
-- On KW_INTERNAL reduce production linkage -> KW_WEAK_ODR
-- On KW_INREG reduce production linkage -> KW_WEAK_ODR
-- On KW_INALLOCA reduce production linkage -> KW_WEAK_ODR
-- On KW_HIDDEN reduce production linkage -> KW_WEAK_ODR
-- On KW_HALF reduce production linkage -> KW_WEAK_ODR
-- On KW_GLOBAL reduce production linkage -> KW_WEAK_ODR
-- On KW_FP128 reduce production linkage -> KW_WEAK_ODR
-- On KW_FLOAT reduce production linkage -> KW_WEAK_ODR
-- On KW_FASTCC reduce production linkage -> KW_WEAK_ODR
-- On KW_EXTERN_WEAK reduce production linkage -> KW_WEAK_ODR
-- On KW_EXTERNALLY_INITIALIZED reduce production linkage -> KW_WEAK_ODR
-- On KW_EXTERNAL reduce production linkage -> KW_WEAK_ODR
-- On KW_DOUBLE reduce production linkage -> KW_WEAK_ODR
-- On KW_DLLIMPORT reduce production linkage -> KW_WEAK_ODR
-- On KW_DLLEXPORT reduce production linkage -> KW_WEAK_ODR
-- On KW_DEREFERENCEABLE reduce production linkage -> KW_WEAK_ODR
-- On KW_DEFAULT reduce production linkage -> KW_WEAK_ODR
-- On KW_CONSTANT reduce production linkage -> KW_WEAK_ODR
-- On KW_COMMON reduce production linkage -> KW_WEAK_ODR
-- On KW_COLDCC reduce production linkage -> KW_WEAK_ODR
-- On KW_CCC reduce production linkage -> KW_WEAK_ODR
-- On KW_CC reduce production linkage -> KW_WEAK_ODR
-- On KW_BYVAL reduce production linkage -> KW_WEAK_ODR
-- On KW_AVAILABLE_EXTERNALLY reduce production linkage -> KW_WEAK_ODR
-- On KW_APPENDING reduce production linkage -> KW_WEAK_ODR
-- On KW_ALIGN reduce production linkage -> KW_WEAK_ODR
-- On I reduce production linkage -> KW_WEAK_ODR
-- On EOL reduce production linkage -> KW_WEAK_ODR
-- On COMMA reduce production linkage -> KW_WEAK_ODR

State 104:
## Known stack suffix:
## KW_WEAK
## LR(1) items:
linkage -> KW_WEAK . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production linkage -> KW_WEAK
-- On LT reduce production linkage -> KW_WEAK
-- On LSQUARE reduce production linkage -> KW_WEAK
-- On LCURLY reduce production linkage -> KW_WEAK
-- On KW_ZEROEXT reduce production linkage -> KW_WEAK
-- On KW_X86_MMX reduce production linkage -> KW_WEAK
-- On KW_X86_FP80 reduce production linkage -> KW_WEAK
-- On KW_WEAK_ODR reduce production linkage -> KW_WEAK
-- On KW_WEAK reduce production linkage -> KW_WEAK
-- On KW_VOID reduce production linkage -> KW_WEAK
-- On KW_UNNAMED_ADDR reduce production linkage -> KW_WEAK
-- On KW_THREAD_LOCAL reduce production linkage -> KW_WEAK
-- On KW_SRET reduce production linkage -> KW_WEAK
-- On KW_SIGNEXT reduce production linkage -> KW_WEAK
-- On KW_RETURNED reduce production linkage -> KW_WEAK
-- On KW_PROTECTED reduce production linkage -> KW_WEAK
-- On KW_PRIVATE reduce production linkage -> KW_WEAK
-- On KW_PPC_FP128 reduce production linkage -> KW_WEAK
-- On KW_OPAQUE reduce production linkage -> KW_WEAK
-- On KW_NONNULL reduce production linkage -> KW_WEAK
-- On KW_NOCAPTURE reduce production linkage -> KW_WEAK
-- On KW_NOALIAS reduce production linkage -> KW_WEAK
-- On KW_NEST reduce production linkage -> KW_WEAK
-- On KW_METADATA reduce production linkage -> KW_WEAK
-- On KW_LINKONCE_ODR reduce production linkage -> KW_WEAK
-- On KW_LINKONCE reduce production linkage -> KW_WEAK
-- On KW_LABEL reduce production linkage -> KW_WEAK
-- On KW_INTERNAL reduce production linkage -> KW_WEAK
-- On KW_INREG reduce production linkage -> KW_WEAK
-- On KW_INALLOCA reduce production linkage -> KW_WEAK
-- On KW_HIDDEN reduce production linkage -> KW_WEAK
-- On KW_HALF reduce production linkage -> KW_WEAK
-- On KW_GLOBAL reduce production linkage -> KW_WEAK
-- On KW_FP128 reduce production linkage -> KW_WEAK
-- On KW_FLOAT reduce production linkage -> KW_WEAK
-- On KW_FASTCC reduce production linkage -> KW_WEAK
-- On KW_EXTERN_WEAK reduce production linkage -> KW_WEAK
-- On KW_EXTERNALLY_INITIALIZED reduce production linkage -> KW_WEAK
-- On KW_EXTERNAL reduce production linkage -> KW_WEAK
-- On KW_DOUBLE reduce production linkage -> KW_WEAK
-- On KW_DLLIMPORT reduce production linkage -> KW_WEAK
-- On KW_DLLEXPORT reduce production linkage -> KW_WEAK
-- On KW_DEREFERENCEABLE reduce production linkage -> KW_WEAK
-- On KW_DEFAULT reduce production linkage -> KW_WEAK
-- On KW_CONSTANT reduce production linkage -> KW_WEAK
-- On KW_COMMON reduce production linkage -> KW_WEAK
-- On KW_COLDCC reduce production linkage -> KW_WEAK
-- On KW_CCC reduce production linkage -> KW_WEAK
-- On KW_CC reduce production linkage -> KW_WEAK
-- On KW_BYVAL reduce production linkage -> KW_WEAK
-- On KW_AVAILABLE_EXTERNALLY reduce production linkage -> KW_WEAK
-- On KW_APPENDING reduce production linkage -> KW_WEAK
-- On KW_ALIGN reduce production linkage -> KW_WEAK
-- On I reduce production linkage -> KW_WEAK
-- On EOL reduce production linkage -> KW_WEAK
-- On COMMA reduce production linkage -> KW_WEAK

State 105:
## Known stack suffix:
## KW_PROTECTED
## LR(1) items:
visibility -> KW_PROTECTED . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production visibility -> KW_PROTECTED
-- On LT reduce production visibility -> KW_PROTECTED
-- On LSQUARE reduce production visibility -> KW_PROTECTED
-- On LCURLY reduce production visibility -> KW_PROTECTED
-- On KW_ZEROEXT reduce production visibility -> KW_PROTECTED
-- On KW_X86_MMX reduce production visibility -> KW_PROTECTED
-- On KW_X86_FP80 reduce production visibility -> KW_PROTECTED
-- On KW_WEAK_ODR reduce production visibility -> KW_PROTECTED
-- On KW_WEAK reduce production visibility -> KW_PROTECTED
-- On KW_VOID reduce production visibility -> KW_PROTECTED
-- On KW_UNNAMED_ADDR reduce production visibility -> KW_PROTECTED
-- On KW_THREAD_LOCAL reduce production visibility -> KW_PROTECTED
-- On KW_SRET reduce production visibility -> KW_PROTECTED
-- On KW_SIGNEXT reduce production visibility -> KW_PROTECTED
-- On KW_RETURNED reduce production visibility -> KW_PROTECTED
-- On KW_PROTECTED reduce production visibility -> KW_PROTECTED
-- On KW_PRIVATE reduce production visibility -> KW_PROTECTED
-- On KW_PPC_FP128 reduce production visibility -> KW_PROTECTED
-- On KW_OPAQUE reduce production visibility -> KW_PROTECTED
-- On KW_NONNULL reduce production visibility -> KW_PROTECTED
-- On KW_NOCAPTURE reduce production visibility -> KW_PROTECTED
-- On KW_NOALIAS reduce production visibility -> KW_PROTECTED
-- On KW_NEST reduce production visibility -> KW_PROTECTED
-- On KW_METADATA reduce production visibility -> KW_PROTECTED
-- On KW_LINKONCE_ODR reduce production visibility -> KW_PROTECTED
-- On KW_LINKONCE reduce production visibility -> KW_PROTECTED
-- On KW_LABEL reduce production visibility -> KW_PROTECTED
-- On KW_INTERNAL reduce production visibility -> KW_PROTECTED
-- On KW_INREG reduce production visibility -> KW_PROTECTED
-- On KW_INALLOCA reduce production visibility -> KW_PROTECTED
-- On KW_HIDDEN reduce production visibility -> KW_PROTECTED
-- On KW_HALF reduce production visibility -> KW_PROTECTED
-- On KW_GLOBAL reduce production visibility -> KW_PROTECTED
-- On KW_FP128 reduce production visibility -> KW_PROTECTED
-- On KW_FLOAT reduce production visibility -> KW_PROTECTED
-- On KW_FASTCC reduce production visibility -> KW_PROTECTED
-- On KW_EXTERN_WEAK reduce production visibility -> KW_PROTECTED
-- On KW_EXTERNALLY_INITIALIZED reduce production visibility -> KW_PROTECTED
-- On KW_EXTERNAL reduce production visibility -> KW_PROTECTED
-- On KW_DOUBLE reduce production visibility -> KW_PROTECTED
-- On KW_DLLIMPORT reduce production visibility -> KW_PROTECTED
-- On KW_DLLEXPORT reduce production visibility -> KW_PROTECTED
-- On KW_DEREFERENCEABLE reduce production visibility -> KW_PROTECTED
-- On KW_DEFAULT reduce production visibility -> KW_PROTECTED
-- On KW_CONSTANT reduce production visibility -> KW_PROTECTED
-- On KW_COMMON reduce production visibility -> KW_PROTECTED
-- On KW_COLDCC reduce production visibility -> KW_PROTECTED
-- On KW_CCC reduce production visibility -> KW_PROTECTED
-- On KW_CC reduce production visibility -> KW_PROTECTED
-- On KW_BYVAL reduce production visibility -> KW_PROTECTED
-- On KW_AVAILABLE_EXTERNALLY reduce production visibility -> KW_PROTECTED
-- On KW_APPENDING reduce production visibility -> KW_PROTECTED
-- On KW_ALIGN reduce production visibility -> KW_PROTECTED
-- On I reduce production visibility -> KW_PROTECTED
-- On EOL reduce production visibility -> KW_PROTECTED
-- On COMMA reduce production visibility -> KW_PROTECTED

State 106:
## Known stack suffix:
## KW_PRIVATE
## LR(1) items:
linkage -> KW_PRIVATE . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production linkage -> KW_PRIVATE
-- On LT reduce production linkage -> KW_PRIVATE
-- On LSQUARE reduce production linkage -> KW_PRIVATE
-- On LCURLY reduce production linkage -> KW_PRIVATE
-- On KW_ZEROEXT reduce production linkage -> KW_PRIVATE
-- On KW_X86_MMX reduce production linkage -> KW_PRIVATE
-- On KW_X86_FP80 reduce production linkage -> KW_PRIVATE
-- On KW_WEAK_ODR reduce production linkage -> KW_PRIVATE
-- On KW_WEAK reduce production linkage -> KW_PRIVATE
-- On KW_VOID reduce production linkage -> KW_PRIVATE
-- On KW_UNNAMED_ADDR reduce production linkage -> KW_PRIVATE
-- On KW_THREAD_LOCAL reduce production linkage -> KW_PRIVATE
-- On KW_SRET reduce production linkage -> KW_PRIVATE
-- On KW_SIGNEXT reduce production linkage -> KW_PRIVATE
-- On KW_RETURNED reduce production linkage -> KW_PRIVATE
-- On KW_PROTECTED reduce production linkage -> KW_PRIVATE
-- On KW_PRIVATE reduce production linkage -> KW_PRIVATE
-- On KW_PPC_FP128 reduce production linkage -> KW_PRIVATE
-- On KW_OPAQUE reduce production linkage -> KW_PRIVATE
-- On KW_NONNULL reduce production linkage -> KW_PRIVATE
-- On KW_NOCAPTURE reduce production linkage -> KW_PRIVATE
-- On KW_NOALIAS reduce production linkage -> KW_PRIVATE
-- On KW_NEST reduce production linkage -> KW_PRIVATE
-- On KW_METADATA reduce production linkage -> KW_PRIVATE
-- On KW_LINKONCE_ODR reduce production linkage -> KW_PRIVATE
-- On KW_LINKONCE reduce production linkage -> KW_PRIVATE
-- On KW_LABEL reduce production linkage -> KW_PRIVATE
-- On KW_INTERNAL reduce production linkage -> KW_PRIVATE
-- On KW_INREG reduce production linkage -> KW_PRIVATE
-- On KW_INALLOCA reduce production linkage -> KW_PRIVATE
-- On KW_HIDDEN reduce production linkage -> KW_PRIVATE
-- On KW_HALF reduce production linkage -> KW_PRIVATE
-- On KW_GLOBAL reduce production linkage -> KW_PRIVATE
-- On KW_FP128 reduce production linkage -> KW_PRIVATE
-- On KW_FLOAT reduce production linkage -> KW_PRIVATE
-- On KW_FASTCC reduce production linkage -> KW_PRIVATE
-- On KW_EXTERN_WEAK reduce production linkage -> KW_PRIVATE
-- On KW_EXTERNALLY_INITIALIZED reduce production linkage -> KW_PRIVATE
-- On KW_EXTERNAL reduce production linkage -> KW_PRIVATE
-- On KW_DOUBLE reduce production linkage -> KW_PRIVATE
-- On KW_DLLIMPORT reduce production linkage -> KW_PRIVATE
-- On KW_DLLEXPORT reduce production linkage -> KW_PRIVATE
-- On KW_DEREFERENCEABLE reduce production linkage -> KW_PRIVATE
-- On KW_DEFAULT reduce production linkage -> KW_PRIVATE
-- On KW_CONSTANT reduce production linkage -> KW_PRIVATE
-- On KW_COMMON reduce production linkage -> KW_PRIVATE
-- On KW_COLDCC reduce production linkage -> KW_PRIVATE
-- On KW_CCC reduce production linkage -> KW_PRIVATE
-- On KW_CC reduce production linkage -> KW_PRIVATE
-- On KW_BYVAL reduce production linkage -> KW_PRIVATE
-- On KW_AVAILABLE_EXTERNALLY reduce production linkage -> KW_PRIVATE
-- On KW_APPENDING reduce production linkage -> KW_PRIVATE
-- On KW_ALIGN reduce production linkage -> KW_PRIVATE
-- On I reduce production linkage -> KW_PRIVATE
-- On EOL reduce production linkage -> KW_PRIVATE
-- On COMMA reduce production linkage -> KW_PRIVATE

State 107:
## Known stack suffix:
## KW_LINKONCE_ODR
## LR(1) items:
linkage -> KW_LINKONCE_ODR . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production linkage -> KW_LINKONCE_ODR
-- On LT reduce production linkage -> KW_LINKONCE_ODR
-- On LSQUARE reduce production linkage -> KW_LINKONCE_ODR
-- On LCURLY reduce production linkage -> KW_LINKONCE_ODR
-- On KW_ZEROEXT reduce production linkage -> KW_LINKONCE_ODR
-- On KW_X86_MMX reduce production linkage -> KW_LINKONCE_ODR
-- On KW_X86_FP80 reduce production linkage -> KW_LINKONCE_ODR
-- On KW_WEAK_ODR reduce production linkage -> KW_LINKONCE_ODR
-- On KW_WEAK reduce production linkage -> KW_LINKONCE_ODR
-- On KW_VOID reduce production linkage -> KW_LINKONCE_ODR
-- On KW_UNNAMED_ADDR reduce production linkage -> KW_LINKONCE_ODR
-- On KW_THREAD_LOCAL reduce production linkage -> KW_LINKONCE_ODR
-- On KW_SRET reduce production linkage -> KW_LINKONCE_ODR
-- On KW_SIGNEXT reduce production linkage -> KW_LINKONCE_ODR
-- On KW_RETURNED reduce production linkage -> KW_LINKONCE_ODR
-- On KW_PROTECTED reduce production linkage -> KW_LINKONCE_ODR
-- On KW_PRIVATE reduce production linkage -> KW_LINKONCE_ODR
-- On KW_PPC_FP128 reduce production linkage -> KW_LINKONCE_ODR
-- On KW_OPAQUE reduce production linkage -> KW_LINKONCE_ODR
-- On KW_NONNULL reduce production linkage -> KW_LINKONCE_ODR
-- On KW_NOCAPTURE reduce production linkage -> KW_LINKONCE_ODR
-- On KW_NOALIAS reduce production linkage -> KW_LINKONCE_ODR
-- On KW_NEST reduce production linkage -> KW_LINKONCE_ODR
-- On KW_METADATA reduce production linkage -> KW_LINKONCE_ODR
-- On KW_LINKONCE_ODR reduce production linkage -> KW_LINKONCE_ODR
-- On KW_LINKONCE reduce production linkage -> KW_LINKONCE_ODR
-- On KW_LABEL reduce production linkage -> KW_LINKONCE_ODR
-- On KW_INTERNAL reduce production linkage -> KW_LINKONCE_ODR
-- On KW_INREG reduce production linkage -> KW_LINKONCE_ODR
-- On KW_INALLOCA reduce production linkage -> KW_LINKONCE_ODR
-- On KW_HIDDEN reduce production linkage -> KW_LINKONCE_ODR
-- On KW_HALF reduce production linkage -> KW_LINKONCE_ODR
-- On KW_GLOBAL reduce production linkage -> KW_LINKONCE_ODR
-- On KW_FP128 reduce production linkage -> KW_LINKONCE_ODR
-- On KW_FLOAT reduce production linkage -> KW_LINKONCE_ODR
-- On KW_FASTCC reduce production linkage -> KW_LINKONCE_ODR
-- On KW_EXTERN_WEAK reduce production linkage -> KW_LINKONCE_ODR
-- On KW_EXTERNALLY_INITIALIZED reduce production linkage -> KW_LINKONCE_ODR
-- On KW_EXTERNAL reduce production linkage -> KW_LINKONCE_ODR
-- On KW_DOUBLE reduce production linkage -> KW_LINKONCE_ODR
-- On KW_DLLIMPORT reduce production linkage -> KW_LINKONCE_ODR
-- On KW_DLLEXPORT reduce production linkage -> KW_LINKONCE_ODR
-- On KW_DEREFERENCEABLE reduce production linkage -> KW_LINKONCE_ODR
-- On KW_DEFAULT reduce production linkage -> KW_LINKONCE_ODR
-- On KW_CONSTANT reduce production linkage -> KW_LINKONCE_ODR
-- On KW_COMMON reduce production linkage -> KW_LINKONCE_ODR
-- On KW_COLDCC reduce production linkage -> KW_LINKONCE_ODR
-- On KW_CCC reduce production linkage -> KW_LINKONCE_ODR
-- On KW_CC reduce production linkage -> KW_LINKONCE_ODR
-- On KW_BYVAL reduce production linkage -> KW_LINKONCE_ODR
-- On KW_AVAILABLE_EXTERNALLY reduce production linkage -> KW_LINKONCE_ODR
-- On KW_APPENDING reduce production linkage -> KW_LINKONCE_ODR
-- On KW_ALIGN reduce production linkage -> KW_LINKONCE_ODR
-- On I reduce production linkage -> KW_LINKONCE_ODR
-- On EOL reduce production linkage -> KW_LINKONCE_ODR
-- On COMMA reduce production linkage -> KW_LINKONCE_ODR

State 108:
## Known stack suffix:
## KW_LINKONCE
## LR(1) items:
linkage -> KW_LINKONCE . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production linkage -> KW_LINKONCE
-- On LT reduce production linkage -> KW_LINKONCE
-- On LSQUARE reduce production linkage -> KW_LINKONCE
-- On LCURLY reduce production linkage -> KW_LINKONCE
-- On KW_ZEROEXT reduce production linkage -> KW_LINKONCE
-- On KW_X86_MMX reduce production linkage -> KW_LINKONCE
-- On KW_X86_FP80 reduce production linkage -> KW_LINKONCE
-- On KW_WEAK_ODR reduce production linkage -> KW_LINKONCE
-- On KW_WEAK reduce production linkage -> KW_LINKONCE
-- On KW_VOID reduce production linkage -> KW_LINKONCE
-- On KW_UNNAMED_ADDR reduce production linkage -> KW_LINKONCE
-- On KW_THREAD_LOCAL reduce production linkage -> KW_LINKONCE
-- On KW_SRET reduce production linkage -> KW_LINKONCE
-- On KW_SIGNEXT reduce production linkage -> KW_LINKONCE
-- On KW_RETURNED reduce production linkage -> KW_LINKONCE
-- On KW_PROTECTED reduce production linkage -> KW_LINKONCE
-- On KW_PRIVATE reduce production linkage -> KW_LINKONCE
-- On KW_PPC_FP128 reduce production linkage -> KW_LINKONCE
-- On KW_OPAQUE reduce production linkage -> KW_LINKONCE
-- On KW_NONNULL reduce production linkage -> KW_LINKONCE
-- On KW_NOCAPTURE reduce production linkage -> KW_LINKONCE
-- On KW_NOALIAS reduce production linkage -> KW_LINKONCE
-- On KW_NEST reduce production linkage -> KW_LINKONCE
-- On KW_METADATA reduce production linkage -> KW_LINKONCE
-- On KW_LINKONCE_ODR reduce production linkage -> KW_LINKONCE
-- On KW_LINKONCE reduce production linkage -> KW_LINKONCE
-- On KW_LABEL reduce production linkage -> KW_LINKONCE
-- On KW_INTERNAL reduce production linkage -> KW_LINKONCE
-- On KW_INREG reduce production linkage -> KW_LINKONCE
-- On KW_INALLOCA reduce production linkage -> KW_LINKONCE
-- On KW_HIDDEN reduce production linkage -> KW_LINKONCE
-- On KW_HALF reduce production linkage -> KW_LINKONCE
-- On KW_GLOBAL reduce production linkage -> KW_LINKONCE
-- On KW_FP128 reduce production linkage -> KW_LINKONCE
-- On KW_FLOAT reduce production linkage -> KW_LINKONCE
-- On KW_FASTCC reduce production linkage -> KW_LINKONCE
-- On KW_EXTERN_WEAK reduce production linkage -> KW_LINKONCE
-- On KW_EXTERNALLY_INITIALIZED reduce production linkage -> KW_LINKONCE
-- On KW_EXTERNAL reduce production linkage -> KW_LINKONCE
-- On KW_DOUBLE reduce production linkage -> KW_LINKONCE
-- On KW_DLLIMPORT reduce production linkage -> KW_LINKONCE
-- On KW_DLLEXPORT reduce production linkage -> KW_LINKONCE
-- On KW_DEREFERENCEABLE reduce production linkage -> KW_LINKONCE
-- On KW_DEFAULT reduce production linkage -> KW_LINKONCE
-- On KW_CONSTANT reduce production linkage -> KW_LINKONCE
-- On KW_COMMON reduce production linkage -> KW_LINKONCE
-- On KW_COLDCC reduce production linkage -> KW_LINKONCE
-- On KW_CCC reduce production linkage -> KW_LINKONCE
-- On KW_CC reduce production linkage -> KW_LINKONCE
-- On KW_BYVAL reduce production linkage -> KW_LINKONCE
-- On KW_AVAILABLE_EXTERNALLY reduce production linkage -> KW_LINKONCE
-- On KW_APPENDING reduce production linkage -> KW_LINKONCE
-- On KW_ALIGN reduce production linkage -> KW_LINKONCE
-- On I reduce production linkage -> KW_LINKONCE
-- On EOL reduce production linkage -> KW_LINKONCE
-- On COMMA reduce production linkage -> KW_LINKONCE

State 109:
## Known stack suffix:
## KW_INTERNAL
## LR(1) items:
linkage -> KW_INTERNAL . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production linkage -> KW_INTERNAL
-- On LT reduce production linkage -> KW_INTERNAL
-- On LSQUARE reduce production linkage -> KW_INTERNAL
-- On LCURLY reduce production linkage -> KW_INTERNAL
-- On KW_ZEROEXT reduce production linkage -> KW_INTERNAL
-- On KW_X86_MMX reduce production linkage -> KW_INTERNAL
-- On KW_X86_FP80 reduce production linkage -> KW_INTERNAL
-- On KW_WEAK_ODR reduce production linkage -> KW_INTERNAL
-- On KW_WEAK reduce production linkage -> KW_INTERNAL
-- On KW_VOID reduce production linkage -> KW_INTERNAL
-- On KW_UNNAMED_ADDR reduce production linkage -> KW_INTERNAL
-- On KW_THREAD_LOCAL reduce production linkage -> KW_INTERNAL
-- On KW_SRET reduce production linkage -> KW_INTERNAL
-- On KW_SIGNEXT reduce production linkage -> KW_INTERNAL
-- On KW_RETURNED reduce production linkage -> KW_INTERNAL
-- On KW_PROTECTED reduce production linkage -> KW_INTERNAL
-- On KW_PRIVATE reduce production linkage -> KW_INTERNAL
-- On KW_PPC_FP128 reduce production linkage -> KW_INTERNAL
-- On KW_OPAQUE reduce production linkage -> KW_INTERNAL
-- On KW_NONNULL reduce production linkage -> KW_INTERNAL
-- On KW_NOCAPTURE reduce production linkage -> KW_INTERNAL
-- On KW_NOALIAS reduce production linkage -> KW_INTERNAL
-- On KW_NEST reduce production linkage -> KW_INTERNAL
-- On KW_METADATA reduce production linkage -> KW_INTERNAL
-- On KW_LINKONCE_ODR reduce production linkage -> KW_INTERNAL
-- On KW_LINKONCE reduce production linkage -> KW_INTERNAL
-- On KW_LABEL reduce production linkage -> KW_INTERNAL
-- On KW_INTERNAL reduce production linkage -> KW_INTERNAL
-- On KW_INREG reduce production linkage -> KW_INTERNAL
-- On KW_INALLOCA reduce production linkage -> KW_INTERNAL
-- On KW_HIDDEN reduce production linkage -> KW_INTERNAL
-- On KW_HALF reduce production linkage -> KW_INTERNAL
-- On KW_GLOBAL reduce production linkage -> KW_INTERNAL
-- On KW_FP128 reduce production linkage -> KW_INTERNAL
-- On KW_FLOAT reduce production linkage -> KW_INTERNAL
-- On KW_FASTCC reduce production linkage -> KW_INTERNAL
-- On KW_EXTERN_WEAK reduce production linkage -> KW_INTERNAL
-- On KW_EXTERNALLY_INITIALIZED reduce production linkage -> KW_INTERNAL
-- On KW_EXTERNAL reduce production linkage -> KW_INTERNAL
-- On KW_DOUBLE reduce production linkage -> KW_INTERNAL
-- On KW_DLLIMPORT reduce production linkage -> KW_INTERNAL
-- On KW_DLLEXPORT reduce production linkage -> KW_INTERNAL
-- On KW_DEREFERENCEABLE reduce production linkage -> KW_INTERNAL
-- On KW_DEFAULT reduce production linkage -> KW_INTERNAL
-- On KW_CONSTANT reduce production linkage -> KW_INTERNAL
-- On KW_COMMON reduce production linkage -> KW_INTERNAL
-- On KW_COLDCC reduce production linkage -> KW_INTERNAL
-- On KW_CCC reduce production linkage -> KW_INTERNAL
-- On KW_CC reduce production linkage -> KW_INTERNAL
-- On KW_BYVAL reduce production linkage -> KW_INTERNAL
-- On KW_AVAILABLE_EXTERNALLY reduce production linkage -> KW_INTERNAL
-- On KW_APPENDING reduce production linkage -> KW_INTERNAL
-- On KW_ALIGN reduce production linkage -> KW_INTERNAL
-- On I reduce production linkage -> KW_INTERNAL
-- On EOL reduce production linkage -> KW_INTERNAL
-- On COMMA reduce production linkage -> KW_INTERNAL

State 110:
## Known stack suffix:
## KW_HIDDEN
## LR(1) items:
visibility -> KW_HIDDEN . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production visibility -> KW_HIDDEN
-- On LT reduce production visibility -> KW_HIDDEN
-- On LSQUARE reduce production visibility -> KW_HIDDEN
-- On LCURLY reduce production visibility -> KW_HIDDEN
-- On KW_ZEROEXT reduce production visibility -> KW_HIDDEN
-- On KW_X86_MMX reduce production visibility -> KW_HIDDEN
-- On KW_X86_FP80 reduce production visibility -> KW_HIDDEN
-- On KW_WEAK_ODR reduce production visibility -> KW_HIDDEN
-- On KW_WEAK reduce production visibility -> KW_HIDDEN
-- On KW_VOID reduce production visibility -> KW_HIDDEN
-- On KW_UNNAMED_ADDR reduce production visibility -> KW_HIDDEN
-- On KW_THREAD_LOCAL reduce production visibility -> KW_HIDDEN
-- On KW_SRET reduce production visibility -> KW_HIDDEN
-- On KW_SIGNEXT reduce production visibility -> KW_HIDDEN
-- On KW_RETURNED reduce production visibility -> KW_HIDDEN
-- On KW_PROTECTED reduce production visibility -> KW_HIDDEN
-- On KW_PRIVATE reduce production visibility -> KW_HIDDEN
-- On KW_PPC_FP128 reduce production visibility -> KW_HIDDEN
-- On KW_OPAQUE reduce production visibility -> KW_HIDDEN
-- On KW_NONNULL reduce production visibility -> KW_HIDDEN
-- On KW_NOCAPTURE reduce production visibility -> KW_HIDDEN
-- On KW_NOALIAS reduce production visibility -> KW_HIDDEN
-- On KW_NEST reduce production visibility -> KW_HIDDEN
-- On KW_METADATA reduce production visibility -> KW_HIDDEN
-- On KW_LINKONCE_ODR reduce production visibility -> KW_HIDDEN
-- On KW_LINKONCE reduce production visibility -> KW_HIDDEN
-- On KW_LABEL reduce production visibility -> KW_HIDDEN
-- On KW_INTERNAL reduce production visibility -> KW_HIDDEN
-- On KW_INREG reduce production visibility -> KW_HIDDEN
-- On KW_INALLOCA reduce production visibility -> KW_HIDDEN
-- On KW_HIDDEN reduce production visibility -> KW_HIDDEN
-- On KW_HALF reduce production visibility -> KW_HIDDEN
-- On KW_GLOBAL reduce production visibility -> KW_HIDDEN
-- On KW_FP128 reduce production visibility -> KW_HIDDEN
-- On KW_FLOAT reduce production visibility -> KW_HIDDEN
-- On KW_FASTCC reduce production visibility -> KW_HIDDEN
-- On KW_EXTERN_WEAK reduce production visibility -> KW_HIDDEN
-- On KW_EXTERNALLY_INITIALIZED reduce production visibility -> KW_HIDDEN
-- On KW_EXTERNAL reduce production visibility -> KW_HIDDEN
-- On KW_DOUBLE reduce production visibility -> KW_HIDDEN
-- On KW_DLLIMPORT reduce production visibility -> KW_HIDDEN
-- On KW_DLLEXPORT reduce production visibility -> KW_HIDDEN
-- On KW_DEREFERENCEABLE reduce production visibility -> KW_HIDDEN
-- On KW_DEFAULT reduce production visibility -> KW_HIDDEN
-- On KW_CONSTANT reduce production visibility -> KW_HIDDEN
-- On KW_COMMON reduce production visibility -> KW_HIDDEN
-- On KW_COLDCC reduce production visibility -> KW_HIDDEN
-- On KW_CCC reduce production visibility -> KW_HIDDEN
-- On KW_CC reduce production visibility -> KW_HIDDEN
-- On KW_BYVAL reduce production visibility -> KW_HIDDEN
-- On KW_AVAILABLE_EXTERNALLY reduce production visibility -> KW_HIDDEN
-- On KW_APPENDING reduce production visibility -> KW_HIDDEN
-- On KW_ALIGN reduce production visibility -> KW_HIDDEN
-- On I reduce production visibility -> KW_HIDDEN
-- On EOL reduce production visibility -> KW_HIDDEN
-- On COMMA reduce production visibility -> KW_HIDDEN

State 111:
## Known stack suffix:
## KW_FASTCC
## LR(1) items:
cconv -> KW_FASTCC . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production cconv -> KW_FASTCC
-- On LT reduce production cconv -> KW_FASTCC
-- On LSQUARE reduce production cconv -> KW_FASTCC
-- On LCURLY reduce production cconv -> KW_FASTCC
-- On KW_ZEROEXT reduce production cconv -> KW_FASTCC
-- On KW_X86_MMX reduce production cconv -> KW_FASTCC
-- On KW_X86_FP80 reduce production cconv -> KW_FASTCC
-- On KW_WEAK_ODR reduce production cconv -> KW_FASTCC
-- On KW_WEAK reduce production cconv -> KW_FASTCC
-- On KW_VOID reduce production cconv -> KW_FASTCC
-- On KW_SRET reduce production cconv -> KW_FASTCC
-- On KW_SIGNEXT reduce production cconv -> KW_FASTCC
-- On KW_RETURNED reduce production cconv -> KW_FASTCC
-- On KW_PROTECTED reduce production cconv -> KW_FASTCC
-- On KW_PRIVATE reduce production cconv -> KW_FASTCC
-- On KW_PPC_FP128 reduce production cconv -> KW_FASTCC
-- On KW_OPAQUE reduce production cconv -> KW_FASTCC
-- On KW_NONNULL reduce production cconv -> KW_FASTCC
-- On KW_NOCAPTURE reduce production cconv -> KW_FASTCC
-- On KW_NOALIAS reduce production cconv -> KW_FASTCC
-- On KW_NEST reduce production cconv -> KW_FASTCC
-- On KW_METADATA reduce production cconv -> KW_FASTCC
-- On KW_LINKONCE_ODR reduce production cconv -> KW_FASTCC
-- On KW_LINKONCE reduce production cconv -> KW_FASTCC
-- On KW_LABEL reduce production cconv -> KW_FASTCC
-- On KW_INTERNAL reduce production cconv -> KW_FASTCC
-- On KW_INREG reduce production cconv -> KW_FASTCC
-- On KW_INALLOCA reduce production cconv -> KW_FASTCC
-- On KW_HIDDEN reduce production cconv -> KW_FASTCC
-- On KW_HALF reduce production cconv -> KW_FASTCC
-- On KW_FP128 reduce production cconv -> KW_FASTCC
-- On KW_FLOAT reduce production cconv -> KW_FASTCC
-- On KW_FASTCC reduce production cconv -> KW_FASTCC
-- On KW_EXTERN_WEAK reduce production cconv -> KW_FASTCC
-- On KW_EXTERNAL reduce production cconv -> KW_FASTCC
-- On KW_DOUBLE reduce production cconv -> KW_FASTCC
-- On KW_DLLIMPORT reduce production cconv -> KW_FASTCC
-- On KW_DLLEXPORT reduce production cconv -> KW_FASTCC
-- On KW_DEREFERENCEABLE reduce production cconv -> KW_FASTCC
-- On KW_DEFAULT reduce production cconv -> KW_FASTCC
-- On KW_COMMON reduce production cconv -> KW_FASTCC
-- On KW_COLDCC reduce production cconv -> KW_FASTCC
-- On KW_CCC reduce production cconv -> KW_FASTCC
-- On KW_CC reduce production cconv -> KW_FASTCC
-- On KW_BYVAL reduce production cconv -> KW_FASTCC
-- On KW_AVAILABLE_EXTERNALLY reduce production cconv -> KW_FASTCC
-- On KW_APPENDING reduce production cconv -> KW_FASTCC
-- On KW_ALIGN reduce production cconv -> KW_FASTCC
-- On I reduce production cconv -> KW_FASTCC

State 112:
## Known stack suffix:
## KW_EXTERN_WEAK
## LR(1) items:
linkage -> KW_EXTERN_WEAK . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production linkage -> KW_EXTERN_WEAK
-- On LT reduce production linkage -> KW_EXTERN_WEAK
-- On LSQUARE reduce production linkage -> KW_EXTERN_WEAK
-- On LCURLY reduce production linkage -> KW_EXTERN_WEAK
-- On KW_ZEROEXT reduce production linkage -> KW_EXTERN_WEAK
-- On KW_X86_MMX reduce production linkage -> KW_EXTERN_WEAK
-- On KW_X86_FP80 reduce production linkage -> KW_EXTERN_WEAK
-- On KW_WEAK_ODR reduce production linkage -> KW_EXTERN_WEAK
-- On KW_WEAK reduce production linkage -> KW_EXTERN_WEAK
-- On KW_VOID reduce production linkage -> KW_EXTERN_WEAK
-- On KW_UNNAMED_ADDR reduce production linkage -> KW_EXTERN_WEAK
-- On KW_THREAD_LOCAL reduce production linkage -> KW_EXTERN_WEAK
-- On KW_SRET reduce production linkage -> KW_EXTERN_WEAK
-- On KW_SIGNEXT reduce production linkage -> KW_EXTERN_WEAK
-- On KW_RETURNED reduce production linkage -> KW_EXTERN_WEAK
-- On KW_PROTECTED reduce production linkage -> KW_EXTERN_WEAK
-- On KW_PRIVATE reduce production linkage -> KW_EXTERN_WEAK
-- On KW_PPC_FP128 reduce production linkage -> KW_EXTERN_WEAK
-- On KW_OPAQUE reduce production linkage -> KW_EXTERN_WEAK
-- On KW_NONNULL reduce production linkage -> KW_EXTERN_WEAK
-- On KW_NOCAPTURE reduce production linkage -> KW_EXTERN_WEAK
-- On KW_NOALIAS reduce production linkage -> KW_EXTERN_WEAK
-- On KW_NEST reduce production linkage -> KW_EXTERN_WEAK
-- On KW_METADATA reduce production linkage -> KW_EXTERN_WEAK
-- On KW_LINKONCE_ODR reduce production linkage -> KW_EXTERN_WEAK
-- On KW_LINKONCE reduce production linkage -> KW_EXTERN_WEAK
-- On KW_LABEL reduce production linkage -> KW_EXTERN_WEAK
-- On KW_INTERNAL reduce production linkage -> KW_EXTERN_WEAK
-- On KW_INREG reduce production linkage -> KW_EXTERN_WEAK
-- On KW_INALLOCA reduce production linkage -> KW_EXTERN_WEAK
-- On KW_HIDDEN reduce production linkage -> KW_EXTERN_WEAK
-- On KW_HALF reduce production linkage -> KW_EXTERN_WEAK
-- On KW_GLOBAL reduce production linkage -> KW_EXTERN_WEAK
-- On KW_FP128 reduce production linkage -> KW_EXTERN_WEAK
-- On KW_FLOAT reduce production linkage -> KW_EXTERN_WEAK
-- On KW_FASTCC reduce production linkage -> KW_EXTERN_WEAK
-- On KW_EXTERN_WEAK reduce production linkage -> KW_EXTERN_WEAK
-- On KW_EXTERNALLY_INITIALIZED reduce production linkage -> KW_EXTERN_WEAK
-- On KW_EXTERNAL reduce production linkage -> KW_EXTERN_WEAK
-- On KW_DOUBLE reduce production linkage -> KW_EXTERN_WEAK
-- On KW_DLLIMPORT reduce production linkage -> KW_EXTERN_WEAK
-- On KW_DLLEXPORT reduce production linkage -> KW_EXTERN_WEAK
-- On KW_DEREFERENCEABLE reduce production linkage -> KW_EXTERN_WEAK
-- On KW_DEFAULT reduce production linkage -> KW_EXTERN_WEAK
-- On KW_CONSTANT reduce production linkage -> KW_EXTERN_WEAK
-- On KW_COMMON reduce production linkage -> KW_EXTERN_WEAK
-- On KW_COLDCC reduce production linkage -> KW_EXTERN_WEAK
-- On KW_CCC reduce production linkage -> KW_EXTERN_WEAK
-- On KW_CC reduce production linkage -> KW_EXTERN_WEAK
-- On KW_BYVAL reduce production linkage -> KW_EXTERN_WEAK
-- On KW_AVAILABLE_EXTERNALLY reduce production linkage -> KW_EXTERN_WEAK
-- On KW_APPENDING reduce production linkage -> KW_EXTERN_WEAK
-- On KW_ALIGN reduce production linkage -> KW_EXTERN_WEAK
-- On I reduce production linkage -> KW_EXTERN_WEAK
-- On EOL reduce production linkage -> KW_EXTERN_WEAK
-- On COMMA reduce production linkage -> KW_EXTERN_WEAK

State 113:
## Known stack suffix:
## KW_EXTERNAL
## LR(1) items:
linkage -> KW_EXTERNAL . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production linkage -> KW_EXTERNAL
-- On LT reduce production linkage -> KW_EXTERNAL
-- On LSQUARE reduce production linkage -> KW_EXTERNAL
-- On LCURLY reduce production linkage -> KW_EXTERNAL
-- On KW_ZEROEXT reduce production linkage -> KW_EXTERNAL
-- On KW_X86_MMX reduce production linkage -> KW_EXTERNAL
-- On KW_X86_FP80 reduce production linkage -> KW_EXTERNAL
-- On KW_WEAK_ODR reduce production linkage -> KW_EXTERNAL
-- On KW_WEAK reduce production linkage -> KW_EXTERNAL
-- On KW_VOID reduce production linkage -> KW_EXTERNAL
-- On KW_UNNAMED_ADDR reduce production linkage -> KW_EXTERNAL
-- On KW_THREAD_LOCAL reduce production linkage -> KW_EXTERNAL
-- On KW_SRET reduce production linkage -> KW_EXTERNAL
-- On KW_SIGNEXT reduce production linkage -> KW_EXTERNAL
-- On KW_RETURNED reduce production linkage -> KW_EXTERNAL
-- On KW_PROTECTED reduce production linkage -> KW_EXTERNAL
-- On KW_PRIVATE reduce production linkage -> KW_EXTERNAL
-- On KW_PPC_FP128 reduce production linkage -> KW_EXTERNAL
-- On KW_OPAQUE reduce production linkage -> KW_EXTERNAL
-- On KW_NONNULL reduce production linkage -> KW_EXTERNAL
-- On KW_NOCAPTURE reduce production linkage -> KW_EXTERNAL
-- On KW_NOALIAS reduce production linkage -> KW_EXTERNAL
-- On KW_NEST reduce production linkage -> KW_EXTERNAL
-- On KW_METADATA reduce production linkage -> KW_EXTERNAL
-- On KW_LINKONCE_ODR reduce production linkage -> KW_EXTERNAL
-- On KW_LINKONCE reduce production linkage -> KW_EXTERNAL
-- On KW_LABEL reduce production linkage -> KW_EXTERNAL
-- On KW_INTERNAL reduce production linkage -> KW_EXTERNAL
-- On KW_INREG reduce production linkage -> KW_EXTERNAL
-- On KW_INALLOCA reduce production linkage -> KW_EXTERNAL
-- On KW_HIDDEN reduce production linkage -> KW_EXTERNAL
-- On KW_HALF reduce production linkage -> KW_EXTERNAL
-- On KW_GLOBAL reduce production linkage -> KW_EXTERNAL
-- On KW_FP128 reduce production linkage -> KW_EXTERNAL
-- On KW_FLOAT reduce production linkage -> KW_EXTERNAL
-- On KW_FASTCC reduce production linkage -> KW_EXTERNAL
-- On KW_EXTERN_WEAK reduce production linkage -> KW_EXTERNAL
-- On KW_EXTERNALLY_INITIALIZED reduce production linkage -> KW_EXTERNAL
-- On KW_EXTERNAL reduce production linkage -> KW_EXTERNAL
-- On KW_DOUBLE reduce production linkage -> KW_EXTERNAL
-- On KW_DLLIMPORT reduce production linkage -> KW_EXTERNAL
-- On KW_DLLEXPORT reduce production linkage -> KW_EXTERNAL
-- On KW_DEREFERENCEABLE reduce production linkage -> KW_EXTERNAL
-- On KW_DEFAULT reduce production linkage -> KW_EXTERNAL
-- On KW_CONSTANT reduce production linkage -> KW_EXTERNAL
-- On KW_COMMON reduce production linkage -> KW_EXTERNAL
-- On KW_COLDCC reduce production linkage -> KW_EXTERNAL
-- On KW_CCC reduce production linkage -> KW_EXTERNAL
-- On KW_CC reduce production linkage -> KW_EXTERNAL
-- On KW_BYVAL reduce production linkage -> KW_EXTERNAL
-- On KW_AVAILABLE_EXTERNALLY reduce production linkage -> KW_EXTERNAL
-- On KW_APPENDING reduce production linkage -> KW_EXTERNAL
-- On KW_ALIGN reduce production linkage -> KW_EXTERNAL
-- On I reduce production linkage -> KW_EXTERNAL
-- On EOL reduce production linkage -> KW_EXTERNAL
-- On COMMA reduce production linkage -> KW_EXTERNAL

State 114:
## Known stack suffix:
## KW_DLLIMPORT
## LR(1) items:
dll_storage -> KW_DLLIMPORT . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production dll_storage -> KW_DLLIMPORT
-- On LT reduce production dll_storage -> KW_DLLIMPORT
-- On LSQUARE reduce production dll_storage -> KW_DLLIMPORT
-- On LCURLY reduce production dll_storage -> KW_DLLIMPORT
-- On KW_ZEROEXT reduce production dll_storage -> KW_DLLIMPORT
-- On KW_X86_MMX reduce production dll_storage -> KW_DLLIMPORT
-- On KW_X86_FP80 reduce production dll_storage -> KW_DLLIMPORT
-- On KW_WEAK_ODR reduce production dll_storage -> KW_DLLIMPORT
-- On KW_WEAK reduce production dll_storage -> KW_DLLIMPORT
-- On KW_VOID reduce production dll_storage -> KW_DLLIMPORT
-- On KW_UNNAMED_ADDR reduce production dll_storage -> KW_DLLIMPORT
-- On KW_THREAD_LOCAL reduce production dll_storage -> KW_DLLIMPORT
-- On KW_SRET reduce production dll_storage -> KW_DLLIMPORT
-- On KW_SIGNEXT reduce production dll_storage -> KW_DLLIMPORT
-- On KW_RETURNED reduce production dll_storage -> KW_DLLIMPORT
-- On KW_PROTECTED reduce production dll_storage -> KW_DLLIMPORT
-- On KW_PRIVATE reduce production dll_storage -> KW_DLLIMPORT
-- On KW_PPC_FP128 reduce production dll_storage -> KW_DLLIMPORT
-- On KW_OPAQUE reduce production dll_storage -> KW_DLLIMPORT
-- On KW_NONNULL reduce production dll_storage -> KW_DLLIMPORT
-- On KW_NOCAPTURE reduce production dll_storage -> KW_DLLIMPORT
-- On KW_NOALIAS reduce production dll_storage -> KW_DLLIMPORT
-- On KW_NEST reduce production dll_storage -> KW_DLLIMPORT
-- On KW_METADATA reduce production dll_storage -> KW_DLLIMPORT
-- On KW_LINKONCE_ODR reduce production dll_storage -> KW_DLLIMPORT
-- On KW_LINKONCE reduce production dll_storage -> KW_DLLIMPORT
-- On KW_LABEL reduce production dll_storage -> KW_DLLIMPORT
-- On KW_INTERNAL reduce production dll_storage -> KW_DLLIMPORT
-- On KW_INREG reduce production dll_storage -> KW_DLLIMPORT
-- On KW_INALLOCA reduce production dll_storage -> KW_DLLIMPORT
-- On KW_HIDDEN reduce production dll_storage -> KW_DLLIMPORT
-- On KW_HALF reduce production dll_storage -> KW_DLLIMPORT
-- On KW_GLOBAL reduce production dll_storage -> KW_DLLIMPORT
-- On KW_FP128 reduce production dll_storage -> KW_DLLIMPORT
-- On KW_FLOAT reduce production dll_storage -> KW_DLLIMPORT
-- On KW_FASTCC reduce production dll_storage -> KW_DLLIMPORT
-- On KW_EXTERN_WEAK reduce production dll_storage -> KW_DLLIMPORT
-- On KW_EXTERNALLY_INITIALIZED reduce production dll_storage -> KW_DLLIMPORT
-- On KW_EXTERNAL reduce production dll_storage -> KW_DLLIMPORT
-- On KW_DOUBLE reduce production dll_storage -> KW_DLLIMPORT
-- On KW_DLLIMPORT reduce production dll_storage -> KW_DLLIMPORT
-- On KW_DLLEXPORT reduce production dll_storage -> KW_DLLIMPORT
-- On KW_DEREFERENCEABLE reduce production dll_storage -> KW_DLLIMPORT
-- On KW_DEFAULT reduce production dll_storage -> KW_DLLIMPORT
-- On KW_CONSTANT reduce production dll_storage -> KW_DLLIMPORT
-- On KW_COMMON reduce production dll_storage -> KW_DLLIMPORT
-- On KW_COLDCC reduce production dll_storage -> KW_DLLIMPORT
-- On KW_CCC reduce production dll_storage -> KW_DLLIMPORT
-- On KW_CC reduce production dll_storage -> KW_DLLIMPORT
-- On KW_BYVAL reduce production dll_storage -> KW_DLLIMPORT
-- On KW_AVAILABLE_EXTERNALLY reduce production dll_storage -> KW_DLLIMPORT
-- On KW_APPENDING reduce production dll_storage -> KW_DLLIMPORT
-- On KW_ALIGN reduce production dll_storage -> KW_DLLIMPORT
-- On I reduce production dll_storage -> KW_DLLIMPORT
-- On EOL reduce production dll_storage -> KW_DLLIMPORT
-- On COMMA reduce production dll_storage -> KW_DLLIMPORT

State 115:
## Known stack suffix:
## KW_DLLEXPORT
## LR(1) items:
dll_storage -> KW_DLLEXPORT . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production dll_storage -> KW_DLLEXPORT
-- On LT reduce production dll_storage -> KW_DLLEXPORT
-- On LSQUARE reduce production dll_storage -> KW_DLLEXPORT
-- On LCURLY reduce production dll_storage -> KW_DLLEXPORT
-- On KW_ZEROEXT reduce production dll_storage -> KW_DLLEXPORT
-- On KW_X86_MMX reduce production dll_storage -> KW_DLLEXPORT
-- On KW_X86_FP80 reduce production dll_storage -> KW_DLLEXPORT
-- On KW_WEAK_ODR reduce production dll_storage -> KW_DLLEXPORT
-- On KW_WEAK reduce production dll_storage -> KW_DLLEXPORT
-- On KW_VOID reduce production dll_storage -> KW_DLLEXPORT
-- On KW_UNNAMED_ADDR reduce production dll_storage -> KW_DLLEXPORT
-- On KW_THREAD_LOCAL reduce production dll_storage -> KW_DLLEXPORT
-- On KW_SRET reduce production dll_storage -> KW_DLLEXPORT
-- On KW_SIGNEXT reduce production dll_storage -> KW_DLLEXPORT
-- On KW_RETURNED reduce production dll_storage -> KW_DLLEXPORT
-- On KW_PROTECTED reduce production dll_storage -> KW_DLLEXPORT
-- On KW_PRIVATE reduce production dll_storage -> KW_DLLEXPORT
-- On KW_PPC_FP128 reduce production dll_storage -> KW_DLLEXPORT
-- On KW_OPAQUE reduce production dll_storage -> KW_DLLEXPORT
-- On KW_NONNULL reduce production dll_storage -> KW_DLLEXPORT
-- On KW_NOCAPTURE reduce production dll_storage -> KW_DLLEXPORT
-- On KW_NOALIAS reduce production dll_storage -> KW_DLLEXPORT
-- On KW_NEST reduce production dll_storage -> KW_DLLEXPORT
-- On KW_METADATA reduce production dll_storage -> KW_DLLEXPORT
-- On KW_LINKONCE_ODR reduce production dll_storage -> KW_DLLEXPORT
-- On KW_LINKONCE reduce production dll_storage -> KW_DLLEXPORT
-- On KW_LABEL reduce production dll_storage -> KW_DLLEXPORT
-- On KW_INTERNAL reduce production dll_storage -> KW_DLLEXPORT
-- On KW_INREG reduce production dll_storage -> KW_DLLEXPORT
-- On KW_INALLOCA reduce production dll_storage -> KW_DLLEXPORT
-- On KW_HIDDEN reduce production dll_storage -> KW_DLLEXPORT
-- On KW_HALF reduce production dll_storage -> KW_DLLEXPORT
-- On KW_GLOBAL reduce production dll_storage -> KW_DLLEXPORT
-- On KW_FP128 reduce production dll_storage -> KW_DLLEXPORT
-- On KW_FLOAT reduce production dll_storage -> KW_DLLEXPORT
-- On KW_FASTCC reduce production dll_storage -> KW_DLLEXPORT
-- On KW_EXTERN_WEAK reduce production dll_storage -> KW_DLLEXPORT
-- On KW_EXTERNALLY_INITIALIZED reduce production dll_storage -> KW_DLLEXPORT
-- On KW_EXTERNAL reduce production dll_storage -> KW_DLLEXPORT
-- On KW_DOUBLE reduce production dll_storage -> KW_DLLEXPORT
-- On KW_DLLIMPORT reduce production dll_storage -> KW_DLLEXPORT
-- On KW_DLLEXPORT reduce production dll_storage -> KW_DLLEXPORT
-- On KW_DEREFERENCEABLE reduce production dll_storage -> KW_DLLEXPORT
-- On KW_DEFAULT reduce production dll_storage -> KW_DLLEXPORT
-- On KW_CONSTANT reduce production dll_storage -> KW_DLLEXPORT
-- On KW_COMMON reduce production dll_storage -> KW_DLLEXPORT
-- On KW_COLDCC reduce production dll_storage -> KW_DLLEXPORT
-- On KW_CCC reduce production dll_storage -> KW_DLLEXPORT
-- On KW_CC reduce production dll_storage -> KW_DLLEXPORT
-- On KW_BYVAL reduce production dll_storage -> KW_DLLEXPORT
-- On KW_AVAILABLE_EXTERNALLY reduce production dll_storage -> KW_DLLEXPORT
-- On KW_APPENDING reduce production dll_storage -> KW_DLLEXPORT
-- On KW_ALIGN reduce production dll_storage -> KW_DLLEXPORT
-- On I reduce production dll_storage -> KW_DLLEXPORT
-- On EOL reduce production dll_storage -> KW_DLLEXPORT
-- On COMMA reduce production dll_storage -> KW_DLLEXPORT

State 116:
## Known stack suffix:
## KW_DEFAULT
## LR(1) items:
visibility -> KW_DEFAULT . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production visibility -> KW_DEFAULT
-- On LT reduce production visibility -> KW_DEFAULT
-- On LSQUARE reduce production visibility -> KW_DEFAULT
-- On LCURLY reduce production visibility -> KW_DEFAULT
-- On KW_ZEROEXT reduce production visibility -> KW_DEFAULT
-- On KW_X86_MMX reduce production visibility -> KW_DEFAULT
-- On KW_X86_FP80 reduce production visibility -> KW_DEFAULT
-- On KW_WEAK_ODR reduce production visibility -> KW_DEFAULT
-- On KW_WEAK reduce production visibility -> KW_DEFAULT
-- On KW_VOID reduce production visibility -> KW_DEFAULT
-- On KW_UNNAMED_ADDR reduce production visibility -> KW_DEFAULT
-- On KW_THREAD_LOCAL reduce production visibility -> KW_DEFAULT
-- On KW_SRET reduce production visibility -> KW_DEFAULT
-- On KW_SIGNEXT reduce production visibility -> KW_DEFAULT
-- On KW_RETURNED reduce production visibility -> KW_DEFAULT
-- On KW_PROTECTED reduce production visibility -> KW_DEFAULT
-- On KW_PRIVATE reduce production visibility -> KW_DEFAULT
-- On KW_PPC_FP128 reduce production visibility -> KW_DEFAULT
-- On KW_OPAQUE reduce production visibility -> KW_DEFAULT
-- On KW_NONNULL reduce production visibility -> KW_DEFAULT
-- On KW_NOCAPTURE reduce production visibility -> KW_DEFAULT
-- On KW_NOALIAS reduce production visibility -> KW_DEFAULT
-- On KW_NEST reduce production visibility -> KW_DEFAULT
-- On KW_METADATA reduce production visibility -> KW_DEFAULT
-- On KW_LINKONCE_ODR reduce production visibility -> KW_DEFAULT
-- On KW_LINKONCE reduce production visibility -> KW_DEFAULT
-- On KW_LABEL reduce production visibility -> KW_DEFAULT
-- On KW_INTERNAL reduce production visibility -> KW_DEFAULT
-- On KW_INREG reduce production visibility -> KW_DEFAULT
-- On KW_INALLOCA reduce production visibility -> KW_DEFAULT
-- On KW_HIDDEN reduce production visibility -> KW_DEFAULT
-- On KW_HALF reduce production visibility -> KW_DEFAULT
-- On KW_GLOBAL reduce production visibility -> KW_DEFAULT
-- On KW_FP128 reduce production visibility -> KW_DEFAULT
-- On KW_FLOAT reduce production visibility -> KW_DEFAULT
-- On KW_FASTCC reduce production visibility -> KW_DEFAULT
-- On KW_EXTERN_WEAK reduce production visibility -> KW_DEFAULT
-- On KW_EXTERNALLY_INITIALIZED reduce production visibility -> KW_DEFAULT
-- On KW_EXTERNAL reduce production visibility -> KW_DEFAULT
-- On KW_DOUBLE reduce production visibility -> KW_DEFAULT
-- On KW_DLLIMPORT reduce production visibility -> KW_DEFAULT
-- On KW_DLLEXPORT reduce production visibility -> KW_DEFAULT
-- On KW_DEREFERENCEABLE reduce production visibility -> KW_DEFAULT
-- On KW_DEFAULT reduce production visibility -> KW_DEFAULT
-- On KW_CONSTANT reduce production visibility -> KW_DEFAULT
-- On KW_COMMON reduce production visibility -> KW_DEFAULT
-- On KW_COLDCC reduce production visibility -> KW_DEFAULT
-- On KW_CCC reduce production visibility -> KW_DEFAULT
-- On KW_CC reduce production visibility -> KW_DEFAULT
-- On KW_BYVAL reduce production visibility -> KW_DEFAULT
-- On KW_AVAILABLE_EXTERNALLY reduce production visibility -> KW_DEFAULT
-- On KW_APPENDING reduce production visibility -> KW_DEFAULT
-- On KW_ALIGN reduce production visibility -> KW_DEFAULT
-- On I reduce production visibility -> KW_DEFAULT
-- On EOL reduce production visibility -> KW_DEFAULT
-- On COMMA reduce production visibility -> KW_DEFAULT

State 117:
## Known stack suffix:
## KW_COMMON
## LR(1) items:
linkage -> KW_COMMON . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production linkage -> KW_COMMON
-- On LT reduce production linkage -> KW_COMMON
-- On LSQUARE reduce production linkage -> KW_COMMON
-- On LCURLY reduce production linkage -> KW_COMMON
-- On KW_ZEROEXT reduce production linkage -> KW_COMMON
-- On KW_X86_MMX reduce production linkage -> KW_COMMON
-- On KW_X86_FP80 reduce production linkage -> KW_COMMON
-- On KW_WEAK_ODR reduce production linkage -> KW_COMMON
-- On KW_WEAK reduce production linkage -> KW_COMMON
-- On KW_VOID reduce production linkage -> KW_COMMON
-- On KW_UNNAMED_ADDR reduce production linkage -> KW_COMMON
-- On KW_THREAD_LOCAL reduce production linkage -> KW_COMMON
-- On KW_SRET reduce production linkage -> KW_COMMON
-- On KW_SIGNEXT reduce production linkage -> KW_COMMON
-- On KW_RETURNED reduce production linkage -> KW_COMMON
-- On KW_PROTECTED reduce production linkage -> KW_COMMON
-- On KW_PRIVATE reduce production linkage -> KW_COMMON
-- On KW_PPC_FP128 reduce production linkage -> KW_COMMON
-- On KW_OPAQUE reduce production linkage -> KW_COMMON
-- On KW_NONNULL reduce production linkage -> KW_COMMON
-- On KW_NOCAPTURE reduce production linkage -> KW_COMMON
-- On KW_NOALIAS reduce production linkage -> KW_COMMON
-- On KW_NEST reduce production linkage -> KW_COMMON
-- On KW_METADATA reduce production linkage -> KW_COMMON
-- On KW_LINKONCE_ODR reduce production linkage -> KW_COMMON
-- On KW_LINKONCE reduce production linkage -> KW_COMMON
-- On KW_LABEL reduce production linkage -> KW_COMMON
-- On KW_INTERNAL reduce production linkage -> KW_COMMON
-- On KW_INREG reduce production linkage -> KW_COMMON
-- On KW_INALLOCA reduce production linkage -> KW_COMMON
-- On KW_HIDDEN reduce production linkage -> KW_COMMON
-- On KW_HALF reduce production linkage -> KW_COMMON
-- On KW_GLOBAL reduce production linkage -> KW_COMMON
-- On KW_FP128 reduce production linkage -> KW_COMMON
-- On KW_FLOAT reduce production linkage -> KW_COMMON
-- On KW_FASTCC reduce production linkage -> KW_COMMON
-- On KW_EXTERN_WEAK reduce production linkage -> KW_COMMON
-- On KW_EXTERNALLY_INITIALIZED reduce production linkage -> KW_COMMON
-- On KW_EXTERNAL reduce production linkage -> KW_COMMON
-- On KW_DOUBLE reduce production linkage -> KW_COMMON
-- On KW_DLLIMPORT reduce production linkage -> KW_COMMON
-- On KW_DLLEXPORT reduce production linkage -> KW_COMMON
-- On KW_DEREFERENCEABLE reduce production linkage -> KW_COMMON
-- On KW_DEFAULT reduce production linkage -> KW_COMMON
-- On KW_CONSTANT reduce production linkage -> KW_COMMON
-- On KW_COMMON reduce production linkage -> KW_COMMON
-- On KW_COLDCC reduce production linkage -> KW_COMMON
-- On KW_CCC reduce production linkage -> KW_COMMON
-- On KW_CC reduce production linkage -> KW_COMMON
-- On KW_BYVAL reduce production linkage -> KW_COMMON
-- On KW_AVAILABLE_EXTERNALLY reduce production linkage -> KW_COMMON
-- On KW_APPENDING reduce production linkage -> KW_COMMON
-- On KW_ALIGN reduce production linkage -> KW_COMMON
-- On I reduce production linkage -> KW_COMMON
-- On EOL reduce production linkage -> KW_COMMON
-- On COMMA reduce production linkage -> KW_COMMON

State 118:
## Known stack suffix:
## KW_COLDCC
## LR(1) items:
cconv -> KW_COLDCC . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production cconv -> KW_COLDCC
-- On LT reduce production cconv -> KW_COLDCC
-- On LSQUARE reduce production cconv -> KW_COLDCC
-- On LCURLY reduce production cconv -> KW_COLDCC
-- On KW_ZEROEXT reduce production cconv -> KW_COLDCC
-- On KW_X86_MMX reduce production cconv -> KW_COLDCC
-- On KW_X86_FP80 reduce production cconv -> KW_COLDCC
-- On KW_WEAK_ODR reduce production cconv -> KW_COLDCC
-- On KW_WEAK reduce production cconv -> KW_COLDCC
-- On KW_VOID reduce production cconv -> KW_COLDCC
-- On KW_SRET reduce production cconv -> KW_COLDCC
-- On KW_SIGNEXT reduce production cconv -> KW_COLDCC
-- On KW_RETURNED reduce production cconv -> KW_COLDCC
-- On KW_PROTECTED reduce production cconv -> KW_COLDCC
-- On KW_PRIVATE reduce production cconv -> KW_COLDCC
-- On KW_PPC_FP128 reduce production cconv -> KW_COLDCC
-- On KW_OPAQUE reduce production cconv -> KW_COLDCC
-- On KW_NONNULL reduce production cconv -> KW_COLDCC
-- On KW_NOCAPTURE reduce production cconv -> KW_COLDCC
-- On KW_NOALIAS reduce production cconv -> KW_COLDCC
-- On KW_NEST reduce production cconv -> KW_COLDCC
-- On KW_METADATA reduce production cconv -> KW_COLDCC
-- On KW_LINKONCE_ODR reduce production cconv -> KW_COLDCC
-- On KW_LINKONCE reduce production cconv -> KW_COLDCC
-- On KW_LABEL reduce production cconv -> KW_COLDCC
-- On KW_INTERNAL reduce production cconv -> KW_COLDCC
-- On KW_INREG reduce production cconv -> KW_COLDCC
-- On KW_INALLOCA reduce production cconv -> KW_COLDCC
-- On KW_HIDDEN reduce production cconv -> KW_COLDCC
-- On KW_HALF reduce production cconv -> KW_COLDCC
-- On KW_FP128 reduce production cconv -> KW_COLDCC
-- On KW_FLOAT reduce production cconv -> KW_COLDCC
-- On KW_FASTCC reduce production cconv -> KW_COLDCC
-- On KW_EXTERN_WEAK reduce production cconv -> KW_COLDCC
-- On KW_EXTERNAL reduce production cconv -> KW_COLDCC
-- On KW_DOUBLE reduce production cconv -> KW_COLDCC
-- On KW_DLLIMPORT reduce production cconv -> KW_COLDCC
-- On KW_DLLEXPORT reduce production cconv -> KW_COLDCC
-- On KW_DEREFERENCEABLE reduce production cconv -> KW_COLDCC
-- On KW_DEFAULT reduce production cconv -> KW_COLDCC
-- On KW_COMMON reduce production cconv -> KW_COLDCC
-- On KW_COLDCC reduce production cconv -> KW_COLDCC
-- On KW_CCC reduce production cconv -> KW_COLDCC
-- On KW_CC reduce production cconv -> KW_COLDCC
-- On KW_BYVAL reduce production cconv -> KW_COLDCC
-- On KW_AVAILABLE_EXTERNALLY reduce production cconv -> KW_COLDCC
-- On KW_APPENDING reduce production cconv -> KW_COLDCC
-- On KW_ALIGN reduce production cconv -> KW_COLDCC
-- On I reduce production cconv -> KW_COLDCC

State 119:
## Known stack suffix:
## KW_CCC
## LR(1) items:
cconv -> KW_CCC . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production cconv -> KW_CCC
-- On LT reduce production cconv -> KW_CCC
-- On LSQUARE reduce production cconv -> KW_CCC
-- On LCURLY reduce production cconv -> KW_CCC
-- On KW_ZEROEXT reduce production cconv -> KW_CCC
-- On KW_X86_MMX reduce production cconv -> KW_CCC
-- On KW_X86_FP80 reduce production cconv -> KW_CCC
-- On KW_WEAK_ODR reduce production cconv -> KW_CCC
-- On KW_WEAK reduce production cconv -> KW_CCC
-- On KW_VOID reduce production cconv -> KW_CCC
-- On KW_SRET reduce production cconv -> KW_CCC
-- On KW_SIGNEXT reduce production cconv -> KW_CCC
-- On KW_RETURNED reduce production cconv -> KW_CCC
-- On KW_PROTECTED reduce production cconv -> KW_CCC
-- On KW_PRIVATE reduce production cconv -> KW_CCC
-- On KW_PPC_FP128 reduce production cconv -> KW_CCC
-- On KW_OPAQUE reduce production cconv -> KW_CCC
-- On KW_NONNULL reduce production cconv -> KW_CCC
-- On KW_NOCAPTURE reduce production cconv -> KW_CCC
-- On KW_NOALIAS reduce production cconv -> KW_CCC
-- On KW_NEST reduce production cconv -> KW_CCC
-- On KW_METADATA reduce production cconv -> KW_CCC
-- On KW_LINKONCE_ODR reduce production cconv -> KW_CCC
-- On KW_LINKONCE reduce production cconv -> KW_CCC
-- On KW_LABEL reduce production cconv -> KW_CCC
-- On KW_INTERNAL reduce production cconv -> KW_CCC
-- On KW_INREG reduce production cconv -> KW_CCC
-- On KW_INALLOCA reduce production cconv -> KW_CCC
-- On KW_HIDDEN reduce production cconv -> KW_CCC
-- On KW_HALF reduce production cconv -> KW_CCC
-- On KW_FP128 reduce production cconv -> KW_CCC
-- On KW_FLOAT reduce production cconv -> KW_CCC
-- On KW_FASTCC reduce production cconv -> KW_CCC
-- On KW_EXTERN_WEAK reduce production cconv -> KW_CCC
-- On KW_EXTERNAL reduce production cconv -> KW_CCC
-- On KW_DOUBLE reduce production cconv -> KW_CCC
-- On KW_DLLIMPORT reduce production cconv -> KW_CCC
-- On KW_DLLEXPORT reduce production cconv -> KW_CCC
-- On KW_DEREFERENCEABLE reduce production cconv -> KW_CCC
-- On KW_DEFAULT reduce production cconv -> KW_CCC
-- On KW_COMMON reduce production cconv -> KW_CCC
-- On KW_COLDCC reduce production cconv -> KW_CCC
-- On KW_CCC reduce production cconv -> KW_CCC
-- On KW_CC reduce production cconv -> KW_CCC
-- On KW_BYVAL reduce production cconv -> KW_CCC
-- On KW_AVAILABLE_EXTERNALLY reduce production cconv -> KW_CCC
-- On KW_APPENDING reduce production cconv -> KW_CCC
-- On KW_ALIGN reduce production cconv -> KW_CCC
-- On I reduce production cconv -> KW_CCC

State 120:
## Known stack suffix:
## KW_CC
## LR(1) items:
cconv -> KW_CC . INTEGER [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I ]
## Transitions:
-- On INTEGER shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## KW_CC INTEGER
## LR(1) items:
cconv -> KW_CC INTEGER . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production cconv -> KW_CC INTEGER
-- On LT reduce production cconv -> KW_CC INTEGER
-- On LSQUARE reduce production cconv -> KW_CC INTEGER
-- On LCURLY reduce production cconv -> KW_CC INTEGER
-- On KW_ZEROEXT reduce production cconv -> KW_CC INTEGER
-- On KW_X86_MMX reduce production cconv -> KW_CC INTEGER
-- On KW_X86_FP80 reduce production cconv -> KW_CC INTEGER
-- On KW_WEAK_ODR reduce production cconv -> KW_CC INTEGER
-- On KW_WEAK reduce production cconv -> KW_CC INTEGER
-- On KW_VOID reduce production cconv -> KW_CC INTEGER
-- On KW_SRET reduce production cconv -> KW_CC INTEGER
-- On KW_SIGNEXT reduce production cconv -> KW_CC INTEGER
-- On KW_RETURNED reduce production cconv -> KW_CC INTEGER
-- On KW_PROTECTED reduce production cconv -> KW_CC INTEGER
-- On KW_PRIVATE reduce production cconv -> KW_CC INTEGER
-- On KW_PPC_FP128 reduce production cconv -> KW_CC INTEGER
-- On KW_OPAQUE reduce production cconv -> KW_CC INTEGER
-- On KW_NONNULL reduce production cconv -> KW_CC INTEGER
-- On KW_NOCAPTURE reduce production cconv -> KW_CC INTEGER
-- On KW_NOALIAS reduce production cconv -> KW_CC INTEGER
-- On KW_NEST reduce production cconv -> KW_CC INTEGER
-- On KW_METADATA reduce production cconv -> KW_CC INTEGER
-- On KW_LINKONCE_ODR reduce production cconv -> KW_CC INTEGER
-- On KW_LINKONCE reduce production cconv -> KW_CC INTEGER
-- On KW_LABEL reduce production cconv -> KW_CC INTEGER
-- On KW_INTERNAL reduce production cconv -> KW_CC INTEGER
-- On KW_INREG reduce production cconv -> KW_CC INTEGER
-- On KW_INALLOCA reduce production cconv -> KW_CC INTEGER
-- On KW_HIDDEN reduce production cconv -> KW_CC INTEGER
-- On KW_HALF reduce production cconv -> KW_CC INTEGER
-- On KW_FP128 reduce production cconv -> KW_CC INTEGER
-- On KW_FLOAT reduce production cconv -> KW_CC INTEGER
-- On KW_FASTCC reduce production cconv -> KW_CC INTEGER
-- On KW_EXTERN_WEAK reduce production cconv -> KW_CC INTEGER
-- On KW_EXTERNAL reduce production cconv -> KW_CC INTEGER
-- On KW_DOUBLE reduce production cconv -> KW_CC INTEGER
-- On KW_DLLIMPORT reduce production cconv -> KW_CC INTEGER
-- On KW_DLLEXPORT reduce production cconv -> KW_CC INTEGER
-- On KW_DEREFERENCEABLE reduce production cconv -> KW_CC INTEGER
-- On KW_DEFAULT reduce production cconv -> KW_CC INTEGER
-- On KW_COMMON reduce production cconv -> KW_CC INTEGER
-- On KW_COLDCC reduce production cconv -> KW_CC INTEGER
-- On KW_CCC reduce production cconv -> KW_CC INTEGER
-- On KW_CC reduce production cconv -> KW_CC INTEGER
-- On KW_BYVAL reduce production cconv -> KW_CC INTEGER
-- On KW_AVAILABLE_EXTERNALLY reduce production cconv -> KW_CC INTEGER
-- On KW_APPENDING reduce production cconv -> KW_CC INTEGER
-- On KW_ALIGN reduce production cconv -> KW_CC INTEGER
-- On I reduce production cconv -> KW_CC INTEGER

State 122:
## Known stack suffix:
## KW_AVAILABLE_EXTERNALLY
## LR(1) items:
linkage -> KW_AVAILABLE_EXTERNALLY . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On LT reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On LSQUARE reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On LCURLY reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_ZEROEXT reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_X86_MMX reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_X86_FP80 reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_WEAK_ODR reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_WEAK reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_VOID reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_UNNAMED_ADDR reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_THREAD_LOCAL reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_SRET reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_SIGNEXT reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_RETURNED reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_PROTECTED reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_PRIVATE reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_PPC_FP128 reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_OPAQUE reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_NONNULL reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_NOCAPTURE reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_NOALIAS reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_NEST reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_METADATA reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_LINKONCE_ODR reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_LINKONCE reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_LABEL reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_INTERNAL reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_INREG reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_INALLOCA reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_HIDDEN reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_HALF reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_GLOBAL reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_FP128 reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_FLOAT reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_FASTCC reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_EXTERN_WEAK reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_EXTERNALLY_INITIALIZED reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_EXTERNAL reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_DOUBLE reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_DLLIMPORT reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_DLLEXPORT reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_DEREFERENCEABLE reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_DEFAULT reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_CONSTANT reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_COMMON reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_COLDCC reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_CCC reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_CC reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_BYVAL reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_AVAILABLE_EXTERNALLY reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_APPENDING reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On KW_ALIGN reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On I reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On EOL reduce production linkage -> KW_AVAILABLE_EXTERNALLY
-- On COMMA reduce production linkage -> KW_AVAILABLE_EXTERNALLY

State 123:
## Known stack suffix:
## KW_APPENDING
## LR(1) items:
linkage -> KW_APPENDING . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_GLOBAL KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_CONSTANT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I EOL COMMA ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production linkage -> KW_APPENDING
-- On LT reduce production linkage -> KW_APPENDING
-- On LSQUARE reduce production linkage -> KW_APPENDING
-- On LCURLY reduce production linkage -> KW_APPENDING
-- On KW_ZEROEXT reduce production linkage -> KW_APPENDING
-- On KW_X86_MMX reduce production linkage -> KW_APPENDING
-- On KW_X86_FP80 reduce production linkage -> KW_APPENDING
-- On KW_WEAK_ODR reduce production linkage -> KW_APPENDING
-- On KW_WEAK reduce production linkage -> KW_APPENDING
-- On KW_VOID reduce production linkage -> KW_APPENDING
-- On KW_UNNAMED_ADDR reduce production linkage -> KW_APPENDING
-- On KW_THREAD_LOCAL reduce production linkage -> KW_APPENDING
-- On KW_SRET reduce production linkage -> KW_APPENDING
-- On KW_SIGNEXT reduce production linkage -> KW_APPENDING
-- On KW_RETURNED reduce production linkage -> KW_APPENDING
-- On KW_PROTECTED reduce production linkage -> KW_APPENDING
-- On KW_PRIVATE reduce production linkage -> KW_APPENDING
-- On KW_PPC_FP128 reduce production linkage -> KW_APPENDING
-- On KW_OPAQUE reduce production linkage -> KW_APPENDING
-- On KW_NONNULL reduce production linkage -> KW_APPENDING
-- On KW_NOCAPTURE reduce production linkage -> KW_APPENDING
-- On KW_NOALIAS reduce production linkage -> KW_APPENDING
-- On KW_NEST reduce production linkage -> KW_APPENDING
-- On KW_METADATA reduce production linkage -> KW_APPENDING
-- On KW_LINKONCE_ODR reduce production linkage -> KW_APPENDING
-- On KW_LINKONCE reduce production linkage -> KW_APPENDING
-- On KW_LABEL reduce production linkage -> KW_APPENDING
-- On KW_INTERNAL reduce production linkage -> KW_APPENDING
-- On KW_INREG reduce production linkage -> KW_APPENDING
-- On KW_INALLOCA reduce production linkage -> KW_APPENDING
-- On KW_HIDDEN reduce production linkage -> KW_APPENDING
-- On KW_HALF reduce production linkage -> KW_APPENDING
-- On KW_GLOBAL reduce production linkage -> KW_APPENDING
-- On KW_FP128 reduce production linkage -> KW_APPENDING
-- On KW_FLOAT reduce production linkage -> KW_APPENDING
-- On KW_FASTCC reduce production linkage -> KW_APPENDING
-- On KW_EXTERN_WEAK reduce production linkage -> KW_APPENDING
-- On KW_EXTERNALLY_INITIALIZED reduce production linkage -> KW_APPENDING
-- On KW_EXTERNAL reduce production linkage -> KW_APPENDING
-- On KW_DOUBLE reduce production linkage -> KW_APPENDING
-- On KW_DLLIMPORT reduce production linkage -> KW_APPENDING
-- On KW_DLLEXPORT reduce production linkage -> KW_APPENDING
-- On KW_DEREFERENCEABLE reduce production linkage -> KW_APPENDING
-- On KW_DEFAULT reduce production linkage -> KW_APPENDING
-- On KW_CONSTANT reduce production linkage -> KW_APPENDING
-- On KW_COMMON reduce production linkage -> KW_APPENDING
-- On KW_COLDCC reduce production linkage -> KW_APPENDING
-- On KW_CCC reduce production linkage -> KW_APPENDING
-- On KW_CC reduce production linkage -> KW_APPENDING
-- On KW_BYVAL reduce production linkage -> KW_APPENDING
-- On KW_AVAILABLE_EXTERNALLY reduce production linkage -> KW_APPENDING
-- On KW_APPENDING reduce production linkage -> KW_APPENDING
-- On KW_ALIGN reduce production linkage -> KW_APPENDING
-- On I reduce production linkage -> KW_APPENDING
-- On EOL reduce production linkage -> KW_APPENDING
-- On COMMA reduce production linkage -> KW_APPENDING

State 124:
## Known stack suffix:
## visibility
## LR(1) items:
df_pre_attr -> visibility . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production df_pre_attr -> visibility
-- On LT reduce production df_pre_attr -> visibility
-- On LSQUARE reduce production df_pre_attr -> visibility
-- On LCURLY reduce production df_pre_attr -> visibility
-- On KW_ZEROEXT reduce production df_pre_attr -> visibility
-- On KW_X86_MMX reduce production df_pre_attr -> visibility
-- On KW_X86_FP80 reduce production df_pre_attr -> visibility
-- On KW_WEAK_ODR reduce production df_pre_attr -> visibility
-- On KW_WEAK reduce production df_pre_attr -> visibility
-- On KW_VOID reduce production df_pre_attr -> visibility
-- On KW_SRET reduce production df_pre_attr -> visibility
-- On KW_SIGNEXT reduce production df_pre_attr -> visibility
-- On KW_RETURNED reduce production df_pre_attr -> visibility
-- On KW_PROTECTED reduce production df_pre_attr -> visibility
-- On KW_PRIVATE reduce production df_pre_attr -> visibility
-- On KW_PPC_FP128 reduce production df_pre_attr -> visibility
-- On KW_OPAQUE reduce production df_pre_attr -> visibility
-- On KW_NONNULL reduce production df_pre_attr -> visibility
-- On KW_NOCAPTURE reduce production df_pre_attr -> visibility
-- On KW_NOALIAS reduce production df_pre_attr -> visibility
-- On KW_NEST reduce production df_pre_attr -> visibility
-- On KW_METADATA reduce production df_pre_attr -> visibility
-- On KW_LINKONCE_ODR reduce production df_pre_attr -> visibility
-- On KW_LINKONCE reduce production df_pre_attr -> visibility
-- On KW_LABEL reduce production df_pre_attr -> visibility
-- On KW_INTERNAL reduce production df_pre_attr -> visibility
-- On KW_INREG reduce production df_pre_attr -> visibility
-- On KW_INALLOCA reduce production df_pre_attr -> visibility
-- On KW_HIDDEN reduce production df_pre_attr -> visibility
-- On KW_HALF reduce production df_pre_attr -> visibility
-- On KW_FP128 reduce production df_pre_attr -> visibility
-- On KW_FLOAT reduce production df_pre_attr -> visibility
-- On KW_FASTCC reduce production df_pre_attr -> visibility
-- On KW_EXTERN_WEAK reduce production df_pre_attr -> visibility
-- On KW_EXTERNAL reduce production df_pre_attr -> visibility
-- On KW_DOUBLE reduce production df_pre_attr -> visibility
-- On KW_DLLIMPORT reduce production df_pre_attr -> visibility
-- On KW_DLLEXPORT reduce production df_pre_attr -> visibility
-- On KW_DEREFERENCEABLE reduce production df_pre_attr -> visibility
-- On KW_DEFAULT reduce production df_pre_attr -> visibility
-- On KW_COMMON reduce production df_pre_attr -> visibility
-- On KW_COLDCC reduce production df_pre_attr -> visibility
-- On KW_CCC reduce production df_pre_attr -> visibility
-- On KW_CC reduce production df_pre_attr -> visibility
-- On KW_BYVAL reduce production df_pre_attr -> visibility
-- On KW_AVAILABLE_EXTERNALLY reduce production df_pre_attr -> visibility
-- On KW_APPENDING reduce production df_pre_attr -> visibility
-- On KW_ALIGN reduce production df_pre_attr -> visibility
-- On I reduce production df_pre_attr -> visibility

State 125:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr)
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) . list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks RCURLY [ EOL ]
## Transitions:
-- On KW_ZEROEXT shift to state 126
-- On KW_SRET shift to state 127
-- On KW_SIGNEXT shift to state 128
-- On KW_RETURNED shift to state 129
-- On KW_NONNULL shift to state 130
-- On KW_NOCAPTURE shift to state 131
-- On KW_NOALIAS shift to state 132
-- On KW_NEST shift to state 133
-- On KW_INREG shift to state 134
-- On KW_INALLOCA shift to state 135
-- On KW_DEREFERENCEABLE shift to state 136
-- On KW_BYVAL shift to state 140
-- On KW_ALIGN shift to state 141
-- On param_attr shift to state 143
-- On list(param_attr) shift to state 145
## Reductions:
-- On LTLCURLY reduce production list(param_attr) ->
-- On LT reduce production list(param_attr) ->
-- On LSQUARE reduce production list(param_attr) ->
-- On LCURLY reduce production list(param_attr) ->
-- On KW_X86_MMX reduce production list(param_attr) ->
-- On KW_X86_FP80 reduce production list(param_attr) ->
-- On KW_VOID reduce production list(param_attr) ->
-- On KW_PPC_FP128 reduce production list(param_attr) ->
-- On KW_OPAQUE reduce production list(param_attr) ->
-- On KW_METADATA reduce production list(param_attr) ->
-- On KW_LABEL reduce production list(param_attr) ->
-- On KW_HALF reduce production list(param_attr) ->
-- On KW_FP128 reduce production list(param_attr) ->
-- On KW_FLOAT reduce production list(param_attr) ->
-- On KW_DOUBLE reduce production list(param_attr) ->
-- On I reduce production list(param_attr) ->

State 126:
## Known stack suffix:
## KW_ZEROEXT
## LR(1) items:
param_attr -> KW_ZEROEXT . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_ZEROEXT
-- On LTLCURLY reduce production param_attr -> KW_ZEROEXT
-- On LT reduce production param_attr -> KW_ZEROEXT
-- On LSQUARE reduce production param_attr -> KW_ZEROEXT
-- On LOCAL reduce production param_attr -> KW_ZEROEXT
-- On LCURLY reduce production param_attr -> KW_ZEROEXT
-- On KW_ZEROEXT reduce production param_attr -> KW_ZEROEXT
-- On KW_X86_MMX reduce production param_attr -> KW_ZEROEXT
-- On KW_X86_FP80 reduce production param_attr -> KW_ZEROEXT
-- On KW_VOID reduce production param_attr -> KW_ZEROEXT
-- On KW_SRET reduce production param_attr -> KW_ZEROEXT
-- On KW_SIGNEXT reduce production param_attr -> KW_ZEROEXT
-- On KW_RETURNED reduce production param_attr -> KW_ZEROEXT
-- On KW_PPC_FP128 reduce production param_attr -> KW_ZEROEXT
-- On KW_OPAQUE reduce production param_attr -> KW_ZEROEXT
-- On KW_NONNULL reduce production param_attr -> KW_ZEROEXT
-- On KW_NOCAPTURE reduce production param_attr -> KW_ZEROEXT
-- On KW_NOALIAS reduce production param_attr -> KW_ZEROEXT
-- On KW_NEST reduce production param_attr -> KW_ZEROEXT
-- On KW_METADATA reduce production param_attr -> KW_ZEROEXT
-- On KW_LABEL reduce production param_attr -> KW_ZEROEXT
-- On KW_INREG reduce production param_attr -> KW_ZEROEXT
-- On KW_INALLOCA reduce production param_attr -> KW_ZEROEXT
-- On KW_HALF reduce production param_attr -> KW_ZEROEXT
-- On KW_FP128 reduce production param_attr -> KW_ZEROEXT
-- On KW_FLOAT reduce production param_attr -> KW_ZEROEXT
-- On KW_DOUBLE reduce production param_attr -> KW_ZEROEXT
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_ZEROEXT
-- On KW_BYVAL reduce production param_attr -> KW_ZEROEXT
-- On KW_ALIGN reduce production param_attr -> KW_ZEROEXT
-- On I reduce production param_attr -> KW_ZEROEXT
-- On GLOBAL reduce production param_attr -> KW_ZEROEXT
-- On COMMA reduce production param_attr -> KW_ZEROEXT

State 127:
## Known stack suffix:
## KW_SRET
## LR(1) items:
param_attr -> KW_SRET . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_SRET
-- On LTLCURLY reduce production param_attr -> KW_SRET
-- On LT reduce production param_attr -> KW_SRET
-- On LSQUARE reduce production param_attr -> KW_SRET
-- On LOCAL reduce production param_attr -> KW_SRET
-- On LCURLY reduce production param_attr -> KW_SRET
-- On KW_ZEROEXT reduce production param_attr -> KW_SRET
-- On KW_X86_MMX reduce production param_attr -> KW_SRET
-- On KW_X86_FP80 reduce production param_attr -> KW_SRET
-- On KW_VOID reduce production param_attr -> KW_SRET
-- On KW_SRET reduce production param_attr -> KW_SRET
-- On KW_SIGNEXT reduce production param_attr -> KW_SRET
-- On KW_RETURNED reduce production param_attr -> KW_SRET
-- On KW_PPC_FP128 reduce production param_attr -> KW_SRET
-- On KW_OPAQUE reduce production param_attr -> KW_SRET
-- On KW_NONNULL reduce production param_attr -> KW_SRET
-- On KW_NOCAPTURE reduce production param_attr -> KW_SRET
-- On KW_NOALIAS reduce production param_attr -> KW_SRET
-- On KW_NEST reduce production param_attr -> KW_SRET
-- On KW_METADATA reduce production param_attr -> KW_SRET
-- On KW_LABEL reduce production param_attr -> KW_SRET
-- On KW_INREG reduce production param_attr -> KW_SRET
-- On KW_INALLOCA reduce production param_attr -> KW_SRET
-- On KW_HALF reduce production param_attr -> KW_SRET
-- On KW_FP128 reduce production param_attr -> KW_SRET
-- On KW_FLOAT reduce production param_attr -> KW_SRET
-- On KW_DOUBLE reduce production param_attr -> KW_SRET
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_SRET
-- On KW_BYVAL reduce production param_attr -> KW_SRET
-- On KW_ALIGN reduce production param_attr -> KW_SRET
-- On I reduce production param_attr -> KW_SRET
-- On GLOBAL reduce production param_attr -> KW_SRET
-- On COMMA reduce production param_attr -> KW_SRET

State 128:
## Known stack suffix:
## KW_SIGNEXT
## LR(1) items:
param_attr -> KW_SIGNEXT . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_SIGNEXT
-- On LTLCURLY reduce production param_attr -> KW_SIGNEXT
-- On LT reduce production param_attr -> KW_SIGNEXT
-- On LSQUARE reduce production param_attr -> KW_SIGNEXT
-- On LOCAL reduce production param_attr -> KW_SIGNEXT
-- On LCURLY reduce production param_attr -> KW_SIGNEXT
-- On KW_ZEROEXT reduce production param_attr -> KW_SIGNEXT
-- On KW_X86_MMX reduce production param_attr -> KW_SIGNEXT
-- On KW_X86_FP80 reduce production param_attr -> KW_SIGNEXT
-- On KW_VOID reduce production param_attr -> KW_SIGNEXT
-- On KW_SRET reduce production param_attr -> KW_SIGNEXT
-- On KW_SIGNEXT reduce production param_attr -> KW_SIGNEXT
-- On KW_RETURNED reduce production param_attr -> KW_SIGNEXT
-- On KW_PPC_FP128 reduce production param_attr -> KW_SIGNEXT
-- On KW_OPAQUE reduce production param_attr -> KW_SIGNEXT
-- On KW_NONNULL reduce production param_attr -> KW_SIGNEXT
-- On KW_NOCAPTURE reduce production param_attr -> KW_SIGNEXT
-- On KW_NOALIAS reduce production param_attr -> KW_SIGNEXT
-- On KW_NEST reduce production param_attr -> KW_SIGNEXT
-- On KW_METADATA reduce production param_attr -> KW_SIGNEXT
-- On KW_LABEL reduce production param_attr -> KW_SIGNEXT
-- On KW_INREG reduce production param_attr -> KW_SIGNEXT
-- On KW_INALLOCA reduce production param_attr -> KW_SIGNEXT
-- On KW_HALF reduce production param_attr -> KW_SIGNEXT
-- On KW_FP128 reduce production param_attr -> KW_SIGNEXT
-- On KW_FLOAT reduce production param_attr -> KW_SIGNEXT
-- On KW_DOUBLE reduce production param_attr -> KW_SIGNEXT
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_SIGNEXT
-- On KW_BYVAL reduce production param_attr -> KW_SIGNEXT
-- On KW_ALIGN reduce production param_attr -> KW_SIGNEXT
-- On I reduce production param_attr -> KW_SIGNEXT
-- On GLOBAL reduce production param_attr -> KW_SIGNEXT
-- On COMMA reduce production param_attr -> KW_SIGNEXT

State 129:
## Known stack suffix:
## KW_RETURNED
## LR(1) items:
param_attr -> KW_RETURNED . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_RETURNED
-- On LTLCURLY reduce production param_attr -> KW_RETURNED
-- On LT reduce production param_attr -> KW_RETURNED
-- On LSQUARE reduce production param_attr -> KW_RETURNED
-- On LOCAL reduce production param_attr -> KW_RETURNED
-- On LCURLY reduce production param_attr -> KW_RETURNED
-- On KW_ZEROEXT reduce production param_attr -> KW_RETURNED
-- On KW_X86_MMX reduce production param_attr -> KW_RETURNED
-- On KW_X86_FP80 reduce production param_attr -> KW_RETURNED
-- On KW_VOID reduce production param_attr -> KW_RETURNED
-- On KW_SRET reduce production param_attr -> KW_RETURNED
-- On KW_SIGNEXT reduce production param_attr -> KW_RETURNED
-- On KW_RETURNED reduce production param_attr -> KW_RETURNED
-- On KW_PPC_FP128 reduce production param_attr -> KW_RETURNED
-- On KW_OPAQUE reduce production param_attr -> KW_RETURNED
-- On KW_NONNULL reduce production param_attr -> KW_RETURNED
-- On KW_NOCAPTURE reduce production param_attr -> KW_RETURNED
-- On KW_NOALIAS reduce production param_attr -> KW_RETURNED
-- On KW_NEST reduce production param_attr -> KW_RETURNED
-- On KW_METADATA reduce production param_attr -> KW_RETURNED
-- On KW_LABEL reduce production param_attr -> KW_RETURNED
-- On KW_INREG reduce production param_attr -> KW_RETURNED
-- On KW_INALLOCA reduce production param_attr -> KW_RETURNED
-- On KW_HALF reduce production param_attr -> KW_RETURNED
-- On KW_FP128 reduce production param_attr -> KW_RETURNED
-- On KW_FLOAT reduce production param_attr -> KW_RETURNED
-- On KW_DOUBLE reduce production param_attr -> KW_RETURNED
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_RETURNED
-- On KW_BYVAL reduce production param_attr -> KW_RETURNED
-- On KW_ALIGN reduce production param_attr -> KW_RETURNED
-- On I reduce production param_attr -> KW_RETURNED
-- On GLOBAL reduce production param_attr -> KW_RETURNED
-- On COMMA reduce production param_attr -> KW_RETURNED

State 130:
## Known stack suffix:
## KW_NONNULL
## LR(1) items:
param_attr -> KW_NONNULL . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_NONNULL
-- On LTLCURLY reduce production param_attr -> KW_NONNULL
-- On LT reduce production param_attr -> KW_NONNULL
-- On LSQUARE reduce production param_attr -> KW_NONNULL
-- On LOCAL reduce production param_attr -> KW_NONNULL
-- On LCURLY reduce production param_attr -> KW_NONNULL
-- On KW_ZEROEXT reduce production param_attr -> KW_NONNULL
-- On KW_X86_MMX reduce production param_attr -> KW_NONNULL
-- On KW_X86_FP80 reduce production param_attr -> KW_NONNULL
-- On KW_VOID reduce production param_attr -> KW_NONNULL
-- On KW_SRET reduce production param_attr -> KW_NONNULL
-- On KW_SIGNEXT reduce production param_attr -> KW_NONNULL
-- On KW_RETURNED reduce production param_attr -> KW_NONNULL
-- On KW_PPC_FP128 reduce production param_attr -> KW_NONNULL
-- On KW_OPAQUE reduce production param_attr -> KW_NONNULL
-- On KW_NONNULL reduce production param_attr -> KW_NONNULL
-- On KW_NOCAPTURE reduce production param_attr -> KW_NONNULL
-- On KW_NOALIAS reduce production param_attr -> KW_NONNULL
-- On KW_NEST reduce production param_attr -> KW_NONNULL
-- On KW_METADATA reduce production param_attr -> KW_NONNULL
-- On KW_LABEL reduce production param_attr -> KW_NONNULL
-- On KW_INREG reduce production param_attr -> KW_NONNULL
-- On KW_INALLOCA reduce production param_attr -> KW_NONNULL
-- On KW_HALF reduce production param_attr -> KW_NONNULL
-- On KW_FP128 reduce production param_attr -> KW_NONNULL
-- On KW_FLOAT reduce production param_attr -> KW_NONNULL
-- On KW_DOUBLE reduce production param_attr -> KW_NONNULL
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_NONNULL
-- On KW_BYVAL reduce production param_attr -> KW_NONNULL
-- On KW_ALIGN reduce production param_attr -> KW_NONNULL
-- On I reduce production param_attr -> KW_NONNULL
-- On GLOBAL reduce production param_attr -> KW_NONNULL
-- On COMMA reduce production param_attr -> KW_NONNULL

State 131:
## Known stack suffix:
## KW_NOCAPTURE
## LR(1) items:
param_attr -> KW_NOCAPTURE . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_NOCAPTURE
-- On LTLCURLY reduce production param_attr -> KW_NOCAPTURE
-- On LT reduce production param_attr -> KW_NOCAPTURE
-- On LSQUARE reduce production param_attr -> KW_NOCAPTURE
-- On LOCAL reduce production param_attr -> KW_NOCAPTURE
-- On LCURLY reduce production param_attr -> KW_NOCAPTURE
-- On KW_ZEROEXT reduce production param_attr -> KW_NOCAPTURE
-- On KW_X86_MMX reduce production param_attr -> KW_NOCAPTURE
-- On KW_X86_FP80 reduce production param_attr -> KW_NOCAPTURE
-- On KW_VOID reduce production param_attr -> KW_NOCAPTURE
-- On KW_SRET reduce production param_attr -> KW_NOCAPTURE
-- On KW_SIGNEXT reduce production param_attr -> KW_NOCAPTURE
-- On KW_RETURNED reduce production param_attr -> KW_NOCAPTURE
-- On KW_PPC_FP128 reduce production param_attr -> KW_NOCAPTURE
-- On KW_OPAQUE reduce production param_attr -> KW_NOCAPTURE
-- On KW_NONNULL reduce production param_attr -> KW_NOCAPTURE
-- On KW_NOCAPTURE reduce production param_attr -> KW_NOCAPTURE
-- On KW_NOALIAS reduce production param_attr -> KW_NOCAPTURE
-- On KW_NEST reduce production param_attr -> KW_NOCAPTURE
-- On KW_METADATA reduce production param_attr -> KW_NOCAPTURE
-- On KW_LABEL reduce production param_attr -> KW_NOCAPTURE
-- On KW_INREG reduce production param_attr -> KW_NOCAPTURE
-- On KW_INALLOCA reduce production param_attr -> KW_NOCAPTURE
-- On KW_HALF reduce production param_attr -> KW_NOCAPTURE
-- On KW_FP128 reduce production param_attr -> KW_NOCAPTURE
-- On KW_FLOAT reduce production param_attr -> KW_NOCAPTURE
-- On KW_DOUBLE reduce production param_attr -> KW_NOCAPTURE
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_NOCAPTURE
-- On KW_BYVAL reduce production param_attr -> KW_NOCAPTURE
-- On KW_ALIGN reduce production param_attr -> KW_NOCAPTURE
-- On I reduce production param_attr -> KW_NOCAPTURE
-- On GLOBAL reduce production param_attr -> KW_NOCAPTURE
-- On COMMA reduce production param_attr -> KW_NOCAPTURE

State 132:
## Known stack suffix:
## KW_NOALIAS
## LR(1) items:
param_attr -> KW_NOALIAS . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_NOALIAS
-- On LTLCURLY reduce production param_attr -> KW_NOALIAS
-- On LT reduce production param_attr -> KW_NOALIAS
-- On LSQUARE reduce production param_attr -> KW_NOALIAS
-- On LOCAL reduce production param_attr -> KW_NOALIAS
-- On LCURLY reduce production param_attr -> KW_NOALIAS
-- On KW_ZEROEXT reduce production param_attr -> KW_NOALIAS
-- On KW_X86_MMX reduce production param_attr -> KW_NOALIAS
-- On KW_X86_FP80 reduce production param_attr -> KW_NOALIAS
-- On KW_VOID reduce production param_attr -> KW_NOALIAS
-- On KW_SRET reduce production param_attr -> KW_NOALIAS
-- On KW_SIGNEXT reduce production param_attr -> KW_NOALIAS
-- On KW_RETURNED reduce production param_attr -> KW_NOALIAS
-- On KW_PPC_FP128 reduce production param_attr -> KW_NOALIAS
-- On KW_OPAQUE reduce production param_attr -> KW_NOALIAS
-- On KW_NONNULL reduce production param_attr -> KW_NOALIAS
-- On KW_NOCAPTURE reduce production param_attr -> KW_NOALIAS
-- On KW_NOALIAS reduce production param_attr -> KW_NOALIAS
-- On KW_NEST reduce production param_attr -> KW_NOALIAS
-- On KW_METADATA reduce production param_attr -> KW_NOALIAS
-- On KW_LABEL reduce production param_attr -> KW_NOALIAS
-- On KW_INREG reduce production param_attr -> KW_NOALIAS
-- On KW_INALLOCA reduce production param_attr -> KW_NOALIAS
-- On KW_HALF reduce production param_attr -> KW_NOALIAS
-- On KW_FP128 reduce production param_attr -> KW_NOALIAS
-- On KW_FLOAT reduce production param_attr -> KW_NOALIAS
-- On KW_DOUBLE reduce production param_attr -> KW_NOALIAS
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_NOALIAS
-- On KW_BYVAL reduce production param_attr -> KW_NOALIAS
-- On KW_ALIGN reduce production param_attr -> KW_NOALIAS
-- On I reduce production param_attr -> KW_NOALIAS
-- On GLOBAL reduce production param_attr -> KW_NOALIAS
-- On COMMA reduce production param_attr -> KW_NOALIAS

State 133:
## Known stack suffix:
## KW_NEST
## LR(1) items:
param_attr -> KW_NEST . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_NEST
-- On LTLCURLY reduce production param_attr -> KW_NEST
-- On LT reduce production param_attr -> KW_NEST
-- On LSQUARE reduce production param_attr -> KW_NEST
-- On LOCAL reduce production param_attr -> KW_NEST
-- On LCURLY reduce production param_attr -> KW_NEST
-- On KW_ZEROEXT reduce production param_attr -> KW_NEST
-- On KW_X86_MMX reduce production param_attr -> KW_NEST
-- On KW_X86_FP80 reduce production param_attr -> KW_NEST
-- On KW_VOID reduce production param_attr -> KW_NEST
-- On KW_SRET reduce production param_attr -> KW_NEST
-- On KW_SIGNEXT reduce production param_attr -> KW_NEST
-- On KW_RETURNED reduce production param_attr -> KW_NEST
-- On KW_PPC_FP128 reduce production param_attr -> KW_NEST
-- On KW_OPAQUE reduce production param_attr -> KW_NEST
-- On KW_NONNULL reduce production param_attr -> KW_NEST
-- On KW_NOCAPTURE reduce production param_attr -> KW_NEST
-- On KW_NOALIAS reduce production param_attr -> KW_NEST
-- On KW_NEST reduce production param_attr -> KW_NEST
-- On KW_METADATA reduce production param_attr -> KW_NEST
-- On KW_LABEL reduce production param_attr -> KW_NEST
-- On KW_INREG reduce production param_attr -> KW_NEST
-- On KW_INALLOCA reduce production param_attr -> KW_NEST
-- On KW_HALF reduce production param_attr -> KW_NEST
-- On KW_FP128 reduce production param_attr -> KW_NEST
-- On KW_FLOAT reduce production param_attr -> KW_NEST
-- On KW_DOUBLE reduce production param_attr -> KW_NEST
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_NEST
-- On KW_BYVAL reduce production param_attr -> KW_NEST
-- On KW_ALIGN reduce production param_attr -> KW_NEST
-- On I reduce production param_attr -> KW_NEST
-- On GLOBAL reduce production param_attr -> KW_NEST
-- On COMMA reduce production param_attr -> KW_NEST

State 134:
## Known stack suffix:
## KW_INREG
## LR(1) items:
param_attr -> KW_INREG . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_INREG
-- On LTLCURLY reduce production param_attr -> KW_INREG
-- On LT reduce production param_attr -> KW_INREG
-- On LSQUARE reduce production param_attr -> KW_INREG
-- On LOCAL reduce production param_attr -> KW_INREG
-- On LCURLY reduce production param_attr -> KW_INREG
-- On KW_ZEROEXT reduce production param_attr -> KW_INREG
-- On KW_X86_MMX reduce production param_attr -> KW_INREG
-- On KW_X86_FP80 reduce production param_attr -> KW_INREG
-- On KW_VOID reduce production param_attr -> KW_INREG
-- On KW_SRET reduce production param_attr -> KW_INREG
-- On KW_SIGNEXT reduce production param_attr -> KW_INREG
-- On KW_RETURNED reduce production param_attr -> KW_INREG
-- On KW_PPC_FP128 reduce production param_attr -> KW_INREG
-- On KW_OPAQUE reduce production param_attr -> KW_INREG
-- On KW_NONNULL reduce production param_attr -> KW_INREG
-- On KW_NOCAPTURE reduce production param_attr -> KW_INREG
-- On KW_NOALIAS reduce production param_attr -> KW_INREG
-- On KW_NEST reduce production param_attr -> KW_INREG
-- On KW_METADATA reduce production param_attr -> KW_INREG
-- On KW_LABEL reduce production param_attr -> KW_INREG
-- On KW_INREG reduce production param_attr -> KW_INREG
-- On KW_INALLOCA reduce production param_attr -> KW_INREG
-- On KW_HALF reduce production param_attr -> KW_INREG
-- On KW_FP128 reduce production param_attr -> KW_INREG
-- On KW_FLOAT reduce production param_attr -> KW_INREG
-- On KW_DOUBLE reduce production param_attr -> KW_INREG
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_INREG
-- On KW_BYVAL reduce production param_attr -> KW_INREG
-- On KW_ALIGN reduce production param_attr -> KW_INREG
-- On I reduce production param_attr -> KW_INREG
-- On GLOBAL reduce production param_attr -> KW_INREG
-- On COMMA reduce production param_attr -> KW_INREG

State 135:
## Known stack suffix:
## KW_INALLOCA
## LR(1) items:
param_attr -> KW_INALLOCA . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_INALLOCA
-- On LTLCURLY reduce production param_attr -> KW_INALLOCA
-- On LT reduce production param_attr -> KW_INALLOCA
-- On LSQUARE reduce production param_attr -> KW_INALLOCA
-- On LOCAL reduce production param_attr -> KW_INALLOCA
-- On LCURLY reduce production param_attr -> KW_INALLOCA
-- On KW_ZEROEXT reduce production param_attr -> KW_INALLOCA
-- On KW_X86_MMX reduce production param_attr -> KW_INALLOCA
-- On KW_X86_FP80 reduce production param_attr -> KW_INALLOCA
-- On KW_VOID reduce production param_attr -> KW_INALLOCA
-- On KW_SRET reduce production param_attr -> KW_INALLOCA
-- On KW_SIGNEXT reduce production param_attr -> KW_INALLOCA
-- On KW_RETURNED reduce production param_attr -> KW_INALLOCA
-- On KW_PPC_FP128 reduce production param_attr -> KW_INALLOCA
-- On KW_OPAQUE reduce production param_attr -> KW_INALLOCA
-- On KW_NONNULL reduce production param_attr -> KW_INALLOCA
-- On KW_NOCAPTURE reduce production param_attr -> KW_INALLOCA
-- On KW_NOALIAS reduce production param_attr -> KW_INALLOCA
-- On KW_NEST reduce production param_attr -> KW_INALLOCA
-- On KW_METADATA reduce production param_attr -> KW_INALLOCA
-- On KW_LABEL reduce production param_attr -> KW_INALLOCA
-- On KW_INREG reduce production param_attr -> KW_INALLOCA
-- On KW_INALLOCA reduce production param_attr -> KW_INALLOCA
-- On KW_HALF reduce production param_attr -> KW_INALLOCA
-- On KW_FP128 reduce production param_attr -> KW_INALLOCA
-- On KW_FLOAT reduce production param_attr -> KW_INALLOCA
-- On KW_DOUBLE reduce production param_attr -> KW_INALLOCA
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_INALLOCA
-- On KW_BYVAL reduce production param_attr -> KW_INALLOCA
-- On KW_ALIGN reduce production param_attr -> KW_INALLOCA
-- On I reduce production param_attr -> KW_INALLOCA
-- On GLOBAL reduce production param_attr -> KW_INALLOCA
-- On COMMA reduce production param_attr -> KW_INALLOCA

State 136:
## Known stack suffix:
## KW_DEREFERENCEABLE
## LR(1) items:
param_attr -> KW_DEREFERENCEABLE . LPAREN INTEGER RPAREN [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
-- On LPAREN shift to state 137
## Reductions:

State 137:
## Known stack suffix:
## KW_DEREFERENCEABLE LPAREN
## LR(1) items:
param_attr -> KW_DEREFERENCEABLE LPAREN . INTEGER RPAREN [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
-- On INTEGER shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## KW_DEREFERENCEABLE LPAREN INTEGER
## LR(1) items:
param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER . RPAREN [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
-- On RPAREN shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
## LR(1) items:
param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On LTLCURLY reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On LT reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On LSQUARE reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On LOCAL reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On LCURLY reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_ZEROEXT reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_X86_MMX reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_X86_FP80 reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_VOID reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_SRET reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_SIGNEXT reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_RETURNED reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_PPC_FP128 reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_OPAQUE reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_NONNULL reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_NOCAPTURE reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_NOALIAS reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_NEST reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_METADATA reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_LABEL reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_INREG reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_INALLOCA reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_HALF reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_FP128 reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_FLOAT reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_DOUBLE reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_BYVAL reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On KW_ALIGN reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On I reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On GLOBAL reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN
-- On COMMA reduce production param_attr -> KW_DEREFERENCEABLE LPAREN INTEGER RPAREN

State 140:
## Known stack suffix:
## KW_BYVAL
## LR(1) items:
param_attr -> KW_BYVAL . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_BYVAL
-- On LTLCURLY reduce production param_attr -> KW_BYVAL
-- On LT reduce production param_attr -> KW_BYVAL
-- On LSQUARE reduce production param_attr -> KW_BYVAL
-- On LOCAL reduce production param_attr -> KW_BYVAL
-- On LCURLY reduce production param_attr -> KW_BYVAL
-- On KW_ZEROEXT reduce production param_attr -> KW_BYVAL
-- On KW_X86_MMX reduce production param_attr -> KW_BYVAL
-- On KW_X86_FP80 reduce production param_attr -> KW_BYVAL
-- On KW_VOID reduce production param_attr -> KW_BYVAL
-- On KW_SRET reduce production param_attr -> KW_BYVAL
-- On KW_SIGNEXT reduce production param_attr -> KW_BYVAL
-- On KW_RETURNED reduce production param_attr -> KW_BYVAL
-- On KW_PPC_FP128 reduce production param_attr -> KW_BYVAL
-- On KW_OPAQUE reduce production param_attr -> KW_BYVAL
-- On KW_NONNULL reduce production param_attr -> KW_BYVAL
-- On KW_NOCAPTURE reduce production param_attr -> KW_BYVAL
-- On KW_NOALIAS reduce production param_attr -> KW_BYVAL
-- On KW_NEST reduce production param_attr -> KW_BYVAL
-- On KW_METADATA reduce production param_attr -> KW_BYVAL
-- On KW_LABEL reduce production param_attr -> KW_BYVAL
-- On KW_INREG reduce production param_attr -> KW_BYVAL
-- On KW_INALLOCA reduce production param_attr -> KW_BYVAL
-- On KW_HALF reduce production param_attr -> KW_BYVAL
-- On KW_FP128 reduce production param_attr -> KW_BYVAL
-- On KW_FLOAT reduce production param_attr -> KW_BYVAL
-- On KW_DOUBLE reduce production param_attr -> KW_BYVAL
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_BYVAL
-- On KW_BYVAL reduce production param_attr -> KW_BYVAL
-- On KW_ALIGN reduce production param_attr -> KW_BYVAL
-- On I reduce production param_attr -> KW_BYVAL
-- On GLOBAL reduce production param_attr -> KW_BYVAL
-- On COMMA reduce production param_attr -> KW_BYVAL

State 141:
## Known stack suffix:
## KW_ALIGN
## LR(1) items:
param_attr -> KW_ALIGN . INTEGER [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
-- On INTEGER shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## KW_ALIGN INTEGER
## LR(1) items:
param_attr -> KW_ALIGN INTEGER . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production param_attr -> KW_ALIGN INTEGER
-- On LTLCURLY reduce production param_attr -> KW_ALIGN INTEGER
-- On LT reduce production param_attr -> KW_ALIGN INTEGER
-- On LSQUARE reduce production param_attr -> KW_ALIGN INTEGER
-- On LOCAL reduce production param_attr -> KW_ALIGN INTEGER
-- On LCURLY reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_ZEROEXT reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_X86_MMX reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_X86_FP80 reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_VOID reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_SRET reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_SIGNEXT reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_RETURNED reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_PPC_FP128 reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_OPAQUE reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_NONNULL reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_NOCAPTURE reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_NOALIAS reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_NEST reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_METADATA reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_LABEL reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_INREG reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_INALLOCA reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_HALF reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_FP128 reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_FLOAT reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_DOUBLE reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_DEREFERENCEABLE reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_BYVAL reduce production param_attr -> KW_ALIGN INTEGER
-- On KW_ALIGN reduce production param_attr -> KW_ALIGN INTEGER
-- On I reduce production param_attr -> KW_ALIGN INTEGER
-- On GLOBAL reduce production param_attr -> KW_ALIGN INTEGER
-- On COMMA reduce production param_attr -> KW_ALIGN INTEGER

State 143:
## Known stack suffix:
## param_attr
## LR(1) items:
list(param_attr) -> param_attr . list(param_attr) [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I GLOBAL COMMA ]
## Transitions:
-- On KW_ZEROEXT shift to state 126
-- On KW_SRET shift to state 127
-- On KW_SIGNEXT shift to state 128
-- On KW_RETURNED shift to state 129
-- On KW_NONNULL shift to state 130
-- On KW_NOCAPTURE shift to state 131
-- On KW_NOALIAS shift to state 132
-- On KW_NEST shift to state 133
-- On KW_INREG shift to state 134
-- On KW_INALLOCA shift to state 135
-- On KW_DEREFERENCEABLE shift to state 136
-- On KW_BYVAL shift to state 140
-- On KW_ALIGN shift to state 141
-- On param_attr shift to state 143
-- On list(param_attr) shift to state 144
## Reductions:
-- On RPAREN reduce production list(param_attr) ->
-- On LTLCURLY reduce production list(param_attr) ->
-- On LT reduce production list(param_attr) ->
-- On LSQUARE reduce production list(param_attr) ->
-- On LOCAL reduce production list(param_attr) ->
-- On LCURLY reduce production list(param_attr) ->
-- On KW_X86_MMX reduce production list(param_attr) ->
-- On KW_X86_FP80 reduce production list(param_attr) ->
-- On KW_VOID reduce production list(param_attr) ->
-- On KW_PPC_FP128 reduce production list(param_attr) ->
-- On KW_OPAQUE reduce production list(param_attr) ->
-- On KW_METADATA reduce production list(param_attr) ->
-- On KW_LABEL reduce production list(param_attr) ->
-- On KW_HALF reduce production list(param_attr) ->
-- On KW_FP128 reduce production list(param_attr) ->
-- On KW_FLOAT reduce production list(param_attr) ->
-- On KW_DOUBLE reduce production list(param_attr) ->
-- On I reduce production list(param_attr) ->
-- On GLOBAL reduce production list(param_attr) ->
-- On COMMA reduce production list(param_attr) ->

State 144:
## Known stack suffix:
## param_attr list(param_attr)
## LR(1) items:
list(param_attr) -> param_attr list(param_attr) . [ RPAREN LTLCURLY LT LSQUARE LOCAL LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I GLOBAL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production list(param_attr) -> param_attr list(param_attr)
-- On LTLCURLY reduce production list(param_attr) -> param_attr list(param_attr)
-- On LT reduce production list(param_attr) -> param_attr list(param_attr)
-- On LSQUARE reduce production list(param_attr) -> param_attr list(param_attr)
-- On LOCAL reduce production list(param_attr) -> param_attr list(param_attr)
-- On LCURLY reduce production list(param_attr) -> param_attr list(param_attr)
-- On KW_X86_MMX reduce production list(param_attr) -> param_attr list(param_attr)
-- On KW_X86_FP80 reduce production list(param_attr) -> param_attr list(param_attr)
-- On KW_VOID reduce production list(param_attr) -> param_attr list(param_attr)
-- On KW_PPC_FP128 reduce production list(param_attr) -> param_attr list(param_attr)
-- On KW_OPAQUE reduce production list(param_attr) -> param_attr list(param_attr)
-- On KW_METADATA reduce production list(param_attr) -> param_attr list(param_attr)
-- On KW_LABEL reduce production list(param_attr) -> param_attr list(param_attr)
-- On KW_HALF reduce production list(param_attr) -> param_attr list(param_attr)
-- On KW_FP128 reduce production list(param_attr) -> param_attr list(param_attr)
-- On KW_FLOAT reduce production list(param_attr) -> param_attr list(param_attr)
-- On KW_DOUBLE reduce production list(param_attr) -> param_attr list(param_attr)
-- On I reduce production list(param_attr) -> param_attr list(param_attr)
-- On GLOBAL reduce production list(param_attr) -> param_attr list(param_attr)
-- On COMMA reduce production list(param_attr) -> param_attr list(param_attr)

State 145:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr)
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) . typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks RCURLY [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr) typ
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ . GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks RCURLY [ EOL ]
typ -> typ . STAR [ STAR LPAREN GLOBAL ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LPAREN GLOBAL ]
## Transitions:
-- On STAR shift to state 30
-- On LPAREN shift to state 31
-- On GLOBAL shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL . LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks RCURLY [ EOL ]
## Transitions:
-- On LPAREN shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN . loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks RCURLY [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 149
-- On separated_nonempty_list(COMMA,df_arg) shift to state 154
-- On loption(separated_nonempty_list(COMMA,df_arg)) shift to state 155
-- On df_arg shift to state 490
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,df_arg)) ->

State 149:
## Known stack suffix:
## typ
## LR(1) items:
df_arg -> typ . list(param_attr) ident [ RPAREN COMMA ]
typ -> typ . STAR [ STAR LPAREN LOCAL KW_ZEROEXT KW_SRET KW_SIGNEXT KW_RETURNED KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN GLOBAL ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LPAREN LOCAL KW_ZEROEXT KW_SRET KW_SIGNEXT KW_RETURNED KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN GLOBAL ]
## Transitions:
-- On STAR shift to state 30
-- On LPAREN shift to state 31
-- On KW_ZEROEXT shift to state 126
-- On KW_SRET shift to state 127
-- On KW_SIGNEXT shift to state 128
-- On KW_RETURNED shift to state 129
-- On KW_NONNULL shift to state 130
-- On KW_NOCAPTURE shift to state 131
-- On KW_NOALIAS shift to state 132
-- On KW_NEST shift to state 133
-- On KW_INREG shift to state 134
-- On KW_INALLOCA shift to state 135
-- On KW_DEREFERENCEABLE shift to state 136
-- On KW_BYVAL shift to state 140
-- On KW_ALIGN shift to state 141
-- On param_attr shift to state 143
-- On list(param_attr) shift to state 150
## Reductions:
-- On LOCAL reduce production list(param_attr) ->
-- On GLOBAL reduce production list(param_attr) ->

State 150:
## Known stack suffix:
## typ list(param_attr)
## LR(1) items:
df_arg -> typ list(param_attr) . ident [ RPAREN COMMA ]
## Transitions:
-- On LOCAL shift to state 151
-- On GLOBAL shift to state 152
-- On ident shift to state 153
## Reductions:

State 151:
## Known stack suffix:
## LOCAL
## LR(1) items:
ident -> LOCAL . [ RSQUARE RPAREN LTLCURLY LT LSQUARE LPAREN LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_UNWIND KW_TO KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I EQ EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production ident -> LOCAL
-- On RPAREN reduce production ident -> LOCAL
-- On LTLCURLY reduce production ident -> LOCAL
-- On LT reduce production ident -> LOCAL
-- On LSQUARE reduce production ident -> LOCAL
-- On LPAREN reduce production ident -> LOCAL
-- On LCURLY reduce production ident -> LOCAL
-- On KW_X86_MMX reduce production ident -> LOCAL
-- On KW_X86_FP80 reduce production ident -> LOCAL
-- On KW_VOID reduce production ident -> LOCAL
-- On KW_UNWIND reduce production ident -> LOCAL
-- On KW_TO reduce production ident -> LOCAL
-- On KW_PPC_FP128 reduce production ident -> LOCAL
-- On KW_OPAQUE reduce production ident -> LOCAL
-- On KW_METADATA reduce production ident -> LOCAL
-- On KW_LABEL reduce production ident -> LOCAL
-- On KW_HALF reduce production ident -> LOCAL
-- On KW_FP128 reduce production ident -> LOCAL
-- On KW_FLOAT reduce production ident -> LOCAL
-- On KW_DOUBLE reduce production ident -> LOCAL
-- On I reduce production ident -> LOCAL
-- On EQ reduce production ident -> LOCAL
-- On EOL reduce production ident -> LOCAL
-- On COMMA reduce production ident -> LOCAL

State 152:
## Known stack suffix:
## GLOBAL
## LR(1) items:
ident -> GLOBAL . [ RSQUARE RPAREN LTLCURLY LT LSQUARE LPAREN LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_UNWIND KW_TO KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I EQ EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production ident -> GLOBAL
-- On RPAREN reduce production ident -> GLOBAL
-- On LTLCURLY reduce production ident -> GLOBAL
-- On LT reduce production ident -> GLOBAL
-- On LSQUARE reduce production ident -> GLOBAL
-- On LPAREN reduce production ident -> GLOBAL
-- On LCURLY reduce production ident -> GLOBAL
-- On KW_X86_MMX reduce production ident -> GLOBAL
-- On KW_X86_FP80 reduce production ident -> GLOBAL
-- On KW_VOID reduce production ident -> GLOBAL
-- On KW_UNWIND reduce production ident -> GLOBAL
-- On KW_TO reduce production ident -> GLOBAL
-- On KW_PPC_FP128 reduce production ident -> GLOBAL
-- On KW_OPAQUE reduce production ident -> GLOBAL
-- On KW_METADATA reduce production ident -> GLOBAL
-- On KW_LABEL reduce production ident -> GLOBAL
-- On KW_HALF reduce production ident -> GLOBAL
-- On KW_FP128 reduce production ident -> GLOBAL
-- On KW_FLOAT reduce production ident -> GLOBAL
-- On KW_DOUBLE reduce production ident -> GLOBAL
-- On I reduce production ident -> GLOBAL
-- On EQ reduce production ident -> GLOBAL
-- On EOL reduce production ident -> GLOBAL
-- On COMMA reduce production ident -> GLOBAL

State 153:
## Known stack suffix:
## typ list(param_attr) ident
## LR(1) items:
df_arg -> typ list(param_attr) ident . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production df_arg -> typ list(param_attr) ident
-- On COMMA reduce production df_arg -> typ list(param_attr) ident

State 154:
## Known stack suffix:
## separated_nonempty_list(COMMA,df_arg)
## LR(1) items:
loption(separated_nonempty_list(COMMA,df_arg)) -> separated_nonempty_list(COMMA,df_arg) . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,df_arg)) -> separated_nonempty_list(COMMA,df_arg)

State 155:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg))
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) . RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks RCURLY [ EOL ]
## Transitions:
-- On RPAREN shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN . list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks RCURLY [ EOL ]
## Transitions:
-- On STRING shift to state 157
-- On KW_UWTABLE shift to state 160
-- On KW_UNNAMED_ADDR shift to state 161
-- On KW_SSPSTRONG shift to state 162
-- On KW_SSPREQ shift to state 163
-- On KW_SSP shift to state 164
-- On KW_SECTION shift to state 165
-- On KW_SANITIZE_THREAD shift to state 167
-- On KW_SANITIZE_MEMORY shift to state 168
-- On KW_SANITIZE_ADDRESS shift to state 169
-- On KW_RETURNS_TWICE shift to state 170
-- On KW_READONLY shift to state 171
-- On KW_READNONE shift to state 172
-- On KW_OPTSIZE shift to state 173
-- On KW_OPTNONE shift to state 174
-- On KW_NOUNWIND shift to state 175
-- On KW_NORETURN shift to state 176
-- On KW_NOREDZONE shift to state 177
-- On KW_NONLAZYBIND shift to state 178
-- On KW_NOINLINE shift to state 179
-- On KW_NOIMPLICITFLOAT shift to state 180
-- On KW_NODUPLICATE shift to state 181
-- On KW_NOBUILTIN shift to state 182
-- On KW_NAKED shift to state 183
-- On KW_MINSIZE shift to state 184
-- On KW_JUMPTABLE shift to state 185
-- On KW_INLINEHINT shift to state 186
-- On KW_GC shift to state 187
-- On KW_COLD shift to state 189
-- On KW_BUILTIN shift to state 190
-- On KW_ALWAYSINLINE shift to state 191
-- On KW_ALIGNSTACK shift to state 192
-- On KW_ALIGN shift to state 196
-- On KW_ADDRSPACE shift to state 198
-- On ATTR_GRP_ID shift to state 202
-- On section shift to state 203
-- On nonempty_list(fn_attr) shift to state 204
-- On list(df_post_attr) shift to state 205
-- On fn_attr shift to state 485
-- On df_post_attr shift to state 487
-- On align shift to state 489
## Reductions:
-- On LCURLY reduce production list(df_post_attr) ->
-- On EOL reduce production list(df_post_attr) ->

State 157:
## Known stack suffix:
## STRING
## LR(1) items:
fn_attr -> STRING . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
fn_attr -> STRING . EQ STRING [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On EQ shift to state 158
## Reductions:
-- On STRING reduce production fn_attr -> STRING
-- On RCURLY reduce production fn_attr -> STRING
-- On LCURLY reduce production fn_attr -> STRING
-- On KW_UWTABLE reduce production fn_attr -> STRING
-- On KW_UNNAMED_ADDR reduce production fn_attr -> STRING
-- On KW_TO reduce production fn_attr -> STRING
-- On KW_SSPSTRONG reduce production fn_attr -> STRING
-- On KW_SSPREQ reduce production fn_attr -> STRING
-- On KW_SSP reduce production fn_attr -> STRING
-- On KW_SECTION reduce production fn_attr -> STRING
-- On KW_SANITIZE_THREAD reduce production fn_attr -> STRING
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> STRING
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> STRING
-- On KW_RETURNS_TWICE reduce production fn_attr -> STRING
-- On KW_READONLY reduce production fn_attr -> STRING
-- On KW_READNONE reduce production fn_attr -> STRING
-- On KW_OPTSIZE reduce production fn_attr -> STRING
-- On KW_OPTNONE reduce production fn_attr -> STRING
-- On KW_NOUNWIND reduce production fn_attr -> STRING
-- On KW_NORETURN reduce production fn_attr -> STRING
-- On KW_NOREDZONE reduce production fn_attr -> STRING
-- On KW_NONLAZYBIND reduce production fn_attr -> STRING
-- On KW_NOINLINE reduce production fn_attr -> STRING
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> STRING
-- On KW_NODUPLICATE reduce production fn_attr -> STRING
-- On KW_NOBUILTIN reduce production fn_attr -> STRING
-- On KW_NAKED reduce production fn_attr -> STRING
-- On KW_MINSIZE reduce production fn_attr -> STRING
-- On KW_JUMPTABLE reduce production fn_attr -> STRING
-- On KW_INLINEHINT reduce production fn_attr -> STRING
-- On KW_GC reduce production fn_attr -> STRING
-- On KW_COLD reduce production fn_attr -> STRING
-- On KW_BUILTIN reduce production fn_attr -> STRING
-- On KW_ALWAYSINLINE reduce production fn_attr -> STRING
-- On KW_ALIGNSTACK reduce production fn_attr -> STRING
-- On KW_ALIGN reduce production fn_attr -> STRING
-- On KW_ADDRSPACE reduce production fn_attr -> STRING
-- On EOL reduce production fn_attr -> STRING
-- On ATTR_GRP_ID reduce production fn_attr -> STRING

State 158:
## Known stack suffix:
## STRING EQ
## LR(1) items:
fn_attr -> STRING EQ . STRING [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On STRING shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## STRING EQ STRING
## LR(1) items:
fn_attr -> STRING EQ STRING . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> STRING EQ STRING
-- On RCURLY reduce production fn_attr -> STRING EQ STRING
-- On LCURLY reduce production fn_attr -> STRING EQ STRING
-- On KW_UWTABLE reduce production fn_attr -> STRING EQ STRING
-- On KW_UNNAMED_ADDR reduce production fn_attr -> STRING EQ STRING
-- On KW_TO reduce production fn_attr -> STRING EQ STRING
-- On KW_SSPSTRONG reduce production fn_attr -> STRING EQ STRING
-- On KW_SSPREQ reduce production fn_attr -> STRING EQ STRING
-- On KW_SSP reduce production fn_attr -> STRING EQ STRING
-- On KW_SECTION reduce production fn_attr -> STRING EQ STRING
-- On KW_SANITIZE_THREAD reduce production fn_attr -> STRING EQ STRING
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> STRING EQ STRING
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> STRING EQ STRING
-- On KW_RETURNS_TWICE reduce production fn_attr -> STRING EQ STRING
-- On KW_READONLY reduce production fn_attr -> STRING EQ STRING
-- On KW_READNONE reduce production fn_attr -> STRING EQ STRING
-- On KW_OPTSIZE reduce production fn_attr -> STRING EQ STRING
-- On KW_OPTNONE reduce production fn_attr -> STRING EQ STRING
-- On KW_NOUNWIND reduce production fn_attr -> STRING EQ STRING
-- On KW_NORETURN reduce production fn_attr -> STRING EQ STRING
-- On KW_NOREDZONE reduce production fn_attr -> STRING EQ STRING
-- On KW_NONLAZYBIND reduce production fn_attr -> STRING EQ STRING
-- On KW_NOINLINE reduce production fn_attr -> STRING EQ STRING
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> STRING EQ STRING
-- On KW_NODUPLICATE reduce production fn_attr -> STRING EQ STRING
-- On KW_NOBUILTIN reduce production fn_attr -> STRING EQ STRING
-- On KW_NAKED reduce production fn_attr -> STRING EQ STRING
-- On KW_MINSIZE reduce production fn_attr -> STRING EQ STRING
-- On KW_JUMPTABLE reduce production fn_attr -> STRING EQ STRING
-- On KW_INLINEHINT reduce production fn_attr -> STRING EQ STRING
-- On KW_GC reduce production fn_attr -> STRING EQ STRING
-- On KW_COLD reduce production fn_attr -> STRING EQ STRING
-- On KW_BUILTIN reduce production fn_attr -> STRING EQ STRING
-- On KW_ALWAYSINLINE reduce production fn_attr -> STRING EQ STRING
-- On KW_ALIGNSTACK reduce production fn_attr -> STRING EQ STRING
-- On KW_ALIGN reduce production fn_attr -> STRING EQ STRING
-- On KW_ADDRSPACE reduce production fn_attr -> STRING EQ STRING
-- On EOL reduce production fn_attr -> STRING EQ STRING
-- On ATTR_GRP_ID reduce production fn_attr -> STRING EQ STRING

State 160:
## Known stack suffix:
## KW_UWTABLE
## LR(1) items:
fn_attr -> KW_UWTABLE . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_UWTABLE
-- On RCURLY reduce production fn_attr -> KW_UWTABLE
-- On LCURLY reduce production fn_attr -> KW_UWTABLE
-- On KW_UWTABLE reduce production fn_attr -> KW_UWTABLE
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_UWTABLE
-- On KW_TO reduce production fn_attr -> KW_UWTABLE
-- On KW_SSPSTRONG reduce production fn_attr -> KW_UWTABLE
-- On KW_SSPREQ reduce production fn_attr -> KW_UWTABLE
-- On KW_SSP reduce production fn_attr -> KW_UWTABLE
-- On KW_SECTION reduce production fn_attr -> KW_UWTABLE
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_UWTABLE
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_UWTABLE
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_UWTABLE
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_UWTABLE
-- On KW_READONLY reduce production fn_attr -> KW_UWTABLE
-- On KW_READNONE reduce production fn_attr -> KW_UWTABLE
-- On KW_OPTSIZE reduce production fn_attr -> KW_UWTABLE
-- On KW_OPTNONE reduce production fn_attr -> KW_UWTABLE
-- On KW_NOUNWIND reduce production fn_attr -> KW_UWTABLE
-- On KW_NORETURN reduce production fn_attr -> KW_UWTABLE
-- On KW_NOREDZONE reduce production fn_attr -> KW_UWTABLE
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_UWTABLE
-- On KW_NOINLINE reduce production fn_attr -> KW_UWTABLE
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_UWTABLE
-- On KW_NODUPLICATE reduce production fn_attr -> KW_UWTABLE
-- On KW_NOBUILTIN reduce production fn_attr -> KW_UWTABLE
-- On KW_NAKED reduce production fn_attr -> KW_UWTABLE
-- On KW_MINSIZE reduce production fn_attr -> KW_UWTABLE
-- On KW_JUMPTABLE reduce production fn_attr -> KW_UWTABLE
-- On KW_INLINEHINT reduce production fn_attr -> KW_UWTABLE
-- On KW_GC reduce production fn_attr -> KW_UWTABLE
-- On KW_COLD reduce production fn_attr -> KW_UWTABLE
-- On KW_BUILTIN reduce production fn_attr -> KW_UWTABLE
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_UWTABLE
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_UWTABLE
-- On KW_ALIGN reduce production fn_attr -> KW_UWTABLE
-- On KW_ADDRSPACE reduce production fn_attr -> KW_UWTABLE
-- On EOL reduce production fn_attr -> KW_UWTABLE
-- On ATTR_GRP_ID reduce production fn_attr -> KW_UWTABLE

State 161:
## Known stack suffix:
## KW_UNNAMED_ADDR
## LR(1) items:
df_post_attr -> KW_UNNAMED_ADDR . [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On LCURLY reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_UWTABLE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_UNNAMED_ADDR reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_SSPSTRONG reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_SSPREQ reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_SSP reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_SECTION reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_SANITIZE_THREAD reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_SANITIZE_MEMORY reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_SANITIZE_ADDRESS reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_RETURNS_TWICE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_READONLY reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_READNONE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_OPTSIZE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_OPTNONE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_NOUNWIND reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_NORETURN reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_NOREDZONE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_NONLAZYBIND reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_NOINLINE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_NOIMPLICITFLOAT reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_NODUPLICATE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_NOBUILTIN reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_NAKED reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_MINSIZE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_JUMPTABLE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_INLINEHINT reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_GC reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_COLD reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_BUILTIN reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_ALWAYSINLINE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_ALIGNSTACK reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_ALIGN reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On KW_ADDRSPACE reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On EOL reduce production df_post_attr -> KW_UNNAMED_ADDR
-- On ATTR_GRP_ID reduce production df_post_attr -> KW_UNNAMED_ADDR

State 162:
## Known stack suffix:
## KW_SSPSTRONG
## LR(1) items:
fn_attr -> KW_SSPSTRONG . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_SSPSTRONG
-- On RCURLY reduce production fn_attr -> KW_SSPSTRONG
-- On LCURLY reduce production fn_attr -> KW_SSPSTRONG
-- On KW_UWTABLE reduce production fn_attr -> KW_SSPSTRONG
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_SSPSTRONG
-- On KW_TO reduce production fn_attr -> KW_SSPSTRONG
-- On KW_SSPSTRONG reduce production fn_attr -> KW_SSPSTRONG
-- On KW_SSPREQ reduce production fn_attr -> KW_SSPSTRONG
-- On KW_SSP reduce production fn_attr -> KW_SSPSTRONG
-- On KW_SECTION reduce production fn_attr -> KW_SSPSTRONG
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_SSPSTRONG
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_SSPSTRONG
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_SSPSTRONG
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_SSPSTRONG
-- On KW_READONLY reduce production fn_attr -> KW_SSPSTRONG
-- On KW_READNONE reduce production fn_attr -> KW_SSPSTRONG
-- On KW_OPTSIZE reduce production fn_attr -> KW_SSPSTRONG
-- On KW_OPTNONE reduce production fn_attr -> KW_SSPSTRONG
-- On KW_NOUNWIND reduce production fn_attr -> KW_SSPSTRONG
-- On KW_NORETURN reduce production fn_attr -> KW_SSPSTRONG
-- On KW_NOREDZONE reduce production fn_attr -> KW_SSPSTRONG
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_SSPSTRONG
-- On KW_NOINLINE reduce production fn_attr -> KW_SSPSTRONG
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_SSPSTRONG
-- On KW_NODUPLICATE reduce production fn_attr -> KW_SSPSTRONG
-- On KW_NOBUILTIN reduce production fn_attr -> KW_SSPSTRONG
-- On KW_NAKED reduce production fn_attr -> KW_SSPSTRONG
-- On KW_MINSIZE reduce production fn_attr -> KW_SSPSTRONG
-- On KW_JUMPTABLE reduce production fn_attr -> KW_SSPSTRONG
-- On KW_INLINEHINT reduce production fn_attr -> KW_SSPSTRONG
-- On KW_GC reduce production fn_attr -> KW_SSPSTRONG
-- On KW_COLD reduce production fn_attr -> KW_SSPSTRONG
-- On KW_BUILTIN reduce production fn_attr -> KW_SSPSTRONG
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_SSPSTRONG
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_SSPSTRONG
-- On KW_ALIGN reduce production fn_attr -> KW_SSPSTRONG
-- On KW_ADDRSPACE reduce production fn_attr -> KW_SSPSTRONG
-- On EOL reduce production fn_attr -> KW_SSPSTRONG
-- On ATTR_GRP_ID reduce production fn_attr -> KW_SSPSTRONG

State 163:
## Known stack suffix:
## KW_SSPREQ
## LR(1) items:
fn_attr -> KW_SSPREQ . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_SSPREQ
-- On RCURLY reduce production fn_attr -> KW_SSPREQ
-- On LCURLY reduce production fn_attr -> KW_SSPREQ
-- On KW_UWTABLE reduce production fn_attr -> KW_SSPREQ
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_SSPREQ
-- On KW_TO reduce production fn_attr -> KW_SSPREQ
-- On KW_SSPSTRONG reduce production fn_attr -> KW_SSPREQ
-- On KW_SSPREQ reduce production fn_attr -> KW_SSPREQ
-- On KW_SSP reduce production fn_attr -> KW_SSPREQ
-- On KW_SECTION reduce production fn_attr -> KW_SSPREQ
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_SSPREQ
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_SSPREQ
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_SSPREQ
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_SSPREQ
-- On KW_READONLY reduce production fn_attr -> KW_SSPREQ
-- On KW_READNONE reduce production fn_attr -> KW_SSPREQ
-- On KW_OPTSIZE reduce production fn_attr -> KW_SSPREQ
-- On KW_OPTNONE reduce production fn_attr -> KW_SSPREQ
-- On KW_NOUNWIND reduce production fn_attr -> KW_SSPREQ
-- On KW_NORETURN reduce production fn_attr -> KW_SSPREQ
-- On KW_NOREDZONE reduce production fn_attr -> KW_SSPREQ
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_SSPREQ
-- On KW_NOINLINE reduce production fn_attr -> KW_SSPREQ
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_SSPREQ
-- On KW_NODUPLICATE reduce production fn_attr -> KW_SSPREQ
-- On KW_NOBUILTIN reduce production fn_attr -> KW_SSPREQ
-- On KW_NAKED reduce production fn_attr -> KW_SSPREQ
-- On KW_MINSIZE reduce production fn_attr -> KW_SSPREQ
-- On KW_JUMPTABLE reduce production fn_attr -> KW_SSPREQ
-- On KW_INLINEHINT reduce production fn_attr -> KW_SSPREQ
-- On KW_GC reduce production fn_attr -> KW_SSPREQ
-- On KW_COLD reduce production fn_attr -> KW_SSPREQ
-- On KW_BUILTIN reduce production fn_attr -> KW_SSPREQ
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_SSPREQ
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_SSPREQ
-- On KW_ALIGN reduce production fn_attr -> KW_SSPREQ
-- On KW_ADDRSPACE reduce production fn_attr -> KW_SSPREQ
-- On EOL reduce production fn_attr -> KW_SSPREQ
-- On ATTR_GRP_ID reduce production fn_attr -> KW_SSPREQ

State 164:
## Known stack suffix:
## KW_SSP
## LR(1) items:
fn_attr -> KW_SSP . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_SSP
-- On RCURLY reduce production fn_attr -> KW_SSP
-- On LCURLY reduce production fn_attr -> KW_SSP
-- On KW_UWTABLE reduce production fn_attr -> KW_SSP
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_SSP
-- On KW_TO reduce production fn_attr -> KW_SSP
-- On KW_SSPSTRONG reduce production fn_attr -> KW_SSP
-- On KW_SSPREQ reduce production fn_attr -> KW_SSP
-- On KW_SSP reduce production fn_attr -> KW_SSP
-- On KW_SECTION reduce production fn_attr -> KW_SSP
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_SSP
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_SSP
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_SSP
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_SSP
-- On KW_READONLY reduce production fn_attr -> KW_SSP
-- On KW_READNONE reduce production fn_attr -> KW_SSP
-- On KW_OPTSIZE reduce production fn_attr -> KW_SSP
-- On KW_OPTNONE reduce production fn_attr -> KW_SSP
-- On KW_NOUNWIND reduce production fn_attr -> KW_SSP
-- On KW_NORETURN reduce production fn_attr -> KW_SSP
-- On KW_NOREDZONE reduce production fn_attr -> KW_SSP
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_SSP
-- On KW_NOINLINE reduce production fn_attr -> KW_SSP
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_SSP
-- On KW_NODUPLICATE reduce production fn_attr -> KW_SSP
-- On KW_NOBUILTIN reduce production fn_attr -> KW_SSP
-- On KW_NAKED reduce production fn_attr -> KW_SSP
-- On KW_MINSIZE reduce production fn_attr -> KW_SSP
-- On KW_JUMPTABLE reduce production fn_attr -> KW_SSP
-- On KW_INLINEHINT reduce production fn_attr -> KW_SSP
-- On KW_GC reduce production fn_attr -> KW_SSP
-- On KW_COLD reduce production fn_attr -> KW_SSP
-- On KW_BUILTIN reduce production fn_attr -> KW_SSP
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_SSP
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_SSP
-- On KW_ALIGN reduce production fn_attr -> KW_SSP
-- On KW_ADDRSPACE reduce production fn_attr -> KW_SSP
-- On EOL reduce production fn_attr -> KW_SSP
-- On ATTR_GRP_ID reduce production fn_attr -> KW_SSP

State 165:
## Known stack suffix:
## KW_SECTION
## LR(1) items:
section -> KW_SECTION . STRING [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On STRING shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## KW_SECTION STRING
## LR(1) items:
section -> KW_SECTION STRING . [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production section -> KW_SECTION STRING
-- On LCURLY reduce production section -> KW_SECTION STRING
-- On KW_UWTABLE reduce production section -> KW_SECTION STRING
-- On KW_UNNAMED_ADDR reduce production section -> KW_SECTION STRING
-- On KW_SSPSTRONG reduce production section -> KW_SECTION STRING
-- On KW_SSPREQ reduce production section -> KW_SECTION STRING
-- On KW_SSP reduce production section -> KW_SECTION STRING
-- On KW_SECTION reduce production section -> KW_SECTION STRING
-- On KW_SANITIZE_THREAD reduce production section -> KW_SECTION STRING
-- On KW_SANITIZE_MEMORY reduce production section -> KW_SECTION STRING
-- On KW_SANITIZE_ADDRESS reduce production section -> KW_SECTION STRING
-- On KW_RETURNS_TWICE reduce production section -> KW_SECTION STRING
-- On KW_READONLY reduce production section -> KW_SECTION STRING
-- On KW_READNONE reduce production section -> KW_SECTION STRING
-- On KW_OPTSIZE reduce production section -> KW_SECTION STRING
-- On KW_OPTNONE reduce production section -> KW_SECTION STRING
-- On KW_NOUNWIND reduce production section -> KW_SECTION STRING
-- On KW_NORETURN reduce production section -> KW_SECTION STRING
-- On KW_NOREDZONE reduce production section -> KW_SECTION STRING
-- On KW_NONLAZYBIND reduce production section -> KW_SECTION STRING
-- On KW_NOINLINE reduce production section -> KW_SECTION STRING
-- On KW_NOIMPLICITFLOAT reduce production section -> KW_SECTION STRING
-- On KW_NODUPLICATE reduce production section -> KW_SECTION STRING
-- On KW_NOBUILTIN reduce production section -> KW_SECTION STRING
-- On KW_NAKED reduce production section -> KW_SECTION STRING
-- On KW_MINSIZE reduce production section -> KW_SECTION STRING
-- On KW_JUMPTABLE reduce production section -> KW_SECTION STRING
-- On KW_INLINEHINT reduce production section -> KW_SECTION STRING
-- On KW_GC reduce production section -> KW_SECTION STRING
-- On KW_COLD reduce production section -> KW_SECTION STRING
-- On KW_BUILTIN reduce production section -> KW_SECTION STRING
-- On KW_ALWAYSINLINE reduce production section -> KW_SECTION STRING
-- On KW_ALIGNSTACK reduce production section -> KW_SECTION STRING
-- On KW_ALIGN reduce production section -> KW_SECTION STRING
-- On KW_ADDRSPACE reduce production section -> KW_SECTION STRING
-- On EOL reduce production section -> KW_SECTION STRING
-- On ATTR_GRP_ID reduce production section -> KW_SECTION STRING

State 167:
## Known stack suffix:
## KW_SANITIZE_THREAD
## LR(1) items:
fn_attr -> KW_SANITIZE_THREAD . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_SANITIZE_THREAD
-- On RCURLY reduce production fn_attr -> KW_SANITIZE_THREAD
-- On LCURLY reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_UWTABLE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_TO reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_SSPSTRONG reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_SSPREQ reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_SSP reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_SECTION reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_READONLY reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_READNONE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_OPTSIZE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_OPTNONE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_NOUNWIND reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_NORETURN reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_NOREDZONE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_NOINLINE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_NODUPLICATE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_NOBUILTIN reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_NAKED reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_MINSIZE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_JUMPTABLE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_INLINEHINT reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_GC reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_COLD reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_BUILTIN reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_ALIGN reduce production fn_attr -> KW_SANITIZE_THREAD
-- On KW_ADDRSPACE reduce production fn_attr -> KW_SANITIZE_THREAD
-- On EOL reduce production fn_attr -> KW_SANITIZE_THREAD
-- On ATTR_GRP_ID reduce production fn_attr -> KW_SANITIZE_THREAD

State 168:
## Known stack suffix:
## KW_SANITIZE_MEMORY
## LR(1) items:
fn_attr -> KW_SANITIZE_MEMORY . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On RCURLY reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On LCURLY reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_UWTABLE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_TO reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_SSPSTRONG reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_SSPREQ reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_SSP reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_SECTION reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_READONLY reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_READNONE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_OPTSIZE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_OPTNONE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_NOUNWIND reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_NORETURN reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_NOREDZONE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_NOINLINE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_NODUPLICATE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_NOBUILTIN reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_NAKED reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_MINSIZE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_JUMPTABLE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_INLINEHINT reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_GC reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_COLD reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_BUILTIN reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_ALIGN reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On KW_ADDRSPACE reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On EOL reduce production fn_attr -> KW_SANITIZE_MEMORY
-- On ATTR_GRP_ID reduce production fn_attr -> KW_SANITIZE_MEMORY

State 169:
## Known stack suffix:
## KW_SANITIZE_ADDRESS
## LR(1) items:
fn_attr -> KW_SANITIZE_ADDRESS . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On RCURLY reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On LCURLY reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_UWTABLE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_TO reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_SSPSTRONG reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_SSPREQ reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_SSP reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_SECTION reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_READONLY reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_READNONE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_OPTSIZE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_OPTNONE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_NOUNWIND reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_NORETURN reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_NOREDZONE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_NOINLINE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_NODUPLICATE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_NOBUILTIN reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_NAKED reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_MINSIZE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_JUMPTABLE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_INLINEHINT reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_GC reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_COLD reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_BUILTIN reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_ALIGN reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On KW_ADDRSPACE reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On EOL reduce production fn_attr -> KW_SANITIZE_ADDRESS
-- On ATTR_GRP_ID reduce production fn_attr -> KW_SANITIZE_ADDRESS

State 170:
## Known stack suffix:
## KW_RETURNS_TWICE
## LR(1) items:
fn_attr -> KW_RETURNS_TWICE . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_RETURNS_TWICE
-- On RCURLY reduce production fn_attr -> KW_RETURNS_TWICE
-- On LCURLY reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_UWTABLE reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_TO reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_SSPSTRONG reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_SSPREQ reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_SSP reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_SECTION reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_READONLY reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_READNONE reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_OPTSIZE reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_OPTNONE reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_NOUNWIND reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_NORETURN reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_NOREDZONE reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_NOINLINE reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_NODUPLICATE reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_NOBUILTIN reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_NAKED reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_MINSIZE reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_JUMPTABLE reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_INLINEHINT reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_GC reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_COLD reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_BUILTIN reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_ALIGN reduce production fn_attr -> KW_RETURNS_TWICE
-- On KW_ADDRSPACE reduce production fn_attr -> KW_RETURNS_TWICE
-- On EOL reduce production fn_attr -> KW_RETURNS_TWICE
-- On ATTR_GRP_ID reduce production fn_attr -> KW_RETURNS_TWICE

State 171:
## Known stack suffix:
## KW_READONLY
## LR(1) items:
fn_attr -> KW_READONLY . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_READONLY
-- On RCURLY reduce production fn_attr -> KW_READONLY
-- On LCURLY reduce production fn_attr -> KW_READONLY
-- On KW_UWTABLE reduce production fn_attr -> KW_READONLY
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_READONLY
-- On KW_TO reduce production fn_attr -> KW_READONLY
-- On KW_SSPSTRONG reduce production fn_attr -> KW_READONLY
-- On KW_SSPREQ reduce production fn_attr -> KW_READONLY
-- On KW_SSP reduce production fn_attr -> KW_READONLY
-- On KW_SECTION reduce production fn_attr -> KW_READONLY
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_READONLY
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_READONLY
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_READONLY
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_READONLY
-- On KW_READONLY reduce production fn_attr -> KW_READONLY
-- On KW_READNONE reduce production fn_attr -> KW_READONLY
-- On KW_OPTSIZE reduce production fn_attr -> KW_READONLY
-- On KW_OPTNONE reduce production fn_attr -> KW_READONLY
-- On KW_NOUNWIND reduce production fn_attr -> KW_READONLY
-- On KW_NORETURN reduce production fn_attr -> KW_READONLY
-- On KW_NOREDZONE reduce production fn_attr -> KW_READONLY
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_READONLY
-- On KW_NOINLINE reduce production fn_attr -> KW_READONLY
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_READONLY
-- On KW_NODUPLICATE reduce production fn_attr -> KW_READONLY
-- On KW_NOBUILTIN reduce production fn_attr -> KW_READONLY
-- On KW_NAKED reduce production fn_attr -> KW_READONLY
-- On KW_MINSIZE reduce production fn_attr -> KW_READONLY
-- On KW_JUMPTABLE reduce production fn_attr -> KW_READONLY
-- On KW_INLINEHINT reduce production fn_attr -> KW_READONLY
-- On KW_GC reduce production fn_attr -> KW_READONLY
-- On KW_COLD reduce production fn_attr -> KW_READONLY
-- On KW_BUILTIN reduce production fn_attr -> KW_READONLY
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_READONLY
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_READONLY
-- On KW_ALIGN reduce production fn_attr -> KW_READONLY
-- On KW_ADDRSPACE reduce production fn_attr -> KW_READONLY
-- On EOL reduce production fn_attr -> KW_READONLY
-- On ATTR_GRP_ID reduce production fn_attr -> KW_READONLY

State 172:
## Known stack suffix:
## KW_READNONE
## LR(1) items:
fn_attr -> KW_READNONE . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_READNONE
-- On RCURLY reduce production fn_attr -> KW_READNONE
-- On LCURLY reduce production fn_attr -> KW_READNONE
-- On KW_UWTABLE reduce production fn_attr -> KW_READNONE
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_READNONE
-- On KW_TO reduce production fn_attr -> KW_READNONE
-- On KW_SSPSTRONG reduce production fn_attr -> KW_READNONE
-- On KW_SSPREQ reduce production fn_attr -> KW_READNONE
-- On KW_SSP reduce production fn_attr -> KW_READNONE
-- On KW_SECTION reduce production fn_attr -> KW_READNONE
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_READNONE
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_READNONE
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_READNONE
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_READNONE
-- On KW_READONLY reduce production fn_attr -> KW_READNONE
-- On KW_READNONE reduce production fn_attr -> KW_READNONE
-- On KW_OPTSIZE reduce production fn_attr -> KW_READNONE
-- On KW_OPTNONE reduce production fn_attr -> KW_READNONE
-- On KW_NOUNWIND reduce production fn_attr -> KW_READNONE
-- On KW_NORETURN reduce production fn_attr -> KW_READNONE
-- On KW_NOREDZONE reduce production fn_attr -> KW_READNONE
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_READNONE
-- On KW_NOINLINE reduce production fn_attr -> KW_READNONE
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_READNONE
-- On KW_NODUPLICATE reduce production fn_attr -> KW_READNONE
-- On KW_NOBUILTIN reduce production fn_attr -> KW_READNONE
-- On KW_NAKED reduce production fn_attr -> KW_READNONE
-- On KW_MINSIZE reduce production fn_attr -> KW_READNONE
-- On KW_JUMPTABLE reduce production fn_attr -> KW_READNONE
-- On KW_INLINEHINT reduce production fn_attr -> KW_READNONE
-- On KW_GC reduce production fn_attr -> KW_READNONE
-- On KW_COLD reduce production fn_attr -> KW_READNONE
-- On KW_BUILTIN reduce production fn_attr -> KW_READNONE
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_READNONE
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_READNONE
-- On KW_ALIGN reduce production fn_attr -> KW_READNONE
-- On KW_ADDRSPACE reduce production fn_attr -> KW_READNONE
-- On EOL reduce production fn_attr -> KW_READNONE
-- On ATTR_GRP_ID reduce production fn_attr -> KW_READNONE

State 173:
## Known stack suffix:
## KW_OPTSIZE
## LR(1) items:
fn_attr -> KW_OPTSIZE . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_OPTSIZE
-- On RCURLY reduce production fn_attr -> KW_OPTSIZE
-- On LCURLY reduce production fn_attr -> KW_OPTSIZE
-- On KW_UWTABLE reduce production fn_attr -> KW_OPTSIZE
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_OPTSIZE
-- On KW_TO reduce production fn_attr -> KW_OPTSIZE
-- On KW_SSPSTRONG reduce production fn_attr -> KW_OPTSIZE
-- On KW_SSPREQ reduce production fn_attr -> KW_OPTSIZE
-- On KW_SSP reduce production fn_attr -> KW_OPTSIZE
-- On KW_SECTION reduce production fn_attr -> KW_OPTSIZE
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_OPTSIZE
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_OPTSIZE
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_OPTSIZE
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_OPTSIZE
-- On KW_READONLY reduce production fn_attr -> KW_OPTSIZE
-- On KW_READNONE reduce production fn_attr -> KW_OPTSIZE
-- On KW_OPTSIZE reduce production fn_attr -> KW_OPTSIZE
-- On KW_OPTNONE reduce production fn_attr -> KW_OPTSIZE
-- On KW_NOUNWIND reduce production fn_attr -> KW_OPTSIZE
-- On KW_NORETURN reduce production fn_attr -> KW_OPTSIZE
-- On KW_NOREDZONE reduce production fn_attr -> KW_OPTSIZE
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_OPTSIZE
-- On KW_NOINLINE reduce production fn_attr -> KW_OPTSIZE
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_OPTSIZE
-- On KW_NODUPLICATE reduce production fn_attr -> KW_OPTSIZE
-- On KW_NOBUILTIN reduce production fn_attr -> KW_OPTSIZE
-- On KW_NAKED reduce production fn_attr -> KW_OPTSIZE
-- On KW_MINSIZE reduce production fn_attr -> KW_OPTSIZE
-- On KW_JUMPTABLE reduce production fn_attr -> KW_OPTSIZE
-- On KW_INLINEHINT reduce production fn_attr -> KW_OPTSIZE
-- On KW_GC reduce production fn_attr -> KW_OPTSIZE
-- On KW_COLD reduce production fn_attr -> KW_OPTSIZE
-- On KW_BUILTIN reduce production fn_attr -> KW_OPTSIZE
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_OPTSIZE
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_OPTSIZE
-- On KW_ALIGN reduce production fn_attr -> KW_OPTSIZE
-- On KW_ADDRSPACE reduce production fn_attr -> KW_OPTSIZE
-- On EOL reduce production fn_attr -> KW_OPTSIZE
-- On ATTR_GRP_ID reduce production fn_attr -> KW_OPTSIZE

State 174:
## Known stack suffix:
## KW_OPTNONE
## LR(1) items:
fn_attr -> KW_OPTNONE . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_OPTNONE
-- On RCURLY reduce production fn_attr -> KW_OPTNONE
-- On LCURLY reduce production fn_attr -> KW_OPTNONE
-- On KW_UWTABLE reduce production fn_attr -> KW_OPTNONE
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_OPTNONE
-- On KW_TO reduce production fn_attr -> KW_OPTNONE
-- On KW_SSPSTRONG reduce production fn_attr -> KW_OPTNONE
-- On KW_SSPREQ reduce production fn_attr -> KW_OPTNONE
-- On KW_SSP reduce production fn_attr -> KW_OPTNONE
-- On KW_SECTION reduce production fn_attr -> KW_OPTNONE
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_OPTNONE
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_OPTNONE
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_OPTNONE
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_OPTNONE
-- On KW_READONLY reduce production fn_attr -> KW_OPTNONE
-- On KW_READNONE reduce production fn_attr -> KW_OPTNONE
-- On KW_OPTSIZE reduce production fn_attr -> KW_OPTNONE
-- On KW_OPTNONE reduce production fn_attr -> KW_OPTNONE
-- On KW_NOUNWIND reduce production fn_attr -> KW_OPTNONE
-- On KW_NORETURN reduce production fn_attr -> KW_OPTNONE
-- On KW_NOREDZONE reduce production fn_attr -> KW_OPTNONE
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_OPTNONE
-- On KW_NOINLINE reduce production fn_attr -> KW_OPTNONE
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_OPTNONE
-- On KW_NODUPLICATE reduce production fn_attr -> KW_OPTNONE
-- On KW_NOBUILTIN reduce production fn_attr -> KW_OPTNONE
-- On KW_NAKED reduce production fn_attr -> KW_OPTNONE
-- On KW_MINSIZE reduce production fn_attr -> KW_OPTNONE
-- On KW_JUMPTABLE reduce production fn_attr -> KW_OPTNONE
-- On KW_INLINEHINT reduce production fn_attr -> KW_OPTNONE
-- On KW_GC reduce production fn_attr -> KW_OPTNONE
-- On KW_COLD reduce production fn_attr -> KW_OPTNONE
-- On KW_BUILTIN reduce production fn_attr -> KW_OPTNONE
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_OPTNONE
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_OPTNONE
-- On KW_ALIGN reduce production fn_attr -> KW_OPTNONE
-- On KW_ADDRSPACE reduce production fn_attr -> KW_OPTNONE
-- On EOL reduce production fn_attr -> KW_OPTNONE
-- On ATTR_GRP_ID reduce production fn_attr -> KW_OPTNONE

State 175:
## Known stack suffix:
## KW_NOUNWIND
## LR(1) items:
fn_attr -> KW_NOUNWIND . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_NOUNWIND
-- On RCURLY reduce production fn_attr -> KW_NOUNWIND
-- On LCURLY reduce production fn_attr -> KW_NOUNWIND
-- On KW_UWTABLE reduce production fn_attr -> KW_NOUNWIND
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_NOUNWIND
-- On KW_TO reduce production fn_attr -> KW_NOUNWIND
-- On KW_SSPSTRONG reduce production fn_attr -> KW_NOUNWIND
-- On KW_SSPREQ reduce production fn_attr -> KW_NOUNWIND
-- On KW_SSP reduce production fn_attr -> KW_NOUNWIND
-- On KW_SECTION reduce production fn_attr -> KW_NOUNWIND
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_NOUNWIND
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_NOUNWIND
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_NOUNWIND
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_NOUNWIND
-- On KW_READONLY reduce production fn_attr -> KW_NOUNWIND
-- On KW_READNONE reduce production fn_attr -> KW_NOUNWIND
-- On KW_OPTSIZE reduce production fn_attr -> KW_NOUNWIND
-- On KW_OPTNONE reduce production fn_attr -> KW_NOUNWIND
-- On KW_NOUNWIND reduce production fn_attr -> KW_NOUNWIND
-- On KW_NORETURN reduce production fn_attr -> KW_NOUNWIND
-- On KW_NOREDZONE reduce production fn_attr -> KW_NOUNWIND
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_NOUNWIND
-- On KW_NOINLINE reduce production fn_attr -> KW_NOUNWIND
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_NOUNWIND
-- On KW_NODUPLICATE reduce production fn_attr -> KW_NOUNWIND
-- On KW_NOBUILTIN reduce production fn_attr -> KW_NOUNWIND
-- On KW_NAKED reduce production fn_attr -> KW_NOUNWIND
-- On KW_MINSIZE reduce production fn_attr -> KW_NOUNWIND
-- On KW_JUMPTABLE reduce production fn_attr -> KW_NOUNWIND
-- On KW_INLINEHINT reduce production fn_attr -> KW_NOUNWIND
-- On KW_GC reduce production fn_attr -> KW_NOUNWIND
-- On KW_COLD reduce production fn_attr -> KW_NOUNWIND
-- On KW_BUILTIN reduce production fn_attr -> KW_NOUNWIND
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_NOUNWIND
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_NOUNWIND
-- On KW_ALIGN reduce production fn_attr -> KW_NOUNWIND
-- On KW_ADDRSPACE reduce production fn_attr -> KW_NOUNWIND
-- On EOL reduce production fn_attr -> KW_NOUNWIND
-- On ATTR_GRP_ID reduce production fn_attr -> KW_NOUNWIND

State 176:
## Known stack suffix:
## KW_NORETURN
## LR(1) items:
fn_attr -> KW_NORETURN . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_NORETURN
-- On RCURLY reduce production fn_attr -> KW_NORETURN
-- On LCURLY reduce production fn_attr -> KW_NORETURN
-- On KW_UWTABLE reduce production fn_attr -> KW_NORETURN
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_NORETURN
-- On KW_TO reduce production fn_attr -> KW_NORETURN
-- On KW_SSPSTRONG reduce production fn_attr -> KW_NORETURN
-- On KW_SSPREQ reduce production fn_attr -> KW_NORETURN
-- On KW_SSP reduce production fn_attr -> KW_NORETURN
-- On KW_SECTION reduce production fn_attr -> KW_NORETURN
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_NORETURN
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_NORETURN
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_NORETURN
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_NORETURN
-- On KW_READONLY reduce production fn_attr -> KW_NORETURN
-- On KW_READNONE reduce production fn_attr -> KW_NORETURN
-- On KW_OPTSIZE reduce production fn_attr -> KW_NORETURN
-- On KW_OPTNONE reduce production fn_attr -> KW_NORETURN
-- On KW_NOUNWIND reduce production fn_attr -> KW_NORETURN
-- On KW_NORETURN reduce production fn_attr -> KW_NORETURN
-- On KW_NOREDZONE reduce production fn_attr -> KW_NORETURN
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_NORETURN
-- On KW_NOINLINE reduce production fn_attr -> KW_NORETURN
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_NORETURN
-- On KW_NODUPLICATE reduce production fn_attr -> KW_NORETURN
-- On KW_NOBUILTIN reduce production fn_attr -> KW_NORETURN
-- On KW_NAKED reduce production fn_attr -> KW_NORETURN
-- On KW_MINSIZE reduce production fn_attr -> KW_NORETURN
-- On KW_JUMPTABLE reduce production fn_attr -> KW_NORETURN
-- On KW_INLINEHINT reduce production fn_attr -> KW_NORETURN
-- On KW_GC reduce production fn_attr -> KW_NORETURN
-- On KW_COLD reduce production fn_attr -> KW_NORETURN
-- On KW_BUILTIN reduce production fn_attr -> KW_NORETURN
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_NORETURN
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_NORETURN
-- On KW_ALIGN reduce production fn_attr -> KW_NORETURN
-- On KW_ADDRSPACE reduce production fn_attr -> KW_NORETURN
-- On EOL reduce production fn_attr -> KW_NORETURN
-- On ATTR_GRP_ID reduce production fn_attr -> KW_NORETURN

State 177:
## Known stack suffix:
## KW_NOREDZONE
## LR(1) items:
fn_attr -> KW_NOREDZONE . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_NOREDZONE
-- On RCURLY reduce production fn_attr -> KW_NOREDZONE
-- On LCURLY reduce production fn_attr -> KW_NOREDZONE
-- On KW_UWTABLE reduce production fn_attr -> KW_NOREDZONE
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_NOREDZONE
-- On KW_TO reduce production fn_attr -> KW_NOREDZONE
-- On KW_SSPSTRONG reduce production fn_attr -> KW_NOREDZONE
-- On KW_SSPREQ reduce production fn_attr -> KW_NOREDZONE
-- On KW_SSP reduce production fn_attr -> KW_NOREDZONE
-- On KW_SECTION reduce production fn_attr -> KW_NOREDZONE
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_NOREDZONE
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_NOREDZONE
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_NOREDZONE
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_NOREDZONE
-- On KW_READONLY reduce production fn_attr -> KW_NOREDZONE
-- On KW_READNONE reduce production fn_attr -> KW_NOREDZONE
-- On KW_OPTSIZE reduce production fn_attr -> KW_NOREDZONE
-- On KW_OPTNONE reduce production fn_attr -> KW_NOREDZONE
-- On KW_NOUNWIND reduce production fn_attr -> KW_NOREDZONE
-- On KW_NORETURN reduce production fn_attr -> KW_NOREDZONE
-- On KW_NOREDZONE reduce production fn_attr -> KW_NOREDZONE
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_NOREDZONE
-- On KW_NOINLINE reduce production fn_attr -> KW_NOREDZONE
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_NOREDZONE
-- On KW_NODUPLICATE reduce production fn_attr -> KW_NOREDZONE
-- On KW_NOBUILTIN reduce production fn_attr -> KW_NOREDZONE
-- On KW_NAKED reduce production fn_attr -> KW_NOREDZONE
-- On KW_MINSIZE reduce production fn_attr -> KW_NOREDZONE
-- On KW_JUMPTABLE reduce production fn_attr -> KW_NOREDZONE
-- On KW_INLINEHINT reduce production fn_attr -> KW_NOREDZONE
-- On KW_GC reduce production fn_attr -> KW_NOREDZONE
-- On KW_COLD reduce production fn_attr -> KW_NOREDZONE
-- On KW_BUILTIN reduce production fn_attr -> KW_NOREDZONE
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_NOREDZONE
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_NOREDZONE
-- On KW_ALIGN reduce production fn_attr -> KW_NOREDZONE
-- On KW_ADDRSPACE reduce production fn_attr -> KW_NOREDZONE
-- On EOL reduce production fn_attr -> KW_NOREDZONE
-- On ATTR_GRP_ID reduce production fn_attr -> KW_NOREDZONE

State 178:
## Known stack suffix:
## KW_NONLAZYBIND
## LR(1) items:
fn_attr -> KW_NONLAZYBIND . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_NONLAZYBIND
-- On RCURLY reduce production fn_attr -> KW_NONLAZYBIND
-- On LCURLY reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_UWTABLE reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_TO reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_SSPSTRONG reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_SSPREQ reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_SSP reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_SECTION reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_READONLY reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_READNONE reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_OPTSIZE reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_OPTNONE reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_NOUNWIND reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_NORETURN reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_NOREDZONE reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_NOINLINE reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_NODUPLICATE reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_NOBUILTIN reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_NAKED reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_MINSIZE reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_JUMPTABLE reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_INLINEHINT reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_GC reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_COLD reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_BUILTIN reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_ALIGN reduce production fn_attr -> KW_NONLAZYBIND
-- On KW_ADDRSPACE reduce production fn_attr -> KW_NONLAZYBIND
-- On EOL reduce production fn_attr -> KW_NONLAZYBIND
-- On ATTR_GRP_ID reduce production fn_attr -> KW_NONLAZYBIND

State 179:
## Known stack suffix:
## KW_NOINLINE
## LR(1) items:
fn_attr -> KW_NOINLINE . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_NOINLINE
-- On RCURLY reduce production fn_attr -> KW_NOINLINE
-- On LCURLY reduce production fn_attr -> KW_NOINLINE
-- On KW_UWTABLE reduce production fn_attr -> KW_NOINLINE
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_NOINLINE
-- On KW_TO reduce production fn_attr -> KW_NOINLINE
-- On KW_SSPSTRONG reduce production fn_attr -> KW_NOINLINE
-- On KW_SSPREQ reduce production fn_attr -> KW_NOINLINE
-- On KW_SSP reduce production fn_attr -> KW_NOINLINE
-- On KW_SECTION reduce production fn_attr -> KW_NOINLINE
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_NOINLINE
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_NOINLINE
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_NOINLINE
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_NOINLINE
-- On KW_READONLY reduce production fn_attr -> KW_NOINLINE
-- On KW_READNONE reduce production fn_attr -> KW_NOINLINE
-- On KW_OPTSIZE reduce production fn_attr -> KW_NOINLINE
-- On KW_OPTNONE reduce production fn_attr -> KW_NOINLINE
-- On KW_NOUNWIND reduce production fn_attr -> KW_NOINLINE
-- On KW_NORETURN reduce production fn_attr -> KW_NOINLINE
-- On KW_NOREDZONE reduce production fn_attr -> KW_NOINLINE
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_NOINLINE
-- On KW_NOINLINE reduce production fn_attr -> KW_NOINLINE
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_NOINLINE
-- On KW_NODUPLICATE reduce production fn_attr -> KW_NOINLINE
-- On KW_NOBUILTIN reduce production fn_attr -> KW_NOINLINE
-- On KW_NAKED reduce production fn_attr -> KW_NOINLINE
-- On KW_MINSIZE reduce production fn_attr -> KW_NOINLINE
-- On KW_JUMPTABLE reduce production fn_attr -> KW_NOINLINE
-- On KW_INLINEHINT reduce production fn_attr -> KW_NOINLINE
-- On KW_GC reduce production fn_attr -> KW_NOINLINE
-- On KW_COLD reduce production fn_attr -> KW_NOINLINE
-- On KW_BUILTIN reduce production fn_attr -> KW_NOINLINE
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_NOINLINE
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_NOINLINE
-- On KW_ALIGN reduce production fn_attr -> KW_NOINLINE
-- On KW_ADDRSPACE reduce production fn_attr -> KW_NOINLINE
-- On EOL reduce production fn_attr -> KW_NOINLINE
-- On ATTR_GRP_ID reduce production fn_attr -> KW_NOINLINE

State 180:
## Known stack suffix:
## KW_NOIMPLICITFLOAT
## LR(1) items:
fn_attr -> KW_NOIMPLICITFLOAT . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On RCURLY reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On LCURLY reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_UWTABLE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_TO reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_SSPSTRONG reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_SSPREQ reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_SSP reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_SECTION reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_READONLY reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_READNONE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_OPTSIZE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_OPTNONE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_NOUNWIND reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_NORETURN reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_NOREDZONE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_NOINLINE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_NODUPLICATE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_NOBUILTIN reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_NAKED reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_MINSIZE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_JUMPTABLE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_INLINEHINT reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_GC reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_COLD reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_BUILTIN reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_ALIGN reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On KW_ADDRSPACE reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On EOL reduce production fn_attr -> KW_NOIMPLICITFLOAT
-- On ATTR_GRP_ID reduce production fn_attr -> KW_NOIMPLICITFLOAT

State 181:
## Known stack suffix:
## KW_NODUPLICATE
## LR(1) items:
fn_attr -> KW_NODUPLICATE . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_NODUPLICATE
-- On RCURLY reduce production fn_attr -> KW_NODUPLICATE
-- On LCURLY reduce production fn_attr -> KW_NODUPLICATE
-- On KW_UWTABLE reduce production fn_attr -> KW_NODUPLICATE
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_NODUPLICATE
-- On KW_TO reduce production fn_attr -> KW_NODUPLICATE
-- On KW_SSPSTRONG reduce production fn_attr -> KW_NODUPLICATE
-- On KW_SSPREQ reduce production fn_attr -> KW_NODUPLICATE
-- On KW_SSP reduce production fn_attr -> KW_NODUPLICATE
-- On KW_SECTION reduce production fn_attr -> KW_NODUPLICATE
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_NODUPLICATE
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_NODUPLICATE
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_NODUPLICATE
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_NODUPLICATE
-- On KW_READONLY reduce production fn_attr -> KW_NODUPLICATE
-- On KW_READNONE reduce production fn_attr -> KW_NODUPLICATE
-- On KW_OPTSIZE reduce production fn_attr -> KW_NODUPLICATE
-- On KW_OPTNONE reduce production fn_attr -> KW_NODUPLICATE
-- On KW_NOUNWIND reduce production fn_attr -> KW_NODUPLICATE
-- On KW_NORETURN reduce production fn_attr -> KW_NODUPLICATE
-- On KW_NOREDZONE reduce production fn_attr -> KW_NODUPLICATE
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_NODUPLICATE
-- On KW_NOINLINE reduce production fn_attr -> KW_NODUPLICATE
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_NODUPLICATE
-- On KW_NODUPLICATE reduce production fn_attr -> KW_NODUPLICATE
-- On KW_NOBUILTIN reduce production fn_attr -> KW_NODUPLICATE
-- On KW_NAKED reduce production fn_attr -> KW_NODUPLICATE
-- On KW_MINSIZE reduce production fn_attr -> KW_NODUPLICATE
-- On KW_JUMPTABLE reduce production fn_attr -> KW_NODUPLICATE
-- On KW_INLINEHINT reduce production fn_attr -> KW_NODUPLICATE
-- On KW_GC reduce production fn_attr -> KW_NODUPLICATE
-- On KW_COLD reduce production fn_attr -> KW_NODUPLICATE
-- On KW_BUILTIN reduce production fn_attr -> KW_NODUPLICATE
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_NODUPLICATE
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_NODUPLICATE
-- On KW_ALIGN reduce production fn_attr -> KW_NODUPLICATE
-- On KW_ADDRSPACE reduce production fn_attr -> KW_NODUPLICATE
-- On EOL reduce production fn_attr -> KW_NODUPLICATE
-- On ATTR_GRP_ID reduce production fn_attr -> KW_NODUPLICATE

State 182:
## Known stack suffix:
## KW_NOBUILTIN
## LR(1) items:
fn_attr -> KW_NOBUILTIN . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_NOBUILTIN
-- On RCURLY reduce production fn_attr -> KW_NOBUILTIN
-- On LCURLY reduce production fn_attr -> KW_NOBUILTIN
-- On KW_UWTABLE reduce production fn_attr -> KW_NOBUILTIN
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_NOBUILTIN
-- On KW_TO reduce production fn_attr -> KW_NOBUILTIN
-- On KW_SSPSTRONG reduce production fn_attr -> KW_NOBUILTIN
-- On KW_SSPREQ reduce production fn_attr -> KW_NOBUILTIN
-- On KW_SSP reduce production fn_attr -> KW_NOBUILTIN
-- On KW_SECTION reduce production fn_attr -> KW_NOBUILTIN
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_NOBUILTIN
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_NOBUILTIN
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_NOBUILTIN
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_NOBUILTIN
-- On KW_READONLY reduce production fn_attr -> KW_NOBUILTIN
-- On KW_READNONE reduce production fn_attr -> KW_NOBUILTIN
-- On KW_OPTSIZE reduce production fn_attr -> KW_NOBUILTIN
-- On KW_OPTNONE reduce production fn_attr -> KW_NOBUILTIN
-- On KW_NOUNWIND reduce production fn_attr -> KW_NOBUILTIN
-- On KW_NORETURN reduce production fn_attr -> KW_NOBUILTIN
-- On KW_NOREDZONE reduce production fn_attr -> KW_NOBUILTIN
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_NOBUILTIN
-- On KW_NOINLINE reduce production fn_attr -> KW_NOBUILTIN
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_NOBUILTIN
-- On KW_NODUPLICATE reduce production fn_attr -> KW_NOBUILTIN
-- On KW_NOBUILTIN reduce production fn_attr -> KW_NOBUILTIN
-- On KW_NAKED reduce production fn_attr -> KW_NOBUILTIN
-- On KW_MINSIZE reduce production fn_attr -> KW_NOBUILTIN
-- On KW_JUMPTABLE reduce production fn_attr -> KW_NOBUILTIN
-- On KW_INLINEHINT reduce production fn_attr -> KW_NOBUILTIN
-- On KW_GC reduce production fn_attr -> KW_NOBUILTIN
-- On KW_COLD reduce production fn_attr -> KW_NOBUILTIN
-- On KW_BUILTIN reduce production fn_attr -> KW_NOBUILTIN
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_NOBUILTIN
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_NOBUILTIN
-- On KW_ALIGN reduce production fn_attr -> KW_NOBUILTIN
-- On KW_ADDRSPACE reduce production fn_attr -> KW_NOBUILTIN
-- On EOL reduce production fn_attr -> KW_NOBUILTIN
-- On ATTR_GRP_ID reduce production fn_attr -> KW_NOBUILTIN

State 183:
## Known stack suffix:
## KW_NAKED
## LR(1) items:
fn_attr -> KW_NAKED . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_NAKED
-- On RCURLY reduce production fn_attr -> KW_NAKED
-- On LCURLY reduce production fn_attr -> KW_NAKED
-- On KW_UWTABLE reduce production fn_attr -> KW_NAKED
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_NAKED
-- On KW_TO reduce production fn_attr -> KW_NAKED
-- On KW_SSPSTRONG reduce production fn_attr -> KW_NAKED
-- On KW_SSPREQ reduce production fn_attr -> KW_NAKED
-- On KW_SSP reduce production fn_attr -> KW_NAKED
-- On KW_SECTION reduce production fn_attr -> KW_NAKED
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_NAKED
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_NAKED
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_NAKED
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_NAKED
-- On KW_READONLY reduce production fn_attr -> KW_NAKED
-- On KW_READNONE reduce production fn_attr -> KW_NAKED
-- On KW_OPTSIZE reduce production fn_attr -> KW_NAKED
-- On KW_OPTNONE reduce production fn_attr -> KW_NAKED
-- On KW_NOUNWIND reduce production fn_attr -> KW_NAKED
-- On KW_NORETURN reduce production fn_attr -> KW_NAKED
-- On KW_NOREDZONE reduce production fn_attr -> KW_NAKED
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_NAKED
-- On KW_NOINLINE reduce production fn_attr -> KW_NAKED
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_NAKED
-- On KW_NODUPLICATE reduce production fn_attr -> KW_NAKED
-- On KW_NOBUILTIN reduce production fn_attr -> KW_NAKED
-- On KW_NAKED reduce production fn_attr -> KW_NAKED
-- On KW_MINSIZE reduce production fn_attr -> KW_NAKED
-- On KW_JUMPTABLE reduce production fn_attr -> KW_NAKED
-- On KW_INLINEHINT reduce production fn_attr -> KW_NAKED
-- On KW_GC reduce production fn_attr -> KW_NAKED
-- On KW_COLD reduce production fn_attr -> KW_NAKED
-- On KW_BUILTIN reduce production fn_attr -> KW_NAKED
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_NAKED
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_NAKED
-- On KW_ALIGN reduce production fn_attr -> KW_NAKED
-- On KW_ADDRSPACE reduce production fn_attr -> KW_NAKED
-- On EOL reduce production fn_attr -> KW_NAKED
-- On ATTR_GRP_ID reduce production fn_attr -> KW_NAKED

State 184:
## Known stack suffix:
## KW_MINSIZE
## LR(1) items:
fn_attr -> KW_MINSIZE . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_MINSIZE
-- On RCURLY reduce production fn_attr -> KW_MINSIZE
-- On LCURLY reduce production fn_attr -> KW_MINSIZE
-- On KW_UWTABLE reduce production fn_attr -> KW_MINSIZE
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_MINSIZE
-- On KW_TO reduce production fn_attr -> KW_MINSIZE
-- On KW_SSPSTRONG reduce production fn_attr -> KW_MINSIZE
-- On KW_SSPREQ reduce production fn_attr -> KW_MINSIZE
-- On KW_SSP reduce production fn_attr -> KW_MINSIZE
-- On KW_SECTION reduce production fn_attr -> KW_MINSIZE
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_MINSIZE
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_MINSIZE
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_MINSIZE
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_MINSIZE
-- On KW_READONLY reduce production fn_attr -> KW_MINSIZE
-- On KW_READNONE reduce production fn_attr -> KW_MINSIZE
-- On KW_OPTSIZE reduce production fn_attr -> KW_MINSIZE
-- On KW_OPTNONE reduce production fn_attr -> KW_MINSIZE
-- On KW_NOUNWIND reduce production fn_attr -> KW_MINSIZE
-- On KW_NORETURN reduce production fn_attr -> KW_MINSIZE
-- On KW_NOREDZONE reduce production fn_attr -> KW_MINSIZE
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_MINSIZE
-- On KW_NOINLINE reduce production fn_attr -> KW_MINSIZE
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_MINSIZE
-- On KW_NODUPLICATE reduce production fn_attr -> KW_MINSIZE
-- On KW_NOBUILTIN reduce production fn_attr -> KW_MINSIZE
-- On KW_NAKED reduce production fn_attr -> KW_MINSIZE
-- On KW_MINSIZE reduce production fn_attr -> KW_MINSIZE
-- On KW_JUMPTABLE reduce production fn_attr -> KW_MINSIZE
-- On KW_INLINEHINT reduce production fn_attr -> KW_MINSIZE
-- On KW_GC reduce production fn_attr -> KW_MINSIZE
-- On KW_COLD reduce production fn_attr -> KW_MINSIZE
-- On KW_BUILTIN reduce production fn_attr -> KW_MINSIZE
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_MINSIZE
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_MINSIZE
-- On KW_ALIGN reduce production fn_attr -> KW_MINSIZE
-- On KW_ADDRSPACE reduce production fn_attr -> KW_MINSIZE
-- On EOL reduce production fn_attr -> KW_MINSIZE
-- On ATTR_GRP_ID reduce production fn_attr -> KW_MINSIZE

State 185:
## Known stack suffix:
## KW_JUMPTABLE
## LR(1) items:
fn_attr -> KW_JUMPTABLE . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_JUMPTABLE
-- On RCURLY reduce production fn_attr -> KW_JUMPTABLE
-- On LCURLY reduce production fn_attr -> KW_JUMPTABLE
-- On KW_UWTABLE reduce production fn_attr -> KW_JUMPTABLE
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_JUMPTABLE
-- On KW_TO reduce production fn_attr -> KW_JUMPTABLE
-- On KW_SSPSTRONG reduce production fn_attr -> KW_JUMPTABLE
-- On KW_SSPREQ reduce production fn_attr -> KW_JUMPTABLE
-- On KW_SSP reduce production fn_attr -> KW_JUMPTABLE
-- On KW_SECTION reduce production fn_attr -> KW_JUMPTABLE
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_JUMPTABLE
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_JUMPTABLE
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_JUMPTABLE
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_JUMPTABLE
-- On KW_READONLY reduce production fn_attr -> KW_JUMPTABLE
-- On KW_READNONE reduce production fn_attr -> KW_JUMPTABLE
-- On KW_OPTSIZE reduce production fn_attr -> KW_JUMPTABLE
-- On KW_OPTNONE reduce production fn_attr -> KW_JUMPTABLE
-- On KW_NOUNWIND reduce production fn_attr -> KW_JUMPTABLE
-- On KW_NORETURN reduce production fn_attr -> KW_JUMPTABLE
-- On KW_NOREDZONE reduce production fn_attr -> KW_JUMPTABLE
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_JUMPTABLE
-- On KW_NOINLINE reduce production fn_attr -> KW_JUMPTABLE
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_JUMPTABLE
-- On KW_NODUPLICATE reduce production fn_attr -> KW_JUMPTABLE
-- On KW_NOBUILTIN reduce production fn_attr -> KW_JUMPTABLE
-- On KW_NAKED reduce production fn_attr -> KW_JUMPTABLE
-- On KW_MINSIZE reduce production fn_attr -> KW_JUMPTABLE
-- On KW_JUMPTABLE reduce production fn_attr -> KW_JUMPTABLE
-- On KW_INLINEHINT reduce production fn_attr -> KW_JUMPTABLE
-- On KW_GC reduce production fn_attr -> KW_JUMPTABLE
-- On KW_COLD reduce production fn_attr -> KW_JUMPTABLE
-- On KW_BUILTIN reduce production fn_attr -> KW_JUMPTABLE
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_JUMPTABLE
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_JUMPTABLE
-- On KW_ALIGN reduce production fn_attr -> KW_JUMPTABLE
-- On KW_ADDRSPACE reduce production fn_attr -> KW_JUMPTABLE
-- On EOL reduce production fn_attr -> KW_JUMPTABLE
-- On ATTR_GRP_ID reduce production fn_attr -> KW_JUMPTABLE

State 186:
## Known stack suffix:
## KW_INLINEHINT
## LR(1) items:
fn_attr -> KW_INLINEHINT . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_INLINEHINT
-- On RCURLY reduce production fn_attr -> KW_INLINEHINT
-- On LCURLY reduce production fn_attr -> KW_INLINEHINT
-- On KW_UWTABLE reduce production fn_attr -> KW_INLINEHINT
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_INLINEHINT
-- On KW_TO reduce production fn_attr -> KW_INLINEHINT
-- On KW_SSPSTRONG reduce production fn_attr -> KW_INLINEHINT
-- On KW_SSPREQ reduce production fn_attr -> KW_INLINEHINT
-- On KW_SSP reduce production fn_attr -> KW_INLINEHINT
-- On KW_SECTION reduce production fn_attr -> KW_INLINEHINT
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_INLINEHINT
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_INLINEHINT
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_INLINEHINT
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_INLINEHINT
-- On KW_READONLY reduce production fn_attr -> KW_INLINEHINT
-- On KW_READNONE reduce production fn_attr -> KW_INLINEHINT
-- On KW_OPTSIZE reduce production fn_attr -> KW_INLINEHINT
-- On KW_OPTNONE reduce production fn_attr -> KW_INLINEHINT
-- On KW_NOUNWIND reduce production fn_attr -> KW_INLINEHINT
-- On KW_NORETURN reduce production fn_attr -> KW_INLINEHINT
-- On KW_NOREDZONE reduce production fn_attr -> KW_INLINEHINT
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_INLINEHINT
-- On KW_NOINLINE reduce production fn_attr -> KW_INLINEHINT
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_INLINEHINT
-- On KW_NODUPLICATE reduce production fn_attr -> KW_INLINEHINT
-- On KW_NOBUILTIN reduce production fn_attr -> KW_INLINEHINT
-- On KW_NAKED reduce production fn_attr -> KW_INLINEHINT
-- On KW_MINSIZE reduce production fn_attr -> KW_INLINEHINT
-- On KW_JUMPTABLE reduce production fn_attr -> KW_INLINEHINT
-- On KW_INLINEHINT reduce production fn_attr -> KW_INLINEHINT
-- On KW_GC reduce production fn_attr -> KW_INLINEHINT
-- On KW_COLD reduce production fn_attr -> KW_INLINEHINT
-- On KW_BUILTIN reduce production fn_attr -> KW_INLINEHINT
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_INLINEHINT
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_INLINEHINT
-- On KW_ALIGN reduce production fn_attr -> KW_INLINEHINT
-- On KW_ADDRSPACE reduce production fn_attr -> KW_INLINEHINT
-- On EOL reduce production fn_attr -> KW_INLINEHINT
-- On ATTR_GRP_ID reduce production fn_attr -> KW_INLINEHINT

State 187:
## Known stack suffix:
## KW_GC
## LR(1) items:
df_post_attr -> KW_GC . STRING [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On STRING shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## KW_GC STRING
## LR(1) items:
df_post_attr -> KW_GC STRING . [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production df_post_attr -> KW_GC STRING
-- On LCURLY reduce production df_post_attr -> KW_GC STRING
-- On KW_UWTABLE reduce production df_post_attr -> KW_GC STRING
-- On KW_UNNAMED_ADDR reduce production df_post_attr -> KW_GC STRING
-- On KW_SSPSTRONG reduce production df_post_attr -> KW_GC STRING
-- On KW_SSPREQ reduce production df_post_attr -> KW_GC STRING
-- On KW_SSP reduce production df_post_attr -> KW_GC STRING
-- On KW_SECTION reduce production df_post_attr -> KW_GC STRING
-- On KW_SANITIZE_THREAD reduce production df_post_attr -> KW_GC STRING
-- On KW_SANITIZE_MEMORY reduce production df_post_attr -> KW_GC STRING
-- On KW_SANITIZE_ADDRESS reduce production df_post_attr -> KW_GC STRING
-- On KW_RETURNS_TWICE reduce production df_post_attr -> KW_GC STRING
-- On KW_READONLY reduce production df_post_attr -> KW_GC STRING
-- On KW_READNONE reduce production df_post_attr -> KW_GC STRING
-- On KW_OPTSIZE reduce production df_post_attr -> KW_GC STRING
-- On KW_OPTNONE reduce production df_post_attr -> KW_GC STRING
-- On KW_NOUNWIND reduce production df_post_attr -> KW_GC STRING
-- On KW_NORETURN reduce production df_post_attr -> KW_GC STRING
-- On KW_NOREDZONE reduce production df_post_attr -> KW_GC STRING
-- On KW_NONLAZYBIND reduce production df_post_attr -> KW_GC STRING
-- On KW_NOINLINE reduce production df_post_attr -> KW_GC STRING
-- On KW_NOIMPLICITFLOAT reduce production df_post_attr -> KW_GC STRING
-- On KW_NODUPLICATE reduce production df_post_attr -> KW_GC STRING
-- On KW_NOBUILTIN reduce production df_post_attr -> KW_GC STRING
-- On KW_NAKED reduce production df_post_attr -> KW_GC STRING
-- On KW_MINSIZE reduce production df_post_attr -> KW_GC STRING
-- On KW_JUMPTABLE reduce production df_post_attr -> KW_GC STRING
-- On KW_INLINEHINT reduce production df_post_attr -> KW_GC STRING
-- On KW_GC reduce production df_post_attr -> KW_GC STRING
-- On KW_COLD reduce production df_post_attr -> KW_GC STRING
-- On KW_BUILTIN reduce production df_post_attr -> KW_GC STRING
-- On KW_ALWAYSINLINE reduce production df_post_attr -> KW_GC STRING
-- On KW_ALIGNSTACK reduce production df_post_attr -> KW_GC STRING
-- On KW_ALIGN reduce production df_post_attr -> KW_GC STRING
-- On KW_ADDRSPACE reduce production df_post_attr -> KW_GC STRING
-- On EOL reduce production df_post_attr -> KW_GC STRING
-- On ATTR_GRP_ID reduce production df_post_attr -> KW_GC STRING

State 189:
## Known stack suffix:
## KW_COLD
## LR(1) items:
fn_attr -> KW_COLD . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_COLD
-- On RCURLY reduce production fn_attr -> KW_COLD
-- On LCURLY reduce production fn_attr -> KW_COLD
-- On KW_UWTABLE reduce production fn_attr -> KW_COLD
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_COLD
-- On KW_TO reduce production fn_attr -> KW_COLD
-- On KW_SSPSTRONG reduce production fn_attr -> KW_COLD
-- On KW_SSPREQ reduce production fn_attr -> KW_COLD
-- On KW_SSP reduce production fn_attr -> KW_COLD
-- On KW_SECTION reduce production fn_attr -> KW_COLD
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_COLD
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_COLD
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_COLD
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_COLD
-- On KW_READONLY reduce production fn_attr -> KW_COLD
-- On KW_READNONE reduce production fn_attr -> KW_COLD
-- On KW_OPTSIZE reduce production fn_attr -> KW_COLD
-- On KW_OPTNONE reduce production fn_attr -> KW_COLD
-- On KW_NOUNWIND reduce production fn_attr -> KW_COLD
-- On KW_NORETURN reduce production fn_attr -> KW_COLD
-- On KW_NOREDZONE reduce production fn_attr -> KW_COLD
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_COLD
-- On KW_NOINLINE reduce production fn_attr -> KW_COLD
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_COLD
-- On KW_NODUPLICATE reduce production fn_attr -> KW_COLD
-- On KW_NOBUILTIN reduce production fn_attr -> KW_COLD
-- On KW_NAKED reduce production fn_attr -> KW_COLD
-- On KW_MINSIZE reduce production fn_attr -> KW_COLD
-- On KW_JUMPTABLE reduce production fn_attr -> KW_COLD
-- On KW_INLINEHINT reduce production fn_attr -> KW_COLD
-- On KW_GC reduce production fn_attr -> KW_COLD
-- On KW_COLD reduce production fn_attr -> KW_COLD
-- On KW_BUILTIN reduce production fn_attr -> KW_COLD
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_COLD
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_COLD
-- On KW_ALIGN reduce production fn_attr -> KW_COLD
-- On KW_ADDRSPACE reduce production fn_attr -> KW_COLD
-- On EOL reduce production fn_attr -> KW_COLD
-- On ATTR_GRP_ID reduce production fn_attr -> KW_COLD

State 190:
## Known stack suffix:
## KW_BUILTIN
## LR(1) items:
fn_attr -> KW_BUILTIN . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_BUILTIN
-- On RCURLY reduce production fn_attr -> KW_BUILTIN
-- On LCURLY reduce production fn_attr -> KW_BUILTIN
-- On KW_UWTABLE reduce production fn_attr -> KW_BUILTIN
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_BUILTIN
-- On KW_TO reduce production fn_attr -> KW_BUILTIN
-- On KW_SSPSTRONG reduce production fn_attr -> KW_BUILTIN
-- On KW_SSPREQ reduce production fn_attr -> KW_BUILTIN
-- On KW_SSP reduce production fn_attr -> KW_BUILTIN
-- On KW_SECTION reduce production fn_attr -> KW_BUILTIN
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_BUILTIN
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_BUILTIN
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_BUILTIN
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_BUILTIN
-- On KW_READONLY reduce production fn_attr -> KW_BUILTIN
-- On KW_READNONE reduce production fn_attr -> KW_BUILTIN
-- On KW_OPTSIZE reduce production fn_attr -> KW_BUILTIN
-- On KW_OPTNONE reduce production fn_attr -> KW_BUILTIN
-- On KW_NOUNWIND reduce production fn_attr -> KW_BUILTIN
-- On KW_NORETURN reduce production fn_attr -> KW_BUILTIN
-- On KW_NOREDZONE reduce production fn_attr -> KW_BUILTIN
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_BUILTIN
-- On KW_NOINLINE reduce production fn_attr -> KW_BUILTIN
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_BUILTIN
-- On KW_NODUPLICATE reduce production fn_attr -> KW_BUILTIN
-- On KW_NOBUILTIN reduce production fn_attr -> KW_BUILTIN
-- On KW_NAKED reduce production fn_attr -> KW_BUILTIN
-- On KW_MINSIZE reduce production fn_attr -> KW_BUILTIN
-- On KW_JUMPTABLE reduce production fn_attr -> KW_BUILTIN
-- On KW_INLINEHINT reduce production fn_attr -> KW_BUILTIN
-- On KW_GC reduce production fn_attr -> KW_BUILTIN
-- On KW_COLD reduce production fn_attr -> KW_BUILTIN
-- On KW_BUILTIN reduce production fn_attr -> KW_BUILTIN
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_BUILTIN
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_BUILTIN
-- On KW_ALIGN reduce production fn_attr -> KW_BUILTIN
-- On KW_ADDRSPACE reduce production fn_attr -> KW_BUILTIN
-- On EOL reduce production fn_attr -> KW_BUILTIN
-- On ATTR_GRP_ID reduce production fn_attr -> KW_BUILTIN

State 191:
## Known stack suffix:
## KW_ALWAYSINLINE
## LR(1) items:
fn_attr -> KW_ALWAYSINLINE . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_ALWAYSINLINE
-- On RCURLY reduce production fn_attr -> KW_ALWAYSINLINE
-- On LCURLY reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_UWTABLE reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_TO reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_SSPSTRONG reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_SSPREQ reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_SSP reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_SECTION reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_READONLY reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_READNONE reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_OPTSIZE reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_OPTNONE reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_NOUNWIND reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_NORETURN reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_NOREDZONE reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_NOINLINE reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_NODUPLICATE reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_NOBUILTIN reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_NAKED reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_MINSIZE reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_JUMPTABLE reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_INLINEHINT reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_GC reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_COLD reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_BUILTIN reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_ALIGN reduce production fn_attr -> KW_ALWAYSINLINE
-- On KW_ADDRSPACE reduce production fn_attr -> KW_ALWAYSINLINE
-- On EOL reduce production fn_attr -> KW_ALWAYSINLINE
-- On ATTR_GRP_ID reduce production fn_attr -> KW_ALWAYSINLINE

State 192:
## Known stack suffix:
## KW_ALIGNSTACK
## LR(1) items:
fn_attr -> KW_ALIGNSTACK . LPAREN INTEGER RPAREN [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On LPAREN shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## KW_ALIGNSTACK LPAREN
## LR(1) items:
fn_attr -> KW_ALIGNSTACK LPAREN . INTEGER RPAREN [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On INTEGER shift to state 194
## Reductions:

State 194:
## Known stack suffix:
## KW_ALIGNSTACK LPAREN INTEGER
## LR(1) items:
fn_attr -> KW_ALIGNSTACK LPAREN INTEGER . RPAREN [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On RPAREN shift to state 195
## Reductions:

State 195:
## Known stack suffix:
## KW_ALIGNSTACK LPAREN INTEGER RPAREN
## LR(1) items:
fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On RCURLY reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On LCURLY reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_UWTABLE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_UNNAMED_ADDR reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_TO reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_SSPSTRONG reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_SSPREQ reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_SSP reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_SECTION reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_SANITIZE_THREAD reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_RETURNS_TWICE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_READONLY reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_READNONE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_OPTSIZE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_OPTNONE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_NOUNWIND reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_NORETURN reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_NOREDZONE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_NONLAZYBIND reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_NOINLINE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_NODUPLICATE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_NOBUILTIN reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_NAKED reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_MINSIZE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_JUMPTABLE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_INLINEHINT reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_GC reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_COLD reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_BUILTIN reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_ALWAYSINLINE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_ALIGNSTACK reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_ALIGN reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On KW_ADDRSPACE reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On EOL reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN
-- On ATTR_GRP_ID reduce production fn_attr -> KW_ALIGNSTACK LPAREN INTEGER RPAREN

State 196:
## Known stack suffix:
## KW_ALIGN
## LR(1) items:
align -> KW_ALIGN . INTEGER [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On INTEGER shift to state 197
## Reductions:

State 197:
## Known stack suffix:
## KW_ALIGN INTEGER
## LR(1) items:
align -> KW_ALIGN INTEGER . [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production align -> KW_ALIGN INTEGER
-- On LCURLY reduce production align -> KW_ALIGN INTEGER
-- On KW_UWTABLE reduce production align -> KW_ALIGN INTEGER
-- On KW_UNNAMED_ADDR reduce production align -> KW_ALIGN INTEGER
-- On KW_SSPSTRONG reduce production align -> KW_ALIGN INTEGER
-- On KW_SSPREQ reduce production align -> KW_ALIGN INTEGER
-- On KW_SSP reduce production align -> KW_ALIGN INTEGER
-- On KW_SECTION reduce production align -> KW_ALIGN INTEGER
-- On KW_SANITIZE_THREAD reduce production align -> KW_ALIGN INTEGER
-- On KW_SANITIZE_MEMORY reduce production align -> KW_ALIGN INTEGER
-- On KW_SANITIZE_ADDRESS reduce production align -> KW_ALIGN INTEGER
-- On KW_RETURNS_TWICE reduce production align -> KW_ALIGN INTEGER
-- On KW_READONLY reduce production align -> KW_ALIGN INTEGER
-- On KW_READNONE reduce production align -> KW_ALIGN INTEGER
-- On KW_OPTSIZE reduce production align -> KW_ALIGN INTEGER
-- On KW_OPTNONE reduce production align -> KW_ALIGN INTEGER
-- On KW_NOUNWIND reduce production align -> KW_ALIGN INTEGER
-- On KW_NORETURN reduce production align -> KW_ALIGN INTEGER
-- On KW_NOREDZONE reduce production align -> KW_ALIGN INTEGER
-- On KW_NONLAZYBIND reduce production align -> KW_ALIGN INTEGER
-- On KW_NOINLINE reduce production align -> KW_ALIGN INTEGER
-- On KW_NOIMPLICITFLOAT reduce production align -> KW_ALIGN INTEGER
-- On KW_NODUPLICATE reduce production align -> KW_ALIGN INTEGER
-- On KW_NOBUILTIN reduce production align -> KW_ALIGN INTEGER
-- On KW_NAKED reduce production align -> KW_ALIGN INTEGER
-- On KW_MINSIZE reduce production align -> KW_ALIGN INTEGER
-- On KW_JUMPTABLE reduce production align -> KW_ALIGN INTEGER
-- On KW_INLINEHINT reduce production align -> KW_ALIGN INTEGER
-- On KW_GC reduce production align -> KW_ALIGN INTEGER
-- On KW_COLD reduce production align -> KW_ALIGN INTEGER
-- On KW_BUILTIN reduce production align -> KW_ALIGN INTEGER
-- On KW_ALWAYSINLINE reduce production align -> KW_ALIGN INTEGER
-- On KW_ALIGNSTACK reduce production align -> KW_ALIGN INTEGER
-- On KW_ALIGN reduce production align -> KW_ALIGN INTEGER
-- On KW_ADDRSPACE reduce production align -> KW_ALIGN INTEGER
-- On EOL reduce production align -> KW_ALIGN INTEGER
-- On ATTR_GRP_ID reduce production align -> KW_ALIGN INTEGER

State 198:
## Known stack suffix:
## KW_ADDRSPACE
## LR(1) items:
df_post_attr -> KW_ADDRSPACE . LPAREN INTEGER RPAREN [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On LPAREN shift to state 199
## Reductions:

State 199:
## Known stack suffix:
## KW_ADDRSPACE LPAREN
## LR(1) items:
df_post_attr -> KW_ADDRSPACE LPAREN . INTEGER RPAREN [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On INTEGER shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## KW_ADDRSPACE LPAREN INTEGER
## LR(1) items:
df_post_attr -> KW_ADDRSPACE LPAREN INTEGER . RPAREN [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On RPAREN shift to state 201
## Reductions:

State 201:
## Known stack suffix:
## KW_ADDRSPACE LPAREN INTEGER RPAREN
## LR(1) items:
df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN . [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On LCURLY reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_UWTABLE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_UNNAMED_ADDR reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_SSPSTRONG reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_SSPREQ reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_SSP reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_SECTION reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_SANITIZE_THREAD reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_SANITIZE_MEMORY reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_SANITIZE_ADDRESS reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_RETURNS_TWICE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_READONLY reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_READNONE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_OPTSIZE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_OPTNONE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_NOUNWIND reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_NORETURN reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_NOREDZONE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_NONLAZYBIND reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_NOINLINE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_NOIMPLICITFLOAT reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_NODUPLICATE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_NOBUILTIN reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_NAKED reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_MINSIZE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_JUMPTABLE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_INLINEHINT reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_GC reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_COLD reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_BUILTIN reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_ALWAYSINLINE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_ALIGNSTACK reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_ALIGN reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On KW_ADDRSPACE reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On EOL reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN
-- On ATTR_GRP_ID reduce production df_post_attr -> KW_ADDRSPACE LPAREN INTEGER RPAREN

State 202:
## Known stack suffix:
## ATTR_GRP_ID
## LR(1) items:
fn_attr -> ATTR_GRP_ID . [ STRING RCURLY LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_TO KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production fn_attr -> ATTR_GRP_ID
-- On RCURLY reduce production fn_attr -> ATTR_GRP_ID
-- On LCURLY reduce production fn_attr -> ATTR_GRP_ID
-- On KW_UWTABLE reduce production fn_attr -> ATTR_GRP_ID
-- On KW_UNNAMED_ADDR reduce production fn_attr -> ATTR_GRP_ID
-- On KW_TO reduce production fn_attr -> ATTR_GRP_ID
-- On KW_SSPSTRONG reduce production fn_attr -> ATTR_GRP_ID
-- On KW_SSPREQ reduce production fn_attr -> ATTR_GRP_ID
-- On KW_SSP reduce production fn_attr -> ATTR_GRP_ID
-- On KW_SECTION reduce production fn_attr -> ATTR_GRP_ID
-- On KW_SANITIZE_THREAD reduce production fn_attr -> ATTR_GRP_ID
-- On KW_SANITIZE_MEMORY reduce production fn_attr -> ATTR_GRP_ID
-- On KW_SANITIZE_ADDRESS reduce production fn_attr -> ATTR_GRP_ID
-- On KW_RETURNS_TWICE reduce production fn_attr -> ATTR_GRP_ID
-- On KW_READONLY reduce production fn_attr -> ATTR_GRP_ID
-- On KW_READNONE reduce production fn_attr -> ATTR_GRP_ID
-- On KW_OPTSIZE reduce production fn_attr -> ATTR_GRP_ID
-- On KW_OPTNONE reduce production fn_attr -> ATTR_GRP_ID
-- On KW_NOUNWIND reduce production fn_attr -> ATTR_GRP_ID
-- On KW_NORETURN reduce production fn_attr -> ATTR_GRP_ID
-- On KW_NOREDZONE reduce production fn_attr -> ATTR_GRP_ID
-- On KW_NONLAZYBIND reduce production fn_attr -> ATTR_GRP_ID
-- On KW_NOINLINE reduce production fn_attr -> ATTR_GRP_ID
-- On KW_NOIMPLICITFLOAT reduce production fn_attr -> ATTR_GRP_ID
-- On KW_NODUPLICATE reduce production fn_attr -> ATTR_GRP_ID
-- On KW_NOBUILTIN reduce production fn_attr -> ATTR_GRP_ID
-- On KW_NAKED reduce production fn_attr -> ATTR_GRP_ID
-- On KW_MINSIZE reduce production fn_attr -> ATTR_GRP_ID
-- On KW_JUMPTABLE reduce production fn_attr -> ATTR_GRP_ID
-- On KW_INLINEHINT reduce production fn_attr -> ATTR_GRP_ID
-- On KW_GC reduce production fn_attr -> ATTR_GRP_ID
-- On KW_COLD reduce production fn_attr -> ATTR_GRP_ID
-- On KW_BUILTIN reduce production fn_attr -> ATTR_GRP_ID
-- On KW_ALWAYSINLINE reduce production fn_attr -> ATTR_GRP_ID
-- On KW_ALIGNSTACK reduce production fn_attr -> ATTR_GRP_ID
-- On KW_ALIGN reduce production fn_attr -> ATTR_GRP_ID
-- On KW_ADDRSPACE reduce production fn_attr -> ATTR_GRP_ID
-- On EOL reduce production fn_attr -> ATTR_GRP_ID
-- On ATTR_GRP_ID reduce production fn_attr -> ATTR_GRP_ID

State 203:
## Known stack suffix:
## section
## LR(1) items:
df_post_attr -> section . [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production df_post_attr -> section
-- On LCURLY reduce production df_post_attr -> section
-- On KW_UWTABLE reduce production df_post_attr -> section
-- On KW_UNNAMED_ADDR reduce production df_post_attr -> section
-- On KW_SSPSTRONG reduce production df_post_attr -> section
-- On KW_SSPREQ reduce production df_post_attr -> section
-- On KW_SSP reduce production df_post_attr -> section
-- On KW_SECTION reduce production df_post_attr -> section
-- On KW_SANITIZE_THREAD reduce production df_post_attr -> section
-- On KW_SANITIZE_MEMORY reduce production df_post_attr -> section
-- On KW_SANITIZE_ADDRESS reduce production df_post_attr -> section
-- On KW_RETURNS_TWICE reduce production df_post_attr -> section
-- On KW_READONLY reduce production df_post_attr -> section
-- On KW_READNONE reduce production df_post_attr -> section
-- On KW_OPTSIZE reduce production df_post_attr -> section
-- On KW_OPTNONE reduce production df_post_attr -> section
-- On KW_NOUNWIND reduce production df_post_attr -> section
-- On KW_NORETURN reduce production df_post_attr -> section
-- On KW_NOREDZONE reduce production df_post_attr -> section
-- On KW_NONLAZYBIND reduce production df_post_attr -> section
-- On KW_NOINLINE reduce production df_post_attr -> section
-- On KW_NOIMPLICITFLOAT reduce production df_post_attr -> section
-- On KW_NODUPLICATE reduce production df_post_attr -> section
-- On KW_NOBUILTIN reduce production df_post_attr -> section
-- On KW_NAKED reduce production df_post_attr -> section
-- On KW_MINSIZE reduce production df_post_attr -> section
-- On KW_JUMPTABLE reduce production df_post_attr -> section
-- On KW_INLINEHINT reduce production df_post_attr -> section
-- On KW_GC reduce production df_post_attr -> section
-- On KW_COLD reduce production df_post_attr -> section
-- On KW_BUILTIN reduce production df_post_attr -> section
-- On KW_ALWAYSINLINE reduce production df_post_attr -> section
-- On KW_ALIGNSTACK reduce production df_post_attr -> section
-- On KW_ALIGN reduce production df_post_attr -> section
-- On KW_ADDRSPACE reduce production df_post_attr -> section
-- On EOL reduce production df_post_attr -> section
-- On ATTR_GRP_ID reduce production df_post_attr -> section

State 204:
## Known stack suffix:
## nonempty_list(fn_attr)
## LR(1) items:
df_post_attr -> nonempty_list(fn_attr) . [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production df_post_attr -> nonempty_list(fn_attr)
-- On LCURLY reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_UWTABLE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_UNNAMED_ADDR reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_SSPSTRONG reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_SSPREQ reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_SSP reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_SECTION reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_SANITIZE_THREAD reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_SANITIZE_MEMORY reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_SANITIZE_ADDRESS reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_RETURNS_TWICE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_READONLY reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_READNONE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_OPTSIZE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_OPTNONE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_NOUNWIND reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_NORETURN reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_NOREDZONE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_NONLAZYBIND reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_NOINLINE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_NOIMPLICITFLOAT reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_NODUPLICATE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_NOBUILTIN reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_NAKED reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_MINSIZE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_JUMPTABLE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_INLINEHINT reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_GC reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_COLD reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_BUILTIN reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_ALWAYSINLINE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_ALIGNSTACK reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_ALIGN reduce production df_post_attr -> nonempty_list(fn_attr)
-- On KW_ADDRSPACE reduce production df_post_attr -> nonempty_list(fn_attr)
-- On EOL reduce production df_post_attr -> nonempty_list(fn_attr)
-- On ATTR_GRP_ID reduce production df_post_attr -> nonempty_list(fn_attr)

State 205:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr)
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) . list(EOL) LCURLY list(EOL) df_blocks RCURLY [ EOL ]
## Transitions:
-- On EOL shift to state 1
-- On list(EOL) shift to state 206
## Reductions:
-- On LCURLY reduce production list(EOL) ->

State 206:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL)
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) . LCURLY list(EOL) df_blocks RCURLY [ EOL ]
## Transitions:
-- On LCURLY shift to state 207
## Reductions:

State 207:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY . list(EOL) df_blocks RCURLY [ EOL ]
## Transitions:
-- On EOL shift to state 1
-- On list(EOL) shift to state 208
## Reductions:
-- On LOCAL reduce production list(EOL) ->
-- On LABEL reduce production list(EOL) ->
-- On KW_ZEXT reduce production list(EOL) ->
-- On KW_XOR reduce production list(EOL) ->
-- On KW_VAARG reduce production list(EOL) ->
-- On KW_UREM reduce production list(EOL) ->
-- On KW_UNREACHABLE reduce production list(EOL) ->
-- On KW_UITOFP reduce production list(EOL) ->
-- On KW_UDIV reduce production list(EOL) ->
-- On KW_TRUNC reduce production list(EOL) ->
-- On KW_TAIL reduce production list(EOL) ->
-- On KW_SWITCH reduce production list(EOL) ->
-- On KW_SUB reduce production list(EOL) ->
-- On KW_STORE reduce production list(EOL) ->
-- On KW_SREM reduce production list(EOL) ->
-- On KW_SITOFP reduce production list(EOL) ->
-- On KW_SHUFFLEVECTOR reduce production list(EOL) ->
-- On KW_SHL reduce production list(EOL) ->
-- On KW_SEXT reduce production list(EOL) ->
-- On KW_SELECT reduce production list(EOL) ->
-- On KW_SDIV reduce production list(EOL) ->
-- On KW_RET reduce production list(EOL) ->
-- On KW_RESUME reduce production list(EOL) ->
-- On KW_PTRTOINT reduce production list(EOL) ->
-- On KW_PHI reduce production list(EOL) ->
-- On KW_OR reduce production list(EOL) ->
-- On KW_MUL reduce production list(EOL) ->
-- On KW_LSHR reduce production list(EOL) ->
-- On KW_LOAD reduce production list(EOL) ->
-- On KW_LANDINGPAD reduce production list(EOL) ->
-- On KW_INVOKE reduce production list(EOL) ->
-- On KW_INTTOPTR reduce production list(EOL) ->
-- On KW_INSERTVALUE reduce production list(EOL) ->
-- On KW_INSERTELEMENT reduce production list(EOL) ->
-- On KW_INDIRECTBR reduce production list(EOL) ->
-- On KW_INBOUNDS reduce production list(EOL) ->
-- On KW_ICMP reduce production list(EOL) ->
-- On KW_GETELEMENTPTR reduce production list(EOL) ->
-- On KW_FSUB reduce production list(EOL) ->
-- On KW_FREM reduce production list(EOL) ->
-- On KW_FPTRUNC reduce production list(EOL) ->
-- On KW_FPTOUI reduce production list(EOL) ->
-- On KW_FPTOSI reduce production list(EOL) ->
-- On KW_FPEXT reduce production list(EOL) ->
-- On KW_FMUL reduce production list(EOL) ->
-- On KW_FENCE reduce production list(EOL) ->
-- On KW_FDIV reduce production list(EOL) ->
-- On KW_FCMP reduce production list(EOL) ->
-- On KW_FADD reduce production list(EOL) ->
-- On KW_EXTRACTVALUE reduce production list(EOL) ->
-- On KW_EXTRACTELEMENT reduce production list(EOL) ->
-- On KW_CALL reduce production list(EOL) ->
-- On KW_BR reduce production list(EOL) ->
-- On KW_BITCAST reduce production list(EOL) ->
-- On KW_ATOMICRMW reduce production list(EOL) ->
-- On KW_ATOMICCMPXCHG reduce production list(EOL) ->
-- On KW_ASHR reduce production list(EOL) ->
-- On KW_AND reduce production list(EOL) ->
-- On KW_ALLOCA reduce production list(EOL) ->
-- On KW_ADD reduce production list(EOL) ->
-- On GLOBAL reduce production list(EOL) ->

State 208:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL)
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) . df_blocks RCURLY [ EOL ]
## Transitions:
-- On LABEL shift to state 209
-- On option(terminated(LABEL,nonempty_list(EOL))) shift to state 213
-- On df_blocks shift to state 483
## Reductions:
-- On LOCAL reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_ZEXT reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_XOR reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_VAARG reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_UREM reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_UNREACHABLE reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_UITOFP reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_UDIV reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_TRUNC reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_TAIL reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_SWITCH reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_SUB reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_STORE reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_SREM reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_SITOFP reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_SHUFFLEVECTOR reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_SHL reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_SEXT reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_SELECT reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_SDIV reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_RET reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_RESUME reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_PTRTOINT reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_PHI reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_OR reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_MUL reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_LSHR reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_LOAD reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_LANDINGPAD reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_INVOKE reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_INTTOPTR reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_INSERTVALUE reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_INSERTELEMENT reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_INDIRECTBR reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_INBOUNDS reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_ICMP reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_GETELEMENTPTR reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_FSUB reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_FREM reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_FPTRUNC reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_FPTOUI reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_FPTOSI reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_FPEXT reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_FMUL reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_FENCE reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_FDIV reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_FCMP reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_FADD reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_EXTRACTVALUE reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_EXTRACTELEMENT reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_CALL reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_BR reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_BITCAST reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_ATOMICRMW reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_ATOMICCMPXCHG reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_ASHR reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_AND reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_ALLOCA reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On KW_ADD reduce production option(terminated(LABEL,nonempty_list(EOL))) ->
-- On GLOBAL reduce production option(terminated(LABEL,nonempty_list(EOL))) ->

State 209:
## Known stack suffix:
## LABEL
## LR(1) items:
option(terminated(LABEL,nonempty_list(EOL))) -> LABEL . nonempty_list(EOL) [ LOCAL KW_ZEXT KW_XOR KW_VAARG KW_UREM KW_UNREACHABLE KW_UITOFP KW_UDIV KW_TRUNC KW_TAIL KW_SWITCH KW_SUB KW_STORE KW_SREM KW_SITOFP KW_SHUFFLEVECTOR KW_SHL KW_SEXT KW_SELECT KW_SDIV KW_RET KW_RESUME KW_PTRTOINT KW_PHI KW_OR KW_MUL KW_LSHR KW_LOAD KW_LANDINGPAD KW_INVOKE KW_INTTOPTR KW_INSERTVALUE KW_INSERTELEMENT KW_INDIRECTBR KW_INBOUNDS KW_ICMP KW_GETELEMENTPTR KW_FSUB KW_FREM KW_FPTRUNC KW_FPTOUI KW_FPTOSI KW_FPEXT KW_FMUL KW_FENCE KW_FDIV KW_FCMP KW_FADD KW_EXTRACTVALUE KW_EXTRACTELEMENT KW_CALL KW_BR KW_BITCAST KW_ATOMICRMW KW_ATOMICCMPXCHG KW_ASHR KW_AND KW_ALLOCA KW_ADD GLOBAL ]
## Transitions:
-- On EOL shift to state 210
-- On nonempty_list(EOL) shift to state 212
## Reductions:

State 210:
## Known stack suffix:
## EOL
## LR(1) items:
nonempty_list(EOL) -> EOL . [ RCURLY METADATA_ID LOCAL LABEL KW_ZEXT KW_XOR KW_VAARG KW_UREM KW_UNREACHABLE KW_UITOFP KW_UDIV KW_TRUNC KW_TARGET KW_TAIL KW_SWITCH KW_SUB KW_STORE KW_SREM KW_SITOFP KW_SHUFFLEVECTOR KW_SHL KW_SEXT KW_SELECT KW_SDIV KW_RET KW_RESUME KW_PTRTOINT KW_PHI KW_OR KW_MUL KW_LSHR KW_LOAD KW_LANDINGPAD KW_INVOKE KW_INTTOPTR KW_INSERTVALUE KW_INSERTELEMENT KW_INDIRECTBR KW_INBOUNDS KW_ICMP KW_GETELEMENTPTR KW_FSUB KW_FREM KW_FPTRUNC KW_FPTOUI KW_FPTOSI KW_FPEXT KW_FMUL KW_FENCE KW_FDIV KW_FCMP KW_FADD KW_EXTRACTVALUE KW_EXTRACTELEMENT KW_DEFINE KW_DECLARE KW_CALL KW_BR KW_BITCAST KW_ATTRIBUTES KW_ATOMICRMW KW_ATOMICCMPXCHG KW_ASHR KW_AND KW_ALLOCA KW_ADD GLOBAL EOF ]
nonempty_list(EOL) -> EOL . nonempty_list(EOL) [ RCURLY METADATA_ID LOCAL LABEL KW_ZEXT KW_XOR KW_VAARG KW_UREM KW_UNREACHABLE KW_UITOFP KW_UDIV KW_TRUNC KW_TARGET KW_TAIL KW_SWITCH KW_SUB KW_STORE KW_SREM KW_SITOFP KW_SHUFFLEVECTOR KW_SHL KW_SEXT KW_SELECT KW_SDIV KW_RET KW_RESUME KW_PTRTOINT KW_PHI KW_OR KW_MUL KW_LSHR KW_LOAD KW_LANDINGPAD KW_INVOKE KW_INTTOPTR KW_INSERTVALUE KW_INSERTELEMENT KW_INDIRECTBR KW_INBOUNDS KW_ICMP KW_GETELEMENTPTR KW_FSUB KW_FREM KW_FPTRUNC KW_FPTOUI KW_FPTOSI KW_FPEXT KW_FMUL KW_FENCE KW_FDIV KW_FCMP KW_FADD KW_EXTRACTVALUE KW_EXTRACTELEMENT KW_DEFINE KW_DECLARE KW_CALL KW_BR KW_BITCAST KW_ATTRIBUTES KW_ATOMICRMW KW_ATOMICCMPXCHG KW_ASHR KW_AND KW_ALLOCA KW_ADD GLOBAL EOF ]
## Transitions:
-- On EOL shift to state 210
-- On nonempty_list(EOL) shift to state 211
## Reductions:
-- On RCURLY reduce production nonempty_list(EOL) -> EOL
-- On METADATA_ID reduce production nonempty_list(EOL) -> EOL
-- On LOCAL reduce production nonempty_list(EOL) -> EOL
-- On LABEL reduce production nonempty_list(EOL) -> EOL
-- On KW_ZEXT reduce production nonempty_list(EOL) -> EOL
-- On KW_XOR reduce production nonempty_list(EOL) -> EOL
-- On KW_VAARG reduce production nonempty_list(EOL) -> EOL
-- On KW_UREM reduce production nonempty_list(EOL) -> EOL
-- On KW_UNREACHABLE reduce production nonempty_list(EOL) -> EOL
-- On KW_UITOFP reduce production nonempty_list(EOL) -> EOL
-- On KW_UDIV reduce production nonempty_list(EOL) -> EOL
-- On KW_TRUNC reduce production nonempty_list(EOL) -> EOL
-- On KW_TARGET reduce production nonempty_list(EOL) -> EOL
-- On KW_TAIL reduce production nonempty_list(EOL) -> EOL
-- On KW_SWITCH reduce production nonempty_list(EOL) -> EOL
-- On KW_SUB reduce production nonempty_list(EOL) -> EOL
-- On KW_STORE reduce production nonempty_list(EOL) -> EOL
-- On KW_SREM reduce production nonempty_list(EOL) -> EOL
-- On KW_SITOFP reduce production nonempty_list(EOL) -> EOL
-- On KW_SHUFFLEVECTOR reduce production nonempty_list(EOL) -> EOL
-- On KW_SHL reduce production nonempty_list(EOL) -> EOL
-- On KW_SEXT reduce production nonempty_list(EOL) -> EOL
-- On KW_SELECT reduce production nonempty_list(EOL) -> EOL
-- On KW_SDIV reduce production nonempty_list(EOL) -> EOL
-- On KW_RET reduce production nonempty_list(EOL) -> EOL
-- On KW_RESUME reduce production nonempty_list(EOL) -> EOL
-- On KW_PTRTOINT reduce production nonempty_list(EOL) -> EOL
-- On KW_PHI reduce production nonempty_list(EOL) -> EOL
-- On KW_OR reduce production nonempty_list(EOL) -> EOL
-- On KW_MUL reduce production nonempty_list(EOL) -> EOL
-- On KW_LSHR reduce production nonempty_list(EOL) -> EOL
-- On KW_LOAD reduce production nonempty_list(EOL) -> EOL
-- On KW_LANDINGPAD reduce production nonempty_list(EOL) -> EOL
-- On KW_INVOKE reduce production nonempty_list(EOL) -> EOL
-- On KW_INTTOPTR reduce production nonempty_list(EOL) -> EOL
-- On KW_INSERTVALUE reduce production nonempty_list(EOL) -> EOL
-- On KW_INSERTELEMENT reduce production nonempty_list(EOL) -> EOL
-- On KW_INDIRECTBR reduce production nonempty_list(EOL) -> EOL
-- On KW_INBOUNDS reduce production nonempty_list(EOL) -> EOL
-- On KW_ICMP reduce production nonempty_list(EOL) -> EOL
-- On KW_GETELEMENTPTR reduce production nonempty_list(EOL) -> EOL
-- On KW_FSUB reduce production nonempty_list(EOL) -> EOL
-- On KW_FREM reduce production nonempty_list(EOL) -> EOL
-- On KW_FPTRUNC reduce production nonempty_list(EOL) -> EOL
-- On KW_FPTOUI reduce production nonempty_list(EOL) -> EOL
-- On KW_FPTOSI reduce production nonempty_list(EOL) -> EOL
-- On KW_FPEXT reduce production nonempty_list(EOL) -> EOL
-- On KW_FMUL reduce production nonempty_list(EOL) -> EOL
-- On KW_FENCE reduce production nonempty_list(EOL) -> EOL
-- On KW_FDIV reduce production nonempty_list(EOL) -> EOL
-- On KW_FCMP reduce production nonempty_list(EOL) -> EOL
-- On KW_FADD reduce production nonempty_list(EOL) -> EOL
-- On KW_EXTRACTVALUE reduce production nonempty_list(EOL) -> EOL
-- On KW_EXTRACTELEMENT reduce production nonempty_list(EOL) -> EOL
-- On KW_DEFINE reduce production nonempty_list(EOL) -> EOL
-- On KW_DECLARE reduce production nonempty_list(EOL) -> EOL
-- On KW_CALL reduce production nonempty_list(EOL) -> EOL
-- On KW_BR reduce production nonempty_list(EOL) -> EOL
-- On KW_BITCAST reduce production nonempty_list(EOL) -> EOL
-- On KW_ATTRIBUTES reduce production nonempty_list(EOL) -> EOL
-- On KW_ATOMICRMW reduce production nonempty_list(EOL) -> EOL
-- On KW_ATOMICCMPXCHG reduce production nonempty_list(EOL) -> EOL
-- On KW_ASHR reduce production nonempty_list(EOL) -> EOL
-- On KW_AND reduce production nonempty_list(EOL) -> EOL
-- On KW_ALLOCA reduce production nonempty_list(EOL) -> EOL
-- On KW_ADD reduce production nonempty_list(EOL) -> EOL
-- On GLOBAL reduce production nonempty_list(EOL) -> EOL
-- On EOF reduce production nonempty_list(EOL) -> EOL

State 211:
## Known stack suffix:
## EOL nonempty_list(EOL)
## LR(1) items:
nonempty_list(EOL) -> EOL nonempty_list(EOL) . [ RCURLY METADATA_ID LOCAL LABEL KW_ZEXT KW_XOR KW_VAARG KW_UREM KW_UNREACHABLE KW_UITOFP KW_UDIV KW_TRUNC KW_TARGET KW_TAIL KW_SWITCH KW_SUB KW_STORE KW_SREM KW_SITOFP KW_SHUFFLEVECTOR KW_SHL KW_SEXT KW_SELECT KW_SDIV KW_RET KW_RESUME KW_PTRTOINT KW_PHI KW_OR KW_MUL KW_LSHR KW_LOAD KW_LANDINGPAD KW_INVOKE KW_INTTOPTR KW_INSERTVALUE KW_INSERTELEMENT KW_INDIRECTBR KW_INBOUNDS KW_ICMP KW_GETELEMENTPTR KW_FSUB KW_FREM KW_FPTRUNC KW_FPTOUI KW_FPTOSI KW_FPEXT KW_FMUL KW_FENCE KW_FDIV KW_FCMP KW_FADD KW_EXTRACTVALUE KW_EXTRACTELEMENT KW_DEFINE KW_DECLARE KW_CALL KW_BR KW_BITCAST KW_ATTRIBUTES KW_ATOMICRMW KW_ATOMICCMPXCHG KW_ASHR KW_AND KW_ALLOCA KW_ADD GLOBAL EOF ]
## Transitions:
## Reductions:
-- On RCURLY reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On METADATA_ID reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On LOCAL reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On LABEL reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_ZEXT reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_XOR reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_VAARG reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_UREM reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_UNREACHABLE reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_UITOFP reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_UDIV reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_TRUNC reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_TARGET reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_TAIL reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_SWITCH reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_SUB reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_STORE reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_SREM reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_SITOFP reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_SHUFFLEVECTOR reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_SHL reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_SEXT reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_SELECT reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_SDIV reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_RET reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_RESUME reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_PTRTOINT reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_PHI reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_OR reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_MUL reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_LSHR reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_LOAD reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_LANDINGPAD reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_INVOKE reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_INTTOPTR reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_INSERTVALUE reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_INSERTELEMENT reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_INDIRECTBR reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_INBOUNDS reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_ICMP reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_GETELEMENTPTR reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_FSUB reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_FREM reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_FPTRUNC reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_FPTOUI reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_FPTOSI reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_FPEXT reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_FMUL reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_FENCE reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_FDIV reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_FCMP reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_FADD reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_EXTRACTVALUE reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_EXTRACTELEMENT reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_DEFINE reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_DECLARE reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_CALL reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_BR reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_BITCAST reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_ATTRIBUTES reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_ATOMICRMW reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_ATOMICCMPXCHG reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_ASHR reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_AND reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_ALLOCA reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On KW_ADD reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On GLOBAL reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)
-- On EOF reduce production nonempty_list(EOL) -> EOL nonempty_list(EOL)

State 212:
## Known stack suffix:
## LABEL nonempty_list(EOL)
## LR(1) items:
option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL) . [ LOCAL KW_ZEXT KW_XOR KW_VAARG KW_UREM KW_UNREACHABLE KW_UITOFP KW_UDIV KW_TRUNC KW_TAIL KW_SWITCH KW_SUB KW_STORE KW_SREM KW_SITOFP KW_SHUFFLEVECTOR KW_SHL KW_SEXT KW_SELECT KW_SDIV KW_RET KW_RESUME KW_PTRTOINT KW_PHI KW_OR KW_MUL KW_LSHR KW_LOAD KW_LANDINGPAD KW_INVOKE KW_INTTOPTR KW_INSERTVALUE KW_INSERTELEMENT KW_INDIRECTBR KW_INBOUNDS KW_ICMP KW_GETELEMENTPTR KW_FSUB KW_FREM KW_FPTRUNC KW_FPTOUI KW_FPTOSI KW_FPEXT KW_FMUL KW_FENCE KW_FDIV KW_FCMP KW_FADD KW_EXTRACTVALUE KW_EXTRACTELEMENT KW_CALL KW_BR KW_BITCAST KW_ATOMICRMW KW_ATOMICCMPXCHG KW_ASHR KW_AND KW_ALLOCA KW_ADD GLOBAL ]
## Transitions:
## Reductions:
-- On LOCAL reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_ZEXT reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_XOR reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_VAARG reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_UREM reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_UNREACHABLE reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_UITOFP reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_UDIV reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_TRUNC reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_TAIL reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_SWITCH reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_SUB reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_STORE reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_SREM reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_SITOFP reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_SHUFFLEVECTOR reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_SHL reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_SEXT reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_SELECT reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_SDIV reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_RET reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_RESUME reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_PTRTOINT reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_PHI reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_OR reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_MUL reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_LSHR reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_LOAD reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_LANDINGPAD reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_INVOKE reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_INTTOPTR reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_INSERTVALUE reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_INSERTELEMENT reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_INDIRECTBR reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_INBOUNDS reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_ICMP reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_GETELEMENTPTR reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_FSUB reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_FREM reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_FPTRUNC reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_FPTOUI reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_FPTOSI reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_FPEXT reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_FMUL reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_FENCE reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_FDIV reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_FCMP reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_FADD reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_EXTRACTVALUE reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_EXTRACTELEMENT reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_CALL reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_BR reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_BITCAST reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_ATOMICRMW reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_ATOMICCMPXCHG reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_ASHR reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_AND reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_ALLOCA reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On KW_ADD reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)
-- On GLOBAL reduce production option(terminated(LABEL,nonempty_list(EOL))) -> LABEL nonempty_list(EOL)

State 213:
## Known stack suffix:
## option(terminated(LABEL,nonempty_list(EOL)))
## LR(1) items:
df_blocks -> option(terminated(LABEL,nonempty_list(EOL))) . nonempty_list(terminated(instr,nonempty_list(EOL))) list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) [ RCURLY ]
## Transitions:
-- On LOCAL shift to state 151
-- On KW_ZEXT shift to state 214
-- On KW_XOR shift to state 215
-- On KW_VAARG shift to state 216
-- On KW_UREM shift to state 217
-- On KW_UNREACHABLE shift to state 218
-- On KW_UITOFP shift to state 219
-- On KW_UDIV shift to state 220
-- On KW_TRUNC shift to state 221
-- On KW_TAIL shift to state 222
-- On KW_SWITCH shift to state 223
-- On KW_SUB shift to state 244
-- On KW_STORE shift to state 245
-- On KW_SREM shift to state 254
-- On KW_SITOFP shift to state 255
-- On KW_SHUFFLEVECTOR shift to state 256
-- On KW_SHL shift to state 262
-- On KW_SEXT shift to state 263
-- On KW_SELECT shift to state 264
-- On KW_SDIV shift to state 270
-- On KW_RET shift to state 271
-- On KW_RESUME shift to state 275
-- On KW_PTRTOINT shift to state 277
-- On KW_PHI shift to state 278
-- On KW_OR shift to state 289
-- On KW_MUL shift to state 290
-- On KW_LSHR shift to state 291
-- On KW_LOAD shift to state 292
-- On KW_LANDINGPAD shift to state 296
-- On KW_INVOKE shift to state 297
-- On KW_INTTOPTR shift to state 317
-- On KW_INSERTVALUE shift to state 318
-- On KW_INSERTELEMENT shift to state 327
-- On KW_INDIRECTBR shift to state 333
-- On KW_ICMP shift to state 343
-- On KW_GETELEMENTPTR shift to state 359
-- On KW_FSUB shift to state 360
-- On KW_FREM shift to state 361
-- On KW_FPTRUNC shift to state 362
-- On KW_FPTOUI shift to state 363
-- On KW_FPTOSI shift to state 364
-- On KW_FPEXT shift to state 365
-- On KW_FMUL shift to state 366
-- On KW_FENCE shift to state 367
-- On KW_FDIV shift to state 368
-- On KW_FCMP shift to state 369
-- On KW_FADD shift to state 391
-- On KW_EXTRACTVALUE shift to state 392
-- On KW_EXTRACTELEMENT shift to state 396
-- On KW_BR shift to state 400
-- On KW_BITCAST shift to state 409
-- On KW_ATOMICRMW shift to state 410
-- On KW_ATOMICCMPXCHG shift to state 411
-- On KW_ASHR shift to state 412
-- On KW_AND shift to state 413
-- On KW_ALLOCA shift to state 414
-- On KW_ADD shift to state 422
-- On GLOBAL shift to state 152
-- On option(KW_TAIL) shift to state 423
-- On option(KW_GETELEMENTPTR) shift to state 432
-- On nonempty_list(terminated(instr,nonempty_list(EOL))) shift to state 439
-- On instr shift to state 444
-- On ident shift to state 447
-- On ibinop_nuw_nsw_opt shift to state 450
-- On ibinop_no_opt shift to state 455
-- On ibinop_exact_opt shift to state 456
-- On ibinop shift to state 459
-- On fbinop shift to state 464
-- On conversion shift to state 477
## Reductions:
-- On KW_INBOUNDS reduce production option(KW_GETELEMENTPTR) ->
-- On KW_CALL reduce production option(KW_TAIL) ->

State 214:
## Known stack suffix:
## KW_ZEXT
## LR(1) items:
conversion -> KW_ZEXT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_ZEXT
-- On LT reduce production conversion -> KW_ZEXT
-- On LSQUARE reduce production conversion -> KW_ZEXT
-- On LCURLY reduce production conversion -> KW_ZEXT
-- On KW_X86_MMX reduce production conversion -> KW_ZEXT
-- On KW_X86_FP80 reduce production conversion -> KW_ZEXT
-- On KW_VOID reduce production conversion -> KW_ZEXT
-- On KW_PPC_FP128 reduce production conversion -> KW_ZEXT
-- On KW_OPAQUE reduce production conversion -> KW_ZEXT
-- On KW_METADATA reduce production conversion -> KW_ZEXT
-- On KW_LABEL reduce production conversion -> KW_ZEXT
-- On KW_HALF reduce production conversion -> KW_ZEXT
-- On KW_FP128 reduce production conversion -> KW_ZEXT
-- On KW_FLOAT reduce production conversion -> KW_ZEXT
-- On KW_DOUBLE reduce production conversion -> KW_ZEXT
-- On I reduce production conversion -> KW_ZEXT

State 215:
## Known stack suffix:
## KW_XOR
## LR(1) items:
ibinop_no_opt -> KW_XOR . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_no_opt -> KW_XOR
-- On LT reduce production ibinop_no_opt -> KW_XOR
-- On LSQUARE reduce production ibinop_no_opt -> KW_XOR
-- On LCURLY reduce production ibinop_no_opt -> KW_XOR
-- On KW_X86_MMX reduce production ibinop_no_opt -> KW_XOR
-- On KW_X86_FP80 reduce production ibinop_no_opt -> KW_XOR
-- On KW_VOID reduce production ibinop_no_opt -> KW_XOR
-- On KW_PPC_FP128 reduce production ibinop_no_opt -> KW_XOR
-- On KW_OPAQUE reduce production ibinop_no_opt -> KW_XOR
-- On KW_METADATA reduce production ibinop_no_opt -> KW_XOR
-- On KW_LABEL reduce production ibinop_no_opt -> KW_XOR
-- On KW_HALF reduce production ibinop_no_opt -> KW_XOR
-- On KW_FP128 reduce production ibinop_no_opt -> KW_XOR
-- On KW_FLOAT reduce production ibinop_no_opt -> KW_XOR
-- On KW_DOUBLE reduce production ibinop_no_opt -> KW_XOR
-- On I reduce production ibinop_no_opt -> KW_XOR

State 216:
## Known stack suffix:
## KW_VAARG
## LR(1) items:
instr -> KW_VAARG . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_VAARG

State 217:
## Known stack suffix:
## KW_UREM
## LR(1) items:
ibinop_no_opt -> KW_UREM . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_no_opt -> KW_UREM
-- On LT reduce production ibinop_no_opt -> KW_UREM
-- On LSQUARE reduce production ibinop_no_opt -> KW_UREM
-- On LCURLY reduce production ibinop_no_opt -> KW_UREM
-- On KW_X86_MMX reduce production ibinop_no_opt -> KW_UREM
-- On KW_X86_FP80 reduce production ibinop_no_opt -> KW_UREM
-- On KW_VOID reduce production ibinop_no_opt -> KW_UREM
-- On KW_PPC_FP128 reduce production ibinop_no_opt -> KW_UREM
-- On KW_OPAQUE reduce production ibinop_no_opt -> KW_UREM
-- On KW_METADATA reduce production ibinop_no_opt -> KW_UREM
-- On KW_LABEL reduce production ibinop_no_opt -> KW_UREM
-- On KW_HALF reduce production ibinop_no_opt -> KW_UREM
-- On KW_FP128 reduce production ibinop_no_opt -> KW_UREM
-- On KW_FLOAT reduce production ibinop_no_opt -> KW_UREM
-- On KW_DOUBLE reduce production ibinop_no_opt -> KW_UREM
-- On I reduce production ibinop_no_opt -> KW_UREM

State 218:
## Known stack suffix:
## KW_UNREACHABLE
## LR(1) items:
instr -> KW_UNREACHABLE . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_UNREACHABLE

State 219:
## Known stack suffix:
## KW_UITOFP
## LR(1) items:
conversion -> KW_UITOFP . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_UITOFP
-- On LT reduce production conversion -> KW_UITOFP
-- On LSQUARE reduce production conversion -> KW_UITOFP
-- On LCURLY reduce production conversion -> KW_UITOFP
-- On KW_X86_MMX reduce production conversion -> KW_UITOFP
-- On KW_X86_FP80 reduce production conversion -> KW_UITOFP
-- On KW_VOID reduce production conversion -> KW_UITOFP
-- On KW_PPC_FP128 reduce production conversion -> KW_UITOFP
-- On KW_OPAQUE reduce production conversion -> KW_UITOFP
-- On KW_METADATA reduce production conversion -> KW_UITOFP
-- On KW_LABEL reduce production conversion -> KW_UITOFP
-- On KW_HALF reduce production conversion -> KW_UITOFP
-- On KW_FP128 reduce production conversion -> KW_UITOFP
-- On KW_FLOAT reduce production conversion -> KW_UITOFP
-- On KW_DOUBLE reduce production conversion -> KW_UITOFP
-- On I reduce production conversion -> KW_UITOFP

State 220:
## Known stack suffix:
## KW_UDIV
## LR(1) items:
ibinop_exact_opt -> KW_UDIV . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_EXACT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_exact_opt -> KW_UDIV
-- On LT reduce production ibinop_exact_opt -> KW_UDIV
-- On LSQUARE reduce production ibinop_exact_opt -> KW_UDIV
-- On LCURLY reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_X86_MMX reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_X86_FP80 reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_VOID reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_PPC_FP128 reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_OPAQUE reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_METADATA reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_LABEL reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_HALF reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_FP128 reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_FLOAT reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_EXACT reduce production ibinop_exact_opt -> KW_UDIV
-- On KW_DOUBLE reduce production ibinop_exact_opt -> KW_UDIV
-- On I reduce production ibinop_exact_opt -> KW_UDIV

State 221:
## Known stack suffix:
## KW_TRUNC
## LR(1) items:
conversion -> KW_TRUNC . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_TRUNC
-- On LT reduce production conversion -> KW_TRUNC
-- On LSQUARE reduce production conversion -> KW_TRUNC
-- On LCURLY reduce production conversion -> KW_TRUNC
-- On KW_X86_MMX reduce production conversion -> KW_TRUNC
-- On KW_X86_FP80 reduce production conversion -> KW_TRUNC
-- On KW_VOID reduce production conversion -> KW_TRUNC
-- On KW_PPC_FP128 reduce production conversion -> KW_TRUNC
-- On KW_OPAQUE reduce production conversion -> KW_TRUNC
-- On KW_METADATA reduce production conversion -> KW_TRUNC
-- On KW_LABEL reduce production conversion -> KW_TRUNC
-- On KW_HALF reduce production conversion -> KW_TRUNC
-- On KW_FP128 reduce production conversion -> KW_TRUNC
-- On KW_FLOAT reduce production conversion -> KW_TRUNC
-- On KW_DOUBLE reduce production conversion -> KW_TRUNC
-- On I reduce production conversion -> KW_TRUNC

State 222:
## Known stack suffix:
## KW_TAIL
## LR(1) items:
option(KW_TAIL) -> KW_TAIL . [ KW_CALL ]
## Transitions:
## Reductions:
-- On KW_CALL reduce production option(KW_TAIL) -> KW_TAIL

State 223:
## Known stack suffix:
## KW_SWITCH
## LR(1) items:
instr -> KW_SWITCH . tvalue COMMA tident LSQUARE option(EOL) list(switch_table_entry) RSQUARE [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 228
## Reductions:

State 224:
## Known stack suffix:
## typ
## LR(1) items:
tvalue -> typ . value [ EOL COMMA ]
typ -> typ . STAR [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
## Transitions:
-- On STAR shift to state 30
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LPAREN shift to state 31
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 225
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 225:
## Known stack suffix:
## typ value
## LR(1) items:
tvalue -> typ value . [ EOL COMMA ]
## Transitions:
## Reductions:
-- On EOL reduce production tvalue -> typ value
-- On COMMA reduce production tvalue -> typ value

State 226:
## Known stack suffix:
## ident
## LR(1) items:
value -> ident . [ RPAREN KW_TO EOL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production value -> ident
-- On KW_TO reduce production value -> ident
-- On EOL reduce production value -> ident
-- On COMMA reduce production value -> ident

State 227:
## Known stack suffix:
## const
## LR(1) items:
value -> const . [ RPAREN KW_TO EOL COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production value -> const
-- On KW_TO reduce production value -> const
-- On EOL reduce production value -> const
-- On COMMA reduce production value -> const

State 228:
## Known stack suffix:
## KW_SWITCH tvalue
## LR(1) items:
instr -> KW_SWITCH tvalue . COMMA tident LSQUARE option(EOL) list(switch_table_entry) RSQUARE [ EOL ]
## Transitions:
-- On COMMA shift to state 229
## Reductions:

State 229:
## Known stack suffix:
## KW_SWITCH tvalue COMMA
## LR(1) items:
instr -> KW_SWITCH tvalue COMMA . tident LSQUARE option(EOL) list(switch_table_entry) RSQUARE [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 230
-- On tident shift to state 232
## Reductions:

State 230:
## Known stack suffix:
## typ
## LR(1) items:
tident -> typ . ident [ RSQUARE LTLCURLY LT LSQUARE LPAREN LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_UNWIND KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I EOL COMMA ]
typ -> typ . STAR [ STAR LPAREN LOCAL GLOBAL ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LPAREN LOCAL GLOBAL ]
## Transitions:
-- On STAR shift to state 30
-- On LPAREN shift to state 31
-- On LOCAL shift to state 151
-- On GLOBAL shift to state 152
-- On ident shift to state 231
## Reductions:

State 231:
## Known stack suffix:
## typ ident
## LR(1) items:
tident -> typ ident . [ RSQUARE LTLCURLY LT LSQUARE LPAREN LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_UNWIND KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I EOL COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production tident -> typ ident
-- On LTLCURLY reduce production tident -> typ ident
-- On LT reduce production tident -> typ ident
-- On LSQUARE reduce production tident -> typ ident
-- On LPAREN reduce production tident -> typ ident
-- On LCURLY reduce production tident -> typ ident
-- On KW_X86_MMX reduce production tident -> typ ident
-- On KW_X86_FP80 reduce production tident -> typ ident
-- On KW_VOID reduce production tident -> typ ident
-- On KW_UNWIND reduce production tident -> typ ident
-- On KW_PPC_FP128 reduce production tident -> typ ident
-- On KW_OPAQUE reduce production tident -> typ ident
-- On KW_METADATA reduce production tident -> typ ident
-- On KW_LABEL reduce production tident -> typ ident
-- On KW_HALF reduce production tident -> typ ident
-- On KW_FP128 reduce production tident -> typ ident
-- On KW_FLOAT reduce production tident -> typ ident
-- On KW_DOUBLE reduce production tident -> typ ident
-- On I reduce production tident -> typ ident
-- On EOL reduce production tident -> typ ident
-- On COMMA reduce production tident -> typ ident

State 232:
## Known stack suffix:
## KW_SWITCH tvalue COMMA tident
## LR(1) items:
instr -> KW_SWITCH tvalue COMMA tident . LSQUARE option(EOL) list(switch_table_entry) RSQUARE [ EOL ]
## Transitions:
-- On LSQUARE shift to state 233
## Reductions:

State 233:
## Known stack suffix:
## KW_SWITCH tvalue COMMA tident LSQUARE
## LR(1) items:
instr -> KW_SWITCH tvalue COMMA tident LSQUARE . option(EOL) list(switch_table_entry) RSQUARE [ EOL ]
## Transitions:
-- On EOL shift to state 234
-- On option(EOL) shift to state 235
## Reductions:
-- On RSQUARE reduce production option(EOL) ->
-- On LTLCURLY reduce production option(EOL) ->
-- On LT reduce production option(EOL) ->
-- On LSQUARE reduce production option(EOL) ->
-- On LCURLY reduce production option(EOL) ->
-- On KW_X86_MMX reduce production option(EOL) ->
-- On KW_X86_FP80 reduce production option(EOL) ->
-- On KW_VOID reduce production option(EOL) ->
-- On KW_PPC_FP128 reduce production option(EOL) ->
-- On KW_OPAQUE reduce production option(EOL) ->
-- On KW_METADATA reduce production option(EOL) ->
-- On KW_LABEL reduce production option(EOL) ->
-- On KW_HALF reduce production option(EOL) ->
-- On KW_FP128 reduce production option(EOL) ->
-- On KW_FLOAT reduce production option(EOL) ->
-- On KW_DOUBLE reduce production option(EOL) ->
-- On I reduce production option(EOL) ->

State 234:
## Known stack suffix:
## EOL
## LR(1) items:
option(EOL) -> EOL . [ RSQUARE LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production option(EOL) -> EOL
-- On LTLCURLY reduce production option(EOL) -> EOL
-- On LT reduce production option(EOL) -> EOL
-- On LSQUARE reduce production option(EOL) -> EOL
-- On LCURLY reduce production option(EOL) -> EOL
-- On KW_X86_MMX reduce production option(EOL) -> EOL
-- On KW_X86_FP80 reduce production option(EOL) -> EOL
-- On KW_VOID reduce production option(EOL) -> EOL
-- On KW_PPC_FP128 reduce production option(EOL) -> EOL
-- On KW_OPAQUE reduce production option(EOL) -> EOL
-- On KW_METADATA reduce production option(EOL) -> EOL
-- On KW_LABEL reduce production option(EOL) -> EOL
-- On KW_HALF reduce production option(EOL) -> EOL
-- On KW_FP128 reduce production option(EOL) -> EOL
-- On KW_FLOAT reduce production option(EOL) -> EOL
-- On KW_DOUBLE reduce production option(EOL) -> EOL
-- On I reduce production option(EOL) -> EOL

State 235:
## Known stack suffix:
## KW_SWITCH tvalue COMMA tident LSQUARE option(EOL)
## LR(1) items:
instr -> KW_SWITCH tvalue COMMA tident LSQUARE option(EOL) . list(switch_table_entry) RSQUARE [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 236
-- On switch_table_entry shift to state 240
-- On list(switch_table_entry) shift to state 242
## Reductions:
-- On RSQUARE reduce production list(switch_table_entry) ->

State 236:
## Known stack suffix:
## tvalue
## LR(1) items:
switch_table_entry -> tvalue . COMMA tident option(EOL) [ RSQUARE LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
-- On COMMA shift to state 237
## Reductions:

State 237:
## Known stack suffix:
## tvalue COMMA
## LR(1) items:
switch_table_entry -> tvalue COMMA . tident option(EOL) [ RSQUARE LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 230
-- On tident shift to state 238
## Reductions:

State 238:
## Known stack suffix:
## tvalue COMMA tident
## LR(1) items:
switch_table_entry -> tvalue COMMA tident . option(EOL) [ RSQUARE LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
-- On EOL shift to state 234
-- On option(EOL) shift to state 239
## Reductions:
-- On RSQUARE reduce production option(EOL) ->
-- On LTLCURLY reduce production option(EOL) ->
-- On LT reduce production option(EOL) ->
-- On LSQUARE reduce production option(EOL) ->
-- On LCURLY reduce production option(EOL) ->
-- On KW_X86_MMX reduce production option(EOL) ->
-- On KW_X86_FP80 reduce production option(EOL) ->
-- On KW_VOID reduce production option(EOL) ->
-- On KW_PPC_FP128 reduce production option(EOL) ->
-- On KW_OPAQUE reduce production option(EOL) ->
-- On KW_METADATA reduce production option(EOL) ->
-- On KW_LABEL reduce production option(EOL) ->
-- On KW_HALF reduce production option(EOL) ->
-- On KW_FP128 reduce production option(EOL) ->
-- On KW_FLOAT reduce production option(EOL) ->
-- On KW_DOUBLE reduce production option(EOL) ->
-- On I reduce production option(EOL) ->

State 239:
## Known stack suffix:
## tvalue COMMA tident option(EOL)
## LR(1) items:
switch_table_entry -> tvalue COMMA tident option(EOL) . [ RSQUARE LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On LTLCURLY reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On LT reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On LSQUARE reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On LCURLY reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On KW_X86_MMX reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On KW_X86_FP80 reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On KW_VOID reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On KW_PPC_FP128 reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On KW_OPAQUE reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On KW_METADATA reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On KW_LABEL reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On KW_HALF reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On KW_FP128 reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On KW_FLOAT reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On KW_DOUBLE reduce production switch_table_entry -> tvalue COMMA tident option(EOL)
-- On I reduce production switch_table_entry -> tvalue COMMA tident option(EOL)

State 240:
## Known stack suffix:
## switch_table_entry
## LR(1) items:
list(switch_table_entry) -> switch_table_entry . list(switch_table_entry) [ RSQUARE ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 236
-- On switch_table_entry shift to state 240
-- On list(switch_table_entry) shift to state 241
## Reductions:
-- On RSQUARE reduce production list(switch_table_entry) ->

State 241:
## Known stack suffix:
## switch_table_entry list(switch_table_entry)
## LR(1) items:
list(switch_table_entry) -> switch_table_entry list(switch_table_entry) . [ RSQUARE ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production list(switch_table_entry) -> switch_table_entry list(switch_table_entry)

State 242:
## Known stack suffix:
## KW_SWITCH tvalue COMMA tident LSQUARE option(EOL) list(switch_table_entry)
## LR(1) items:
instr -> KW_SWITCH tvalue COMMA tident LSQUARE option(EOL) list(switch_table_entry) . RSQUARE [ EOL ]
## Transitions:
-- On RSQUARE shift to state 243
## Reductions:

State 243:
## Known stack suffix:
## KW_SWITCH tvalue COMMA tident LSQUARE option(EOL) list(switch_table_entry) RSQUARE
## LR(1) items:
instr -> KW_SWITCH tvalue COMMA tident LSQUARE option(EOL) list(switch_table_entry) RSQUARE . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_SWITCH tvalue COMMA tident LSQUARE option(EOL) list(switch_table_entry) RSQUARE

State 244:
## Known stack suffix:
## KW_SUB
## LR(1) items:
ibinop_nuw_nsw_opt -> KW_SUB . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NUW KW_NSW KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On LT reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On LSQUARE reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On LCURLY reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_X86_MMX reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_X86_FP80 reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_VOID reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_PPC_FP128 reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_OPAQUE reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_NUW reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_NSW reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_METADATA reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_LABEL reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_HALF reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_FP128 reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_FLOAT reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On KW_DOUBLE reduce production ibinop_nuw_nsw_opt -> KW_SUB
-- On I reduce production ibinop_nuw_nsw_opt -> KW_SUB

State 245:
## Known stack suffix:
## KW_STORE
## LR(1) items:
instr -> KW_STORE . option(KW_VOLATILE) tvalue COMMA tident option(preceded(COMMA,align)) [ EOL ]
## Transitions:
-- On KW_VOLATILE shift to state 246
-- On option(KW_VOLATILE) shift to state 247
## Reductions:
-- On LTLCURLY reduce production option(KW_VOLATILE) ->
-- On LT reduce production option(KW_VOLATILE) ->
-- On LSQUARE reduce production option(KW_VOLATILE) ->
-- On LCURLY reduce production option(KW_VOLATILE) ->
-- On KW_X86_MMX reduce production option(KW_VOLATILE) ->
-- On KW_X86_FP80 reduce production option(KW_VOLATILE) ->
-- On KW_VOID reduce production option(KW_VOLATILE) ->
-- On KW_PPC_FP128 reduce production option(KW_VOLATILE) ->
-- On KW_OPAQUE reduce production option(KW_VOLATILE) ->
-- On KW_METADATA reduce production option(KW_VOLATILE) ->
-- On KW_LABEL reduce production option(KW_VOLATILE) ->
-- On KW_HALF reduce production option(KW_VOLATILE) ->
-- On KW_FP128 reduce production option(KW_VOLATILE) ->
-- On KW_FLOAT reduce production option(KW_VOLATILE) ->
-- On KW_DOUBLE reduce production option(KW_VOLATILE) ->
-- On I reduce production option(KW_VOLATILE) ->

State 246:
## Known stack suffix:
## KW_VOLATILE
## LR(1) items:
option(KW_VOLATILE) -> KW_VOLATILE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On LT reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On LSQUARE reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On LCURLY reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On KW_X86_MMX reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On KW_X86_FP80 reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On KW_VOID reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On KW_PPC_FP128 reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On KW_OPAQUE reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On KW_METADATA reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On KW_LABEL reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On KW_HALF reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On KW_FP128 reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On KW_FLOAT reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On KW_DOUBLE reduce production option(KW_VOLATILE) -> KW_VOLATILE
-- On I reduce production option(KW_VOLATILE) -> KW_VOLATILE

State 247:
## Known stack suffix:
## KW_STORE option(KW_VOLATILE)
## LR(1) items:
instr -> KW_STORE option(KW_VOLATILE) . tvalue COMMA tident option(preceded(COMMA,align)) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 248
## Reductions:

State 248:
## Known stack suffix:
## KW_STORE option(KW_VOLATILE) tvalue
## LR(1) items:
instr -> KW_STORE option(KW_VOLATILE) tvalue . COMMA tident option(preceded(COMMA,align)) [ EOL ]
## Transitions:
-- On COMMA shift to state 249
## Reductions:

State 249:
## Known stack suffix:
## KW_STORE option(KW_VOLATILE) tvalue COMMA
## LR(1) items:
instr -> KW_STORE option(KW_VOLATILE) tvalue COMMA . tident option(preceded(COMMA,align)) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 230
-- On tident shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## KW_STORE option(KW_VOLATILE) tvalue COMMA tident
## LR(1) items:
instr -> KW_STORE option(KW_VOLATILE) tvalue COMMA tident . option(preceded(COMMA,align)) [ EOL ]
## Transitions:
-- On COMMA shift to state 251
-- On option(preceded(COMMA,align)) shift to state 253
## Reductions:
-- On EOL reduce production option(preceded(COMMA,align)) ->

State 251:
## Known stack suffix:
## COMMA
## LR(1) items:
option(preceded(COMMA,align)) -> COMMA . align [ EOL ]
## Transitions:
-- On KW_ALIGN shift to state 196
-- On align shift to state 252
## Reductions:

State 252:
## Known stack suffix:
## COMMA align
## LR(1) items:
option(preceded(COMMA,align)) -> COMMA align . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production option(preceded(COMMA,align)) -> COMMA align

State 253:
## Known stack suffix:
## KW_STORE option(KW_VOLATILE) tvalue COMMA tident option(preceded(COMMA,align))
## LR(1) items:
instr -> KW_STORE option(KW_VOLATILE) tvalue COMMA tident option(preceded(COMMA,align)) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_STORE option(KW_VOLATILE) tvalue COMMA tident option(preceded(COMMA,align))

State 254:
## Known stack suffix:
## KW_SREM
## LR(1) items:
ibinop_no_opt -> KW_SREM . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_no_opt -> KW_SREM
-- On LT reduce production ibinop_no_opt -> KW_SREM
-- On LSQUARE reduce production ibinop_no_opt -> KW_SREM
-- On LCURLY reduce production ibinop_no_opt -> KW_SREM
-- On KW_X86_MMX reduce production ibinop_no_opt -> KW_SREM
-- On KW_X86_FP80 reduce production ibinop_no_opt -> KW_SREM
-- On KW_VOID reduce production ibinop_no_opt -> KW_SREM
-- On KW_PPC_FP128 reduce production ibinop_no_opt -> KW_SREM
-- On KW_OPAQUE reduce production ibinop_no_opt -> KW_SREM
-- On KW_METADATA reduce production ibinop_no_opt -> KW_SREM
-- On KW_LABEL reduce production ibinop_no_opt -> KW_SREM
-- On KW_HALF reduce production ibinop_no_opt -> KW_SREM
-- On KW_FP128 reduce production ibinop_no_opt -> KW_SREM
-- On KW_FLOAT reduce production ibinop_no_opt -> KW_SREM
-- On KW_DOUBLE reduce production ibinop_no_opt -> KW_SREM
-- On I reduce production ibinop_no_opt -> KW_SREM

State 255:
## Known stack suffix:
## KW_SITOFP
## LR(1) items:
conversion -> KW_SITOFP . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_SITOFP
-- On LT reduce production conversion -> KW_SITOFP
-- On LSQUARE reduce production conversion -> KW_SITOFP
-- On LCURLY reduce production conversion -> KW_SITOFP
-- On KW_X86_MMX reduce production conversion -> KW_SITOFP
-- On KW_X86_FP80 reduce production conversion -> KW_SITOFP
-- On KW_VOID reduce production conversion -> KW_SITOFP
-- On KW_PPC_FP128 reduce production conversion -> KW_SITOFP
-- On KW_OPAQUE reduce production conversion -> KW_SITOFP
-- On KW_METADATA reduce production conversion -> KW_SITOFP
-- On KW_LABEL reduce production conversion -> KW_SITOFP
-- On KW_HALF reduce production conversion -> KW_SITOFP
-- On KW_FP128 reduce production conversion -> KW_SITOFP
-- On KW_FLOAT reduce production conversion -> KW_SITOFP
-- On KW_DOUBLE reduce production conversion -> KW_SITOFP
-- On I reduce production conversion -> KW_SITOFP

State 256:
## Known stack suffix:
## KW_SHUFFLEVECTOR
## LR(1) items:
instr -> KW_SHUFFLEVECTOR . tvalue COMMA tvalue COMMA tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 257
## Reductions:

State 257:
## Known stack suffix:
## KW_SHUFFLEVECTOR tvalue
## LR(1) items:
instr -> KW_SHUFFLEVECTOR tvalue . COMMA tvalue COMMA tvalue [ EOL ]
## Transitions:
-- On COMMA shift to state 258
## Reductions:

State 258:
## Known stack suffix:
## KW_SHUFFLEVECTOR tvalue COMMA
## LR(1) items:
instr -> KW_SHUFFLEVECTOR tvalue COMMA . tvalue COMMA tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 259
## Reductions:

State 259:
## Known stack suffix:
## KW_SHUFFLEVECTOR tvalue COMMA tvalue
## LR(1) items:
instr -> KW_SHUFFLEVECTOR tvalue COMMA tvalue . COMMA tvalue [ EOL ]
## Transitions:
-- On COMMA shift to state 260
## Reductions:

State 260:
## Known stack suffix:
## KW_SHUFFLEVECTOR tvalue COMMA tvalue COMMA
## LR(1) items:
instr -> KW_SHUFFLEVECTOR tvalue COMMA tvalue COMMA . tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 261
## Reductions:

State 261:
## Known stack suffix:
## KW_SHUFFLEVECTOR tvalue COMMA tvalue COMMA tvalue
## LR(1) items:
instr -> KW_SHUFFLEVECTOR tvalue COMMA tvalue COMMA tvalue . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_SHUFFLEVECTOR tvalue COMMA tvalue COMMA tvalue

State 262:
## Known stack suffix:
## KW_SHL
## LR(1) items:
ibinop_nuw_nsw_opt -> KW_SHL . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NUW KW_NSW KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On LT reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On LSQUARE reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On LCURLY reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_X86_MMX reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_X86_FP80 reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_VOID reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_PPC_FP128 reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_OPAQUE reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_NUW reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_NSW reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_METADATA reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_LABEL reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_HALF reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_FP128 reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_FLOAT reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On KW_DOUBLE reduce production ibinop_nuw_nsw_opt -> KW_SHL
-- On I reduce production ibinop_nuw_nsw_opt -> KW_SHL

State 263:
## Known stack suffix:
## KW_SEXT
## LR(1) items:
conversion -> KW_SEXT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_SEXT
-- On LT reduce production conversion -> KW_SEXT
-- On LSQUARE reduce production conversion -> KW_SEXT
-- On LCURLY reduce production conversion -> KW_SEXT
-- On KW_X86_MMX reduce production conversion -> KW_SEXT
-- On KW_X86_FP80 reduce production conversion -> KW_SEXT
-- On KW_VOID reduce production conversion -> KW_SEXT
-- On KW_PPC_FP128 reduce production conversion -> KW_SEXT
-- On KW_OPAQUE reduce production conversion -> KW_SEXT
-- On KW_METADATA reduce production conversion -> KW_SEXT
-- On KW_LABEL reduce production conversion -> KW_SEXT
-- On KW_HALF reduce production conversion -> KW_SEXT
-- On KW_FP128 reduce production conversion -> KW_SEXT
-- On KW_FLOAT reduce production conversion -> KW_SEXT
-- On KW_DOUBLE reduce production conversion -> KW_SEXT
-- On I reduce production conversion -> KW_SEXT

State 264:
## Known stack suffix:
## KW_SELECT
## LR(1) items:
instr -> KW_SELECT . tvalue COMMA tvalue COMMA tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 265
## Reductions:

State 265:
## Known stack suffix:
## KW_SELECT tvalue
## LR(1) items:
instr -> KW_SELECT tvalue . COMMA tvalue COMMA tvalue [ EOL ]
## Transitions:
-- On COMMA shift to state 266
## Reductions:

State 266:
## Known stack suffix:
## KW_SELECT tvalue COMMA
## LR(1) items:
instr -> KW_SELECT tvalue COMMA . tvalue COMMA tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## KW_SELECT tvalue COMMA tvalue
## LR(1) items:
instr -> KW_SELECT tvalue COMMA tvalue . COMMA tvalue [ EOL ]
## Transitions:
-- On COMMA shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## KW_SELECT tvalue COMMA tvalue COMMA
## LR(1) items:
instr -> KW_SELECT tvalue COMMA tvalue COMMA . tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 269
## Reductions:

State 269:
## Known stack suffix:
## KW_SELECT tvalue COMMA tvalue COMMA tvalue
## LR(1) items:
instr -> KW_SELECT tvalue COMMA tvalue COMMA tvalue . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_SELECT tvalue COMMA tvalue COMMA tvalue

State 270:
## Known stack suffix:
## KW_SDIV
## LR(1) items:
ibinop_exact_opt -> KW_SDIV . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_EXACT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_exact_opt -> KW_SDIV
-- On LT reduce production ibinop_exact_opt -> KW_SDIV
-- On LSQUARE reduce production ibinop_exact_opt -> KW_SDIV
-- On LCURLY reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_X86_MMX reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_X86_FP80 reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_VOID reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_PPC_FP128 reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_OPAQUE reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_METADATA reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_LABEL reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_HALF reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_FP128 reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_FLOAT reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_EXACT reduce production ibinop_exact_opt -> KW_SDIV
-- On KW_DOUBLE reduce production ibinop_exact_opt -> KW_SDIV
-- On I reduce production ibinop_exact_opt -> KW_SDIV

State 271:
## Known stack suffix:
## KW_RET
## LR(1) items:
instr -> KW_RET . typ value [ EOL ]
instr -> KW_RET . KW_VOID [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 272
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 273
## Reductions:

State 272:
## Known stack suffix:
## KW_RET KW_VOID
## LR(1) items:
instr -> KW_RET KW_VOID . [ EOL ]
typ -> KW_VOID . [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
## Transitions:
## Reductions:
-- On STAR reduce production typ -> KW_VOID
-- On LTLCURLY reduce production typ -> KW_VOID
-- On LT reduce production typ -> KW_VOID
-- On LSQUARE reduce production typ -> KW_VOID
-- On LPAREN reduce production typ -> KW_VOID
-- On LOCAL reduce production typ -> KW_VOID
-- On LCURLY reduce production typ -> KW_VOID
-- On KW_ZEROINITIALIZER reduce production typ -> KW_VOID
-- On KW_UNDEF reduce production typ -> KW_VOID
-- On KW_TRUE reduce production typ -> KW_VOID
-- On KW_NULL reduce production typ -> KW_VOID
-- On KW_FALSE reduce production typ -> KW_VOID
-- On INTEGER reduce production typ -> KW_VOID
-- On GLOBAL reduce production typ -> KW_VOID
-- On FLOAT reduce production typ -> KW_VOID
-- On EOL reduce production instr -> KW_RET KW_VOID

State 273:
## Known stack suffix:
## KW_RET typ
## LR(1) items:
instr -> KW_RET typ . value [ EOL ]
typ -> typ . STAR [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
## Transitions:
-- On STAR shift to state 30
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LPAREN shift to state 31
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 274
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 274:
## Known stack suffix:
## KW_RET typ value
## LR(1) items:
instr -> KW_RET typ value . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_RET typ value

State 275:
## Known stack suffix:
## KW_RESUME
## LR(1) items:
instr -> KW_RESUME . tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 276
## Reductions:

State 276:
## Known stack suffix:
## KW_RESUME tvalue
## LR(1) items:
instr -> KW_RESUME tvalue . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_RESUME tvalue

State 277:
## Known stack suffix:
## KW_PTRTOINT
## LR(1) items:
conversion -> KW_PTRTOINT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_PTRTOINT
-- On LT reduce production conversion -> KW_PTRTOINT
-- On LSQUARE reduce production conversion -> KW_PTRTOINT
-- On LCURLY reduce production conversion -> KW_PTRTOINT
-- On KW_X86_MMX reduce production conversion -> KW_PTRTOINT
-- On KW_X86_FP80 reduce production conversion -> KW_PTRTOINT
-- On KW_VOID reduce production conversion -> KW_PTRTOINT
-- On KW_PPC_FP128 reduce production conversion -> KW_PTRTOINT
-- On KW_OPAQUE reduce production conversion -> KW_PTRTOINT
-- On KW_METADATA reduce production conversion -> KW_PTRTOINT
-- On KW_LABEL reduce production conversion -> KW_PTRTOINT
-- On KW_HALF reduce production conversion -> KW_PTRTOINT
-- On KW_FP128 reduce production conversion -> KW_PTRTOINT
-- On KW_FLOAT reduce production conversion -> KW_PTRTOINT
-- On KW_DOUBLE reduce production conversion -> KW_PTRTOINT
-- On I reduce production conversion -> KW_PTRTOINT

State 278:
## Known stack suffix:
## KW_PHI
## LR(1) items:
instr -> KW_PHI . typ separated_nonempty_list(COMMA,phi_table_entry) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## KW_PHI typ
## LR(1) items:
instr -> KW_PHI typ . separated_nonempty_list(COMMA,phi_table_entry) [ EOL ]
typ -> typ . STAR [ STAR LSQUARE LPAREN ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LSQUARE LPAREN ]
## Transitions:
-- On STAR shift to state 30
-- On LSQUARE shift to state 280
-- On LPAREN shift to state 31
-- On separated_nonempty_list(COMMA,phi_table_entry) shift to state 285
-- On phi_table_entry shift to state 286
## Reductions:

State 280:
## Known stack suffix:
## LSQUARE
## LR(1) items:
phi_table_entry -> LSQUARE . value COMMA ident RSQUARE [ EOL COMMA ]
## Transitions:
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 281
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 281:
## Known stack suffix:
## LSQUARE value
## LR(1) items:
phi_table_entry -> LSQUARE value . COMMA ident RSQUARE [ EOL COMMA ]
## Transitions:
-- On COMMA shift to state 282
## Reductions:

State 282:
## Known stack suffix:
## LSQUARE value COMMA
## LR(1) items:
phi_table_entry -> LSQUARE value COMMA . ident RSQUARE [ EOL COMMA ]
## Transitions:
-- On LOCAL shift to state 151
-- On GLOBAL shift to state 152
-- On ident shift to state 283
## Reductions:

State 283:
## Known stack suffix:
## LSQUARE value COMMA ident
## LR(1) items:
phi_table_entry -> LSQUARE value COMMA ident . RSQUARE [ EOL COMMA ]
## Transitions:
-- On RSQUARE shift to state 284
## Reductions:

State 284:
## Known stack suffix:
## LSQUARE value COMMA ident RSQUARE
## LR(1) items:
phi_table_entry -> LSQUARE value COMMA ident RSQUARE . [ EOL COMMA ]
## Transitions:
## Reductions:
-- On EOL reduce production phi_table_entry -> LSQUARE value COMMA ident RSQUARE
-- On COMMA reduce production phi_table_entry -> LSQUARE value COMMA ident RSQUARE

State 285:
## Known stack suffix:
## KW_PHI typ separated_nonempty_list(COMMA,phi_table_entry)
## LR(1) items:
instr -> KW_PHI typ separated_nonempty_list(COMMA,phi_table_entry) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_PHI typ separated_nonempty_list(COMMA,phi_table_entry)

State 286:
## Known stack suffix:
## phi_table_entry
## LR(1) items:
separated_nonempty_list(COMMA,phi_table_entry) -> phi_table_entry . [ EOL ]
separated_nonempty_list(COMMA,phi_table_entry) -> phi_table_entry . COMMA separated_nonempty_list(COMMA,phi_table_entry) [ EOL ]
## Transitions:
-- On COMMA shift to state 287
## Reductions:
-- On EOL reduce production separated_nonempty_list(COMMA,phi_table_entry) -> phi_table_entry

State 287:
## Known stack suffix:
## phi_table_entry COMMA
## LR(1) items:
separated_nonempty_list(COMMA,phi_table_entry) -> phi_table_entry COMMA . separated_nonempty_list(COMMA,phi_table_entry) [ EOL ]
## Transitions:
-- On LSQUARE shift to state 280
-- On separated_nonempty_list(COMMA,phi_table_entry) shift to state 288
-- On phi_table_entry shift to state 286
## Reductions:

State 288:
## Known stack suffix:
## phi_table_entry COMMA separated_nonempty_list(COMMA,phi_table_entry)
## LR(1) items:
separated_nonempty_list(COMMA,phi_table_entry) -> phi_table_entry COMMA separated_nonempty_list(COMMA,phi_table_entry) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production separated_nonempty_list(COMMA,phi_table_entry) -> phi_table_entry COMMA separated_nonempty_list(COMMA,phi_table_entry)

State 289:
## Known stack suffix:
## KW_OR
## LR(1) items:
ibinop_no_opt -> KW_OR . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_no_opt -> KW_OR
-- On LT reduce production ibinop_no_opt -> KW_OR
-- On LSQUARE reduce production ibinop_no_opt -> KW_OR
-- On LCURLY reduce production ibinop_no_opt -> KW_OR
-- On KW_X86_MMX reduce production ibinop_no_opt -> KW_OR
-- On KW_X86_FP80 reduce production ibinop_no_opt -> KW_OR
-- On KW_VOID reduce production ibinop_no_opt -> KW_OR
-- On KW_PPC_FP128 reduce production ibinop_no_opt -> KW_OR
-- On KW_OPAQUE reduce production ibinop_no_opt -> KW_OR
-- On KW_METADATA reduce production ibinop_no_opt -> KW_OR
-- On KW_LABEL reduce production ibinop_no_opt -> KW_OR
-- On KW_HALF reduce production ibinop_no_opt -> KW_OR
-- On KW_FP128 reduce production ibinop_no_opt -> KW_OR
-- On KW_FLOAT reduce production ibinop_no_opt -> KW_OR
-- On KW_DOUBLE reduce production ibinop_no_opt -> KW_OR
-- On I reduce production ibinop_no_opt -> KW_OR

State 290:
## Known stack suffix:
## KW_MUL
## LR(1) items:
ibinop_nuw_nsw_opt -> KW_MUL . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NUW KW_NSW KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On LT reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On LSQUARE reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On LCURLY reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_X86_MMX reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_X86_FP80 reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_VOID reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_PPC_FP128 reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_OPAQUE reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_NUW reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_NSW reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_METADATA reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_LABEL reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_HALF reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_FP128 reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_FLOAT reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On KW_DOUBLE reduce production ibinop_nuw_nsw_opt -> KW_MUL
-- On I reduce production ibinop_nuw_nsw_opt -> KW_MUL

State 291:
## Known stack suffix:
## KW_LSHR
## LR(1) items:
ibinop_exact_opt -> KW_LSHR . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_EXACT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_exact_opt -> KW_LSHR
-- On LT reduce production ibinop_exact_opt -> KW_LSHR
-- On LSQUARE reduce production ibinop_exact_opt -> KW_LSHR
-- On LCURLY reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_X86_MMX reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_X86_FP80 reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_VOID reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_PPC_FP128 reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_OPAQUE reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_METADATA reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_LABEL reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_HALF reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_FP128 reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_FLOAT reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_EXACT reduce production ibinop_exact_opt -> KW_LSHR
-- On KW_DOUBLE reduce production ibinop_exact_opt -> KW_LSHR
-- On I reduce production ibinop_exact_opt -> KW_LSHR

State 292:
## Known stack suffix:
## KW_LOAD
## LR(1) items:
instr -> KW_LOAD . option(KW_VOLATILE) tvalue option(preceded(COMMA,align)) [ EOL ]
## Transitions:
-- On KW_VOLATILE shift to state 246
-- On option(KW_VOLATILE) shift to state 293
## Reductions:
-- On LTLCURLY reduce production option(KW_VOLATILE) ->
-- On LT reduce production option(KW_VOLATILE) ->
-- On LSQUARE reduce production option(KW_VOLATILE) ->
-- On LCURLY reduce production option(KW_VOLATILE) ->
-- On KW_X86_MMX reduce production option(KW_VOLATILE) ->
-- On KW_X86_FP80 reduce production option(KW_VOLATILE) ->
-- On KW_VOID reduce production option(KW_VOLATILE) ->
-- On KW_PPC_FP128 reduce production option(KW_VOLATILE) ->
-- On KW_OPAQUE reduce production option(KW_VOLATILE) ->
-- On KW_METADATA reduce production option(KW_VOLATILE) ->
-- On KW_LABEL reduce production option(KW_VOLATILE) ->
-- On KW_HALF reduce production option(KW_VOLATILE) ->
-- On KW_FP128 reduce production option(KW_VOLATILE) ->
-- On KW_FLOAT reduce production option(KW_VOLATILE) ->
-- On KW_DOUBLE reduce production option(KW_VOLATILE) ->
-- On I reduce production option(KW_VOLATILE) ->

State 293:
## Known stack suffix:
## KW_LOAD option(KW_VOLATILE)
## LR(1) items:
instr -> KW_LOAD option(KW_VOLATILE) . tvalue option(preceded(COMMA,align)) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 294
## Reductions:

State 294:
## Known stack suffix:
## KW_LOAD option(KW_VOLATILE) tvalue
## LR(1) items:
instr -> KW_LOAD option(KW_VOLATILE) tvalue . option(preceded(COMMA,align)) [ EOL ]
## Transitions:
-- On COMMA shift to state 251
-- On option(preceded(COMMA,align)) shift to state 295
## Reductions:
-- On EOL reduce production option(preceded(COMMA,align)) ->

State 295:
## Known stack suffix:
## KW_LOAD option(KW_VOLATILE) tvalue option(preceded(COMMA,align))
## LR(1) items:
instr -> KW_LOAD option(KW_VOLATILE) tvalue option(preceded(COMMA,align)) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_LOAD option(KW_VOLATILE) tvalue option(preceded(COMMA,align))

State 296:
## Known stack suffix:
## KW_LANDINGPAD
## LR(1) items:
instr -> KW_LANDINGPAD . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_LANDINGPAD

State 297:
## Known stack suffix:
## KW_INVOKE
## LR(1) items:
instr -> KW_INVOKE . option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO tident KW_UNWIND tident [ EOL ]
## Transitions:
-- On KW_FASTCC shift to state 111
-- On KW_COLDCC shift to state 118
-- On KW_CCC shift to state 119
-- On KW_CC shift to state 120
-- On option(cconv) shift to state 298
-- On cconv shift to state 316
## Reductions:
-- On LTLCURLY reduce production option(cconv) ->
-- On LT reduce production option(cconv) ->
-- On LSQUARE reduce production option(cconv) ->
-- On LCURLY reduce production option(cconv) ->
-- On KW_X86_MMX reduce production option(cconv) ->
-- On KW_X86_FP80 reduce production option(cconv) ->
-- On KW_VOID reduce production option(cconv) ->
-- On KW_PPC_FP128 reduce production option(cconv) ->
-- On KW_OPAQUE reduce production option(cconv) ->
-- On KW_METADATA reduce production option(cconv) ->
-- On KW_LABEL reduce production option(cconv) ->
-- On KW_HALF reduce production option(cconv) ->
-- On KW_FP128 reduce production option(cconv) ->
-- On KW_FLOAT reduce production option(cconv) ->
-- On KW_DOUBLE reduce production option(cconv) ->
-- On I reduce production option(cconv) ->

State 298:
## Known stack suffix:
## KW_INVOKE option(cconv)
## LR(1) items:
instr -> KW_INVOKE option(cconv) . tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO tident KW_UNWIND tident [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 230
-- On tident shift to state 299
## Reductions:

State 299:
## Known stack suffix:
## KW_INVOKE option(cconv) tident
## LR(1) items:
instr -> KW_INVOKE option(cconv) tident . LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO tident KW_UNWIND tident [ EOL ]
## Transitions:
-- On LPAREN shift to state 300
## Reductions:

State 300:
## Known stack suffix:
## KW_INVOKE option(cconv) tident LPAREN
## LR(1) items:
instr -> KW_INVOKE option(cconv) tident LPAREN . loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO tident KW_UNWIND tident [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 301
-- On separated_nonempty_list(COMMA,call_arg) shift to state 303
-- On loption(separated_nonempty_list(COMMA,call_arg)) shift to state 304
-- On call_arg shift to state 313
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,call_arg)) ->

State 301:
## Known stack suffix:
## typ
## LR(1) items:
call_arg -> typ . value [ RPAREN COMMA ]
typ -> typ . STAR [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
## Transitions:
-- On STAR shift to state 30
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LPAREN shift to state 31
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 302
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 302:
## Known stack suffix:
## typ value
## LR(1) items:
call_arg -> typ value . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production call_arg -> typ value
-- On COMMA reduce production call_arg -> typ value

State 303:
## Known stack suffix:
## separated_nonempty_list(COMMA,call_arg)
## LR(1) items:
loption(separated_nonempty_list(COMMA,call_arg)) -> separated_nonempty_list(COMMA,call_arg) . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,call_arg)) -> separated_nonempty_list(COMMA,call_arg)

State 304:
## Known stack suffix:
## KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg))
## LR(1) items:
instr -> KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) . RPAREN list(fn_attr) KW_TO tident KW_UNWIND tident [ EOL ]
## Transitions:
-- On RPAREN shift to state 305
## Reductions:

State 305:
## Known stack suffix:
## KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN
## LR(1) items:
instr -> KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN . list(fn_attr) KW_TO tident KW_UNWIND tident [ EOL ]
## Transitions:
-- On STRING shift to state 157
-- On KW_UWTABLE shift to state 160
-- On KW_SSPSTRONG shift to state 162
-- On KW_SSPREQ shift to state 163
-- On KW_SSP shift to state 164
-- On KW_SANITIZE_THREAD shift to state 167
-- On KW_SANITIZE_MEMORY shift to state 168
-- On KW_SANITIZE_ADDRESS shift to state 169
-- On KW_RETURNS_TWICE shift to state 170
-- On KW_READONLY shift to state 171
-- On KW_READNONE shift to state 172
-- On KW_OPTSIZE shift to state 173
-- On KW_OPTNONE shift to state 174
-- On KW_NOUNWIND shift to state 175
-- On KW_NORETURN shift to state 176
-- On KW_NOREDZONE shift to state 177
-- On KW_NONLAZYBIND shift to state 178
-- On KW_NOINLINE shift to state 179
-- On KW_NOIMPLICITFLOAT shift to state 180
-- On KW_NODUPLICATE shift to state 181
-- On KW_NOBUILTIN shift to state 182
-- On KW_NAKED shift to state 183
-- On KW_MINSIZE shift to state 184
-- On KW_JUMPTABLE shift to state 185
-- On KW_INLINEHINT shift to state 186
-- On KW_COLD shift to state 189
-- On KW_BUILTIN shift to state 190
-- On KW_ALWAYSINLINE shift to state 191
-- On KW_ALIGNSTACK shift to state 192
-- On ATTR_GRP_ID shift to state 202
-- On list(fn_attr) shift to state 306
-- On fn_attr shift to state 311
## Reductions:
-- On KW_TO reduce production list(fn_attr) ->

State 306:
## Known stack suffix:
## KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr)
## LR(1) items:
instr -> KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) . KW_TO tident KW_UNWIND tident [ EOL ]
## Transitions:
-- On KW_TO shift to state 307
## Reductions:

State 307:
## Known stack suffix:
## KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO
## LR(1) items:
instr -> KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO . tident KW_UNWIND tident [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 230
-- On tident shift to state 308
## Reductions:

State 308:
## Known stack suffix:
## KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO tident
## LR(1) items:
instr -> KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO tident . KW_UNWIND tident [ EOL ]
## Transitions:
-- On KW_UNWIND shift to state 309
## Reductions:

State 309:
## Known stack suffix:
## KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO tident KW_UNWIND
## LR(1) items:
instr -> KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO tident KW_UNWIND . tident [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 230
-- On tident shift to state 310
## Reductions:

State 310:
## Known stack suffix:
## KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO tident KW_UNWIND tident
## LR(1) items:
instr -> KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO tident KW_UNWIND tident . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_INVOKE option(cconv) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) KW_TO tident KW_UNWIND tident

State 311:
## Known stack suffix:
## fn_attr
## LR(1) items:
list(fn_attr) -> fn_attr . list(fn_attr) [ RCURLY KW_TO EOL ]
## Transitions:
-- On STRING shift to state 157
-- On KW_UWTABLE shift to state 160
-- On KW_SSPSTRONG shift to state 162
-- On KW_SSPREQ shift to state 163
-- On KW_SSP shift to state 164
-- On KW_SANITIZE_THREAD shift to state 167
-- On KW_SANITIZE_MEMORY shift to state 168
-- On KW_SANITIZE_ADDRESS shift to state 169
-- On KW_RETURNS_TWICE shift to state 170
-- On KW_READONLY shift to state 171
-- On KW_READNONE shift to state 172
-- On KW_OPTSIZE shift to state 173
-- On KW_OPTNONE shift to state 174
-- On KW_NOUNWIND shift to state 175
-- On KW_NORETURN shift to state 176
-- On KW_NOREDZONE shift to state 177
-- On KW_NONLAZYBIND shift to state 178
-- On KW_NOINLINE shift to state 179
-- On KW_NOIMPLICITFLOAT shift to state 180
-- On KW_NODUPLICATE shift to state 181
-- On KW_NOBUILTIN shift to state 182
-- On KW_NAKED shift to state 183
-- On KW_MINSIZE shift to state 184
-- On KW_JUMPTABLE shift to state 185
-- On KW_INLINEHINT shift to state 186
-- On KW_COLD shift to state 189
-- On KW_BUILTIN shift to state 190
-- On KW_ALWAYSINLINE shift to state 191
-- On KW_ALIGNSTACK shift to state 192
-- On ATTR_GRP_ID shift to state 202
-- On list(fn_attr) shift to state 312
-- On fn_attr shift to state 311
## Reductions:
-- On RCURLY reduce production list(fn_attr) ->
-- On KW_TO reduce production list(fn_attr) ->
-- On EOL reduce production list(fn_attr) ->

State 312:
## Known stack suffix:
## fn_attr list(fn_attr)
## LR(1) items:
list(fn_attr) -> fn_attr list(fn_attr) . [ RCURLY KW_TO EOL ]
## Transitions:
## Reductions:
-- On RCURLY reduce production list(fn_attr) -> fn_attr list(fn_attr)
-- On KW_TO reduce production list(fn_attr) -> fn_attr list(fn_attr)
-- On EOL reduce production list(fn_attr) -> fn_attr list(fn_attr)

State 313:
## Known stack suffix:
## call_arg
## LR(1) items:
separated_nonempty_list(COMMA,call_arg) -> call_arg . [ RPAREN ]
separated_nonempty_list(COMMA,call_arg) -> call_arg . COMMA separated_nonempty_list(COMMA,call_arg) [ RPAREN ]
## Transitions:
-- On COMMA shift to state 314
## Reductions:
-- On RPAREN reduce production separated_nonempty_list(COMMA,call_arg) -> call_arg

State 314:
## Known stack suffix:
## call_arg COMMA
## LR(1) items:
separated_nonempty_list(COMMA,call_arg) -> call_arg COMMA . separated_nonempty_list(COMMA,call_arg) [ RPAREN ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 301
-- On separated_nonempty_list(COMMA,call_arg) shift to state 315
-- On call_arg shift to state 313
## Reductions:

State 315:
## Known stack suffix:
## call_arg COMMA separated_nonempty_list(COMMA,call_arg)
## LR(1) items:
separated_nonempty_list(COMMA,call_arg) -> call_arg COMMA separated_nonempty_list(COMMA,call_arg) . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN reduce production separated_nonempty_list(COMMA,call_arg) -> call_arg COMMA separated_nonempty_list(COMMA,call_arg)

State 316:
## Known stack suffix:
## cconv
## LR(1) items:
option(cconv) -> cconv . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production option(cconv) -> cconv
-- On LT reduce production option(cconv) -> cconv
-- On LSQUARE reduce production option(cconv) -> cconv
-- On LCURLY reduce production option(cconv) -> cconv
-- On KW_ZEROEXT reduce production option(cconv) -> cconv
-- On KW_X86_MMX reduce production option(cconv) -> cconv
-- On KW_X86_FP80 reduce production option(cconv) -> cconv
-- On KW_VOID reduce production option(cconv) -> cconv
-- On KW_SRET reduce production option(cconv) -> cconv
-- On KW_SIGNEXT reduce production option(cconv) -> cconv
-- On KW_RETURNED reduce production option(cconv) -> cconv
-- On KW_PPC_FP128 reduce production option(cconv) -> cconv
-- On KW_OPAQUE reduce production option(cconv) -> cconv
-- On KW_NONNULL reduce production option(cconv) -> cconv
-- On KW_NOCAPTURE reduce production option(cconv) -> cconv
-- On KW_NOALIAS reduce production option(cconv) -> cconv
-- On KW_NEST reduce production option(cconv) -> cconv
-- On KW_METADATA reduce production option(cconv) -> cconv
-- On KW_LABEL reduce production option(cconv) -> cconv
-- On KW_INREG reduce production option(cconv) -> cconv
-- On KW_INALLOCA reduce production option(cconv) -> cconv
-- On KW_HALF reduce production option(cconv) -> cconv
-- On KW_FP128 reduce production option(cconv) -> cconv
-- On KW_FLOAT reduce production option(cconv) -> cconv
-- On KW_DOUBLE reduce production option(cconv) -> cconv
-- On KW_DEREFERENCEABLE reduce production option(cconv) -> cconv
-- On KW_BYVAL reduce production option(cconv) -> cconv
-- On KW_ALIGN reduce production option(cconv) -> cconv
-- On I reduce production option(cconv) -> cconv

State 317:
## Known stack suffix:
## KW_INTTOPTR
## LR(1) items:
conversion -> KW_INTTOPTR . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_INTTOPTR
-- On LT reduce production conversion -> KW_INTTOPTR
-- On LSQUARE reduce production conversion -> KW_INTTOPTR
-- On LCURLY reduce production conversion -> KW_INTTOPTR
-- On KW_X86_MMX reduce production conversion -> KW_INTTOPTR
-- On KW_X86_FP80 reduce production conversion -> KW_INTTOPTR
-- On KW_VOID reduce production conversion -> KW_INTTOPTR
-- On KW_PPC_FP128 reduce production conversion -> KW_INTTOPTR
-- On KW_OPAQUE reduce production conversion -> KW_INTTOPTR
-- On KW_METADATA reduce production conversion -> KW_INTTOPTR
-- On KW_LABEL reduce production conversion -> KW_INTTOPTR
-- On KW_HALF reduce production conversion -> KW_INTTOPTR
-- On KW_FP128 reduce production conversion -> KW_INTTOPTR
-- On KW_FLOAT reduce production conversion -> KW_INTTOPTR
-- On KW_DOUBLE reduce production conversion -> KW_INTTOPTR
-- On I reduce production conversion -> KW_INTTOPTR

State 318:
## Known stack suffix:
## KW_INSERTVALUE
## LR(1) items:
instr -> KW_INSERTVALUE . tvalue COMMA tvalue COMMA separated_nonempty_list(COMMA,INTEGER) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 319
## Reductions:

State 319:
## Known stack suffix:
## KW_INSERTVALUE tvalue
## LR(1) items:
instr -> KW_INSERTVALUE tvalue . COMMA tvalue COMMA separated_nonempty_list(COMMA,INTEGER) [ EOL ]
## Transitions:
-- On COMMA shift to state 320
## Reductions:

State 320:
## Known stack suffix:
## KW_INSERTVALUE tvalue COMMA
## LR(1) items:
instr -> KW_INSERTVALUE tvalue COMMA . tvalue COMMA separated_nonempty_list(COMMA,INTEGER) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 321
## Reductions:

State 321:
## Known stack suffix:
## KW_INSERTVALUE tvalue COMMA tvalue
## LR(1) items:
instr -> KW_INSERTVALUE tvalue COMMA tvalue . COMMA separated_nonempty_list(COMMA,INTEGER) [ EOL ]
## Transitions:
-- On COMMA shift to state 322
## Reductions:

State 322:
## Known stack suffix:
## KW_INSERTVALUE tvalue COMMA tvalue COMMA
## LR(1) items:
instr -> KW_INSERTVALUE tvalue COMMA tvalue COMMA . separated_nonempty_list(COMMA,INTEGER) [ EOL ]
## Transitions:
-- On INTEGER shift to state 323
-- On separated_nonempty_list(COMMA,INTEGER) shift to state 326
## Reductions:

State 323:
## Known stack suffix:
## INTEGER
## LR(1) items:
separated_nonempty_list(COMMA,INTEGER) -> INTEGER . [ EOL ]
separated_nonempty_list(COMMA,INTEGER) -> INTEGER . COMMA separated_nonempty_list(COMMA,INTEGER) [ EOL ]
## Transitions:
-- On COMMA shift to state 324
## Reductions:
-- On EOL reduce production separated_nonempty_list(COMMA,INTEGER) -> INTEGER

State 324:
## Known stack suffix:
## INTEGER COMMA
## LR(1) items:
separated_nonempty_list(COMMA,INTEGER) -> INTEGER COMMA . separated_nonempty_list(COMMA,INTEGER) [ EOL ]
## Transitions:
-- On INTEGER shift to state 323
-- On separated_nonempty_list(COMMA,INTEGER) shift to state 325
## Reductions:

State 325:
## Known stack suffix:
## INTEGER COMMA separated_nonempty_list(COMMA,INTEGER)
## LR(1) items:
separated_nonempty_list(COMMA,INTEGER) -> INTEGER COMMA separated_nonempty_list(COMMA,INTEGER) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production separated_nonempty_list(COMMA,INTEGER) -> INTEGER COMMA separated_nonempty_list(COMMA,INTEGER)

State 326:
## Known stack suffix:
## KW_INSERTVALUE tvalue COMMA tvalue COMMA separated_nonempty_list(COMMA,INTEGER)
## LR(1) items:
instr -> KW_INSERTVALUE tvalue COMMA tvalue COMMA separated_nonempty_list(COMMA,INTEGER) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_INSERTVALUE tvalue COMMA tvalue COMMA separated_nonempty_list(COMMA,INTEGER)

State 327:
## Known stack suffix:
## KW_INSERTELEMENT
## LR(1) items:
instr -> KW_INSERTELEMENT . tvalue COMMA tvalue COMMA tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 328
## Reductions:

State 328:
## Known stack suffix:
## KW_INSERTELEMENT tvalue
## LR(1) items:
instr -> KW_INSERTELEMENT tvalue . COMMA tvalue COMMA tvalue [ EOL ]
## Transitions:
-- On COMMA shift to state 329
## Reductions:

State 329:
## Known stack suffix:
## KW_INSERTELEMENT tvalue COMMA
## LR(1) items:
instr -> KW_INSERTELEMENT tvalue COMMA . tvalue COMMA tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## KW_INSERTELEMENT tvalue COMMA tvalue
## LR(1) items:
instr -> KW_INSERTELEMENT tvalue COMMA tvalue . COMMA tvalue [ EOL ]
## Transitions:
-- On COMMA shift to state 331
## Reductions:

State 331:
## Known stack suffix:
## KW_INSERTELEMENT tvalue COMMA tvalue COMMA
## LR(1) items:
instr -> KW_INSERTELEMENT tvalue COMMA tvalue COMMA . tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 332
## Reductions:

State 332:
## Known stack suffix:
## KW_INSERTELEMENT tvalue COMMA tvalue COMMA tvalue
## LR(1) items:
instr -> KW_INSERTELEMENT tvalue COMMA tvalue COMMA tvalue . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_INSERTELEMENT tvalue COMMA tvalue COMMA tvalue

State 333:
## Known stack suffix:
## KW_INDIRECTBR
## LR(1) items:
instr -> KW_INDIRECTBR . tvalue COMMA LSQUARE loption(separated_nonempty_list(COMMA,tident)) RSQUARE [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 334
## Reductions:

State 334:
## Known stack suffix:
## KW_INDIRECTBR tvalue
## LR(1) items:
instr -> KW_INDIRECTBR tvalue . COMMA LSQUARE loption(separated_nonempty_list(COMMA,tident)) RSQUARE [ EOL ]
## Transitions:
-- On COMMA shift to state 335
## Reductions:

State 335:
## Known stack suffix:
## KW_INDIRECTBR tvalue COMMA
## LR(1) items:
instr -> KW_INDIRECTBR tvalue COMMA . LSQUARE loption(separated_nonempty_list(COMMA,tident)) RSQUARE [ EOL ]
## Transitions:
-- On LSQUARE shift to state 336
## Reductions:

State 336:
## Known stack suffix:
## KW_INDIRECTBR tvalue COMMA LSQUARE
## LR(1) items:
instr -> KW_INDIRECTBR tvalue COMMA LSQUARE . loption(separated_nonempty_list(COMMA,tident)) RSQUARE [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 230
-- On tident shift to state 337
-- On separated_nonempty_list(COMMA,tident) shift to state 340
-- On loption(separated_nonempty_list(COMMA,tident)) shift to state 341
## Reductions:
-- On RSQUARE reduce production loption(separated_nonempty_list(COMMA,tident)) ->

State 337:
## Known stack suffix:
## tident
## LR(1) items:
separated_nonempty_list(COMMA,tident) -> tident . [ RSQUARE ]
separated_nonempty_list(COMMA,tident) -> tident . COMMA separated_nonempty_list(COMMA,tident) [ RSQUARE ]
## Transitions:
-- On COMMA shift to state 338
## Reductions:
-- On RSQUARE reduce production separated_nonempty_list(COMMA,tident) -> tident

State 338:
## Known stack suffix:
## tident COMMA
## LR(1) items:
separated_nonempty_list(COMMA,tident) -> tident COMMA . separated_nonempty_list(COMMA,tident) [ RSQUARE ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 230
-- On tident shift to state 337
-- On separated_nonempty_list(COMMA,tident) shift to state 339
## Reductions:

State 339:
## Known stack suffix:
## tident COMMA separated_nonempty_list(COMMA,tident)
## LR(1) items:
separated_nonempty_list(COMMA,tident) -> tident COMMA separated_nonempty_list(COMMA,tident) . [ RSQUARE ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production separated_nonempty_list(COMMA,tident) -> tident COMMA separated_nonempty_list(COMMA,tident)

State 340:
## Known stack suffix:
## separated_nonempty_list(COMMA,tident)
## LR(1) items:
loption(separated_nonempty_list(COMMA,tident)) -> separated_nonempty_list(COMMA,tident) . [ RSQUARE ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production loption(separated_nonempty_list(COMMA,tident)) -> separated_nonempty_list(COMMA,tident)

State 341:
## Known stack suffix:
## KW_INDIRECTBR tvalue COMMA LSQUARE loption(separated_nonempty_list(COMMA,tident))
## LR(1) items:
instr -> KW_INDIRECTBR tvalue COMMA LSQUARE loption(separated_nonempty_list(COMMA,tident)) . RSQUARE [ EOL ]
## Transitions:
-- On RSQUARE shift to state 342
## Reductions:

State 342:
## Known stack suffix:
## KW_INDIRECTBR tvalue COMMA LSQUARE loption(separated_nonempty_list(COMMA,tident)) RSQUARE
## LR(1) items:
instr -> KW_INDIRECTBR tvalue COMMA LSQUARE loption(separated_nonempty_list(COMMA,tident)) RSQUARE . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_INDIRECTBR tvalue COMMA LSQUARE loption(separated_nonempty_list(COMMA,tident)) RSQUARE

State 343:
## Known stack suffix:
## KW_ICMP
## LR(1) items:
instr -> KW_ICMP . icmp typ value COMMA value [ EOL ]
## Transitions:
-- On KW_ULT shift to state 344
-- On KW_ULE shift to state 345
-- On KW_UGT shift to state 346
-- On KW_UGE shift to state 347
-- On KW_SLT shift to state 348
-- On KW_SLE shift to state 349
-- On KW_SGT shift to state 350
-- On KW_SGE shift to state 351
-- On KW_NE shift to state 352
-- On KW_EQ shift to state 353
-- On icmp shift to state 354
## Reductions:

State 344:
## Known stack suffix:
## KW_ULT
## LR(1) items:
icmp -> KW_ULT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production icmp -> KW_ULT
-- On LT reduce production icmp -> KW_ULT
-- On LSQUARE reduce production icmp -> KW_ULT
-- On LCURLY reduce production icmp -> KW_ULT
-- On KW_X86_MMX reduce production icmp -> KW_ULT
-- On KW_X86_FP80 reduce production icmp -> KW_ULT
-- On KW_VOID reduce production icmp -> KW_ULT
-- On KW_PPC_FP128 reduce production icmp -> KW_ULT
-- On KW_OPAQUE reduce production icmp -> KW_ULT
-- On KW_METADATA reduce production icmp -> KW_ULT
-- On KW_LABEL reduce production icmp -> KW_ULT
-- On KW_HALF reduce production icmp -> KW_ULT
-- On KW_FP128 reduce production icmp -> KW_ULT
-- On KW_FLOAT reduce production icmp -> KW_ULT
-- On KW_DOUBLE reduce production icmp -> KW_ULT
-- On I reduce production icmp -> KW_ULT

State 345:
## Known stack suffix:
## KW_ULE
## LR(1) items:
icmp -> KW_ULE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production icmp -> KW_ULE
-- On LT reduce production icmp -> KW_ULE
-- On LSQUARE reduce production icmp -> KW_ULE
-- On LCURLY reduce production icmp -> KW_ULE
-- On KW_X86_MMX reduce production icmp -> KW_ULE
-- On KW_X86_FP80 reduce production icmp -> KW_ULE
-- On KW_VOID reduce production icmp -> KW_ULE
-- On KW_PPC_FP128 reduce production icmp -> KW_ULE
-- On KW_OPAQUE reduce production icmp -> KW_ULE
-- On KW_METADATA reduce production icmp -> KW_ULE
-- On KW_LABEL reduce production icmp -> KW_ULE
-- On KW_HALF reduce production icmp -> KW_ULE
-- On KW_FP128 reduce production icmp -> KW_ULE
-- On KW_FLOAT reduce production icmp -> KW_ULE
-- On KW_DOUBLE reduce production icmp -> KW_ULE
-- On I reduce production icmp -> KW_ULE

State 346:
## Known stack suffix:
## KW_UGT
## LR(1) items:
icmp -> KW_UGT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production icmp -> KW_UGT
-- On LT reduce production icmp -> KW_UGT
-- On LSQUARE reduce production icmp -> KW_UGT
-- On LCURLY reduce production icmp -> KW_UGT
-- On KW_X86_MMX reduce production icmp -> KW_UGT
-- On KW_X86_FP80 reduce production icmp -> KW_UGT
-- On KW_VOID reduce production icmp -> KW_UGT
-- On KW_PPC_FP128 reduce production icmp -> KW_UGT
-- On KW_OPAQUE reduce production icmp -> KW_UGT
-- On KW_METADATA reduce production icmp -> KW_UGT
-- On KW_LABEL reduce production icmp -> KW_UGT
-- On KW_HALF reduce production icmp -> KW_UGT
-- On KW_FP128 reduce production icmp -> KW_UGT
-- On KW_FLOAT reduce production icmp -> KW_UGT
-- On KW_DOUBLE reduce production icmp -> KW_UGT
-- On I reduce production icmp -> KW_UGT

State 347:
## Known stack suffix:
## KW_UGE
## LR(1) items:
icmp -> KW_UGE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production icmp -> KW_UGE
-- On LT reduce production icmp -> KW_UGE
-- On LSQUARE reduce production icmp -> KW_UGE
-- On LCURLY reduce production icmp -> KW_UGE
-- On KW_X86_MMX reduce production icmp -> KW_UGE
-- On KW_X86_FP80 reduce production icmp -> KW_UGE
-- On KW_VOID reduce production icmp -> KW_UGE
-- On KW_PPC_FP128 reduce production icmp -> KW_UGE
-- On KW_OPAQUE reduce production icmp -> KW_UGE
-- On KW_METADATA reduce production icmp -> KW_UGE
-- On KW_LABEL reduce production icmp -> KW_UGE
-- On KW_HALF reduce production icmp -> KW_UGE
-- On KW_FP128 reduce production icmp -> KW_UGE
-- On KW_FLOAT reduce production icmp -> KW_UGE
-- On KW_DOUBLE reduce production icmp -> KW_UGE
-- On I reduce production icmp -> KW_UGE

State 348:
## Known stack suffix:
## KW_SLT
## LR(1) items:
icmp -> KW_SLT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production icmp -> KW_SLT
-- On LT reduce production icmp -> KW_SLT
-- On LSQUARE reduce production icmp -> KW_SLT
-- On LCURLY reduce production icmp -> KW_SLT
-- On KW_X86_MMX reduce production icmp -> KW_SLT
-- On KW_X86_FP80 reduce production icmp -> KW_SLT
-- On KW_VOID reduce production icmp -> KW_SLT
-- On KW_PPC_FP128 reduce production icmp -> KW_SLT
-- On KW_OPAQUE reduce production icmp -> KW_SLT
-- On KW_METADATA reduce production icmp -> KW_SLT
-- On KW_LABEL reduce production icmp -> KW_SLT
-- On KW_HALF reduce production icmp -> KW_SLT
-- On KW_FP128 reduce production icmp -> KW_SLT
-- On KW_FLOAT reduce production icmp -> KW_SLT
-- On KW_DOUBLE reduce production icmp -> KW_SLT
-- On I reduce production icmp -> KW_SLT

State 349:
## Known stack suffix:
## KW_SLE
## LR(1) items:
icmp -> KW_SLE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production icmp -> KW_SLE
-- On LT reduce production icmp -> KW_SLE
-- On LSQUARE reduce production icmp -> KW_SLE
-- On LCURLY reduce production icmp -> KW_SLE
-- On KW_X86_MMX reduce production icmp -> KW_SLE
-- On KW_X86_FP80 reduce production icmp -> KW_SLE
-- On KW_VOID reduce production icmp -> KW_SLE
-- On KW_PPC_FP128 reduce production icmp -> KW_SLE
-- On KW_OPAQUE reduce production icmp -> KW_SLE
-- On KW_METADATA reduce production icmp -> KW_SLE
-- On KW_LABEL reduce production icmp -> KW_SLE
-- On KW_HALF reduce production icmp -> KW_SLE
-- On KW_FP128 reduce production icmp -> KW_SLE
-- On KW_FLOAT reduce production icmp -> KW_SLE
-- On KW_DOUBLE reduce production icmp -> KW_SLE
-- On I reduce production icmp -> KW_SLE

State 350:
## Known stack suffix:
## KW_SGT
## LR(1) items:
icmp -> KW_SGT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production icmp -> KW_SGT
-- On LT reduce production icmp -> KW_SGT
-- On LSQUARE reduce production icmp -> KW_SGT
-- On LCURLY reduce production icmp -> KW_SGT
-- On KW_X86_MMX reduce production icmp -> KW_SGT
-- On KW_X86_FP80 reduce production icmp -> KW_SGT
-- On KW_VOID reduce production icmp -> KW_SGT
-- On KW_PPC_FP128 reduce production icmp -> KW_SGT
-- On KW_OPAQUE reduce production icmp -> KW_SGT
-- On KW_METADATA reduce production icmp -> KW_SGT
-- On KW_LABEL reduce production icmp -> KW_SGT
-- On KW_HALF reduce production icmp -> KW_SGT
-- On KW_FP128 reduce production icmp -> KW_SGT
-- On KW_FLOAT reduce production icmp -> KW_SGT
-- On KW_DOUBLE reduce production icmp -> KW_SGT
-- On I reduce production icmp -> KW_SGT

State 351:
## Known stack suffix:
## KW_SGE
## LR(1) items:
icmp -> KW_SGE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production icmp -> KW_SGE
-- On LT reduce production icmp -> KW_SGE
-- On LSQUARE reduce production icmp -> KW_SGE
-- On LCURLY reduce production icmp -> KW_SGE
-- On KW_X86_MMX reduce production icmp -> KW_SGE
-- On KW_X86_FP80 reduce production icmp -> KW_SGE
-- On KW_VOID reduce production icmp -> KW_SGE
-- On KW_PPC_FP128 reduce production icmp -> KW_SGE
-- On KW_OPAQUE reduce production icmp -> KW_SGE
-- On KW_METADATA reduce production icmp -> KW_SGE
-- On KW_LABEL reduce production icmp -> KW_SGE
-- On KW_HALF reduce production icmp -> KW_SGE
-- On KW_FP128 reduce production icmp -> KW_SGE
-- On KW_FLOAT reduce production icmp -> KW_SGE
-- On KW_DOUBLE reduce production icmp -> KW_SGE
-- On I reduce production icmp -> KW_SGE

State 352:
## Known stack suffix:
## KW_NE
## LR(1) items:
icmp -> KW_NE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production icmp -> KW_NE
-- On LT reduce production icmp -> KW_NE
-- On LSQUARE reduce production icmp -> KW_NE
-- On LCURLY reduce production icmp -> KW_NE
-- On KW_X86_MMX reduce production icmp -> KW_NE
-- On KW_X86_FP80 reduce production icmp -> KW_NE
-- On KW_VOID reduce production icmp -> KW_NE
-- On KW_PPC_FP128 reduce production icmp -> KW_NE
-- On KW_OPAQUE reduce production icmp -> KW_NE
-- On KW_METADATA reduce production icmp -> KW_NE
-- On KW_LABEL reduce production icmp -> KW_NE
-- On KW_HALF reduce production icmp -> KW_NE
-- On KW_FP128 reduce production icmp -> KW_NE
-- On KW_FLOAT reduce production icmp -> KW_NE
-- On KW_DOUBLE reduce production icmp -> KW_NE
-- On I reduce production icmp -> KW_NE

State 353:
## Known stack suffix:
## KW_EQ
## LR(1) items:
icmp -> KW_EQ . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production icmp -> KW_EQ
-- On LT reduce production icmp -> KW_EQ
-- On LSQUARE reduce production icmp -> KW_EQ
-- On LCURLY reduce production icmp -> KW_EQ
-- On KW_X86_MMX reduce production icmp -> KW_EQ
-- On KW_X86_FP80 reduce production icmp -> KW_EQ
-- On KW_VOID reduce production icmp -> KW_EQ
-- On KW_PPC_FP128 reduce production icmp -> KW_EQ
-- On KW_OPAQUE reduce production icmp -> KW_EQ
-- On KW_METADATA reduce production icmp -> KW_EQ
-- On KW_LABEL reduce production icmp -> KW_EQ
-- On KW_HALF reduce production icmp -> KW_EQ
-- On KW_FP128 reduce production icmp -> KW_EQ
-- On KW_FLOAT reduce production icmp -> KW_EQ
-- On KW_DOUBLE reduce production icmp -> KW_EQ
-- On I reduce production icmp -> KW_EQ

State 354:
## Known stack suffix:
## KW_ICMP icmp
## LR(1) items:
instr -> KW_ICMP icmp . typ value COMMA value [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 355
## Reductions:

State 355:
## Known stack suffix:
## KW_ICMP icmp typ
## LR(1) items:
instr -> KW_ICMP icmp typ . value COMMA value [ EOL ]
typ -> typ . STAR [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
## Transitions:
-- On STAR shift to state 30
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LPAREN shift to state 31
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 356
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 356:
## Known stack suffix:
## KW_ICMP icmp typ value
## LR(1) items:
instr -> KW_ICMP icmp typ value . COMMA value [ EOL ]
## Transitions:
-- On COMMA shift to state 357
## Reductions:

State 357:
## Known stack suffix:
## KW_ICMP icmp typ value COMMA
## LR(1) items:
instr -> KW_ICMP icmp typ value COMMA . value [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 358
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 358:
## Known stack suffix:
## KW_ICMP icmp typ value COMMA value
## LR(1) items:
instr -> KW_ICMP icmp typ value COMMA value . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_ICMP icmp typ value COMMA value

State 359:
## Known stack suffix:
## KW_GETELEMENTPTR
## LR(1) items:
option(KW_GETELEMENTPTR) -> KW_GETELEMENTPTR . [ KW_INBOUNDS ]
## Transitions:
## Reductions:
-- On KW_INBOUNDS reduce production option(KW_GETELEMENTPTR) -> KW_GETELEMENTPTR

State 360:
## Known stack suffix:
## KW_FSUB
## LR(1) items:
fbinop -> KW_FSUB . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NSZ KW_NNAN KW_NINF KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_FAST KW_DOUBLE KW_ARCP I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fbinop -> KW_FSUB
-- On LT reduce production fbinop -> KW_FSUB
-- On LSQUARE reduce production fbinop -> KW_FSUB
-- On LCURLY reduce production fbinop -> KW_FSUB
-- On KW_X86_MMX reduce production fbinop -> KW_FSUB
-- On KW_X86_FP80 reduce production fbinop -> KW_FSUB
-- On KW_VOID reduce production fbinop -> KW_FSUB
-- On KW_PPC_FP128 reduce production fbinop -> KW_FSUB
-- On KW_OPAQUE reduce production fbinop -> KW_FSUB
-- On KW_NSZ reduce production fbinop -> KW_FSUB
-- On KW_NNAN reduce production fbinop -> KW_FSUB
-- On KW_NINF reduce production fbinop -> KW_FSUB
-- On KW_METADATA reduce production fbinop -> KW_FSUB
-- On KW_LABEL reduce production fbinop -> KW_FSUB
-- On KW_HALF reduce production fbinop -> KW_FSUB
-- On KW_FP128 reduce production fbinop -> KW_FSUB
-- On KW_FLOAT reduce production fbinop -> KW_FSUB
-- On KW_FAST reduce production fbinop -> KW_FSUB
-- On KW_DOUBLE reduce production fbinop -> KW_FSUB
-- On KW_ARCP reduce production fbinop -> KW_FSUB
-- On I reduce production fbinop -> KW_FSUB

State 361:
## Known stack suffix:
## KW_FREM
## LR(1) items:
fbinop -> KW_FREM . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NSZ KW_NNAN KW_NINF KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_FAST KW_DOUBLE KW_ARCP I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fbinop -> KW_FREM
-- On LT reduce production fbinop -> KW_FREM
-- On LSQUARE reduce production fbinop -> KW_FREM
-- On LCURLY reduce production fbinop -> KW_FREM
-- On KW_X86_MMX reduce production fbinop -> KW_FREM
-- On KW_X86_FP80 reduce production fbinop -> KW_FREM
-- On KW_VOID reduce production fbinop -> KW_FREM
-- On KW_PPC_FP128 reduce production fbinop -> KW_FREM
-- On KW_OPAQUE reduce production fbinop -> KW_FREM
-- On KW_NSZ reduce production fbinop -> KW_FREM
-- On KW_NNAN reduce production fbinop -> KW_FREM
-- On KW_NINF reduce production fbinop -> KW_FREM
-- On KW_METADATA reduce production fbinop -> KW_FREM
-- On KW_LABEL reduce production fbinop -> KW_FREM
-- On KW_HALF reduce production fbinop -> KW_FREM
-- On KW_FP128 reduce production fbinop -> KW_FREM
-- On KW_FLOAT reduce production fbinop -> KW_FREM
-- On KW_FAST reduce production fbinop -> KW_FREM
-- On KW_DOUBLE reduce production fbinop -> KW_FREM
-- On KW_ARCP reduce production fbinop -> KW_FREM
-- On I reduce production fbinop -> KW_FREM

State 362:
## Known stack suffix:
## KW_FPTRUNC
## LR(1) items:
conversion -> KW_FPTRUNC . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_FPTRUNC
-- On LT reduce production conversion -> KW_FPTRUNC
-- On LSQUARE reduce production conversion -> KW_FPTRUNC
-- On LCURLY reduce production conversion -> KW_FPTRUNC
-- On KW_X86_MMX reduce production conversion -> KW_FPTRUNC
-- On KW_X86_FP80 reduce production conversion -> KW_FPTRUNC
-- On KW_VOID reduce production conversion -> KW_FPTRUNC
-- On KW_PPC_FP128 reduce production conversion -> KW_FPTRUNC
-- On KW_OPAQUE reduce production conversion -> KW_FPTRUNC
-- On KW_METADATA reduce production conversion -> KW_FPTRUNC
-- On KW_LABEL reduce production conversion -> KW_FPTRUNC
-- On KW_HALF reduce production conversion -> KW_FPTRUNC
-- On KW_FP128 reduce production conversion -> KW_FPTRUNC
-- On KW_FLOAT reduce production conversion -> KW_FPTRUNC
-- On KW_DOUBLE reduce production conversion -> KW_FPTRUNC
-- On I reduce production conversion -> KW_FPTRUNC

State 363:
## Known stack suffix:
## KW_FPTOUI
## LR(1) items:
conversion -> KW_FPTOUI . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_FPTOUI
-- On LT reduce production conversion -> KW_FPTOUI
-- On LSQUARE reduce production conversion -> KW_FPTOUI
-- On LCURLY reduce production conversion -> KW_FPTOUI
-- On KW_X86_MMX reduce production conversion -> KW_FPTOUI
-- On KW_X86_FP80 reduce production conversion -> KW_FPTOUI
-- On KW_VOID reduce production conversion -> KW_FPTOUI
-- On KW_PPC_FP128 reduce production conversion -> KW_FPTOUI
-- On KW_OPAQUE reduce production conversion -> KW_FPTOUI
-- On KW_METADATA reduce production conversion -> KW_FPTOUI
-- On KW_LABEL reduce production conversion -> KW_FPTOUI
-- On KW_HALF reduce production conversion -> KW_FPTOUI
-- On KW_FP128 reduce production conversion -> KW_FPTOUI
-- On KW_FLOAT reduce production conversion -> KW_FPTOUI
-- On KW_DOUBLE reduce production conversion -> KW_FPTOUI
-- On I reduce production conversion -> KW_FPTOUI

State 364:
## Known stack suffix:
## KW_FPTOSI
## LR(1) items:
conversion -> KW_FPTOSI . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_FPTOSI
-- On LT reduce production conversion -> KW_FPTOSI
-- On LSQUARE reduce production conversion -> KW_FPTOSI
-- On LCURLY reduce production conversion -> KW_FPTOSI
-- On KW_X86_MMX reduce production conversion -> KW_FPTOSI
-- On KW_X86_FP80 reduce production conversion -> KW_FPTOSI
-- On KW_VOID reduce production conversion -> KW_FPTOSI
-- On KW_PPC_FP128 reduce production conversion -> KW_FPTOSI
-- On KW_OPAQUE reduce production conversion -> KW_FPTOSI
-- On KW_METADATA reduce production conversion -> KW_FPTOSI
-- On KW_LABEL reduce production conversion -> KW_FPTOSI
-- On KW_HALF reduce production conversion -> KW_FPTOSI
-- On KW_FP128 reduce production conversion -> KW_FPTOSI
-- On KW_FLOAT reduce production conversion -> KW_FPTOSI
-- On KW_DOUBLE reduce production conversion -> KW_FPTOSI
-- On I reduce production conversion -> KW_FPTOSI

State 365:
## Known stack suffix:
## KW_FPEXT
## LR(1) items:
conversion -> KW_FPEXT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_FPEXT
-- On LT reduce production conversion -> KW_FPEXT
-- On LSQUARE reduce production conversion -> KW_FPEXT
-- On LCURLY reduce production conversion -> KW_FPEXT
-- On KW_X86_MMX reduce production conversion -> KW_FPEXT
-- On KW_X86_FP80 reduce production conversion -> KW_FPEXT
-- On KW_VOID reduce production conversion -> KW_FPEXT
-- On KW_PPC_FP128 reduce production conversion -> KW_FPEXT
-- On KW_OPAQUE reduce production conversion -> KW_FPEXT
-- On KW_METADATA reduce production conversion -> KW_FPEXT
-- On KW_LABEL reduce production conversion -> KW_FPEXT
-- On KW_HALF reduce production conversion -> KW_FPEXT
-- On KW_FP128 reduce production conversion -> KW_FPEXT
-- On KW_FLOAT reduce production conversion -> KW_FPEXT
-- On KW_DOUBLE reduce production conversion -> KW_FPEXT
-- On I reduce production conversion -> KW_FPEXT

State 366:
## Known stack suffix:
## KW_FMUL
## LR(1) items:
fbinop -> KW_FMUL . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NSZ KW_NNAN KW_NINF KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_FAST KW_DOUBLE KW_ARCP I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fbinop -> KW_FMUL
-- On LT reduce production fbinop -> KW_FMUL
-- On LSQUARE reduce production fbinop -> KW_FMUL
-- On LCURLY reduce production fbinop -> KW_FMUL
-- On KW_X86_MMX reduce production fbinop -> KW_FMUL
-- On KW_X86_FP80 reduce production fbinop -> KW_FMUL
-- On KW_VOID reduce production fbinop -> KW_FMUL
-- On KW_PPC_FP128 reduce production fbinop -> KW_FMUL
-- On KW_OPAQUE reduce production fbinop -> KW_FMUL
-- On KW_NSZ reduce production fbinop -> KW_FMUL
-- On KW_NNAN reduce production fbinop -> KW_FMUL
-- On KW_NINF reduce production fbinop -> KW_FMUL
-- On KW_METADATA reduce production fbinop -> KW_FMUL
-- On KW_LABEL reduce production fbinop -> KW_FMUL
-- On KW_HALF reduce production fbinop -> KW_FMUL
-- On KW_FP128 reduce production fbinop -> KW_FMUL
-- On KW_FLOAT reduce production fbinop -> KW_FMUL
-- On KW_FAST reduce production fbinop -> KW_FMUL
-- On KW_DOUBLE reduce production fbinop -> KW_FMUL
-- On KW_ARCP reduce production fbinop -> KW_FMUL
-- On I reduce production fbinop -> KW_FMUL

State 367:
## Known stack suffix:
## KW_FENCE
## LR(1) items:
instr -> KW_FENCE . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_FENCE

State 368:
## Known stack suffix:
## KW_FDIV
## LR(1) items:
fbinop -> KW_FDIV . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NSZ KW_NNAN KW_NINF KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_FAST KW_DOUBLE KW_ARCP I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fbinop -> KW_FDIV
-- On LT reduce production fbinop -> KW_FDIV
-- On LSQUARE reduce production fbinop -> KW_FDIV
-- On LCURLY reduce production fbinop -> KW_FDIV
-- On KW_X86_MMX reduce production fbinop -> KW_FDIV
-- On KW_X86_FP80 reduce production fbinop -> KW_FDIV
-- On KW_VOID reduce production fbinop -> KW_FDIV
-- On KW_PPC_FP128 reduce production fbinop -> KW_FDIV
-- On KW_OPAQUE reduce production fbinop -> KW_FDIV
-- On KW_NSZ reduce production fbinop -> KW_FDIV
-- On KW_NNAN reduce production fbinop -> KW_FDIV
-- On KW_NINF reduce production fbinop -> KW_FDIV
-- On KW_METADATA reduce production fbinop -> KW_FDIV
-- On KW_LABEL reduce production fbinop -> KW_FDIV
-- On KW_HALF reduce production fbinop -> KW_FDIV
-- On KW_FP128 reduce production fbinop -> KW_FDIV
-- On KW_FLOAT reduce production fbinop -> KW_FDIV
-- On KW_FAST reduce production fbinop -> KW_FDIV
-- On KW_DOUBLE reduce production fbinop -> KW_FDIV
-- On KW_ARCP reduce production fbinop -> KW_FDIV
-- On I reduce production fbinop -> KW_FDIV

State 369:
## Known stack suffix:
## KW_FCMP
## LR(1) items:
instr -> KW_FCMP . fcmp typ value COMMA value [ EOL ]
## Transitions:
-- On KW_UNO shift to state 370
-- On KW_UNE shift to state 371
-- On KW_ULT shift to state 372
-- On KW_ULE shift to state 373
-- On KW_UGT shift to state 374
-- On KW_UGE shift to state 375
-- On KW_UEQ shift to state 376
-- On KW_TRUE shift to state 377
-- On KW_ORD shift to state 378
-- On KW_ONE shift to state 379
-- On KW_OLT shift to state 380
-- On KW_OLE shift to state 381
-- On KW_OGT shift to state 382
-- On KW_OGE shift to state 383
-- On KW_OEQ shift to state 384
-- On KW_FALSE shift to state 385
-- On fcmp shift to state 386
## Reductions:

State 370:
## Known stack suffix:
## KW_UNO
## LR(1) items:
fcmp -> KW_UNO . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_UNO
-- On LT reduce production fcmp -> KW_UNO
-- On LSQUARE reduce production fcmp -> KW_UNO
-- On LCURLY reduce production fcmp -> KW_UNO
-- On KW_X86_MMX reduce production fcmp -> KW_UNO
-- On KW_X86_FP80 reduce production fcmp -> KW_UNO
-- On KW_VOID reduce production fcmp -> KW_UNO
-- On KW_PPC_FP128 reduce production fcmp -> KW_UNO
-- On KW_OPAQUE reduce production fcmp -> KW_UNO
-- On KW_METADATA reduce production fcmp -> KW_UNO
-- On KW_LABEL reduce production fcmp -> KW_UNO
-- On KW_HALF reduce production fcmp -> KW_UNO
-- On KW_FP128 reduce production fcmp -> KW_UNO
-- On KW_FLOAT reduce production fcmp -> KW_UNO
-- On KW_DOUBLE reduce production fcmp -> KW_UNO
-- On I reduce production fcmp -> KW_UNO

State 371:
## Known stack suffix:
## KW_UNE
## LR(1) items:
fcmp -> KW_UNE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_UNE
-- On LT reduce production fcmp -> KW_UNE
-- On LSQUARE reduce production fcmp -> KW_UNE
-- On LCURLY reduce production fcmp -> KW_UNE
-- On KW_X86_MMX reduce production fcmp -> KW_UNE
-- On KW_X86_FP80 reduce production fcmp -> KW_UNE
-- On KW_VOID reduce production fcmp -> KW_UNE
-- On KW_PPC_FP128 reduce production fcmp -> KW_UNE
-- On KW_OPAQUE reduce production fcmp -> KW_UNE
-- On KW_METADATA reduce production fcmp -> KW_UNE
-- On KW_LABEL reduce production fcmp -> KW_UNE
-- On KW_HALF reduce production fcmp -> KW_UNE
-- On KW_FP128 reduce production fcmp -> KW_UNE
-- On KW_FLOAT reduce production fcmp -> KW_UNE
-- On KW_DOUBLE reduce production fcmp -> KW_UNE
-- On I reduce production fcmp -> KW_UNE

State 372:
## Known stack suffix:
## KW_ULT
## LR(1) items:
fcmp -> KW_ULT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_ULT
-- On LT reduce production fcmp -> KW_ULT
-- On LSQUARE reduce production fcmp -> KW_ULT
-- On LCURLY reduce production fcmp -> KW_ULT
-- On KW_X86_MMX reduce production fcmp -> KW_ULT
-- On KW_X86_FP80 reduce production fcmp -> KW_ULT
-- On KW_VOID reduce production fcmp -> KW_ULT
-- On KW_PPC_FP128 reduce production fcmp -> KW_ULT
-- On KW_OPAQUE reduce production fcmp -> KW_ULT
-- On KW_METADATA reduce production fcmp -> KW_ULT
-- On KW_LABEL reduce production fcmp -> KW_ULT
-- On KW_HALF reduce production fcmp -> KW_ULT
-- On KW_FP128 reduce production fcmp -> KW_ULT
-- On KW_FLOAT reduce production fcmp -> KW_ULT
-- On KW_DOUBLE reduce production fcmp -> KW_ULT
-- On I reduce production fcmp -> KW_ULT

State 373:
## Known stack suffix:
## KW_ULE
## LR(1) items:
fcmp -> KW_ULE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_ULE
-- On LT reduce production fcmp -> KW_ULE
-- On LSQUARE reduce production fcmp -> KW_ULE
-- On LCURLY reduce production fcmp -> KW_ULE
-- On KW_X86_MMX reduce production fcmp -> KW_ULE
-- On KW_X86_FP80 reduce production fcmp -> KW_ULE
-- On KW_VOID reduce production fcmp -> KW_ULE
-- On KW_PPC_FP128 reduce production fcmp -> KW_ULE
-- On KW_OPAQUE reduce production fcmp -> KW_ULE
-- On KW_METADATA reduce production fcmp -> KW_ULE
-- On KW_LABEL reduce production fcmp -> KW_ULE
-- On KW_HALF reduce production fcmp -> KW_ULE
-- On KW_FP128 reduce production fcmp -> KW_ULE
-- On KW_FLOAT reduce production fcmp -> KW_ULE
-- On KW_DOUBLE reduce production fcmp -> KW_ULE
-- On I reduce production fcmp -> KW_ULE

State 374:
## Known stack suffix:
## KW_UGT
## LR(1) items:
fcmp -> KW_UGT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_UGT
-- On LT reduce production fcmp -> KW_UGT
-- On LSQUARE reduce production fcmp -> KW_UGT
-- On LCURLY reduce production fcmp -> KW_UGT
-- On KW_X86_MMX reduce production fcmp -> KW_UGT
-- On KW_X86_FP80 reduce production fcmp -> KW_UGT
-- On KW_VOID reduce production fcmp -> KW_UGT
-- On KW_PPC_FP128 reduce production fcmp -> KW_UGT
-- On KW_OPAQUE reduce production fcmp -> KW_UGT
-- On KW_METADATA reduce production fcmp -> KW_UGT
-- On KW_LABEL reduce production fcmp -> KW_UGT
-- On KW_HALF reduce production fcmp -> KW_UGT
-- On KW_FP128 reduce production fcmp -> KW_UGT
-- On KW_FLOAT reduce production fcmp -> KW_UGT
-- On KW_DOUBLE reduce production fcmp -> KW_UGT
-- On I reduce production fcmp -> KW_UGT

State 375:
## Known stack suffix:
## KW_UGE
## LR(1) items:
fcmp -> KW_UGE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_UGE
-- On LT reduce production fcmp -> KW_UGE
-- On LSQUARE reduce production fcmp -> KW_UGE
-- On LCURLY reduce production fcmp -> KW_UGE
-- On KW_X86_MMX reduce production fcmp -> KW_UGE
-- On KW_X86_FP80 reduce production fcmp -> KW_UGE
-- On KW_VOID reduce production fcmp -> KW_UGE
-- On KW_PPC_FP128 reduce production fcmp -> KW_UGE
-- On KW_OPAQUE reduce production fcmp -> KW_UGE
-- On KW_METADATA reduce production fcmp -> KW_UGE
-- On KW_LABEL reduce production fcmp -> KW_UGE
-- On KW_HALF reduce production fcmp -> KW_UGE
-- On KW_FP128 reduce production fcmp -> KW_UGE
-- On KW_FLOAT reduce production fcmp -> KW_UGE
-- On KW_DOUBLE reduce production fcmp -> KW_UGE
-- On I reduce production fcmp -> KW_UGE

State 376:
## Known stack suffix:
## KW_UEQ
## LR(1) items:
fcmp -> KW_UEQ . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_UEQ
-- On LT reduce production fcmp -> KW_UEQ
-- On LSQUARE reduce production fcmp -> KW_UEQ
-- On LCURLY reduce production fcmp -> KW_UEQ
-- On KW_X86_MMX reduce production fcmp -> KW_UEQ
-- On KW_X86_FP80 reduce production fcmp -> KW_UEQ
-- On KW_VOID reduce production fcmp -> KW_UEQ
-- On KW_PPC_FP128 reduce production fcmp -> KW_UEQ
-- On KW_OPAQUE reduce production fcmp -> KW_UEQ
-- On KW_METADATA reduce production fcmp -> KW_UEQ
-- On KW_LABEL reduce production fcmp -> KW_UEQ
-- On KW_HALF reduce production fcmp -> KW_UEQ
-- On KW_FP128 reduce production fcmp -> KW_UEQ
-- On KW_FLOAT reduce production fcmp -> KW_UEQ
-- On KW_DOUBLE reduce production fcmp -> KW_UEQ
-- On I reduce production fcmp -> KW_UEQ

State 377:
## Known stack suffix:
## KW_TRUE
## LR(1) items:
fcmp -> KW_TRUE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_TRUE
-- On LT reduce production fcmp -> KW_TRUE
-- On LSQUARE reduce production fcmp -> KW_TRUE
-- On LCURLY reduce production fcmp -> KW_TRUE
-- On KW_X86_MMX reduce production fcmp -> KW_TRUE
-- On KW_X86_FP80 reduce production fcmp -> KW_TRUE
-- On KW_VOID reduce production fcmp -> KW_TRUE
-- On KW_PPC_FP128 reduce production fcmp -> KW_TRUE
-- On KW_OPAQUE reduce production fcmp -> KW_TRUE
-- On KW_METADATA reduce production fcmp -> KW_TRUE
-- On KW_LABEL reduce production fcmp -> KW_TRUE
-- On KW_HALF reduce production fcmp -> KW_TRUE
-- On KW_FP128 reduce production fcmp -> KW_TRUE
-- On KW_FLOAT reduce production fcmp -> KW_TRUE
-- On KW_DOUBLE reduce production fcmp -> KW_TRUE
-- On I reduce production fcmp -> KW_TRUE

State 378:
## Known stack suffix:
## KW_ORD
## LR(1) items:
fcmp -> KW_ORD . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_ORD
-- On LT reduce production fcmp -> KW_ORD
-- On LSQUARE reduce production fcmp -> KW_ORD
-- On LCURLY reduce production fcmp -> KW_ORD
-- On KW_X86_MMX reduce production fcmp -> KW_ORD
-- On KW_X86_FP80 reduce production fcmp -> KW_ORD
-- On KW_VOID reduce production fcmp -> KW_ORD
-- On KW_PPC_FP128 reduce production fcmp -> KW_ORD
-- On KW_OPAQUE reduce production fcmp -> KW_ORD
-- On KW_METADATA reduce production fcmp -> KW_ORD
-- On KW_LABEL reduce production fcmp -> KW_ORD
-- On KW_HALF reduce production fcmp -> KW_ORD
-- On KW_FP128 reduce production fcmp -> KW_ORD
-- On KW_FLOAT reduce production fcmp -> KW_ORD
-- On KW_DOUBLE reduce production fcmp -> KW_ORD
-- On I reduce production fcmp -> KW_ORD

State 379:
## Known stack suffix:
## KW_ONE
## LR(1) items:
fcmp -> KW_ONE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_ONE
-- On LT reduce production fcmp -> KW_ONE
-- On LSQUARE reduce production fcmp -> KW_ONE
-- On LCURLY reduce production fcmp -> KW_ONE
-- On KW_X86_MMX reduce production fcmp -> KW_ONE
-- On KW_X86_FP80 reduce production fcmp -> KW_ONE
-- On KW_VOID reduce production fcmp -> KW_ONE
-- On KW_PPC_FP128 reduce production fcmp -> KW_ONE
-- On KW_OPAQUE reduce production fcmp -> KW_ONE
-- On KW_METADATA reduce production fcmp -> KW_ONE
-- On KW_LABEL reduce production fcmp -> KW_ONE
-- On KW_HALF reduce production fcmp -> KW_ONE
-- On KW_FP128 reduce production fcmp -> KW_ONE
-- On KW_FLOAT reduce production fcmp -> KW_ONE
-- On KW_DOUBLE reduce production fcmp -> KW_ONE
-- On I reduce production fcmp -> KW_ONE

State 380:
## Known stack suffix:
## KW_OLT
## LR(1) items:
fcmp -> KW_OLT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_OLT
-- On LT reduce production fcmp -> KW_OLT
-- On LSQUARE reduce production fcmp -> KW_OLT
-- On LCURLY reduce production fcmp -> KW_OLT
-- On KW_X86_MMX reduce production fcmp -> KW_OLT
-- On KW_X86_FP80 reduce production fcmp -> KW_OLT
-- On KW_VOID reduce production fcmp -> KW_OLT
-- On KW_PPC_FP128 reduce production fcmp -> KW_OLT
-- On KW_OPAQUE reduce production fcmp -> KW_OLT
-- On KW_METADATA reduce production fcmp -> KW_OLT
-- On KW_LABEL reduce production fcmp -> KW_OLT
-- On KW_HALF reduce production fcmp -> KW_OLT
-- On KW_FP128 reduce production fcmp -> KW_OLT
-- On KW_FLOAT reduce production fcmp -> KW_OLT
-- On KW_DOUBLE reduce production fcmp -> KW_OLT
-- On I reduce production fcmp -> KW_OLT

State 381:
## Known stack suffix:
## KW_OLE
## LR(1) items:
fcmp -> KW_OLE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_OLE
-- On LT reduce production fcmp -> KW_OLE
-- On LSQUARE reduce production fcmp -> KW_OLE
-- On LCURLY reduce production fcmp -> KW_OLE
-- On KW_X86_MMX reduce production fcmp -> KW_OLE
-- On KW_X86_FP80 reduce production fcmp -> KW_OLE
-- On KW_VOID reduce production fcmp -> KW_OLE
-- On KW_PPC_FP128 reduce production fcmp -> KW_OLE
-- On KW_OPAQUE reduce production fcmp -> KW_OLE
-- On KW_METADATA reduce production fcmp -> KW_OLE
-- On KW_LABEL reduce production fcmp -> KW_OLE
-- On KW_HALF reduce production fcmp -> KW_OLE
-- On KW_FP128 reduce production fcmp -> KW_OLE
-- On KW_FLOAT reduce production fcmp -> KW_OLE
-- On KW_DOUBLE reduce production fcmp -> KW_OLE
-- On I reduce production fcmp -> KW_OLE

State 382:
## Known stack suffix:
## KW_OGT
## LR(1) items:
fcmp -> KW_OGT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_OGT
-- On LT reduce production fcmp -> KW_OGT
-- On LSQUARE reduce production fcmp -> KW_OGT
-- On LCURLY reduce production fcmp -> KW_OGT
-- On KW_X86_MMX reduce production fcmp -> KW_OGT
-- On KW_X86_FP80 reduce production fcmp -> KW_OGT
-- On KW_VOID reduce production fcmp -> KW_OGT
-- On KW_PPC_FP128 reduce production fcmp -> KW_OGT
-- On KW_OPAQUE reduce production fcmp -> KW_OGT
-- On KW_METADATA reduce production fcmp -> KW_OGT
-- On KW_LABEL reduce production fcmp -> KW_OGT
-- On KW_HALF reduce production fcmp -> KW_OGT
-- On KW_FP128 reduce production fcmp -> KW_OGT
-- On KW_FLOAT reduce production fcmp -> KW_OGT
-- On KW_DOUBLE reduce production fcmp -> KW_OGT
-- On I reduce production fcmp -> KW_OGT

State 383:
## Known stack suffix:
## KW_OGE
## LR(1) items:
fcmp -> KW_OGE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_OGE
-- On LT reduce production fcmp -> KW_OGE
-- On LSQUARE reduce production fcmp -> KW_OGE
-- On LCURLY reduce production fcmp -> KW_OGE
-- On KW_X86_MMX reduce production fcmp -> KW_OGE
-- On KW_X86_FP80 reduce production fcmp -> KW_OGE
-- On KW_VOID reduce production fcmp -> KW_OGE
-- On KW_PPC_FP128 reduce production fcmp -> KW_OGE
-- On KW_OPAQUE reduce production fcmp -> KW_OGE
-- On KW_METADATA reduce production fcmp -> KW_OGE
-- On KW_LABEL reduce production fcmp -> KW_OGE
-- On KW_HALF reduce production fcmp -> KW_OGE
-- On KW_FP128 reduce production fcmp -> KW_OGE
-- On KW_FLOAT reduce production fcmp -> KW_OGE
-- On KW_DOUBLE reduce production fcmp -> KW_OGE
-- On I reduce production fcmp -> KW_OGE

State 384:
## Known stack suffix:
## KW_OEQ
## LR(1) items:
fcmp -> KW_OEQ . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_OEQ
-- On LT reduce production fcmp -> KW_OEQ
-- On LSQUARE reduce production fcmp -> KW_OEQ
-- On LCURLY reduce production fcmp -> KW_OEQ
-- On KW_X86_MMX reduce production fcmp -> KW_OEQ
-- On KW_X86_FP80 reduce production fcmp -> KW_OEQ
-- On KW_VOID reduce production fcmp -> KW_OEQ
-- On KW_PPC_FP128 reduce production fcmp -> KW_OEQ
-- On KW_OPAQUE reduce production fcmp -> KW_OEQ
-- On KW_METADATA reduce production fcmp -> KW_OEQ
-- On KW_LABEL reduce production fcmp -> KW_OEQ
-- On KW_HALF reduce production fcmp -> KW_OEQ
-- On KW_FP128 reduce production fcmp -> KW_OEQ
-- On KW_FLOAT reduce production fcmp -> KW_OEQ
-- On KW_DOUBLE reduce production fcmp -> KW_OEQ
-- On I reduce production fcmp -> KW_OEQ

State 385:
## Known stack suffix:
## KW_FALSE
## LR(1) items:
fcmp -> KW_FALSE . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fcmp -> KW_FALSE
-- On LT reduce production fcmp -> KW_FALSE
-- On LSQUARE reduce production fcmp -> KW_FALSE
-- On LCURLY reduce production fcmp -> KW_FALSE
-- On KW_X86_MMX reduce production fcmp -> KW_FALSE
-- On KW_X86_FP80 reduce production fcmp -> KW_FALSE
-- On KW_VOID reduce production fcmp -> KW_FALSE
-- On KW_PPC_FP128 reduce production fcmp -> KW_FALSE
-- On KW_OPAQUE reduce production fcmp -> KW_FALSE
-- On KW_METADATA reduce production fcmp -> KW_FALSE
-- On KW_LABEL reduce production fcmp -> KW_FALSE
-- On KW_HALF reduce production fcmp -> KW_FALSE
-- On KW_FP128 reduce production fcmp -> KW_FALSE
-- On KW_FLOAT reduce production fcmp -> KW_FALSE
-- On KW_DOUBLE reduce production fcmp -> KW_FALSE
-- On I reduce production fcmp -> KW_FALSE

State 386:
## Known stack suffix:
## KW_FCMP fcmp
## LR(1) items:
instr -> KW_FCMP fcmp . typ value COMMA value [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 387
## Reductions:

State 387:
## Known stack suffix:
## KW_FCMP fcmp typ
## LR(1) items:
instr -> KW_FCMP fcmp typ . value COMMA value [ EOL ]
typ -> typ . STAR [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
## Transitions:
-- On STAR shift to state 30
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LPAREN shift to state 31
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 388
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 388:
## Known stack suffix:
## KW_FCMP fcmp typ value
## LR(1) items:
instr -> KW_FCMP fcmp typ value . COMMA value [ EOL ]
## Transitions:
-- On COMMA shift to state 389
## Reductions:

State 389:
## Known stack suffix:
## KW_FCMP fcmp typ value COMMA
## LR(1) items:
instr -> KW_FCMP fcmp typ value COMMA . value [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 390
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 390:
## Known stack suffix:
## KW_FCMP fcmp typ value COMMA value
## LR(1) items:
instr -> KW_FCMP fcmp typ value COMMA value . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_FCMP fcmp typ value COMMA value

State 391:
## Known stack suffix:
## KW_FADD
## LR(1) items:
fbinop -> KW_FADD . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NSZ KW_NNAN KW_NINF KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_FAST KW_DOUBLE KW_ARCP I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fbinop -> KW_FADD
-- On LT reduce production fbinop -> KW_FADD
-- On LSQUARE reduce production fbinop -> KW_FADD
-- On LCURLY reduce production fbinop -> KW_FADD
-- On KW_X86_MMX reduce production fbinop -> KW_FADD
-- On KW_X86_FP80 reduce production fbinop -> KW_FADD
-- On KW_VOID reduce production fbinop -> KW_FADD
-- On KW_PPC_FP128 reduce production fbinop -> KW_FADD
-- On KW_OPAQUE reduce production fbinop -> KW_FADD
-- On KW_NSZ reduce production fbinop -> KW_FADD
-- On KW_NNAN reduce production fbinop -> KW_FADD
-- On KW_NINF reduce production fbinop -> KW_FADD
-- On KW_METADATA reduce production fbinop -> KW_FADD
-- On KW_LABEL reduce production fbinop -> KW_FADD
-- On KW_HALF reduce production fbinop -> KW_FADD
-- On KW_FP128 reduce production fbinop -> KW_FADD
-- On KW_FLOAT reduce production fbinop -> KW_FADD
-- On KW_FAST reduce production fbinop -> KW_FADD
-- On KW_DOUBLE reduce production fbinop -> KW_FADD
-- On KW_ARCP reduce production fbinop -> KW_FADD
-- On I reduce production fbinop -> KW_FADD

State 392:
## Known stack suffix:
## KW_EXTRACTVALUE
## LR(1) items:
instr -> KW_EXTRACTVALUE . tvalue COMMA separated_nonempty_list(COMMA,INTEGER) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 393
## Reductions:

State 393:
## Known stack suffix:
## KW_EXTRACTVALUE tvalue
## LR(1) items:
instr -> KW_EXTRACTVALUE tvalue . COMMA separated_nonempty_list(COMMA,INTEGER) [ EOL ]
## Transitions:
-- On COMMA shift to state 394
## Reductions:

State 394:
## Known stack suffix:
## KW_EXTRACTVALUE tvalue COMMA
## LR(1) items:
instr -> KW_EXTRACTVALUE tvalue COMMA . separated_nonempty_list(COMMA,INTEGER) [ EOL ]
## Transitions:
-- On INTEGER shift to state 323
-- On separated_nonempty_list(COMMA,INTEGER) shift to state 395
## Reductions:

State 395:
## Known stack suffix:
## KW_EXTRACTVALUE tvalue COMMA separated_nonempty_list(COMMA,INTEGER)
## LR(1) items:
instr -> KW_EXTRACTVALUE tvalue COMMA separated_nonempty_list(COMMA,INTEGER) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_EXTRACTVALUE tvalue COMMA separated_nonempty_list(COMMA,INTEGER)

State 396:
## Known stack suffix:
## KW_EXTRACTELEMENT
## LR(1) items:
instr -> KW_EXTRACTELEMENT . tvalue COMMA tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 397
## Reductions:

State 397:
## Known stack suffix:
## KW_EXTRACTELEMENT tvalue
## LR(1) items:
instr -> KW_EXTRACTELEMENT tvalue . COMMA tvalue [ EOL ]
## Transitions:
-- On COMMA shift to state 398
## Reductions:

State 398:
## Known stack suffix:
## KW_EXTRACTELEMENT tvalue COMMA
## LR(1) items:
instr -> KW_EXTRACTELEMENT tvalue COMMA . tvalue [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 399
## Reductions:

State 399:
## Known stack suffix:
## KW_EXTRACTELEMENT tvalue COMMA tvalue
## LR(1) items:
instr -> KW_EXTRACTELEMENT tvalue COMMA tvalue . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_EXTRACTELEMENT tvalue COMMA tvalue

State 400:
## Known stack suffix:
## KW_BR
## LR(1) items:
instr -> KW_BR . tvalue COMMA tident COMMA tident [ EOL ]
instr -> KW_BR . tident [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 401
-- On tvalue shift to state 403
-- On tident shift to state 408
## Reductions:

State 401:
## Known stack suffix:
## typ
## LR(1) items:
tident -> typ . ident [ EOL ]
tvalue -> typ . value [ COMMA ]
typ -> typ . STAR [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
## Transitions:
-- On STAR shift to state 30
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LPAREN shift to state 31
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 225
-- On ident shift to state 402
-- On const shift to state 227
## Reductions:

State 402:
## Known stack suffix:
## typ ident
## LR(1) items:
tident -> typ ident . [ EOL ]
value -> ident . [ COMMA ]
## Transitions:
## Reductions:
-- On EOL reduce production tident -> typ ident
-- On COMMA reduce production value -> ident

State 403:
## Known stack suffix:
## KW_BR tvalue
## LR(1) items:
instr -> KW_BR tvalue . COMMA tident COMMA tident [ EOL ]
## Transitions:
-- On COMMA shift to state 404
## Reductions:

State 404:
## Known stack suffix:
## KW_BR tvalue COMMA
## LR(1) items:
instr -> KW_BR tvalue COMMA . tident COMMA tident [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 230
-- On tident shift to state 405
## Reductions:

State 405:
## Known stack suffix:
## KW_BR tvalue COMMA tident
## LR(1) items:
instr -> KW_BR tvalue COMMA tident . COMMA tident [ EOL ]
## Transitions:
-- On COMMA shift to state 406
## Reductions:

State 406:
## Known stack suffix:
## KW_BR tvalue COMMA tident COMMA
## LR(1) items:
instr -> KW_BR tvalue COMMA tident COMMA . tident [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 230
-- On tident shift to state 407
## Reductions:

State 407:
## Known stack suffix:
## KW_BR tvalue COMMA tident COMMA tident
## LR(1) items:
instr -> KW_BR tvalue COMMA tident COMMA tident . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_BR tvalue COMMA tident COMMA tident

State 408:
## Known stack suffix:
## KW_BR tident
## LR(1) items:
instr -> KW_BR tident . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_BR tident

State 409:
## Known stack suffix:
## KW_BITCAST
## LR(1) items:
conversion -> KW_BITCAST . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production conversion -> KW_BITCAST
-- On LT reduce production conversion -> KW_BITCAST
-- On LSQUARE reduce production conversion -> KW_BITCAST
-- On LCURLY reduce production conversion -> KW_BITCAST
-- On KW_X86_MMX reduce production conversion -> KW_BITCAST
-- On KW_X86_FP80 reduce production conversion -> KW_BITCAST
-- On KW_VOID reduce production conversion -> KW_BITCAST
-- On KW_PPC_FP128 reduce production conversion -> KW_BITCAST
-- On KW_OPAQUE reduce production conversion -> KW_BITCAST
-- On KW_METADATA reduce production conversion -> KW_BITCAST
-- On KW_LABEL reduce production conversion -> KW_BITCAST
-- On KW_HALF reduce production conversion -> KW_BITCAST
-- On KW_FP128 reduce production conversion -> KW_BITCAST
-- On KW_FLOAT reduce production conversion -> KW_BITCAST
-- On KW_DOUBLE reduce production conversion -> KW_BITCAST
-- On I reduce production conversion -> KW_BITCAST

State 410:
## Known stack suffix:
## KW_ATOMICRMW
## LR(1) items:
instr -> KW_ATOMICRMW . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_ATOMICRMW

State 411:
## Known stack suffix:
## KW_ATOMICCMPXCHG
## LR(1) items:
instr -> KW_ATOMICCMPXCHG . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_ATOMICCMPXCHG

State 412:
## Known stack suffix:
## KW_ASHR
## LR(1) items:
ibinop_exact_opt -> KW_ASHR . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_EXACT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_exact_opt -> KW_ASHR
-- On LT reduce production ibinop_exact_opt -> KW_ASHR
-- On LSQUARE reduce production ibinop_exact_opt -> KW_ASHR
-- On LCURLY reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_X86_MMX reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_X86_FP80 reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_VOID reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_PPC_FP128 reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_OPAQUE reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_METADATA reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_LABEL reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_HALF reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_FP128 reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_FLOAT reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_EXACT reduce production ibinop_exact_opt -> KW_ASHR
-- On KW_DOUBLE reduce production ibinop_exact_opt -> KW_ASHR
-- On I reduce production ibinop_exact_opt -> KW_ASHR

State 413:
## Known stack suffix:
## KW_AND
## LR(1) items:
ibinop_no_opt -> KW_AND . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_no_opt -> KW_AND
-- On LT reduce production ibinop_no_opt -> KW_AND
-- On LSQUARE reduce production ibinop_no_opt -> KW_AND
-- On LCURLY reduce production ibinop_no_opt -> KW_AND
-- On KW_X86_MMX reduce production ibinop_no_opt -> KW_AND
-- On KW_X86_FP80 reduce production ibinop_no_opt -> KW_AND
-- On KW_VOID reduce production ibinop_no_opt -> KW_AND
-- On KW_PPC_FP128 reduce production ibinop_no_opt -> KW_AND
-- On KW_OPAQUE reduce production ibinop_no_opt -> KW_AND
-- On KW_METADATA reduce production ibinop_no_opt -> KW_AND
-- On KW_LABEL reduce production ibinop_no_opt -> KW_AND
-- On KW_HALF reduce production ibinop_no_opt -> KW_AND
-- On KW_FP128 reduce production ibinop_no_opt -> KW_AND
-- On KW_FLOAT reduce production ibinop_no_opt -> KW_AND
-- On KW_DOUBLE reduce production ibinop_no_opt -> KW_AND
-- On I reduce production ibinop_no_opt -> KW_AND

State 414:
## Known stack suffix:
## KW_ALLOCA
## LR(1) items:
instr -> KW_ALLOCA . typ option(preceded(COMMA,alloca_opt)) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 415
## Reductions:

State 415:
## Known stack suffix:
## KW_ALLOCA typ
## LR(1) items:
instr -> KW_ALLOCA typ . option(preceded(COMMA,alloca_opt)) [ EOL ]
typ -> typ . STAR [ STAR LPAREN EOL COMMA ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LPAREN EOL COMMA ]
## Transitions:
-- On STAR shift to state 30
-- On LPAREN shift to state 31
-- On COMMA shift to state 416
-- On option(preceded(COMMA,alloca_opt)) shift to state 421
## Reductions:
-- On EOL reduce production option(preceded(COMMA,alloca_opt)) ->

State 416:
## Known stack suffix:
## COMMA
## LR(1) items:
option(preceded(COMMA,alloca_opt)) -> COMMA . alloca_opt [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On KW_ALIGN shift to state 196
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 417
-- On alloca_opt shift to state 419
-- On align shift to state 420
## Reductions:

State 417:
## Known stack suffix:
## tvalue
## LR(1) items:
alloca_opt -> tvalue . option(preceded(COMMA,align)) [ EOL ]
## Transitions:
-- On COMMA shift to state 251
-- On option(preceded(COMMA,align)) shift to state 418
## Reductions:
-- On EOL reduce production option(preceded(COMMA,align)) ->

State 418:
## Known stack suffix:
## tvalue option(preceded(COMMA,align))
## LR(1) items:
alloca_opt -> tvalue option(preceded(COMMA,align)) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production alloca_opt -> tvalue option(preceded(COMMA,align))

State 419:
## Known stack suffix:
## COMMA alloca_opt
## LR(1) items:
option(preceded(COMMA,alloca_opt)) -> COMMA alloca_opt . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production option(preceded(COMMA,alloca_opt)) -> COMMA alloca_opt

State 420:
## Known stack suffix:
## align
## LR(1) items:
alloca_opt -> align . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production alloca_opt -> align

State 421:
## Known stack suffix:
## KW_ALLOCA typ option(preceded(COMMA,alloca_opt))
## LR(1) items:
instr -> KW_ALLOCA typ option(preceded(COMMA,alloca_opt)) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> KW_ALLOCA typ option(preceded(COMMA,alloca_opt))

State 422:
## Known stack suffix:
## KW_ADD
## LR(1) items:
ibinop_nuw_nsw_opt -> KW_ADD . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NUW KW_NSW KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On LT reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On LSQUARE reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On LCURLY reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_X86_MMX reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_X86_FP80 reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_VOID reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_PPC_FP128 reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_OPAQUE reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_NUW reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_NSW reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_METADATA reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_LABEL reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_HALF reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_FP128 reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_FLOAT reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On KW_DOUBLE reduce production ibinop_nuw_nsw_opt -> KW_ADD
-- On I reduce production ibinop_nuw_nsw_opt -> KW_ADD

State 423:
## Known stack suffix:
## option(KW_TAIL)
## LR(1) items:
instr -> option(KW_TAIL) . KW_CALL option(cconv) list(param_attr) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) [ EOL ]
## Transitions:
-- On KW_CALL shift to state 424
## Reductions:

State 424:
## Known stack suffix:
## option(KW_TAIL) KW_CALL
## LR(1) items:
instr -> option(KW_TAIL) KW_CALL . option(cconv) list(param_attr) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) [ EOL ]
## Transitions:
-- On KW_FASTCC shift to state 111
-- On KW_COLDCC shift to state 118
-- On KW_CCC shift to state 119
-- On KW_CC shift to state 120
-- On option(cconv) shift to state 425
-- On cconv shift to state 316
## Reductions:
-- On LTLCURLY reduce production option(cconv) ->
-- On LT reduce production option(cconv) ->
-- On LSQUARE reduce production option(cconv) ->
-- On LCURLY reduce production option(cconv) ->
-- On KW_ZEROEXT reduce production option(cconv) ->
-- On KW_X86_MMX reduce production option(cconv) ->
-- On KW_X86_FP80 reduce production option(cconv) ->
-- On KW_VOID reduce production option(cconv) ->
-- On KW_SRET reduce production option(cconv) ->
-- On KW_SIGNEXT reduce production option(cconv) ->
-- On KW_RETURNED reduce production option(cconv) ->
-- On KW_PPC_FP128 reduce production option(cconv) ->
-- On KW_OPAQUE reduce production option(cconv) ->
-- On KW_NONNULL reduce production option(cconv) ->
-- On KW_NOCAPTURE reduce production option(cconv) ->
-- On KW_NOALIAS reduce production option(cconv) ->
-- On KW_NEST reduce production option(cconv) ->
-- On KW_METADATA reduce production option(cconv) ->
-- On KW_LABEL reduce production option(cconv) ->
-- On KW_INREG reduce production option(cconv) ->
-- On KW_INALLOCA reduce production option(cconv) ->
-- On KW_HALF reduce production option(cconv) ->
-- On KW_FP128 reduce production option(cconv) ->
-- On KW_FLOAT reduce production option(cconv) ->
-- On KW_DOUBLE reduce production option(cconv) ->
-- On KW_DEREFERENCEABLE reduce production option(cconv) ->
-- On KW_BYVAL reduce production option(cconv) ->
-- On KW_ALIGN reduce production option(cconv) ->
-- On I reduce production option(cconv) ->

State 425:
## Known stack suffix:
## option(KW_TAIL) KW_CALL option(cconv)
## LR(1) items:
instr -> option(KW_TAIL) KW_CALL option(cconv) . list(param_attr) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) [ EOL ]
## Transitions:
-- On KW_ZEROEXT shift to state 126
-- On KW_SRET shift to state 127
-- On KW_SIGNEXT shift to state 128
-- On KW_RETURNED shift to state 129
-- On KW_NONNULL shift to state 130
-- On KW_NOCAPTURE shift to state 131
-- On KW_NOALIAS shift to state 132
-- On KW_NEST shift to state 133
-- On KW_INREG shift to state 134
-- On KW_INALLOCA shift to state 135
-- On KW_DEREFERENCEABLE shift to state 136
-- On KW_BYVAL shift to state 140
-- On KW_ALIGN shift to state 141
-- On param_attr shift to state 143
-- On list(param_attr) shift to state 426
## Reductions:
-- On LTLCURLY reduce production list(param_attr) ->
-- On LT reduce production list(param_attr) ->
-- On LSQUARE reduce production list(param_attr) ->
-- On LCURLY reduce production list(param_attr) ->
-- On KW_X86_MMX reduce production list(param_attr) ->
-- On KW_X86_FP80 reduce production list(param_attr) ->
-- On KW_VOID reduce production list(param_attr) ->
-- On KW_PPC_FP128 reduce production list(param_attr) ->
-- On KW_OPAQUE reduce production list(param_attr) ->
-- On KW_METADATA reduce production list(param_attr) ->
-- On KW_LABEL reduce production list(param_attr) ->
-- On KW_HALF reduce production list(param_attr) ->
-- On KW_FP128 reduce production list(param_attr) ->
-- On KW_FLOAT reduce production list(param_attr) ->
-- On KW_DOUBLE reduce production list(param_attr) ->
-- On I reduce production list(param_attr) ->

State 426:
## Known stack suffix:
## option(KW_TAIL) KW_CALL option(cconv) list(param_attr)
## LR(1) items:
instr -> option(KW_TAIL) KW_CALL option(cconv) list(param_attr) . tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 230
-- On tident shift to state 427
## Reductions:

State 427:
## Known stack suffix:
## option(KW_TAIL) KW_CALL option(cconv) list(param_attr) tident
## LR(1) items:
instr -> option(KW_TAIL) KW_CALL option(cconv) list(param_attr) tident . LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) [ EOL ]
## Transitions:
-- On LPAREN shift to state 428
## Reductions:

State 428:
## Known stack suffix:
## option(KW_TAIL) KW_CALL option(cconv) list(param_attr) tident LPAREN
## LR(1) items:
instr -> option(KW_TAIL) KW_CALL option(cconv) list(param_attr) tident LPAREN . loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 301
-- On separated_nonempty_list(COMMA,call_arg) shift to state 303
-- On loption(separated_nonempty_list(COMMA,call_arg)) shift to state 429
-- On call_arg shift to state 313
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,call_arg)) ->

State 429:
## Known stack suffix:
## option(KW_TAIL) KW_CALL option(cconv) list(param_attr) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg))
## LR(1) items:
instr -> option(KW_TAIL) KW_CALL option(cconv) list(param_attr) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) . RPAREN list(fn_attr) [ EOL ]
## Transitions:
-- On RPAREN shift to state 430
## Reductions:

State 430:
## Known stack suffix:
## option(KW_TAIL) KW_CALL option(cconv) list(param_attr) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN
## LR(1) items:
instr -> option(KW_TAIL) KW_CALL option(cconv) list(param_attr) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN . list(fn_attr) [ EOL ]
## Transitions:
-- On STRING shift to state 157
-- On KW_UWTABLE shift to state 160
-- On KW_SSPSTRONG shift to state 162
-- On KW_SSPREQ shift to state 163
-- On KW_SSP shift to state 164
-- On KW_SANITIZE_THREAD shift to state 167
-- On KW_SANITIZE_MEMORY shift to state 168
-- On KW_SANITIZE_ADDRESS shift to state 169
-- On KW_RETURNS_TWICE shift to state 170
-- On KW_READONLY shift to state 171
-- On KW_READNONE shift to state 172
-- On KW_OPTSIZE shift to state 173
-- On KW_OPTNONE shift to state 174
-- On KW_NOUNWIND shift to state 175
-- On KW_NORETURN shift to state 176
-- On KW_NOREDZONE shift to state 177
-- On KW_NONLAZYBIND shift to state 178
-- On KW_NOINLINE shift to state 179
-- On KW_NOIMPLICITFLOAT shift to state 180
-- On KW_NODUPLICATE shift to state 181
-- On KW_NOBUILTIN shift to state 182
-- On KW_NAKED shift to state 183
-- On KW_MINSIZE shift to state 184
-- On KW_JUMPTABLE shift to state 185
-- On KW_INLINEHINT shift to state 186
-- On KW_COLD shift to state 189
-- On KW_BUILTIN shift to state 190
-- On KW_ALWAYSINLINE shift to state 191
-- On KW_ALIGNSTACK shift to state 192
-- On ATTR_GRP_ID shift to state 202
-- On list(fn_attr) shift to state 431
-- On fn_attr shift to state 311
## Reductions:
-- On EOL reduce production list(fn_attr) ->

State 431:
## Known stack suffix:
## option(KW_TAIL) KW_CALL option(cconv) list(param_attr) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr)
## LR(1) items:
instr -> option(KW_TAIL) KW_CALL option(cconv) list(param_attr) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> option(KW_TAIL) KW_CALL option(cconv) list(param_attr) tident LPAREN loption(separated_nonempty_list(COMMA,call_arg)) RPAREN list(fn_attr)

State 432:
## Known stack suffix:
## option(KW_GETELEMENTPTR)
## LR(1) items:
instr -> option(KW_GETELEMENTPTR) . KW_INBOUNDS tvalue list(preceded(COMMA,tvalue)) [ EOL ]
## Transitions:
-- On KW_INBOUNDS shift to state 433
## Reductions:

State 433:
## Known stack suffix:
## option(KW_GETELEMENTPTR) KW_INBOUNDS
## LR(1) items:
instr -> option(KW_GETELEMENTPTR) KW_INBOUNDS . tvalue list(preceded(COMMA,tvalue)) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 434
## Reductions:

State 434:
## Known stack suffix:
## option(KW_GETELEMENTPTR) KW_INBOUNDS tvalue
## LR(1) items:
instr -> option(KW_GETELEMENTPTR) KW_INBOUNDS tvalue . list(preceded(COMMA,tvalue)) [ EOL ]
## Transitions:
-- On COMMA shift to state 435
-- On list(preceded(COMMA,tvalue)) shift to state 438
## Reductions:
-- On EOL reduce production list(preceded(COMMA,tvalue)) ->

State 435:
## Known stack suffix:
## COMMA
## LR(1) items:
list(preceded(COMMA,tvalue)) -> COMMA . tvalue list(preceded(COMMA,tvalue)) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 224
-- On tvalue shift to state 436
## Reductions:

State 436:
## Known stack suffix:
## COMMA tvalue
## LR(1) items:
list(preceded(COMMA,tvalue)) -> COMMA tvalue . list(preceded(COMMA,tvalue)) [ EOL ]
## Transitions:
-- On COMMA shift to state 435
-- On list(preceded(COMMA,tvalue)) shift to state 437
## Reductions:
-- On EOL reduce production list(preceded(COMMA,tvalue)) ->

State 437:
## Known stack suffix:
## COMMA tvalue list(preceded(COMMA,tvalue))
## LR(1) items:
list(preceded(COMMA,tvalue)) -> COMMA tvalue list(preceded(COMMA,tvalue)) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production list(preceded(COMMA,tvalue)) -> COMMA tvalue list(preceded(COMMA,tvalue))

State 438:
## Known stack suffix:
## option(KW_GETELEMENTPTR) KW_INBOUNDS tvalue list(preceded(COMMA,tvalue))
## LR(1) items:
instr -> option(KW_GETELEMENTPTR) KW_INBOUNDS tvalue list(preceded(COMMA,tvalue)) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> option(KW_GETELEMENTPTR) KW_INBOUNDS tvalue list(preceded(COMMA,tvalue))

State 439:
## Known stack suffix:
## option(terminated(LABEL,nonempty_list(EOL))) nonempty_list(terminated(instr,nonempty_list(EOL)))
## LR(1) items:
df_blocks -> option(terminated(LABEL,nonempty_list(EOL))) nonempty_list(terminated(instr,nonempty_list(EOL))) . list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) [ RCURLY ]
## Transitions:
-- On LABEL shift to state 440
-- On list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) shift to state 482
## Reductions:
-- On RCURLY reduce production list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) ->

State 440:
## Known stack suffix:
## LABEL
## LR(1) items:
list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) -> LABEL . nonempty_list(EOL) nonempty_list(terminated(instr,nonempty_list(EOL))) list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) [ RCURLY ]
## Transitions:
-- On EOL shift to state 210
-- On nonempty_list(EOL) shift to state 441
## Reductions:

State 441:
## Known stack suffix:
## LABEL nonempty_list(EOL)
## LR(1) items:
list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) -> LABEL nonempty_list(EOL) . nonempty_list(terminated(instr,nonempty_list(EOL))) list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) [ RCURLY ]
## Transitions:
-- On LOCAL shift to state 151
-- On KW_ZEXT shift to state 214
-- On KW_XOR shift to state 215
-- On KW_VAARG shift to state 216
-- On KW_UREM shift to state 217
-- On KW_UNREACHABLE shift to state 218
-- On KW_UITOFP shift to state 219
-- On KW_UDIV shift to state 220
-- On KW_TRUNC shift to state 221
-- On KW_TAIL shift to state 222
-- On KW_SWITCH shift to state 223
-- On KW_SUB shift to state 244
-- On KW_STORE shift to state 245
-- On KW_SREM shift to state 254
-- On KW_SITOFP shift to state 255
-- On KW_SHUFFLEVECTOR shift to state 256
-- On KW_SHL shift to state 262
-- On KW_SEXT shift to state 263
-- On KW_SELECT shift to state 264
-- On KW_SDIV shift to state 270
-- On KW_RET shift to state 271
-- On KW_RESUME shift to state 275
-- On KW_PTRTOINT shift to state 277
-- On KW_PHI shift to state 278
-- On KW_OR shift to state 289
-- On KW_MUL shift to state 290
-- On KW_LSHR shift to state 291
-- On KW_LOAD shift to state 292
-- On KW_LANDINGPAD shift to state 296
-- On KW_INVOKE shift to state 297
-- On KW_INTTOPTR shift to state 317
-- On KW_INSERTVALUE shift to state 318
-- On KW_INSERTELEMENT shift to state 327
-- On KW_INDIRECTBR shift to state 333
-- On KW_ICMP shift to state 343
-- On KW_GETELEMENTPTR shift to state 359
-- On KW_FSUB shift to state 360
-- On KW_FREM shift to state 361
-- On KW_FPTRUNC shift to state 362
-- On KW_FPTOUI shift to state 363
-- On KW_FPTOSI shift to state 364
-- On KW_FPEXT shift to state 365
-- On KW_FMUL shift to state 366
-- On KW_FENCE shift to state 367
-- On KW_FDIV shift to state 368
-- On KW_FCMP shift to state 369
-- On KW_FADD shift to state 391
-- On KW_EXTRACTVALUE shift to state 392
-- On KW_EXTRACTELEMENT shift to state 396
-- On KW_BR shift to state 400
-- On KW_BITCAST shift to state 409
-- On KW_ATOMICRMW shift to state 410
-- On KW_ATOMICCMPXCHG shift to state 411
-- On KW_ASHR shift to state 412
-- On KW_AND shift to state 413
-- On KW_ALLOCA shift to state 414
-- On KW_ADD shift to state 422
-- On GLOBAL shift to state 152
-- On option(KW_TAIL) shift to state 423
-- On option(KW_GETELEMENTPTR) shift to state 432
-- On nonempty_list(terminated(instr,nonempty_list(EOL))) shift to state 442
-- On instr shift to state 444
-- On ident shift to state 447
-- On ibinop_nuw_nsw_opt shift to state 450
-- On ibinop_no_opt shift to state 455
-- On ibinop_exact_opt shift to state 456
-- On ibinop shift to state 459
-- On fbinop shift to state 464
-- On conversion shift to state 477
## Reductions:
-- On KW_INBOUNDS reduce production option(KW_GETELEMENTPTR) ->
-- On KW_CALL reduce production option(KW_TAIL) ->

State 442:
## Known stack suffix:
## LABEL nonempty_list(EOL) nonempty_list(terminated(instr,nonempty_list(EOL)))
## LR(1) items:
list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) -> LABEL nonempty_list(EOL) nonempty_list(terminated(instr,nonempty_list(EOL))) . list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) [ RCURLY ]
## Transitions:
-- On LABEL shift to state 440
-- On list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) shift to state 443
## Reductions:
-- On RCURLY reduce production list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) ->

State 443:
## Known stack suffix:
## LABEL nonempty_list(EOL) nonempty_list(terminated(instr,nonempty_list(EOL))) list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL)))))
## LR(1) items:
list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) -> LABEL nonempty_list(EOL) nonempty_list(terminated(instr,nonempty_list(EOL))) list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) . [ RCURLY ]
## Transitions:
## Reductions:
-- On RCURLY reduce production list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) -> LABEL nonempty_list(EOL) nonempty_list(terminated(instr,nonempty_list(EOL))) list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL)))))

State 444:
## Known stack suffix:
## instr
## LR(1) items:
nonempty_list(terminated(instr,nonempty_list(EOL))) -> instr . nonempty_list(EOL) [ RCURLY LABEL ]
nonempty_list(terminated(instr,nonempty_list(EOL))) -> instr . nonempty_list(EOL) nonempty_list(terminated(instr,nonempty_list(EOL))) [ RCURLY LABEL ]
## Transitions:
-- On EOL shift to state 210
-- On nonempty_list(EOL) shift to state 445
## Reductions:

State 445:
## Known stack suffix:
## instr nonempty_list(EOL)
## LR(1) items:
nonempty_list(terminated(instr,nonempty_list(EOL))) -> instr nonempty_list(EOL) . [ RCURLY LABEL ]
nonempty_list(terminated(instr,nonempty_list(EOL))) -> instr nonempty_list(EOL) . nonempty_list(terminated(instr,nonempty_list(EOL))) [ RCURLY LABEL ]
## Transitions:
-- On LOCAL shift to state 151
-- On KW_ZEXT shift to state 214
-- On KW_XOR shift to state 215
-- On KW_VAARG shift to state 216
-- On KW_UREM shift to state 217
-- On KW_UNREACHABLE shift to state 218
-- On KW_UITOFP shift to state 219
-- On KW_UDIV shift to state 220
-- On KW_TRUNC shift to state 221
-- On KW_TAIL shift to state 222
-- On KW_SWITCH shift to state 223
-- On KW_SUB shift to state 244
-- On KW_STORE shift to state 245
-- On KW_SREM shift to state 254
-- On KW_SITOFP shift to state 255
-- On KW_SHUFFLEVECTOR shift to state 256
-- On KW_SHL shift to state 262
-- On KW_SEXT shift to state 263
-- On KW_SELECT shift to state 264
-- On KW_SDIV shift to state 270
-- On KW_RET shift to state 271
-- On KW_RESUME shift to state 275
-- On KW_PTRTOINT shift to state 277
-- On KW_PHI shift to state 278
-- On KW_OR shift to state 289
-- On KW_MUL shift to state 290
-- On KW_LSHR shift to state 291
-- On KW_LOAD shift to state 292
-- On KW_LANDINGPAD shift to state 296
-- On KW_INVOKE shift to state 297
-- On KW_INTTOPTR shift to state 317
-- On KW_INSERTVALUE shift to state 318
-- On KW_INSERTELEMENT shift to state 327
-- On KW_INDIRECTBR shift to state 333
-- On KW_ICMP shift to state 343
-- On KW_GETELEMENTPTR shift to state 359
-- On KW_FSUB shift to state 360
-- On KW_FREM shift to state 361
-- On KW_FPTRUNC shift to state 362
-- On KW_FPTOUI shift to state 363
-- On KW_FPTOSI shift to state 364
-- On KW_FPEXT shift to state 365
-- On KW_FMUL shift to state 366
-- On KW_FENCE shift to state 367
-- On KW_FDIV shift to state 368
-- On KW_FCMP shift to state 369
-- On KW_FADD shift to state 391
-- On KW_EXTRACTVALUE shift to state 392
-- On KW_EXTRACTELEMENT shift to state 396
-- On KW_BR shift to state 400
-- On KW_BITCAST shift to state 409
-- On KW_ATOMICRMW shift to state 410
-- On KW_ATOMICCMPXCHG shift to state 411
-- On KW_ASHR shift to state 412
-- On KW_AND shift to state 413
-- On KW_ALLOCA shift to state 414
-- On KW_ADD shift to state 422
-- On GLOBAL shift to state 152
-- On option(KW_TAIL) shift to state 423
-- On option(KW_GETELEMENTPTR) shift to state 432
-- On nonempty_list(terminated(instr,nonempty_list(EOL))) shift to state 446
-- On instr shift to state 444
-- On ident shift to state 447
-- On ibinop_nuw_nsw_opt shift to state 450
-- On ibinop_no_opt shift to state 455
-- On ibinop_exact_opt shift to state 456
-- On ibinop shift to state 459
-- On fbinop shift to state 464
-- On conversion shift to state 477
## Reductions:
-- On RCURLY reduce production nonempty_list(terminated(instr,nonempty_list(EOL))) -> instr nonempty_list(EOL)
-- On LABEL reduce production nonempty_list(terminated(instr,nonempty_list(EOL))) -> instr nonempty_list(EOL)
-- On KW_INBOUNDS reduce production option(KW_GETELEMENTPTR) ->
-- On KW_CALL reduce production option(KW_TAIL) ->

State 446:
## Known stack suffix:
## instr nonempty_list(EOL) nonempty_list(terminated(instr,nonempty_list(EOL)))
## LR(1) items:
nonempty_list(terminated(instr,nonempty_list(EOL))) -> instr nonempty_list(EOL) nonempty_list(terminated(instr,nonempty_list(EOL))) . [ RCURLY LABEL ]
## Transitions:
## Reductions:
-- On RCURLY reduce production nonempty_list(terminated(instr,nonempty_list(EOL))) -> instr nonempty_list(EOL) nonempty_list(terminated(instr,nonempty_list(EOL)))
-- On LABEL reduce production nonempty_list(terminated(instr,nonempty_list(EOL))) -> instr nonempty_list(EOL) nonempty_list(terminated(instr,nonempty_list(EOL)))

State 447:
## Known stack suffix:
## ident
## LR(1) items:
instr -> ident . EQ instr [ EOL ]
## Transitions:
-- On EQ shift to state 448
## Reductions:

State 448:
## Known stack suffix:
## ident EQ
## LR(1) items:
instr -> ident EQ . instr [ EOL ]
## Transitions:
-- On LOCAL shift to state 151
-- On KW_ZEXT shift to state 214
-- On KW_XOR shift to state 215
-- On KW_VAARG shift to state 216
-- On KW_UREM shift to state 217
-- On KW_UNREACHABLE shift to state 218
-- On KW_UITOFP shift to state 219
-- On KW_UDIV shift to state 220
-- On KW_TRUNC shift to state 221
-- On KW_TAIL shift to state 222
-- On KW_SWITCH shift to state 223
-- On KW_SUB shift to state 244
-- On KW_STORE shift to state 245
-- On KW_SREM shift to state 254
-- On KW_SITOFP shift to state 255
-- On KW_SHUFFLEVECTOR shift to state 256
-- On KW_SHL shift to state 262
-- On KW_SEXT shift to state 263
-- On KW_SELECT shift to state 264
-- On KW_SDIV shift to state 270
-- On KW_RET shift to state 271
-- On KW_RESUME shift to state 275
-- On KW_PTRTOINT shift to state 277
-- On KW_PHI shift to state 278
-- On KW_OR shift to state 289
-- On KW_MUL shift to state 290
-- On KW_LSHR shift to state 291
-- On KW_LOAD shift to state 292
-- On KW_LANDINGPAD shift to state 296
-- On KW_INVOKE shift to state 297
-- On KW_INTTOPTR shift to state 317
-- On KW_INSERTVALUE shift to state 318
-- On KW_INSERTELEMENT shift to state 327
-- On KW_INDIRECTBR shift to state 333
-- On KW_ICMP shift to state 343
-- On KW_GETELEMENTPTR shift to state 359
-- On KW_FSUB shift to state 360
-- On KW_FREM shift to state 361
-- On KW_FPTRUNC shift to state 362
-- On KW_FPTOUI shift to state 363
-- On KW_FPTOSI shift to state 364
-- On KW_FPEXT shift to state 365
-- On KW_FMUL shift to state 366
-- On KW_FENCE shift to state 367
-- On KW_FDIV shift to state 368
-- On KW_FCMP shift to state 369
-- On KW_FADD shift to state 391
-- On KW_EXTRACTVALUE shift to state 392
-- On KW_EXTRACTELEMENT shift to state 396
-- On KW_BR shift to state 400
-- On KW_BITCAST shift to state 409
-- On KW_ATOMICRMW shift to state 410
-- On KW_ATOMICCMPXCHG shift to state 411
-- On KW_ASHR shift to state 412
-- On KW_AND shift to state 413
-- On KW_ALLOCA shift to state 414
-- On KW_ADD shift to state 422
-- On GLOBAL shift to state 152
-- On option(KW_TAIL) shift to state 423
-- On option(KW_GETELEMENTPTR) shift to state 432
-- On instr shift to state 449
-- On ident shift to state 447
-- On ibinop_nuw_nsw_opt shift to state 450
-- On ibinop_no_opt shift to state 455
-- On ibinop_exact_opt shift to state 456
-- On ibinop shift to state 459
-- On fbinop shift to state 464
-- On conversion shift to state 477
## Reductions:
-- On KW_INBOUNDS reduce production option(KW_GETELEMENTPTR) ->
-- On KW_CALL reduce production option(KW_TAIL) ->

State 449:
## Known stack suffix:
## ident EQ instr
## LR(1) items:
instr -> ident EQ instr . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> ident EQ instr

State 450:
## Known stack suffix:
## ibinop_nuw_nsw_opt
## LR(1) items:
ibinop -> ibinop_nuw_nsw_opt . option(KW_NUW) option(KW_NSW) [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
-- On KW_NUW shift to state 451
-- On option(KW_NUW) shift to state 452
## Reductions:
-- On LTLCURLY reduce production option(KW_NUW) ->
-- On LT reduce production option(KW_NUW) ->
-- On LSQUARE reduce production option(KW_NUW) ->
-- On LCURLY reduce production option(KW_NUW) ->
-- On KW_X86_MMX reduce production option(KW_NUW) ->
-- On KW_X86_FP80 reduce production option(KW_NUW) ->
-- On KW_VOID reduce production option(KW_NUW) ->
-- On KW_PPC_FP128 reduce production option(KW_NUW) ->
-- On KW_OPAQUE reduce production option(KW_NUW) ->
-- On KW_NSW reduce production option(KW_NUW) ->
-- On KW_METADATA reduce production option(KW_NUW) ->
-- On KW_LABEL reduce production option(KW_NUW) ->
-- On KW_HALF reduce production option(KW_NUW) ->
-- On KW_FP128 reduce production option(KW_NUW) ->
-- On KW_FLOAT reduce production option(KW_NUW) ->
-- On KW_DOUBLE reduce production option(KW_NUW) ->
-- On I reduce production option(KW_NUW) ->

State 451:
## Known stack suffix:
## KW_NUW
## LR(1) items:
option(KW_NUW) -> KW_NUW . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NSW KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production option(KW_NUW) -> KW_NUW
-- On LT reduce production option(KW_NUW) -> KW_NUW
-- On LSQUARE reduce production option(KW_NUW) -> KW_NUW
-- On LCURLY reduce production option(KW_NUW) -> KW_NUW
-- On KW_X86_MMX reduce production option(KW_NUW) -> KW_NUW
-- On KW_X86_FP80 reduce production option(KW_NUW) -> KW_NUW
-- On KW_VOID reduce production option(KW_NUW) -> KW_NUW
-- On KW_PPC_FP128 reduce production option(KW_NUW) -> KW_NUW
-- On KW_OPAQUE reduce production option(KW_NUW) -> KW_NUW
-- On KW_NSW reduce production option(KW_NUW) -> KW_NUW
-- On KW_METADATA reduce production option(KW_NUW) -> KW_NUW
-- On KW_LABEL reduce production option(KW_NUW) -> KW_NUW
-- On KW_HALF reduce production option(KW_NUW) -> KW_NUW
-- On KW_FP128 reduce production option(KW_NUW) -> KW_NUW
-- On KW_FLOAT reduce production option(KW_NUW) -> KW_NUW
-- On KW_DOUBLE reduce production option(KW_NUW) -> KW_NUW
-- On I reduce production option(KW_NUW) -> KW_NUW

State 452:
## Known stack suffix:
## ibinop_nuw_nsw_opt option(KW_NUW)
## LR(1) items:
ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) . option(KW_NSW) [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
-- On KW_NSW shift to state 453
-- On option(KW_NSW) shift to state 454
## Reductions:
-- On LTLCURLY reduce production option(KW_NSW) ->
-- On LT reduce production option(KW_NSW) ->
-- On LSQUARE reduce production option(KW_NSW) ->
-- On LCURLY reduce production option(KW_NSW) ->
-- On KW_X86_MMX reduce production option(KW_NSW) ->
-- On KW_X86_FP80 reduce production option(KW_NSW) ->
-- On KW_VOID reduce production option(KW_NSW) ->
-- On KW_PPC_FP128 reduce production option(KW_NSW) ->
-- On KW_OPAQUE reduce production option(KW_NSW) ->
-- On KW_METADATA reduce production option(KW_NSW) ->
-- On KW_LABEL reduce production option(KW_NSW) ->
-- On KW_HALF reduce production option(KW_NSW) ->
-- On KW_FP128 reduce production option(KW_NSW) ->
-- On KW_FLOAT reduce production option(KW_NSW) ->
-- On KW_DOUBLE reduce production option(KW_NSW) ->
-- On I reduce production option(KW_NSW) ->

State 453:
## Known stack suffix:
## KW_NSW
## LR(1) items:
option(KW_NSW) -> KW_NSW . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production option(KW_NSW) -> KW_NSW
-- On LT reduce production option(KW_NSW) -> KW_NSW
-- On LSQUARE reduce production option(KW_NSW) -> KW_NSW
-- On LCURLY reduce production option(KW_NSW) -> KW_NSW
-- On KW_X86_MMX reduce production option(KW_NSW) -> KW_NSW
-- On KW_X86_FP80 reduce production option(KW_NSW) -> KW_NSW
-- On KW_VOID reduce production option(KW_NSW) -> KW_NSW
-- On KW_PPC_FP128 reduce production option(KW_NSW) -> KW_NSW
-- On KW_OPAQUE reduce production option(KW_NSW) -> KW_NSW
-- On KW_METADATA reduce production option(KW_NSW) -> KW_NSW
-- On KW_LABEL reduce production option(KW_NSW) -> KW_NSW
-- On KW_HALF reduce production option(KW_NSW) -> KW_NSW
-- On KW_FP128 reduce production option(KW_NSW) -> KW_NSW
-- On KW_FLOAT reduce production option(KW_NSW) -> KW_NSW
-- On KW_DOUBLE reduce production option(KW_NSW) -> KW_NSW
-- On I reduce production option(KW_NSW) -> KW_NSW

State 454:
## Known stack suffix:
## ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
## LR(1) items:
ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW) . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On LT reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On LSQUARE reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On LCURLY reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On KW_X86_MMX reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On KW_X86_FP80 reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On KW_VOID reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On KW_PPC_FP128 reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On KW_OPAQUE reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On KW_METADATA reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On KW_LABEL reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On KW_HALF reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On KW_FP128 reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On KW_FLOAT reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On KW_DOUBLE reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)
-- On I reduce production ibinop -> ibinop_nuw_nsw_opt option(KW_NUW) option(KW_NSW)

State 455:
## Known stack suffix:
## ibinop_no_opt
## LR(1) items:
ibinop -> ibinop_no_opt . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop -> ibinop_no_opt
-- On LT reduce production ibinop -> ibinop_no_opt
-- On LSQUARE reduce production ibinop -> ibinop_no_opt
-- On LCURLY reduce production ibinop -> ibinop_no_opt
-- On KW_X86_MMX reduce production ibinop -> ibinop_no_opt
-- On KW_X86_FP80 reduce production ibinop -> ibinop_no_opt
-- On KW_VOID reduce production ibinop -> ibinop_no_opt
-- On KW_PPC_FP128 reduce production ibinop -> ibinop_no_opt
-- On KW_OPAQUE reduce production ibinop -> ibinop_no_opt
-- On KW_METADATA reduce production ibinop -> ibinop_no_opt
-- On KW_LABEL reduce production ibinop -> ibinop_no_opt
-- On KW_HALF reduce production ibinop -> ibinop_no_opt
-- On KW_FP128 reduce production ibinop -> ibinop_no_opt
-- On KW_FLOAT reduce production ibinop -> ibinop_no_opt
-- On KW_DOUBLE reduce production ibinop -> ibinop_no_opt
-- On I reduce production ibinop -> ibinop_no_opt

State 456:
## Known stack suffix:
## ibinop_exact_opt
## LR(1) items:
ibinop -> ibinop_exact_opt . option(KW_EXACT) [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
-- On KW_EXACT shift to state 457
-- On option(KW_EXACT) shift to state 458
## Reductions:
-- On LTLCURLY reduce production option(KW_EXACT) ->
-- On LT reduce production option(KW_EXACT) ->
-- On LSQUARE reduce production option(KW_EXACT) ->
-- On LCURLY reduce production option(KW_EXACT) ->
-- On KW_X86_MMX reduce production option(KW_EXACT) ->
-- On KW_X86_FP80 reduce production option(KW_EXACT) ->
-- On KW_VOID reduce production option(KW_EXACT) ->
-- On KW_PPC_FP128 reduce production option(KW_EXACT) ->
-- On KW_OPAQUE reduce production option(KW_EXACT) ->
-- On KW_METADATA reduce production option(KW_EXACT) ->
-- On KW_LABEL reduce production option(KW_EXACT) ->
-- On KW_HALF reduce production option(KW_EXACT) ->
-- On KW_FP128 reduce production option(KW_EXACT) ->
-- On KW_FLOAT reduce production option(KW_EXACT) ->
-- On KW_DOUBLE reduce production option(KW_EXACT) ->
-- On I reduce production option(KW_EXACT) ->

State 457:
## Known stack suffix:
## KW_EXACT
## LR(1) items:
option(KW_EXACT) -> KW_EXACT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production option(KW_EXACT) -> KW_EXACT
-- On LT reduce production option(KW_EXACT) -> KW_EXACT
-- On LSQUARE reduce production option(KW_EXACT) -> KW_EXACT
-- On LCURLY reduce production option(KW_EXACT) -> KW_EXACT
-- On KW_X86_MMX reduce production option(KW_EXACT) -> KW_EXACT
-- On KW_X86_FP80 reduce production option(KW_EXACT) -> KW_EXACT
-- On KW_VOID reduce production option(KW_EXACT) -> KW_EXACT
-- On KW_PPC_FP128 reduce production option(KW_EXACT) -> KW_EXACT
-- On KW_OPAQUE reduce production option(KW_EXACT) -> KW_EXACT
-- On KW_METADATA reduce production option(KW_EXACT) -> KW_EXACT
-- On KW_LABEL reduce production option(KW_EXACT) -> KW_EXACT
-- On KW_HALF reduce production option(KW_EXACT) -> KW_EXACT
-- On KW_FP128 reduce production option(KW_EXACT) -> KW_EXACT
-- On KW_FLOAT reduce production option(KW_EXACT) -> KW_EXACT
-- On KW_DOUBLE reduce production option(KW_EXACT) -> KW_EXACT
-- On I reduce production option(KW_EXACT) -> KW_EXACT

State 458:
## Known stack suffix:
## ibinop_exact_opt option(KW_EXACT)
## LR(1) items:
ibinop -> ibinop_exact_opt option(KW_EXACT) . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On LT reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On LSQUARE reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On LCURLY reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On KW_X86_MMX reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On KW_X86_FP80 reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On KW_VOID reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On KW_PPC_FP128 reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On KW_OPAQUE reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On KW_METADATA reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On KW_LABEL reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On KW_HALF reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On KW_FP128 reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On KW_FLOAT reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On KW_DOUBLE reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)
-- On I reduce production ibinop -> ibinop_exact_opt option(KW_EXACT)

State 459:
## Known stack suffix:
## ibinop
## LR(1) items:
instr -> ibinop . typ value COMMA value [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 460
## Reductions:

State 460:
## Known stack suffix:
## ibinop typ
## LR(1) items:
instr -> ibinop typ . value COMMA value [ EOL ]
typ -> typ . STAR [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
## Transitions:
-- On STAR shift to state 30
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LPAREN shift to state 31
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 461
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 461:
## Known stack suffix:
## ibinop typ value
## LR(1) items:
instr -> ibinop typ value . COMMA value [ EOL ]
## Transitions:
-- On COMMA shift to state 462
## Reductions:

State 462:
## Known stack suffix:
## ibinop typ value COMMA
## LR(1) items:
instr -> ibinop typ value COMMA . value [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 463
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 463:
## Known stack suffix:
## ibinop typ value COMMA value
## LR(1) items:
instr -> ibinop typ value COMMA value . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> ibinop typ value COMMA value

State 464:
## Known stack suffix:
## fbinop
## LR(1) items:
instr -> fbinop . list(fast_math) typ value COMMA value [ EOL ]
## Transitions:
-- On KW_NSZ shift to state 465
-- On KW_NNAN shift to state 466
-- On KW_NINF shift to state 467
-- On KW_FAST shift to state 468
-- On KW_ARCP shift to state 469
-- On list(fast_math) shift to state 470
-- On fast_math shift to state 475
## Reductions:
-- On LTLCURLY reduce production list(fast_math) ->
-- On LT reduce production list(fast_math) ->
-- On LSQUARE reduce production list(fast_math) ->
-- On LCURLY reduce production list(fast_math) ->
-- On KW_X86_MMX reduce production list(fast_math) ->
-- On KW_X86_FP80 reduce production list(fast_math) ->
-- On KW_VOID reduce production list(fast_math) ->
-- On KW_PPC_FP128 reduce production list(fast_math) ->
-- On KW_OPAQUE reduce production list(fast_math) ->
-- On KW_METADATA reduce production list(fast_math) ->
-- On KW_LABEL reduce production list(fast_math) ->
-- On KW_HALF reduce production list(fast_math) ->
-- On KW_FP128 reduce production list(fast_math) ->
-- On KW_FLOAT reduce production list(fast_math) ->
-- On KW_DOUBLE reduce production list(fast_math) ->
-- On I reduce production list(fast_math) ->

State 465:
## Known stack suffix:
## KW_NSZ
## LR(1) items:
fast_math -> KW_NSZ . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NSZ KW_NNAN KW_NINF KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_FAST KW_DOUBLE KW_ARCP I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fast_math -> KW_NSZ
-- On LT reduce production fast_math -> KW_NSZ
-- On LSQUARE reduce production fast_math -> KW_NSZ
-- On LCURLY reduce production fast_math -> KW_NSZ
-- On KW_X86_MMX reduce production fast_math -> KW_NSZ
-- On KW_X86_FP80 reduce production fast_math -> KW_NSZ
-- On KW_VOID reduce production fast_math -> KW_NSZ
-- On KW_PPC_FP128 reduce production fast_math -> KW_NSZ
-- On KW_OPAQUE reduce production fast_math -> KW_NSZ
-- On KW_NSZ reduce production fast_math -> KW_NSZ
-- On KW_NNAN reduce production fast_math -> KW_NSZ
-- On KW_NINF reduce production fast_math -> KW_NSZ
-- On KW_METADATA reduce production fast_math -> KW_NSZ
-- On KW_LABEL reduce production fast_math -> KW_NSZ
-- On KW_HALF reduce production fast_math -> KW_NSZ
-- On KW_FP128 reduce production fast_math -> KW_NSZ
-- On KW_FLOAT reduce production fast_math -> KW_NSZ
-- On KW_FAST reduce production fast_math -> KW_NSZ
-- On KW_DOUBLE reduce production fast_math -> KW_NSZ
-- On KW_ARCP reduce production fast_math -> KW_NSZ
-- On I reduce production fast_math -> KW_NSZ

State 466:
## Known stack suffix:
## KW_NNAN
## LR(1) items:
fast_math -> KW_NNAN . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NSZ KW_NNAN KW_NINF KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_FAST KW_DOUBLE KW_ARCP I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fast_math -> KW_NNAN
-- On LT reduce production fast_math -> KW_NNAN
-- On LSQUARE reduce production fast_math -> KW_NNAN
-- On LCURLY reduce production fast_math -> KW_NNAN
-- On KW_X86_MMX reduce production fast_math -> KW_NNAN
-- On KW_X86_FP80 reduce production fast_math -> KW_NNAN
-- On KW_VOID reduce production fast_math -> KW_NNAN
-- On KW_PPC_FP128 reduce production fast_math -> KW_NNAN
-- On KW_OPAQUE reduce production fast_math -> KW_NNAN
-- On KW_NSZ reduce production fast_math -> KW_NNAN
-- On KW_NNAN reduce production fast_math -> KW_NNAN
-- On KW_NINF reduce production fast_math -> KW_NNAN
-- On KW_METADATA reduce production fast_math -> KW_NNAN
-- On KW_LABEL reduce production fast_math -> KW_NNAN
-- On KW_HALF reduce production fast_math -> KW_NNAN
-- On KW_FP128 reduce production fast_math -> KW_NNAN
-- On KW_FLOAT reduce production fast_math -> KW_NNAN
-- On KW_FAST reduce production fast_math -> KW_NNAN
-- On KW_DOUBLE reduce production fast_math -> KW_NNAN
-- On KW_ARCP reduce production fast_math -> KW_NNAN
-- On I reduce production fast_math -> KW_NNAN

State 467:
## Known stack suffix:
## KW_NINF
## LR(1) items:
fast_math -> KW_NINF . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NSZ KW_NNAN KW_NINF KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_FAST KW_DOUBLE KW_ARCP I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fast_math -> KW_NINF
-- On LT reduce production fast_math -> KW_NINF
-- On LSQUARE reduce production fast_math -> KW_NINF
-- On LCURLY reduce production fast_math -> KW_NINF
-- On KW_X86_MMX reduce production fast_math -> KW_NINF
-- On KW_X86_FP80 reduce production fast_math -> KW_NINF
-- On KW_VOID reduce production fast_math -> KW_NINF
-- On KW_PPC_FP128 reduce production fast_math -> KW_NINF
-- On KW_OPAQUE reduce production fast_math -> KW_NINF
-- On KW_NSZ reduce production fast_math -> KW_NINF
-- On KW_NNAN reduce production fast_math -> KW_NINF
-- On KW_NINF reduce production fast_math -> KW_NINF
-- On KW_METADATA reduce production fast_math -> KW_NINF
-- On KW_LABEL reduce production fast_math -> KW_NINF
-- On KW_HALF reduce production fast_math -> KW_NINF
-- On KW_FP128 reduce production fast_math -> KW_NINF
-- On KW_FLOAT reduce production fast_math -> KW_NINF
-- On KW_FAST reduce production fast_math -> KW_NINF
-- On KW_DOUBLE reduce production fast_math -> KW_NINF
-- On KW_ARCP reduce production fast_math -> KW_NINF
-- On I reduce production fast_math -> KW_NINF

State 468:
## Known stack suffix:
## KW_FAST
## LR(1) items:
fast_math -> KW_FAST . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NSZ KW_NNAN KW_NINF KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_FAST KW_DOUBLE KW_ARCP I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fast_math -> KW_FAST
-- On LT reduce production fast_math -> KW_FAST
-- On LSQUARE reduce production fast_math -> KW_FAST
-- On LCURLY reduce production fast_math -> KW_FAST
-- On KW_X86_MMX reduce production fast_math -> KW_FAST
-- On KW_X86_FP80 reduce production fast_math -> KW_FAST
-- On KW_VOID reduce production fast_math -> KW_FAST
-- On KW_PPC_FP128 reduce production fast_math -> KW_FAST
-- On KW_OPAQUE reduce production fast_math -> KW_FAST
-- On KW_NSZ reduce production fast_math -> KW_FAST
-- On KW_NNAN reduce production fast_math -> KW_FAST
-- On KW_NINF reduce production fast_math -> KW_FAST
-- On KW_METADATA reduce production fast_math -> KW_FAST
-- On KW_LABEL reduce production fast_math -> KW_FAST
-- On KW_HALF reduce production fast_math -> KW_FAST
-- On KW_FP128 reduce production fast_math -> KW_FAST
-- On KW_FLOAT reduce production fast_math -> KW_FAST
-- On KW_FAST reduce production fast_math -> KW_FAST
-- On KW_DOUBLE reduce production fast_math -> KW_FAST
-- On KW_ARCP reduce production fast_math -> KW_FAST
-- On I reduce production fast_math -> KW_FAST

State 469:
## Known stack suffix:
## KW_ARCP
## LR(1) items:
fast_math -> KW_ARCP . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_NSZ KW_NNAN KW_NINF KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_FAST KW_DOUBLE KW_ARCP I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production fast_math -> KW_ARCP
-- On LT reduce production fast_math -> KW_ARCP
-- On LSQUARE reduce production fast_math -> KW_ARCP
-- On LCURLY reduce production fast_math -> KW_ARCP
-- On KW_X86_MMX reduce production fast_math -> KW_ARCP
-- On KW_X86_FP80 reduce production fast_math -> KW_ARCP
-- On KW_VOID reduce production fast_math -> KW_ARCP
-- On KW_PPC_FP128 reduce production fast_math -> KW_ARCP
-- On KW_OPAQUE reduce production fast_math -> KW_ARCP
-- On KW_NSZ reduce production fast_math -> KW_ARCP
-- On KW_NNAN reduce production fast_math -> KW_ARCP
-- On KW_NINF reduce production fast_math -> KW_ARCP
-- On KW_METADATA reduce production fast_math -> KW_ARCP
-- On KW_LABEL reduce production fast_math -> KW_ARCP
-- On KW_HALF reduce production fast_math -> KW_ARCP
-- On KW_FP128 reduce production fast_math -> KW_ARCP
-- On KW_FLOAT reduce production fast_math -> KW_ARCP
-- On KW_FAST reduce production fast_math -> KW_ARCP
-- On KW_DOUBLE reduce production fast_math -> KW_ARCP
-- On KW_ARCP reduce production fast_math -> KW_ARCP
-- On I reduce production fast_math -> KW_ARCP

State 470:
## Known stack suffix:
## fbinop list(fast_math)
## LR(1) items:
instr -> fbinop list(fast_math) . typ value COMMA value [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 471
## Reductions:

State 471:
## Known stack suffix:
## fbinop list(fast_math) typ
## LR(1) items:
instr -> fbinop list(fast_math) typ . value COMMA value [ EOL ]
typ -> typ . STAR [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
## Transitions:
-- On STAR shift to state 30
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LPAREN shift to state 31
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 472
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 472:
## Known stack suffix:
## fbinop list(fast_math) typ value
## LR(1) items:
instr -> fbinop list(fast_math) typ value . COMMA value [ EOL ]
## Transitions:
-- On COMMA shift to state 473
## Reductions:

State 473:
## Known stack suffix:
## fbinop list(fast_math) typ value COMMA
## LR(1) items:
instr -> fbinop list(fast_math) typ value COMMA . value [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 474
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 474:
## Known stack suffix:
## fbinop list(fast_math) typ value COMMA value
## LR(1) items:
instr -> fbinop list(fast_math) typ value COMMA value . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production instr -> fbinop list(fast_math) typ value COMMA value

State 475:
## Known stack suffix:
## fast_math
## LR(1) items:
list(fast_math) -> fast_math . list(fast_math) [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
-- On KW_NSZ shift to state 465
-- On KW_NNAN shift to state 466
-- On KW_NINF shift to state 467
-- On KW_FAST shift to state 468
-- On KW_ARCP shift to state 469
-- On list(fast_math) shift to state 476
-- On fast_math shift to state 475
## Reductions:
-- On LTLCURLY reduce production list(fast_math) ->
-- On LT reduce production list(fast_math) ->
-- On LSQUARE reduce production list(fast_math) ->
-- On LCURLY reduce production list(fast_math) ->
-- On KW_X86_MMX reduce production list(fast_math) ->
-- On KW_X86_FP80 reduce production list(fast_math) ->
-- On KW_VOID reduce production list(fast_math) ->
-- On KW_PPC_FP128 reduce production list(fast_math) ->
-- On KW_OPAQUE reduce production list(fast_math) ->
-- On KW_METADATA reduce production list(fast_math) ->
-- On KW_LABEL reduce production list(fast_math) ->
-- On KW_HALF reduce production list(fast_math) ->
-- On KW_FP128 reduce production list(fast_math) ->
-- On KW_FLOAT reduce production list(fast_math) ->
-- On KW_DOUBLE reduce production list(fast_math) ->
-- On I reduce production list(fast_math) ->

State 476:
## Known stack suffix:
## fast_math list(fast_math)
## LR(1) items:
list(fast_math) -> fast_math list(fast_math) . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production list(fast_math) -> fast_math list(fast_math)
-- On LT reduce production list(fast_math) -> fast_math list(fast_math)
-- On LSQUARE reduce production list(fast_math) -> fast_math list(fast_math)
-- On LCURLY reduce production list(fast_math) -> fast_math list(fast_math)
-- On KW_X86_MMX reduce production list(fast_math) -> fast_math list(fast_math)
-- On KW_X86_FP80 reduce production list(fast_math) -> fast_math list(fast_math)
-- On KW_VOID reduce production list(fast_math) -> fast_math list(fast_math)
-- On KW_PPC_FP128 reduce production list(fast_math) -> fast_math list(fast_math)
-- On KW_OPAQUE reduce production list(fast_math) -> fast_math list(fast_math)
-- On KW_METADATA reduce production list(fast_math) -> fast_math list(fast_math)
-- On KW_LABEL reduce production list(fast_math) -> fast_math list(fast_math)
-- On KW_HALF reduce production list(fast_math) -> fast_math list(fast_math)
-- On KW_FP128 reduce production list(fast_math) -> fast_math list(fast_math)
-- On KW_FLOAT reduce production list(fast_math) -> fast_math list(fast_math)
-- On KW_DOUBLE reduce production list(fast_math) -> fast_math list(fast_math)
-- On I reduce production list(fast_math) -> fast_math list(fast_math)

State 477:
## Known stack suffix:
## conversion
## LR(1) items:
instr -> conversion . typ value KW_TO typ [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 478
## Reductions:

State 478:
## Known stack suffix:
## conversion typ
## LR(1) items:
instr -> conversion typ . value KW_TO typ [ EOL ]
typ -> typ . STAR [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LTLCURLY LT LSQUARE LPAREN LOCAL LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER GLOBAL FLOAT ]
## Transitions:
-- On STAR shift to state 30
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LPAREN shift to state 31
-- On LOCAL shift to state 151
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On GLOBAL shift to state 152
-- On FLOAT shift to state 73
-- On value shift to state 479
-- On ident shift to state 226
-- On const shift to state 227
## Reductions:

State 479:
## Known stack suffix:
## conversion typ value
## LR(1) items:
instr -> conversion typ value . KW_TO typ [ EOL ]
## Transitions:
-- On KW_TO shift to state 480
## Reductions:

State 480:
## Known stack suffix:
## conversion typ value KW_TO
## LR(1) items:
instr -> conversion typ value KW_TO . typ [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 481
## Reductions:

State 481:
## Known stack suffix:
## conversion typ value KW_TO typ
## LR(1) items:
instr -> conversion typ value KW_TO typ . [ EOL ]
typ -> typ . STAR [ STAR LPAREN EOL ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LPAREN EOL ]
## Transitions:
-- On STAR shift to state 30
-- On LPAREN shift to state 31
## Reductions:
-- On EOL reduce production instr -> conversion typ value KW_TO typ

State 482:
## Known stack suffix:
## option(terminated(LABEL,nonempty_list(EOL))) nonempty_list(terminated(instr,nonempty_list(EOL))) list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL)))))
## LR(1) items:
df_blocks -> option(terminated(LABEL,nonempty_list(EOL))) nonempty_list(terminated(instr,nonempty_list(EOL))) list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL))))) . [ RCURLY ]
## Transitions:
## Reductions:
-- On RCURLY reduce production df_blocks -> option(terminated(LABEL,nonempty_list(EOL))) nonempty_list(terminated(instr,nonempty_list(EOL))) list(pair(terminated(LABEL,nonempty_list(EOL)),nonempty_list(terminated(instr,nonempty_list(EOL)))))

State 483:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks . RCURLY [ EOL ]
## Transitions:
-- On RCURLY shift to state 484
## Reductions:

State 484:
## Known stack suffix:
## KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks RCURLY
## LR(1) items:
definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks RCURLY . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production definition -> KW_DEFINE list(df_pre_attr) list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,df_arg)) RPAREN list(df_post_attr) list(EOL) LCURLY list(EOL) df_blocks RCURLY

State 485:
## Known stack suffix:
## fn_attr
## LR(1) items:
nonempty_list(fn_attr) -> fn_attr . [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
nonempty_list(fn_attr) -> fn_attr . nonempty_list(fn_attr) [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
-- On STRING shift to state 157
-- On KW_UWTABLE shift to state 160
-- On KW_SSPSTRONG shift to state 162
-- On KW_SSPREQ shift to state 163
-- On KW_SSP shift to state 164
-- On KW_SANITIZE_THREAD shift to state 167
-- On KW_SANITIZE_MEMORY shift to state 168
-- On KW_SANITIZE_ADDRESS shift to state 169
-- On KW_RETURNS_TWICE shift to state 170
-- On KW_READONLY shift to state 171
-- On KW_READNONE shift to state 172
-- On KW_OPTSIZE shift to state 173
-- On KW_OPTNONE shift to state 174
-- On KW_NOUNWIND shift to state 175
-- On KW_NORETURN shift to state 176
-- On KW_NOREDZONE shift to state 177
-- On KW_NONLAZYBIND shift to state 178
-- On KW_NOINLINE shift to state 179
-- On KW_NOIMPLICITFLOAT shift to state 180
-- On KW_NODUPLICATE shift to state 181
-- On KW_NOBUILTIN shift to state 182
-- On KW_NAKED shift to state 183
-- On KW_MINSIZE shift to state 184
-- On KW_JUMPTABLE shift to state 185
-- On KW_INLINEHINT shift to state 186
-- On KW_COLD shift to state 189
-- On KW_BUILTIN shift to state 190
-- On KW_ALWAYSINLINE shift to state 191
-- On KW_ALIGNSTACK shift to state 192
-- On ATTR_GRP_ID shift to state 202
-- On nonempty_list(fn_attr) shift to state 486
-- On fn_attr shift to state 485
## Reductions:
-- On LCURLY reduce production nonempty_list(fn_attr) -> fn_attr
-- On KW_UNNAMED_ADDR reduce production nonempty_list(fn_attr) -> fn_attr
-- On KW_SECTION reduce production nonempty_list(fn_attr) -> fn_attr
-- On KW_GC reduce production nonempty_list(fn_attr) -> fn_attr
-- On KW_ALIGN reduce production nonempty_list(fn_attr) -> fn_attr
-- On KW_ADDRSPACE reduce production nonempty_list(fn_attr) -> fn_attr
-- On EOL reduce production nonempty_list(fn_attr) -> fn_attr

State 486:
## Known stack suffix:
## fn_attr nonempty_list(fn_attr)
## LR(1) items:
nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr) . [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On LCURLY reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_UWTABLE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_UNNAMED_ADDR reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_SSPSTRONG reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_SSPREQ reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_SSP reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_SECTION reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_SANITIZE_THREAD reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_SANITIZE_MEMORY reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_SANITIZE_ADDRESS reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_RETURNS_TWICE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_READONLY reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_READNONE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_OPTSIZE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_OPTNONE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_NOUNWIND reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_NORETURN reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_NOREDZONE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_NONLAZYBIND reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_NOINLINE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_NOIMPLICITFLOAT reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_NODUPLICATE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_NOBUILTIN reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_NAKED reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_MINSIZE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_JUMPTABLE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_INLINEHINT reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_GC reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_COLD reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_BUILTIN reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_ALWAYSINLINE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_ALIGNSTACK reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_ALIGN reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On KW_ADDRSPACE reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On EOL reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)
-- On ATTR_GRP_ID reduce production nonempty_list(fn_attr) -> fn_attr nonempty_list(fn_attr)

State 487:
## Known stack suffix:
## df_post_attr
## LR(1) items:
list(df_post_attr) -> df_post_attr . list(df_post_attr) [ LCURLY EOL ]
## Transitions:
-- On STRING shift to state 157
-- On KW_UWTABLE shift to state 160
-- On KW_UNNAMED_ADDR shift to state 161
-- On KW_SSPSTRONG shift to state 162
-- On KW_SSPREQ shift to state 163
-- On KW_SSP shift to state 164
-- On KW_SECTION shift to state 165
-- On KW_SANITIZE_THREAD shift to state 167
-- On KW_SANITIZE_MEMORY shift to state 168
-- On KW_SANITIZE_ADDRESS shift to state 169
-- On KW_RETURNS_TWICE shift to state 170
-- On KW_READONLY shift to state 171
-- On KW_READNONE shift to state 172
-- On KW_OPTSIZE shift to state 173
-- On KW_OPTNONE shift to state 174
-- On KW_NOUNWIND shift to state 175
-- On KW_NORETURN shift to state 176
-- On KW_NOREDZONE shift to state 177
-- On KW_NONLAZYBIND shift to state 178
-- On KW_NOINLINE shift to state 179
-- On KW_NOIMPLICITFLOAT shift to state 180
-- On KW_NODUPLICATE shift to state 181
-- On KW_NOBUILTIN shift to state 182
-- On KW_NAKED shift to state 183
-- On KW_MINSIZE shift to state 184
-- On KW_JUMPTABLE shift to state 185
-- On KW_INLINEHINT shift to state 186
-- On KW_GC shift to state 187
-- On KW_COLD shift to state 189
-- On KW_BUILTIN shift to state 190
-- On KW_ALWAYSINLINE shift to state 191
-- On KW_ALIGNSTACK shift to state 192
-- On KW_ALIGN shift to state 196
-- On KW_ADDRSPACE shift to state 198
-- On ATTR_GRP_ID shift to state 202
-- On section shift to state 203
-- On nonempty_list(fn_attr) shift to state 204
-- On list(df_post_attr) shift to state 488
-- On fn_attr shift to state 485
-- On df_post_attr shift to state 487
-- On align shift to state 489
## Reductions:
-- On LCURLY reduce production list(df_post_attr) ->
-- On EOL reduce production list(df_post_attr) ->

State 488:
## Known stack suffix:
## df_post_attr list(df_post_attr)
## LR(1) items:
list(df_post_attr) -> df_post_attr list(df_post_attr) . [ LCURLY EOL ]
## Transitions:
## Reductions:
-- On LCURLY reduce production list(df_post_attr) -> df_post_attr list(df_post_attr)
-- On EOL reduce production list(df_post_attr) -> df_post_attr list(df_post_attr)

State 489:
## Known stack suffix:
## align
## LR(1) items:
df_post_attr -> align . [ STRING LCURLY KW_UWTABLE KW_UNNAMED_ADDR KW_SSPSTRONG KW_SSPREQ KW_SSP KW_SECTION KW_SANITIZE_THREAD KW_SANITIZE_MEMORY KW_SANITIZE_ADDRESS KW_RETURNS_TWICE KW_READONLY KW_READNONE KW_OPTSIZE KW_OPTNONE KW_NOUNWIND KW_NORETURN KW_NOREDZONE KW_NONLAZYBIND KW_NOINLINE KW_NOIMPLICITFLOAT KW_NODUPLICATE KW_NOBUILTIN KW_NAKED KW_MINSIZE KW_JUMPTABLE KW_INLINEHINT KW_GC KW_COLD KW_BUILTIN KW_ALWAYSINLINE KW_ALIGNSTACK KW_ALIGN KW_ADDRSPACE EOL ATTR_GRP_ID ]
## Transitions:
## Reductions:
-- On STRING reduce production df_post_attr -> align
-- On LCURLY reduce production df_post_attr -> align
-- On KW_UWTABLE reduce production df_post_attr -> align
-- On KW_UNNAMED_ADDR reduce production df_post_attr -> align
-- On KW_SSPSTRONG reduce production df_post_attr -> align
-- On KW_SSPREQ reduce production df_post_attr -> align
-- On KW_SSP reduce production df_post_attr -> align
-- On KW_SECTION reduce production df_post_attr -> align
-- On KW_SANITIZE_THREAD reduce production df_post_attr -> align
-- On KW_SANITIZE_MEMORY reduce production df_post_attr -> align
-- On KW_SANITIZE_ADDRESS reduce production df_post_attr -> align
-- On KW_RETURNS_TWICE reduce production df_post_attr -> align
-- On KW_READONLY reduce production df_post_attr -> align
-- On KW_READNONE reduce production df_post_attr -> align
-- On KW_OPTSIZE reduce production df_post_attr -> align
-- On KW_OPTNONE reduce production df_post_attr -> align
-- On KW_NOUNWIND reduce production df_post_attr -> align
-- On KW_NORETURN reduce production df_post_attr -> align
-- On KW_NOREDZONE reduce production df_post_attr -> align
-- On KW_NONLAZYBIND reduce production df_post_attr -> align
-- On KW_NOINLINE reduce production df_post_attr -> align
-- On KW_NOIMPLICITFLOAT reduce production df_post_attr -> align
-- On KW_NODUPLICATE reduce production df_post_attr -> align
-- On KW_NOBUILTIN reduce production df_post_attr -> align
-- On KW_NAKED reduce production df_post_attr -> align
-- On KW_MINSIZE reduce production df_post_attr -> align
-- On KW_JUMPTABLE reduce production df_post_attr -> align
-- On KW_INLINEHINT reduce production df_post_attr -> align
-- On KW_GC reduce production df_post_attr -> align
-- On KW_COLD reduce production df_post_attr -> align
-- On KW_BUILTIN reduce production df_post_attr -> align
-- On KW_ALWAYSINLINE reduce production df_post_attr -> align
-- On KW_ALIGNSTACK reduce production df_post_attr -> align
-- On KW_ALIGN reduce production df_post_attr -> align
-- On KW_ADDRSPACE reduce production df_post_attr -> align
-- On EOL reduce production df_post_attr -> align
-- On ATTR_GRP_ID reduce production df_post_attr -> align

State 490:
## Known stack suffix:
## df_arg
## LR(1) items:
separated_nonempty_list(COMMA,df_arg) -> df_arg . [ RPAREN ]
separated_nonempty_list(COMMA,df_arg) -> df_arg . COMMA separated_nonempty_list(COMMA,df_arg) [ RPAREN ]
## Transitions:
-- On COMMA shift to state 491
## Reductions:
-- On RPAREN reduce production separated_nonempty_list(COMMA,df_arg) -> df_arg

State 491:
## Known stack suffix:
## df_arg COMMA
## LR(1) items:
separated_nonempty_list(COMMA,df_arg) -> df_arg COMMA . separated_nonempty_list(COMMA,df_arg) [ RPAREN ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 149
-- On separated_nonempty_list(COMMA,df_arg) shift to state 492
-- On df_arg shift to state 490
## Reductions:

State 492:
## Known stack suffix:
## df_arg COMMA separated_nonempty_list(COMMA,df_arg)
## LR(1) items:
separated_nonempty_list(COMMA,df_arg) -> df_arg COMMA separated_nonempty_list(COMMA,df_arg) . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN reduce production separated_nonempty_list(COMMA,df_arg) -> df_arg COMMA separated_nonempty_list(COMMA,df_arg)

State 493:
## Known stack suffix:
## linkage
## LR(1) items:
df_pre_attr -> linkage . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production df_pre_attr -> linkage
-- On LT reduce production df_pre_attr -> linkage
-- On LSQUARE reduce production df_pre_attr -> linkage
-- On LCURLY reduce production df_pre_attr -> linkage
-- On KW_ZEROEXT reduce production df_pre_attr -> linkage
-- On KW_X86_MMX reduce production df_pre_attr -> linkage
-- On KW_X86_FP80 reduce production df_pre_attr -> linkage
-- On KW_WEAK_ODR reduce production df_pre_attr -> linkage
-- On KW_WEAK reduce production df_pre_attr -> linkage
-- On KW_VOID reduce production df_pre_attr -> linkage
-- On KW_SRET reduce production df_pre_attr -> linkage
-- On KW_SIGNEXT reduce production df_pre_attr -> linkage
-- On KW_RETURNED reduce production df_pre_attr -> linkage
-- On KW_PROTECTED reduce production df_pre_attr -> linkage
-- On KW_PRIVATE reduce production df_pre_attr -> linkage
-- On KW_PPC_FP128 reduce production df_pre_attr -> linkage
-- On KW_OPAQUE reduce production df_pre_attr -> linkage
-- On KW_NONNULL reduce production df_pre_attr -> linkage
-- On KW_NOCAPTURE reduce production df_pre_attr -> linkage
-- On KW_NOALIAS reduce production df_pre_attr -> linkage
-- On KW_NEST reduce production df_pre_attr -> linkage
-- On KW_METADATA reduce production df_pre_attr -> linkage
-- On KW_LINKONCE_ODR reduce production df_pre_attr -> linkage
-- On KW_LINKONCE reduce production df_pre_attr -> linkage
-- On KW_LABEL reduce production df_pre_attr -> linkage
-- On KW_INTERNAL reduce production df_pre_attr -> linkage
-- On KW_INREG reduce production df_pre_attr -> linkage
-- On KW_INALLOCA reduce production df_pre_attr -> linkage
-- On KW_HIDDEN reduce production df_pre_attr -> linkage
-- On KW_HALF reduce production df_pre_attr -> linkage
-- On KW_FP128 reduce production df_pre_attr -> linkage
-- On KW_FLOAT reduce production df_pre_attr -> linkage
-- On KW_FASTCC reduce production df_pre_attr -> linkage
-- On KW_EXTERN_WEAK reduce production df_pre_attr -> linkage
-- On KW_EXTERNAL reduce production df_pre_attr -> linkage
-- On KW_DOUBLE reduce production df_pre_attr -> linkage
-- On KW_DLLIMPORT reduce production df_pre_attr -> linkage
-- On KW_DLLEXPORT reduce production df_pre_attr -> linkage
-- On KW_DEREFERENCEABLE reduce production df_pre_attr -> linkage
-- On KW_DEFAULT reduce production df_pre_attr -> linkage
-- On KW_COMMON reduce production df_pre_attr -> linkage
-- On KW_COLDCC reduce production df_pre_attr -> linkage
-- On KW_CCC reduce production df_pre_attr -> linkage
-- On KW_CC reduce production df_pre_attr -> linkage
-- On KW_BYVAL reduce production df_pre_attr -> linkage
-- On KW_AVAILABLE_EXTERNALLY reduce production df_pre_attr -> linkage
-- On KW_APPENDING reduce production df_pre_attr -> linkage
-- On KW_ALIGN reduce production df_pre_attr -> linkage
-- On I reduce production df_pre_attr -> linkage

State 494:
## Known stack suffix:
## dll_storage
## LR(1) items:
df_pre_attr -> dll_storage . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production df_pre_attr -> dll_storage
-- On LT reduce production df_pre_attr -> dll_storage
-- On LSQUARE reduce production df_pre_attr -> dll_storage
-- On LCURLY reduce production df_pre_attr -> dll_storage
-- On KW_ZEROEXT reduce production df_pre_attr -> dll_storage
-- On KW_X86_MMX reduce production df_pre_attr -> dll_storage
-- On KW_X86_FP80 reduce production df_pre_attr -> dll_storage
-- On KW_WEAK_ODR reduce production df_pre_attr -> dll_storage
-- On KW_WEAK reduce production df_pre_attr -> dll_storage
-- On KW_VOID reduce production df_pre_attr -> dll_storage
-- On KW_SRET reduce production df_pre_attr -> dll_storage
-- On KW_SIGNEXT reduce production df_pre_attr -> dll_storage
-- On KW_RETURNED reduce production df_pre_attr -> dll_storage
-- On KW_PROTECTED reduce production df_pre_attr -> dll_storage
-- On KW_PRIVATE reduce production df_pre_attr -> dll_storage
-- On KW_PPC_FP128 reduce production df_pre_attr -> dll_storage
-- On KW_OPAQUE reduce production df_pre_attr -> dll_storage
-- On KW_NONNULL reduce production df_pre_attr -> dll_storage
-- On KW_NOCAPTURE reduce production df_pre_attr -> dll_storage
-- On KW_NOALIAS reduce production df_pre_attr -> dll_storage
-- On KW_NEST reduce production df_pre_attr -> dll_storage
-- On KW_METADATA reduce production df_pre_attr -> dll_storage
-- On KW_LINKONCE_ODR reduce production df_pre_attr -> dll_storage
-- On KW_LINKONCE reduce production df_pre_attr -> dll_storage
-- On KW_LABEL reduce production df_pre_attr -> dll_storage
-- On KW_INTERNAL reduce production df_pre_attr -> dll_storage
-- On KW_INREG reduce production df_pre_attr -> dll_storage
-- On KW_INALLOCA reduce production df_pre_attr -> dll_storage
-- On KW_HIDDEN reduce production df_pre_attr -> dll_storage
-- On KW_HALF reduce production df_pre_attr -> dll_storage
-- On KW_FP128 reduce production df_pre_attr -> dll_storage
-- On KW_FLOAT reduce production df_pre_attr -> dll_storage
-- On KW_FASTCC reduce production df_pre_attr -> dll_storage
-- On KW_EXTERN_WEAK reduce production df_pre_attr -> dll_storage
-- On KW_EXTERNAL reduce production df_pre_attr -> dll_storage
-- On KW_DOUBLE reduce production df_pre_attr -> dll_storage
-- On KW_DLLIMPORT reduce production df_pre_attr -> dll_storage
-- On KW_DLLEXPORT reduce production df_pre_attr -> dll_storage
-- On KW_DEREFERENCEABLE reduce production df_pre_attr -> dll_storage
-- On KW_DEFAULT reduce production df_pre_attr -> dll_storage
-- On KW_COMMON reduce production df_pre_attr -> dll_storage
-- On KW_COLDCC reduce production df_pre_attr -> dll_storage
-- On KW_CCC reduce production df_pre_attr -> dll_storage
-- On KW_CC reduce production df_pre_attr -> dll_storage
-- On KW_BYVAL reduce production df_pre_attr -> dll_storage
-- On KW_AVAILABLE_EXTERNALLY reduce production df_pre_attr -> dll_storage
-- On KW_APPENDING reduce production df_pre_attr -> dll_storage
-- On KW_ALIGN reduce production df_pre_attr -> dll_storage
-- On I reduce production df_pre_attr -> dll_storage

State 495:
## Known stack suffix:
## df_pre_attr
## LR(1) items:
list(df_pre_attr) -> df_pre_attr . list(df_pre_attr) [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I ]
## Transitions:
-- On KW_WEAK_ODR shift to state 103
-- On KW_WEAK shift to state 104
-- On KW_PROTECTED shift to state 105
-- On KW_PRIVATE shift to state 106
-- On KW_LINKONCE_ODR shift to state 107
-- On KW_LINKONCE shift to state 108
-- On KW_INTERNAL shift to state 109
-- On KW_HIDDEN shift to state 110
-- On KW_FASTCC shift to state 111
-- On KW_EXTERN_WEAK shift to state 112
-- On KW_EXTERNAL shift to state 113
-- On KW_DLLIMPORT shift to state 114
-- On KW_DLLEXPORT shift to state 115
-- On KW_DEFAULT shift to state 116
-- On KW_COMMON shift to state 117
-- On KW_COLDCC shift to state 118
-- On KW_CCC shift to state 119
-- On KW_CC shift to state 120
-- On KW_AVAILABLE_EXTERNALLY shift to state 122
-- On KW_APPENDING shift to state 123
-- On visibility shift to state 124
-- On list(df_pre_attr) shift to state 496
-- On linkage shift to state 493
-- On dll_storage shift to state 494
-- On df_pre_attr shift to state 495
-- On cconv shift to state 497
## Reductions:
-- On LTLCURLY reduce production list(df_pre_attr) ->
-- On LT reduce production list(df_pre_attr) ->
-- On LSQUARE reduce production list(df_pre_attr) ->
-- On LCURLY reduce production list(df_pre_attr) ->
-- On KW_ZEROEXT reduce production list(df_pre_attr) ->
-- On KW_X86_MMX reduce production list(df_pre_attr) ->
-- On KW_X86_FP80 reduce production list(df_pre_attr) ->
-- On KW_VOID reduce production list(df_pre_attr) ->
-- On KW_SRET reduce production list(df_pre_attr) ->
-- On KW_SIGNEXT reduce production list(df_pre_attr) ->
-- On KW_RETURNED reduce production list(df_pre_attr) ->
-- On KW_PPC_FP128 reduce production list(df_pre_attr) ->
-- On KW_OPAQUE reduce production list(df_pre_attr) ->
-- On KW_NONNULL reduce production list(df_pre_attr) ->
-- On KW_NOCAPTURE reduce production list(df_pre_attr) ->
-- On KW_NOALIAS reduce production list(df_pre_attr) ->
-- On KW_NEST reduce production list(df_pre_attr) ->
-- On KW_METADATA reduce production list(df_pre_attr) ->
-- On KW_LABEL reduce production list(df_pre_attr) ->
-- On KW_INREG reduce production list(df_pre_attr) ->
-- On KW_INALLOCA reduce production list(df_pre_attr) ->
-- On KW_HALF reduce production list(df_pre_attr) ->
-- On KW_FP128 reduce production list(df_pre_attr) ->
-- On KW_FLOAT reduce production list(df_pre_attr) ->
-- On KW_DOUBLE reduce production list(df_pre_attr) ->
-- On KW_DEREFERENCEABLE reduce production list(df_pre_attr) ->
-- On KW_BYVAL reduce production list(df_pre_attr) ->
-- On KW_ALIGN reduce production list(df_pre_attr) ->
-- On I reduce production list(df_pre_attr) ->

State 496:
## Known stack suffix:
## df_pre_attr list(df_pre_attr)
## LR(1) items:
list(df_pre_attr) -> df_pre_attr list(df_pre_attr) . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LABEL KW_INREG KW_INALLOCA KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On LT reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On LSQUARE reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On LCURLY reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_ZEROEXT reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_X86_MMX reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_X86_FP80 reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_VOID reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_SRET reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_SIGNEXT reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_RETURNED reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_PPC_FP128 reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_OPAQUE reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_NONNULL reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_NOCAPTURE reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_NOALIAS reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_NEST reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_METADATA reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_LABEL reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_INREG reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_INALLOCA reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_HALF reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_FP128 reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_FLOAT reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_DOUBLE reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_DEREFERENCEABLE reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_BYVAL reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On KW_ALIGN reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)
-- On I reduce production list(df_pre_attr) -> df_pre_attr list(df_pre_attr)

State 497:
## Known stack suffix:
## cconv
## LR(1) items:
df_pre_attr -> cconv . [ LTLCURLY LT LSQUARE LCURLY KW_ZEROEXT KW_X86_MMX KW_X86_FP80 KW_WEAK_ODR KW_WEAK KW_VOID KW_SRET KW_SIGNEXT KW_RETURNED KW_PROTECTED KW_PRIVATE KW_PPC_FP128 KW_OPAQUE KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_METADATA KW_LINKONCE_ODR KW_LINKONCE KW_LABEL KW_INTERNAL KW_INREG KW_INALLOCA KW_HIDDEN KW_HALF KW_FP128 KW_FLOAT KW_FASTCC KW_EXTERN_WEAK KW_EXTERNAL KW_DOUBLE KW_DLLIMPORT KW_DLLEXPORT KW_DEREFERENCEABLE KW_DEFAULT KW_COMMON KW_COLDCC KW_CCC KW_CC KW_BYVAL KW_AVAILABLE_EXTERNALLY KW_APPENDING KW_ALIGN I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production df_pre_attr -> cconv
-- On LT reduce production df_pre_attr -> cconv
-- On LSQUARE reduce production df_pre_attr -> cconv
-- On LCURLY reduce production df_pre_attr -> cconv
-- On KW_ZEROEXT reduce production df_pre_attr -> cconv
-- On KW_X86_MMX reduce production df_pre_attr -> cconv
-- On KW_X86_FP80 reduce production df_pre_attr -> cconv
-- On KW_WEAK_ODR reduce production df_pre_attr -> cconv
-- On KW_WEAK reduce production df_pre_attr -> cconv
-- On KW_VOID reduce production df_pre_attr -> cconv
-- On KW_SRET reduce production df_pre_attr -> cconv
-- On KW_SIGNEXT reduce production df_pre_attr -> cconv
-- On KW_RETURNED reduce production df_pre_attr -> cconv
-- On KW_PROTECTED reduce production df_pre_attr -> cconv
-- On KW_PRIVATE reduce production df_pre_attr -> cconv
-- On KW_PPC_FP128 reduce production df_pre_attr -> cconv
-- On KW_OPAQUE reduce production df_pre_attr -> cconv
-- On KW_NONNULL reduce production df_pre_attr -> cconv
-- On KW_NOCAPTURE reduce production df_pre_attr -> cconv
-- On KW_NOALIAS reduce production df_pre_attr -> cconv
-- On KW_NEST reduce production df_pre_attr -> cconv
-- On KW_METADATA reduce production df_pre_attr -> cconv
-- On KW_LINKONCE_ODR reduce production df_pre_attr -> cconv
-- On KW_LINKONCE reduce production df_pre_attr -> cconv
-- On KW_LABEL reduce production df_pre_attr -> cconv
-- On KW_INTERNAL reduce production df_pre_attr -> cconv
-- On KW_INREG reduce production df_pre_attr -> cconv
-- On KW_INALLOCA reduce production df_pre_attr -> cconv
-- On KW_HIDDEN reduce production df_pre_attr -> cconv
-- On KW_HALF reduce production df_pre_attr -> cconv
-- On KW_FP128 reduce production df_pre_attr -> cconv
-- On KW_FLOAT reduce production df_pre_attr -> cconv
-- On KW_FASTCC reduce production df_pre_attr -> cconv
-- On KW_EXTERN_WEAK reduce production df_pre_attr -> cconv
-- On KW_EXTERNAL reduce production df_pre_attr -> cconv
-- On KW_DOUBLE reduce production df_pre_attr -> cconv
-- On KW_DLLIMPORT reduce production df_pre_attr -> cconv
-- On KW_DLLEXPORT reduce production df_pre_attr -> cconv
-- On KW_DEREFERENCEABLE reduce production df_pre_attr -> cconv
-- On KW_DEFAULT reduce production df_pre_attr -> cconv
-- On KW_COMMON reduce production df_pre_attr -> cconv
-- On KW_COLDCC reduce production df_pre_attr -> cconv
-- On KW_CCC reduce production df_pre_attr -> cconv
-- On KW_CC reduce production df_pre_attr -> cconv
-- On KW_BYVAL reduce production df_pre_attr -> cconv
-- On KW_AVAILABLE_EXTERNALLY reduce production df_pre_attr -> cconv
-- On KW_APPENDING reduce production df_pre_attr -> cconv
-- On KW_ALIGN reduce production df_pre_attr -> cconv
-- On I reduce production df_pre_attr -> cconv

State 498:
## Known stack suffix:
## KW_DECLARE
## LR(1) items:
declaration -> KW_DECLARE . list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,dc_arg)) RPAREN list(global_attr) [ EOL ]
## Transitions:
-- On KW_ZEROEXT shift to state 126
-- On KW_SRET shift to state 127
-- On KW_SIGNEXT shift to state 128
-- On KW_RETURNED shift to state 129
-- On KW_NONNULL shift to state 130
-- On KW_NOCAPTURE shift to state 131
-- On KW_NOALIAS shift to state 132
-- On KW_NEST shift to state 133
-- On KW_INREG shift to state 134
-- On KW_INALLOCA shift to state 135
-- On KW_DEREFERENCEABLE shift to state 136
-- On KW_BYVAL shift to state 140
-- On KW_ALIGN shift to state 141
-- On param_attr shift to state 143
-- On list(param_attr) shift to state 499
## Reductions:
-- On LTLCURLY reduce production list(param_attr) ->
-- On LT reduce production list(param_attr) ->
-- On LSQUARE reduce production list(param_attr) ->
-- On LCURLY reduce production list(param_attr) ->
-- On KW_X86_MMX reduce production list(param_attr) ->
-- On KW_X86_FP80 reduce production list(param_attr) ->
-- On KW_VOID reduce production list(param_attr) ->
-- On KW_PPC_FP128 reduce production list(param_attr) ->
-- On KW_OPAQUE reduce production list(param_attr) ->
-- On KW_METADATA reduce production list(param_attr) ->
-- On KW_LABEL reduce production list(param_attr) ->
-- On KW_HALF reduce production list(param_attr) ->
-- On KW_FP128 reduce production list(param_attr) ->
-- On KW_FLOAT reduce production list(param_attr) ->
-- On KW_DOUBLE reduce production list(param_attr) ->
-- On I reduce production list(param_attr) ->

State 499:
## Known stack suffix:
## KW_DECLARE list(param_attr)
## LR(1) items:
declaration -> KW_DECLARE list(param_attr) . typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,dc_arg)) RPAREN list(global_attr) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 500
## Reductions:

State 500:
## Known stack suffix:
## KW_DECLARE list(param_attr) typ
## LR(1) items:
declaration -> KW_DECLARE list(param_attr) typ . GLOBAL LPAREN loption(separated_nonempty_list(COMMA,dc_arg)) RPAREN list(global_attr) [ EOL ]
typ -> typ . STAR [ STAR LPAREN GLOBAL ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LPAREN GLOBAL ]
## Transitions:
-- On STAR shift to state 30
-- On LPAREN shift to state 31
-- On GLOBAL shift to state 501
## Reductions:

State 501:
## Known stack suffix:
## KW_DECLARE list(param_attr) typ GLOBAL
## LR(1) items:
declaration -> KW_DECLARE list(param_attr) typ GLOBAL . LPAREN loption(separated_nonempty_list(COMMA,dc_arg)) RPAREN list(global_attr) [ EOL ]
## Transitions:
-- On LPAREN shift to state 502
## Reductions:

State 502:
## Known stack suffix:
## KW_DECLARE list(param_attr) typ GLOBAL LPAREN
## LR(1) items:
declaration -> KW_DECLARE list(param_attr) typ GLOBAL LPAREN . loption(separated_nonempty_list(COMMA,dc_arg)) RPAREN list(global_attr) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 503
-- On separated_nonempty_list(COMMA,dc_arg) shift to state 505
-- On loption(separated_nonempty_list(COMMA,dc_arg)) shift to state 506
-- On dc_arg shift to state 523
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,dc_arg)) ->

State 503:
## Known stack suffix:
## typ
## LR(1) items:
dc_arg -> typ . list(param_attr) [ RPAREN COMMA ]
typ -> typ . STAR [ STAR RPAREN LPAREN KW_ZEROEXT KW_SRET KW_SIGNEXT KW_RETURNED KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN COMMA ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR RPAREN LPAREN KW_ZEROEXT KW_SRET KW_SIGNEXT KW_RETURNED KW_NONNULL KW_NOCAPTURE KW_NOALIAS KW_NEST KW_INREG KW_INALLOCA KW_DEREFERENCEABLE KW_BYVAL KW_ALIGN COMMA ]
## Transitions:
-- On STAR shift to state 30
-- On LPAREN shift to state 31
-- On KW_ZEROEXT shift to state 126
-- On KW_SRET shift to state 127
-- On KW_SIGNEXT shift to state 128
-- On KW_RETURNED shift to state 129
-- On KW_NONNULL shift to state 130
-- On KW_NOCAPTURE shift to state 131
-- On KW_NOALIAS shift to state 132
-- On KW_NEST shift to state 133
-- On KW_INREG shift to state 134
-- On KW_INALLOCA shift to state 135
-- On KW_DEREFERENCEABLE shift to state 136
-- On KW_BYVAL shift to state 140
-- On KW_ALIGN shift to state 141
-- On param_attr shift to state 143
-- On list(param_attr) shift to state 504
## Reductions:
-- On RPAREN reduce production list(param_attr) ->
-- On COMMA reduce production list(param_attr) ->

State 504:
## Known stack suffix:
## typ list(param_attr)
## LR(1) items:
dc_arg -> typ list(param_attr) . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN reduce production dc_arg -> typ list(param_attr)
-- On COMMA reduce production dc_arg -> typ list(param_attr)

State 505:
## Known stack suffix:
## separated_nonempty_list(COMMA,dc_arg)
## LR(1) items:
loption(separated_nonempty_list(COMMA,dc_arg)) -> separated_nonempty_list(COMMA,dc_arg) . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,dc_arg)) -> separated_nonempty_list(COMMA,dc_arg)

State 506:
## Known stack suffix:
## KW_DECLARE list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,dc_arg))
## LR(1) items:
declaration -> KW_DECLARE list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,dc_arg)) . RPAREN list(global_attr) [ EOL ]
## Transitions:
-- On RPAREN shift to state 507
## Reductions:

State 507:
## Known stack suffix:
## KW_DECLARE list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,dc_arg)) RPAREN
## LR(1) items:
declaration -> KW_DECLARE list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,dc_arg)) RPAREN . list(global_attr) [ EOL ]
## Transitions:
-- On KW_WEAK_ODR shift to state 103
-- On KW_WEAK shift to state 104
-- On KW_UNNAMED_ADDR shift to state 508
-- On KW_THREAD_LOCAL shift to state 509
-- On KW_PROTECTED shift to state 105
-- On KW_PRIVATE shift to state 106
-- On KW_LINKONCE_ODR shift to state 107
-- On KW_LINKONCE shift to state 108
-- On KW_INTERNAL shift to state 109
-- On KW_HIDDEN shift to state 110
-- On KW_EXTERN_WEAK shift to state 112
-- On KW_EXTERNALLY_INITIALIZED shift to state 516
-- On KW_EXTERNAL shift to state 113
-- On KW_DLLIMPORT shift to state 114
-- On KW_DLLEXPORT shift to state 115
-- On KW_DEFAULT shift to state 116
-- On KW_COMMON shift to state 117
-- On KW_AVAILABLE_EXTERNALLY shift to state 122
-- On KW_APPENDING shift to state 123
-- On visibility shift to state 517
-- On list(global_attr) shift to state 518
-- On linkage shift to state 519
-- On global_attr shift to state 520
-- On dll_storage shift to state 522
## Reductions:
-- On EOL reduce production list(global_attr) ->

State 508:
## Known stack suffix:
## KW_UNNAMED_ADDR
## LR(1) items:
global_attr -> KW_UNNAMED_ADDR . [ KW_WEAK_ODR KW_WEAK KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_PROTECTED KW_PRIVATE KW_LINKONCE_ODR KW_LINKONCE KW_INTERNAL KW_HIDDEN KW_GLOBAL KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DLLIMPORT KW_DLLEXPORT KW_DEFAULT KW_CONSTANT KW_COMMON KW_AVAILABLE_EXTERNALLY KW_APPENDING EOL COMMA ]
## Transitions:
## Reductions:
-- On KW_WEAK_ODR reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_WEAK reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_UNNAMED_ADDR reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_THREAD_LOCAL reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_PROTECTED reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_PRIVATE reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_LINKONCE_ODR reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_LINKONCE reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_INTERNAL reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_HIDDEN reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_GLOBAL reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_EXTERN_WEAK reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_EXTERNALLY_INITIALIZED reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_EXTERNAL reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_DLLIMPORT reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_DLLEXPORT reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_DEFAULT reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_CONSTANT reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_COMMON reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_AVAILABLE_EXTERNALLY reduce production global_attr -> KW_UNNAMED_ADDR
-- On KW_APPENDING reduce production global_attr -> KW_UNNAMED_ADDR
-- On EOL reduce production global_attr -> KW_UNNAMED_ADDR
-- On COMMA reduce production global_attr -> KW_UNNAMED_ADDR

State 509:
## Known stack suffix:
## KW_THREAD_LOCAL
## LR(1) items:
global_attr -> KW_THREAD_LOCAL . LPAREN tls RPAREN [ KW_WEAK_ODR KW_WEAK KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_PROTECTED KW_PRIVATE KW_LINKONCE_ODR KW_LINKONCE KW_INTERNAL KW_HIDDEN KW_GLOBAL KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DLLIMPORT KW_DLLEXPORT KW_DEFAULT KW_CONSTANT KW_COMMON KW_AVAILABLE_EXTERNALLY KW_APPENDING EOL COMMA ]
## Transitions:
-- On LPAREN shift to state 510
## Reductions:

State 510:
## Known stack suffix:
## KW_THREAD_LOCAL LPAREN
## LR(1) items:
global_attr -> KW_THREAD_LOCAL LPAREN . tls RPAREN [ KW_WEAK_ODR KW_WEAK KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_PROTECTED KW_PRIVATE KW_LINKONCE_ODR KW_LINKONCE KW_INTERNAL KW_HIDDEN KW_GLOBAL KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DLLIMPORT KW_DLLEXPORT KW_DEFAULT KW_CONSTANT KW_COMMON KW_AVAILABLE_EXTERNALLY KW_APPENDING EOL COMMA ]
## Transitions:
-- On KW_LOCALEXEC shift to state 511
-- On KW_LOCALDYNAMIC shift to state 512
-- On KW_INITIALEXEC shift to state 513
-- On tls shift to state 514
## Reductions:

State 511:
## Known stack suffix:
## KW_LOCALEXEC
## LR(1) items:
tls -> KW_LOCALEXEC . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN reduce production tls -> KW_LOCALEXEC

State 512:
## Known stack suffix:
## KW_LOCALDYNAMIC
## LR(1) items:
tls -> KW_LOCALDYNAMIC . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN reduce production tls -> KW_LOCALDYNAMIC

State 513:
## Known stack suffix:
## KW_INITIALEXEC
## LR(1) items:
tls -> KW_INITIALEXEC . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN reduce production tls -> KW_INITIALEXEC

State 514:
## Known stack suffix:
## KW_THREAD_LOCAL LPAREN tls
## LR(1) items:
global_attr -> KW_THREAD_LOCAL LPAREN tls . RPAREN [ KW_WEAK_ODR KW_WEAK KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_PROTECTED KW_PRIVATE KW_LINKONCE_ODR KW_LINKONCE KW_INTERNAL KW_HIDDEN KW_GLOBAL KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DLLIMPORT KW_DLLEXPORT KW_DEFAULT KW_CONSTANT KW_COMMON KW_AVAILABLE_EXTERNALLY KW_APPENDING EOL COMMA ]
## Transitions:
-- On RPAREN shift to state 515
## Reductions:

State 515:
## Known stack suffix:
## KW_THREAD_LOCAL LPAREN tls RPAREN
## LR(1) items:
global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN . [ KW_WEAK_ODR KW_WEAK KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_PROTECTED KW_PRIVATE KW_LINKONCE_ODR KW_LINKONCE KW_INTERNAL KW_HIDDEN KW_GLOBAL KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DLLIMPORT KW_DLLEXPORT KW_DEFAULT KW_CONSTANT KW_COMMON KW_AVAILABLE_EXTERNALLY KW_APPENDING EOL COMMA ]
## Transitions:
## Reductions:
-- On KW_WEAK_ODR reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_WEAK reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_UNNAMED_ADDR reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_THREAD_LOCAL reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_PROTECTED reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_PRIVATE reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_LINKONCE_ODR reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_LINKONCE reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_INTERNAL reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_HIDDEN reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_GLOBAL reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_EXTERN_WEAK reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_EXTERNALLY_INITIALIZED reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_EXTERNAL reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_DLLIMPORT reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_DLLEXPORT reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_DEFAULT reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_CONSTANT reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_COMMON reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_AVAILABLE_EXTERNALLY reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On KW_APPENDING reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On EOL reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN
-- On COMMA reduce production global_attr -> KW_THREAD_LOCAL LPAREN tls RPAREN

State 516:
## Known stack suffix:
## KW_EXTERNALLY_INITIALIZED
## LR(1) items:
global_attr -> KW_EXTERNALLY_INITIALIZED . [ KW_WEAK_ODR KW_WEAK KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_PROTECTED KW_PRIVATE KW_LINKONCE_ODR KW_LINKONCE KW_INTERNAL KW_HIDDEN KW_GLOBAL KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DLLIMPORT KW_DLLEXPORT KW_DEFAULT KW_CONSTANT KW_COMMON KW_AVAILABLE_EXTERNALLY KW_APPENDING EOL COMMA ]
## Transitions:
## Reductions:
-- On KW_WEAK_ODR reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_WEAK reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_UNNAMED_ADDR reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_THREAD_LOCAL reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_PROTECTED reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_PRIVATE reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_LINKONCE_ODR reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_LINKONCE reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_INTERNAL reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_HIDDEN reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_GLOBAL reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_EXTERN_WEAK reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_EXTERNALLY_INITIALIZED reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_EXTERNAL reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_DLLIMPORT reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_DLLEXPORT reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_DEFAULT reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_CONSTANT reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_COMMON reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_AVAILABLE_EXTERNALLY reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On KW_APPENDING reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On EOL reduce production global_attr -> KW_EXTERNALLY_INITIALIZED
-- On COMMA reduce production global_attr -> KW_EXTERNALLY_INITIALIZED

State 517:
## Known stack suffix:
## visibility
## LR(1) items:
global_attr -> visibility . [ KW_WEAK_ODR KW_WEAK KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_PROTECTED KW_PRIVATE KW_LINKONCE_ODR KW_LINKONCE KW_INTERNAL KW_HIDDEN KW_GLOBAL KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DLLIMPORT KW_DLLEXPORT KW_DEFAULT KW_CONSTANT KW_COMMON KW_AVAILABLE_EXTERNALLY KW_APPENDING EOL COMMA ]
## Transitions:
## Reductions:
-- On KW_WEAK_ODR reduce production global_attr -> visibility
-- On KW_WEAK reduce production global_attr -> visibility
-- On KW_UNNAMED_ADDR reduce production global_attr -> visibility
-- On KW_THREAD_LOCAL reduce production global_attr -> visibility
-- On KW_PROTECTED reduce production global_attr -> visibility
-- On KW_PRIVATE reduce production global_attr -> visibility
-- On KW_LINKONCE_ODR reduce production global_attr -> visibility
-- On KW_LINKONCE reduce production global_attr -> visibility
-- On KW_INTERNAL reduce production global_attr -> visibility
-- On KW_HIDDEN reduce production global_attr -> visibility
-- On KW_GLOBAL reduce production global_attr -> visibility
-- On KW_EXTERN_WEAK reduce production global_attr -> visibility
-- On KW_EXTERNALLY_INITIALIZED reduce production global_attr -> visibility
-- On KW_EXTERNAL reduce production global_attr -> visibility
-- On KW_DLLIMPORT reduce production global_attr -> visibility
-- On KW_DLLEXPORT reduce production global_attr -> visibility
-- On KW_DEFAULT reduce production global_attr -> visibility
-- On KW_CONSTANT reduce production global_attr -> visibility
-- On KW_COMMON reduce production global_attr -> visibility
-- On KW_AVAILABLE_EXTERNALLY reduce production global_attr -> visibility
-- On KW_APPENDING reduce production global_attr -> visibility
-- On EOL reduce production global_attr -> visibility
-- On COMMA reduce production global_attr -> visibility

State 518:
## Known stack suffix:
## KW_DECLARE list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,dc_arg)) RPAREN list(global_attr)
## LR(1) items:
declaration -> KW_DECLARE list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,dc_arg)) RPAREN list(global_attr) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production declaration -> KW_DECLARE list(param_attr) typ GLOBAL LPAREN loption(separated_nonempty_list(COMMA,dc_arg)) RPAREN list(global_attr)

State 519:
## Known stack suffix:
## linkage
## LR(1) items:
global_attr -> linkage . [ KW_WEAK_ODR KW_WEAK KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_PROTECTED KW_PRIVATE KW_LINKONCE_ODR KW_LINKONCE KW_INTERNAL KW_HIDDEN KW_GLOBAL KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DLLIMPORT KW_DLLEXPORT KW_DEFAULT KW_CONSTANT KW_COMMON KW_AVAILABLE_EXTERNALLY KW_APPENDING EOL COMMA ]
## Transitions:
## Reductions:
-- On KW_WEAK_ODR reduce production global_attr -> linkage
-- On KW_WEAK reduce production global_attr -> linkage
-- On KW_UNNAMED_ADDR reduce production global_attr -> linkage
-- On KW_THREAD_LOCAL reduce production global_attr -> linkage
-- On KW_PROTECTED reduce production global_attr -> linkage
-- On KW_PRIVATE reduce production global_attr -> linkage
-- On KW_LINKONCE_ODR reduce production global_attr -> linkage
-- On KW_LINKONCE reduce production global_attr -> linkage
-- On KW_INTERNAL reduce production global_attr -> linkage
-- On KW_HIDDEN reduce production global_attr -> linkage
-- On KW_GLOBAL reduce production global_attr -> linkage
-- On KW_EXTERN_WEAK reduce production global_attr -> linkage
-- On KW_EXTERNALLY_INITIALIZED reduce production global_attr -> linkage
-- On KW_EXTERNAL reduce production global_attr -> linkage
-- On KW_DLLIMPORT reduce production global_attr -> linkage
-- On KW_DLLEXPORT reduce production global_attr -> linkage
-- On KW_DEFAULT reduce production global_attr -> linkage
-- On KW_CONSTANT reduce production global_attr -> linkage
-- On KW_COMMON reduce production global_attr -> linkage
-- On KW_AVAILABLE_EXTERNALLY reduce production global_attr -> linkage
-- On KW_APPENDING reduce production global_attr -> linkage
-- On EOL reduce production global_attr -> linkage
-- On COMMA reduce production global_attr -> linkage

State 520:
## Known stack suffix:
## global_attr
## LR(1) items:
list(global_attr) -> global_attr . list(global_attr) [ KW_GLOBAL KW_CONSTANT EOL ]
## Transitions:
-- On KW_WEAK_ODR shift to state 103
-- On KW_WEAK shift to state 104
-- On KW_UNNAMED_ADDR shift to state 508
-- On KW_THREAD_LOCAL shift to state 509
-- On KW_PROTECTED shift to state 105
-- On KW_PRIVATE shift to state 106
-- On KW_LINKONCE_ODR shift to state 107
-- On KW_LINKONCE shift to state 108
-- On KW_INTERNAL shift to state 109
-- On KW_HIDDEN shift to state 110
-- On KW_EXTERN_WEAK shift to state 112
-- On KW_EXTERNALLY_INITIALIZED shift to state 516
-- On KW_EXTERNAL shift to state 113
-- On KW_DLLIMPORT shift to state 114
-- On KW_DLLEXPORT shift to state 115
-- On KW_DEFAULT shift to state 116
-- On KW_COMMON shift to state 117
-- On KW_AVAILABLE_EXTERNALLY shift to state 122
-- On KW_APPENDING shift to state 123
-- On visibility shift to state 517
-- On list(global_attr) shift to state 521
-- On linkage shift to state 519
-- On global_attr shift to state 520
-- On dll_storage shift to state 522
## Reductions:
-- On KW_GLOBAL reduce production list(global_attr) ->
-- On KW_CONSTANT reduce production list(global_attr) ->
-- On EOL reduce production list(global_attr) ->

State 521:
## Known stack suffix:
## global_attr list(global_attr)
## LR(1) items:
list(global_attr) -> global_attr list(global_attr) . [ KW_GLOBAL KW_CONSTANT EOL ]
## Transitions:
## Reductions:
-- On KW_GLOBAL reduce production list(global_attr) -> global_attr list(global_attr)
-- On KW_CONSTANT reduce production list(global_attr) -> global_attr list(global_attr)
-- On EOL reduce production list(global_attr) -> global_attr list(global_attr)

State 522:
## Known stack suffix:
## dll_storage
## LR(1) items:
global_attr -> dll_storage . [ KW_WEAK_ODR KW_WEAK KW_UNNAMED_ADDR KW_THREAD_LOCAL KW_PROTECTED KW_PRIVATE KW_LINKONCE_ODR KW_LINKONCE KW_INTERNAL KW_HIDDEN KW_GLOBAL KW_EXTERN_WEAK KW_EXTERNALLY_INITIALIZED KW_EXTERNAL KW_DLLIMPORT KW_DLLEXPORT KW_DEFAULT KW_CONSTANT KW_COMMON KW_AVAILABLE_EXTERNALLY KW_APPENDING EOL COMMA ]
## Transitions:
## Reductions:
-- On KW_WEAK_ODR reduce production global_attr -> dll_storage
-- On KW_WEAK reduce production global_attr -> dll_storage
-- On KW_UNNAMED_ADDR reduce production global_attr -> dll_storage
-- On KW_THREAD_LOCAL reduce production global_attr -> dll_storage
-- On KW_PROTECTED reduce production global_attr -> dll_storage
-- On KW_PRIVATE reduce production global_attr -> dll_storage
-- On KW_LINKONCE_ODR reduce production global_attr -> dll_storage
-- On KW_LINKONCE reduce production global_attr -> dll_storage
-- On KW_INTERNAL reduce production global_attr -> dll_storage
-- On KW_HIDDEN reduce production global_attr -> dll_storage
-- On KW_GLOBAL reduce production global_attr -> dll_storage
-- On KW_EXTERN_WEAK reduce production global_attr -> dll_storage
-- On KW_EXTERNALLY_INITIALIZED reduce production global_attr -> dll_storage
-- On KW_EXTERNAL reduce production global_attr -> dll_storage
-- On KW_DLLIMPORT reduce production global_attr -> dll_storage
-- On KW_DLLEXPORT reduce production global_attr -> dll_storage
-- On KW_DEFAULT reduce production global_attr -> dll_storage
-- On KW_CONSTANT reduce production global_attr -> dll_storage
-- On KW_COMMON reduce production global_attr -> dll_storage
-- On KW_AVAILABLE_EXTERNALLY reduce production global_attr -> dll_storage
-- On KW_APPENDING reduce production global_attr -> dll_storage
-- On EOL reduce production global_attr -> dll_storage
-- On COMMA reduce production global_attr -> dll_storage

State 523:
## Known stack suffix:
## dc_arg
## LR(1) items:
separated_nonempty_list(COMMA,dc_arg) -> dc_arg . [ RPAREN ]
separated_nonempty_list(COMMA,dc_arg) -> dc_arg . COMMA separated_nonempty_list(COMMA,dc_arg) [ RPAREN ]
## Transitions:
-- On COMMA shift to state 524
## Reductions:
-- On RPAREN reduce production separated_nonempty_list(COMMA,dc_arg) -> dc_arg

State 524:
## Known stack suffix:
## dc_arg COMMA
## LR(1) items:
separated_nonempty_list(COMMA,dc_arg) -> dc_arg COMMA . separated_nonempty_list(COMMA,dc_arg) [ RPAREN ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 503
-- On separated_nonempty_list(COMMA,dc_arg) shift to state 525
-- On dc_arg shift to state 523
## Reductions:

State 525:
## Known stack suffix:
## dc_arg COMMA separated_nonempty_list(COMMA,dc_arg)
## LR(1) items:
separated_nonempty_list(COMMA,dc_arg) -> dc_arg COMMA separated_nonempty_list(COMMA,dc_arg) . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN reduce production separated_nonempty_list(COMMA,dc_arg) -> dc_arg COMMA separated_nonempty_list(COMMA,dc_arg)

State 526:
## Known stack suffix:
## KW_ATTRIBUTES
## LR(1) items:
toplevelentry -> KW_ATTRIBUTES . ATTR_GRP_ID EQ LCURLY list(fn_attr) RCURLY [ EOL ]
## Transitions:
-- On ATTR_GRP_ID shift to state 527
## Reductions:

State 527:
## Known stack suffix:
## KW_ATTRIBUTES ATTR_GRP_ID
## LR(1) items:
toplevelentry -> KW_ATTRIBUTES ATTR_GRP_ID . EQ LCURLY list(fn_attr) RCURLY [ EOL ]
## Transitions:
-- On EQ shift to state 528
## Reductions:

State 528:
## Known stack suffix:
## KW_ATTRIBUTES ATTR_GRP_ID EQ
## LR(1) items:
toplevelentry -> KW_ATTRIBUTES ATTR_GRP_ID EQ . LCURLY list(fn_attr) RCURLY [ EOL ]
## Transitions:
-- On LCURLY shift to state 529
## Reductions:

State 529:
## Known stack suffix:
## KW_ATTRIBUTES ATTR_GRP_ID EQ LCURLY
## LR(1) items:
toplevelentry -> KW_ATTRIBUTES ATTR_GRP_ID EQ LCURLY . list(fn_attr) RCURLY [ EOL ]
## Transitions:
-- On STRING shift to state 157
-- On KW_UWTABLE shift to state 160
-- On KW_SSPSTRONG shift to state 162
-- On KW_SSPREQ shift to state 163
-- On KW_SSP shift to state 164
-- On KW_SANITIZE_THREAD shift to state 167
-- On KW_SANITIZE_MEMORY shift to state 168
-- On KW_SANITIZE_ADDRESS shift to state 169
-- On KW_RETURNS_TWICE shift to state 170
-- On KW_READONLY shift to state 171
-- On KW_READNONE shift to state 172
-- On KW_OPTSIZE shift to state 173
-- On KW_OPTNONE shift to state 174
-- On KW_NOUNWIND shift to state 175
-- On KW_NORETURN shift to state 176
-- On KW_NOREDZONE shift to state 177
-- On KW_NONLAZYBIND shift to state 178
-- On KW_NOINLINE shift to state 179
-- On KW_NOIMPLICITFLOAT shift to state 180
-- On KW_NODUPLICATE shift to state 181
-- On KW_NOBUILTIN shift to state 182
-- On KW_NAKED shift to state 183
-- On KW_MINSIZE shift to state 184
-- On KW_JUMPTABLE shift to state 185
-- On KW_INLINEHINT shift to state 186
-- On KW_COLD shift to state 189
-- On KW_BUILTIN shift to state 190
-- On KW_ALWAYSINLINE shift to state 191
-- On KW_ALIGNSTACK shift to state 192
-- On ATTR_GRP_ID shift to state 202
-- On list(fn_attr) shift to state 530
-- On fn_attr shift to state 311
## Reductions:
-- On RCURLY reduce production list(fn_attr) ->

State 530:
## Known stack suffix:
## KW_ATTRIBUTES ATTR_GRP_ID EQ LCURLY list(fn_attr)
## LR(1) items:
toplevelentry -> KW_ATTRIBUTES ATTR_GRP_ID EQ LCURLY list(fn_attr) . RCURLY [ EOL ]
## Transitions:
-- On RCURLY shift to state 531
## Reductions:

State 531:
## Known stack suffix:
## KW_ATTRIBUTES ATTR_GRP_ID EQ LCURLY list(fn_attr) RCURLY
## LR(1) items:
toplevelentry -> KW_ATTRIBUTES ATTR_GRP_ID EQ LCURLY list(fn_attr) RCURLY . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production toplevelentry -> KW_ATTRIBUTES ATTR_GRP_ID EQ LCURLY list(fn_attr) RCURLY

State 532:
## Known stack suffix:
## GLOBAL
## LR(1) items:
global_decl -> GLOBAL . EQ list(global_attr) global_is_constant typ option(const) option(preceded(COMMA,separated_list(COMMA,global_attr))) [ EOL ]
## Transitions:
-- On EQ shift to state 533
## Reductions:

State 533:
## Known stack suffix:
## GLOBAL EQ
## LR(1) items:
global_decl -> GLOBAL EQ . list(global_attr) global_is_constant typ option(const) option(preceded(COMMA,separated_list(COMMA,global_attr))) [ EOL ]
## Transitions:
-- On KW_WEAK_ODR shift to state 103
-- On KW_WEAK shift to state 104
-- On KW_UNNAMED_ADDR shift to state 508
-- On KW_THREAD_LOCAL shift to state 509
-- On KW_PROTECTED shift to state 105
-- On KW_PRIVATE shift to state 106
-- On KW_LINKONCE_ODR shift to state 107
-- On KW_LINKONCE shift to state 108
-- On KW_INTERNAL shift to state 109
-- On KW_HIDDEN shift to state 110
-- On KW_EXTERN_WEAK shift to state 112
-- On KW_EXTERNALLY_INITIALIZED shift to state 516
-- On KW_EXTERNAL shift to state 113
-- On KW_DLLIMPORT shift to state 114
-- On KW_DLLEXPORT shift to state 115
-- On KW_DEFAULT shift to state 116
-- On KW_COMMON shift to state 117
-- On KW_AVAILABLE_EXTERNALLY shift to state 122
-- On KW_APPENDING shift to state 123
-- On visibility shift to state 517
-- On list(global_attr) shift to state 534
-- On linkage shift to state 519
-- On global_attr shift to state 520
-- On dll_storage shift to state 522
## Reductions:
-- On KW_GLOBAL reduce production list(global_attr) ->
-- On KW_CONSTANT reduce production list(global_attr) ->

State 534:
## Known stack suffix:
## GLOBAL EQ list(global_attr)
## LR(1) items:
global_decl -> GLOBAL EQ list(global_attr) . global_is_constant typ option(const) option(preceded(COMMA,separated_list(COMMA,global_attr))) [ EOL ]
## Transitions:
-- On KW_GLOBAL shift to state 535
-- On KW_CONSTANT shift to state 536
-- On global_is_constant shift to state 537
## Reductions:

State 535:
## Known stack suffix:
## KW_GLOBAL
## LR(1) items:
global_is_constant -> KW_GLOBAL . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production global_is_constant -> KW_GLOBAL
-- On LT reduce production global_is_constant -> KW_GLOBAL
-- On LSQUARE reduce production global_is_constant -> KW_GLOBAL
-- On LCURLY reduce production global_is_constant -> KW_GLOBAL
-- On KW_X86_MMX reduce production global_is_constant -> KW_GLOBAL
-- On KW_X86_FP80 reduce production global_is_constant -> KW_GLOBAL
-- On KW_VOID reduce production global_is_constant -> KW_GLOBAL
-- On KW_PPC_FP128 reduce production global_is_constant -> KW_GLOBAL
-- On KW_OPAQUE reduce production global_is_constant -> KW_GLOBAL
-- On KW_METADATA reduce production global_is_constant -> KW_GLOBAL
-- On KW_LABEL reduce production global_is_constant -> KW_GLOBAL
-- On KW_HALF reduce production global_is_constant -> KW_GLOBAL
-- On KW_FP128 reduce production global_is_constant -> KW_GLOBAL
-- On KW_FLOAT reduce production global_is_constant -> KW_GLOBAL
-- On KW_DOUBLE reduce production global_is_constant -> KW_GLOBAL
-- On I reduce production global_is_constant -> KW_GLOBAL

State 536:
## Known stack suffix:
## KW_CONSTANT
## LR(1) items:
global_is_constant -> KW_CONSTANT . [ LTLCURLY LT LSQUARE LCURLY KW_X86_MMX KW_X86_FP80 KW_VOID KW_PPC_FP128 KW_OPAQUE KW_METADATA KW_LABEL KW_HALF KW_FP128 KW_FLOAT KW_DOUBLE I ]
## Transitions:
## Reductions:
-- On LTLCURLY reduce production global_is_constant -> KW_CONSTANT
-- On LT reduce production global_is_constant -> KW_CONSTANT
-- On LSQUARE reduce production global_is_constant -> KW_CONSTANT
-- On LCURLY reduce production global_is_constant -> KW_CONSTANT
-- On KW_X86_MMX reduce production global_is_constant -> KW_CONSTANT
-- On KW_X86_FP80 reduce production global_is_constant -> KW_CONSTANT
-- On KW_VOID reduce production global_is_constant -> KW_CONSTANT
-- On KW_PPC_FP128 reduce production global_is_constant -> KW_CONSTANT
-- On KW_OPAQUE reduce production global_is_constant -> KW_CONSTANT
-- On KW_METADATA reduce production global_is_constant -> KW_CONSTANT
-- On KW_LABEL reduce production global_is_constant -> KW_CONSTANT
-- On KW_HALF reduce production global_is_constant -> KW_CONSTANT
-- On KW_FP128 reduce production global_is_constant -> KW_CONSTANT
-- On KW_FLOAT reduce production global_is_constant -> KW_CONSTANT
-- On KW_DOUBLE reduce production global_is_constant -> KW_CONSTANT
-- On I reduce production global_is_constant -> KW_CONSTANT

State 537:
## Known stack suffix:
## GLOBAL EQ list(global_attr) global_is_constant
## LR(1) items:
global_decl -> GLOBAL EQ list(global_attr) global_is_constant . typ option(const) option(preceded(COMMA,separated_list(COMMA,global_attr))) [ EOL ]
## Transitions:
-- On LTLCURLY shift to state 9
-- On LT shift to state 10
-- On LSQUARE shift to state 13
-- On LCURLY shift to state 16
-- On KW_X86_MMX shift to state 17
-- On KW_X86_FP80 shift to state 18
-- On KW_VOID shift to state 19
-- On KW_PPC_FP128 shift to state 20
-- On KW_OPAQUE shift to state 21
-- On KW_METADATA shift to state 22
-- On KW_LABEL shift to state 23
-- On KW_HALF shift to state 24
-- On KW_FP128 shift to state 25
-- On KW_FLOAT shift to state 26
-- On KW_DOUBLE shift to state 27
-- On I shift to state 28
-- On typ shift to state 538
## Reductions:

State 538:
## Known stack suffix:
## GLOBAL EQ list(global_attr) global_is_constant typ
## LR(1) items:
global_decl -> GLOBAL EQ list(global_attr) global_is_constant typ . option(const) option(preceded(COMMA,separated_list(COMMA,global_attr))) [ EOL ]
typ -> typ . STAR [ STAR LTLCURLY LT LSQUARE LPAREN LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER FLOAT EOL COMMA ]
typ -> typ . LPAREN loption(separated_nonempty_list(COMMA,typ)) RPAREN [ STAR LTLCURLY LT LSQUARE LPAREN LCURLY KW_ZEROINITIALIZER KW_UNDEF KW_TRUE KW_NULL KW_FALSE INTEGER FLOAT EOL COMMA ]
## Transitions:
-- On STAR shift to state 30
-- On LTLCURLY shift to state 51
-- On LT shift to state 58
-- On LSQUARE shift to state 61
-- On LPAREN shift to state 31
-- On LCURLY shift to state 64
-- On KW_ZEROINITIALIZER shift to state 67
-- On KW_UNDEF shift to state 68
-- On KW_TRUE shift to state 69
-- On KW_NULL shift to state 70
-- On KW_FALSE shift to state 71
-- On INTEGER shift to state 72
-- On FLOAT shift to state 73
-- On option(const) shift to state 539
-- On const shift to state 547
## Reductions:
-- On EOL reduce production option(const) ->
-- On COMMA reduce production option(const) ->

State 539:
## Known stack suffix:
## GLOBAL EQ list(global_attr) global_is_constant typ option(const)
## LR(1) items:
global_decl -> GLOBAL EQ list(global_attr) global_is_constant typ option(const) . option(preceded(COMMA,separated_list(COMMA,global_attr))) [ EOL ]
## Transitions:
-- On COMMA shift to state 540
-- On option(preceded(COMMA,separated_list(COMMA,global_attr))) shift to state 546
## Reductions:
-- On EOL reduce production option(preceded(COMMA,separated_list(COMMA,global_attr))) ->

State 540:
## Known stack suffix:
## COMMA
## LR(1) items:
option(preceded(COMMA,separated_list(COMMA,global_attr))) -> COMMA . loption(separated_nonempty_list(COMMA,global_attr)) [ EOL ]
## Transitions:
-- On KW_WEAK_ODR shift to state 103
-- On KW_WEAK shift to state 104
-- On KW_UNNAMED_ADDR shift to state 508
-- On KW_THREAD_LOCAL shift to state 509
-- On KW_PROTECTED shift to state 105
-- On KW_PRIVATE shift to state 106
-- On KW_LINKONCE_ODR shift to state 107
-- On KW_LINKONCE shift to state 108
-- On KW_INTERNAL shift to state 109
-- On KW_HIDDEN shift to state 110
-- On KW_EXTERN_WEAK shift to state 112
-- On KW_EXTERNALLY_INITIALIZED shift to state 516
-- On KW_EXTERNAL shift to state 113
-- On KW_DLLIMPORT shift to state 114
-- On KW_DLLEXPORT shift to state 115
-- On KW_DEFAULT shift to state 116
-- On KW_COMMON shift to state 117
-- On KW_AVAILABLE_EXTERNALLY shift to state 122
-- On KW_APPENDING shift to state 123
-- On visibility shift to state 517
-- On separated_nonempty_list(COMMA,global_attr) shift to state 541
-- On loption(separated_nonempty_list(COMMA,global_attr)) shift to state 542
-- On linkage shift to state 519
-- On global_attr shift to state 543
-- On dll_storage shift to state 522
## Reductions:
-- On EOL reduce production loption(separated_nonempty_list(COMMA,global_attr)) ->

State 541:
## Known stack suffix:
## separated_nonempty_list(COMMA,global_attr)
## LR(1) items:
loption(separated_nonempty_list(COMMA,global_attr)) -> separated_nonempty_list(COMMA,global_attr) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production loption(separated_nonempty_list(COMMA,global_attr)) -> separated_nonempty_list(COMMA,global_attr)

State 542:
## Known stack suffix:
## COMMA loption(separated_nonempty_list(COMMA,global_attr))
## LR(1) items:
option(preceded(COMMA,separated_list(COMMA,global_attr))) -> COMMA loption(separated_nonempty_list(COMMA,global_attr)) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production option(preceded(COMMA,separated_list(COMMA,global_attr))) -> COMMA loption(separated_nonempty_list(COMMA,global_attr))

State 543:
## Known stack suffix:
## global_attr
## LR(1) items:
separated_nonempty_list(COMMA,global_attr) -> global_attr . [ EOL ]
separated_nonempty_list(COMMA,global_attr) -> global_attr . COMMA separated_nonempty_list(COMMA,global_attr) [ EOL ]
## Transitions:
-- On COMMA shift to state 544
## Reductions:
-- On EOL reduce production separated_nonempty_list(COMMA,global_attr) -> global_attr

State 544:
## Known stack suffix:
## global_attr COMMA
## LR(1) items:
separated_nonempty_list(COMMA,global_attr) -> global_attr COMMA . separated_nonempty_list(COMMA,global_attr) [ EOL ]
## Transitions:
-- On KW_WEAK_ODR shift to state 103
-- On KW_WEAK shift to state 104
-- On KW_UNNAMED_ADDR shift to state 508
-- On KW_THREAD_LOCAL shift to state 509
-- On KW_PROTECTED shift to state 105
-- On KW_PRIVATE shift to state 106
-- On KW_LINKONCE_ODR shift to state 107
-- On KW_LINKONCE shift to state 108
-- On KW_INTERNAL shift to state 109
-- On KW_HIDDEN shift to state 110
-- On KW_EXTERN_WEAK shift to state 112
-- On KW_EXTERNALLY_INITIALIZED shift to state 516
-- On KW_EXTERNAL shift to state 113
-- On KW_DLLIMPORT shift to state 114
-- On KW_DLLEXPORT shift to state 115
-- On KW_DEFAULT shift to state 116
-- On KW_COMMON shift to state 117
-- On KW_AVAILABLE_EXTERNALLY shift to state 122
-- On KW_APPENDING shift to state 123
-- On visibility shift to state 517
-- On separated_nonempty_list(COMMA,global_attr) shift to state 545
-- On linkage shift to state 519
-- On global_attr shift to state 543
-- On dll_storage shift to state 522
## Reductions:

State 545:
## Known stack suffix:
## global_attr COMMA separated_nonempty_list(COMMA,global_attr)
## LR(1) items:
separated_nonempty_list(COMMA,global_attr) -> global_attr COMMA separated_nonempty_list(COMMA,global_attr) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production separated_nonempty_list(COMMA,global_attr) -> global_attr COMMA separated_nonempty_list(COMMA,global_attr)

State 546:
## Known stack suffix:
## GLOBAL EQ list(global_attr) global_is_constant typ option(const) option(preceded(COMMA,separated_list(COMMA,global_attr)))
## LR(1) items:
global_decl -> GLOBAL EQ list(global_attr) global_is_constant typ option(const) option(preceded(COMMA,separated_list(COMMA,global_attr))) . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production global_decl -> GLOBAL EQ list(global_attr) global_is_constant typ option(const) option(preceded(COMMA,separated_list(COMMA,global_attr)))

State 547:
## Known stack suffix:
## const
## LR(1) items:
option(const) -> const . [ EOL COMMA ]
## Transitions:
## Reductions:
-- On EOL reduce production option(const) -> const
-- On COMMA reduce production option(const) -> const

State 548:
## Known stack suffix:
## toplevelentry
## LR(1) items:
list(terminated(toplevelentry,nonempty_list(EOL))) -> toplevelentry . nonempty_list(EOL) list(terminated(toplevelentry,nonempty_list(EOL))) [ EOF ]
## Transitions:
-- On EOL shift to state 210
-- On nonempty_list(EOL) shift to state 549
## Reductions:

State 549:
## Known stack suffix:
## toplevelentry nonempty_list(EOL)
## LR(1) items:
list(terminated(toplevelentry,nonempty_list(EOL))) -> toplevelentry nonempty_list(EOL) . list(terminated(toplevelentry,nonempty_list(EOL))) [ EOF ]
## Transitions:
-- On METADATA_ID shift to state 5
-- On LOCAL shift to state 91
-- On KW_TARGET shift to state 95
-- On KW_DEFINE shift to state 102
-- On KW_DECLARE shift to state 498
-- On KW_ATTRIBUTES shift to state 526
-- On GLOBAL shift to state 532
-- On toplevelentry shift to state 548
-- On list(terminated(toplevelentry,nonempty_list(EOL))) shift to state 550
-- On global_decl shift to state 551
-- On definition shift to state 552
-- On declaration shift to state 553
## Reductions:
-- On EOF reduce production list(terminated(toplevelentry,nonempty_list(EOL))) ->

State 550:
## Known stack suffix:
## toplevelentry nonempty_list(EOL) list(terminated(toplevelentry,nonempty_list(EOL)))
## LR(1) items:
list(terminated(toplevelentry,nonempty_list(EOL))) -> toplevelentry nonempty_list(EOL) list(terminated(toplevelentry,nonempty_list(EOL))) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production list(terminated(toplevelentry,nonempty_list(EOL))) -> toplevelentry nonempty_list(EOL) list(terminated(toplevelentry,nonempty_list(EOL)))

State 551:
## Known stack suffix:
## global_decl
## LR(1) items:
toplevelentry -> global_decl . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production toplevelentry -> global_decl

State 552:
## Known stack suffix:
## definition
## LR(1) items:
toplevelentry -> definition . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production toplevelentry -> definition

State 553:
## Known stack suffix:
## declaration
## LR(1) items:
toplevelentry -> declaration . [ EOL ]
## Transitions:
## Reductions:
-- On EOL reduce production toplevelentry -> declaration

State 554:
## Known stack suffix:
## list(EOL) list(terminated(toplevelentry,nonempty_list(EOL)))
## LR(1) items:
toplevelentries -> list(EOL) list(terminated(toplevelentry,nonempty_list(EOL))) . EOF [ # ]
## Transitions:
-- On EOF shift to state 555
## Reductions:

State 555:
## Known stack suffix:
## list(EOL) list(terminated(toplevelentry,nonempty_list(EOL))) EOF
## LR(1) items:
toplevelentries -> list(EOL) list(terminated(toplevelentry,nonempty_list(EOL))) EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production toplevelentries -> list(EOL) list(terminated(toplevelentry,nonempty_list(EOL))) EOF

