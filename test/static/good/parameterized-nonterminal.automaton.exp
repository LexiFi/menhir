State 0:
a' -> . a [ # ]
-- On A shift to state 1
-- On c(A) shift to state 2
-- On b(A) shift to state 5
-- On a shift to state 6

State 1:
c(A) -> A . [ A ]
-- On A reduce production c(A) -> A 

State 2:
b(A) -> c(A) . d [ # ]
-- On A shift to state 3
-- On d shift to state 4

State 3:
d -> A . [ # ]
-- On # reduce production d -> A 

State 4:
b(A) -> c(A) d . [ # ]
-- On # reduce production b(A) -> c(A) d 

State 5:
a -> b(A) . [ # ]
-- On # reduce production a -> b(A) 

State 6:
a' -> a . [ # ]
-- On # accept a

