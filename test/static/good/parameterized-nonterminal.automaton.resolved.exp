State 0:
## Known stack suffix:
##
## LR(1) items:
a' -> . a [ # ]
## Transitions:
-- On A shift to state 1
-- On c(A) shift to state 2
-- On b(A) shift to state 5
-- On a shift to state 6
## Reductions:

State 1:
## Known stack suffix:
## A
## LR(1) items:
c(A) -> A . [ A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production c(A) -> A

State 2:
## Known stack suffix:
## c(A)
## LR(1) items:
b(A) -> c(A) . d [ # ]
## Transitions:
-- On A shift to state 3
-- On d shift to state 4
## Reductions:

State 3:
## Known stack suffix:
## A
## LR(1) items:
d -> A . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production d -> A

State 4:
## Known stack suffix:
## c(A) d
## LR(1) items:
b(A) -> c(A) d . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production b(A) -> c(A) d

State 5:
## Known stack suffix:
## b(A)
## LR(1) items:
a -> b(A) . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production a -> b(A)

State 6:
## Known stack suffix:
## a
## LR(1) items:
a' -> a . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept a

