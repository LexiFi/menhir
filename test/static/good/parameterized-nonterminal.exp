Grammar has 4 nonterminal symbols, among which 1 start symbols.
Grammar has 1 terminal symbols.
Grammar has 4 productions.
nullable(d) = false
nullable(c(A)) = false
nullable(b(A)) = false
nullable(a) = false
first(d) = A
first(c(A)) = A
first(b(A)) = A
first(a) = A
minimal(d) = (* 1 *) A
minimal(c(A)) = (* 1 *) A
minimal(b(A)) = (* 2 *) A A
minimal(a) = (* 2 *) A A
maximal(d) = 1
maximal(c(A)) = 1
maximal(b(A)) = 2
maximal(a) = 2
follow(d) = #
follow(c(A)) = A
follow(b(A)) = #
follow(a) = #
Built an LR(0) automaton with 7 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 7 states.
5 out of 7 states have a default reduction.
0 out of 7 states are represented.
0 out of 8 symbols keep track of their start position.
0 out of 8 symbols keep track of their end position.
5 out of 5 productions exploit shiftreduce optimization.
0 out of 7 states can peek at an error.
28 functions before inlining, 2 functions after inlining.
