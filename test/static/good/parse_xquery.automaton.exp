State 0:
## Known stack suffix:
##
## LR(1) items:
extype' -> . extype [ # ]
## Transitions:
-- On TEXT shift to state 1
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTION shift to state 3
-- On NONE shift to state 4
-- On NCNAME shift to state 5
-- On LPAR shift to state 6
-- On GROUP shift to state 8
-- On ELEMENT shift to state 10
-- On DOCUMENT shift to state 49
-- On COMMENT shift to state 51
-- On ATTRGROUP shift to state 52
-- On xtype shift to state 90
-- On qname shift to state 65
-- On extype shift to state 93
## Reductions:

State 1:
## Known stack suffix:
## TEXT
## LR(1) items:
xtype -> TEXT . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> TEXT
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> TEXT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 2:
## Known stack suffix:
## QNAME
## LR(1) items:
qname -> QNAME . [ WITH WHERE UNIONOF UNION TREATAS TO STRING STAR STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES S RPAR ROPENINGTAG RETURN RESTRICTS REMPTYELEMENT RCURLY RCLOSINGTAG RBRACK QUESTION PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AMPERSAND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNIONOF UNION TREATAS TO STRING STAR STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES S RPAR ROPENINGTAG RETURN RESTRICTS REMPTYELEMENT RCURLY RCLOSINGTAG RBRACK QUESTION PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AMPERSAND AFTER #
--   reduce production qname -> QNAME
** End-of-stream conflict on WITH WHERE UNIONOF UNION TREATAS TO STRING STAR STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES S RPAR ROPENINGTAG RETURN RESTRICTS REMPTYELEMENT RCURLY RCLOSINGTAG RBRACK QUESTION PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AMPERSAND AFTER
**   There is a tension between
**   (1) reducing production qname -> QNAME
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 3:
## Known stack suffix:
## PROCESSINGINSTRUCTION
## LR(1) items:
xtype -> PROCESSINGINSTRUCTION . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> PROCESSINGINSTRUCTION
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> PROCESSINGINSTRUCTION
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 4:
## Known stack suffix:
## NONE
## LR(1) items:
xtype -> NONE . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> NONE
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> NONE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 5:
## Known stack suffix:
## NCNAME
## LR(1) items:
qname -> NCNAME . [ WITH WHERE UNIONOF UNION TREATAS TO STRING STAR STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES S RPAR ROPENINGTAG RETURN RESTRICTS REMPTYELEMENT RCURLY RCLOSINGTAG RBRACK QUESTION PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AMPERSAND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNIONOF UNION TREATAS TO STRING STAR STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES S RPAR ROPENINGTAG RETURN RESTRICTS REMPTYELEMENT RCURLY RCLOSINGTAG RBRACK QUESTION PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AMPERSAND AFTER #
--   reduce production qname -> NCNAME
** End-of-stream conflict on WITH WHERE UNIONOF UNION TREATAS TO STRING STAR STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES S RPAR ROPENINGTAG RETURN RESTRICTS REMPTYELEMENT RCURLY RCLOSINGTAG RBRACK QUESTION PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AMPERSAND AFTER
**   There is a tension between
**   (1) reducing production qname -> NCNAME
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 6:
## Known stack suffix:
## LPAR
## LR(1) items:
xtype -> LPAR . RPAR [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> LPAR . xtype RPAR [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On TEXT shift to state 1
-- On RPAR shift to state 7
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTION shift to state 3
-- On NONE shift to state 4
-- On NCNAME shift to state 5
-- On LPAR shift to state 6
-- On GROUP shift to state 8
-- On ELEMENT shift to state 10
-- On DOCUMENT shift to state 49
-- On COMMENT shift to state 51
-- On ATTRGROUP shift to state 52
-- On xtype shift to state 88
-- On qname shift to state 65
## Reductions:

State 7:
## Known stack suffix:
## LPAR RPAR
## LR(1) items:
xtype -> LPAR RPAR . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> LPAR RPAR
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> LPAR RPAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 8:
## Known stack suffix:
## GROUP
## LR(1) items:
xtype -> GROUP . qname [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## GROUP qname
## LR(1) items:
xtype -> GROUP qname . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> GROUP qname
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> GROUP qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 10:
## Known stack suffix:
## ELEMENT
## LR(1) items:
xtype -> ELEMENT . qname [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> ELEMENT . nameclass nillable xtype_specifier [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On QNAME shift to state 2
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On wildcard shift to state 14
-- On qname shift to state 15
-- On nameclass shift to state 16
## Reductions:

State 11:
## Known stack suffix:
## STARNCNAME
## LR(1) items:
wildcard -> STARNCNAME . [ WITH WHERE UNIONOF UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RESTRICTS RCURLY RBRACK PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNIONOF UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RESTRICTS RCURLY RBRACK PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production wildcard -> STARNCNAME
** End-of-stream conflict on WITH WHERE UNIONOF UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RESTRICTS RCURLY RBRACK PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production wildcard -> STARNCNAME
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 12:
## Known stack suffix:
## STAR
## LR(1) items:
wildcard -> STAR . [ WITH WHERE UNIONOF UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RESTRICTS RCURLY RBRACK PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNIONOF UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RESTRICTS RCURLY RBRACK PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production wildcard -> STAR
** End-of-stream conflict on WITH WHERE UNIONOF UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RESTRICTS RCURLY RBRACK PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production wildcard -> STAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 13:
## Known stack suffix:
## NCNAMESTAR
## LR(1) items:
wildcard -> NCNAMESTAR . [ WITH WHERE UNIONOF UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RESTRICTS RCURLY RBRACK PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNIONOF UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RESTRICTS RCURLY RBRACK PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production wildcard -> NCNAMESTAR
** End-of-stream conflict on WITH WHERE UNIONOF UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RESTRICTS RCURLY RBRACK PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production wildcard -> NCNAMESTAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 14:
## Known stack suffix:
## wildcard
## LR(1) items:
nameclass -> wildcard . [ UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE NILLABLE MIXED LISTOF LCURLY EXTENDS ]
## Transitions:
## Reductions:
-- On UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE NILLABLE MIXED LISTOF LCURLY EXTENDS
--   reduce production nameclass -> wildcard

State 15:
## Known stack suffix:
## ELEMENT qname
## LR(1) items:
nameclass -> qname . [ UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE NILLABLE MIXED LISTOF LCURLY EXTENDS ]
xtype -> ELEMENT qname . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE NILLABLE MIXED LISTOF LCURLY EXTENDS
--   reduce production nameclass -> qname
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> ELEMENT qname
** End-of-stream conflict on UNIONOF STAR SEMICOLON RPAR RESTRICTS RCURLY QUESTION PLUS OFTYPE OFSIMPLETYPE NILLABLE MIXED LISTOF LCURLY EXTENDS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> ELEMENT qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 16:
## Known stack suffix:
## ELEMENT nameclass
## LR(1) items:
xtype -> ELEMENT nameclass . nillable xtype_specifier [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On NILLABLE shift to state 17
-- On nillable shift to state 18
## Reductions:
-- On UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS
--   reduce production nillable ->

State 17:
## Known stack suffix:
## NILLABLE
## LR(1) items:
nillable -> NILLABLE . [ UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS ]
## Transitions:
## Reductions:
-- On UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS
--   reduce production nillable -> NILLABLE

State 18:
## Known stack suffix:
## ELEMENT nameclass nillable
## LR(1) items:
xtype -> ELEMENT nameclass nillable . xtype_specifier [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On UNIONOF shift to state 19
-- On RESTRICTS shift to state 33
-- On OFTYPE shift to state 36
-- On OFSIMPLETYPE shift to state 38
-- On MIXED shift to state 40
-- On LISTOF shift to state 22
-- On EXTENDS shift to state 41
-- On xtype_specifier shift to state 44
-- On stype_specifier shift to state 45
-- On stype_derivation shift to state 46
-- On deriv_mixed shift to state 47
-- On ctype_specifier shift to state 86
-- On ctype_derivation shift to state 87
## Reductions:
-- On LCURLY
--   reduce production deriv_mixed ->

State 19:
## Known stack suffix:
## UNIONOF
## LR(1) items:
stype_derivation -> UNIONOF . LCURLY stype_specifier_union RCURLY [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On LCURLY shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## UNIONOF LCURLY
## LR(1) items:
stype_derivation -> UNIONOF LCURLY . stype_specifier_union RCURLY [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On UNIONOF shift to state 19
-- On RESTRICTS shift to state 21
-- On QNAME shift to state 2
-- On NONE shift to state 27
-- On NCNAME shift to state 5
-- On LISTOF shift to state 22
-- On stype_specifier_union shift to state 28
-- On stype_derivation shift to state 23
-- On qname shift to state 24
-- On nested_stype_spec shift to state 30
## Reductions:

State 21:
## Known stack suffix:
## RESTRICTS
## LR(1) items:
stype_derivation -> RESTRICTS . nested_stype_spec [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On UNIONOF shift to state 19
-- On RESTRICTS shift to state 21
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On LISTOF shift to state 22
-- On stype_derivation shift to state 23
-- On qname shift to state 24
-- On nested_stype_spec shift to state 26
## Reductions:

State 22:
## Known stack suffix:
## LISTOF
## LR(1) items:
stype_derivation -> LISTOF . nested_stype_spec [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On UNIONOF shift to state 19
-- On RESTRICTS shift to state 21
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On LISTOF shift to state 22
-- On stype_derivation shift to state 23
-- On qname shift to state 24
-- On nested_stype_spec shift to state 25
## Reductions:

State 23:
## Known stack suffix:
## stype_derivation
## LR(1) items:
nested_stype_spec -> stype_derivation . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production nested_stype_spec -> stype_derivation
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production nested_stype_spec -> stype_derivation
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 24:
## Known stack suffix:
## qname
## LR(1) items:
nested_stype_spec -> qname . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production nested_stype_spec -> qname
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production nested_stype_spec -> qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 25:
## Known stack suffix:
## LISTOF nested_stype_spec
## LR(1) items:
stype_derivation -> LISTOF nested_stype_spec . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production stype_derivation -> LISTOF nested_stype_spec
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production stype_derivation -> LISTOF nested_stype_spec
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 26:
## Known stack suffix:
## RESTRICTS nested_stype_spec
## LR(1) items:
stype_derivation -> RESTRICTS nested_stype_spec . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production stype_derivation -> RESTRICTS nested_stype_spec
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production stype_derivation -> RESTRICTS nested_stype_spec
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 27:
## Known stack suffix:
## NONE
## LR(1) items:
stype_specifier_union -> NONE . [ RCURLY ]
## Transitions:
## Reductions:
-- On RCURLY
--   reduce production stype_specifier_union -> NONE

State 28:
## Known stack suffix:
## UNIONOF LCURLY stype_specifier_union
## LR(1) items:
stype_derivation -> UNIONOF LCURLY stype_specifier_union . RCURLY [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On RCURLY shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## UNIONOF LCURLY stype_specifier_union RCURLY
## LR(1) items:
stype_derivation -> UNIONOF LCURLY stype_specifier_union RCURLY . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production stype_derivation -> UNIONOF LCURLY stype_specifier_union RCURLY
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production stype_derivation -> UNIONOF LCURLY stype_specifier_union RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 30:
## Known stack suffix:
## nested_stype_spec
## LR(1) items:
stype_specifier_union -> nested_stype_spec . [ RCURLY ]
stype_specifier_union -> nested_stype_spec . BAR stype_specifier_union [ RCURLY ]
## Transitions:
-- On BAR shift to state 31
## Reductions:
-- On RCURLY
--   reduce production stype_specifier_union -> nested_stype_spec

State 31:
## Known stack suffix:
## nested_stype_spec BAR
## LR(1) items:
stype_specifier_union -> nested_stype_spec BAR . stype_specifier_union [ RCURLY ]
## Transitions:
-- On UNIONOF shift to state 19
-- On RESTRICTS shift to state 21
-- On QNAME shift to state 2
-- On NONE shift to state 27
-- On NCNAME shift to state 5
-- On LISTOF shift to state 22
-- On stype_specifier_union shift to state 32
-- On stype_derivation shift to state 23
-- On qname shift to state 24
-- On nested_stype_spec shift to state 30
## Reductions:

State 32:
## Known stack suffix:
## nested_stype_spec BAR stype_specifier_union
## LR(1) items:
stype_specifier_union -> nested_stype_spec BAR stype_specifier_union . [ RCURLY ]
## Transitions:
## Reductions:
-- On RCURLY
--   reduce production stype_specifier_union -> nested_stype_spec BAR stype_specifier_union

State 33:
## Known stack suffix:
## RESTRICTS
## LR(1) items:
deriv_mixed -> RESTRICTS . qname [ LCURLY ]
deriv_mixed -> RESTRICTS . qname MIXED [ LCURLY ]
stype_derivation -> RESTRICTS . nested_stype_spec [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On UNIONOF shift to state 19
-- On RESTRICTS shift to state 21
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On LISTOF shift to state 22
-- On stype_derivation shift to state 23
-- On qname shift to state 34
-- On nested_stype_spec shift to state 26
## Reductions:

State 34:
## Known stack suffix:
## RESTRICTS qname
## LR(1) items:
deriv_mixed -> RESTRICTS qname . [ LCURLY ]
deriv_mixed -> RESTRICTS qname . MIXED [ LCURLY ]
nested_stype_spec -> qname . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On MIXED shift to state 35
## Reductions:
-- On LCURLY
--   reduce production deriv_mixed -> RESTRICTS qname
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production nested_stype_spec -> qname
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS MIXED LCURLY COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production nested_stype_spec -> qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 35:
## Known stack suffix:
## RESTRICTS qname MIXED
## LR(1) items:
deriv_mixed -> RESTRICTS qname MIXED . [ LCURLY ]
## Transitions:
## Reductions:
-- On LCURLY
--   reduce production deriv_mixed -> RESTRICTS qname MIXED

State 36:
## Known stack suffix:
## OFTYPE
## LR(1) items:
ctype_specifier -> OFTYPE . qname [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## OFTYPE qname
## LR(1) items:
ctype_specifier -> OFTYPE qname . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production ctype_specifier -> OFTYPE qname
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production ctype_specifier -> OFTYPE qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 38:
## Known stack suffix:
## OFSIMPLETYPE
## LR(1) items:
stype_specifier -> OFSIMPLETYPE . qname [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## OFSIMPLETYPE qname
## LR(1) items:
stype_specifier -> OFSIMPLETYPE qname . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production stype_specifier -> OFSIMPLETYPE qname
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production stype_specifier -> OFSIMPLETYPE qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 40:
## Known stack suffix:
## MIXED
## LR(1) items:
deriv_mixed -> MIXED . [ LCURLY ]
## Transitions:
## Reductions:
-- On LCURLY
--   reduce production deriv_mixed -> MIXED

State 41:
## Known stack suffix:
## EXTENDS
## LR(1) items:
deriv_mixed -> EXTENDS . qname [ LCURLY ]
deriv_mixed -> EXTENDS . qname MIXED [ LCURLY ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## EXTENDS qname
## LR(1) items:
deriv_mixed -> EXTENDS qname . [ LCURLY ]
deriv_mixed -> EXTENDS qname . MIXED [ LCURLY ]
## Transitions:
-- On MIXED shift to state 43
## Reductions:
-- On LCURLY
--   reduce production deriv_mixed -> EXTENDS qname

State 43:
## Known stack suffix:
## EXTENDS qname MIXED
## LR(1) items:
deriv_mixed -> EXTENDS qname MIXED . [ LCURLY ]
## Transitions:
## Reductions:
-- On LCURLY
--   reduce production deriv_mixed -> EXTENDS qname MIXED

State 44:
## Known stack suffix:
## ELEMENT nameclass nillable xtype_specifier
## LR(1) items:
xtype -> ELEMENT nameclass nillable xtype_specifier . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> ELEMENT nameclass nillable xtype_specifier
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> ELEMENT nameclass nillable xtype_specifier
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 45:
## Known stack suffix:
## stype_specifier
## LR(1) items:
xtype_specifier -> stype_specifier . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype_specifier -> stype_specifier
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype_specifier -> stype_specifier
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 46:
## Known stack suffix:
## stype_derivation
## LR(1) items:
stype_specifier -> stype_derivation . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production stype_specifier -> stype_derivation
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production stype_specifier -> stype_derivation
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 47:
## Known stack suffix:
## deriv_mixed
## LR(1) items:
ctype_derivation -> deriv_mixed . LCURLY extype RCURLY [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On LCURLY shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## deriv_mixed LCURLY
## LR(1) items:
ctype_derivation -> deriv_mixed LCURLY . extype RCURLY [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On TEXT shift to state 1
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTION shift to state 3
-- On NONE shift to state 4
-- On NCNAME shift to state 5
-- On LPAR shift to state 6
-- On GROUP shift to state 8
-- On ELEMENT shift to state 10
-- On DOCUMENT shift to state 49
-- On COMMENT shift to state 51
-- On ATTRGROUP shift to state 52
-- On xtype shift to state 66
-- On qname shift to state 65
-- On extype shift to state 84
## Reductions:

State 49:
## Known stack suffix:
## DOCUMENT
## LR(1) items:
xtype -> DOCUMENT . LCURLY xtype RCURLY [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On LCURLY shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## DOCUMENT LCURLY
## LR(1) items:
xtype -> DOCUMENT LCURLY . xtype RCURLY [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On TEXT shift to state 1
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTION shift to state 3
-- On NONE shift to state 4
-- On NCNAME shift to state 5
-- On LPAR shift to state 6
-- On GROUP shift to state 8
-- On ELEMENT shift to state 10
-- On DOCUMENT shift to state 49
-- On COMMENT shift to state 51
-- On ATTRGROUP shift to state 52
-- On xtype shift to state 54
-- On qname shift to state 65
## Reductions:

State 51:
## Known stack suffix:
## COMMENT
## LR(1) items:
xtype -> COMMENT . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> COMMENT
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> COMMENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 52:
## Known stack suffix:
## ATTRGROUP
## LR(1) items:
xtype -> ATTRGROUP . qname [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## ATTRGROUP qname
## LR(1) items:
xtype -> ATTRGROUP qname . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> ATTRGROUP qname
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> ATTRGROUP qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 54:
## Known stack suffix:
## DOCUMENT LCURLY xtype
## LR(1) items:
xtype -> DOCUMENT LCURLY xtype . RCURLY [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . STAR [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . PLUS [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . QUESTION [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . COMMA xtype [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . BAR xtype [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . AMPERSAND xtype [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
## Transitions:
-- On STAR shift to state 55
-- On RCURLY shift to state 56
-- On QUESTION shift to state 57
-- On PLUS shift to state 58
-- On COMMA shift to state 59
-- On BAR shift to state 61
-- On AMPERSAND shift to state 63
## Reductions:

State 55:
## Known stack suffix:
## xtype STAR
## LR(1) items:
xtype -> xtype STAR . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> xtype STAR
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> xtype STAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 56:
## Known stack suffix:
## DOCUMENT LCURLY xtype RCURLY
## LR(1) items:
xtype -> DOCUMENT LCURLY xtype RCURLY . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> DOCUMENT LCURLY xtype RCURLY
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> DOCUMENT LCURLY xtype RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 57:
## Known stack suffix:
## xtype QUESTION
## LR(1) items:
xtype -> xtype QUESTION . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> xtype QUESTION
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> xtype QUESTION
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 58:
## Known stack suffix:
## xtype PLUS
## LR(1) items:
xtype -> xtype PLUS . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> xtype PLUS
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> xtype PLUS
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 59:
## Known stack suffix:
## xtype COMMA
## LR(1) items:
xtype -> xtype COMMA . xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On TEXT shift to state 1
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTION shift to state 3
-- On NONE shift to state 4
-- On NCNAME shift to state 5
-- On LPAR shift to state 6
-- On GROUP shift to state 8
-- On ELEMENT shift to state 10
-- On DOCUMENT shift to state 49
-- On COMMENT shift to state 51
-- On ATTRGROUP shift to state 52
-- On xtype shift to state 60
-- On qname shift to state 65
## Reductions:

State 60:
## Known stack suffix:
## xtype COMMA xtype
## LR(1) items:
xtype -> xtype . STAR [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . PLUS [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . QUESTION [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . COMMA xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype COMMA xtype . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . BAR xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . AMPERSAND xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On STAR shift to state 55
-- On QUESTION shift to state 57
-- On PLUS shift to state 58
-- On BAR shift to state 61
-- On AMPERSAND shift to state 63
## Reductions:
-- On SEMICOLON RPAR RCURLY COMMA #
--   reduce production xtype -> xtype COMMA xtype
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> xtype COMMA xtype
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 61:
## Known stack suffix:
## xtype BAR
## LR(1) items:
xtype -> xtype BAR . xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On TEXT shift to state 1
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTION shift to state 3
-- On NONE shift to state 4
-- On NCNAME shift to state 5
-- On LPAR shift to state 6
-- On GROUP shift to state 8
-- On ELEMENT shift to state 10
-- On DOCUMENT shift to state 49
-- On COMMENT shift to state 51
-- On ATTRGROUP shift to state 52
-- On xtype shift to state 62
-- On qname shift to state 65
## Reductions:

State 62:
## Known stack suffix:
## xtype BAR xtype
## LR(1) items:
xtype -> xtype . STAR [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . PLUS [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . QUESTION [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . COMMA xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . BAR xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype BAR xtype . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . AMPERSAND xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On STAR shift to state 55
-- On QUESTION shift to state 57
-- On PLUS shift to state 58
-- On AMPERSAND shift to state 63
## Reductions:
-- On SEMICOLON RPAR RCURLY COMMA BAR #
--   reduce production xtype -> xtype BAR xtype
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> xtype BAR xtype
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 63:
## Known stack suffix:
## xtype AMPERSAND
## LR(1) items:
xtype -> xtype AMPERSAND . xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On TEXT shift to state 1
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTION shift to state 3
-- On NONE shift to state 4
-- On NCNAME shift to state 5
-- On LPAR shift to state 6
-- On GROUP shift to state 8
-- On ELEMENT shift to state 10
-- On DOCUMENT shift to state 49
-- On COMMENT shift to state 51
-- On ATTRGROUP shift to state 52
-- On xtype shift to state 64
-- On qname shift to state 65
## Reductions:

State 64:
## Known stack suffix:
## xtype AMPERSAND xtype
## LR(1) items:
xtype -> xtype . STAR [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . PLUS [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . QUESTION [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . COMMA xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . BAR xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . AMPERSAND xtype [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype AMPERSAND xtype . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On STAR shift to state 55
-- On QUESTION shift to state 57
-- On PLUS shift to state 58
## Reductions:
-- On SEMICOLON RPAR RCURLY COMMA BAR AMPERSAND #
--   reduce production xtype -> xtype AMPERSAND xtype
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> xtype AMPERSAND xtype
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 65:
## Known stack suffix:
## qname
## LR(1) items:
xtype -> qname . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> qname
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 66:
## Known stack suffix:
## xtype
## LR(1) items:
extype -> xtype . [ RCURLY ]
extype -> xtype . SEMICOLON axtype [ RCURLY ]
xtype -> xtype . STAR [ STAR SEMICOLON RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . PLUS [ STAR SEMICOLON RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . QUESTION [ STAR SEMICOLON RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . COMMA xtype [ STAR SEMICOLON RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . BAR xtype [ STAR SEMICOLON RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . AMPERSAND xtype [ STAR SEMICOLON RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
## Transitions:
-- On STAR shift to state 55
-- On SEMICOLON shift to state 67
-- On QUESTION shift to state 57
-- On PLUS shift to state 58
-- On COMMA shift to state 59
-- On BAR shift to state 61
-- On AMPERSAND shift to state 63
## Reductions:
-- On RCURLY
--   reduce production extype -> xtype

State 67:
## Known stack suffix:
## xtype SEMICOLON
## LR(1) items:
extype -> xtype SEMICOLON . axtype [ RCURLY ]
## Transitions:
-- On LPAR shift to state 68
-- On ATTRIBUTE shift to state 70
-- On ATTRGROUP shift to state 74
-- On axtype shift to state 83
## Reductions:

State 68:
## Known stack suffix:
## LPAR
## LR(1) items:
axtype -> LPAR . RPAR [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
axtype -> LPAR . axtype RPAR [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
-- On RPAR shift to state 69
-- On LPAR shift to state 68
-- On ATTRIBUTE shift to state 70
-- On ATTRGROUP shift to state 74
-- On axtype shift to state 76
## Reductions:

State 69:
## Known stack suffix:
## LPAR RPAR
## LR(1) items:
axtype -> LPAR RPAR . [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
## Reductions:
-- On RPAR RCURLY QUESTION COMMA AMPERSAND #
--   reduce production axtype -> LPAR RPAR
** End-of-stream conflict on RPAR RCURLY QUESTION COMMA AMPERSAND
**   There is a tension between
**   (1) reducing production axtype -> LPAR RPAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 70:
## Known stack suffix:
## ATTRIBUTE
## LR(1) items:
axtype -> ATTRIBUTE . qname [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
axtype -> ATTRIBUTE . nameclass stype_specifier [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On QNAME shift to state 2
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On wildcard shift to state 14
-- On qname shift to state 71
-- On nameclass shift to state 72
## Reductions:

State 71:
## Known stack suffix:
## ATTRIBUTE qname
## LR(1) items:
axtype -> ATTRIBUTE qname . [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
nameclass -> qname . [ UNIONOF RESTRICTS OFSIMPLETYPE LISTOF ]
## Transitions:
## Reductions:
-- On RPAR RCURLY QUESTION COMMA AMPERSAND #
--   reduce production axtype -> ATTRIBUTE qname
-- On UNIONOF RESTRICTS OFSIMPLETYPE LISTOF
--   reduce production nameclass -> qname
** End-of-stream conflict on UNIONOF RPAR RESTRICTS RCURLY QUESTION OFSIMPLETYPE LISTOF COMMA AMPERSAND
**   There is a tension between
**   (1) reducing production axtype -> ATTRIBUTE qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 72:
## Known stack suffix:
## ATTRIBUTE nameclass
## LR(1) items:
axtype -> ATTRIBUTE nameclass . stype_specifier [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
-- On UNIONOF shift to state 19
-- On RESTRICTS shift to state 21
-- On OFSIMPLETYPE shift to state 38
-- On LISTOF shift to state 22
-- On stype_specifier shift to state 73
-- On stype_derivation shift to state 46
## Reductions:

State 73:
## Known stack suffix:
## ATTRIBUTE nameclass stype_specifier
## LR(1) items:
axtype -> ATTRIBUTE nameclass stype_specifier . [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
## Reductions:
-- On RPAR RCURLY QUESTION COMMA AMPERSAND #
--   reduce production axtype -> ATTRIBUTE nameclass stype_specifier
** End-of-stream conflict on RPAR RCURLY QUESTION COMMA AMPERSAND
**   There is a tension between
**   (1) reducing production axtype -> ATTRIBUTE nameclass stype_specifier
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 74:
## Known stack suffix:
## ATTRGROUP
## LR(1) items:
axtype -> ATTRGROUP . qname [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## ATTRGROUP qname
## LR(1) items:
axtype -> ATTRGROUP qname . [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
## Reductions:
-- On RPAR RCURLY QUESTION COMMA AMPERSAND #
--   reduce production axtype -> ATTRGROUP qname
** End-of-stream conflict on RPAR RCURLY QUESTION COMMA AMPERSAND
**   There is a tension between
**   (1) reducing production axtype -> ATTRGROUP qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 76:
## Known stack suffix:
## LPAR axtype
## LR(1) items:
axtype -> axtype . QUESTION [ RPAR QUESTION COMMA AMPERSAND ]
axtype -> axtype . COMMA axtype [ RPAR QUESTION COMMA AMPERSAND ]
axtype -> axtype . AMPERSAND axtype [ RPAR QUESTION COMMA AMPERSAND ]
axtype -> LPAR axtype . RPAR [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
-- On RPAR shift to state 77
-- On QUESTION shift to state 78
-- On COMMA shift to state 79
-- On AMPERSAND shift to state 81
## Reductions:

State 77:
## Known stack suffix:
## LPAR axtype RPAR
## LR(1) items:
axtype -> LPAR axtype RPAR . [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
## Reductions:
-- On RPAR RCURLY QUESTION COMMA AMPERSAND #
--   reduce production axtype -> LPAR axtype RPAR
** End-of-stream conflict on RPAR RCURLY QUESTION COMMA AMPERSAND
**   There is a tension between
**   (1) reducing production axtype -> LPAR axtype RPAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 78:
## Known stack suffix:
## axtype QUESTION
## LR(1) items:
axtype -> axtype QUESTION . [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
## Reductions:
-- On RPAR RCURLY QUESTION COMMA AMPERSAND #
--   reduce production axtype -> axtype QUESTION
** End-of-stream conflict on RPAR RCURLY QUESTION COMMA AMPERSAND
**   There is a tension between
**   (1) reducing production axtype -> axtype QUESTION
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 79:
## Known stack suffix:
## axtype COMMA
## LR(1) items:
axtype -> axtype COMMA . axtype [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
-- On LPAR shift to state 68
-- On ATTRIBUTE shift to state 70
-- On ATTRGROUP shift to state 74
-- On axtype shift to state 80
## Reductions:

State 80:
## Known stack suffix:
## axtype COMMA axtype
## LR(1) items:
axtype -> axtype . QUESTION [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
axtype -> axtype . COMMA axtype [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
axtype -> axtype COMMA axtype . [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
axtype -> axtype . AMPERSAND axtype [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
-- On QUESTION shift to state 78
-- On AMPERSAND shift to state 81
## Reductions:
-- On RPAR RCURLY COMMA #
--   reduce production axtype -> axtype COMMA axtype
** End-of-stream conflict on RPAR RCURLY QUESTION COMMA AMPERSAND
**   There is a tension between
**   (1) reducing production axtype -> axtype COMMA axtype
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 81:
## Known stack suffix:
## axtype AMPERSAND
## LR(1) items:
axtype -> axtype AMPERSAND . axtype [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
-- On LPAR shift to state 68
-- On ATTRIBUTE shift to state 70
-- On ATTRGROUP shift to state 74
-- On axtype shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## axtype AMPERSAND axtype
## LR(1) items:
axtype -> axtype . QUESTION [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
axtype -> axtype . COMMA axtype [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
axtype -> axtype . AMPERSAND axtype [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
axtype -> axtype AMPERSAND axtype . [ RPAR RCURLY QUESTION COMMA AMPERSAND # ]
## Transitions:
-- On QUESTION shift to state 78
## Reductions:
-- On RPAR RCURLY COMMA AMPERSAND #
--   reduce production axtype -> axtype AMPERSAND axtype
** End-of-stream conflict on RPAR RCURLY QUESTION COMMA AMPERSAND
**   There is a tension between
**   (1) reducing production axtype -> axtype AMPERSAND axtype
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 83:
## Known stack suffix:
## xtype SEMICOLON axtype
## LR(1) items:
axtype -> axtype . QUESTION [ RCURLY QUESTION COMMA AMPERSAND ]
axtype -> axtype . COMMA axtype [ RCURLY QUESTION COMMA AMPERSAND ]
axtype -> axtype . AMPERSAND axtype [ RCURLY QUESTION COMMA AMPERSAND ]
extype -> xtype SEMICOLON axtype . [ RCURLY ]
## Transitions:
-- On QUESTION shift to state 78
-- On COMMA shift to state 79
-- On AMPERSAND shift to state 81
## Reductions:
-- On RCURLY
--   reduce production extype -> xtype SEMICOLON axtype

State 84:
## Known stack suffix:
## deriv_mixed LCURLY extype
## LR(1) items:
ctype_derivation -> deriv_mixed LCURLY extype . RCURLY [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On RCURLY shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## deriv_mixed LCURLY extype RCURLY
## LR(1) items:
ctype_derivation -> deriv_mixed LCURLY extype RCURLY . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production ctype_derivation -> deriv_mixed LCURLY extype RCURLY
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production ctype_derivation -> deriv_mixed LCURLY extype RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 86:
## Known stack suffix:
## ctype_specifier
## LR(1) items:
xtype_specifier -> ctype_specifier . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype_specifier -> ctype_specifier
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype_specifier -> ctype_specifier
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 87:
## Known stack suffix:
## ctype_derivation
## LR(1) items:
ctype_specifier -> ctype_derivation . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production ctype_specifier -> ctype_derivation
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production ctype_specifier -> ctype_derivation
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 88:
## Known stack suffix:
## LPAR xtype
## LR(1) items:
xtype -> xtype . STAR [ STAR RPAR QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . PLUS [ STAR RPAR QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . QUESTION [ STAR RPAR QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . COMMA xtype [ STAR RPAR QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . BAR xtype [ STAR RPAR QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . AMPERSAND xtype [ STAR RPAR QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> LPAR xtype . RPAR [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On STAR shift to state 55
-- On RPAR shift to state 89
-- On QUESTION shift to state 57
-- On PLUS shift to state 58
-- On COMMA shift to state 59
-- On BAR shift to state 61
-- On AMPERSAND shift to state 63
## Reductions:

State 89:
## Known stack suffix:
## LPAR xtype RPAR
## LR(1) items:
xtype -> LPAR xtype RPAR . [ STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
## Reductions:
-- On STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
--   reduce production xtype -> LPAR xtype RPAR
** End-of-stream conflict on STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production xtype -> LPAR xtype RPAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 90:
## Known stack suffix:
## xtype
## LR(1) items:
extype -> xtype . [ # ]
extype -> xtype . SEMICOLON axtype [ # ]
xtype -> xtype . STAR [ STAR SEMICOLON QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . PLUS [ STAR SEMICOLON QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . QUESTION [ STAR SEMICOLON QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . COMMA xtype [ STAR SEMICOLON QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . BAR xtype [ STAR SEMICOLON QUESTION PLUS COMMA BAR AMPERSAND # ]
xtype -> xtype . AMPERSAND xtype [ STAR SEMICOLON QUESTION PLUS COMMA BAR AMPERSAND # ]
## Transitions:
-- On STAR shift to state 55
-- On SEMICOLON shift to state 91
-- On QUESTION shift to state 57
-- On PLUS shift to state 58
-- On COMMA shift to state 59
-- On BAR shift to state 61
-- On AMPERSAND shift to state 63
## Reductions:
-- On #
--   reduce production extype -> xtype
** End-of-stream conflict on STAR SEMICOLON QUESTION PLUS COMMA BAR AMPERSAND
**   There is a tension between
**   (1) reducing production extype -> xtype
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 91:
## Known stack suffix:
## xtype SEMICOLON
## LR(1) items:
extype -> xtype SEMICOLON . axtype [ # ]
## Transitions:
-- On LPAR shift to state 68
-- On ATTRIBUTE shift to state 70
-- On ATTRGROUP shift to state 74
-- On axtype shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## xtype SEMICOLON axtype
## LR(1) items:
axtype -> axtype . QUESTION [ QUESTION COMMA AMPERSAND # ]
axtype -> axtype . COMMA axtype [ QUESTION COMMA AMPERSAND # ]
axtype -> axtype . AMPERSAND axtype [ QUESTION COMMA AMPERSAND # ]
extype -> xtype SEMICOLON axtype . [ # ]
## Transitions:
-- On QUESTION shift to state 78
-- On COMMA shift to state 79
-- On AMPERSAND shift to state 81
## Reductions:
-- On #
--   reduce production extype -> xtype SEMICOLON axtype
** End-of-stream conflict on QUESTION COMMA AMPERSAND
**   There is a tension between
**   (1) reducing production extype -> xtype SEMICOLON axtype
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 93:
## Known stack suffix:
## extype
## LR(1) items:
extype' -> extype . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept extype

State 94:
## Known stack suffix:
##
## LR(1) items:
interface' -> . interface [ # ]
## Transitions:
-- On XQUERYVERSION shift to state 95
-- On opt_version shift to state 101
-- On interface shift to state 894
## Reductions:
-- On INTERFACENAMESPACE
--   reduce production opt_version ->

State 95:
## Known stack suffix:
## XQUERYVERSION
## LR(1) items:
opt_version -> XQUERYVERSION . STRING opt_encoding SEMICOLON [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MODULENAMESPACE MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INTERFACENAMESPACE INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On STRING shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## XQUERYVERSION STRING
## LR(1) items:
opt_version -> XQUERYVERSION STRING . opt_encoding SEMICOLON [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MODULENAMESPACE MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INTERFACENAMESPACE INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On ENCODING shift to state 97
-- On opt_encoding shift to state 99
## Reductions:
-- On SEMICOLON
--   reduce production opt_encoding ->

State 97:
## Known stack suffix:
## ENCODING
## LR(1) items:
opt_encoding -> ENCODING . STRING [ SEMICOLON ]
## Transitions:
-- On STRING shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## ENCODING STRING
## LR(1) items:
opt_encoding -> ENCODING STRING . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON
--   reduce production opt_encoding -> ENCODING STRING

State 99:
## Known stack suffix:
## XQUERYVERSION STRING opt_encoding
## LR(1) items:
opt_version -> XQUERYVERSION STRING opt_encoding . SEMICOLON [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MODULENAMESPACE MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INTERFACENAMESPACE INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## XQUERYVERSION STRING opt_encoding SEMICOLON
## LR(1) items:
opt_version -> XQUERYVERSION STRING opt_encoding SEMICOLON . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MODULENAMESPACE MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INTERFACENAMESPACE INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MODULENAMESPACE MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INTERFACENAMESPACE INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production opt_version -> XQUERYVERSION STRING opt_encoding SEMICOLON

State 101:
## Known stack suffix:
## opt_version
## LR(1) items:
interface -> opt_version . interfacedecl prolog EOF [ # ]
## Transitions:
-- On INTERFACENAMESPACE shift to state 102
-- On interfacedecl shift to state 107
## Reductions:

State 102:
## Known stack suffix:
## INTERFACENAMESPACE
## LR(1) items:
interfacedecl -> INTERFACENAMESPACE . NCNAME EQUALS STRING SEMICOLON [ IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI ]
## Transitions:
-- On NCNAME shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## INTERFACENAMESPACE NCNAME
## LR(1) items:
interfacedecl -> INTERFACENAMESPACE NCNAME . EQUALS STRING SEMICOLON [ IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI ]
## Transitions:
-- On EQUALS shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## INTERFACENAMESPACE NCNAME EQUALS
## LR(1) items:
interfacedecl -> INTERFACENAMESPACE NCNAME EQUALS . STRING SEMICOLON [ IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI ]
## Transitions:
-- On STRING shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## INTERFACENAMESPACE NCNAME EQUALS STRING
## LR(1) items:
interfacedecl -> INTERFACENAMESPACE NCNAME EQUALS STRING . SEMICOLON [ IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI ]
## Transitions:
-- On SEMICOLON shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## INTERFACENAMESPACE NCNAME EQUALS STRING SEMICOLON
## LR(1) items:
interfacedecl -> INTERFACENAMESPACE NCNAME EQUALS STRING SEMICOLON . [ IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI ]
## Transitions:
## Reductions:
-- On IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI
--   reduce production interfacedecl -> INTERFACENAMESPACE NCNAME EQUALS STRING SEMICOLON

State 107:
## Known stack suffix:
## opt_version interfacedecl
## LR(1) items:
interface -> opt_version interfacedecl . prolog EOF [ # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 285
-- On schema_decl shift to state 212
-- On prolog shift to state 892
## Reductions:
-- On EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
--   reduce production setters_and_first_declaration_list ->

State 108:
## Known stack suffix:
## IMPORTSERVICE
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSERVICE . NAMESPACE NCNAME EQUALS STRING setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSERVICE . NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NAMESPACE shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## IMPORTSERVICE NAMESPACE
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE . NCNAME EQUALS STRING setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE . NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NCNAME shift to state 110
## Reductions:

State 110:
## Known stack suffix:
## IMPORTSERVICE NAMESPACE NCNAME
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME . EQUALS STRING setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME . EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On EQUALS shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## IMPORTSERVICE NAMESPACE NCNAME EQUALS
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS . STRING setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS . STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 112
## Reductions:

State 112:
## Known stack suffix:
## IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING . AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On AT shift to state 280
-- On setters_and_first_declaration_list shift to state 284
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER AT
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 113:
## Known stack suffix:
## IMPORTSCHEMA
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA . STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA . NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA . NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA . DEFAULTELEMENT NAMESPACE STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA . DEFAULTELEMENT NAMESPACE STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 114
-- On NAMESPACE shift to state 261
-- On DEFAULTELEMENT shift to state 271
## Reductions:

State 114:
## Known stack suffix:
## IMPORTSCHEMA STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA STRING . AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 115
-- On AT shift to state 257
## Reductions:

State 115:
## Known stack suffix:
## IMPORTSCHEMA STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 256
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 116:
## Known stack suffix:
## IMPORTMODULE
## LR(1) items:
setters_and_first_declaration_list -> IMPORTMODULE . NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTMODULE . NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NAMESPACE shift to state 117
## Reductions:

State 117:
## Known stack suffix:
## IMPORTMODULE NAMESPACE
## LR(1) items:
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE . NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE . NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NCNAME shift to state 118
## Reductions:

State 118:
## Known stack suffix:
## IMPORTMODULE NAMESPACE NCNAME
## LR(1) items:
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME . EQUALS STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME . EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On EQUALS shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## IMPORTMODULE NAMESPACE NCNAME EQUALS
## LR(1) items:
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS . STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 120
## Reductions:

State 120:
## Known stack suffix:
## IMPORTMODULE NAMESPACE NCNAME EQUALS STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING . AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 121
-- On AT shift to state 252
## Reductions:

State 121:
## Known stack suffix:
## IMPORTMODULE NAMESPACE NCNAME EQUALS STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 251
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 122:
## Known stack suffix:
## IMPORTINTERFACE
## LR(1) items:
setters_and_first_declaration_list -> IMPORTINTERFACE . NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTINTERFACE . NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NAMESPACE shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## IMPORTINTERFACE NAMESPACE
## LR(1) items:
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE . NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE . NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NCNAME shift to state 124
## Reductions:

State 124:
## Known stack suffix:
## IMPORTINTERFACE NAMESPACE NCNAME
## LR(1) items:
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME . EQUALS STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME . EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On EQUALS shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## IMPORTINTERFACE NAMESPACE NCNAME EQUALS
## LR(1) items:
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS . STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING . AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 127
-- On AT shift to state 247
## Reductions:

State 127:
## Known stack suffix:
## IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 246
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 128:
## Known stack suffix:
## DECLARESCHEMALCURLY
## LR(1) items:
schema_decl -> DECLARESCHEMALCURLY . namespace_decls schema_decls type_decls RCURLY SEMICOLON [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE RCURLY QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESIMPLETYPE DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREGROUP DECLAREFUNCTION DECLAREELEMENT DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLARECOMPLEXTYPE DECLAREBOUNDARYSPACE DECLAREBASEURI DECLAREATTRIBUTE DECLAREATTRGROUP DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On DECLARENAMESPACE shift to state 129
-- On namespace_decls shift to state 135
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLARESCHEMALCURLY DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production namespace_decls ->

State 129:
## Known stack suffix:
## DECLARENAMESPACE
## LR(1) items:
namespace_decls -> DECLARENAMESPACE . NCNAME EQUALS STRING SEMICOLON namespace_decls [ RCURLY DECLARESIMPLETYPE DECLARESCHEMALCURLY DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On NCNAME shift to state 130
## Reductions:

State 130:
## Known stack suffix:
## DECLARENAMESPACE NCNAME
## LR(1) items:
namespace_decls -> DECLARENAMESPACE NCNAME . EQUALS STRING SEMICOLON namespace_decls [ RCURLY DECLARESIMPLETYPE DECLARESCHEMALCURLY DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On EQUALS shift to state 131
## Reductions:

State 131:
## Known stack suffix:
## DECLARENAMESPACE NCNAME EQUALS
## LR(1) items:
namespace_decls -> DECLARENAMESPACE NCNAME EQUALS . STRING SEMICOLON namespace_decls [ RCURLY DECLARESIMPLETYPE DECLARESCHEMALCURLY DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On STRING shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## DECLARENAMESPACE NCNAME EQUALS STRING
## LR(1) items:
namespace_decls -> DECLARENAMESPACE NCNAME EQUALS STRING . SEMICOLON namespace_decls [ RCURLY DECLARESIMPLETYPE DECLARESCHEMALCURLY DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On SEMICOLON shift to state 133
## Reductions:

State 133:
## Known stack suffix:
## DECLARENAMESPACE NCNAME EQUALS STRING SEMICOLON
## LR(1) items:
namespace_decls -> DECLARENAMESPACE NCNAME EQUALS STRING SEMICOLON . namespace_decls [ RCURLY DECLARESIMPLETYPE DECLARESCHEMALCURLY DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On DECLARENAMESPACE shift to state 129
-- On namespace_decls shift to state 134
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLARESCHEMALCURLY DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production namespace_decls ->

State 134:
## Known stack suffix:
## DECLARENAMESPACE NCNAME EQUALS STRING SEMICOLON namespace_decls
## LR(1) items:
namespace_decls -> DECLARENAMESPACE NCNAME EQUALS STRING SEMICOLON namespace_decls . [ RCURLY DECLARESIMPLETYPE DECLARESCHEMALCURLY DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLARESCHEMALCURLY DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production namespace_decls -> DECLARENAMESPACE NCNAME EQUALS STRING SEMICOLON namespace_decls

State 135:
## Known stack suffix:
## DECLARESCHEMALCURLY namespace_decls
## LR(1) items:
schema_decl -> DECLARESCHEMALCURLY namespace_decls . schema_decls type_decls RCURLY SEMICOLON [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE RCURLY QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESIMPLETYPE DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREGROUP DECLAREFUNCTION DECLAREELEMENT DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLARECOMPLEXTYPE DECLAREBOUNDARYSPACE DECLAREBASEURI DECLAREATTRIBUTE DECLAREATTRGROUP DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On DECLARESCHEMALCURLY shift to state 128
-- On schema_decls shift to state 136
-- On schema_decl shift to state 172
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production schema_decls ->

State 136:
## Known stack suffix:
## DECLARESCHEMALCURLY namespace_decls schema_decls
## LR(1) items:
schema_decl -> DECLARESCHEMALCURLY namespace_decls schema_decls . type_decls RCURLY SEMICOLON [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE RCURLY QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESIMPLETYPE DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREGROUP DECLAREFUNCTION DECLAREELEMENT DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLARECOMPLEXTYPE DECLAREBOUNDARYSPACE DECLAREBASEURI DECLAREATTRIBUTE DECLAREATTRGROUP DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On DECLARESIMPLETYPE shift to state 137
-- On DECLAREGROUP shift to state 140
-- On DECLAREELEMENT shift to state 145
-- On DECLARECOMPLEXTYPE shift to state 154
-- On DECLAREATTRIBUTE shift to state 159
-- On DECLAREATTRGROUP shift to state 162
-- On typedefinition shift to state 167
-- On type_decls shift to state 169
## Reductions:
-- On RCURLY
--   reduce production type_decls ->

State 137:
## Known stack suffix:
## DECLARESIMPLETYPE
## LR(1) items:
typedefinition -> DECLARESIMPLETYPE . stype_derivation SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On UNIONOF shift to state 19
-- On RESTRICTS shift to state 21
-- On LISTOF shift to state 22
-- On stype_derivation shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## DECLARESIMPLETYPE stype_derivation
## LR(1) items:
typedefinition -> DECLARESIMPLETYPE stype_derivation . SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On SEMICOLON shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## DECLARESIMPLETYPE stype_derivation SEMICOLON
## LR(1) items:
typedefinition -> DECLARESIMPLETYPE stype_derivation SEMICOLON . [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production typedefinition -> DECLARESIMPLETYPE stype_derivation SEMICOLON

State 140:
## Known stack suffix:
## DECLAREGROUP
## LR(1) items:
typedefinition -> DECLAREGROUP . LCURLY xtype RCURLY SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On LCURLY shift to state 141
## Reductions:

State 141:
## Known stack suffix:
## DECLAREGROUP LCURLY
## LR(1) items:
typedefinition -> DECLAREGROUP LCURLY . xtype RCURLY SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On TEXT shift to state 1
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTION shift to state 3
-- On NONE shift to state 4
-- On NCNAME shift to state 5
-- On LPAR shift to state 6
-- On GROUP shift to state 8
-- On ELEMENT shift to state 10
-- On DOCUMENT shift to state 49
-- On COMMENT shift to state 51
-- On ATTRGROUP shift to state 52
-- On xtype shift to state 142
-- On qname shift to state 65
## Reductions:

State 142:
## Known stack suffix:
## DECLAREGROUP LCURLY xtype
## LR(1) items:
typedefinition -> DECLAREGROUP LCURLY xtype . RCURLY SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
xtype -> xtype . STAR [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . PLUS [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . QUESTION [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . COMMA xtype [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . BAR xtype [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
xtype -> xtype . AMPERSAND xtype [ STAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND ]
## Transitions:
-- On STAR shift to state 55
-- On RCURLY shift to state 143
-- On QUESTION shift to state 57
-- On PLUS shift to state 58
-- On COMMA shift to state 59
-- On BAR shift to state 61
-- On AMPERSAND shift to state 63
## Reductions:

State 143:
## Known stack suffix:
## DECLAREGROUP LCURLY xtype RCURLY
## LR(1) items:
typedefinition -> DECLAREGROUP LCURLY xtype RCURLY . SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On SEMICOLON shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## DECLAREGROUP LCURLY xtype RCURLY SEMICOLON
## LR(1) items:
typedefinition -> DECLAREGROUP LCURLY xtype RCURLY SEMICOLON . [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production typedefinition -> DECLAREGROUP LCURLY xtype RCURLY SEMICOLON

State 145:
## Known stack suffix:
## DECLAREELEMENT
## LR(1) items:
typedefinition -> DECLAREELEMENT . xelem_derivation SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On SUBSTITUTESFOR shift to state 146
-- On NILLABLE shift to state 149
-- On xelem_derivation shift to state 150
-- On substitutes_for_nillable shift to state 152
## Reductions:
-- On UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS
--   reduce production substitutes_for_nillable ->

State 146:
## Known stack suffix:
## SUBSTITUTESFOR
## LR(1) items:
substitutes_for_nillable -> SUBSTITUTESFOR . qname [ UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS ]
substitutes_for_nillable -> SUBSTITUTESFOR . qname NILLABLE [ UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## SUBSTITUTESFOR qname
## LR(1) items:
substitutes_for_nillable -> SUBSTITUTESFOR qname . [ UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS ]
substitutes_for_nillable -> SUBSTITUTESFOR qname . NILLABLE [ UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS ]
## Transitions:
-- On NILLABLE shift to state 148
## Reductions:
-- On UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS
--   reduce production substitutes_for_nillable -> SUBSTITUTESFOR qname

State 148:
## Known stack suffix:
## SUBSTITUTESFOR qname NILLABLE
## LR(1) items:
substitutes_for_nillable -> SUBSTITUTESFOR qname NILLABLE . [ UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS ]
## Transitions:
## Reductions:
-- On UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS
--   reduce production substitutes_for_nillable -> SUBSTITUTESFOR qname NILLABLE

State 149:
## Known stack suffix:
## NILLABLE
## LR(1) items:
substitutes_for_nillable -> NILLABLE . [ UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS ]
## Transitions:
## Reductions:
-- On UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS
--   reduce production substitutes_for_nillable -> NILLABLE

State 150:
## Known stack suffix:
## DECLAREELEMENT xelem_derivation
## LR(1) items:
typedefinition -> DECLAREELEMENT xelem_derivation . SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On SEMICOLON shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## DECLAREELEMENT xelem_derivation SEMICOLON
## LR(1) items:
typedefinition -> DECLAREELEMENT xelem_derivation SEMICOLON . [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production typedefinition -> DECLAREELEMENT xelem_derivation SEMICOLON

State 152:
## Known stack suffix:
## substitutes_for_nillable
## LR(1) items:
xelem_derivation -> substitutes_for_nillable . xtype_specifier [ SEMICOLON ]
## Transitions:
-- On UNIONOF shift to state 19
-- On RESTRICTS shift to state 33
-- On OFTYPE shift to state 36
-- On OFSIMPLETYPE shift to state 38
-- On MIXED shift to state 40
-- On LISTOF shift to state 22
-- On EXTENDS shift to state 41
-- On xtype_specifier shift to state 153
-- On stype_specifier shift to state 45
-- On stype_derivation shift to state 46
-- On deriv_mixed shift to state 47
-- On ctype_specifier shift to state 86
-- On ctype_derivation shift to state 87
## Reductions:
-- On LCURLY
--   reduce production deriv_mixed ->

State 153:
## Known stack suffix:
## substitutes_for_nillable xtype_specifier
## LR(1) items:
xelem_derivation -> substitutes_for_nillable xtype_specifier . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON
--   reduce production xelem_derivation -> substitutes_for_nillable xtype_specifier

State 154:
## Known stack suffix:
## DECLARECOMPLEXTYPE
## LR(1) items:
typedefinition -> DECLARECOMPLEXTYPE . ctype_derivation SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On RESTRICTS shift to state 155
-- On MIXED shift to state 40
-- On EXTENDS shift to state 41
-- On deriv_mixed shift to state 47
-- On ctype_derivation shift to state 157
## Reductions:
-- On LCURLY
--   reduce production deriv_mixed ->

State 155:
## Known stack suffix:
## RESTRICTS
## LR(1) items:
deriv_mixed -> RESTRICTS . qname [ LCURLY ]
deriv_mixed -> RESTRICTS . qname MIXED [ LCURLY ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## RESTRICTS qname
## LR(1) items:
deriv_mixed -> RESTRICTS qname . [ LCURLY ]
deriv_mixed -> RESTRICTS qname . MIXED [ LCURLY ]
## Transitions:
-- On MIXED shift to state 35
## Reductions:
-- On LCURLY
--   reduce production deriv_mixed -> RESTRICTS qname

State 157:
## Known stack suffix:
## DECLARECOMPLEXTYPE ctype_derivation
## LR(1) items:
typedefinition -> DECLARECOMPLEXTYPE ctype_derivation . SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On SEMICOLON shift to state 158
## Reductions:

State 158:
## Known stack suffix:
## DECLARECOMPLEXTYPE ctype_derivation SEMICOLON
## LR(1) items:
typedefinition -> DECLARECOMPLEXTYPE ctype_derivation SEMICOLON . [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production typedefinition -> DECLARECOMPLEXTYPE ctype_derivation SEMICOLON

State 159:
## Known stack suffix:
## DECLAREATTRIBUTE
## LR(1) items:
typedefinition -> DECLAREATTRIBUTE . stype_specifier SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On UNIONOF shift to state 19
-- On RESTRICTS shift to state 21
-- On OFSIMPLETYPE shift to state 38
-- On LISTOF shift to state 22
-- On stype_specifier shift to state 160
-- On stype_derivation shift to state 46
## Reductions:

State 160:
## Known stack suffix:
## DECLAREATTRIBUTE stype_specifier
## LR(1) items:
typedefinition -> DECLAREATTRIBUTE stype_specifier . SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On SEMICOLON shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## DECLAREATTRIBUTE stype_specifier SEMICOLON
## LR(1) items:
typedefinition -> DECLAREATTRIBUTE stype_specifier SEMICOLON . [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production typedefinition -> DECLAREATTRIBUTE stype_specifier SEMICOLON

State 162:
## Known stack suffix:
## DECLAREATTRGROUP
## LR(1) items:
typedefinition -> DECLAREATTRGROUP . LCURLY axtype RCURLY SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On LCURLY shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## DECLAREATTRGROUP LCURLY
## LR(1) items:
typedefinition -> DECLAREATTRGROUP LCURLY . axtype RCURLY SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On LPAR shift to state 68
-- On ATTRIBUTE shift to state 70
-- On ATTRGROUP shift to state 74
-- On axtype shift to state 164
## Reductions:

State 164:
## Known stack suffix:
## DECLAREATTRGROUP LCURLY axtype
## LR(1) items:
axtype -> axtype . QUESTION [ RCURLY QUESTION COMMA AMPERSAND ]
axtype -> axtype . COMMA axtype [ RCURLY QUESTION COMMA AMPERSAND ]
axtype -> axtype . AMPERSAND axtype [ RCURLY QUESTION COMMA AMPERSAND ]
typedefinition -> DECLAREATTRGROUP LCURLY axtype . RCURLY SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On RCURLY shift to state 165
-- On QUESTION shift to state 78
-- On COMMA shift to state 79
-- On AMPERSAND shift to state 81
## Reductions:

State 165:
## Known stack suffix:
## DECLAREATTRGROUP LCURLY axtype RCURLY
## LR(1) items:
typedefinition -> DECLAREATTRGROUP LCURLY axtype RCURLY . SEMICOLON [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On SEMICOLON shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## DECLAREATTRGROUP LCURLY axtype RCURLY SEMICOLON
## LR(1) items:
typedefinition -> DECLAREATTRGROUP LCURLY axtype RCURLY SEMICOLON . [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production typedefinition -> DECLAREATTRGROUP LCURLY axtype RCURLY SEMICOLON

State 167:
## Known stack suffix:
## typedefinition
## LR(1) items:
type_decls -> typedefinition . type_decls [ RCURLY ]
## Transitions:
-- On DECLARESIMPLETYPE shift to state 137
-- On DECLAREGROUP shift to state 140
-- On DECLAREELEMENT shift to state 145
-- On DECLARECOMPLEXTYPE shift to state 154
-- On DECLAREATTRIBUTE shift to state 159
-- On DECLAREATTRGROUP shift to state 162
-- On typedefinition shift to state 167
-- On type_decls shift to state 168
## Reductions:
-- On RCURLY
--   reduce production type_decls ->

State 168:
## Known stack suffix:
## typedefinition type_decls
## LR(1) items:
type_decls -> typedefinition type_decls . [ RCURLY ]
## Transitions:
## Reductions:
-- On RCURLY
--   reduce production type_decls -> typedefinition type_decls

State 169:
## Known stack suffix:
## DECLARESCHEMALCURLY namespace_decls schema_decls type_decls
## LR(1) items:
schema_decl -> DECLARESCHEMALCURLY namespace_decls schema_decls type_decls . RCURLY SEMICOLON [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE RCURLY QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESIMPLETYPE DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREGROUP DECLAREFUNCTION DECLAREELEMENT DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLARECOMPLEXTYPE DECLAREBOUNDARYSPACE DECLAREBASEURI DECLAREATTRIBUTE DECLAREATTRGROUP DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On RCURLY shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## DECLARESCHEMALCURLY namespace_decls schema_decls type_decls RCURLY
## LR(1) items:
schema_decl -> DECLARESCHEMALCURLY namespace_decls schema_decls type_decls RCURLY . SEMICOLON [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE RCURLY QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESIMPLETYPE DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREGROUP DECLAREFUNCTION DECLAREELEMENT DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLARECOMPLEXTYPE DECLAREBOUNDARYSPACE DECLAREBASEURI DECLAREATTRIBUTE DECLAREATTRGROUP DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 171
## Reductions:

State 171:
## Known stack suffix:
## DECLARESCHEMALCURLY namespace_decls schema_decls type_decls RCURLY SEMICOLON
## LR(1) items:
schema_decl -> DECLARESCHEMALCURLY namespace_decls schema_decls type_decls RCURLY SEMICOLON . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE RCURLY QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESIMPLETYPE DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREGROUP DECLAREFUNCTION DECLAREELEMENT DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLARECOMPLEXTYPE DECLAREBOUNDARYSPACE DECLAREBASEURI DECLAREATTRIBUTE DECLAREATTRGROUP DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE RCURLY QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESIMPLETYPE DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREGROUP DECLAREFUNCTION DECLAREELEMENT DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLARECOMPLEXTYPE DECLAREBOUNDARYSPACE DECLAREBASEURI DECLAREATTRIBUTE DECLAREATTRGROUP DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production schema_decl -> DECLARESCHEMALCURLY namespace_decls schema_decls type_decls RCURLY SEMICOLON
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE RCURLY QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESIMPLETYPE DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREGROUP DECLAREFUNCTION DECLAREELEMENT DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLARECOMPLEXTYPE DECLAREBOUNDARYSPACE DECLAREBASEURI DECLAREATTRIBUTE DECLAREATTRGROUP DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production schema_decl -> DECLARESCHEMALCURLY namespace_decls schema_decls type_decls RCURLY SEMICOLON
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 172:
## Known stack suffix:
## schema_decl
## LR(1) items:
schema_decls -> schema_decl . schema_decls [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
-- On DECLARESCHEMALCURLY shift to state 128
-- On schema_decls shift to state 173
-- On schema_decl shift to state 172
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production schema_decls ->

State 173:
## Known stack suffix:
## schema_decl schema_decls
## LR(1) items:
schema_decls -> schema_decl schema_decls . [ RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP ]
## Transitions:
## Reductions:
-- On RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
--   reduce production schema_decls -> schema_decl schema_decls

State 174:
## Known stack suffix:
## DECLAREORDERING
## LR(1) items:
setters_and_first_declaration_list -> DECLAREORDERING . ORDERED SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLAREORDERING . UNORDERED SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On UNORDERED shift to state 175
-- On ORDERED shift to state 243
## Reductions:

State 175:
## Known stack suffix:
## DECLAREORDERING UNORDERED
## LR(1) items:
setters_and_first_declaration_list -> DECLAREORDERING UNORDERED . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## DECLAREORDERING UNORDERED SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLAREORDERING UNORDERED SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 242
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 177:
## Known stack suffix:
## DECLARENAMESPACE
## LR(1) items:
setters_and_first_declaration_list -> DECLARENAMESPACE . NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NCNAME shift to state 178
## Reductions:

State 178:
## Known stack suffix:
## DECLARENAMESPACE NCNAME
## LR(1) items:
setters_and_first_declaration_list -> DECLARENAMESPACE NCNAME . EQUALS STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On EQUALS shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## DECLARENAMESPACE NCNAME EQUALS
## LR(1) items:
setters_and_first_declaration_list -> DECLARENAMESPACE NCNAME EQUALS . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## DECLARENAMESPACE NCNAME EQUALS STRING
## LR(1) items:
setters_and_first_declaration_list -> DECLARENAMESPACE NCNAME EQUALS STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## DECLARENAMESPACE NCNAME EQUALS STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLARENAMESPACE NCNAME EQUALS STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 241
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 182:
## Known stack suffix:
## DECLAREDEFAULTORDER
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTORDER . EMPTY GREATEST SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLAREDEFAULTORDER . EMPTY LEAST SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On EMPTY shift to state 183
## Reductions:

State 183:
## Known stack suffix:
## DECLAREDEFAULTORDER EMPTY
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY . GREATEST SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY . LEAST SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On LEAST shift to state 184
-- On GREATEST shift to state 238
## Reductions:

State 184:
## Known stack suffix:
## DECLAREDEFAULTORDER EMPTY LEAST
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY LEAST . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## DECLAREDEFAULTORDER EMPTY LEAST SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY LEAST SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 237
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 186:
## Known stack suffix:
## DECLAREDEFAULTFUNCTION
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTFUNCTION . NAMESPACE STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NAMESPACE shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## DECLAREDEFAULTFUNCTION NAMESPACE
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTFUNCTION NAMESPACE . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## DECLAREDEFAULTFUNCTION NAMESPACE STRING
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTFUNCTION NAMESPACE STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## DECLAREDEFAULTFUNCTION NAMESPACE STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTFUNCTION NAMESPACE STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 236
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 190:
## Known stack suffix:
## DECLAREDEFAULTELEMENT
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTELEMENT . NAMESPACE STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NAMESPACE shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## DECLAREDEFAULTELEMENT NAMESPACE
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTELEMENT NAMESPACE . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 192
## Reductions:

State 192:
## Known stack suffix:
## DECLAREDEFAULTELEMENT NAMESPACE STRING
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTELEMENT NAMESPACE STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## DECLAREDEFAULTELEMENT NAMESPACE STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTELEMENT NAMESPACE STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 235
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 194:
## Known stack suffix:
## DECLAREDEFAULTCOLLATION
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTCOLLATION . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 195
## Reductions:

State 195:
## Known stack suffix:
## DECLAREDEFAULTCOLLATION STRING
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTCOLLATION STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## DECLAREDEFAULTCOLLATION STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTCOLLATION STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 234
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 197:
## Known stack suffix:
## DECLARECOPYNAMESPACES
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES . PRESERVE COMMA INHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES . NOPRESERVE COMMA INHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES . PRESERVE COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES . NOPRESERVE COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On PRESERVE shift to state 198
-- On NOPRESERVE shift to state 226
## Reductions:

State 198:
## Known stack suffix:
## DECLARECOPYNAMESPACES PRESERVE
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE . COMMA INHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE . COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On COMMA shift to state 199
## Reductions:

State 199:
## Known stack suffix:
## DECLARECOPYNAMESPACES PRESERVE COMMA
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA . INHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA . NOINHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NOINHERIT shift to state 200
-- On INHERIT shift to state 223
## Reductions:

State 200:
## Known stack suffix:
## DECLARECOPYNAMESPACES PRESERVE COMMA NOINHERIT
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA NOINHERIT . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 201
## Reductions:

State 201:
## Known stack suffix:
## DECLARECOPYNAMESPACES PRESERVE COMMA NOINHERIT SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA NOINHERIT SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 222
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 202:
## Known stack suffix:
## DECLARECONSTRUCTION
## LR(1) items:
setters_and_first_declaration_list -> DECLARECONSTRUCTION . STRIP SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLARECONSTRUCTION . PRESERVE SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRIP shift to state 203
-- On PRESERVE shift to state 219
## Reductions:

State 203:
## Known stack suffix:
## DECLARECONSTRUCTION STRIP
## LR(1) items:
setters_and_first_declaration_list -> DECLARECONSTRUCTION STRIP . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 204
## Reductions:

State 204:
## Known stack suffix:
## DECLARECONSTRUCTION STRIP SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLARECONSTRUCTION STRIP SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 218
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 205:
## Known stack suffix:
## DECLAREBOUNDARYSPACE
## LR(1) items:
setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE . STRIP SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE . PRESERVE SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRIP shift to state 206
-- On PRESERVE shift to state 215
## Reductions:

State 206:
## Known stack suffix:
## DECLAREBOUNDARYSPACE STRIP
## LR(1) items:
setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE STRIP . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 207
## Reductions:

State 207:
## Known stack suffix:
## DECLAREBOUNDARYSPACE STRIP SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE STRIP SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 214
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 208:
## Known stack suffix:
## DECLAREBASEURI
## LR(1) items:
setters_and_first_declaration_list -> DECLAREBASEURI . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## DECLAREBASEURI STRING
## LR(1) items:
setters_and_first_declaration_list -> DECLAREBASEURI STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## DECLAREBASEURI STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLAREBASEURI STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 211
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 211:
## Known stack suffix:
## DECLAREBASEURI STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLAREBASEURI STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLAREBASEURI STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLAREBASEURI STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 212:
## Known stack suffix:
## schema_decl
## LR(1) items:
setters_and_first_declaration_list -> schema_decl . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 213
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 213:
## Known stack suffix:
## schema_decl setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> schema_decl setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> schema_decl setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> schema_decl setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 214:
## Known stack suffix:
## DECLAREBOUNDARYSPACE STRIP SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE STRIP SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE STRIP SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE STRIP SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 215:
## Known stack suffix:
## DECLAREBOUNDARYSPACE PRESERVE
## LR(1) items:
setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE PRESERVE . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 216
## Reductions:

State 216:
## Known stack suffix:
## DECLAREBOUNDARYSPACE PRESERVE SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE PRESERVE SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 217
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 217:
## Known stack suffix:
## DECLAREBOUNDARYSPACE PRESERVE SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE PRESERVE SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE PRESERVE SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLAREBOUNDARYSPACE PRESERVE SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 218:
## Known stack suffix:
## DECLARECONSTRUCTION STRIP SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLARECONSTRUCTION STRIP SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLARECONSTRUCTION STRIP SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLARECONSTRUCTION STRIP SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 219:
## Known stack suffix:
## DECLARECONSTRUCTION PRESERVE
## LR(1) items:
setters_and_first_declaration_list -> DECLARECONSTRUCTION PRESERVE . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 220
## Reductions:

State 220:
## Known stack suffix:
## DECLARECONSTRUCTION PRESERVE SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLARECONSTRUCTION PRESERVE SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 221
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 221:
## Known stack suffix:
## DECLARECONSTRUCTION PRESERVE SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLARECONSTRUCTION PRESERVE SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLARECONSTRUCTION PRESERVE SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLARECONSTRUCTION PRESERVE SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 222:
## Known stack suffix:
## DECLARECOPYNAMESPACES PRESERVE COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 223:
## Known stack suffix:
## DECLARECOPYNAMESPACES PRESERVE COMMA INHERIT
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA INHERIT . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## DECLARECOPYNAMESPACES PRESERVE COMMA INHERIT SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA INHERIT SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 225
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 225:
## Known stack suffix:
## DECLARECOPYNAMESPACES PRESERVE COMMA INHERIT SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA INHERIT SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA INHERIT SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLARECOPYNAMESPACES PRESERVE COMMA INHERIT SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 226:
## Known stack suffix:
## DECLARECOPYNAMESPACES NOPRESERVE
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE . COMMA INHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE . COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On COMMA shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## DECLARECOPYNAMESPACES NOPRESERVE COMMA
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA . INHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA . NOINHERIT SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NOINHERIT shift to state 228
-- On INHERIT shift to state 231
## Reductions:

State 228:
## Known stack suffix:
## DECLARECOPYNAMESPACES NOPRESERVE COMMA NOINHERIT
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA NOINHERIT . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 229
## Reductions:

State 229:
## Known stack suffix:
## DECLARECOPYNAMESPACES NOPRESERVE COMMA NOINHERIT SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA NOINHERIT SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 230
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 230:
## Known stack suffix:
## DECLARECOPYNAMESPACES NOPRESERVE COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA NOINHERIT SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 231:
## Known stack suffix:
## DECLARECOPYNAMESPACES NOPRESERVE COMMA INHERIT
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA INHERIT . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 232
## Reductions:

State 232:
## Known stack suffix:
## DECLARECOPYNAMESPACES NOPRESERVE COMMA INHERIT SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA INHERIT SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 233
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 233:
## Known stack suffix:
## DECLARECOPYNAMESPACES NOPRESERVE COMMA INHERIT SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA INHERIT SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA INHERIT SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLARECOPYNAMESPACES NOPRESERVE COMMA INHERIT SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 234:
## Known stack suffix:
## DECLAREDEFAULTCOLLATION STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTCOLLATION STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLAREDEFAULTCOLLATION STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLAREDEFAULTCOLLATION STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 235:
## Known stack suffix:
## DECLAREDEFAULTELEMENT NAMESPACE STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTELEMENT NAMESPACE STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLAREDEFAULTELEMENT NAMESPACE STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLAREDEFAULTELEMENT NAMESPACE STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 236:
## Known stack suffix:
## DECLAREDEFAULTFUNCTION NAMESPACE STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTFUNCTION NAMESPACE STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLAREDEFAULTFUNCTION NAMESPACE STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLAREDEFAULTFUNCTION NAMESPACE STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 237:
## Known stack suffix:
## DECLAREDEFAULTORDER EMPTY LEAST SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY LEAST SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY LEAST SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY LEAST SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 238:
## Known stack suffix:
## DECLAREDEFAULTORDER EMPTY GREATEST
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY GREATEST . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 239
## Reductions:

State 239:
## Known stack suffix:
## DECLAREDEFAULTORDER EMPTY GREATEST SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY GREATEST SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 240
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 240:
## Known stack suffix:
## DECLAREDEFAULTORDER EMPTY GREATEST SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY GREATEST SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY GREATEST SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLAREDEFAULTORDER EMPTY GREATEST SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 241:
## Known stack suffix:
## DECLARENAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLARENAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLARENAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLARENAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 242:
## Known stack suffix:
## DECLAREORDERING UNORDERED SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLAREORDERING UNORDERED SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLAREORDERING UNORDERED SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLAREORDERING UNORDERED SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 243:
## Known stack suffix:
## DECLAREORDERING ORDERED
## LR(1) items:
setters_and_first_declaration_list -> DECLAREORDERING ORDERED . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 244
## Reductions:

State 244:
## Known stack suffix:
## DECLAREORDERING ORDERED SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> DECLAREORDERING ORDERED SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 245
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 245:
## Known stack suffix:
## DECLAREORDERING ORDERED SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> DECLAREORDERING ORDERED SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> DECLAREORDERING ORDERED SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> DECLAREORDERING ORDERED SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 246:
## Known stack suffix:
## IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 247:
## Known stack suffix:
## IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING AT
## LR(1) items:
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING AT . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 248
## Reductions:

State 248:
## Known stack suffix:
## IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING AT STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING AT STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 249
## Reductions:

State 249:
## Known stack suffix:
## IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 250
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 250:
## Known stack suffix:
## IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTINTERFACE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 251:
## Known stack suffix:
## IMPORTMODULE NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 252:
## Known stack suffix:
## IMPORTMODULE NAMESPACE NCNAME EQUALS STRING AT
## LR(1) items:
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING AT . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## IMPORTMODULE NAMESPACE NCNAME EQUALS STRING AT STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING AT STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 254
## Reductions:

State 254:
## Known stack suffix:
## IMPORTMODULE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 255
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 255:
## Known stack suffix:
## IMPORTMODULE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTMODULE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 256:
## Known stack suffix:
## IMPORTSCHEMA STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTSCHEMA STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTSCHEMA STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 257:
## Known stack suffix:
## IMPORTSCHEMA STRING AT
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA STRING AT . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 258
## Reductions:

State 258:
## Known stack suffix:
## IMPORTSCHEMA STRING AT STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA STRING AT STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 259
## Reductions:

State 259:
## Known stack suffix:
## IMPORTSCHEMA STRING AT STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA STRING AT STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 260
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 260:
## Known stack suffix:
## IMPORTSCHEMA STRING AT STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA STRING AT STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTSCHEMA STRING AT STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTSCHEMA STRING AT STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 261:
## Known stack suffix:
## IMPORTSCHEMA NAMESPACE
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE . NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE . NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NCNAME shift to state 262
## Reductions:

State 262:
## Known stack suffix:
## IMPORTSCHEMA NAMESPACE NCNAME
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME . EQUALS STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME . EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On EQUALS shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## IMPORTSCHEMA NAMESPACE NCNAME EQUALS
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS . STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 264
## Reductions:

State 264:
## Known stack suffix:
## IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING . AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 265
-- On AT shift to state 267
## Reductions:

State 265:
## Known stack suffix:
## IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 266
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 266:
## Known stack suffix:
## IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 267:
## Known stack suffix:
## IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING AT
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING AT . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING AT STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING AT STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 269
## Reductions:

State 269:
## Known stack suffix:
## IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 270
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 270:
## Known stack suffix:
## IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTSCHEMA NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 271:
## Known stack suffix:
## IMPORTSCHEMA DEFAULTELEMENT
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT . NAMESPACE STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT . NAMESPACE STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On NAMESPACE shift to state 272
## Reductions:

State 272:
## Known stack suffix:
## IMPORTSCHEMA DEFAULTELEMENT NAMESPACE
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE . STRING AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 273
## Reductions:

State 273:
## Known stack suffix:
## IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING . AT STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 274
-- On AT shift to state 276
## Reductions:

State 274:
## Known stack suffix:
## IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 275
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 275:
## Known stack suffix:
## IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 276:
## Known stack suffix:
## IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING AT
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING AT . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 277
## Reductions:

State 277:
## Known stack suffix:
## IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING AT STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING AT STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 278
## Reductions:

State 278:
## Known stack suffix:
## IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING AT STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING AT STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 279
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 279:
## Known stack suffix:
## IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING AT STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING AT STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING AT STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTSCHEMA DEFAULTELEMENT NAMESPACE STRING AT STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 280:
## Known stack suffix:
## IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING AT
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING AT . STRING SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On STRING shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING AT STRING
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING AT STRING . SEMICOLON setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On SEMICOLON shift to state 282
## Reductions:

State 282:
## Known stack suffix:
## IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON . setters_and_first_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 283
-- On schema_decl shift to state 212
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 283:
## Known stack suffix:
## IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING AT STRING SEMICOLON setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 284:
## Known stack suffix:
## IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING setters_and_first_declaration_list
## LR(1) items:
setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING setters_and_first_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER # ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
--   reduce production setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING setters_and_first_declaration_list
** End-of-stream conflict on WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list -> IMPORTSERVICE NAMESPACE NCNAME EQUALS STRING setters_and_first_declaration_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 285:
## Known stack suffix:
## setters_and_first_declaration_list
## LR(1) items:
prolog -> setters_and_first_declaration_list . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 891
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 286:
## Known stack suffix:
## DECLAREVARIABLE
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE . qname opt_type_declaration COLONEQUALS expr SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> DECLAREVARIABLE . qname opt_type_declaration EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 287
## Reductions:

State 287:
## Known stack suffix:
## DECLAREVARIABLE qname
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname . opt_type_declaration COLONEQUALS expr SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> DECLAREVARIABLE qname . opt_type_declaration EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On AS shift to state 288
-- On opt_type_declaration shift to state 343
## Reductions:
-- On EXTERNAL COLONEQUALS
--   reduce production opt_type_declaration ->

State 288:
## Known stack suffix:
## AS
## LR(1) items:
opt_type_declaration -> AS . sequencetype [ IN EXTERNAL COLONEQUALS AT ]
## Transitions:
-- On TYPELPAR shift to state 289
-- On TEXTLPAR shift to state 291
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAMESTAR shift to state 296
-- On QNAMEQUESTION shift to state 297
-- On QNAMEPLUS shift to state 298
-- On QNAME shift to state 299
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NUMERICLPAR shift to state 303
-- On NODELPAR shift to state 304
-- On ITEMLPAR shift to state 305
-- On EMPTYSEQUENCELPAR shift to state 306
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On ANYSTRINGLPAR shift to state 333
-- On sequencetype shift to state 334
-- On qname_occurrence shift to state 335
-- On kindtest shift to state 336
-- On itemtype shift to state 337
## Reductions:

State 289:
## Known stack suffix:
## TYPELPAR
## LR(1) items:
itemtype -> TYPELPAR . qname [ RPAR ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 290
## Reductions:

State 290:
## Known stack suffix:
## TYPELPAR qname
## LR(1) items:
itemtype -> TYPELPAR qname . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production itemtype -> TYPELPAR qname

State 291:
## Known stack suffix:
## TEXTLPAR
## LR(1) items:
kindtest -> TEXTLPAR . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production kindtest -> TEXTLPAR

State 292:
## Known stack suffix:
## SCHEMAELEMENTLPAR
## LR(1) items:
kindtest -> SCHEMAELEMENTLPAR . qname [ RPAR ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 293
## Reductions:

State 293:
## Known stack suffix:
## SCHEMAELEMENTLPAR qname
## LR(1) items:
kindtest -> SCHEMAELEMENTLPAR qname . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production kindtest -> SCHEMAELEMENTLPAR qname

State 294:
## Known stack suffix:
## SCHEMAATTRIBUTELPAR
## LR(1) items:
kindtest -> SCHEMAATTRIBUTELPAR . qname [ RPAR ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 295
## Reductions:

State 295:
## Known stack suffix:
## SCHEMAATTRIBUTELPAR qname
## LR(1) items:
kindtest -> SCHEMAATTRIBUTELPAR qname . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production kindtest -> SCHEMAATTRIBUTELPAR qname

State 296:
## Known stack suffix:
## QNAMESTAR
## LR(1) items:
qname_occurrence -> QNAMESTAR . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production qname_occurrence -> QNAMESTAR
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production qname_occurrence -> QNAMESTAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 297:
## Known stack suffix:
## QNAMEQUESTION
## LR(1) items:
qname_occurrence -> QNAMEQUESTION . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production qname_occurrence -> QNAMEQUESTION
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production qname_occurrence -> QNAMEQUESTION
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 298:
## Known stack suffix:
## QNAMEPLUS
## LR(1) items:
qname_occurrence -> QNAMEPLUS . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production qname_occurrence -> QNAMEPLUS
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production qname_occurrence -> QNAMEPLUS
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 299:
## Known stack suffix:
## QNAME
## LR(1) items:
qname_occurrence -> QNAME . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production qname_occurrence -> QNAME
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production qname_occurrence -> QNAME
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 300:
## Known stack suffix:
## PROCESSINGINSTRUCTIONLPAR
## LR(1) items:
kindtest -> PROCESSINGINSTRUCTIONLPAR . [ RPAR ]
kindtest -> PROCESSINGINSTRUCTIONLPAR . NCNAME [ RPAR ]
kindtest -> PROCESSINGINSTRUCTIONLPAR . STRING [ RPAR ]
## Transitions:
-- On STRING shift to state 301
-- On NCNAME shift to state 302
## Reductions:
-- On RPAR
--   reduce production kindtest -> PROCESSINGINSTRUCTIONLPAR

State 301:
## Known stack suffix:
## PROCESSINGINSTRUCTIONLPAR STRING
## LR(1) items:
kindtest -> PROCESSINGINSTRUCTIONLPAR STRING . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production kindtest -> PROCESSINGINSTRUCTIONLPAR STRING

State 302:
## Known stack suffix:
## PROCESSINGINSTRUCTIONLPAR NCNAME
## LR(1) items:
kindtest -> PROCESSINGINSTRUCTIONLPAR NCNAME . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production kindtest -> PROCESSINGINSTRUCTIONLPAR NCNAME

State 303:
## Known stack suffix:
## NUMERICLPAR
## LR(1) items:
itemtype -> NUMERICLPAR . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production itemtype -> NUMERICLPAR

State 304:
## Known stack suffix:
## NODELPAR
## LR(1) items:
kindtest -> NODELPAR . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production kindtest -> NODELPAR

State 305:
## Known stack suffix:
## ITEMLPAR
## LR(1) items:
itemtype -> ITEMLPAR . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production itemtype -> ITEMLPAR

State 306:
## Known stack suffix:
## EMPTYSEQUENCELPAR
## LR(1) items:
sequencetype -> EMPTYSEQUENCELPAR . RPAR [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RPAR shift to state 307
## Reductions:

State 307:
## Known stack suffix:
## EMPTYSEQUENCELPAR RPAR
## LR(1) items:
sequencetype -> EMPTYSEQUENCELPAR RPAR . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production sequencetype -> EMPTYSEQUENCELPAR RPAR
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production sequencetype -> EMPTYSEQUENCELPAR RPAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 308:
## Known stack suffix:
## ELEMENTLPAR
## LR(1) items:
kindtest -> ELEMENTLPAR . optelementref [ RPAR ]
## Transitions:
-- On STAR shift to state 309
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 312
-- On optelementref shift to state 315
## Reductions:
-- On RPAR
--   reduce production optelementref ->

State 309:
## Known stack suffix:
## STAR
## LR(1) items:
optelementref -> STAR . [ RPAR ]
optelementref -> STAR . COMMA qname [ RPAR ]
## Transitions:
-- On COMMA shift to state 310
## Reductions:
-- On RPAR
--   reduce production optelementref -> STAR

State 310:
## Known stack suffix:
## STAR COMMA
## LR(1) items:
optelementref -> STAR COMMA . qname [ RPAR ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 311
## Reductions:

State 311:
## Known stack suffix:
## STAR COMMA qname
## LR(1) items:
optelementref -> STAR COMMA qname . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production optelementref -> STAR COMMA qname

State 312:
## Known stack suffix:
## qname
## LR(1) items:
optelementref -> qname . [ RPAR ]
optelementref -> qname . COMMA qname [ RPAR ]
## Transitions:
-- On COMMA shift to state 313
## Reductions:
-- On RPAR
--   reduce production optelementref -> qname

State 313:
## Known stack suffix:
## qname COMMA
## LR(1) items:
optelementref -> qname COMMA . qname [ RPAR ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 314
## Reductions:

State 314:
## Known stack suffix:
## qname COMMA qname
## LR(1) items:
optelementref -> qname COMMA qname . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production optelementref -> qname COMMA qname

State 315:
## Known stack suffix:
## ELEMENTLPAR optelementref
## LR(1) items:
kindtest -> ELEMENTLPAR optelementref . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production kindtest -> ELEMENTLPAR optelementref

State 316:
## Known stack suffix:
## DOCUMENTNODELPAR
## LR(1) items:
kindtest -> DOCUMENTNODELPAR . [ RPAR ]
kindtest -> DOCUMENTNODELPAR . documentnode_kindtest [ RPAR ]
## Transitions:
-- On SCHEMAELEMENTLPAR shift to state 317
-- On ELEMENTLPAR shift to state 320
-- On documentnode_kindtest shift to state 323
## Reductions:
-- On RPAR
--   reduce production kindtest -> DOCUMENTNODELPAR

State 317:
## Known stack suffix:
## SCHEMAELEMENTLPAR
## LR(1) items:
documentnode_kindtest -> SCHEMAELEMENTLPAR . qname RPAR [ RPAR ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 318
## Reductions:

State 318:
## Known stack suffix:
## SCHEMAELEMENTLPAR qname
## LR(1) items:
documentnode_kindtest -> SCHEMAELEMENTLPAR qname . RPAR [ RPAR ]
## Transitions:
-- On RPAR shift to state 319
## Reductions:

State 319:
## Known stack suffix:
## SCHEMAELEMENTLPAR qname RPAR
## LR(1) items:
documentnode_kindtest -> SCHEMAELEMENTLPAR qname RPAR . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production documentnode_kindtest -> SCHEMAELEMENTLPAR qname RPAR

State 320:
## Known stack suffix:
## ELEMENTLPAR
## LR(1) items:
documentnode_kindtest -> ELEMENTLPAR . optelementref RPAR [ RPAR ]
## Transitions:
-- On STAR shift to state 309
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 312
-- On optelementref shift to state 321
## Reductions:
-- On RPAR
--   reduce production optelementref ->

State 321:
## Known stack suffix:
## ELEMENTLPAR optelementref
## LR(1) items:
documentnode_kindtest -> ELEMENTLPAR optelementref . RPAR [ RPAR ]
## Transitions:
-- On RPAR shift to state 322
## Reductions:

State 322:
## Known stack suffix:
## ELEMENTLPAR optelementref RPAR
## LR(1) items:
documentnode_kindtest -> ELEMENTLPAR optelementref RPAR . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production documentnode_kindtest -> ELEMENTLPAR optelementref RPAR

State 323:
## Known stack suffix:
## DOCUMENTNODELPAR documentnode_kindtest
## LR(1) items:
kindtest -> DOCUMENTNODELPAR documentnode_kindtest . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production kindtest -> DOCUMENTNODELPAR documentnode_kindtest

State 324:
## Known stack suffix:
## COMMENTLPAR
## LR(1) items:
kindtest -> COMMENTLPAR . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production kindtest -> COMMENTLPAR

State 325:
## Known stack suffix:
## ATTRIBUTELPAR
## LR(1) items:
kindtest -> ATTRIBUTELPAR . optattributeref [ RPAR ]
## Transitions:
-- On STAR shift to state 326
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 329
-- On optattributeref shift to state 332
## Reductions:
-- On RPAR
--   reduce production optattributeref ->

State 326:
## Known stack suffix:
## STAR
## LR(1) items:
optattributeref -> STAR . [ RPAR ]
optattributeref -> STAR . COMMA qname [ RPAR ]
## Transitions:
-- On COMMA shift to state 327
## Reductions:
-- On RPAR
--   reduce production optattributeref -> STAR

State 327:
## Known stack suffix:
## STAR COMMA
## LR(1) items:
optattributeref -> STAR COMMA . qname [ RPAR ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 328
## Reductions:

State 328:
## Known stack suffix:
## STAR COMMA qname
## LR(1) items:
optattributeref -> STAR COMMA qname . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production optattributeref -> STAR COMMA qname

State 329:
## Known stack suffix:
## qname
## LR(1) items:
optattributeref -> qname . [ RPAR ]
optattributeref -> qname . COMMA qname [ RPAR ]
## Transitions:
-- On COMMA shift to state 330
## Reductions:
-- On RPAR
--   reduce production optattributeref -> qname

State 330:
## Known stack suffix:
## qname COMMA
## LR(1) items:
optattributeref -> qname COMMA . qname [ RPAR ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 331
## Reductions:

State 331:
## Known stack suffix:
## qname COMMA qname
## LR(1) items:
optattributeref -> qname COMMA qname . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production optattributeref -> qname COMMA qname

State 332:
## Known stack suffix:
## ATTRIBUTELPAR optattributeref
## LR(1) items:
kindtest -> ATTRIBUTELPAR optattributeref . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production kindtest -> ATTRIBUTELPAR optattributeref

State 333:
## Known stack suffix:
## ANYSTRINGLPAR
## LR(1) items:
itemtype -> ANYSTRINGLPAR . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production itemtype -> ANYSTRINGLPAR

State 334:
## Known stack suffix:
## AS sequencetype
## LR(1) items:
opt_type_declaration -> AS sequencetype . [ IN EXTERNAL COLONEQUALS AT ]
## Transitions:
## Reductions:
-- On IN EXTERNAL COLONEQUALS AT
--   reduce production opt_type_declaration -> AS sequencetype

State 335:
## Known stack suffix:
## qname_occurrence
## LR(1) items:
sequencetype -> qname_occurrence . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production sequencetype -> qname_occurrence
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production sequencetype -> qname_occurrence
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 336:
## Known stack suffix:
## kindtest
## LR(1) items:
itemtype -> kindtest . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production itemtype -> kindtest

State 337:
## Known stack suffix:
## itemtype
## LR(1) items:
sequencetype -> itemtype . RPAR item_occurrence [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RPAR shift to state 338
## Reductions:

State 338:
## Known stack suffix:
## itemtype RPAR
## LR(1) items:
sequencetype -> itemtype RPAR . item_occurrence [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On QUESTION shift to state 339
-- On ISTAR shift to state 340
-- On IPLUS shift to state 341
-- On item_occurrence shift to state 342
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production item_occurrence ->
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK QUESTION PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY ISTAR IS IPLUS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production item_occurrence ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 339:
## Known stack suffix:
## QUESTION
## LR(1) items:
item_occurrence -> QUESTION . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production item_occurrence -> QUESTION
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production item_occurrence -> QUESTION
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 340:
## Known stack suffix:
## ISTAR
## LR(1) items:
item_occurrence -> ISTAR . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production item_occurrence -> ISTAR
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production item_occurrence -> ISTAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 341:
## Known stack suffix:
## IPLUS
## LR(1) items:
item_occurrence -> IPLUS . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production item_occurrence -> IPLUS
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production item_occurrence -> IPLUS
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 342:
## Known stack suffix:
## itemtype RPAR item_occurrence
## LR(1) items:
sequencetype -> itemtype RPAR item_occurrence . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production sequencetype -> itemtype RPAR item_occurrence
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production sequencetype -> itemtype RPAR item_occurrence
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 343:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration . COLONEQUALS expr SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration . EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On EXTERNAL shift to state 344
-- On COLONEQUALS shift to state 887
## Reductions:

State 344:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration EXTERNAL
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration EXTERNAL . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 345
## Reductions:

State 345:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration EXTERNAL SEMICOLON
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration EXTERNAL SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 886
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 346:
## Known stack suffix:
## DECLAREVALUEINDEX
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX . STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On STRING shift to state 347
## Reductions:

State 347:
## Known stack suffix:
## DECLAREVALUEINDEX STRING
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING . LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On LCURLY shift to state 348
## Reductions:

State 348:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY . expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 813
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 349:
## Known stack suffix:
## WHILELPAR
## LR(1) items:
expr_single -> WHILELPAR . expr_single RPAR RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 809
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 350:
## Known stack suffix:
## VARNAME
## LR(1) items:
variable -> VARNAME . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production variable -> VARNAME
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production variable -> VARNAME
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 351:
## Known stack suffix:
## VALIDATESTRICTLCURLY
## LR(1) items:
primaryexpr -> VALIDATESTRICTLCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 807
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 352:
## Known stack suffix:
## VALIDATELCURLY
## LR(1) items:
primaryexpr -> VALIDATELCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 805
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 353:
## Known stack suffix:
## VALIDATELAXLCURLY
## LR(1) items:
primaryexpr -> VALIDATELAXLCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 803
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 354:
## Known stack suffix:
## UNORDEREDCURLY
## LR(1) items:
primaryexpr -> UNORDEREDCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 801
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 355:
## Known stack suffix:
## TYPESWITCHLPAR
## LR(1) items:
expr_single -> TYPESWITCHLPAR . expr RPAR case_clause_list [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 785
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 356:
## Known stack suffix:
## TEXTCURLY
## LR(1) items:
primaryexpr -> TEXTCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 783
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 357:
## Known stack suffix:
## STRING
## LR(1) items:
stringliteral -> STRING . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production stringliteral -> STRING
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production stringliteral -> STRING
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 358:
## Known stack suffix:
## SOMEDOLLAR
## LR(1) items:
expr_single -> SOMEDOLLAR . bindings SATISFIES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 359
-- On bindings shift to state 780
## Reductions:

State 359:
## Known stack suffix:
## qname
## LR(1) items:
bindings -> qname . opt_type_declaration IN expr_single [ SATISFIES ]
bindings -> qname . opt_type_declaration IN expr_single COMMA DOLLAR bindings [ SATISFIES ]
## Transitions:
-- On AS shift to state 288
-- On opt_type_declaration shift to state 360
## Reductions:
-- On IN
--   reduce production opt_type_declaration ->

State 360:
## Known stack suffix:
## qname opt_type_declaration
## LR(1) items:
bindings -> qname opt_type_declaration . IN expr_single [ SATISFIES ]
bindings -> qname opt_type_declaration . IN expr_single COMMA DOLLAR bindings [ SATISFIES ]
## Transitions:
-- On IN shift to state 361
## Reductions:

State 361:
## Known stack suffix:
## qname opt_type_declaration IN
## LR(1) items:
bindings -> qname opt_type_declaration IN . expr_single [ SATISFIES ]
bindings -> qname opt_type_declaration IN . expr_single COMMA DOLLAR bindings [ SATISFIES ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 776
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 362:
## Known stack suffix:
## SNAPLCURLYORDERED
## LR(1) items:
primaryexpr -> SNAPLCURLYORDERED . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 774
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 363:
## Known stack suffix:
## SNAPLCURLY
## LR(1) items:
primaryexpr -> SNAPLCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 772
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 364:
## Known stack suffix:
## SLASHSLASH
## LR(1) items:
pathexpr -> SLASHSLASH . relativepathexpr [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On FUNCTIONNAMELPAR shift to state 419
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 771
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On extensionexpr shift to state 488
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 365:
## Known stack suffix:
## PRAGMA
## LR(1) items:
extensionexpr -> PRAGMA . LCURLY expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
extensionexpr -> PRAGMA . extensionexpr [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On PRAGMA shift to state 365
-- On LCURLY shift to state 366
-- On extensionexpr shift to state 770
## Reductions:

State 366:
## Known stack suffix:
## PRAGMA LCURLY
## LR(1) items:
extensionexpr -> PRAGMA LCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 768
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 367:
## Known stack suffix:
## SLASH
## LR(1) items:
pathexpr -> SLASH . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
pathexpr -> SLASH . relativepathexpr [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On FUNCTIONNAMELPAR shift to state 419
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 767
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On extensionexpr shift to state 488
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production pathexpr -> SLASH
** End-of-stream conflict on WITH WHERE VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY UNION TREATAS TO TEXTLPAR TEXTCURLY STRING STARNCNAME STAR STABLEORDERBY SNAPLCURLYORDERED SNAPLCURLY SEMICOLON SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR SATISFIES RPAR RETURN RCURLY RBRACK QNAME PROCESSINGINSTRUCTIONLPAR PRECEDES PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY ORDERBY OR OPENINGPI NOTEQUALS NODELPAR NE NCNAMESTAR NCNAME MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LPAR LOPENINGTAG LOPENINGCOMMENT LETDOLLAR LCURLY IS INTO INTERSECT INT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FUNCTIONNAMELPAR FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DIV DESCENDING DEFAULT DECIMAL COPYLCURLY COMMENTLPAR COMMENTCURLY COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production pathexpr -> SLASH
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 368:
## Known stack suffix:
## PINCNAMECURLY
## LR(1) items:
primaryexpr -> PINCNAMECURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> PINCNAMECURLY . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On RCURLY shift to state 764
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 765
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 369:
## Known stack suffix:
## SETDOLLAR
## LR(1) items:
expr_single -> SETDOLLAR . qname COLONEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 370
## Reductions:

State 370:
## Known stack suffix:
## SETDOLLAR qname
## LR(1) items:
expr_single -> SETDOLLAR qname . COLONEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On COLONEQUALS shift to state 371
## Reductions:

State 371:
## Known stack suffix:
## SETDOLLAR qname COLONEQUALS
## LR(1) items:
expr_single -> SETDOLLAR qname COLONEQUALS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 763
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 372:
## Known stack suffix:
## REPLACEVALUEOFNODE
## LR(1) items:
expr_single -> REPLACEVALUEOFNODE . expr_single WITH expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 760
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 373:
## Known stack suffix:
## REPLACENODE
## LR(1) items:
expr_single -> REPLACENODE . expr_single WITH expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 757
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 374:
## Known stack suffix:
## RENAMENODE
## LR(1) items:
expr_single -> RENAMENODE . expr_single AS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 754
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 375:
## Known stack suffix:
## PLUS
## LR(1) items:
expr_single -> PLUS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 753
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 376:
## Known stack suffix:
## PICURLY
## LR(1) items:
primaryexpr -> PICURLY . expr RCURLY LCURLY expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 748
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 377:
## Known stack suffix:
## ORDEREDCURLY
## LR(1) items:
primaryexpr -> ORDEREDCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 746
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 378:
## Known stack suffix:
## OPENINGPI
## LR(1) items:
primaryexpr -> OPENINGPI . TEXTCLOSINGPI [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TEXTCLOSINGPI shift to state 379
## Reductions:

State 379:
## Known stack suffix:
## OPENINGPI TEXTCLOSINGPI
## LR(1) items:
primaryexpr -> OPENINGPI TEXTCLOSINGPI . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> OPENINGPI TEXTCLOSINGPI
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> OPENINGPI TEXTCLOSINGPI
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 380:
## Known stack suffix:
## MINUS
## LR(1) items:
expr_single -> MINUS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 745
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 381:
## Known stack suffix:
## LPAR
## LR(1) items:
primaryexpr -> LPAR . RPAR [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> LPAR . expr RPAR [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On RPAR shift to state 382
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 743
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 382:
## Known stack suffix:
## LPAR RPAR
## LR(1) items:
primaryexpr -> LPAR RPAR . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> LPAR RPAR
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> LPAR RPAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 383:
## Known stack suffix:
## LOPENINGTAG
## LR(1) items:
primaryexpr -> LOPENINGTAG . qname attrlist REMPTYELEMENT [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> LOPENINGTAG . qname attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 384
## Reductions:

State 384:
## Known stack suffix:
## LOPENINGTAG qname
## LR(1) items:
primaryexpr -> LOPENINGTAG qname . attrlist REMPTYELEMENT [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> LOPENINGTAG qname . attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On S shift to state 385
-- On attrlist shift to state 708
## Reductions:
-- On ROPENINGTAG REMPTYELEMENT
--   reduce production attrlist ->

State 385:
## Known stack suffix:
## S
## LR(1) items:
attrlist -> S . [ ROPENINGTAG REMPTYELEMENT ]
attrlist -> S . qname eq attributecontent attrlist [ ROPENINGTAG REMPTYELEMENT ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 386
## Reductions:
-- On ROPENINGTAG REMPTYELEMENT
--   reduce production attrlist -> S

State 386:
## Known stack suffix:
## S qname
## LR(1) items:
attrlist -> S qname . eq attributecontent attrlist [ ROPENINGTAG REMPTYELEMENT ]
## Transitions:
-- On S shift to state 387
-- On EQUALS shift to state 390
-- On eq shift to state 392
## Reductions:

State 387:
## Known stack suffix:
## S
## LR(1) items:
eq -> S . EQUALS [ TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT ]
eq -> S . EQUALS S [ TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT ]
## Transitions:
-- On EQUALS shift to state 388
## Reductions:

State 388:
## Known stack suffix:
## S EQUALS
## LR(1) items:
eq -> S EQUALS . [ TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT ]
eq -> S EQUALS . S [ TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT ]
## Transitions:
-- On S shift to state 389
## Reductions:
-- On TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT
--   reduce production eq -> S EQUALS

State 389:
## Known stack suffix:
## S EQUALS S
## LR(1) items:
eq -> S EQUALS S . [ TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT ]
## Transitions:
## Reductions:
-- On TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT
--   reduce production eq -> S EQUALS S

State 390:
## Known stack suffix:
## EQUALS
## LR(1) items:
eq -> EQUALS . [ TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT ]
eq -> EQUALS . S [ TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT ]
## Transitions:
-- On S shift to state 391
## Reductions:
-- On TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT
--   reduce production eq -> EQUALS

State 391:
## Known stack suffix:
## EQUALS S
## LR(1) items:
eq -> EQUALS S . [ TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT ]
## Transitions:
## Reductions:
-- On TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT
--   reduce production eq -> EQUALS S

State 392:
## Known stack suffix:
## S qname eq
## LR(1) items:
attrlist -> S qname eq . attributecontent attrlist [ ROPENINGTAG REMPTYELEMENT ]
## Transitions:
-- On TEXTENTITYREF shift to state 393
-- On TEXTCHARREF shift to state 394
-- On ATTRIBUTETEXTLCURLY shift to state 395
-- On ATTRIBUTETEXT shift to state 702
-- On attributecontent shift to state 706
## Reductions:

State 393:
## Known stack suffix:
## TEXTENTITYREF
## LR(1) items:
attributecontent -> TEXTENTITYREF . attributecontent [ S ROPENINGTAG REMPTYELEMENT ]
## Transitions:
-- On TEXTENTITYREF shift to state 393
-- On TEXTCHARREF shift to state 394
-- On ATTRIBUTETEXTLCURLY shift to state 395
-- On ATTRIBUTETEXT shift to state 702
-- On attributecontent shift to state 705
## Reductions:

State 394:
## Known stack suffix:
## TEXTCHARREF
## LR(1) items:
attributecontent -> TEXTCHARREF . attributecontent [ S ROPENINGTAG REMPTYELEMENT ]
## Transitions:
-- On TEXTENTITYREF shift to state 393
-- On TEXTCHARREF shift to state 394
-- On ATTRIBUTETEXTLCURLY shift to state 395
-- On ATTRIBUTETEXT shift to state 702
-- On attributecontent shift to state 704
## Reductions:

State 395:
## Known stack suffix:
## ATTRIBUTETEXTLCURLY
## LR(1) items:
attributecontent -> ATTRIBUTETEXTLCURLY . expr RCURLY attributecontent [ S ROPENINGTAG REMPTYELEMENT ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 700
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 396:
## Known stack suffix:
## LOPENINGCOMMENT
## LR(1) items:
primaryexpr -> LOPENINGCOMMENT . TEXTRCLOSINGCOMMENT [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TEXTRCLOSINGCOMMENT shift to state 397
## Reductions:

State 397:
## Known stack suffix:
## LOPENINGCOMMENT TEXTRCLOSINGCOMMENT
## LR(1) items:
primaryexpr -> LOPENINGCOMMENT TEXTRCLOSINGCOMMENT . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> LOPENINGCOMMENT TEXTRCLOSINGCOMMENT
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> LOPENINGCOMMENT TEXTRCLOSINGCOMMENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 398:
## Known stack suffix:
## LETVARDOLLAR
## LR(1) items:
expr_single -> LETVARDOLLAR . qname opt_type_declaration COLONEQUALS expr_single return_clause [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 399
## Reductions:

State 399:
## Known stack suffix:
## LETVARDOLLAR qname
## LR(1) items:
expr_single -> LETVARDOLLAR qname . opt_type_declaration COLONEQUALS expr_single return_clause [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On AS shift to state 288
-- On opt_type_declaration shift to state 400
## Reductions:
-- On COLONEQUALS
--   reduce production opt_type_declaration ->

State 400:
## Known stack suffix:
## LETVARDOLLAR qname opt_type_declaration
## LR(1) items:
expr_single -> LETVARDOLLAR qname opt_type_declaration . COLONEQUALS expr_single return_clause [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On COLONEQUALS shift to state 401
## Reductions:

State 401:
## Known stack suffix:
## LETVARDOLLAR qname opt_type_declaration COLONEQUALS
## LR(1) items:
expr_single -> LETVARDOLLAR qname opt_type_declaration COLONEQUALS . expr_single return_clause [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 698
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 402:
## Known stack suffix:
## LETSERVER
## LR(1) items:
expr_single -> LETSERVER . NCNAME IMPLEMENT NCNAME AT expr_single RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On NCNAME shift to state 403
## Reductions:

State 403:
## Known stack suffix:
## LETSERVER NCNAME
## LR(1) items:
expr_single -> LETSERVER NCNAME . IMPLEMENT NCNAME AT expr_single RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On IMPLEMENT shift to state 404
## Reductions:

State 404:
## Known stack suffix:
## LETSERVER NCNAME IMPLEMENT
## LR(1) items:
expr_single -> LETSERVER NCNAME IMPLEMENT . NCNAME AT expr_single RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On NCNAME shift to state 405
## Reductions:

State 405:
## Known stack suffix:
## LETSERVER NCNAME IMPLEMENT NCNAME
## LR(1) items:
expr_single -> LETSERVER NCNAME IMPLEMENT NCNAME . AT expr_single RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On AT shift to state 406
## Reductions:

State 406:
## Known stack suffix:
## LETSERVER NCNAME IMPLEMENT NCNAME AT
## LR(1) items:
expr_single -> LETSERVER NCNAME IMPLEMENT NCNAME AT . expr_single RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 695
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 407:
## Known stack suffix:
## LETDOLLAR
## LR(1) items:
for_let_clause -> LETDOLLAR . qname opt_type_declaration COLONEQUALS expr_single let_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 408
## Reductions:

State 408:
## Known stack suffix:
## LETDOLLAR qname
## LR(1) items:
for_let_clause -> LETDOLLAR qname . opt_type_declaration COLONEQUALS expr_single let_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On AS shift to state 288
-- On opt_type_declaration shift to state 409
## Reductions:
-- On COLONEQUALS
--   reduce production opt_type_declaration ->

State 409:
## Known stack suffix:
## LETDOLLAR qname opt_type_declaration
## LR(1) items:
for_let_clause -> LETDOLLAR qname opt_type_declaration . COLONEQUALS expr_single let_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On COLONEQUALS shift to state 410
## Reductions:

State 410:
## Known stack suffix:
## LETDOLLAR qname opt_type_declaration COLONEQUALS
## LR(1) items:
for_let_clause -> LETDOLLAR qname opt_type_declaration COLONEQUALS . expr_single let_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 686
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 411:
## Known stack suffix:
## LCURLY
## LR(1) items:
primaryexpr -> LCURLY . block RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On DECLAREDOLLAR shift to state 412
-- On block_decl_list shift to state 676
-- On block_decl shift to state 681
-- On block shift to state 684
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production block_decl_list ->

State 412:
## Known stack suffix:
## DECLAREDOLLAR
## LR(1) items:
block_decl -> DECLAREDOLLAR . qname opt_type_declaration COLONEQUALS expr_single block_sub_decl [ SEMICOLON ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 413
## Reductions:

State 413:
## Known stack suffix:
## DECLAREDOLLAR qname
## LR(1) items:
block_decl -> DECLAREDOLLAR qname . opt_type_declaration COLONEQUALS expr_single block_sub_decl [ SEMICOLON ]
## Transitions:
-- On AS shift to state 288
-- On opt_type_declaration shift to state 414
## Reductions:
-- On COLONEQUALS
--   reduce production opt_type_declaration ->

State 414:
## Known stack suffix:
## DECLAREDOLLAR qname opt_type_declaration
## LR(1) items:
block_decl -> DECLAREDOLLAR qname opt_type_declaration . COLONEQUALS expr_single block_sub_decl [ SEMICOLON ]
## Transitions:
-- On COLONEQUALS shift to state 415
## Reductions:

State 415:
## Known stack suffix:
## DECLAREDOLLAR qname opt_type_declaration COLONEQUALS
## LR(1) items:
block_decl -> DECLAREDOLLAR qname opt_type_declaration COLONEQUALS . expr_single block_sub_decl [ SEMICOLON ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 668
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 416:
## Known stack suffix:
## INT
## LR(1) items:
integer -> INT . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production integer -> INT
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production integer -> INT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 417:
## Known stack suffix:
## INSERTNODE
## LR(1) items:
expr_single -> INSERTNODE . expr_single INTO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE . expr_single ASLAST INTO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE . expr_single ASFIRST INTO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE . expr_single AFTER expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE . expr_single BEFORE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 655
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 418:
## Known stack suffix:
## IFLPAR
## LR(1) items:
expr_single -> IFLPAR . expr RPAR THEN expr_single ELSE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 649
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 419:
## Known stack suffix:
## FUNCTIONNAMELPAR
## LR(1) items:
primaryexpr -> FUNCTIONNAMELPAR . RPAR [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> FUNCTIONNAMELPAR . expr RPAR [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On RPAR shift to state 420
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 647
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 420:
## Known stack suffix:
## FUNCTIONNAMELPAR RPAR
## LR(1) items:
primaryexpr -> FUNCTIONNAMELPAR RPAR . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> FUNCTIONNAMELPAR RPAR
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> FUNCTIONNAMELPAR RPAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 421:
## Known stack suffix:
## FROMSERVER
## LR(1) items:
expr_single -> FROMSERVER . NCNAME RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On NCNAME shift to state 422
## Reductions:

State 422:
## Known stack suffix:
## FROMSERVER NCNAME
## LR(1) items:
expr_single -> FROMSERVER NCNAME . RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RETURN shift to state 423
## Reductions:

State 423:
## Known stack suffix:
## FROMSERVER NCNAME RETURN
## LR(1) items:
expr_single -> FROMSERVER NCNAME RETURN . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 646
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 424:
## Known stack suffix:
## FORSERVER
## LR(1) items:
expr_single -> FORSERVER . NCNAME IMPLEMENT NCNAME BOX expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On NCNAME shift to state 425
## Reductions:

State 425:
## Known stack suffix:
## FORSERVER NCNAME
## LR(1) items:
expr_single -> FORSERVER NCNAME . IMPLEMENT NCNAME BOX expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On IMPLEMENT shift to state 426
## Reductions:

State 426:
## Known stack suffix:
## FORSERVER NCNAME IMPLEMENT
## LR(1) items:
expr_single -> FORSERVER NCNAME IMPLEMENT . NCNAME BOX expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On NCNAME shift to state 427
## Reductions:

State 427:
## Known stack suffix:
## FORSERVER NCNAME IMPLEMENT NCNAME
## LR(1) items:
expr_single -> FORSERVER NCNAME IMPLEMENT NCNAME . BOX expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On BOX shift to state 428
## Reductions:

State 428:
## Known stack suffix:
## FORSERVER NCNAME IMPLEMENT NCNAME BOX
## LR(1) items:
expr_single -> FORSERVER NCNAME IMPLEMENT NCNAME BOX . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 645
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 429:
## Known stack suffix:
## FORDOLLAR
## LR(1) items:
for_let_clause -> FORDOLLAR . qname opt_type_declaration opt_positional_var IN expr_single for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 430
## Reductions:

State 430:
## Known stack suffix:
## FORDOLLAR qname
## LR(1) items:
for_let_clause -> FORDOLLAR qname . opt_type_declaration opt_positional_var IN expr_single for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On AS shift to state 288
-- On opt_type_declaration shift to state 431
## Reductions:
-- On IN AT
--   reduce production opt_type_declaration ->

State 431:
## Known stack suffix:
## FORDOLLAR qname opt_type_declaration
## LR(1) items:
for_let_clause -> FORDOLLAR qname opt_type_declaration . opt_positional_var IN expr_single for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On AT shift to state 432
-- On opt_positional_var shift to state 436
## Reductions:
-- On IN
--   reduce production opt_positional_var ->

State 432:
## Known stack suffix:
## AT
## LR(1) items:
opt_positional_var -> AT . variable [ IN ]
## Transitions:
-- On VARNAME shift to state 350
-- On DOLLAR shift to state 433
-- On variable shift to state 435
## Reductions:

State 433:
## Known stack suffix:
## DOLLAR
## LR(1) items:
variable -> DOLLAR . qname [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 434
## Reductions:

State 434:
## Known stack suffix:
## DOLLAR qname
## LR(1) items:
variable -> DOLLAR qname . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production variable -> DOLLAR qname
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production variable -> DOLLAR qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 435:
## Known stack suffix:
## AT variable
## LR(1) items:
opt_positional_var -> AT variable . [ IN ]
## Transitions:
## Reductions:
-- On IN
--   reduce production opt_positional_var -> AT variable

State 436:
## Known stack suffix:
## FORDOLLAR qname opt_type_declaration opt_positional_var
## LR(1) items:
for_let_clause -> FORDOLLAR qname opt_type_declaration opt_positional_var . IN expr_single for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On IN shift to state 437
## Reductions:

State 437:
## Known stack suffix:
## FORDOLLAR qname opt_type_declaration opt_positional_var IN
## LR(1) items:
for_let_clause -> FORDOLLAR qname opt_type_declaration opt_positional_var IN . expr_single for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 635
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 438:
## Known stack suffix:
## EVERYDOLLAR
## LR(1) items:
expr_single -> EVERYDOLLAR . bindings SATISFIES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 359
-- On bindings shift to state 439
## Reductions:

State 439:
## Known stack suffix:
## EVERYDOLLAR bindings
## LR(1) items:
expr_single -> EVERYDOLLAR bindings . SATISFIES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On SATISFIES shift to state 440
## Reductions:

State 440:
## Known stack suffix:
## EVERYDOLLAR bindings SATISFIES
## LR(1) items:
expr_single -> EVERYDOLLAR bindings SATISFIES . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 634
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 441:
## Known stack suffix:
## EVALCLOSURE
## LR(1) items:
expr_single -> EVALCLOSURE . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 633
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 442:
## Known stack suffix:
## ELEMENTQNAMECURLY
## LR(1) items:
primaryexpr -> ELEMENTQNAMECURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> ELEMENTQNAMECURLY . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On RCURLY shift to state 443
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 631
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 443:
## Known stack suffix:
## ELEMENTQNAMECURLY RCURLY
## LR(1) items:
primaryexpr -> ELEMENTQNAMECURLY RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> ELEMENTQNAMECURLY RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> ELEMENTQNAMECURLY RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 444:
## Known stack suffix:
## ELEMENTCURLY
## LR(1) items:
primaryexpr -> ELEMENTCURLY . expr RCURLY LCURLY expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> ELEMENTCURLY . expr RCURLY LCURLY RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 625
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 445:
## Known stack suffix:
## DOUBLE
## LR(1) items:
numericliteral -> DOUBLE . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production numericliteral -> DOUBLE
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production numericliteral -> DOUBLE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 446:
## Known stack suffix:
## DOTDOT
## LR(1) items:
primaryexpr -> DOTDOT . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> DOTDOT
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> DOTDOT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 447:
## Known stack suffix:
## DOT
## LR(1) items:
primaryexpr -> DOT . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> DOT
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> DOT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 448:
## Known stack suffix:
## DOCUMENTCURLY
## LR(1) items:
primaryexpr -> DOCUMENTCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 623
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 449:
## Known stack suffix:
## DELETENODE
## LR(1) items:
expr_single -> DELETENODE . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 622
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 450:
## Known stack suffix:
## DECIMAL
## LR(1) items:
decimal -> DECIMAL . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production decimal -> DECIMAL
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production decimal -> DECIMAL
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 451:
## Known stack suffix:
## COPYLCURLY
## LR(1) items:
primaryexpr -> COPYLCURLY . expr_single RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 620
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 452:
## Known stack suffix:
## COPYDOLLAR
## LR(1) items:
transform_copy_clause -> COPYDOLLAR . qname COLONEQUALS expr_single copyvar_clause [ MODIFY ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 453
## Reductions:

State 453:
## Known stack suffix:
## COPYDOLLAR qname
## LR(1) items:
transform_copy_clause -> COPYDOLLAR qname . COLONEQUALS expr_single copyvar_clause [ MODIFY ]
## Transitions:
-- On COLONEQUALS shift to state 454
## Reductions:

State 454:
## Known stack suffix:
## COPYDOLLAR qname COLONEQUALS
## LR(1) items:
transform_copy_clause -> COPYDOLLAR qname COLONEQUALS . expr_single copyvar_clause [ MODIFY ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 613
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 455:
## Known stack suffix:
## COMMENTCURLY
## LR(1) items:
primaryexpr -> COMMENTCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 611
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 456:
## Known stack suffix:
## AXIS
## LR(1) items:
axisstepexpr -> AXIS . nodetest [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
axisstepexpr -> AXIS . nodetest stepqualifiers [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TEXTLPAR shift to state 291
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On wildcard shift to state 457
-- On qname shift to state 458
-- On nodetest shift to state 459
-- On nametest shift to state 467
-- On kindtest shift to state 468
## Reductions:

State 457:
## Known stack suffix:
## wildcard
## LR(1) items:
nametest -> wildcard . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production nametest -> wildcard
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production nametest -> wildcard
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 458:
## Known stack suffix:
## qname
## LR(1) items:
nametest -> qname . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production nametest -> qname
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production nametest -> qname
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 459:
## Known stack suffix:
## AXIS nodetest
## LR(1) items:
axisstepexpr -> AXIS nodetest . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
axisstepexpr -> AXIS nodetest . stepqualifiers [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On LBRACK shift to state 460
-- On stepqualifiers shift to state 610
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production axisstepexpr -> AXIS nodetest
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production axisstepexpr -> AXIS nodetest
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 460:
## Known stack suffix:
## LBRACK
## LR(1) items:
stepqualifiers -> LBRACK . expr RBRACK [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
stepqualifiers -> LBRACK . expr RBRACK stepqualifiers [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 607
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 461:
## Known stack suffix:
## ATTRIBUTEQNAMECURLY
## LR(1) items:
primaryexpr -> ATTRIBUTEQNAMECURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> ATTRIBUTEQNAMECURLY . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On RCURLY shift to state 462
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 605
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 462:
## Known stack suffix:
## ATTRIBUTEQNAMECURLY RCURLY
## LR(1) items:
primaryexpr -> ATTRIBUTEQNAMECURLY RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> ATTRIBUTEQNAMECURLY RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> ATTRIBUTEQNAMECURLY RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 463:
## Known stack suffix:
## ATTRIBUTECURLY
## LR(1) items:
primaryexpr -> ATTRIBUTECURLY . expr RCURLY LCURLY expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> ATTRIBUTECURLY . expr RCURLY LCURLY RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 599
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 464:
## Known stack suffix:
## ATSIGN
## LR(1) items:
axisstepexpr -> ATSIGN . nodetest [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
axisstepexpr -> ATSIGN . nodetest stepqualifiers [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TEXTLPAR shift to state 291
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On wildcard shift to state 457
-- On qname shift to state 458
-- On nodetest shift to state 465
-- On nametest shift to state 467
-- On kindtest shift to state 468
## Reductions:

State 465:
## Known stack suffix:
## ATSIGN nodetest
## LR(1) items:
axisstepexpr -> ATSIGN nodetest . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
axisstepexpr -> ATSIGN nodetest . stepqualifiers [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On LBRACK shift to state 460
-- On stepqualifiers shift to state 466
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production axisstepexpr -> ATSIGN nodetest
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production axisstepexpr -> ATSIGN nodetest
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 466:
## Known stack suffix:
## ATSIGN nodetest stepqualifiers
## LR(1) items:
axisstepexpr -> ATSIGN nodetest stepqualifiers . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production axisstepexpr -> ATSIGN nodetest stepqualifiers
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production axisstepexpr -> ATSIGN nodetest stepqualifiers
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 467:
## Known stack suffix:
## nametest
## LR(1) items:
nodetest -> nametest . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production nodetest -> nametest
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production nodetest -> nametest
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 468:
## Known stack suffix:
## kindtest
## LR(1) items:
nodetest -> kindtest . RPAR [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RPAR shift to state 469
## Reductions:

State 469:
## Known stack suffix:
## kindtest RPAR
## LR(1) items:
nodetest -> kindtest RPAR . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production nodetest -> kindtest RPAR
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production nodetest -> kindtest RPAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 470:
## Known stack suffix:
## ATSERVER
## LR(1) items:
expr_single -> ATSERVER . NCNAME DO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On NCNAME shift to state 471
## Reductions:

State 471:
## Known stack suffix:
## ATSERVER NCNAME
## LR(1) items:
expr_single -> ATSERVER NCNAME . DO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On DO shift to state 472
## Reductions:

State 472:
## Known stack suffix:
## ATSERVER NCNAME DO
## LR(1) items:
expr_single -> ATSERVER NCNAME DO . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 595
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 473:
## Known stack suffix:
## variable
## LR(1) items:
primaryexpr -> variable . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> variable
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> variable
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 474:
## Known stack suffix:
## transform_copy_clause
## LR(1) items:
expr_single -> transform_copy_clause . modify_clause return_clause [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On MODIFY shift to state 475
-- On modify_clause shift to state 593
## Reductions:

State 475:
## Known stack suffix:
## MODIFY
## LR(1) items:
modify_clause -> MODIFY . expr_single [ RETURN ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 592
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 476:
## Known stack suffix:
## stringliteral
## LR(1) items:
literal -> stringliteral . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production literal -> stringliteral
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production literal -> stringliteral
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 477:
## Known stack suffix:
## stepexpr
## LR(1) items:
relativepathexpr -> stepexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production relativepathexpr -> stepexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production relativepathexpr -> stepexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 478:
## Known stack suffix:
## relativepathexpr
## LR(1) items:
pathexpr -> relativepathexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
relativepathexpr -> relativepathexpr . SLASH stepexpr [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
relativepathexpr -> relativepathexpr . SLASHSLASH stepexpr [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On SLASHSLASH shift to state 479
-- On SLASH shift to state 491
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production pathexpr -> relativepathexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production pathexpr -> relativepathexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 479:
## Known stack suffix:
## relativepathexpr SLASHSLASH
## LR(1) items:
relativepathexpr -> relativepathexpr SLASHSLASH . stepexpr [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On FUNCTIONNAMELPAR shift to state 419
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On stringliteral shift to state 476
-- On stepexpr shift to state 480
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On extensionexpr shift to state 488
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 480:
## Known stack suffix:
## relativepathexpr SLASHSLASH stepexpr
## LR(1) items:
relativepathexpr -> relativepathexpr SLASHSLASH stepexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production relativepathexpr -> relativepathexpr SLASHSLASH stepexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production relativepathexpr -> relativepathexpr SLASHSLASH stepexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 481:
## Known stack suffix:
## primaryexpr
## LR(1) items:
otherstepexpr -> primaryexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
otherstepexpr -> primaryexpr . stepqualifiers [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On LBRACK shift to state 460
-- On stepqualifiers shift to state 482
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production otherstepexpr -> primaryexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production otherstepexpr -> primaryexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 482:
## Known stack suffix:
## primaryexpr stepqualifiers
## LR(1) items:
otherstepexpr -> primaryexpr stepqualifiers . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production otherstepexpr -> primaryexpr stepqualifiers
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production otherstepexpr -> primaryexpr stepqualifiers
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 483:
## Known stack suffix:
## otherstepexpr
## LR(1) items:
stepexpr -> otherstepexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production stepexpr -> otherstepexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production stepexpr -> otherstepexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 484:
## Known stack suffix:
## numericliteral
## LR(1) items:
literal -> numericliteral . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production literal -> numericliteral
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production literal -> numericliteral
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 485:
## Known stack suffix:
## nodetest
## LR(1) items:
primaryexpr -> nodetest . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> nodetest
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> nodetest
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 486:
## Known stack suffix:
## literal
## LR(1) items:
primaryexpr -> literal . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> literal
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> literal
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 487:
## Known stack suffix:
## integer
## LR(1) items:
numericliteral -> integer . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production numericliteral -> integer
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production numericliteral -> integer
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 488:
## Known stack suffix:
## extensionexpr
## LR(1) items:
primaryexpr -> extensionexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> extensionexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> extensionexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 489:
## Known stack suffix:
## decimal
## LR(1) items:
numericliteral -> decimal . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production numericliteral -> decimal
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production numericliteral -> decimal
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 490:
## Known stack suffix:
## axisstepexpr
## LR(1) items:
stepexpr -> axisstepexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production stepexpr -> axisstepexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production stepexpr -> axisstepexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 491:
## Known stack suffix:
## relativepathexpr SLASH
## LR(1) items:
relativepathexpr -> relativepathexpr SLASH . stepexpr [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On FUNCTIONNAMELPAR shift to state 419
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On stringliteral shift to state 476
-- On stepexpr shift to state 492
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On extensionexpr shift to state 488
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 492:
## Known stack suffix:
## relativepathexpr SLASH stepexpr
## LR(1) items:
relativepathexpr -> relativepathexpr SLASH stepexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production relativepathexpr -> relativepathexpr SLASH stepexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production relativepathexpr -> relativepathexpr SLASH stepexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 493:
## Known stack suffix:
## pathexpr
## LR(1) items:
expr_single -> pathexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> pathexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> pathexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 494:
## Known stack suffix:
## for_let_clause
## LR(1) items:
expr_single -> for_let_clause . where_order_clause return_clause [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHERE shift to state 495
-- On STABLEORDERBY shift to state 563
-- On ORDERBY shift to state 583
-- On where_order_clause shift to state 585
-- On where_clause shift to state 589
-- On order_clause shift to state 591
## Reductions:
-- On RETURN
--   reduce production where_order_clause ->

State 495:
## Known stack suffix:
## WHERE
## LR(1) items:
where_clause -> WHERE . expr_single [ STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 496
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 496:
## Known stack suffix:
## WHERE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
where_clause -> WHERE expr_single . [ STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On STABLEORDERBY RETURN ORDERBY
--   reduce production where_clause -> WHERE expr_single

State 497:
## Known stack suffix:
## expr_single UNION
## LR(1) items:
expr_single -> expr_single UNION . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 498
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 498:
## Known stack suffix:
## expr_single UNION expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single UNION expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TREATAS shift to state 499
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On EXCEPT shift to state 511
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE UNION TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single UNION expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single UNION expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 499:
## Known stack suffix:
## expr_single TREATAS
## LR(1) items:
expr_single -> expr_single TREATAS . sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TYPELPAR shift to state 289
-- On TEXTLPAR shift to state 291
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAMESTAR shift to state 296
-- On QNAMEQUESTION shift to state 297
-- On QNAMEPLUS shift to state 298
-- On QNAME shift to state 299
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NUMERICLPAR shift to state 303
-- On NODELPAR shift to state 304
-- On ITEMLPAR shift to state 305
-- On EMPTYSEQUENCELPAR shift to state 306
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On ANYSTRINGLPAR shift to state 333
-- On sequencetype shift to state 500
-- On qname_occurrence shift to state 335
-- On kindtest shift to state 336
-- On itemtype shift to state 337
## Reductions:

State 500:
## Known stack suffix:
## expr_single TREATAS sequencetype
## LR(1) items:
expr_single -> expr_single TREATAS sequencetype . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single TREATAS sequencetype
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single TREATAS sequencetype
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 501:
## Known stack suffix:
## expr_single INTERSECT
## LR(1) items:
expr_single -> expr_single INTERSECT . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 502
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 502:
## Known stack suffix:
## expr_single INTERSECT expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single INTERSECT expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TREATAS shift to state 499
-- On INSTANCEOF shift to state 503
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE UNION TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single INTERSECT expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single INTERSECT expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 503:
## Known stack suffix:
## expr_single INSTANCEOF
## LR(1) items:
expr_single -> expr_single INSTANCEOF . sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TYPELPAR shift to state 289
-- On TEXTLPAR shift to state 291
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAMESTAR shift to state 296
-- On QNAMEQUESTION shift to state 297
-- On QNAMEPLUS shift to state 298
-- On QNAME shift to state 299
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NUMERICLPAR shift to state 303
-- On NODELPAR shift to state 304
-- On ITEMLPAR shift to state 305
-- On EMPTYSEQUENCELPAR shift to state 306
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On ANYSTRINGLPAR shift to state 333
-- On sequencetype shift to state 504
-- On qname_occurrence shift to state 335
-- On kindtest shift to state 336
-- On itemtype shift to state 337
## Reductions:

State 504:
## Known stack suffix:
## expr_single INSTANCEOF sequencetype
## LR(1) items:
expr_single -> expr_single INSTANCEOF sequencetype . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single INSTANCEOF sequencetype
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single INSTANCEOF sequencetype
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 505:
## Known stack suffix:
## expr_single CASTAS
## LR(1) items:
expr_single -> expr_single CASTAS . sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TYPELPAR shift to state 289
-- On TEXTLPAR shift to state 291
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAMESTAR shift to state 296
-- On QNAMEQUESTION shift to state 297
-- On QNAMEPLUS shift to state 298
-- On QNAME shift to state 299
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NUMERICLPAR shift to state 303
-- On NODELPAR shift to state 304
-- On ITEMLPAR shift to state 305
-- On EMPTYSEQUENCELPAR shift to state 306
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On ANYSTRINGLPAR shift to state 333
-- On sequencetype shift to state 506
-- On qname_occurrence shift to state 335
-- On kindtest shift to state 336
-- On itemtype shift to state 337
## Reductions:

State 506:
## Known stack suffix:
## expr_single CASTAS sequencetype
## LR(1) items:
expr_single -> expr_single CASTAS sequencetype . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single CASTAS sequencetype
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single CASTAS sequencetype
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 507:
## Known stack suffix:
## expr_single CASTABLEAS
## LR(1) items:
expr_single -> expr_single CASTABLEAS . singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On QNAMEQUESTION shift to state 508
-- On QNAME shift to state 509
-- On singletype shift to state 510
## Reductions:

State 508:
## Known stack suffix:
## QNAMEQUESTION
## LR(1) items:
singletype -> QNAMEQUESTION . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production singletype -> QNAMEQUESTION
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production singletype -> QNAMEQUESTION
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 509:
## Known stack suffix:
## QNAME
## LR(1) items:
singletype -> QNAME . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production singletype -> QNAME
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production singletype -> QNAME
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 510:
## Known stack suffix:
## expr_single CASTABLEAS singletype
## LR(1) items:
expr_single -> expr_single CASTABLEAS singletype . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single CASTABLEAS singletype
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single CASTABLEAS singletype
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 511:
## Known stack suffix:
## expr_single EXCEPT
## LR(1) items:
expr_single -> expr_single EXCEPT . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 512
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 512:
## Known stack suffix:
## expr_single EXCEPT expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single EXCEPT expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TREATAS shift to state 499
-- On INSTANCEOF shift to state 503
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE UNION TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single EXCEPT expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single EXCEPT expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 513:
## Known stack suffix:
## expr_single TO
## LR(1) items:
expr_single -> expr_single TO . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 514
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 514:
## Known stack suffix:
## expr_single TO expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single TO expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single TO expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single TO expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 515:
## Known stack suffix:
## expr_single PLUS
## LR(1) items:
expr_single -> expr_single PLUS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 516
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 516:
## Known stack suffix:
## expr_single PLUS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single PLUS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MODIFY MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single PLUS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single PLUS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 517:
## Known stack suffix:
## expr_single MULT
## LR(1) items:
expr_single -> expr_single MULT . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 518
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 518:
## Known stack suffix:
## expr_single MULT expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single MULT expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On EXCEPT shift to state 511
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single MULT expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single MULT expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 519:
## Known stack suffix:
## expr_single MOD
## LR(1) items:
expr_single -> expr_single MOD . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 520
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 520:
## Known stack suffix:
## expr_single MOD expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single MOD expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On EXCEPT shift to state 511
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single MOD expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single MOD expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 521:
## Known stack suffix:
## expr_single IDIV
## LR(1) items:
expr_single -> expr_single IDIV . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 522
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 522:
## Known stack suffix:
## expr_single IDIV expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single IDIV expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On EXCEPT shift to state 511
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single IDIV expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single IDIV expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 523:
## Known stack suffix:
## expr_single DIV
## LR(1) items:
expr_single -> expr_single DIV . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 524
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 524:
## Known stack suffix:
## expr_single DIV expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single DIV expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On EXCEPT shift to state 511
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single DIV expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single DIV expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 525:
## Known stack suffix:
## expr_single MINUS
## LR(1) items:
expr_single -> expr_single MINUS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 526
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 526:
## Known stack suffix:
## expr_single MINUS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single MINUS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MODIFY MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single MINUS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single MINUS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 527:
## Known stack suffix:
## expr_single PRECEDES
## LR(1) items:
expr_single -> expr_single PRECEDES . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 528
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 528:
## Known stack suffix:
## expr_single PRECEDES expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single PRECEDES expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single PRECEDES expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single PRECEDES expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 529:
## Known stack suffix:
## expr_single OR
## LR(1) items:
expr_single -> expr_single OR . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 530
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 530:
## Known stack suffix:
## expr_single OR expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single OR expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY OR MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> expr_single OR expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single OR expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 531:
## Known stack suffix:
## expr_single NOTEQUALS
## LR(1) items:
expr_single -> expr_single NOTEQUALS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 532
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 532:
## Known stack suffix:
## expr_single NOTEQUALS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single NOTEQUALS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single NOTEQUALS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single NOTEQUALS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 533:
## Known stack suffix:
## expr_single NE
## LR(1) items:
expr_single -> expr_single NE . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 534
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 534:
## Known stack suffix:
## expr_single NE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single NE expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single NE expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single NE expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 535:
## Known stack suffix:
## expr_single LTOP
## LR(1) items:
expr_single -> expr_single LTOP . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 536
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 536:
## Known stack suffix:
## expr_single LTOP expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single LTOP expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single LTOP expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single LTOP expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 537:
## Known stack suffix:
## expr_single LTEQUALS
## LR(1) items:
expr_single -> expr_single LTEQUALS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 538
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 538:
## Known stack suffix:
## expr_single LTEQUALS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single LTEQUALS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single LTEQUALS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single LTEQUALS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 539:
## Known stack suffix:
## expr_single LTE
## LR(1) items:
expr_single -> expr_single LTE . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 540
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 540:
## Known stack suffix:
## expr_single LTE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single LTE expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single LTE expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single LTE expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 541:
## Known stack suffix:
## expr_single LT
## LR(1) items:
expr_single -> expr_single LT . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 542
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 542:
## Known stack suffix:
## expr_single LT expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single LT expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single LT expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single LT expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 543:
## Known stack suffix:
## expr_single IS
## LR(1) items:
expr_single -> expr_single IS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 544
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 544:
## Known stack suffix:
## expr_single IS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single IS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single IS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single IS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 545:
## Known stack suffix:
## expr_single GTOP
## LR(1) items:
expr_single -> expr_single GTOP . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 546
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 546:
## Known stack suffix:
## expr_single GTOP expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single GTOP expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single GTOP expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single GTOP expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 547:
## Known stack suffix:
## expr_single GTEQUALS
## LR(1) items:
expr_single -> expr_single GTEQUALS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 548
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 548:
## Known stack suffix:
## expr_single GTEQUALS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single GTEQUALS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single GTEQUALS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single GTEQUALS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 549:
## Known stack suffix:
## expr_single GTE
## LR(1) items:
expr_single -> expr_single GTE . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 550
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 550:
## Known stack suffix:
## expr_single GTE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single GTE expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single GTE expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single GTE expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 551:
## Known stack suffix:
## expr_single GT
## LR(1) items:
expr_single -> expr_single GT . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 552
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 552:
## Known stack suffix:
## expr_single GT expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single GT expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single GT expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single GT expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 553:
## Known stack suffix:
## expr_single FOLLOWS
## LR(1) items:
expr_single -> expr_single FOLLOWS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 554
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 554:
## Known stack suffix:
## expr_single FOLLOWS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single FOLLOWS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single FOLLOWS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single FOLLOWS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 555:
## Known stack suffix:
## expr_single EQUALS
## LR(1) items:
expr_single -> expr_single EQUALS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 556
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 556:
## Known stack suffix:
## expr_single EQUALS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single EQUALS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single EQUALS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single EQUALS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 557:
## Known stack suffix:
## expr_single EQ
## LR(1) items:
expr_single -> expr_single EQ . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 558
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 558:
## Known stack suffix:
## expr_single EQ expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single EQ expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PLUS shift to state 515
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On EXCEPT shift to state 511
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES ORDERBY OR NOTEQUALS NE MODIFY LTOP LTEQUALS LTE LT LETDOLLAR IS INTO GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single EQ expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single EQ expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 559:
## Known stack suffix:
## expr_single BAR
## LR(1) items:
expr_single -> expr_single BAR . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 560
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 560:
## Known stack suffix:
## expr_single BAR expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single BAR expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TREATAS shift to state 499
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On EXCEPT shift to state 511
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
## Reductions:
-- On WITH WHERE UNION TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single BAR expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single BAR expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 561:
## Known stack suffix:
## expr_single AND
## LR(1) items:
expr_single -> expr_single AND . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 562
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 562:
## Known stack suffix:
## expr_single AND expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single AND expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY OR MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> expr_single AND expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> expr_single AND expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 563:
## Known stack suffix:
## STABLEORDERBY
## LR(1) items:
order_clause -> STABLEORDERBY . sortspeclist [ RETURN ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On sortspeclist shift to state 564
-- On sortspec shift to state 565
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 571
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 564:
## Known stack suffix:
## STABLEORDERBY sortspeclist
## LR(1) items:
order_clause -> STABLEORDERBY sortspeclist . [ RETURN ]
## Transitions:
## Reductions:
-- On RETURN
--   reduce production order_clause -> STABLEORDERBY sortspeclist

State 565:
## Known stack suffix:
## sortspec
## LR(1) items:
sortspeclist -> sortspec . collation [ RETURN ]
sortspeclist -> sortspec . collation COMMA sortspeclist [ RETURN ]
## Transitions:
-- On COLLATION shift to state 566
-- On collation shift to state 568
## Reductions:
-- On RETURN COMMA
--   reduce production collation ->

State 566:
## Known stack suffix:
## COLLATION
## LR(1) items:
collation -> COLLATION . STRING [ RETURN COMMA ]
## Transitions:
-- On STRING shift to state 567
## Reductions:

State 567:
## Known stack suffix:
## COLLATION STRING
## LR(1) items:
collation -> COLLATION STRING . [ RETURN COMMA ]
## Transitions:
## Reductions:
-- On RETURN COMMA
--   reduce production collation -> COLLATION STRING

State 568:
## Known stack suffix:
## sortspec collation
## LR(1) items:
sortspeclist -> sortspec collation . [ RETURN ]
sortspeclist -> sortspec collation . COMMA sortspeclist [ RETURN ]
## Transitions:
-- On COMMA shift to state 569
## Reductions:
-- On RETURN
--   reduce production sortspeclist -> sortspec collation

State 569:
## Known stack suffix:
## sortspec collation COMMA
## LR(1) items:
sortspeclist -> sortspec collation COMMA . sortspeclist [ RETURN ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On sortspeclist shift to state 570
-- On sortspec shift to state 565
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 571
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 570:
## Known stack suffix:
## sortspec collation COMMA sortspeclist
## LR(1) items:
sortspeclist -> sortspec collation COMMA sortspeclist . [ RETURN ]
## Transitions:
## Reductions:
-- On RETURN
--   reduce production sortspeclist -> sortspec collation COMMA sortspeclist

State 571:
## Known stack suffix:
## expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EMPTY DIV DESCENDING COMMA COLLATION CASTAS CASTABLEAS BAR ASCENDING AND ]
sortspec -> expr_single . [ RETURN COMMA COLLATION ]
sortspec -> expr_single . ASCENDING [ RETURN COMMA COLLATION ]
sortspec -> expr_single . DESCENDING [ RETURN COMMA COLLATION ]
sortspec -> expr_single . EMPTY GREATEST [ RETURN COMMA COLLATION ]
sortspec -> expr_single . ASCENDING EMPTY GREATEST [ RETURN COMMA COLLATION ]
sortspec -> expr_single . DESCENDING EMPTY GREATEST [ RETURN COMMA COLLATION ]
sortspec -> expr_single . EMPTY LEAST [ RETURN COMMA COLLATION ]
sortspec -> expr_single . ASCENDING EMPTY LEAST [ RETURN COMMA COLLATION ]
sortspec -> expr_single . DESCENDING EMPTY LEAST [ RETURN COMMA COLLATION ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On EMPTY shift to state 572
-- On DIV shift to state 523
-- On DESCENDING shift to state 575
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On ASCENDING shift to state 579
-- On AND shift to state 561
## Reductions:
-- On RETURN COMMA COLLATION
--   reduce production sortspec -> expr_single

State 572:
## Known stack suffix:
## expr_single EMPTY
## LR(1) items:
sortspec -> expr_single EMPTY . GREATEST [ RETURN COMMA COLLATION ]
sortspec -> expr_single EMPTY . LEAST [ RETURN COMMA COLLATION ]
## Transitions:
-- On LEAST shift to state 573
-- On GREATEST shift to state 574
## Reductions:

State 573:
## Known stack suffix:
## expr_single EMPTY LEAST
## LR(1) items:
sortspec -> expr_single EMPTY LEAST . [ RETURN COMMA COLLATION ]
## Transitions:
## Reductions:
-- On RETURN COMMA COLLATION
--   reduce production sortspec -> expr_single EMPTY LEAST

State 574:
## Known stack suffix:
## expr_single EMPTY GREATEST
## LR(1) items:
sortspec -> expr_single EMPTY GREATEST . [ RETURN COMMA COLLATION ]
## Transitions:
## Reductions:
-- On RETURN COMMA COLLATION
--   reduce production sortspec -> expr_single EMPTY GREATEST

State 575:
## Known stack suffix:
## expr_single DESCENDING
## LR(1) items:
sortspec -> expr_single DESCENDING . [ RETURN COMMA COLLATION ]
sortspec -> expr_single DESCENDING . EMPTY GREATEST [ RETURN COMMA COLLATION ]
sortspec -> expr_single DESCENDING . EMPTY LEAST [ RETURN COMMA COLLATION ]
## Transitions:
-- On EMPTY shift to state 576
## Reductions:
-- On RETURN COMMA COLLATION
--   reduce production sortspec -> expr_single DESCENDING

State 576:
## Known stack suffix:
## expr_single DESCENDING EMPTY
## LR(1) items:
sortspec -> expr_single DESCENDING EMPTY . GREATEST [ RETURN COMMA COLLATION ]
sortspec -> expr_single DESCENDING EMPTY . LEAST [ RETURN COMMA COLLATION ]
## Transitions:
-- On LEAST shift to state 577
-- On GREATEST shift to state 578
## Reductions:

State 577:
## Known stack suffix:
## expr_single DESCENDING EMPTY LEAST
## LR(1) items:
sortspec -> expr_single DESCENDING EMPTY LEAST . [ RETURN COMMA COLLATION ]
## Transitions:
## Reductions:
-- On RETURN COMMA COLLATION
--   reduce production sortspec -> expr_single DESCENDING EMPTY LEAST

State 578:
## Known stack suffix:
## expr_single DESCENDING EMPTY GREATEST
## LR(1) items:
sortspec -> expr_single DESCENDING EMPTY GREATEST . [ RETURN COMMA COLLATION ]
## Transitions:
## Reductions:
-- On RETURN COMMA COLLATION
--   reduce production sortspec -> expr_single DESCENDING EMPTY GREATEST

State 579:
## Known stack suffix:
## expr_single ASCENDING
## LR(1) items:
sortspec -> expr_single ASCENDING . [ RETURN COMMA COLLATION ]
sortspec -> expr_single ASCENDING . EMPTY GREATEST [ RETURN COMMA COLLATION ]
sortspec -> expr_single ASCENDING . EMPTY LEAST [ RETURN COMMA COLLATION ]
## Transitions:
-- On EMPTY shift to state 580
## Reductions:
-- On RETURN COMMA COLLATION
--   reduce production sortspec -> expr_single ASCENDING

State 580:
## Known stack suffix:
## expr_single ASCENDING EMPTY
## LR(1) items:
sortspec -> expr_single ASCENDING EMPTY . GREATEST [ RETURN COMMA COLLATION ]
sortspec -> expr_single ASCENDING EMPTY . LEAST [ RETURN COMMA COLLATION ]
## Transitions:
-- On LEAST shift to state 581
-- On GREATEST shift to state 582
## Reductions:

State 581:
## Known stack suffix:
## expr_single ASCENDING EMPTY LEAST
## LR(1) items:
sortspec -> expr_single ASCENDING EMPTY LEAST . [ RETURN COMMA COLLATION ]
## Transitions:
## Reductions:
-- On RETURN COMMA COLLATION
--   reduce production sortspec -> expr_single ASCENDING EMPTY LEAST

State 582:
## Known stack suffix:
## expr_single ASCENDING EMPTY GREATEST
## LR(1) items:
sortspec -> expr_single ASCENDING EMPTY GREATEST . [ RETURN COMMA COLLATION ]
## Transitions:
## Reductions:
-- On RETURN COMMA COLLATION
--   reduce production sortspec -> expr_single ASCENDING EMPTY GREATEST

State 583:
## Known stack suffix:
## ORDERBY
## LR(1) items:
order_clause -> ORDERBY . sortspeclist [ RETURN ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On sortspeclist shift to state 584
-- On sortspec shift to state 565
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 571
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 584:
## Known stack suffix:
## ORDERBY sortspeclist
## LR(1) items:
order_clause -> ORDERBY sortspeclist . [ RETURN ]
## Transitions:
## Reductions:
-- On RETURN
--   reduce production order_clause -> ORDERBY sortspeclist

State 585:
## Known stack suffix:
## for_let_clause where_order_clause
## LR(1) items:
expr_single -> for_let_clause where_order_clause . return_clause [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RETURN shift to state 586
-- On return_clause shift to state 588
## Reductions:

State 586:
## Known stack suffix:
## RETURN
## LR(1) items:
return_clause -> RETURN . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 587
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 587:
## Known stack suffix:
## RETURN expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
return_clause -> RETURN expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production return_clause -> RETURN expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production return_clause -> RETURN expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 588:
## Known stack suffix:
## for_let_clause where_order_clause return_clause
## LR(1) items:
expr_single -> for_let_clause where_order_clause return_clause . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> for_let_clause where_order_clause return_clause
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> for_let_clause where_order_clause return_clause
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 589:
## Known stack suffix:
## where_clause
## LR(1) items:
where_order_clause -> where_clause . [ RETURN ]
where_order_clause -> where_clause . order_clause [ RETURN ]
## Transitions:
-- On STABLEORDERBY shift to state 563
-- On ORDERBY shift to state 583
-- On order_clause shift to state 590
## Reductions:
-- On RETURN
--   reduce production where_order_clause -> where_clause

State 590:
## Known stack suffix:
## where_clause order_clause
## LR(1) items:
where_order_clause -> where_clause order_clause . [ RETURN ]
## Transitions:
## Reductions:
-- On RETURN
--   reduce production where_order_clause -> where_clause order_clause

State 591:
## Known stack suffix:
## order_clause
## LR(1) items:
where_order_clause -> order_clause . [ RETURN ]
## Transitions:
## Reductions:
-- On RETURN
--   reduce production where_order_clause -> order_clause

State 592:
## Known stack suffix:
## MODIFY expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
modify_clause -> MODIFY expr_single . [ RETURN ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On RETURN
--   reduce production modify_clause -> MODIFY expr_single

State 593:
## Known stack suffix:
## transform_copy_clause modify_clause
## LR(1) items:
expr_single -> transform_copy_clause modify_clause . return_clause [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RETURN shift to state 586
-- On return_clause shift to state 594
## Reductions:

State 594:
## Known stack suffix:
## transform_copy_clause modify_clause return_clause
## LR(1) items:
expr_single -> transform_copy_clause modify_clause return_clause . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> transform_copy_clause modify_clause return_clause
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> transform_copy_clause modify_clause return_clause
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 595:
## Known stack suffix:
## ATSERVER NCNAME DO expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> ATSERVER NCNAME DO expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> ATSERVER NCNAME DO expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> ATSERVER NCNAME DO expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 596:
## Known stack suffix:
## expr_single
## LR(1) items:
expr -> expr_single . [ SEMICOLON RPAR RCURLY RBRACK EOF ]
expr -> expr_single . COMMA expr [ SEMICOLON RPAR RCURLY RBRACK EOF ]
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO SEMICOLON RPAR RCURLY RBRACK PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ EOF DIV COMMA CASTAS CASTABLEAS BAR AND ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On COMMA shift to state 597
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On SEMICOLON RPAR RCURLY RBRACK EOF
--   reduce production expr -> expr_single

State 597:
## Known stack suffix:
## expr_single COMMA
## LR(1) items:
expr -> expr_single COMMA . expr [ SEMICOLON RPAR RCURLY RBRACK EOF ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 598
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 598:
## Known stack suffix:
## expr_single COMMA expr
## LR(1) items:
expr -> expr_single COMMA expr . [ SEMICOLON RPAR RCURLY RBRACK EOF ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAR RCURLY RBRACK EOF
--   reduce production expr -> expr_single COMMA expr

State 599:
## Known stack suffix:
## ATTRIBUTECURLY expr
## LR(1) items:
primaryexpr -> ATTRIBUTECURLY expr . RCURLY LCURLY expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> ATTRIBUTECURLY expr . RCURLY LCURLY RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 600
## Reductions:

State 600:
## Known stack suffix:
## ATTRIBUTECURLY expr RCURLY
## LR(1) items:
primaryexpr -> ATTRIBUTECURLY expr RCURLY . LCURLY expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> ATTRIBUTECURLY expr RCURLY . LCURLY RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On LCURLY shift to state 601
## Reductions:

State 601:
## Known stack suffix:
## ATTRIBUTECURLY expr RCURLY LCURLY
## LR(1) items:
primaryexpr -> ATTRIBUTECURLY expr RCURLY LCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> ATTRIBUTECURLY expr RCURLY LCURLY . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On RCURLY shift to state 602
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 603
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 602:
## Known stack suffix:
## ATTRIBUTECURLY expr RCURLY LCURLY RCURLY
## LR(1) items:
primaryexpr -> ATTRIBUTECURLY expr RCURLY LCURLY RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> ATTRIBUTECURLY expr RCURLY LCURLY RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> ATTRIBUTECURLY expr RCURLY LCURLY RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 603:
## Known stack suffix:
## ATTRIBUTECURLY expr RCURLY LCURLY expr
## LR(1) items:
primaryexpr -> ATTRIBUTECURLY expr RCURLY LCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 604
## Reductions:

State 604:
## Known stack suffix:
## ATTRIBUTECURLY expr RCURLY LCURLY expr RCURLY
## LR(1) items:
primaryexpr -> ATTRIBUTECURLY expr RCURLY LCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> ATTRIBUTECURLY expr RCURLY LCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> ATTRIBUTECURLY expr RCURLY LCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 605:
## Known stack suffix:
## ATTRIBUTEQNAMECURLY expr
## LR(1) items:
primaryexpr -> ATTRIBUTEQNAMECURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 606
## Reductions:

State 606:
## Known stack suffix:
## ATTRIBUTEQNAMECURLY expr RCURLY
## LR(1) items:
primaryexpr -> ATTRIBUTEQNAMECURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> ATTRIBUTEQNAMECURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> ATTRIBUTEQNAMECURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 607:
## Known stack suffix:
## LBRACK expr
## LR(1) items:
stepqualifiers -> LBRACK expr . RBRACK [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
stepqualifiers -> LBRACK expr . RBRACK stepqualifiers [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RBRACK shift to state 608
## Reductions:

State 608:
## Known stack suffix:
## LBRACK expr RBRACK
## LR(1) items:
stepqualifiers -> LBRACK expr RBRACK . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
stepqualifiers -> LBRACK expr RBRACK . stepqualifiers [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On LBRACK shift to state 460
-- On stepqualifiers shift to state 609
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production stepqualifiers -> LBRACK expr RBRACK
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production stepqualifiers -> LBRACK expr RBRACK
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 609:
## Known stack suffix:
## LBRACK expr RBRACK stepqualifiers
## LR(1) items:
stepqualifiers -> LBRACK expr RBRACK stepqualifiers . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production stepqualifiers -> LBRACK expr RBRACK stepqualifiers
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production stepqualifiers -> LBRACK expr RBRACK stepqualifiers
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 610:
## Known stack suffix:
## AXIS nodetest stepqualifiers
## LR(1) items:
axisstepexpr -> AXIS nodetest stepqualifiers . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production axisstepexpr -> AXIS nodetest stepqualifiers
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production axisstepexpr -> AXIS nodetest stepqualifiers
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 611:
## Known stack suffix:
## COMMENTCURLY expr
## LR(1) items:
primaryexpr -> COMMENTCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 612
## Reductions:

State 612:
## Known stack suffix:
## COMMENTCURLY expr RCURLY
## LR(1) items:
primaryexpr -> COMMENTCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> COMMENTCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> COMMENTCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 613:
## Known stack suffix:
## COPYDOLLAR qname COLONEQUALS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
transform_copy_clause -> COPYDOLLAR qname COLONEQUALS expr_single . copyvar_clause [ MODIFY ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On COMMA shift to state 614
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
-- On copyvar_clause shift to state 619
## Reductions:
-- On MODIFY
--   reduce production copyvar_clause ->

State 614:
## Known stack suffix:
## COMMA
## LR(1) items:
copyvar_clause -> COMMA . variable COLONEQUALS expr_single copyvar_clause [ MODIFY ]
## Transitions:
-- On VARNAME shift to state 350
-- On DOLLAR shift to state 433
-- On variable shift to state 615
## Reductions:

State 615:
## Known stack suffix:
## COMMA variable
## LR(1) items:
copyvar_clause -> COMMA variable . COLONEQUALS expr_single copyvar_clause [ MODIFY ]
## Transitions:
-- On COLONEQUALS shift to state 616
## Reductions:

State 616:
## Known stack suffix:
## COMMA variable COLONEQUALS
## LR(1) items:
copyvar_clause -> COMMA variable COLONEQUALS . expr_single copyvar_clause [ MODIFY ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 617
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 617:
## Known stack suffix:
## COMMA variable COLONEQUALS expr_single
## LR(1) items:
copyvar_clause -> COMMA variable COLONEQUALS expr_single . copyvar_clause [ MODIFY ]
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On COMMA shift to state 614
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
-- On copyvar_clause shift to state 618
## Reductions:
-- On MODIFY
--   reduce production copyvar_clause ->

State 618:
## Known stack suffix:
## COMMA variable COLONEQUALS expr_single copyvar_clause
## LR(1) items:
copyvar_clause -> COMMA variable COLONEQUALS expr_single copyvar_clause . [ MODIFY ]
## Transitions:
## Reductions:
-- On MODIFY
--   reduce production copyvar_clause -> COMMA variable COLONEQUALS expr_single copyvar_clause

State 619:
## Known stack suffix:
## COPYDOLLAR qname COLONEQUALS expr_single copyvar_clause
## LR(1) items:
transform_copy_clause -> COPYDOLLAR qname COLONEQUALS expr_single copyvar_clause . [ MODIFY ]
## Transitions:
## Reductions:
-- On MODIFY
--   reduce production transform_copy_clause -> COPYDOLLAR qname COLONEQUALS expr_single copyvar_clause

State 620:
## Known stack suffix:
## COPYLCURLY expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO RCURLY PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
primaryexpr -> COPYLCURLY expr_single . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On RCURLY shift to state 621
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:

State 621:
## Known stack suffix:
## COPYLCURLY expr_single RCURLY
## LR(1) items:
primaryexpr -> COPYLCURLY expr_single RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> COPYLCURLY expr_single RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> COPYLCURLY expr_single RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 622:
## Known stack suffix:
## DELETENODE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> DELETENODE expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> DELETENODE expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> DELETENODE expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 623:
## Known stack suffix:
## DOCUMENTCURLY expr
## LR(1) items:
primaryexpr -> DOCUMENTCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 624
## Reductions:

State 624:
## Known stack suffix:
## DOCUMENTCURLY expr RCURLY
## LR(1) items:
primaryexpr -> DOCUMENTCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> DOCUMENTCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> DOCUMENTCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 625:
## Known stack suffix:
## ELEMENTCURLY expr
## LR(1) items:
primaryexpr -> ELEMENTCURLY expr . RCURLY LCURLY expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> ELEMENTCURLY expr . RCURLY LCURLY RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 626
## Reductions:

State 626:
## Known stack suffix:
## ELEMENTCURLY expr RCURLY
## LR(1) items:
primaryexpr -> ELEMENTCURLY expr RCURLY . LCURLY expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> ELEMENTCURLY expr RCURLY . LCURLY RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On LCURLY shift to state 627
## Reductions:

State 627:
## Known stack suffix:
## ELEMENTCURLY expr RCURLY LCURLY
## LR(1) items:
primaryexpr -> ELEMENTCURLY expr RCURLY LCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> ELEMENTCURLY expr RCURLY LCURLY . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On RCURLY shift to state 628
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 629
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 628:
## Known stack suffix:
## ELEMENTCURLY expr RCURLY LCURLY RCURLY
## LR(1) items:
primaryexpr -> ELEMENTCURLY expr RCURLY LCURLY RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> ELEMENTCURLY expr RCURLY LCURLY RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> ELEMENTCURLY expr RCURLY LCURLY RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 629:
## Known stack suffix:
## ELEMENTCURLY expr RCURLY LCURLY expr
## LR(1) items:
primaryexpr -> ELEMENTCURLY expr RCURLY LCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 630
## Reductions:

State 630:
## Known stack suffix:
## ELEMENTCURLY expr RCURLY LCURLY expr RCURLY
## LR(1) items:
primaryexpr -> ELEMENTCURLY expr RCURLY LCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> ELEMENTCURLY expr RCURLY LCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> ELEMENTCURLY expr RCURLY LCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 631:
## Known stack suffix:
## ELEMENTQNAMECURLY expr
## LR(1) items:
primaryexpr -> ELEMENTQNAMECURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 632
## Reductions:

State 632:
## Known stack suffix:
## ELEMENTQNAMECURLY expr RCURLY
## LR(1) items:
primaryexpr -> ELEMENTQNAMECURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> ELEMENTQNAMECURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> ELEMENTQNAMECURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 633:
## Known stack suffix:
## EVALCLOSURE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> EVALCLOSURE expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> EVALCLOSURE expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> EVALCLOSURE expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 634:
## Known stack suffix:
## EVERYDOLLAR bindings SATISFIES expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> EVERYDOLLAR bindings SATISFIES expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> EVERYDOLLAR bindings SATISFIES expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> EVERYDOLLAR bindings SATISFIES expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 635:
## Known stack suffix:
## FORDOLLAR qname opt_type_declaration opt_positional_var IN expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
for_let_clause -> FORDOLLAR qname opt_type_declaration opt_positional_var IN expr_single . for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On LETDOLLAR shift to state 407
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FORDOLLAR shift to state 429
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On COMMA shift to state 636
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
-- On for_let_clause shift to state 642
-- On for_clause shift to state 644
## Reductions:
-- On WHERE STABLEORDERBY RETURN ORDERBY
--   reduce production for_clause ->

State 636:
## Known stack suffix:
## COMMA
## LR(1) items:
for_clause -> COMMA . variable opt_type_declaration opt_positional_var IN expr_single for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On VARNAME shift to state 350
-- On DOLLAR shift to state 433
-- On variable shift to state 637
## Reductions:

State 637:
## Known stack suffix:
## COMMA variable
## LR(1) items:
for_clause -> COMMA variable . opt_type_declaration opt_positional_var IN expr_single for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On AS shift to state 288
-- On opt_type_declaration shift to state 638
## Reductions:
-- On IN AT
--   reduce production opt_type_declaration ->

State 638:
## Known stack suffix:
## COMMA variable opt_type_declaration
## LR(1) items:
for_clause -> COMMA variable opt_type_declaration . opt_positional_var IN expr_single for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On AT shift to state 432
-- On opt_positional_var shift to state 639
## Reductions:
-- On IN
--   reduce production opt_positional_var ->

State 639:
## Known stack suffix:
## COMMA variable opt_type_declaration opt_positional_var
## LR(1) items:
for_clause -> COMMA variable opt_type_declaration opt_positional_var . IN expr_single for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On IN shift to state 640
## Reductions:

State 640:
## Known stack suffix:
## COMMA variable opt_type_declaration opt_positional_var IN
## LR(1) items:
for_clause -> COMMA variable opt_type_declaration opt_positional_var IN . expr_single for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 641
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 641:
## Known stack suffix:
## COMMA variable opt_type_declaration opt_positional_var IN expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
for_clause -> COMMA variable opt_type_declaration opt_positional_var IN expr_single . for_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On LETDOLLAR shift to state 407
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FORDOLLAR shift to state 429
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On COMMA shift to state 636
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
-- On for_let_clause shift to state 642
-- On for_clause shift to state 643
## Reductions:
-- On WHERE STABLEORDERBY RETURN ORDERBY
--   reduce production for_clause ->

State 642:
## Known stack suffix:
## for_let_clause
## LR(1) items:
for_clause -> for_let_clause . [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
## Reductions:
-- On WHERE STABLEORDERBY RETURN ORDERBY
--   reduce production for_clause -> for_let_clause

State 643:
## Known stack suffix:
## COMMA variable opt_type_declaration opt_positional_var IN expr_single for_clause
## LR(1) items:
for_clause -> COMMA variable opt_type_declaration opt_positional_var IN expr_single for_clause . [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
## Reductions:
-- On WHERE STABLEORDERBY RETURN ORDERBY
--   reduce production for_clause -> COMMA variable opt_type_declaration opt_positional_var IN expr_single for_clause

State 644:
## Known stack suffix:
## FORDOLLAR qname opt_type_declaration opt_positional_var IN expr_single for_clause
## LR(1) items:
for_let_clause -> FORDOLLAR qname opt_type_declaration opt_positional_var IN expr_single for_clause . [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
## Reductions:
-- On WHERE STABLEORDERBY RETURN ORDERBY
--   reduce production for_let_clause -> FORDOLLAR qname opt_type_declaration opt_positional_var IN expr_single for_clause

State 645:
## Known stack suffix:
## FORSERVER NCNAME IMPLEMENT NCNAME BOX expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> FORSERVER NCNAME IMPLEMENT NCNAME BOX expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> FORSERVER NCNAME IMPLEMENT NCNAME BOX expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> FORSERVER NCNAME IMPLEMENT NCNAME BOX expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 646:
## Known stack suffix:
## FROMSERVER NCNAME RETURN expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> FROMSERVER NCNAME RETURN expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> FROMSERVER NCNAME RETURN expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> FROMSERVER NCNAME RETURN expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 647:
## Known stack suffix:
## FUNCTIONNAMELPAR expr
## LR(1) items:
primaryexpr -> FUNCTIONNAMELPAR expr . RPAR [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RPAR shift to state 648
## Reductions:

State 648:
## Known stack suffix:
## FUNCTIONNAMELPAR expr RPAR
## LR(1) items:
primaryexpr -> FUNCTIONNAMELPAR expr RPAR . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> FUNCTIONNAMELPAR expr RPAR
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> FUNCTIONNAMELPAR expr RPAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 649:
## Known stack suffix:
## IFLPAR expr
## LR(1) items:
expr_single -> IFLPAR expr . RPAR THEN expr_single ELSE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RPAR shift to state 650
## Reductions:

State 650:
## Known stack suffix:
## IFLPAR expr RPAR
## LR(1) items:
expr_single -> IFLPAR expr RPAR . THEN expr_single ELSE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On THEN shift to state 651
## Reductions:

State 651:
## Known stack suffix:
## IFLPAR expr RPAR THEN
## LR(1) items:
expr_single -> IFLPAR expr RPAR THEN . expr_single ELSE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 652
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 652:
## Known stack suffix:
## IFLPAR expr RPAR THEN expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> IFLPAR expr RPAR THEN expr_single . ELSE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ ELSE DIV CASTAS CASTABLEAS BAR AND ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On ELSE shift to state 653
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:

State 653:
## Known stack suffix:
## IFLPAR expr RPAR THEN expr_single ELSE
## LR(1) items:
expr_single -> IFLPAR expr RPAR THEN expr_single ELSE . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 654
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 654:
## Known stack suffix:
## IFLPAR expr RPAR THEN expr_single ELSE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> IFLPAR expr RPAR THEN expr_single ELSE expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> IFLPAR expr RPAR THEN expr_single ELSE expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> IFLPAR expr RPAR THEN expr_single ELSE expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 655:
## Known stack suffix:
## INSERTNODE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BEFORE BAR ASLAST ASFIRST AND AFTER ]
expr_single -> INSERTNODE expr_single . INTO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE expr_single . ASLAST INTO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE expr_single . ASFIRST INTO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE expr_single . AFTER expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE expr_single . BEFORE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTO shift to state 656
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BEFORE shift to state 658
-- On BAR shift to state 559
-- On ASLAST shift to state 660
-- On ASFIRST shift to state 663
-- On AND shift to state 561
-- On AFTER shift to state 666
## Reductions:

State 656:
## Known stack suffix:
## INSERTNODE expr_single INTO
## LR(1) items:
expr_single -> INSERTNODE expr_single INTO . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 657
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 657:
## Known stack suffix:
## INSERTNODE expr_single INTO expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE expr_single INTO expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> INSERTNODE expr_single INTO expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> INSERTNODE expr_single INTO expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 658:
## Known stack suffix:
## INSERTNODE expr_single BEFORE
## LR(1) items:
expr_single -> INSERTNODE expr_single BEFORE . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 659
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 659:
## Known stack suffix:
## INSERTNODE expr_single BEFORE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE expr_single BEFORE expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> INSERTNODE expr_single BEFORE expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> INSERTNODE expr_single BEFORE expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 660:
## Known stack suffix:
## INSERTNODE expr_single ASLAST
## LR(1) items:
expr_single -> INSERTNODE expr_single ASLAST . INTO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On INTO shift to state 661
## Reductions:

State 661:
## Known stack suffix:
## INSERTNODE expr_single ASLAST INTO
## LR(1) items:
expr_single -> INSERTNODE expr_single ASLAST INTO . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 662
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 662:
## Known stack suffix:
## INSERTNODE expr_single ASLAST INTO expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE expr_single ASLAST INTO expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> INSERTNODE expr_single ASLAST INTO expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> INSERTNODE expr_single ASLAST INTO expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 663:
## Known stack suffix:
## INSERTNODE expr_single ASFIRST
## LR(1) items:
expr_single -> INSERTNODE expr_single ASFIRST . INTO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On INTO shift to state 664
## Reductions:

State 664:
## Known stack suffix:
## INSERTNODE expr_single ASFIRST INTO
## LR(1) items:
expr_single -> INSERTNODE expr_single ASFIRST INTO . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 665
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 665:
## Known stack suffix:
## INSERTNODE expr_single ASFIRST INTO expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE expr_single ASFIRST INTO expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> INSERTNODE expr_single ASFIRST INTO expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> INSERTNODE expr_single ASFIRST INTO expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 666:
## Known stack suffix:
## INSERTNODE expr_single AFTER
## LR(1) items:
expr_single -> INSERTNODE expr_single AFTER . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 667
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 667:
## Known stack suffix:
## INSERTNODE expr_single AFTER expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> INSERTNODE expr_single AFTER expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> INSERTNODE expr_single AFTER expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> INSERTNODE expr_single AFTER expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 668:
## Known stack suffix:
## DECLAREDOLLAR qname opt_type_declaration COLONEQUALS expr_single
## LR(1) items:
block_decl -> DECLAREDOLLAR qname opt_type_declaration COLONEQUALS expr_single . block_sub_decl [ SEMICOLON ]
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On COMMA shift to state 669
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
-- On block_sub_decl shift to state 675
## Reductions:
-- On SEMICOLON
--   reduce production block_sub_decl ->

State 669:
## Known stack suffix:
## COMMA
## LR(1) items:
block_sub_decl -> COMMA . variable opt_type_declaration COLONEQUALS expr_single block_sub_decl [ SEMICOLON ]
## Transitions:
-- On VARNAME shift to state 350
-- On DOLLAR shift to state 433
-- On variable shift to state 670
## Reductions:

State 670:
## Known stack suffix:
## COMMA variable
## LR(1) items:
block_sub_decl -> COMMA variable . opt_type_declaration COLONEQUALS expr_single block_sub_decl [ SEMICOLON ]
## Transitions:
-- On AS shift to state 288
-- On opt_type_declaration shift to state 671
## Reductions:
-- On COLONEQUALS
--   reduce production opt_type_declaration ->

State 671:
## Known stack suffix:
## COMMA variable opt_type_declaration
## LR(1) items:
block_sub_decl -> COMMA variable opt_type_declaration . COLONEQUALS expr_single block_sub_decl [ SEMICOLON ]
## Transitions:
-- On COLONEQUALS shift to state 672
## Reductions:

State 672:
## Known stack suffix:
## COMMA variable opt_type_declaration COLONEQUALS
## LR(1) items:
block_sub_decl -> COMMA variable opt_type_declaration COLONEQUALS . expr_single block_sub_decl [ SEMICOLON ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 673
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 673:
## Known stack suffix:
## COMMA variable opt_type_declaration COLONEQUALS expr_single
## LR(1) items:
block_sub_decl -> COMMA variable opt_type_declaration COLONEQUALS expr_single . block_sub_decl [ SEMICOLON ]
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On COMMA shift to state 669
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
-- On block_sub_decl shift to state 674
## Reductions:
-- On SEMICOLON
--   reduce production block_sub_decl ->

State 674:
## Known stack suffix:
## COMMA variable opt_type_declaration COLONEQUALS expr_single block_sub_decl
## LR(1) items:
block_sub_decl -> COMMA variable opt_type_declaration COLONEQUALS expr_single block_sub_decl . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON
--   reduce production block_sub_decl -> COMMA variable opt_type_declaration COLONEQUALS expr_single block_sub_decl

State 675:
## Known stack suffix:
## DECLAREDOLLAR qname opt_type_declaration COLONEQUALS expr_single block_sub_decl
## LR(1) items:
block_decl -> DECLAREDOLLAR qname opt_type_declaration COLONEQUALS expr_single block_sub_decl . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON
--   reduce production block_decl -> DECLAREDOLLAR qname opt_type_declaration COLONEQUALS expr_single block_sub_decl

State 676:
## Known stack suffix:
## block_decl_list
## LR(1) items:
block -> block_decl_list . block_exprs [ RCURLY ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 677
-- On decimal shift to state 489
-- On block_exprs shift to state 680
-- On axisstepexpr shift to state 490
## Reductions:

State 677:
## Known stack suffix:
## expr
## LR(1) items:
block_exprs -> expr . SEMICOLON block_exprs [ RCURLY ]
block_exprs -> expr . [ RCURLY ]
## Transitions:
-- On SEMICOLON shift to state 678
## Reductions:
-- On RCURLY
--   reduce production block_exprs -> expr

State 678:
## Known stack suffix:
## expr SEMICOLON
## LR(1) items:
block_exprs -> expr SEMICOLON . block_exprs [ RCURLY ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 677
-- On decimal shift to state 489
-- On block_exprs shift to state 679
-- On axisstepexpr shift to state 490
## Reductions:

State 679:
## Known stack suffix:
## expr SEMICOLON block_exprs
## LR(1) items:
block_exprs -> expr SEMICOLON block_exprs . [ RCURLY ]
## Transitions:
## Reductions:
-- On RCURLY
--   reduce production block_exprs -> expr SEMICOLON block_exprs

State 680:
## Known stack suffix:
## block_decl_list block_exprs
## LR(1) items:
block -> block_decl_list block_exprs . [ RCURLY ]
## Transitions:
## Reductions:
-- On RCURLY
--   reduce production block -> block_decl_list block_exprs

State 681:
## Known stack suffix:
## block_decl
## LR(1) items:
block_decl_list -> block_decl . SEMICOLON block_decl_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 682
## Reductions:

State 682:
## Known stack suffix:
## block_decl SEMICOLON
## LR(1) items:
block_decl_list -> block_decl SEMICOLON . block_decl_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREDOLLAR shift to state 412
-- On block_decl_list shift to state 683
-- On block_decl shift to state 681
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production block_decl_list ->

State 683:
## Known stack suffix:
## block_decl SEMICOLON block_decl_list
## LR(1) items:
block_decl_list -> block_decl SEMICOLON block_decl_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production block_decl_list -> block_decl SEMICOLON block_decl_list

State 684:
## Known stack suffix:
## LCURLY block
## LR(1) items:
primaryexpr -> LCURLY block . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 685
## Reductions:

State 685:
## Known stack suffix:
## LCURLY block RCURLY
## LR(1) items:
primaryexpr -> LCURLY block RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> LCURLY block RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> LCURLY block RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 686:
## Known stack suffix:
## LETDOLLAR qname opt_type_declaration COLONEQUALS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
for_let_clause -> LETDOLLAR qname opt_type_declaration COLONEQUALS expr_single . let_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On LETDOLLAR shift to state 407
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FORDOLLAR shift to state 429
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On COMMA shift to state 687
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
-- On let_clause shift to state 694
-- On for_let_clause shift to state 693
## Reductions:
-- On WHERE STABLEORDERBY RETURN ORDERBY
--   reduce production let_clause ->

State 687:
## Known stack suffix:
## COMMA
## LR(1) items:
let_clause -> COMMA . variable opt_type_declaration COLONEQUALS expr_single let_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On VARNAME shift to state 350
-- On DOLLAR shift to state 433
-- On variable shift to state 688
## Reductions:

State 688:
## Known stack suffix:
## COMMA variable
## LR(1) items:
let_clause -> COMMA variable . opt_type_declaration COLONEQUALS expr_single let_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On AS shift to state 288
-- On opt_type_declaration shift to state 689
## Reductions:
-- On COLONEQUALS
--   reduce production opt_type_declaration ->

State 689:
## Known stack suffix:
## COMMA variable opt_type_declaration
## LR(1) items:
let_clause -> COMMA variable opt_type_declaration . COLONEQUALS expr_single let_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On COLONEQUALS shift to state 690
## Reductions:

State 690:
## Known stack suffix:
## COMMA variable opt_type_declaration COLONEQUALS
## LR(1) items:
let_clause -> COMMA variable opt_type_declaration COLONEQUALS . expr_single let_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 691
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 691:
## Known stack suffix:
## COMMA variable opt_type_declaration COLONEQUALS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ WHERE UNION TREATAS TO STABLEORDERBY RETURN PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
let_clause -> COMMA variable opt_type_declaration COLONEQUALS expr_single . let_clause [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On LETDOLLAR shift to state 407
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FORDOLLAR shift to state 429
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On COMMA shift to state 687
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
-- On let_clause shift to state 692
-- On for_let_clause shift to state 693
## Reductions:
-- On WHERE STABLEORDERBY RETURN ORDERBY
--   reduce production let_clause ->

State 692:
## Known stack suffix:
## COMMA variable opt_type_declaration COLONEQUALS expr_single let_clause
## LR(1) items:
let_clause -> COMMA variable opt_type_declaration COLONEQUALS expr_single let_clause . [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
## Reductions:
-- On WHERE STABLEORDERBY RETURN ORDERBY
--   reduce production let_clause -> COMMA variable opt_type_declaration COLONEQUALS expr_single let_clause

State 693:
## Known stack suffix:
## for_let_clause
## LR(1) items:
let_clause -> for_let_clause . [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
## Reductions:
-- On WHERE STABLEORDERBY RETURN ORDERBY
--   reduce production let_clause -> for_let_clause

State 694:
## Known stack suffix:
## LETDOLLAR qname opt_type_declaration COLONEQUALS expr_single let_clause
## LR(1) items:
for_let_clause -> LETDOLLAR qname opt_type_declaration COLONEQUALS expr_single let_clause . [ WHERE STABLEORDERBY RETURN ORDERBY ]
## Transitions:
## Reductions:
-- On WHERE STABLEORDERBY RETURN ORDERBY
--   reduce production for_let_clause -> LETDOLLAR qname opt_type_declaration COLONEQUALS expr_single let_clause

State 695:
## Known stack suffix:
## LETSERVER NCNAME IMPLEMENT NCNAME AT expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> LETSERVER NCNAME IMPLEMENT NCNAME AT expr_single . RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On RETURN shift to state 696
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:

State 696:
## Known stack suffix:
## LETSERVER NCNAME IMPLEMENT NCNAME AT expr_single RETURN
## LR(1) items:
expr_single -> LETSERVER NCNAME IMPLEMENT NCNAME AT expr_single RETURN . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 697
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 697:
## Known stack suffix:
## LETSERVER NCNAME IMPLEMENT NCNAME AT expr_single RETURN expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> LETSERVER NCNAME IMPLEMENT NCNAME AT expr_single RETURN expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> LETSERVER NCNAME IMPLEMENT NCNAME AT expr_single RETURN expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> LETSERVER NCNAME IMPLEMENT NCNAME AT expr_single RETURN expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 698:
## Known stack suffix:
## LETVARDOLLAR qname opt_type_declaration COLONEQUALS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO RETURN PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> LETVARDOLLAR qname opt_type_declaration COLONEQUALS expr_single . return_clause [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On RETURN shift to state 586
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
-- On return_clause shift to state 699
## Reductions:

State 699:
## Known stack suffix:
## LETVARDOLLAR qname opt_type_declaration COLONEQUALS expr_single return_clause
## LR(1) items:
expr_single -> LETVARDOLLAR qname opt_type_declaration COLONEQUALS expr_single return_clause . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> LETVARDOLLAR qname opt_type_declaration COLONEQUALS expr_single return_clause
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> LETVARDOLLAR qname opt_type_declaration COLONEQUALS expr_single return_clause
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 700:
## Known stack suffix:
## ATTRIBUTETEXTLCURLY expr
## LR(1) items:
attributecontent -> ATTRIBUTETEXTLCURLY expr . RCURLY attributecontent [ S ROPENINGTAG REMPTYELEMENT ]
## Transitions:
-- On RCURLY shift to state 701
## Reductions:

State 701:
## Known stack suffix:
## ATTRIBUTETEXTLCURLY expr RCURLY
## LR(1) items:
attributecontent -> ATTRIBUTETEXTLCURLY expr RCURLY . attributecontent [ S ROPENINGTAG REMPTYELEMENT ]
## Transitions:
-- On TEXTENTITYREF shift to state 393
-- On TEXTCHARREF shift to state 394
-- On ATTRIBUTETEXTLCURLY shift to state 395
-- On ATTRIBUTETEXT shift to state 702
-- On attributecontent shift to state 703
## Reductions:

State 702:
## Known stack suffix:
## ATTRIBUTETEXT
## LR(1) items:
attributecontent -> ATTRIBUTETEXT . [ S ROPENINGTAG REMPTYELEMENT ]
## Transitions:
## Reductions:
-- On S ROPENINGTAG REMPTYELEMENT
--   reduce production attributecontent -> ATTRIBUTETEXT

State 703:
## Known stack suffix:
## ATTRIBUTETEXTLCURLY expr RCURLY attributecontent
## LR(1) items:
attributecontent -> ATTRIBUTETEXTLCURLY expr RCURLY attributecontent . [ S ROPENINGTAG REMPTYELEMENT ]
## Transitions:
## Reductions:
-- On S ROPENINGTAG REMPTYELEMENT
--   reduce production attributecontent -> ATTRIBUTETEXTLCURLY expr RCURLY attributecontent

State 704:
## Known stack suffix:
## TEXTCHARREF attributecontent
## LR(1) items:
attributecontent -> TEXTCHARREF attributecontent . [ S ROPENINGTAG REMPTYELEMENT ]
## Transitions:
## Reductions:
-- On S ROPENINGTAG REMPTYELEMENT
--   reduce production attributecontent -> TEXTCHARREF attributecontent

State 705:
## Known stack suffix:
## TEXTENTITYREF attributecontent
## LR(1) items:
attributecontent -> TEXTENTITYREF attributecontent . [ S ROPENINGTAG REMPTYELEMENT ]
## Transitions:
## Reductions:
-- On S ROPENINGTAG REMPTYELEMENT
--   reduce production attributecontent -> TEXTENTITYREF attributecontent

State 706:
## Known stack suffix:
## S qname eq attributecontent
## LR(1) items:
attrlist -> S qname eq attributecontent . attrlist [ ROPENINGTAG REMPTYELEMENT ]
## Transitions:
-- On S shift to state 385
-- On attrlist shift to state 707
## Reductions:
-- On ROPENINGTAG REMPTYELEMENT
--   reduce production attrlist ->

State 707:
## Known stack suffix:
## S qname eq attributecontent attrlist
## LR(1) items:
attrlist -> S qname eq attributecontent attrlist . [ ROPENINGTAG REMPTYELEMENT ]
## Transitions:
## Reductions:
-- On ROPENINGTAG REMPTYELEMENT
--   reduce production attrlist -> S qname eq attributecontent attrlist

State 708:
## Known stack suffix:
## LOPENINGTAG qname attrlist
## LR(1) items:
primaryexpr -> LOPENINGTAG qname attrlist . REMPTYELEMENT [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
primaryexpr -> LOPENINGTAG qname attrlist . ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On ROPENINGTAG shift to state 709
-- On REMPTYELEMENT shift to state 742
## Reductions:

State 709:
## Known stack suffix:
## LOPENINGTAG qname attrlist ROPENINGTAG
## LR(1) items:
primaryexpr -> LOPENINGTAG qname attrlist ROPENINGTAG . elementcontent qname opt_whitespace RCLOSINGTAG [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TEXTOPENINGPI shift to state 710
-- On TEXTLOPENINGTAG shift to state 712
-- On TEXTLOPENINGCOMMENT shift to state 716
-- On TEXTLCURLY shift to state 718
-- On TEXTLCLOSINGTAG shift to state 721
-- On TEXTENTITYREF shift to state 722
-- On TEXTCHARREF shift to state 723
-- On LCLOSINGTAG shift to state 724
-- On elementcontent shift to state 738
## Reductions:

State 710:
## Known stack suffix:
## TEXTOPENINGPI
## LR(1) items:
elementcontent -> TEXTOPENINGPI . TEXTCLOSINGPI elementcontent [ QNAME NCNAME ]
## Transitions:
-- On TEXTCLOSINGPI shift to state 711
## Reductions:

State 711:
## Known stack suffix:
## TEXTOPENINGPI TEXTCLOSINGPI
## LR(1) items:
elementcontent -> TEXTOPENINGPI TEXTCLOSINGPI . elementcontent [ QNAME NCNAME ]
## Transitions:
-- On TEXTOPENINGPI shift to state 710
-- On TEXTLOPENINGTAG shift to state 712
-- On TEXTLOPENINGCOMMENT shift to state 716
-- On TEXTLCURLY shift to state 718
-- On TEXTLCLOSINGTAG shift to state 721
-- On TEXTENTITYREF shift to state 722
-- On TEXTCHARREF shift to state 723
-- On LCLOSINGTAG shift to state 724
-- On elementcontent shift to state 737
## Reductions:

State 712:
## Known stack suffix:
## TEXTLOPENINGTAG
## LR(1) items:
elementcontent -> TEXTLOPENINGTAG . qname attrlist REMPTYELEMENT elementcontent [ QNAME NCNAME ]
elementcontent -> TEXTLOPENINGTAG . qname attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG elementcontent [ QNAME NCNAME ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 713
## Reductions:

State 713:
## Known stack suffix:
## TEXTLOPENINGTAG qname
## LR(1) items:
elementcontent -> TEXTLOPENINGTAG qname . attrlist REMPTYELEMENT elementcontent [ QNAME NCNAME ]
elementcontent -> TEXTLOPENINGTAG qname . attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG elementcontent [ QNAME NCNAME ]
## Transitions:
-- On S shift to state 385
-- On attrlist shift to state 714
## Reductions:
-- On ROPENINGTAG REMPTYELEMENT
--   reduce production attrlist ->

State 714:
## Known stack suffix:
## TEXTLOPENINGTAG qname attrlist
## LR(1) items:
elementcontent -> TEXTLOPENINGTAG qname attrlist . REMPTYELEMENT elementcontent [ QNAME NCNAME ]
elementcontent -> TEXTLOPENINGTAG qname attrlist . ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG elementcontent [ QNAME NCNAME ]
## Transitions:
-- On ROPENINGTAG shift to state 715
-- On REMPTYELEMENT shift to state 735
## Reductions:

State 715:
## Known stack suffix:
## TEXTLOPENINGTAG qname attrlist ROPENINGTAG
## LR(1) items:
elementcontent -> TEXTLOPENINGTAG qname attrlist ROPENINGTAG . elementcontent qname opt_whitespace RCLOSINGTAG elementcontent [ QNAME NCNAME ]
## Transitions:
-- On TEXTOPENINGPI shift to state 710
-- On TEXTLOPENINGTAG shift to state 712
-- On TEXTLOPENINGCOMMENT shift to state 716
-- On TEXTLCURLY shift to state 718
-- On TEXTLCLOSINGTAG shift to state 721
-- On TEXTENTITYREF shift to state 722
-- On TEXTCHARREF shift to state 723
-- On LCLOSINGTAG shift to state 724
-- On elementcontent shift to state 729
## Reductions:

State 716:
## Known stack suffix:
## TEXTLOPENINGCOMMENT
## LR(1) items:
elementcontent -> TEXTLOPENINGCOMMENT . TEXTRCLOSINGCOMMENT elementcontent [ QNAME NCNAME ]
## Transitions:
-- On TEXTRCLOSINGCOMMENT shift to state 717
## Reductions:

State 717:
## Known stack suffix:
## TEXTLOPENINGCOMMENT TEXTRCLOSINGCOMMENT
## LR(1) items:
elementcontent -> TEXTLOPENINGCOMMENT TEXTRCLOSINGCOMMENT . elementcontent [ QNAME NCNAME ]
## Transitions:
-- On TEXTOPENINGPI shift to state 710
-- On TEXTLOPENINGTAG shift to state 712
-- On TEXTLOPENINGCOMMENT shift to state 716
-- On TEXTLCURLY shift to state 718
-- On TEXTLCLOSINGTAG shift to state 721
-- On TEXTENTITYREF shift to state 722
-- On TEXTCHARREF shift to state 723
-- On LCLOSINGTAG shift to state 724
-- On elementcontent shift to state 728
## Reductions:

State 718:
## Known stack suffix:
## TEXTLCURLY
## LR(1) items:
elementcontent -> TEXTLCURLY . expr RCURLY elementcontent [ QNAME NCNAME ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 719
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 719:
## Known stack suffix:
## TEXTLCURLY expr
## LR(1) items:
elementcontent -> TEXTLCURLY expr . RCURLY elementcontent [ QNAME NCNAME ]
## Transitions:
-- On RCURLY shift to state 720
## Reductions:

State 720:
## Known stack suffix:
## TEXTLCURLY expr RCURLY
## LR(1) items:
elementcontent -> TEXTLCURLY expr RCURLY . elementcontent [ QNAME NCNAME ]
## Transitions:
-- On TEXTOPENINGPI shift to state 710
-- On TEXTLOPENINGTAG shift to state 712
-- On TEXTLOPENINGCOMMENT shift to state 716
-- On TEXTLCURLY shift to state 718
-- On TEXTLCLOSINGTAG shift to state 721
-- On TEXTENTITYREF shift to state 722
-- On TEXTCHARREF shift to state 723
-- On LCLOSINGTAG shift to state 724
-- On elementcontent shift to state 727
## Reductions:

State 721:
## Known stack suffix:
## TEXTLCLOSINGTAG
## LR(1) items:
elementcontent -> TEXTLCLOSINGTAG . [ QNAME NCNAME ]
## Transitions:
## Reductions:
-- On QNAME NCNAME
--   reduce production elementcontent -> TEXTLCLOSINGTAG

State 722:
## Known stack suffix:
## TEXTENTITYREF
## LR(1) items:
elementcontent -> TEXTENTITYREF . elementcontent [ QNAME NCNAME ]
## Transitions:
-- On TEXTOPENINGPI shift to state 710
-- On TEXTLOPENINGTAG shift to state 712
-- On TEXTLOPENINGCOMMENT shift to state 716
-- On TEXTLCURLY shift to state 718
-- On TEXTLCLOSINGTAG shift to state 721
-- On TEXTENTITYREF shift to state 722
-- On TEXTCHARREF shift to state 723
-- On LCLOSINGTAG shift to state 724
-- On elementcontent shift to state 726
## Reductions:

State 723:
## Known stack suffix:
## TEXTCHARREF
## LR(1) items:
elementcontent -> TEXTCHARREF . elementcontent [ QNAME NCNAME ]
## Transitions:
-- On TEXTOPENINGPI shift to state 710
-- On TEXTLOPENINGTAG shift to state 712
-- On TEXTLOPENINGCOMMENT shift to state 716
-- On TEXTLCURLY shift to state 718
-- On TEXTLCLOSINGTAG shift to state 721
-- On TEXTENTITYREF shift to state 722
-- On TEXTCHARREF shift to state 723
-- On LCLOSINGTAG shift to state 724
-- On elementcontent shift to state 725
## Reductions:

State 724:
## Known stack suffix:
## LCLOSINGTAG
## LR(1) items:
elementcontent -> LCLOSINGTAG . [ QNAME NCNAME ]
## Transitions:
## Reductions:
-- On QNAME NCNAME
--   reduce production elementcontent -> LCLOSINGTAG

State 725:
## Known stack suffix:
## TEXTCHARREF elementcontent
## LR(1) items:
elementcontent -> TEXTCHARREF elementcontent . [ QNAME NCNAME ]
## Transitions:
## Reductions:
-- On QNAME NCNAME
--   reduce production elementcontent -> TEXTCHARREF elementcontent

State 726:
## Known stack suffix:
## TEXTENTITYREF elementcontent
## LR(1) items:
elementcontent -> TEXTENTITYREF elementcontent . [ QNAME NCNAME ]
## Transitions:
## Reductions:
-- On QNAME NCNAME
--   reduce production elementcontent -> TEXTENTITYREF elementcontent

State 727:
## Known stack suffix:
## TEXTLCURLY expr RCURLY elementcontent
## LR(1) items:
elementcontent -> TEXTLCURLY expr RCURLY elementcontent . [ QNAME NCNAME ]
## Transitions:
## Reductions:
-- On QNAME NCNAME
--   reduce production elementcontent -> TEXTLCURLY expr RCURLY elementcontent

State 728:
## Known stack suffix:
## TEXTLOPENINGCOMMENT TEXTRCLOSINGCOMMENT elementcontent
## LR(1) items:
elementcontent -> TEXTLOPENINGCOMMENT TEXTRCLOSINGCOMMENT elementcontent . [ QNAME NCNAME ]
## Transitions:
## Reductions:
-- On QNAME NCNAME
--   reduce production elementcontent -> TEXTLOPENINGCOMMENT TEXTRCLOSINGCOMMENT elementcontent

State 729:
## Known stack suffix:
## TEXTLOPENINGTAG qname attrlist ROPENINGTAG elementcontent
## LR(1) items:
elementcontent -> TEXTLOPENINGTAG qname attrlist ROPENINGTAG elementcontent . qname opt_whitespace RCLOSINGTAG elementcontent [ QNAME NCNAME ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 730
## Reductions:

State 730:
## Known stack suffix:
## TEXTLOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname
## LR(1) items:
elementcontent -> TEXTLOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname . opt_whitespace RCLOSINGTAG elementcontent [ QNAME NCNAME ]
## Transitions:
-- On S shift to state 731
-- On opt_whitespace shift to state 732
## Reductions:
-- On RCLOSINGTAG
--   reduce production opt_whitespace ->

State 731:
## Known stack suffix:
## S
## LR(1) items:
opt_whitespace -> S . [ RCLOSINGTAG ]
## Transitions:
## Reductions:
-- On RCLOSINGTAG
--   reduce production opt_whitespace -> S

State 732:
## Known stack suffix:
## TEXTLOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace
## LR(1) items:
elementcontent -> TEXTLOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace . RCLOSINGTAG elementcontent [ QNAME NCNAME ]
## Transitions:
-- On RCLOSINGTAG shift to state 733
## Reductions:

State 733:
## Known stack suffix:
## TEXTLOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG
## LR(1) items:
elementcontent -> TEXTLOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG . elementcontent [ QNAME NCNAME ]
## Transitions:
-- On TEXTOPENINGPI shift to state 710
-- On TEXTLOPENINGTAG shift to state 712
-- On TEXTLOPENINGCOMMENT shift to state 716
-- On TEXTLCURLY shift to state 718
-- On TEXTLCLOSINGTAG shift to state 721
-- On TEXTENTITYREF shift to state 722
-- On TEXTCHARREF shift to state 723
-- On LCLOSINGTAG shift to state 724
-- On elementcontent shift to state 734
## Reductions:

State 734:
## Known stack suffix:
## TEXTLOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG elementcontent
## LR(1) items:
elementcontent -> TEXTLOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG elementcontent . [ QNAME NCNAME ]
## Transitions:
## Reductions:
-- On QNAME NCNAME
--   reduce production elementcontent -> TEXTLOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG elementcontent

State 735:
## Known stack suffix:
## TEXTLOPENINGTAG qname attrlist REMPTYELEMENT
## LR(1) items:
elementcontent -> TEXTLOPENINGTAG qname attrlist REMPTYELEMENT . elementcontent [ QNAME NCNAME ]
## Transitions:
-- On TEXTOPENINGPI shift to state 710
-- On TEXTLOPENINGTAG shift to state 712
-- On TEXTLOPENINGCOMMENT shift to state 716
-- On TEXTLCURLY shift to state 718
-- On TEXTLCLOSINGTAG shift to state 721
-- On TEXTENTITYREF shift to state 722
-- On TEXTCHARREF shift to state 723
-- On LCLOSINGTAG shift to state 724
-- On elementcontent shift to state 736
## Reductions:

State 736:
## Known stack suffix:
## TEXTLOPENINGTAG qname attrlist REMPTYELEMENT elementcontent
## LR(1) items:
elementcontent -> TEXTLOPENINGTAG qname attrlist REMPTYELEMENT elementcontent . [ QNAME NCNAME ]
## Transitions:
## Reductions:
-- On QNAME NCNAME
--   reduce production elementcontent -> TEXTLOPENINGTAG qname attrlist REMPTYELEMENT elementcontent

State 737:
## Known stack suffix:
## TEXTOPENINGPI TEXTCLOSINGPI elementcontent
## LR(1) items:
elementcontent -> TEXTOPENINGPI TEXTCLOSINGPI elementcontent . [ QNAME NCNAME ]
## Transitions:
## Reductions:
-- On QNAME NCNAME
--   reduce production elementcontent -> TEXTOPENINGPI TEXTCLOSINGPI elementcontent

State 738:
## Known stack suffix:
## LOPENINGTAG qname attrlist ROPENINGTAG elementcontent
## LR(1) items:
primaryexpr -> LOPENINGTAG qname attrlist ROPENINGTAG elementcontent . qname opt_whitespace RCLOSINGTAG [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 739
## Reductions:

State 739:
## Known stack suffix:
## LOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname
## LR(1) items:
primaryexpr -> LOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname . opt_whitespace RCLOSINGTAG [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On S shift to state 731
-- On opt_whitespace shift to state 740
## Reductions:
-- On RCLOSINGTAG
--   reduce production opt_whitespace ->

State 740:
## Known stack suffix:
## LOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace
## LR(1) items:
primaryexpr -> LOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace . RCLOSINGTAG [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCLOSINGTAG shift to state 741
## Reductions:

State 741:
## Known stack suffix:
## LOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG
## LR(1) items:
primaryexpr -> LOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> LOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> LOPENINGTAG qname attrlist ROPENINGTAG elementcontent qname opt_whitespace RCLOSINGTAG
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 742:
## Known stack suffix:
## LOPENINGTAG qname attrlist REMPTYELEMENT
## LR(1) items:
primaryexpr -> LOPENINGTAG qname attrlist REMPTYELEMENT . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> LOPENINGTAG qname attrlist REMPTYELEMENT
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> LOPENINGTAG qname attrlist REMPTYELEMENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 743:
## Known stack suffix:
## LPAR expr
## LR(1) items:
primaryexpr -> LPAR expr . RPAR [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RPAR shift to state 744
## Reductions:

State 744:
## Known stack suffix:
## LPAR expr RPAR
## LR(1) items:
primaryexpr -> LPAR expr RPAR . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> LPAR expr RPAR
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> LPAR expr RPAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 745:
## Known stack suffix:
## MINUS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> MINUS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> MINUS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> MINUS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 746:
## Known stack suffix:
## ORDEREDCURLY expr
## LR(1) items:
primaryexpr -> ORDEREDCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 747
## Reductions:

State 747:
## Known stack suffix:
## ORDEREDCURLY expr RCURLY
## LR(1) items:
primaryexpr -> ORDEREDCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> ORDEREDCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> ORDEREDCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 748:
## Known stack suffix:
## PICURLY expr
## LR(1) items:
primaryexpr -> PICURLY expr . RCURLY LCURLY expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 749
## Reductions:

State 749:
## Known stack suffix:
## PICURLY expr RCURLY
## LR(1) items:
primaryexpr -> PICURLY expr RCURLY . LCURLY expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On LCURLY shift to state 750
## Reductions:

State 750:
## Known stack suffix:
## PICURLY expr RCURLY LCURLY
## LR(1) items:
primaryexpr -> PICURLY expr RCURLY LCURLY . expr RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 751
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 751:
## Known stack suffix:
## PICURLY expr RCURLY LCURLY expr
## LR(1) items:
primaryexpr -> PICURLY expr RCURLY LCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 752
## Reductions:

State 752:
## Known stack suffix:
## PICURLY expr RCURLY LCURLY expr RCURLY
## LR(1) items:
primaryexpr -> PICURLY expr RCURLY LCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> PICURLY expr RCURLY LCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> PICURLY expr RCURLY LCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 753:
## Known stack suffix:
## PLUS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> PLUS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> PLUS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> PLUS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 754:
## Known stack suffix:
## RENAMENODE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AS AND ]
expr_single -> RENAMENODE expr_single . AS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AS shift to state 755
-- On AND shift to state 561
## Reductions:

State 755:
## Known stack suffix:
## RENAMENODE expr_single AS
## LR(1) items:
expr_single -> RENAMENODE expr_single AS . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 756
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 756:
## Known stack suffix:
## RENAMENODE expr_single AS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> RENAMENODE expr_single AS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> RENAMENODE expr_single AS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> RENAMENODE expr_single AS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 757:
## Known stack suffix:
## REPLACENODE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> REPLACENODE expr_single . WITH expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WITH shift to state 758
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:

State 758:
## Known stack suffix:
## REPLACENODE expr_single WITH
## LR(1) items:
expr_single -> REPLACENODE expr_single WITH . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 759
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 759:
## Known stack suffix:
## REPLACENODE expr_single WITH expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> REPLACENODE expr_single WITH expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> REPLACENODE expr_single WITH expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> REPLACENODE expr_single WITH expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 760:
## Known stack suffix:
## REPLACEVALUEOFNODE expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ WITH UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> REPLACEVALUEOFNODE expr_single . WITH expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WITH shift to state 761
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:

State 761:
## Known stack suffix:
## REPLACEVALUEOFNODE expr_single WITH
## LR(1) items:
expr_single -> REPLACEVALUEOFNODE expr_single WITH . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 762
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 762:
## Known stack suffix:
## REPLACEVALUEOFNODE expr_single WITH expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> REPLACEVALUEOFNODE expr_single WITH expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> REPLACEVALUEOFNODE expr_single WITH expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> REPLACEVALUEOFNODE expr_single WITH expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 763:
## Known stack suffix:
## SETDOLLAR qname COLONEQUALS expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> SETDOLLAR qname COLONEQUALS expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> SETDOLLAR qname COLONEQUALS expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> SETDOLLAR qname COLONEQUALS expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 764:
## Known stack suffix:
## PINCNAMECURLY RCURLY
## LR(1) items:
primaryexpr -> PINCNAMECURLY RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> PINCNAMECURLY RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> PINCNAMECURLY RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 765:
## Known stack suffix:
## PINCNAMECURLY expr
## LR(1) items:
primaryexpr -> PINCNAMECURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 766
## Reductions:

State 766:
## Known stack suffix:
## PINCNAMECURLY expr RCURLY
## LR(1) items:
primaryexpr -> PINCNAMECURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> PINCNAMECURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> PINCNAMECURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 767:
## Known stack suffix:
## SLASH relativepathexpr
## LR(1) items:
pathexpr -> SLASH relativepathexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
relativepathexpr -> relativepathexpr . SLASH stepexpr [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
relativepathexpr -> relativepathexpr . SLASHSLASH stepexpr [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On SLASHSLASH shift to state 479
-- On SLASH shift to state 491
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production pathexpr -> SLASH relativepathexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production pathexpr -> SLASH relativepathexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 768:
## Known stack suffix:
## PRAGMA LCURLY expr
## LR(1) items:
extensionexpr -> PRAGMA LCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 769
## Reductions:

State 769:
## Known stack suffix:
## PRAGMA LCURLY expr RCURLY
## LR(1) items:
extensionexpr -> PRAGMA LCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production extensionexpr -> PRAGMA LCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production extensionexpr -> PRAGMA LCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 770:
## Known stack suffix:
## PRAGMA extensionexpr
## LR(1) items:
extensionexpr -> PRAGMA extensionexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production extensionexpr -> PRAGMA extensionexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production extensionexpr -> PRAGMA extensionexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 771:
## Known stack suffix:
## SLASHSLASH relativepathexpr
## LR(1) items:
pathexpr -> SLASHSLASH relativepathexpr . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
relativepathexpr -> relativepathexpr . SLASH stepexpr [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
relativepathexpr -> relativepathexpr . SLASHSLASH stepexpr [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On SLASHSLASH shift to state 479
-- On SLASH shift to state 491
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production pathexpr -> SLASHSLASH relativepathexpr
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production pathexpr -> SLASHSLASH relativepathexpr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 772:
## Known stack suffix:
## SNAPLCURLY expr
## LR(1) items:
primaryexpr -> SNAPLCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 773
## Reductions:

State 773:
## Known stack suffix:
## SNAPLCURLY expr RCURLY
## LR(1) items:
primaryexpr -> SNAPLCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> SNAPLCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> SNAPLCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 774:
## Known stack suffix:
## SNAPLCURLYORDERED expr
## LR(1) items:
primaryexpr -> SNAPLCURLYORDERED expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 775
## Reductions:

State 775:
## Known stack suffix:
## SNAPLCURLYORDERED expr RCURLY
## LR(1) items:
primaryexpr -> SNAPLCURLYORDERED expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> SNAPLCURLYORDERED expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> SNAPLCURLYORDERED expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 776:
## Known stack suffix:
## qname opt_type_declaration IN expr_single
## LR(1) items:
bindings -> qname opt_type_declaration IN expr_single . [ SATISFIES ]
bindings -> qname opt_type_declaration IN expr_single . COMMA DOLLAR bindings [ SATISFIES ]
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO SATISFIES PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On COMMA shift to state 777
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On SATISFIES
--   reduce production bindings -> qname opt_type_declaration IN expr_single

State 777:
## Known stack suffix:
## qname opt_type_declaration IN expr_single COMMA
## LR(1) items:
bindings -> qname opt_type_declaration IN expr_single COMMA . DOLLAR bindings [ SATISFIES ]
## Transitions:
-- On DOLLAR shift to state 778
## Reductions:

State 778:
## Known stack suffix:
## qname opt_type_declaration IN expr_single COMMA DOLLAR
## LR(1) items:
bindings -> qname opt_type_declaration IN expr_single COMMA DOLLAR . bindings [ SATISFIES ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 359
-- On bindings shift to state 779
## Reductions:

State 779:
## Known stack suffix:
## qname opt_type_declaration IN expr_single COMMA DOLLAR bindings
## LR(1) items:
bindings -> qname opt_type_declaration IN expr_single COMMA DOLLAR bindings . [ SATISFIES ]
## Transitions:
## Reductions:
-- On SATISFIES
--   reduce production bindings -> qname opt_type_declaration IN expr_single COMMA DOLLAR bindings

State 780:
## Known stack suffix:
## SOMEDOLLAR bindings
## LR(1) items:
expr_single -> SOMEDOLLAR bindings . SATISFIES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On SATISFIES shift to state 781
## Reductions:

State 781:
## Known stack suffix:
## SOMEDOLLAR bindings SATISFIES
## LR(1) items:
expr_single -> SOMEDOLLAR bindings SATISFIES . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 782
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 782:
## Known stack suffix:
## SOMEDOLLAR bindings SATISFIES expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> SOMEDOLLAR bindings SATISFIES expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> SOMEDOLLAR bindings SATISFIES expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> SOMEDOLLAR bindings SATISFIES expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 783:
## Known stack suffix:
## TEXTCURLY expr
## LR(1) items:
primaryexpr -> TEXTCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 784
## Reductions:

State 784:
## Known stack suffix:
## TEXTCURLY expr RCURLY
## LR(1) items:
primaryexpr -> TEXTCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> TEXTCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> TEXTCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 785:
## Known stack suffix:
## TYPESWITCHLPAR expr
## LR(1) items:
expr_single -> TYPESWITCHLPAR expr . RPAR case_clause_list [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RPAR shift to state 786
## Reductions:

State 786:
## Known stack suffix:
## TYPESWITCHLPAR expr RPAR
## LR(1) items:
expr_single -> TYPESWITCHLPAR expr RPAR . case_clause_list [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On CASE shift to state 787
-- On case_clause_list shift to state 800
## Reductions:

State 787:
## Known stack suffix:
## CASE
## LR(1) items:
case_clause_list -> CASE . opt_variable_as sequencetype RETURN expr_single DEFAULT opt_variable RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
case_clause_list -> CASE . opt_variable_as sequencetype RETURN expr_single case_clause_list [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On VARNAME shift to state 350
-- On DOLLAR shift to state 433
-- On variable shift to state 788
-- On opt_variable_as shift to state 790
## Reductions:
-- On TYPELPAR TEXTLPAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAMESTAR QNAMEQUESTION QNAMEPLUS QNAME PROCESSINGINSTRUCTIONLPAR NUMERICLPAR NODELPAR ITEMLPAR EMPTYSEQUENCELPAR ELEMENTLPAR DOCUMENTNODELPAR COMMENTLPAR ATTRIBUTELPAR ANYSTRINGLPAR
--   reduce production opt_variable_as ->

State 788:
## Known stack suffix:
## variable
## LR(1) items:
opt_variable_as -> variable . AS [ TYPELPAR TEXTLPAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAMESTAR QNAMEQUESTION QNAMEPLUS QNAME PROCESSINGINSTRUCTIONLPAR NUMERICLPAR NODELPAR ITEMLPAR EMPTYSEQUENCELPAR ELEMENTLPAR DOCUMENTNODELPAR COMMENTLPAR ATTRIBUTELPAR ANYSTRINGLPAR ]
## Transitions:
-- On AS shift to state 789
## Reductions:

State 789:
## Known stack suffix:
## variable AS
## LR(1) items:
opt_variable_as -> variable AS . [ TYPELPAR TEXTLPAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAMESTAR QNAMEQUESTION QNAMEPLUS QNAME PROCESSINGINSTRUCTIONLPAR NUMERICLPAR NODELPAR ITEMLPAR EMPTYSEQUENCELPAR ELEMENTLPAR DOCUMENTNODELPAR COMMENTLPAR ATTRIBUTELPAR ANYSTRINGLPAR ]
## Transitions:
## Reductions:
-- On TYPELPAR TEXTLPAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAMESTAR QNAMEQUESTION QNAMEPLUS QNAME PROCESSINGINSTRUCTIONLPAR NUMERICLPAR NODELPAR ITEMLPAR EMPTYSEQUENCELPAR ELEMENTLPAR DOCUMENTNODELPAR COMMENTLPAR ATTRIBUTELPAR ANYSTRINGLPAR
--   reduce production opt_variable_as -> variable AS

State 790:
## Known stack suffix:
## CASE opt_variable_as
## LR(1) items:
case_clause_list -> CASE opt_variable_as . sequencetype RETURN expr_single DEFAULT opt_variable RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
case_clause_list -> CASE opt_variable_as . sequencetype RETURN expr_single case_clause_list [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On TYPELPAR shift to state 289
-- On TEXTLPAR shift to state 291
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAMESTAR shift to state 296
-- On QNAMEQUESTION shift to state 297
-- On QNAMEPLUS shift to state 298
-- On QNAME shift to state 299
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NUMERICLPAR shift to state 303
-- On NODELPAR shift to state 304
-- On ITEMLPAR shift to state 305
-- On EMPTYSEQUENCELPAR shift to state 306
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On ANYSTRINGLPAR shift to state 333
-- On sequencetype shift to state 791
-- On qname_occurrence shift to state 335
-- On kindtest shift to state 336
-- On itemtype shift to state 337
## Reductions:

State 791:
## Known stack suffix:
## CASE opt_variable_as sequencetype
## LR(1) items:
case_clause_list -> CASE opt_variable_as sequencetype . RETURN expr_single DEFAULT opt_variable RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
case_clause_list -> CASE opt_variable_as sequencetype . RETURN expr_single case_clause_list [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RETURN shift to state 792
## Reductions:

State 792:
## Known stack suffix:
## CASE opt_variable_as sequencetype RETURN
## LR(1) items:
case_clause_list -> CASE opt_variable_as sequencetype RETURN . expr_single DEFAULT opt_variable RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
case_clause_list -> CASE opt_variable_as sequencetype RETURN . expr_single case_clause_list [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 793
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 793:
## Known stack suffix:
## CASE opt_variable_as sequencetype RETURN expr_single
## LR(1) items:
case_clause_list -> CASE opt_variable_as sequencetype RETURN expr_single . DEFAULT opt_variable RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
case_clause_list -> CASE opt_variable_as sequencetype RETURN expr_single . case_clause_list [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV DEFAULT CASTAS CASTABLEAS CASE BAR AND ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On DEFAULT shift to state 794
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On CASE shift to state 787
-- On BAR shift to state 559
-- On AND shift to state 561
-- On case_clause_list shift to state 799
## Reductions:

State 794:
## Known stack suffix:
## CASE opt_variable_as sequencetype RETURN expr_single DEFAULT
## LR(1) items:
case_clause_list -> CASE opt_variable_as sequencetype RETURN expr_single DEFAULT . opt_variable RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On VARNAME shift to state 350
-- On DOLLAR shift to state 433
-- On variable shift to state 795
-- On opt_variable shift to state 796
## Reductions:
-- On RETURN
--   reduce production opt_variable ->

State 795:
## Known stack suffix:
## variable
## LR(1) items:
opt_variable -> variable . [ RETURN ]
## Transitions:
## Reductions:
-- On RETURN
--   reduce production opt_variable -> variable

State 796:
## Known stack suffix:
## CASE opt_variable_as sequencetype RETURN expr_single DEFAULT opt_variable
## LR(1) items:
case_clause_list -> CASE opt_variable_as sequencetype RETURN expr_single DEFAULT opt_variable . RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RETURN shift to state 797
## Reductions:

State 797:
## Known stack suffix:
## CASE opt_variable_as sequencetype RETURN expr_single DEFAULT opt_variable RETURN
## LR(1) items:
case_clause_list -> CASE opt_variable_as sequencetype RETURN expr_single DEFAULT opt_variable RETURN . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 798
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 798:
## Known stack suffix:
## CASE opt_variable_as sequencetype RETURN expr_single DEFAULT opt_variable RETURN expr_single
## LR(1) items:
case_clause_list -> CASE opt_variable_as sequencetype RETURN expr_single DEFAULT opt_variable RETURN expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production case_clause_list -> CASE opt_variable_as sequencetype RETURN expr_single DEFAULT opt_variable RETURN expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production case_clause_list -> CASE opt_variable_as sequencetype RETURN expr_single DEFAULT opt_variable RETURN expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 799:
## Known stack suffix:
## CASE opt_variable_as sequencetype RETURN expr_single case_clause_list
## LR(1) items:
case_clause_list -> CASE opt_variable_as sequencetype RETURN expr_single case_clause_list . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production case_clause_list -> CASE opt_variable_as sequencetype RETURN expr_single case_clause_list
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production case_clause_list -> CASE opt_variable_as sequencetype RETURN expr_single case_clause_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 800:
## Known stack suffix:
## TYPESWITCHLPAR expr RPAR case_clause_list
## LR(1) items:
expr_single -> TYPESWITCHLPAR expr RPAR case_clause_list . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production expr_single -> TYPESWITCHLPAR expr RPAR case_clause_list
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> TYPESWITCHLPAR expr RPAR case_clause_list
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 801:
## Known stack suffix:
## UNORDEREDCURLY expr
## LR(1) items:
primaryexpr -> UNORDEREDCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 802
## Reductions:

State 802:
## Known stack suffix:
## UNORDEREDCURLY expr RCURLY
## LR(1) items:
primaryexpr -> UNORDEREDCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> UNORDEREDCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> UNORDEREDCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 803:
## Known stack suffix:
## VALIDATELAXLCURLY expr
## LR(1) items:
primaryexpr -> VALIDATELAXLCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 804
## Reductions:

State 804:
## Known stack suffix:
## VALIDATELAXLCURLY expr RCURLY
## LR(1) items:
primaryexpr -> VALIDATELAXLCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> VALIDATELAXLCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> VALIDATELAXLCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 805:
## Known stack suffix:
## VALIDATELCURLY expr
## LR(1) items:
primaryexpr -> VALIDATELCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 806
## Reductions:

State 806:
## Known stack suffix:
## VALIDATELCURLY expr RCURLY
## LR(1) items:
primaryexpr -> VALIDATELCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> VALIDATELCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> VALIDATELCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 807:
## Known stack suffix:
## VALIDATESTRICTLCURLY expr
## LR(1) items:
primaryexpr -> VALIDATESTRICTLCURLY expr . RCURLY [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RCURLY shift to state 808
## Reductions:

State 808:
## Known stack suffix:
## VALIDATESTRICTLCURLY expr RCURLY
## LR(1) items:
primaryexpr -> VALIDATESTRICTLCURLY expr RCURLY . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
## Reductions:
-- On WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
--   reduce production primaryexpr -> VALIDATESTRICTLCURLY expr RCURLY
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production primaryexpr -> VALIDATESTRICTLCURLY expr RCURLY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 809:
## Known stack suffix:
## WHILELPAR expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO RPAR PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> WHILELPAR expr_single . RPAR RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On RPAR shift to state 810
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:

State 810:
## Known stack suffix:
## WHILELPAR expr_single RPAR
## LR(1) items:
expr_single -> WHILELPAR expr_single RPAR . RETURN expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On RETURN shift to state 811
## Reductions:

State 811:
## Known stack suffix:
## WHILELPAR expr_single RPAR RETURN
## LR(1) items:
expr_single -> WHILELPAR expr_single RPAR RETURN . expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 812
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 812:
## Known stack suffix:
## WHILELPAR expr_single RPAR RETURN expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . AND expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PRECEDES expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . FOLLOWS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQ expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . NOTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTOP expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTE expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . LTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . GTEQUALS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TO expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . PLUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MINUS expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MULT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . DIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . IDIV expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . MOD expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . UNION expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . BAR expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . INTERSECT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . EXCEPT expr_single [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTABLEAS singletype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . CASTAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> expr_single . TREATAS sequencetype [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
expr_single -> WHILELPAR expr_single RPAR RETURN expr_single . [ WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On WITH WHERE STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK ORDERBY MODIFY LETDOLLAR INTO FORDOLLAR EOF EMPTY ELSE DESCENDING DEFAULT COMMA COLLATION CASE BEFORE ASLAST ASFIRST ASCENDING AS AFTER #
--   reduce production expr_single -> WHILELPAR expr_single RPAR RETURN expr_single
** End-of-stream conflict on WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER
**   There is a tension between
**   (1) reducing production expr_single -> WHILELPAR expr_single RPAR RETURN expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 813:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr . RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On RCURLY shift to state 814
## Reductions:

State 814:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY . LCURLY expr RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On LCURLY shift to state 815
## Reductions:

State 815:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY . expr RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 816
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 816:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr . RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On RCURLY shift to state 817
## Reductions:

State 817:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 818
## Reductions:

State 818:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 885
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 819:
## Known stack suffix:
## DECLAREUPDATINGFUNCTION
## LR(1) items:
start_declare_fun -> DECLAREUPDATINGFUNCTION . [ FUNCTIONNAMELPAR ]
## Transitions:
## Reductions:
-- On FUNCTIONNAMELPAR
--   reduce production start_declare_fun -> DECLAREUPDATINGFUNCTION

State 820:
## Known stack suffix:
## DECLARESERVER
## LR(1) items:
second_declaration_list -> DECLARESERVER . NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On NCNAME shift to state 821
## Reductions:

State 821:
## Known stack suffix:
## DECLARESERVER NCNAME
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME . IMPLEMENT NCNAME AT expr_single SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On IMPLEMENT shift to state 822
## Reductions:

State 822:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT . NCNAME AT expr_single SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On NCNAME shift to state 823
## Reductions:

State 823:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT NCNAME
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME . AT expr_single SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On AT shift to state 824
## Reductions:

State 824:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT NCNAME AT
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME AT . expr_single SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 825
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 825:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On SEMICOLON shift to state 826
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:

State 826:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 884
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 827:
## Known stack suffix:
## DECLAREOPTION
## LR(1) items:
second_declaration_list -> DECLAREOPTION . qname STRING SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 828
## Reductions:

State 828:
## Known stack suffix:
## DECLAREOPTION qname
## LR(1) items:
second_declaration_list -> DECLAREOPTION qname . STRING SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On STRING shift to state 829
## Reductions:

State 829:
## Known stack suffix:
## DECLAREOPTION qname STRING
## LR(1) items:
second_declaration_list -> DECLAREOPTION qname STRING . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 830
## Reductions:

State 830:
## Known stack suffix:
## DECLAREOPTION qname STRING SEMICOLON
## LR(1) items:
second_declaration_list -> DECLAREOPTION qname STRING SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 883
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 831:
## Known stack suffix:
## DECLARENAMEINDEX
## LR(1) items:
second_declaration_list -> DECLARENAMEINDEX . qname SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 832
## Reductions:

State 832:
## Known stack suffix:
## DECLARENAMEINDEX qname
## LR(1) items:
second_declaration_list -> DECLARENAMEINDEX qname . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 833
## Reductions:

State 833:
## Known stack suffix:
## DECLARENAMEINDEX qname SEMICOLON
## LR(1) items:
second_declaration_list -> DECLARENAMEINDEX qname SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 882
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 834:
## Known stack suffix:
## DECLAREFUNCTION
## LR(1) items:
start_declare_fun -> DECLAREFUNCTION . [ FUNCTIONNAMELPAR ]
## Transitions:
## Reductions:
-- On FUNCTIONNAMELPAR
--   reduce production start_declare_fun -> DECLAREFUNCTION

State 835:
## Known stack suffix:
## start_declare_fun
## LR(1) items:
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On FUNCTIONNAMELPAR shift to state 836
## Reductions:

State 836:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . RPAR LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . paramlist RPAR LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . paramlist RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . RPAR EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . paramlist RPAR EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On VARNAME shift to state 350
-- On RPAR shift to state 837
-- On DOLLAR shift to state 433
-- On variable shift to state 856
-- On paramlist shift to state 859
-- On param shift to state 879
## Reductions:

State 837:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR . LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR . AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR . AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR . EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On LCURLY shift to state 838
-- On EXTERNAL shift to state 843
-- On AS shift to state 846
## Reductions:

State 838:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY . block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREDOLLAR shift to state 412
-- On block_decl_list shift to state 676
-- On block_decl shift to state 681
-- On block shift to state 839
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production block_decl_list ->

State 839:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block . RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On RCURLY shift to state 840
## Reductions:

State 840:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 841
## Reductions:

State 841:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 842
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 842:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON second_declaration_list

State 843:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 844
## Reductions:

State 844:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 845
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 845:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON second_declaration_list

State 846:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS . sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS . sequencetype EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On TYPELPAR shift to state 289
-- On TEXTLPAR shift to state 291
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAMESTAR shift to state 296
-- On QNAMEQUESTION shift to state 297
-- On QNAMEPLUS shift to state 298
-- On QNAME shift to state 299
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NUMERICLPAR shift to state 303
-- On NODELPAR shift to state 304
-- On ITEMLPAR shift to state 305
-- On EMPTYSEQUENCELPAR shift to state 306
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On ANYSTRINGLPAR shift to state 333
-- On sequencetype shift to state 847
-- On qname_occurrence shift to state 335
-- On kindtest shift to state 336
-- On itemtype shift to state 337
## Reductions:

State 847:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype . LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype . EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On LCURLY shift to state 848
-- On EXTERNAL shift to state 853
## Reductions:

State 848:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY . block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREDOLLAR shift to state 412
-- On block_decl_list shift to state 676
-- On block_decl shift to state 681
-- On block shift to state 849
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production block_decl_list ->

State 849:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block . RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On RCURLY shift to state 850
## Reductions:

State 850:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 851
## Reductions:

State 851:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 852
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 852:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list

State 853:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 854
## Reductions:

State 854:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 855
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 855:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list

State 856:
## Known stack suffix:
## variable
## LR(1) items:
param -> variable . AS sequencetype [ RPAR COMMA ]
param -> variable . [ RPAR COMMA ]
## Transitions:
-- On AS shift to state 857
## Reductions:
-- On RPAR COMMA
--   reduce production param -> variable

State 857:
## Known stack suffix:
## variable AS
## LR(1) items:
param -> variable AS . sequencetype [ RPAR COMMA ]
## Transitions:
-- On TYPELPAR shift to state 289
-- On TEXTLPAR shift to state 291
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAMESTAR shift to state 296
-- On QNAMEQUESTION shift to state 297
-- On QNAMEPLUS shift to state 298
-- On QNAME shift to state 299
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NUMERICLPAR shift to state 303
-- On NODELPAR shift to state 304
-- On ITEMLPAR shift to state 305
-- On EMPTYSEQUENCELPAR shift to state 306
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On ANYSTRINGLPAR shift to state 333
-- On sequencetype shift to state 858
-- On qname_occurrence shift to state 335
-- On kindtest shift to state 336
-- On itemtype shift to state 337
## Reductions:

State 858:
## Known stack suffix:
## variable AS sequencetype
## LR(1) items:
param -> variable AS sequencetype . [ RPAR COMMA ]
## Transitions:
## Reductions:
-- On RPAR COMMA
--   reduce production param -> variable AS sequencetype

State 859:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist . RPAR LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist . RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist . RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist . RPAR EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On RPAR shift to state 860
## Reductions:

State 860:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR . LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR . AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR . AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR . EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On LCURLY shift to state 861
-- On EXTERNAL shift to state 866
-- On AS shift to state 869
## Reductions:

State 861:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY . block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREDOLLAR shift to state 412
-- On block_decl_list shift to state 676
-- On block_decl shift to state 681
-- On block shift to state 862
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production block_decl_list ->

State 862:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block . RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On RCURLY shift to state 863
## Reductions:

State 863:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 864
## Reductions:

State 864:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 865
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 865:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON second_declaration_list

State 866:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 867
## Reductions:

State 867:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 868
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 868:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON second_declaration_list

State 869:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS . sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS . sequencetype EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On TYPELPAR shift to state 289
-- On TEXTLPAR shift to state 291
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAMESTAR shift to state 296
-- On QNAMEQUESTION shift to state 297
-- On QNAMEPLUS shift to state 298
-- On QNAME shift to state 299
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NUMERICLPAR shift to state 303
-- On NODELPAR shift to state 304
-- On ITEMLPAR shift to state 305
-- On EMPTYSEQUENCELPAR shift to state 306
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On ANYSTRINGLPAR shift to state 333
-- On sequencetype shift to state 870
-- On qname_occurrence shift to state 335
-- On kindtest shift to state 336
-- On itemtype shift to state 337
## Reductions:

State 870:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype . LCURLY block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype . EXTERNAL SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On LCURLY shift to state 871
-- On EXTERNAL shift to state 876
## Reductions:

State 871:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY . block RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREDOLLAR shift to state 412
-- On block_decl_list shift to state 676
-- On block_decl shift to state 681
-- On block shift to state 872
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production block_decl_list ->

State 872:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block . RCURLY SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On RCURLY shift to state 873
## Reductions:

State 873:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 874
## Reductions:

State 874:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 875
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 875:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list

State 876:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 877
## Reductions:

State 877:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 878
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 878:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list

State 879:
## Known stack suffix:
## param
## LR(1) items:
paramlist -> param . [ RPAR ]
paramlist -> param . COMMA paramlist [ RPAR ]
## Transitions:
-- On COMMA shift to state 880
## Reductions:
-- On RPAR
--   reduce production paramlist -> param

State 880:
## Known stack suffix:
## param COMMA
## LR(1) items:
paramlist -> param COMMA . paramlist [ RPAR ]
## Transitions:
-- On VARNAME shift to state 350
-- On DOLLAR shift to state 433
-- On variable shift to state 856
-- On paramlist shift to state 881
-- On param shift to state 879
## Reductions:

State 881:
## Known stack suffix:
## param COMMA paramlist
## LR(1) items:
paramlist -> param COMMA paramlist . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production paramlist -> param COMMA paramlist

State 882:
## Known stack suffix:
## DECLARENAMEINDEX qname SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLARENAMEINDEX qname SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> DECLARENAMEINDEX qname SEMICOLON second_declaration_list

State 883:
## Known stack suffix:
## DECLAREOPTION qname STRING SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLAREOPTION qname STRING SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> DECLAREOPTION qname STRING SEMICOLON second_declaration_list

State 884:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON second_declaration_list

State 885:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list

State 886:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration EXTERNAL SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration EXTERNAL SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration EXTERNAL SEMICOLON second_declaration_list

State 887:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration COLONEQUALS
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration COLONEQUALS . expr SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 888
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 888:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr . SEMICOLON second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On SEMICOLON shift to state 889
## Reductions:

State 889:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr SEMICOLON
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr SEMICOLON . second_declaration_list [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
-- On DECLAREVARIABLE shift to state 286
-- On DECLAREVALUEINDEX shift to state 346
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 820
-- On DECLAREOPTION shift to state 827
-- On DECLARENAMEINDEX shift to state 831
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 835
-- On second_declaration_list shift to state 890
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list ->

State 890:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr SEMICOLON second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr SEMICOLON second_declaration_list

State 891:
## Known stack suffix:
## setters_and_first_declaration_list second_declaration_list
## LR(1) items:
prolog -> setters_and_first_declaration_list second_declaration_list . [ WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER ]
## Transitions:
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production prolog -> setters_and_first_declaration_list second_declaration_list

State 892:
## Known stack suffix:
## opt_version interfacedecl prolog
## LR(1) items:
interface -> opt_version interfacedecl prolog . EOF [ # ]
## Transitions:
-- On EOF shift to state 893
## Reductions:

State 893:
## Known stack suffix:
## opt_version interfacedecl prolog EOF
## LR(1) items:
interface -> opt_version interfacedecl prolog EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production interface -> opt_version interfacedecl prolog EOF

State 894:
## Known stack suffix:
## interface
## LR(1) items:
interface' -> interface . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept interface

State 895:
## Known stack suffix:
##
## LR(1) items:
librarymodule' -> . librarymodule [ # ]
## Transitions:
-- On XQUERYVERSION shift to state 95
-- On opt_version shift to state 896
-- On librarymodule shift to state 910
## Reductions:
-- On MODULENAMESPACE
--   reduce production opt_version ->

State 896:
## Known stack suffix:
## opt_version
## LR(1) items:
librarymodule -> opt_version . moduledecl prolog EOF [ # ]
## Transitions:
-- On MODULENAMESPACE shift to state 897
-- On moduledecl shift to state 907
## Reductions:

State 897:
## Known stack suffix:
## MODULENAMESPACE
## LR(1) items:
moduledecl -> MODULENAMESPACE . NCNAME EQUALS STRING opt_interface SEMICOLON [ IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI ]
## Transitions:
-- On NCNAME shift to state 898
## Reductions:

State 898:
## Known stack suffix:
## MODULENAMESPACE NCNAME
## LR(1) items:
moduledecl -> MODULENAMESPACE NCNAME . EQUALS STRING opt_interface SEMICOLON [ IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI ]
## Transitions:
-- On EQUALS shift to state 899
## Reductions:

State 899:
## Known stack suffix:
## MODULENAMESPACE NCNAME EQUALS
## LR(1) items:
moduledecl -> MODULENAMESPACE NCNAME EQUALS . STRING opt_interface SEMICOLON [ IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI ]
## Transitions:
-- On STRING shift to state 900
## Reductions:

State 900:
## Known stack suffix:
## MODULENAMESPACE NCNAME EQUALS STRING
## LR(1) items:
moduledecl -> MODULENAMESPACE NCNAME EQUALS STRING . opt_interface SEMICOLON [ IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI ]
## Transitions:
-- On IMPLEMENT shift to state 901
-- On opt_interface shift to state 905
## Reductions:
-- On SEMICOLON
--   reduce production opt_interface ->

State 901:
## Known stack suffix:
## IMPLEMENT
## LR(1) items:
opt_interface -> IMPLEMENT . STRING [ SEMICOLON ]
opt_interface -> IMPLEMENT . STRING AT STRING [ SEMICOLON ]
## Transitions:
-- On STRING shift to state 902
## Reductions:

State 902:
## Known stack suffix:
## IMPLEMENT STRING
## LR(1) items:
opt_interface -> IMPLEMENT STRING . [ SEMICOLON ]
opt_interface -> IMPLEMENT STRING . AT STRING [ SEMICOLON ]
## Transitions:
-- On AT shift to state 903
## Reductions:
-- On SEMICOLON
--   reduce production opt_interface -> IMPLEMENT STRING

State 903:
## Known stack suffix:
## IMPLEMENT STRING AT
## LR(1) items:
opt_interface -> IMPLEMENT STRING AT . STRING [ SEMICOLON ]
## Transitions:
-- On STRING shift to state 904
## Reductions:

State 904:
## Known stack suffix:
## IMPLEMENT STRING AT STRING
## LR(1) items:
opt_interface -> IMPLEMENT STRING AT STRING . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON
--   reduce production opt_interface -> IMPLEMENT STRING AT STRING

State 905:
## Known stack suffix:
## MODULENAMESPACE NCNAME EQUALS STRING opt_interface
## LR(1) items:
moduledecl -> MODULENAMESPACE NCNAME EQUALS STRING opt_interface . SEMICOLON [ IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI ]
## Transitions:
-- On SEMICOLON shift to state 906
## Reductions:

State 906:
## Known stack suffix:
## MODULENAMESPACE NCNAME EQUALS STRING opt_interface SEMICOLON
## LR(1) items:
moduledecl -> MODULENAMESPACE NCNAME EQUALS STRING opt_interface SEMICOLON . [ IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI ]
## Transitions:
## Reductions:
-- On IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI
--   reduce production moduledecl -> MODULENAMESPACE NCNAME EQUALS STRING opt_interface SEMICOLON

State 907:
## Known stack suffix:
## opt_version moduledecl
## LR(1) items:
librarymodule -> opt_version moduledecl . prolog EOF [ # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 285
-- On schema_decl shift to state 212
-- On prolog shift to state 908
## Reductions:
-- On EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
--   reduce production setters_and_first_declaration_list ->

State 908:
## Known stack suffix:
## opt_version moduledecl prolog
## LR(1) items:
librarymodule -> opt_version moduledecl prolog . EOF [ # ]
## Transitions:
-- On EOF shift to state 909
## Reductions:

State 909:
## Known stack suffix:
## opt_version moduledecl prolog EOF
## LR(1) items:
librarymodule -> opt_version moduledecl prolog EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production librarymodule -> opt_version moduledecl prolog EOF

State 910:
## Known stack suffix:
## librarymodule
## LR(1) items:
librarymodule' -> librarymodule . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept librarymodule

State 911:
## Known stack suffix:
##
## LR(1) items:
mainmodule' -> . mainmodule [ # ]
## Transitions:
-- On XQUERYVERSION shift to state 95
-- On opt_version shift to state 912
-- On mainmodule shift to state 920
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production opt_version ->

State 912:
## Known stack suffix:
## opt_version
## LR(1) items:
mainmodule -> opt_version . prolog statements EOF [ # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 285
-- On schema_decl shift to state 212
-- On prolog shift to state 913
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production setters_and_first_declaration_list ->

State 913:
## Known stack suffix:
## opt_version prolog
## LR(1) items:
mainmodule -> opt_version prolog . statements EOF [ # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On statements shift to state 914
-- On statement shift to state 916
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 919
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:
-- On EOF
--   reduce production statements ->

State 914:
## Known stack suffix:
## opt_version prolog statements
## LR(1) items:
mainmodule -> opt_version prolog statements . EOF [ # ]
## Transitions:
-- On EOF shift to state 915
## Reductions:

State 915:
## Known stack suffix:
## opt_version prolog statements EOF
## LR(1) items:
mainmodule -> opt_version prolog statements EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production mainmodule -> opt_version prolog statements EOF

State 916:
## Known stack suffix:
## statement
## LR(1) items:
statements -> statement . [ EOF ]
statements -> statement . SEMICOLON statements [ EOF ]
## Transitions:
-- On SEMICOLON shift to state 917
## Reductions:
-- On EOF
--   reduce production statements -> statement

State 917:
## Known stack suffix:
## statement SEMICOLON
## LR(1) items:
statements -> statement SEMICOLON . statements [ EOF ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On statements shift to state 918
-- On statement shift to state 916
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 919
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:
-- On EOF
--   reduce production statements ->

State 918:
## Known stack suffix:
## statement SEMICOLON statements
## LR(1) items:
statements -> statement SEMICOLON statements . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production statements -> statement SEMICOLON statements

State 919:
## Known stack suffix:
## expr
## LR(1) items:
statement -> expr . [ SEMICOLON EOF ]
## Transitions:
## Reductions:
-- On SEMICOLON EOF
--   reduce production statement -> expr

State 920:
## Known stack suffix:
## mainmodule
## LR(1) items:
mainmodule' -> mainmodule . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept mainmodule

State 921:
## Known stack suffix:
##
## LR(1) items:
prolog' -> . prolog [ # ]
## Transitions:
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 922
-- On schema_decl shift to state 212
-- On prolog shift to state 1002
## Reductions:
-- On DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION #
--   reduce production setters_and_first_declaration_list ->
** End-of-stream conflict on IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI
**   There is a tension between
**   (1) reducing production setters_and_first_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 922:
## Known stack suffix:
## setters_and_first_declaration_list
## LR(1) items:
prolog -> setters_and_first_declaration_list . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 1001
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 923:
## Known stack suffix:
## DECLAREVARIABLE
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE . qname opt_type_declaration COLONEQUALS expr SEMICOLON second_declaration_list [ # ]
second_declaration_list -> DECLAREVARIABLE . qname opt_type_declaration EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 924
## Reductions:

State 924:
## Known stack suffix:
## DECLAREVARIABLE qname
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname . opt_type_declaration COLONEQUALS expr SEMICOLON second_declaration_list [ # ]
second_declaration_list -> DECLAREVARIABLE qname . opt_type_declaration EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On AS shift to state 288
-- On opt_type_declaration shift to state 925
## Reductions:
-- On EXTERNAL COLONEQUALS
--   reduce production opt_type_declaration ->

State 925:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration . COLONEQUALS expr SEMICOLON second_declaration_list [ # ]
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration . EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On EXTERNAL shift to state 926
-- On COLONEQUALS shift to state 997
## Reductions:

State 926:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration EXTERNAL
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration EXTERNAL . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 927
## Reductions:

State 927:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration EXTERNAL SEMICOLON
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration EXTERNAL SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 996
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 928:
## Known stack suffix:
## DECLAREVALUEINDEX
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX . STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On STRING shift to state 929
## Reductions:

State 929:
## Known stack suffix:
## DECLAREVALUEINDEX STRING
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING . LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On LCURLY shift to state 930
## Reductions:

State 930:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY . expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 931
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 931:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr . RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On RCURLY shift to state 932
## Reductions:

State 932:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY . LCURLY expr RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On LCURLY shift to state 933
## Reductions:

State 933:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY . expr RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 934
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 934:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr . RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On RCURLY shift to state 935
## Reductions:

State 935:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 936
## Reductions:

State 936:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 995
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 937:
## Known stack suffix:
## DECLARESERVER
## LR(1) items:
second_declaration_list -> DECLARESERVER . NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On NCNAME shift to state 938
## Reductions:

State 938:
## Known stack suffix:
## DECLARESERVER NCNAME
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME . IMPLEMENT NCNAME AT expr_single SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On IMPLEMENT shift to state 939
## Reductions:

State 939:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT . NCNAME AT expr_single SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On NCNAME shift to state 940
## Reductions:

State 940:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT NCNAME
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME . AT expr_single SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On AT shift to state 941
## Reductions:

State 941:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT NCNAME AT
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME AT . expr_single SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 942
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 942:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single
## LR(1) items:
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO SEMICOLON PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV CASTAS CASTABLEAS BAR AND ]
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On SEMICOLON shift to state 943
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:

State 943:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 994
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 944:
## Known stack suffix:
## DECLAREOPTION
## LR(1) items:
second_declaration_list -> DECLAREOPTION . qname STRING SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 945
## Reductions:

State 945:
## Known stack suffix:
## DECLAREOPTION qname
## LR(1) items:
second_declaration_list -> DECLAREOPTION qname . STRING SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On STRING shift to state 946
## Reductions:

State 946:
## Known stack suffix:
## DECLAREOPTION qname STRING
## LR(1) items:
second_declaration_list -> DECLAREOPTION qname STRING . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 947
## Reductions:

State 947:
## Known stack suffix:
## DECLAREOPTION qname STRING SEMICOLON
## LR(1) items:
second_declaration_list -> DECLAREOPTION qname STRING SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 993
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 948:
## Known stack suffix:
## DECLARENAMEINDEX
## LR(1) items:
second_declaration_list -> DECLARENAMEINDEX . qname SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On QNAME shift to state 2
-- On NCNAME shift to state 5
-- On qname shift to state 949
## Reductions:

State 949:
## Known stack suffix:
## DECLARENAMEINDEX qname
## LR(1) items:
second_declaration_list -> DECLARENAMEINDEX qname . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 950
## Reductions:

State 950:
## Known stack suffix:
## DECLARENAMEINDEX qname SEMICOLON
## LR(1) items:
second_declaration_list -> DECLARENAMEINDEX qname SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 992
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 951:
## Known stack suffix:
## start_declare_fun
## LR(1) items:
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun . FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On FUNCTIONNAMELPAR shift to state 952
## Reductions:

State 952:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . RPAR LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . paramlist RPAR LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . paramlist RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . RPAR EXTERNAL SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR . paramlist RPAR EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On VARNAME shift to state 350
-- On RPAR shift to state 953
-- On DOLLAR shift to state 433
-- On variable shift to state 856
-- On paramlist shift to state 972
-- On param shift to state 879
## Reductions:

State 953:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR . LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR . AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR . AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR . EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On LCURLY shift to state 954
-- On EXTERNAL shift to state 959
-- On AS shift to state 962
## Reductions:

State 954:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY . block RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On DECLAREDOLLAR shift to state 412
-- On block_decl_list shift to state 676
-- On block_decl shift to state 681
-- On block shift to state 955
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production block_decl_list ->

State 955:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block . RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On RCURLY shift to state 956
## Reductions:

State 956:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 957
## Reductions:

State 957:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 958
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 958:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR LCURLY block RCURLY SEMICOLON second_declaration_list

State 959:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 960
## Reductions:

State 960:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 961
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 961:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR EXTERNAL SEMICOLON second_declaration_list

State 962:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS . sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS . sequencetype EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On TYPELPAR shift to state 289
-- On TEXTLPAR shift to state 291
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAMESTAR shift to state 296
-- On QNAMEQUESTION shift to state 297
-- On QNAMEPLUS shift to state 298
-- On QNAME shift to state 299
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NUMERICLPAR shift to state 303
-- On NODELPAR shift to state 304
-- On ITEMLPAR shift to state 305
-- On EMPTYSEQUENCELPAR shift to state 306
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On ANYSTRINGLPAR shift to state 333
-- On sequencetype shift to state 963
-- On qname_occurrence shift to state 335
-- On kindtest shift to state 336
-- On itemtype shift to state 337
## Reductions:

State 963:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype . LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype . EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On LCURLY shift to state 964
-- On EXTERNAL shift to state 969
## Reductions:

State 964:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY . block RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On DECLAREDOLLAR shift to state 412
-- On block_decl_list shift to state 676
-- On block_decl shift to state 681
-- On block shift to state 965
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production block_decl_list ->

State 965:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block . RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On RCURLY shift to state 966
## Reductions:

State 966:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 967
## Reductions:

State 967:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 968
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 968:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list

State 969:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 970
## Reductions:

State 970:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 971
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 971:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list

State 972:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist . RPAR LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist . RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist . RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist . RPAR EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On RPAR shift to state 973
## Reductions:

State 973:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR . LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR . AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR . AS sequencetype EXTERNAL SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR . EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On LCURLY shift to state 974
-- On EXTERNAL shift to state 979
-- On AS shift to state 982
## Reductions:

State 974:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY . block RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On DECLAREDOLLAR shift to state 412
-- On block_decl_list shift to state 676
-- On block_decl shift to state 681
-- On block shift to state 975
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production block_decl_list ->

State 975:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block . RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On RCURLY shift to state 976
## Reductions:

State 976:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 977
## Reductions:

State 977:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 978
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 978:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR LCURLY block RCURLY SEMICOLON second_declaration_list

State 979:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 980
## Reductions:

State 980:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 981
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 981:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR EXTERNAL SEMICOLON second_declaration_list

State 982:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS . sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS . sequencetype EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On TYPELPAR shift to state 289
-- On TEXTLPAR shift to state 291
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On QNAMESTAR shift to state 296
-- On QNAMEQUESTION shift to state 297
-- On QNAMEPLUS shift to state 298
-- On QNAME shift to state 299
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On NUMERICLPAR shift to state 303
-- On NODELPAR shift to state 304
-- On ITEMLPAR shift to state 305
-- On EMPTYSEQUENCELPAR shift to state 306
-- On ELEMENTLPAR shift to state 308
-- On DOCUMENTNODELPAR shift to state 316
-- On COMMENTLPAR shift to state 324
-- On ATTRIBUTELPAR shift to state 325
-- On ANYSTRINGLPAR shift to state 333
-- On sequencetype shift to state 983
-- On qname_occurrence shift to state 335
-- On kindtest shift to state 336
-- On itemtype shift to state 337
## Reductions:

State 983:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype . LCURLY block RCURLY SEMICOLON second_declaration_list [ # ]
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype . EXTERNAL SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On LCURLY shift to state 984
-- On EXTERNAL shift to state 989
## Reductions:

State 984:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY . block RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On DECLAREDOLLAR shift to state 412
-- On block_decl_list shift to state 676
-- On block_decl shift to state 681
-- On block shift to state 985
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production block_decl_list ->

State 985:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block . RCURLY SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On RCURLY shift to state 986
## Reductions:

State 986:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 987
## Reductions:

State 987:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 988
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 988:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype LCURLY block RCURLY SEMICOLON second_declaration_list

State 989:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 990
## Reductions:

State 990:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 991
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 991:
## Known stack suffix:
## start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> start_declare_fun FUNCTIONNAMELPAR paramlist RPAR AS sequencetype EXTERNAL SEMICOLON second_declaration_list

State 992:
## Known stack suffix:
## DECLARENAMEINDEX qname SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLARENAMEINDEX qname SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> DECLARENAMEINDEX qname SEMICOLON second_declaration_list

State 993:
## Known stack suffix:
## DECLAREOPTION qname STRING SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLAREOPTION qname STRING SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> DECLAREOPTION qname STRING SEMICOLON second_declaration_list

State 994:
## Known stack suffix:
## DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> DECLARESERVER NCNAME IMPLEMENT NCNAME AT expr_single SEMICOLON second_declaration_list

State 995:
## Known stack suffix:
## DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> DECLAREVALUEINDEX STRING LCURLY expr RCURLY LCURLY expr RCURLY SEMICOLON second_declaration_list

State 996:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration EXTERNAL SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration EXTERNAL SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration EXTERNAL SEMICOLON second_declaration_list

State 997:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration COLONEQUALS
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration COLONEQUALS . expr SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 596
-- On expr shift to state 998
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 998:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr . SEMICOLON second_declaration_list [ # ]
## Transitions:
-- On SEMICOLON shift to state 999
## Reductions:

State 999:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr SEMICOLON
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr SEMICOLON . second_declaration_list [ # ]
## Transitions:
-- On DECLAREVARIABLE shift to state 923
-- On DECLAREVALUEINDEX shift to state 928
-- On DECLAREUPDATINGFUNCTION shift to state 819
-- On DECLARESERVER shift to state 937
-- On DECLAREOPTION shift to state 944
-- On DECLARENAMEINDEX shift to state 948
-- On DECLAREFUNCTION shift to state 834
-- On start_declare_fun shift to state 951
-- On second_declaration_list shift to state 1000
## Reductions:
-- On #
--   reduce production second_declaration_list ->
** End-of-stream conflict on DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
**   There is a tension between
**   (1) reducing production second_declaration_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 1000:
## Known stack suffix:
## DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr SEMICOLON second_declaration_list
## LR(1) items:
second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr SEMICOLON second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production second_declaration_list -> DECLAREVARIABLE qname opt_type_declaration COLONEQUALS expr SEMICOLON second_declaration_list

State 1001:
## Known stack suffix:
## setters_and_first_declaration_list second_declaration_list
## LR(1) items:
prolog -> setters_and_first_declaration_list second_declaration_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production prolog -> setters_and_first_declaration_list second_declaration_list

State 1002:
## Known stack suffix:
## prolog
## LR(1) items:
prolog' -> prolog . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept prolog

State 1003:
## Known stack suffix:
##
## LR(1) items:
statement' -> . statement [ # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On statement shift to state 1004
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 1005
-- On expr shift to state 1008
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 1004:
## Known stack suffix:
## statement
## LR(1) items:
statement' -> statement . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept statement

State 1005:
## Known stack suffix:
## expr_single
## LR(1) items:
expr -> expr_single . [ # ]
expr -> expr_single . COMMA expr [ # ]
expr_single -> expr_single . OR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . AND expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . PRECEDES expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . FOLLOWS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . EQ expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . EQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . IS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . NE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . NOTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . LT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . GT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . LTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . GTOP expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . LTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . GTE expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . LTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . GTEQUALS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . INSTANCEOF sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . TO expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . PLUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . MINUS expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . MULT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . DIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . IDIV expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . MOD expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . UNION expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . BAR expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . INTERSECT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . EXCEPT expr_single [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . CASTABLEAS singletype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . CASTAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
expr_single -> expr_single . TREATAS sequencetype [ UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND # ]
## Transitions:
-- On UNION shift to state 497
-- On TREATAS shift to state 499
-- On TO shift to state 513
-- On PRECEDES shift to state 527
-- On PLUS shift to state 515
-- On OR shift to state 529
-- On NOTEQUALS shift to state 531
-- On NE shift to state 533
-- On MULT shift to state 517
-- On MOD shift to state 519
-- On MINUS shift to state 525
-- On LTOP shift to state 535
-- On LTEQUALS shift to state 537
-- On LTE shift to state 539
-- On LT shift to state 541
-- On IS shift to state 543
-- On INTERSECT shift to state 501
-- On INSTANCEOF shift to state 503
-- On IDIV shift to state 521
-- On GTOP shift to state 545
-- On GTEQUALS shift to state 547
-- On GTE shift to state 549
-- On GT shift to state 551
-- On FOLLOWS shift to state 553
-- On EXCEPT shift to state 511
-- On EQUALS shift to state 555
-- On EQ shift to state 557
-- On DIV shift to state 523
-- On COMMA shift to state 1006
-- On CASTAS shift to state 505
-- On CASTABLEAS shift to state 507
-- On BAR shift to state 559
-- On AND shift to state 561
## Reductions:
-- On #
--   reduce production expr -> expr_single
** End-of-stream conflict on UNION TREATAS TO PRECEDES PLUS OR NOTEQUALS NE MULT MOD MINUS LTOP LTEQUALS LTE LT IS INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FOLLOWS EXCEPT EQUALS EQ DIV COMMA CASTAS CASTABLEAS BAR AND
**   There is a tension between
**   (1) reducing production expr -> expr_single
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 1006:
## Known stack suffix:
## expr_single COMMA
## LR(1) items:
expr -> expr_single COMMA . expr [ # ]
## Transitions:
-- On WHILELPAR shift to state 349
-- On VARNAME shift to state 350
-- On VALIDATESTRICTLCURLY shift to state 351
-- On VALIDATELCURLY shift to state 352
-- On VALIDATELAXLCURLY shift to state 353
-- On UNORDEREDCURLY shift to state 354
-- On TYPESWITCHLPAR shift to state 355
-- On TEXTLPAR shift to state 291
-- On TEXTCURLY shift to state 356
-- On STRING shift to state 357
-- On STARNCNAME shift to state 11
-- On STAR shift to state 12
-- On SOMEDOLLAR shift to state 358
-- On SNAPLCURLYORDERED shift to state 362
-- On SNAPLCURLY shift to state 363
-- On SLASHSLASH shift to state 364
-- On SLASH shift to state 367
-- On SETDOLLAR shift to state 369
-- On SCHEMAELEMENTLPAR shift to state 292
-- On SCHEMAATTRIBUTELPAR shift to state 294
-- On REPLACEVALUEOFNODE shift to state 372
-- On REPLACENODE shift to state 373
-- On RENAMENODE shift to state 374
-- On QNAME shift to state 2
-- On PROCESSINGINSTRUCTIONLPAR shift to state 300
-- On PRAGMA shift to state 365
-- On PLUS shift to state 375
-- On PINCNAMECURLY shift to state 368
-- On PICURLY shift to state 376
-- On ORDEREDCURLY shift to state 377
-- On OPENINGPI shift to state 378
-- On NODELPAR shift to state 304
-- On NCNAMESTAR shift to state 13
-- On NCNAME shift to state 5
-- On MINUS shift to state 380
-- On LPAR shift to state 381
-- On LOPENINGTAG shift to state 383
-- On LOPENINGCOMMENT shift to state 396
-- On LETVARDOLLAR shift to state 398
-- On LETSERVER shift to state 402
-- On LETDOLLAR shift to state 407
-- On LCURLY shift to state 411
-- On INT shift to state 416
-- On INSERTNODE shift to state 417
-- On IFLPAR shift to state 418
-- On FUNCTIONNAMELPAR shift to state 419
-- On FROMSERVER shift to state 421
-- On FORSERVER shift to state 424
-- On FORDOLLAR shift to state 429
-- On EVERYDOLLAR shift to state 438
-- On EVALCLOSURE shift to state 441
-- On ELEMENTQNAMECURLY shift to state 442
-- On ELEMENTLPAR shift to state 308
-- On ELEMENTCURLY shift to state 444
-- On DOUBLE shift to state 445
-- On DOTDOT shift to state 446
-- On DOT shift to state 447
-- On DOLLAR shift to state 433
-- On DOCUMENTNODELPAR shift to state 316
-- On DOCUMENTCURLY shift to state 448
-- On DELETENODE shift to state 449
-- On DECIMAL shift to state 450
-- On COPYLCURLY shift to state 451
-- On COPYDOLLAR shift to state 452
-- On COMMENTLPAR shift to state 324
-- On COMMENTCURLY shift to state 455
-- On AXIS shift to state 456
-- On ATTRIBUTEQNAMECURLY shift to state 461
-- On ATTRIBUTELPAR shift to state 325
-- On ATTRIBUTECURLY shift to state 463
-- On ATSIGN shift to state 464
-- On ATSERVER shift to state 470
-- On wildcard shift to state 457
-- On variable shift to state 473
-- On transform_copy_clause shift to state 474
-- On stringliteral shift to state 476
-- On stepexpr shift to state 477
-- On relativepathexpr shift to state 478
-- On qname shift to state 458
-- On primaryexpr shift to state 481
-- On pathexpr shift to state 493
-- On otherstepexpr shift to state 483
-- On numericliteral shift to state 484
-- On nodetest shift to state 485
-- On nametest shift to state 467
-- On literal shift to state 486
-- On kindtest shift to state 468
-- On integer shift to state 487
-- On for_let_clause shift to state 494
-- On extensionexpr shift to state 488
-- On expr_single shift to state 1005
-- On expr shift to state 1007
-- On decimal shift to state 489
-- On axisstepexpr shift to state 490
## Reductions:

State 1007:
## Known stack suffix:
## expr_single COMMA expr
## LR(1) items:
expr -> expr_single COMMA expr . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production expr -> expr_single COMMA expr

State 1008:
## Known stack suffix:
## expr
## LR(1) items:
statement -> expr . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production statement -> expr

State 1009:
## Known stack suffix:
##
## LR(1) items:
stringlit' -> . stringlit [ # ]
## Transitions:
-- On STRING shift to state 1010
-- On stringlit shift to state 1011
## Reductions:

State 1010:
## Known stack suffix:
## STRING
## LR(1) items:
stringlit -> STRING . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production stringlit -> STRING

State 1011:
## Known stack suffix:
## stringlit
## LR(1) items:
stringlit' -> stringlit . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept stringlit

State 1012:
## Known stack suffix:
##
## LR(1) items:
xquerymodule' -> . xquerymodule [ # ]
## Transitions:
-- On XQUERYVERSION shift to state 95
-- On xquerymodule shift to state 1013
-- On opt_version shift to state 1014
-- On mainmodule shift to state 1015
-- On librarymodule shift to state 1016
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MODULENAMESPACE MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production opt_version ->

State 1013:
## Known stack suffix:
## xquerymodule
## LR(1) items:
xquerymodule' -> xquerymodule . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept xquerymodule

State 1014:
## Known stack suffix:
## opt_version
## LR(1) items:
librarymodule -> opt_version . moduledecl prolog EOF [ # ]
mainmodule -> opt_version . prolog statements EOF [ # ]
## Transitions:
-- On MODULENAMESPACE shift to state 897
-- On IMPORTSERVICE shift to state 108
-- On IMPORTSCHEMA shift to state 113
-- On IMPORTMODULE shift to state 116
-- On IMPORTINTERFACE shift to state 122
-- On DECLARESCHEMALCURLY shift to state 128
-- On DECLAREORDERING shift to state 174
-- On DECLARENAMESPACE shift to state 177
-- On DECLAREDEFAULTORDER shift to state 182
-- On DECLAREDEFAULTFUNCTION shift to state 186
-- On DECLAREDEFAULTELEMENT shift to state 190
-- On DECLAREDEFAULTCOLLATION shift to state 194
-- On DECLARECOPYNAMESPACES shift to state 197
-- On DECLARECONSTRUCTION shift to state 202
-- On DECLAREBOUNDARYSPACE shift to state 205
-- On DECLAREBASEURI shift to state 208
-- On setters_and_first_declaration_list shift to state 285
-- On schema_decl shift to state 212
-- On prolog shift to state 913
-- On moduledecl shift to state 907
## Reductions:
-- On WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
--   reduce production setters_and_first_declaration_list ->

State 1015:
## Known stack suffix:
## mainmodule
## LR(1) items:
xquerymodule -> mainmodule . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production xquerymodule -> mainmodule

State 1016:
## Known stack suffix:
## librarymodule
## LR(1) items:
xquerymodule -> librarymodule . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production xquerymodule -> librarymodule

