File "parse_xquery.mly", line 212, characters 7-15:
Warning: the token ASSERTAS is unused.
File "parse_xquery.mly", line 152, characters 19-30:
Warning: the token ATTLISTDECL is unused.
File "parse_xquery.mly", line 153, characters 7-16:
Warning: the token BEGINDECL is unused.
File "parse_xquery.mly", line 153, characters 25-33:
Warning: the token BODYDECL is unused.
File "parse_xquery.mly", line 260, characters 7-12:
Warning: the token COLON is unused.
File "parse_xquery.mly", line 118, characters 7-14:
Warning: the token DOCTYPE is unused.
File "parse_xquery.mly", line 118, characters 15-27:
Warning: the token DOCTYPECLOSE is unused.
File "parse_xquery.mly", line 119, characters 19-31:
Warning: the token DTDDECLCLOSE is unused.
File "parse_xquery.mly", line 119, characters 7-18:
Warning: the token DTDDECLOPEN is unused.
File "parse_xquery.mly", line 152, characters 7-18:
Warning: the token ELEMENTDECL is unused.
File "parse_xquery.mly", line 153, characters 17-24:
Warning: the token ENDDECL is unused.
File "parse_xquery.mly", line 152, characters 31-41:
Warning: the token ENTITYDECL is unused.
File "parse_xquery.mly", line 151, characters 24-29:
Warning: the token FIXED is unused.
File "parse_xquery.mly", line 151, characters 16-23:
Warning: the token IMPLIED is unused.
File "parse_xquery.mly", line 269, characters 17-22:
Warning: the token IRPAR is unused.
File "parse_xquery.mly", line 198, characters 31-35:
Warning: the token ITEM is unused.
File "parse_xquery.mly", line 279, characters 7-15:
Warning: the token LEXERROR is unused.
File "parse_xquery.mly", line 185, characters 32-52:
Warning: the token NAMESPACENCNAMECURLY is unused.
File "parse_xquery.mly", line 150, characters 32-39:
Warning: the token NMTOKEN is unused.
File "parse_xquery.mly", line 198, characters 26-30:
Warning: the token NODE is unused.
File "parse_xquery.mly", line 152, characters 42-54:
Warning: the token NOTATIONDECL is unused.
File "parse_xquery.mly", line 151, characters 30-36:
Warning: the token PCDATA is unused.
File "parse_xquery.mly", line 149, characters 7-14:
Warning: the token PERCENT is unused.
File "parse_xquery.mly", line 148, characters 32-37:
Warning: the token PEREF is unused.
File "parse_xquery.mly", line 151, characters 7-15:
Warning: the token REQUIRED is unused.
File "parse_xquery.mly", line 231, characters 7-21:
Warning: the token SNAPDELETENODE is unused.
File "parse_xquery.mly", line 231, characters 22-36:
Warning: the token SNAPINSERTNODE is unused.
File "parse_xquery.mly", line 231, characters 37-51:
Warning: the token SNAPRENAMENODE is unused.
File "parse_xquery.mly", line 232, characters 7-22:
Warning: the token SNAPREPLACENODE is unused.
File "parse_xquery.mly", line 232, characters 23-45:
Warning: the token SNAPREPLACEVALUEOFNODE is unused.
File "parse_xquery.mly", line 198, characters 7-11:
Warning: the token TYPE is unused.
File "parse_xquery.mly", line 289, characters 6-11:
Warning: the token WHILE is unused.
File "parse_xquery.mly", line 115, characters 16-25:
Warning: the token XDECLNAME is unused.
File "parse_xquery.mly", line 114, characters 43-55:
Warning: the token XDOUBLEQUOTE is unused.
File "parse_xquery.mly", line 116, characters 16-25:
Warning: the token XENCODING is unused.
File "parse_xquery.mly", line 114, characters 7-12:
Warning: the token XMLPI is unused.
File "parse_xquery.mly", line 111, characters 32-39:
Warning: the token XNCNAME is unused.
File "parse_xquery.mly", line 110, characters 32-38:
Warning: the token XQNAME is unused.
File "parse_xquery.mly", line 114, characters 22-29:
Warning: the token XSDDECL is unused.
File "parse_xquery.mly", line 114, characters 30-42:
Warning: the token XSINGLEQUOTE is unused.
File "parse_xquery.mly", line 112, characters 29-36:
Warning: the token XSTRING is unused.
File "parse_xquery.mly", line 114, characters 13-21:
Warning: the token XVERSION is unused.
Grammar has 96 nonterminal symbols, among which 8 start symbols.
Grammar has 268 terminal symbols.
Grammar has 395 productions.
nullable(xtype_specifier) = false
nullable(xtype) = false
nullable(xquerymodule) = false
nullable(xelem_derivation) = false
nullable(wildcard) = false
nullable(where_order_clause) = true
nullable(where_clause) = false
nullable(variable) = false
nullable(typedefinition) = false
nullable(type_decls) = true
nullable(transform_copy_clause) = false
nullable(substitutes_for_nillable) = true
nullable(stype_specifier_union) = false
nullable(stype_specifier) = false
nullable(stype_derivation) = false
nullable(stringliteral) = false
nullable(stringlit) = false
nullable(stepqualifiers) = false
nullable(stepexpr) = false
nullable(statements) = true
nullable(statement) = false
nullable(start_declare_fun) = false
nullable(sortspeclist) = false
nullable(sortspec) = false
nullable(singletype) = false
nullable(setters_and_first_declaration_list) = true
nullable(sequencetype) = false
nullable(second_declaration_list) = true
nullable(schema_decls) = true
nullable(schema_decl) = false
nullable(return_clause) = false
nullable(relativepathexpr) = false
nullable(qname_occurrence) = false
nullable(qname) = false
nullable(prolog) = true
nullable(primaryexpr) = false
nullable(pathexpr) = false
nullable(paramlist) = false
nullable(param) = false
nullable(otherstepexpr) = false
nullable(order_clause) = false
nullable(optelementref) = true
nullable(optattributeref) = true
nullable(opt_whitespace) = true
nullable(opt_version) = true
nullable(opt_variable_as) = true
nullable(opt_variable) = true
nullable(opt_type_declaration) = true
nullable(opt_positional_var) = true
nullable(opt_interface) = true
nullable(opt_encoding) = true
nullable(numericliteral) = false
nullable(nodetest) = false
nullable(nillable) = true
nullable(nested_stype_spec) = false
nullable(nametest) = false
nullable(namespace_decls) = true
nullable(nameclass) = false
nullable(moduledecl) = false
nullable(modify_clause) = false
nullable(mainmodule) = false
nullable(literal) = false
nullable(librarymodule) = false
nullable(let_clause) = true
nullable(kindtest) = false
nullable(itemtype) = false
nullable(item_occurrence) = true
nullable(interfacedecl) = false
nullable(interface) = false
nullable(integer) = false
nullable(for_let_clause) = false
nullable(for_clause) = true
nullable(extype) = false
nullable(extensionexpr) = false
nullable(expr_single) = false
nullable(expr) = false
nullable(eq) = false
nullable(elementcontent) = false
nullable(documentnode_kindtest) = false
nullable(deriv_mixed) = true
nullable(decimal) = false
nullable(ctype_specifier) = false
nullable(ctype_derivation) = false
nullable(copyvar_clause) = true
nullable(collation) = true
nullable(case_clause_list) = false
nullable(block_sub_decl) = true
nullable(block_exprs) = false
nullable(block_decl_list) = true
nullable(block_decl) = false
nullable(block) = false
nullable(bindings) = false
nullable(axtype) = false
nullable(axisstepexpr) = false
nullable(attrlist) = true
nullable(attributecontent) = false
first(xtype_specifier) = UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS
first(xtype) = TEXT QNAME PROCESSINGINSTRUCTION NONE NCNAME LPAR GROUP ELEMENT DOCUMENT COMMENT ATTRGROUP
first(xquerymodule) = XQUERYVERSION WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MODULENAMESPACE MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
first(xelem_derivation) = UNIONOF SUBSTITUTESFOR RESTRICTS OFTYPE OFSIMPLETYPE NILLABLE MIXED LISTOF LCURLY EXTENDS
first(wildcard) = STARNCNAME STAR NCNAMESTAR
first(where_order_clause) = WHERE STABLEORDERBY ORDERBY
first(where_clause) = WHERE
first(variable) = VARNAME DOLLAR
first(typedefinition) = DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
first(type_decls) = DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
first(transform_copy_clause) = COPYDOLLAR
first(substitutes_for_nillable) = SUBSTITUTESFOR NILLABLE
first(stype_specifier_union) = UNIONOF RESTRICTS QNAME NONE NCNAME LISTOF
first(stype_specifier) = UNIONOF RESTRICTS OFSIMPLETYPE LISTOF
first(stype_derivation) = UNIONOF RESTRICTS LISTOF
first(stringliteral) = STRING
first(stringlit) = STRING
first(stepqualifiers) = LBRACK
first(stepexpr) = VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SNAPLCURLYORDERED SNAPLCURLY SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME LPAR LOPENINGTAG LOPENINGCOMMENT LCURLY INT FUNCTIONNAMELPAR ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DECIMAL COPYLCURLY COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN
first(statements) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
first(statement) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
first(start_declare_fun) = DECLAREUPDATINGFUNCTION DECLAREFUNCTION
first(sortspeclist) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
first(sortspec) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
first(singletype) = QNAMEQUESTION QNAME
first(setters_and_first_declaration_list) = IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE DECLARESCHEMALCURLY DECLAREORDERING DECLARENAMESPACE DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI
first(sequencetype) = TYPELPAR TEXTLPAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAMESTAR QNAMEQUESTION QNAMEPLUS QNAME PROCESSINGINSTRUCTIONLPAR NUMERICLPAR NODELPAR ITEMLPAR EMPTYSEQUENCELPAR ELEMENTLPAR DOCUMENTNODELPAR COMMENTLPAR ATTRIBUTELPAR ANYSTRINGLPAR
first(second_declaration_list) = DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION
first(schema_decls) = DECLARESCHEMALCURLY
first(schema_decl) = DECLARESCHEMALCURLY
first(return_clause) = RETURN
first(relativepathexpr) = VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SNAPLCURLYORDERED SNAPLCURLY SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME LPAR LOPENINGTAG LOPENINGCOMMENT LCURLY INT FUNCTIONNAMELPAR ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DECIMAL COPYLCURLY COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN
first(qname_occurrence) = QNAMESTAR QNAMEQUESTION QNAMEPLUS QNAME
first(qname) = QNAME NCNAME
first(prolog) = IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI
first(primaryexpr) = VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SNAPLCURLYORDERED SNAPLCURLY SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME LPAR LOPENINGTAG LOPENINGCOMMENT LCURLY INT FUNCTIONNAMELPAR ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DECIMAL COPYLCURLY COMMENTLPAR COMMENTCURLY ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY
first(pathexpr) = VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME LPAR LOPENINGTAG LOPENINGCOMMENT LCURLY INT FUNCTIONNAMELPAR ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DECIMAL COPYLCURLY COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN
first(paramlist) = VARNAME DOLLAR
first(param) = VARNAME DOLLAR
first(otherstepexpr) = VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SNAPLCURLYORDERED SNAPLCURLY SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME LPAR LOPENINGTAG LOPENINGCOMMENT LCURLY INT FUNCTIONNAMELPAR ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DECIMAL COPYLCURLY COMMENTLPAR COMMENTCURLY ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY
first(order_clause) = STABLEORDERBY ORDERBY
first(optelementref) = STAR QNAME NCNAME
first(optattributeref) = STAR QNAME NCNAME
first(opt_whitespace) = S
first(opt_version) = XQUERYVERSION
first(opt_variable_as) = VARNAME DOLLAR
first(opt_variable) = VARNAME DOLLAR
first(opt_type_declaration) = AS
first(opt_positional_var) = AT
first(opt_interface) = IMPLEMENT
first(opt_encoding) = ENCODING
first(numericliteral) = INT DOUBLE DECIMAL
first(nodetest) = TEXTLPAR STARNCNAME STAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAME PROCESSINGINSTRUCTIONLPAR NODELPAR NCNAMESTAR NCNAME ELEMENTLPAR DOCUMENTNODELPAR COMMENTLPAR ATTRIBUTELPAR
first(nillable) = NILLABLE
first(nested_stype_spec) = UNIONOF RESTRICTS QNAME NCNAME LISTOF
first(nametest) = STARNCNAME STAR QNAME NCNAMESTAR NCNAME
first(namespace_decls) = DECLARENAMESPACE
first(nameclass) = STARNCNAME STAR QNAME NCNAMESTAR NCNAME
first(moduledecl) = MODULENAMESPACE
first(modify_clause) = MODIFY
first(mainmodule) = XQUERYVERSION WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
first(literal) = STRING INT DOUBLE DECIMAL
first(librarymodule) = XQUERYVERSION MODULENAMESPACE
first(let_clause) = LETDOLLAR FORDOLLAR COMMA
first(kindtest) = TEXTLPAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR PROCESSINGINSTRUCTIONLPAR NODELPAR ELEMENTLPAR DOCUMENTNODELPAR COMMENTLPAR ATTRIBUTELPAR
first(itemtype) = TYPELPAR TEXTLPAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR PROCESSINGINSTRUCTIONLPAR NUMERICLPAR NODELPAR ITEMLPAR ELEMENTLPAR DOCUMENTNODELPAR COMMENTLPAR ATTRIBUTELPAR ANYSTRINGLPAR
first(item_occurrence) = QUESTION ISTAR IPLUS
first(interfacedecl) = INTERFACENAMESPACE
first(interface) = XQUERYVERSION INTERFACENAMESPACE
first(integer) = INT
first(for_let_clause) = LETDOLLAR FORDOLLAR
first(for_clause) = LETDOLLAR FORDOLLAR COMMA
first(extype) = TEXT QNAME PROCESSINGINSTRUCTION NONE NCNAME LPAR GROUP ELEMENT DOCUMENT COMMENT ATTRGROUP
first(extensionexpr) = PRAGMA
first(expr_single) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
first(expr) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
first(eq) = S EQUALS
first(elementcontent) = TEXTOPENINGPI TEXTLOPENINGTAG TEXTLOPENINGCOMMENT TEXTLCURLY TEXTLCLOSINGTAG TEXTENTITYREF TEXTCHARREF LCLOSINGTAG
first(documentnode_kindtest) = SCHEMAELEMENTLPAR ELEMENTLPAR
first(deriv_mixed) = RESTRICTS MIXED EXTENDS
first(decimal) = DECIMAL
first(ctype_specifier) = RESTRICTS OFTYPE MIXED LCURLY EXTENDS
first(ctype_derivation) = RESTRICTS MIXED LCURLY EXTENDS
first(copyvar_clause) = COMMA
first(collation) = COLLATION
first(case_clause_list) = CASE
first(block_sub_decl) = COMMA
first(block_exprs) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
first(block_decl_list) = DECLAREDOLLAR
first(block_decl) = DECLAREDOLLAR
first(block) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREDOLLAR DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
first(bindings) = QNAME NCNAME
first(axtype) = LPAR ATTRIBUTE ATTRGROUP
first(axisstepexpr) = AXIS ATSIGN
first(attrlist) = S
first(attributecontent) = TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT
minimal(xtype_specifier) = (* 2 *) OFSIMPLETYPE NCNAME
minimal(xtype) = (* 1 *) NCNAME
minimal(xquerymodule) = (* 1 *) EOF
minimal(xelem_derivation) = (* 2 *) OFSIMPLETYPE NCNAME
minimal(wildcard) = (* 1 *) STAR
minimal(where_order_clause) = (* 0 *)
minimal(where_clause) = (* 2 *) WHERE DOT
minimal(variable) = (* 1 *) VARNAME
minimal(typedefinition) = (* 4 *) DECLAREATTRIBUTE OFSIMPLETYPE NCNAME SEMICOLON
minimal(type_decls) = (* 0 *)
minimal(transform_copy_clause) = (* 4 *) COPYDOLLAR NCNAME COLONEQUALS DOT
minimal(substitutes_for_nillable) = (* 0 *)
minimal(stype_specifier_union) = (* 1 *) NONE
minimal(stype_specifier) = (* 2 *) OFSIMPLETYPE NCNAME
minimal(stype_derivation) = (* 2 *) RESTRICTS NCNAME
minimal(stringliteral) = (* 1 *) STRING
minimal(stringlit) = (* 1 *) STRING
minimal(stepqualifiers) = (* 3 *) LBRACK DOT RBRACK
minimal(stepexpr) = (* 1 *) DOT
minimal(statements) = (* 0 *)
minimal(statement) = (* 1 *) DOT
minimal(start_declare_fun) = (* 1 *) DECLAREFUNCTION
minimal(sortspeclist) = (* 1 *) DOT
minimal(sortspec) = (* 1 *) DOT
minimal(singletype) = (* 1 *) QNAME
minimal(setters_and_first_declaration_list) = (* 0 *)
minimal(sequencetype) = (* 1 *) QNAME
minimal(second_declaration_list) = (* 0 *)
minimal(schema_decls) = (* 0 *)
minimal(schema_decl) = (* 3 *) DECLARESCHEMALCURLY RCURLY SEMICOLON
minimal(return_clause) = (* 2 *) RETURN DOT
minimal(relativepathexpr) = (* 1 *) DOT
minimal(qname_occurrence) = (* 1 *) QNAME
minimal(qname) = (* 1 *) NCNAME
minimal(prolog) = (* 0 *)
minimal(primaryexpr) = (* 1 *) DOT
minimal(pathexpr) = (* 1 *) DOT
minimal(paramlist) = (* 1 *) VARNAME
minimal(param) = (* 1 *) VARNAME
minimal(otherstepexpr) = (* 1 *) DOT
minimal(order_clause) = (* 2 *) ORDERBY DOT
minimal(optelementref) = (* 0 *)
minimal(optattributeref) = (* 0 *)
minimal(opt_whitespace) = (* 0 *)
minimal(opt_version) = (* 0 *)
minimal(opt_variable_as) = (* 0 *)
minimal(opt_variable) = (* 0 *)
minimal(opt_type_declaration) = (* 0 *)
minimal(opt_positional_var) = (* 0 *)
minimal(opt_interface) = (* 0 *)
minimal(opt_encoding) = (* 0 *)
minimal(numericliteral) = (* 1 *) INT
minimal(nodetest) = (* 1 *) NCNAME
minimal(nillable) = (* 0 *)
minimal(nested_stype_spec) = (* 1 *) NCNAME
minimal(nametest) = (* 1 *) NCNAME
minimal(namespace_decls) = (* 0 *)
minimal(nameclass) = (* 1 *) NCNAME
minimal(moduledecl) = (* 5 *) MODULENAMESPACE NCNAME EQUALS STRING SEMICOLON
minimal(modify_clause) = (* 2 *) MODIFY DOT
minimal(mainmodule) = (* 1 *) EOF
minimal(literal) = (* 1 *) INT
minimal(librarymodule) = (* 6 *) MODULENAMESPACE NCNAME EQUALS STRING SEMICOLON EOF
minimal(let_clause) = (* 0 *)
minimal(kindtest) = (* 1 *) ELEMENTLPAR
minimal(itemtype) = (* 1 *) ELEMENTLPAR
minimal(item_occurrence) = (* 0 *)
minimal(interfacedecl) = (* 5 *) INTERFACENAMESPACE NCNAME EQUALS STRING SEMICOLON
minimal(interface) = (* 6 *) INTERFACENAMESPACE NCNAME EQUALS STRING SEMICOLON EOF
minimal(integer) = (* 1 *) INT
minimal(for_let_clause) = (* 4 *) FORDOLLAR NCNAME IN DOT
minimal(for_clause) = (* 0 *)
minimal(extype) = (* 1 *) NCNAME
minimal(extensionexpr) = (* 4 *) PRAGMA LCURLY DOT RCURLY
minimal(expr_single) = (* 1 *) DOT
minimal(expr) = (* 1 *) DOT
minimal(eq) = (* 1 *) EQUALS
minimal(elementcontent) = (* 1 *) TEXTLCLOSINGTAG
minimal(documentnode_kindtest) = (* 2 *) ELEMENTLPAR RPAR
minimal(deriv_mixed) = (* 0 *)
minimal(decimal) = (* 1 *) DECIMAL
minimal(ctype_specifier) = (* 2 *) OFTYPE NCNAME
minimal(ctype_derivation) = (* 3 *) LCURLY NCNAME RCURLY
minimal(copyvar_clause) = (* 0 *)
minimal(collation) = (* 0 *)
minimal(case_clause_list) = (* 7 *) CASE QNAME RETURN DOT DEFAULT RETURN DOT
minimal(block_sub_decl) = (* 0 *)
minimal(block_exprs) = (* 1 *) DOT
minimal(block_decl_list) = (* 0 *)
minimal(block_decl) = (* 4 *) DECLAREDOLLAR NCNAME COLONEQUALS DOT
minimal(block) = (* 1 *) DOT
minimal(bindings) = (* 3 *) NCNAME IN DOT
minimal(axtype) = (* 2 *) ATTRIBUTE NCNAME
minimal(axisstepexpr) = (* 2 *) AXIS NCNAME
minimal(attrlist) = (* 0 *)
minimal(attributecontent) = (* 1 *) ATTRIBUTETEXT
maximal(xtype_specifier) = infinity
maximal(xtype) = infinity
maximal(xquerymodule) = infinity
maximal(xelem_derivation) = infinity
maximal(wildcard) = 1
maximal(where_order_clause) = infinity
maximal(where_clause) = infinity
maximal(variable) = 2
maximal(typedefinition) = infinity
maximal(type_decls) = infinity
maximal(transform_copy_clause) = infinity
maximal(substitutes_for_nillable) = 3
maximal(stype_specifier_union) = infinity
maximal(stype_specifier) = infinity
maximal(stype_derivation) = infinity
maximal(stringliteral) = 1
maximal(stringlit) = 1
maximal(stepqualifiers) = infinity
maximal(stepexpr) = infinity
maximal(statements) = infinity
maximal(statement) = infinity
maximal(start_declare_fun) = 1
maximal(sortspeclist) = infinity
maximal(sortspec) = infinity
maximal(singletype) = 1
maximal(setters_and_first_declaration_list) = infinity
maximal(sequencetype) = 8
maximal(second_declaration_list) = infinity
maximal(schema_decls) = infinity
maximal(schema_decl) = infinity
maximal(return_clause) = infinity
maximal(relativepathexpr) = infinity
maximal(qname_occurrence) = 1
maximal(qname) = 1
maximal(prolog) = infinity
maximal(primaryexpr) = infinity
maximal(pathexpr) = infinity
maximal(paramlist) = infinity
maximal(param) = 11
maximal(otherstepexpr) = infinity
maximal(order_clause) = infinity
maximal(optelementref) = 3
maximal(optattributeref) = 3
maximal(opt_whitespace) = 1
maximal(opt_version) = 5
maximal(opt_variable_as) = 3
maximal(opt_variable) = 2
maximal(opt_type_declaration) = 9
maximal(opt_positional_var) = 3
maximal(opt_interface) = 4
maximal(opt_encoding) = 2
maximal(numericliteral) = 1
maximal(nodetest) = 7
maximal(nillable) = 1
maximal(nested_stype_spec) = infinity
maximal(nametest) = 1
maximal(namespace_decls) = infinity
maximal(nameclass) = 1
maximal(moduledecl) = 9
maximal(modify_clause) = infinity
maximal(mainmodule) = infinity
maximal(literal) = 1
maximal(librarymodule) = infinity
maximal(let_clause) = infinity
maximal(kindtest) = 6
maximal(itemtype) = 6
maximal(item_occurrence) = 1
maximal(interfacedecl) = 5
maximal(interface) = infinity
maximal(integer) = 1
maximal(for_let_clause) = infinity
maximal(for_clause) = infinity
maximal(extype) = infinity
maximal(extensionexpr) = infinity
maximal(expr_single) = infinity
maximal(expr) = infinity
maximal(eq) = 3
maximal(elementcontent) = infinity
maximal(documentnode_kindtest) = 5
maximal(deriv_mixed) = 3
maximal(decimal) = 1
maximal(ctype_specifier) = infinity
maximal(ctype_derivation) = infinity
maximal(copyvar_clause) = infinity
maximal(collation) = 2
maximal(case_clause_list) = infinity
maximal(block_sub_decl) = infinity
maximal(block_exprs) = infinity
maximal(block_decl_list) = infinity
maximal(block_decl) = infinity
maximal(block) = infinity
maximal(bindings) = infinity
maximal(axtype) = infinity
maximal(axisstepexpr) = infinity
maximal(attrlist) = infinity
maximal(attributecontent) = infinity
follow(xtype_specifier) = STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
follow(xtype) = STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
follow(xquerymodule) = #
follow(xelem_derivation) = SEMICOLON
follow(wildcard) = WITH WHERE UNIONOF UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RESTRICTS RCURLY RBRACK PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(where_order_clause) = RETURN
follow(where_clause) = STABLEORDERBY RETURN ORDERBY
follow(variable) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(typedefinition) = RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
follow(type_decls) = RCURLY
follow(transform_copy_clause) = MODIFY
follow(substitutes_for_nillable) = UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS
follow(stype_specifier_union) = RCURLY
follow(stype_specifier) = STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
follow(stype_derivation) = STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
follow(stringliteral) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(stringlit) = #
follow(stepqualifiers) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(stepexpr) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(statements) = EOF
follow(statement) = SEMICOLON EOF #
follow(start_declare_fun) = FUNCTIONNAMELPAR
follow(sortspeclist) = RETURN
follow(sortspec) = RETURN COMMA COLLATION
follow(singletype) = WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(setters_and_first_declaration_list) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLAREOPTION DECLARENAMEINDEX DECLAREFUNCTION DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
follow(sequencetype) = WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(second_declaration_list) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
follow(schema_decls) = RCURLY DECLARESIMPLETYPE DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
follow(schema_decl) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE RCURLY QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESIMPLETYPE DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREGROUP DECLAREFUNCTION DECLAREELEMENT DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLARECOMPLEXTYPE DECLAREBOUNDARYSPACE DECLAREBASEURI DECLAREATTRIBUTE DECLAREATTRGROUP DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
follow(return_clause) = WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(relativepathexpr) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(qname_occurrence) = WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(qname) = WITH WHERE UNIONOF UNION TREATAS TO STRING STAR STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES S RPAR ROPENINGTAG RETURN RESTRICTS REMPTYELEMENT RCURLY RCLOSINGTAG RBRACK QUESTION PRECEDES PLUS ORDERBY OR OFTYPE OFSIMPLETYPE NOTEQUALS NILLABLE NE MULT MODIFY MOD MIXED MINUS LTOP LTEQUALS LTE LT LISTOF LETDOLLAR LCURLY LBRACK IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXTENDS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AMPERSAND AFTER #
follow(prolog) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER #
follow(primaryexpr) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(pathexpr) = WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(paramlist) = RPAR
follow(param) = RPAR COMMA
follow(otherstepexpr) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(order_clause) = RETURN
follow(optelementref) = RPAR
follow(optattributeref) = RPAR
follow(opt_whitespace) = RCLOSINGTAG
follow(opt_version) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MODULENAMESPACE MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INTERFACENAMESPACE INT INSERTNODE IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE EOF ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
follow(opt_variable_as) = TYPELPAR TEXTLPAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR QNAMESTAR QNAMEQUESTION QNAMEPLUS QNAME PROCESSINGINSTRUCTIONLPAR NUMERICLPAR NODELPAR ITEMLPAR EMPTYSEQUENCELPAR ELEMENTLPAR DOCUMENTNODELPAR COMMENTLPAR ATTRIBUTELPAR ANYSTRINGLPAR
follow(opt_variable) = RETURN
follow(opt_type_declaration) = IN EXTERNAL COLONEQUALS AT
follow(opt_positional_var) = IN
follow(opt_interface) = SEMICOLON
follow(opt_encoding) = SEMICOLON
follow(numericliteral) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(nodetest) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(nillable) = UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE MIXED LISTOF LCURLY EXTENDS
follow(nested_stype_spec) = STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
follow(nametest) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(namespace_decls) = RCURLY DECLARESIMPLETYPE DECLARESCHEMALCURLY DECLAREGROUP DECLAREELEMENT DECLARECOMPLEXTYPE DECLAREATTRIBUTE DECLAREATTRGROUP
follow(nameclass) = UNIONOF RESTRICTS OFTYPE OFSIMPLETYPE NILLABLE MIXED LISTOF LCURLY EXTENDS
follow(moduledecl) = IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI
follow(modify_clause) = RETURN
follow(mainmodule) = #
follow(literal) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(librarymodule) = #
follow(let_clause) = WHERE STABLEORDERBY RETURN ORDERBY
follow(kindtest) = RPAR
follow(itemtype) = RPAR
follow(item_occurrence) = WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LCURLY IS INTO INTERSECT INSTANCEOF IN IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXTERNAL EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLONEQUALS COLLATION CASTAS CASTABLEAS CASE BEFORE BAR AT ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(interfacedecl) = IMPORTSERVICE IMPORTSCHEMA IMPORTMODULE IMPORTINTERFACE EOF DECLAREVARIABLE DECLAREVALUEINDEX DECLAREUPDATINGFUNCTION DECLARESERVER DECLARESCHEMALCURLY DECLAREORDERING DECLAREOPTION DECLARENAMESPACE DECLARENAMEINDEX DECLAREFUNCTION DECLAREDEFAULTORDER DECLAREDEFAULTFUNCTION DECLAREDEFAULTELEMENT DECLAREDEFAULTCOLLATION DECLARECOPYNAMESPACES DECLARECONSTRUCTION DECLAREBOUNDARYSPACE DECLAREBASEURI
follow(interface) = #
follow(integer) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(for_let_clause) = WHERE STABLEORDERBY RETURN ORDERBY
follow(for_clause) = WHERE STABLEORDERBY RETURN ORDERBY
follow(extype) = RCURLY #
follow(extensionexpr) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(expr_single) = WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(expr) = SEMICOLON RPAR RCURLY RBRACK EOF #
follow(eq) = TEXTENTITYREF TEXTCHARREF ATTRIBUTETEXTLCURLY ATTRIBUTETEXT
follow(elementcontent) = QNAME NCNAME
follow(documentnode_kindtest) = RPAR
follow(deriv_mixed) = LCURLY
follow(decimal) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR LBRACK IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(ctype_specifier) = STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
follow(ctype_derivation) = STAR SEMICOLON RPAR RCURLY QUESTION PLUS COMMA BAR AMPERSAND #
follow(copyvar_clause) = MODIFY
follow(collation) = RETURN COMMA
follow(case_clause_list) = WITH WHERE UNION TREATAS TO STABLEORDERBY SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(block_sub_decl) = SEMICOLON
follow(block_exprs) = RCURLY
follow(block_decl_list) = WHILELPAR VARNAME VALIDATESTRICTLCURLY VALIDATELCURLY VALIDATELAXLCURLY UNORDEREDCURLY TYPESWITCHLPAR TEXTLPAR TEXTCURLY STRING STARNCNAME STAR SOMEDOLLAR SNAPLCURLYORDERED SNAPLCURLY SLASHSLASH SLASH SETDOLLAR SCHEMAELEMENTLPAR SCHEMAATTRIBUTELPAR REPLACEVALUEOFNODE REPLACENODE RENAMENODE QNAME PROCESSINGINSTRUCTIONLPAR PRAGMA PLUS PINCNAMECURLY PICURLY ORDEREDCURLY OPENINGPI NODELPAR NCNAMESTAR NCNAME MINUS LPAR LOPENINGTAG LOPENINGCOMMENT LETVARDOLLAR LETSERVER LETDOLLAR LCURLY INT INSERTNODE IFLPAR FUNCTIONNAMELPAR FROMSERVER FORSERVER FORDOLLAR EVERYDOLLAR EVALCLOSURE ELEMENTQNAMECURLY ELEMENTLPAR ELEMENTCURLY DOUBLE DOTDOT DOT DOLLAR DOCUMENTNODELPAR DOCUMENTCURLY DELETENODE DECIMAL COPYLCURLY COPYDOLLAR COMMENTLPAR COMMENTCURLY AXIS ATTRIBUTEQNAMECURLY ATTRIBUTELPAR ATTRIBUTECURLY ATSIGN ATSERVER
follow(block_decl) = SEMICOLON
follow(block) = RCURLY
follow(bindings) = SATISFIES
follow(axtype) = RPAR RCURLY QUESTION COMMA AMPERSAND #
follow(axisstepexpr) = WITH WHERE UNION TREATAS TO STABLEORDERBY SLASHSLASH SLASH SEMICOLON SATISFIES RPAR RETURN RCURLY RBRACK PRECEDES PLUS ORDERBY OR NOTEQUALS NE MULT MODIFY MOD MINUS LTOP LTEQUALS LTE LT LETDOLLAR IS INTO INTERSECT INSTANCEOF IDIV GTOP GTEQUALS GTE GT FORDOLLAR FOLLOWS EXCEPT EQUALS EQ EOF EMPTY ELSE DIV DESCENDING DEFAULT COMMA COLLATION CASTAS CASTABLEAS CASE BEFORE BAR ASLAST ASFIRST ASCENDING AS AND AFTER #
follow(attrlist) = ROPENINGTAG REMPTYELEMENT
follow(attributecontent) = S ROPENINGTAG REMPTYELEMENT
Built an LR(0) automaton with 930 states.
The grammar is not SLR(1) -- 56 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 1017 states.
1656 shift/reduce conflicts were silently solved.
File "parse_xquery.mly", line 288, characters 0-5:
Warning: the precedence level assigned to ASFIRST is never useful.
File "parse_xquery.mly", line 288, characters 0-5:
Warning: the precedence level assigned to ASLAST is never useful.
File "parse_xquery.mly", line 311, characters 0-9:
Warning: the precedence level assigned to ATSIGN is never useful.
File "parse_xquery.mly", line 310, characters 0-9:
Warning: the precedence level assigned to AXIS is never useful.
File "parse_xquery.mly", line 289, characters 0-5:
Warning: the precedence level assigned to EVERYDOLLAR is never useful.
File "parse_xquery.mly", line 289, characters 0-5:
Warning: the precedence level assigned to FORDOLLAR is never useful.
File "parse_xquery.mly", line 289, characters 0-5:
Warning: the precedence level assigned to IFLPAR is never useful.
File "parse_xquery.mly", line 288, characters 0-5:
Warning: the precedence level assigned to INSERTNODE is never useful.
File "parse_xquery.mly", line 305, characters 0-5:
Warning: the precedence level assigned to LBRACK is never useful.
File "parse_xquery.mly", line 289, characters 0-5:
Warning: the precedence level assigned to LETDOLLAR is never useful.
File "parse_xquery.mly", line 289, characters 0-5:
Warning: the precedence level assigned to LETVARDOLLAR is never useful.
File "parse_xquery.mly", line 305, characters 0-5:
Warning: the precedence level assigned to RBRACK is never useful.
File "parse_xquery.mly", line 288, characters 0-5:
Warning: the precedence level assigned to RENAMENODE is never useful.
File "parse_xquery.mly", line 288, characters 0-5:
Warning: the precedence level assigned to REPLACENODE is never useful.
File "parse_xquery.mly", line 288, characters 0-5:
Warning: the precedence level assigned to REPLACEVALUEOFNODE is never useful.
File "parse_xquery.mly", line 289, characters 0-5:
Warning: the precedence level assigned to SETDOLLAR is never useful.
File "parse_xquery.mly", line 304, characters 0-5:
Warning: the precedence level assigned to SLASH is never useful.
File "parse_xquery.mly", line 304, characters 0-5:
Warning: the precedence level assigned to SLASHSLASH is never useful.
File "parse_xquery.mly", line 289, characters 0-5:
Warning: the precedence level assigned to SOMEDOLLAR is never useful.
File "parse_xquery.mly", line 289, characters 0-5:
Warning: the precedence level assigned to THEN is never useful.
File "parse_xquery.mly", line 289, characters 0-5:
Warning: the precedence level assigned to TYPESWITCHLPAR is never useful.
File "parse_xquery.mly", line 289, characters 0-5:
Warning: the precedence level assigned to WHERE is never useful.
File "parse_xquery.mly", line 289, characters 0-5:
Warning: the precedence level assigned to WHILE is never useful.
Warning: 268 end-of-stream conflicts were arbitrarily resolved.
298 out of 1017 states have a default reduction.
The action table is 273573 entries; 19589 non-zero; 16576 compressed.
The action table occupies roughly 33248 bytes.
The goto table is 105768 entries; 3011 non-zero; 7134 compressed.
The goto table occupies roughly 14368 bytes.
The error table occupies roughly 34232 bytes.
The default_reduction table occupies roughly 2072 bytes.
The lhs table occupies roughly 440 bytes.
The trace table occupies roughly 8 bytes.
