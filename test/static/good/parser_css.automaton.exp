State 0:
stylesheet' -> . stylesheet [ # ]
-- On stylesheet shift to state 1
-- On s_star shift to state 2
-- On SEL_FUNC reduce production s_star -> 
-- On S reduce production s_star -> 
-- On PERIOD reduce production s_star -> 
-- On OPEN_SQUARE reduce production s_star -> 
-- On IDENT reduce production s_star -> 
-- On HASH reduce production s_star -> 
-- On EOF reduce production s_star -> 
-- On DOUBLE_COLON reduce production s_star -> 
-- On COLON reduce production s_star -> 
-- On ASTERISK reduce production s_star -> 

State 1:
stylesheet' -> stylesheet . [ # ]
-- On # accept stylesheet

State 2:
s_star -> s_star . S [ SEL_FUNC S PERIOD OPEN_SQUARE IDENT HASH EOF DOUBLE_COLON COLON ASTERISK ]
stylesheet -> s_star . statement_star EOF [ # ]
-- On S shift to state 3
-- On statement_star shift to state 4
-- On SEL_FUNC reduce production statement_star -> 
-- On PERIOD reduce production statement_star -> 
-- On OPEN_SQUARE reduce production statement_star -> 
-- On IDENT reduce production statement_star -> 
-- On HASH reduce production statement_star -> 
-- On EOF reduce production statement_star -> 
-- On DOUBLE_COLON reduce production statement_star -> 
-- On COLON reduce production statement_star -> 
-- On ASTERISK reduce production statement_star -> 

State 3:
s_star -> s_star S . [ SEL_FUNC S PERIOD OPEN_SQUARE IDENT HASH EOF DOUBLE_COLON COLON ASTERISK ]
-- On SEL_FUNC reduce production s_star -> s_star S 
-- On S reduce production s_star -> s_star S 
-- On PERIOD reduce production s_star -> s_star S 
-- On OPEN_SQUARE reduce production s_star -> s_star S 
-- On IDENT reduce production s_star -> s_star S 
-- On HASH reduce production s_star -> s_star S 
-- On EOF reduce production s_star -> s_star S 
-- On DOUBLE_COLON reduce production s_star -> s_star S 
-- On COLON reduce production s_star -> s_star S 
-- On ASTERISK reduce production s_star -> s_star S 

State 4:
statement_star -> statement_star . statement [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH EOF DOUBLE_COLON COLON ASTERISK ]
stylesheet -> s_star statement_star . EOF [ # ]
-- On SEL_FUNC shift to state 5
-- On PERIOD shift to state 6
-- On OPEN_SQUARE shift to state 8
-- On IDENT shift to state 38
-- On HASH shift to state 28
-- On EOF shift to state 39
-- On DOUBLE_COLON shift to state 29
-- On COLON shift to state 31
-- On ASTERISK shift to state 40
-- On statement shift to state 41
-- On simple_selector shift to state 42
-- On selector_separated_nonempty_list_COMMA shift to state 55
-- On selector_list shift to state 58
-- On selector shift to state 92
-- On rule shift to state 93
-- On qualifier_plus shift to state 50
-- On qualifier shift to state 35
-- On element shift to state 51

State 5:
qualifier -> SEL_FUNC . function_args CLOSE_ROUND [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On SEL_FUNC shift to state 5
-- On PERIOD shift to state 6
-- On OPEN_SQUARE shift to state 8
-- On NTH shift to state 26
-- On IDENT shift to state 27
-- On HASH shift to state 28
-- On DOUBLE_COLON shift to state 29
-- On COLON shift to state 31
-- On qualifier_plus shift to state 33
-- On qualifier shift to state 35
-- On function_args shift to state 36

State 6:
qualifier -> PERIOD . IDENT [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On IDENT shift to state 7

State 7:
qualifier -> PERIOD IDENT . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On TILDE reduce production qualifier -> PERIOD IDENT 
-- On SEL_FUNC reduce production qualifier -> PERIOD IDENT 
-- On S reduce production qualifier -> PERIOD IDENT 
-- On PLUS reduce production qualifier -> PERIOD IDENT 
-- On PERIOD reduce production qualifier -> PERIOD IDENT 
-- On OPEN_SQUARE reduce production qualifier -> PERIOD IDENT 
-- On OPEN_CURLY reduce production qualifier -> PERIOD IDENT 
-- On HASH reduce production qualifier -> PERIOD IDENT 
-- On GT reduce production qualifier -> PERIOD IDENT 
-- On DOUBLE_COLON reduce production qualifier -> PERIOD IDENT 
-- On COMMA reduce production qualifier -> PERIOD IDENT 
-- On COLON reduce production qualifier -> PERIOD IDENT 
-- On CLOSE_ROUND reduce production qualifier -> PERIOD IDENT 

State 8:
qualifier -> OPEN_SQUARE . IDENT attr_operation CLOSE_SQUARE [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On IDENT shift to state 9

State 9:
qualifier -> OPEN_SQUARE IDENT . attr_operation CLOSE_SQUARE [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On ATTR_SUFFIX shift to state 10
-- On ATTR_SUBSTRING shift to state 14
-- On ATTR_PREFIX shift to state 16
-- On ATTR_INCLUDES shift to state 18
-- On ATTR_EQUALS shift to state 20
-- On ATTR_DASHMATCH shift to state 22
-- On attr_operation shift to state 24
-- On CLOSE_SQUARE reduce production attr_operation -> 

State 10:
attr_operation -> ATTR_SUFFIX . attr_operand [ CLOSE_SQUARE ]
-- On TString shift to state 11
-- On IDENT shift to state 12
-- On attr_operand shift to state 13

State 11:
attr_operand -> TString . [ CLOSE_SQUARE ]
-- On CLOSE_SQUARE reduce production attr_operand -> TString 

State 12:
attr_operand -> IDENT . [ CLOSE_SQUARE ]
-- On CLOSE_SQUARE reduce production attr_operand -> IDENT 

State 13:
attr_operation -> ATTR_SUFFIX attr_operand . [ CLOSE_SQUARE ]
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_SUFFIX attr_operand 

State 14:
attr_operation -> ATTR_SUBSTRING . attr_operand [ CLOSE_SQUARE ]
-- On TString shift to state 11
-- On IDENT shift to state 12
-- On attr_operand shift to state 15

State 15:
attr_operation -> ATTR_SUBSTRING attr_operand . [ CLOSE_SQUARE ]
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_SUBSTRING attr_operand 

State 16:
attr_operation -> ATTR_PREFIX . attr_operand [ CLOSE_SQUARE ]
-- On TString shift to state 11
-- On IDENT shift to state 12
-- On attr_operand shift to state 17

State 17:
attr_operation -> ATTR_PREFIX attr_operand . [ CLOSE_SQUARE ]
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_PREFIX attr_operand 

State 18:
attr_operation -> ATTR_INCLUDES . attr_operand [ CLOSE_SQUARE ]
-- On TString shift to state 11
-- On IDENT shift to state 12
-- On attr_operand shift to state 19

State 19:
attr_operation -> ATTR_INCLUDES attr_operand . [ CLOSE_SQUARE ]
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_INCLUDES attr_operand 

State 20:
attr_operation -> ATTR_EQUALS . attr_operand [ CLOSE_SQUARE ]
-- On TString shift to state 11
-- On IDENT shift to state 12
-- On attr_operand shift to state 21

State 21:
attr_operation -> ATTR_EQUALS attr_operand . [ CLOSE_SQUARE ]
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_EQUALS attr_operand 

State 22:
attr_operation -> ATTR_DASHMATCH . attr_operand [ CLOSE_SQUARE ]
-- On TString shift to state 11
-- On IDENT shift to state 12
-- On attr_operand shift to state 23

State 23:
attr_operation -> ATTR_DASHMATCH attr_operand . [ CLOSE_SQUARE ]
-- On CLOSE_SQUARE reduce production attr_operation -> ATTR_DASHMATCH attr_operand 

State 24:
qualifier -> OPEN_SQUARE IDENT attr_operation . CLOSE_SQUARE [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On CLOSE_SQUARE shift to state 25

State 25:
qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On TILDE reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On SEL_FUNC reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On S reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On PLUS reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On PERIOD reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On OPEN_SQUARE reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On OPEN_CURLY reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On HASH reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On GT reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On DOUBLE_COLON reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On COMMA reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On COLON reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 
-- On CLOSE_ROUND reduce production qualifier -> OPEN_SQUARE IDENT attr_operation CLOSE_SQUARE 

State 26:
function_args -> NTH . [ CLOSE_ROUND ]
-- On CLOSE_ROUND reduce production function_args -> NTH 

State 27:
function_args -> IDENT . [ CLOSE_ROUND ]
-- On CLOSE_ROUND reduce production function_args -> IDENT 

State 28:
qualifier -> HASH . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On TILDE reduce production qualifier -> HASH 
-- On SEL_FUNC reduce production qualifier -> HASH 
-- On S reduce production qualifier -> HASH 
-- On PLUS reduce production qualifier -> HASH 
-- On PERIOD reduce production qualifier -> HASH 
-- On OPEN_SQUARE reduce production qualifier -> HASH 
-- On OPEN_CURLY reduce production qualifier -> HASH 
-- On HASH reduce production qualifier -> HASH 
-- On GT reduce production qualifier -> HASH 
-- On DOUBLE_COLON reduce production qualifier -> HASH 
-- On COMMA reduce production qualifier -> HASH 
-- On COLON reduce production qualifier -> HASH 
-- On CLOSE_ROUND reduce production qualifier -> HASH 

State 29:
qualifier -> DOUBLE_COLON . IDENT [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On IDENT shift to state 30

State 30:
qualifier -> DOUBLE_COLON IDENT . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On TILDE reduce production qualifier -> DOUBLE_COLON IDENT 
-- On SEL_FUNC reduce production qualifier -> DOUBLE_COLON IDENT 
-- On S reduce production qualifier -> DOUBLE_COLON IDENT 
-- On PLUS reduce production qualifier -> DOUBLE_COLON IDENT 
-- On PERIOD reduce production qualifier -> DOUBLE_COLON IDENT 
-- On OPEN_SQUARE reduce production qualifier -> DOUBLE_COLON IDENT 
-- On OPEN_CURLY reduce production qualifier -> DOUBLE_COLON IDENT 
-- On HASH reduce production qualifier -> DOUBLE_COLON IDENT 
-- On GT reduce production qualifier -> DOUBLE_COLON IDENT 
-- On DOUBLE_COLON reduce production qualifier -> DOUBLE_COLON IDENT 
-- On COMMA reduce production qualifier -> DOUBLE_COLON IDENT 
-- On COLON reduce production qualifier -> DOUBLE_COLON IDENT 
-- On CLOSE_ROUND reduce production qualifier -> DOUBLE_COLON IDENT 

State 31:
qualifier -> COLON . IDENT [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On IDENT shift to state 32

State 32:
qualifier -> COLON IDENT . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On TILDE reduce production qualifier -> COLON IDENT 
-- On SEL_FUNC reduce production qualifier -> COLON IDENT 
-- On S reduce production qualifier -> COLON IDENT 
-- On PLUS reduce production qualifier -> COLON IDENT 
-- On PERIOD reduce production qualifier -> COLON IDENT 
-- On OPEN_SQUARE reduce production qualifier -> COLON IDENT 
-- On OPEN_CURLY reduce production qualifier -> COLON IDENT 
-- On HASH reduce production qualifier -> COLON IDENT 
-- On GT reduce production qualifier -> COLON IDENT 
-- On DOUBLE_COLON reduce production qualifier -> COLON IDENT 
-- On COMMA reduce production qualifier -> COLON IDENT 
-- On COLON reduce production qualifier -> COLON IDENT 
-- On CLOSE_ROUND reduce production qualifier -> COLON IDENT 

State 33:
function_args -> qualifier_plus . [ CLOSE_ROUND ]
qualifier_plus -> qualifier_plus . qualifier [ SEL_FUNC PERIOD OPEN_SQUARE HASH DOUBLE_COLON COLON CLOSE_ROUND ]
-- On SEL_FUNC shift to state 5
-- On PERIOD shift to state 6
-- On OPEN_SQUARE shift to state 8
-- On HASH shift to state 28
-- On DOUBLE_COLON shift to state 29
-- On COLON shift to state 31
-- On qualifier shift to state 34
-- On CLOSE_ROUND reduce production function_args -> qualifier_plus 

State 34:
qualifier_plus -> qualifier_plus qualifier . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On TILDE reduce production qualifier_plus -> qualifier_plus qualifier 
-- On SEL_FUNC reduce production qualifier_plus -> qualifier_plus qualifier 
-- On S reduce production qualifier_plus -> qualifier_plus qualifier 
-- On PLUS reduce production qualifier_plus -> qualifier_plus qualifier 
-- On PERIOD reduce production qualifier_plus -> qualifier_plus qualifier 
-- On OPEN_SQUARE reduce production qualifier_plus -> qualifier_plus qualifier 
-- On OPEN_CURLY reduce production qualifier_plus -> qualifier_plus qualifier 
-- On HASH reduce production qualifier_plus -> qualifier_plus qualifier 
-- On GT reduce production qualifier_plus -> qualifier_plus qualifier 
-- On DOUBLE_COLON reduce production qualifier_plus -> qualifier_plus qualifier 
-- On COMMA reduce production qualifier_plus -> qualifier_plus qualifier 
-- On COLON reduce production qualifier_plus -> qualifier_plus qualifier 
-- On CLOSE_ROUND reduce production qualifier_plus -> qualifier_plus qualifier 

State 35:
qualifier_plus -> qualifier . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On TILDE reduce production qualifier_plus -> qualifier 
-- On SEL_FUNC reduce production qualifier_plus -> qualifier 
-- On S reduce production qualifier_plus -> qualifier 
-- On PLUS reduce production qualifier_plus -> qualifier 
-- On PERIOD reduce production qualifier_plus -> qualifier 
-- On OPEN_SQUARE reduce production qualifier_plus -> qualifier 
-- On OPEN_CURLY reduce production qualifier_plus -> qualifier 
-- On HASH reduce production qualifier_plus -> qualifier 
-- On GT reduce production qualifier_plus -> qualifier 
-- On DOUBLE_COLON reduce production qualifier_plus -> qualifier 
-- On COMMA reduce production qualifier_plus -> qualifier 
-- On COLON reduce production qualifier_plus -> qualifier 
-- On CLOSE_ROUND reduce production qualifier_plus -> qualifier 

State 36:
qualifier -> SEL_FUNC function_args . CLOSE_ROUND [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On CLOSE_ROUND shift to state 37

State 37:
qualifier -> SEL_FUNC function_args CLOSE_ROUND . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON CLOSE_ROUND ]
-- On TILDE reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On SEL_FUNC reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On S reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On PLUS reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On PERIOD reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On OPEN_SQUARE reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On OPEN_CURLY reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On HASH reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On GT reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On DOUBLE_COLON reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On COMMA reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On COLON reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 
-- On CLOSE_ROUND reduce production qualifier -> SEL_FUNC function_args CLOSE_ROUND 

State 38:
element -> IDENT . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON ]
-- On TILDE reduce production element -> IDENT 
-- On SEL_FUNC reduce production element -> IDENT 
-- On S reduce production element -> IDENT 
-- On PLUS reduce production element -> IDENT 
-- On PERIOD reduce production element -> IDENT 
-- On OPEN_SQUARE reduce production element -> IDENT 
-- On OPEN_CURLY reduce production element -> IDENT 
-- On HASH reduce production element -> IDENT 
-- On GT reduce production element -> IDENT 
-- On DOUBLE_COLON reduce production element -> IDENT 
-- On COMMA reduce production element -> IDENT 
-- On COLON reduce production element -> IDENT 

State 39:
stylesheet -> s_star statement_star EOF . [ # ]
-- On # reduce production stylesheet -> s_star statement_star EOF 

State 40:
element -> ASTERISK . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON ]
-- On TILDE reduce production element -> ASTERISK 
-- On SEL_FUNC reduce production element -> ASTERISK 
-- On S reduce production element -> ASTERISK 
-- On PLUS reduce production element -> ASTERISK 
-- On PERIOD reduce production element -> ASTERISK 
-- On OPEN_SQUARE reduce production element -> ASTERISK 
-- On OPEN_CURLY reduce production element -> ASTERISK 
-- On HASH reduce production element -> ASTERISK 
-- On GT reduce production element -> ASTERISK 
-- On DOUBLE_COLON reduce production element -> ASTERISK 
-- On COMMA reduce production element -> ASTERISK 
-- On COLON reduce production element -> ASTERISK 

State 41:
statement_star -> statement_star statement . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH EOF DOUBLE_COLON COLON ASTERISK ]
-- On SEL_FUNC reduce production statement_star -> statement_star statement 
-- On PERIOD reduce production statement_star -> statement_star statement 
-- On OPEN_SQUARE reduce production statement_star -> statement_star statement 
-- On IDENT reduce production statement_star -> statement_star statement 
-- On HASH reduce production statement_star -> statement_star statement 
-- On EOF reduce production statement_star -> statement_star statement 
-- On DOUBLE_COLON reduce production statement_star -> statement_star statement 
-- On COLON reduce production statement_star -> statement_star statement 
-- On ASTERISK reduce production statement_star -> statement_star statement 

State 42:
selector -> simple_selector . combination_star [ OPEN_CURLY COMMA ]
-- On combination_star shift to state 43
-- On TILDE reduce production combination_star -> 
-- On S reduce production combination_star -> 
-- On PLUS reduce production combination_star -> 
-- On OPEN_CURLY reduce production combination_star -> 
-- On GT reduce production combination_star -> 
-- On COMMA reduce production combination_star -> 

State 43:
combination_star -> combination_star . combination [ TILDE S PLUS OPEN_CURLY GT COMMA ]
selector -> simple_selector combination_star . [ OPEN_CURLY COMMA ]
-- On TILDE shift to state 44
-- On S shift to state 45
-- On PLUS shift to state 46
-- On GT shift to state 47
-- On combinator shift to state 48
-- On combination shift to state 54
-- On OPEN_CURLY reduce production selector -> simple_selector combination_star 
-- On COMMA reduce production selector -> simple_selector combination_star 

State 44:
combinator -> TILDE . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK ]
-- On SEL_FUNC reduce production combinator -> TILDE 
-- On PERIOD reduce production combinator -> TILDE 
-- On OPEN_SQUARE reduce production combinator -> TILDE 
-- On IDENT reduce production combinator -> TILDE 
-- On HASH reduce production combinator -> TILDE 
-- On DOUBLE_COLON reduce production combinator -> TILDE 
-- On COLON reduce production combinator -> TILDE 
-- On ASTERISK reduce production combinator -> TILDE 

State 45:
combinator -> S . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK ]
-- On SEL_FUNC reduce production combinator -> S 
-- On PERIOD reduce production combinator -> S 
-- On OPEN_SQUARE reduce production combinator -> S 
-- On IDENT reduce production combinator -> S 
-- On HASH reduce production combinator -> S 
-- On DOUBLE_COLON reduce production combinator -> S 
-- On COLON reduce production combinator -> S 
-- On ASTERISK reduce production combinator -> S 

State 46:
combinator -> PLUS . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK ]
-- On SEL_FUNC reduce production combinator -> PLUS 
-- On PERIOD reduce production combinator -> PLUS 
-- On OPEN_SQUARE reduce production combinator -> PLUS 
-- On IDENT reduce production combinator -> PLUS 
-- On HASH reduce production combinator -> PLUS 
-- On DOUBLE_COLON reduce production combinator -> PLUS 
-- On COLON reduce production combinator -> PLUS 
-- On ASTERISK reduce production combinator -> PLUS 

State 47:
combinator -> GT . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH DOUBLE_COLON COLON ASTERISK ]
-- On SEL_FUNC reduce production combinator -> GT 
-- On PERIOD reduce production combinator -> GT 
-- On OPEN_SQUARE reduce production combinator -> GT 
-- On IDENT reduce production combinator -> GT 
-- On HASH reduce production combinator -> GT 
-- On DOUBLE_COLON reduce production combinator -> GT 
-- On COLON reduce production combinator -> GT 
-- On ASTERISK reduce production combinator -> GT 

State 48:
combination -> combinator . simple_selector [ TILDE S PLUS OPEN_CURLY GT COMMA ]
-- On SEL_FUNC shift to state 5
-- On PERIOD shift to state 6
-- On OPEN_SQUARE shift to state 8
-- On IDENT shift to state 38
-- On HASH shift to state 28
-- On DOUBLE_COLON shift to state 29
-- On COLON shift to state 31
-- On ASTERISK shift to state 40
-- On simple_selector shift to state 49
-- On qualifier_plus shift to state 50
-- On qualifier shift to state 35
-- On element shift to state 51

State 49:
combination -> combinator simple_selector . [ TILDE S PLUS OPEN_CURLY GT COMMA ]
-- On TILDE reduce production combination -> combinator simple_selector 
-- On S reduce production combination -> combinator simple_selector 
-- On PLUS reduce production combination -> combinator simple_selector 
-- On OPEN_CURLY reduce production combination -> combinator simple_selector 
-- On GT reduce production combination -> combinator simple_selector 
-- On COMMA reduce production combination -> combinator simple_selector 

State 50:
qualifier_plus -> qualifier_plus . qualifier [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON ]
simple_selector -> qualifier_plus . [ TILDE S PLUS OPEN_CURLY GT COMMA ]
-- On SEL_FUNC shift to state 5
-- On PERIOD shift to state 6
-- On OPEN_SQUARE shift to state 8
-- On HASH shift to state 28
-- On DOUBLE_COLON shift to state 29
-- On COLON shift to state 31
-- On qualifier shift to state 34
-- On TILDE reduce production simple_selector -> qualifier_plus 
-- On S reduce production simple_selector -> qualifier_plus 
-- On PLUS reduce production simple_selector -> qualifier_plus 
-- On OPEN_CURLY reduce production simple_selector -> qualifier_plus 
-- On GT reduce production simple_selector -> qualifier_plus 
-- On COMMA reduce production simple_selector -> qualifier_plus 

State 51:
simple_selector -> element . qualifier_star [ TILDE S PLUS OPEN_CURLY GT COMMA ]
-- On qualifier_star shift to state 52
-- On TILDE reduce production qualifier_star -> 
-- On SEL_FUNC reduce production qualifier_star -> 
-- On S reduce production qualifier_star -> 
-- On PLUS reduce production qualifier_star -> 
-- On PERIOD reduce production qualifier_star -> 
-- On OPEN_SQUARE reduce production qualifier_star -> 
-- On OPEN_CURLY reduce production qualifier_star -> 
-- On HASH reduce production qualifier_star -> 
-- On GT reduce production qualifier_star -> 
-- On DOUBLE_COLON reduce production qualifier_star -> 
-- On COMMA reduce production qualifier_star -> 
-- On COLON reduce production qualifier_star -> 

State 52:
qualifier_star -> qualifier_star . qualifier [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON ]
simple_selector -> element qualifier_star . [ TILDE S PLUS OPEN_CURLY GT COMMA ]
-- On SEL_FUNC shift to state 5
-- On PERIOD shift to state 6
-- On OPEN_SQUARE shift to state 8
-- On HASH shift to state 28
-- On DOUBLE_COLON shift to state 29
-- On COLON shift to state 31
-- On qualifier shift to state 53
-- On TILDE reduce production simple_selector -> element qualifier_star 
-- On S reduce production simple_selector -> element qualifier_star 
-- On PLUS reduce production simple_selector -> element qualifier_star 
-- On OPEN_CURLY reduce production simple_selector -> element qualifier_star 
-- On GT reduce production simple_selector -> element qualifier_star 
-- On COMMA reduce production simple_selector -> element qualifier_star 

State 53:
qualifier_star -> qualifier_star qualifier . [ TILDE SEL_FUNC S PLUS PERIOD OPEN_SQUARE OPEN_CURLY HASH GT DOUBLE_COLON COMMA COLON ]
-- On TILDE reduce production qualifier_star -> qualifier_star qualifier 
-- On SEL_FUNC reduce production qualifier_star -> qualifier_star qualifier 
-- On S reduce production qualifier_star -> qualifier_star qualifier 
-- On PLUS reduce production qualifier_star -> qualifier_star qualifier 
-- On PERIOD reduce production qualifier_star -> qualifier_star qualifier 
-- On OPEN_SQUARE reduce production qualifier_star -> qualifier_star qualifier 
-- On OPEN_CURLY reduce production qualifier_star -> qualifier_star qualifier 
-- On HASH reduce production qualifier_star -> qualifier_star qualifier 
-- On GT reduce production qualifier_star -> qualifier_star qualifier 
-- On DOUBLE_COLON reduce production qualifier_star -> qualifier_star qualifier 
-- On COMMA reduce production qualifier_star -> qualifier_star qualifier 
-- On COLON reduce production qualifier_star -> qualifier_star qualifier 

State 54:
combination_star -> combination_star combination . [ TILDE S PLUS OPEN_CURLY GT COMMA ]
-- On TILDE reduce production combination_star -> combination_star combination 
-- On S reduce production combination_star -> combination_star combination 
-- On PLUS reduce production combination_star -> combination_star combination 
-- On OPEN_CURLY reduce production combination_star -> combination_star combination 
-- On GT reduce production combination_star -> combination_star combination 
-- On COMMA reduce production combination_star -> combination_star combination 

State 55:
selector_list -> selector_separated_nonempty_list_COMMA . [ OPEN_CURLY ]
selector_separated_nonempty_list_COMMA -> selector_separated_nonempty_list_COMMA . COMMA selector [ OPEN_CURLY COMMA ]
-- On COMMA shift to state 56
-- On OPEN_CURLY reduce production selector_list -> selector_separated_nonempty_list_COMMA 

State 56:
selector_separated_nonempty_list_COMMA -> selector_separated_nonempty_list_COMMA COMMA . selector [ OPEN_CURLY COMMA ]
-- On SEL_FUNC shift to state 5
-- On PERIOD shift to state 6
-- On OPEN_SQUARE shift to state 8
-- On IDENT shift to state 38
-- On HASH shift to state 28
-- On DOUBLE_COLON shift to state 29
-- On COLON shift to state 31
-- On ASTERISK shift to state 40
-- On simple_selector shift to state 42
-- On selector shift to state 57
-- On qualifier_plus shift to state 50
-- On qualifier shift to state 35
-- On element shift to state 51

State 57:
selector_separated_nonempty_list_COMMA -> selector_separated_nonempty_list_COMMA COMMA selector . [ OPEN_CURLY COMMA ]
-- On OPEN_CURLY reduce production selector_separated_nonempty_list_COMMA -> selector_separated_nonempty_list_COMMA COMMA selector 
-- On COMMA reduce production selector_separated_nonempty_list_COMMA -> selector_separated_nonempty_list_COMMA COMMA selector 

State 58:
rule -> selector_list . declaration_block [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH EOF DOUBLE_COLON COLON ASTERISK ]
-- On OPEN_CURLY shift to state 59
-- On declaration_block shift to state 91

State 59:
declaration_block -> OPEN_CURLY . declaration_plus CLOSE_CURLY [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH EOF DOUBLE_COLON COLON ASTERISK ]
-- On IDENT shift to state 60
-- On declaration_plus shift to state 87
-- On declaration shift to state 90

State 60:
declaration -> IDENT . COLON expr boption_IMPORTANT SEMICOLON [ IDENT CLOSE_CURLY ]
-- On COLON shift to state 61

State 61:
declaration -> IDENT COLON . expr boption_IMPORTANT SEMICOLON [ IDENT CLOSE_CURLY ]
-- On VAR shift to state 62
-- On URI shift to state 63
-- On TString shift to state 66
-- On TERM_FUNC shift to state 67
-- On SLASH shift to state 68
-- On QUANTITY shift to state 69
-- On IDENT shift to state 70
-- On HASH shift to state 71
-- On term_separated_nonempty_list_sopt shift to state 72
-- On term shift to state 76
-- On sentence_separated_nonempty_list_COMMA shift to state 77
-- On sentence shift to state 80
-- On expr shift to state 83
-- On calc shift to state 75

State 62:
calc -> VAR . [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production calc -> VAR 
-- On S reduce production calc -> VAR 
-- On IMPORTANT reduce production calc -> VAR 
-- On COMMA reduce production calc -> VAR 
-- On CLOSE_ROUND reduce production calc -> VAR 

State 63:
term -> URI . TString CLOSE_ROUND [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On TString shift to state 64

State 64:
term -> URI TString . CLOSE_ROUND [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On CLOSE_ROUND shift to state 65

State 65:
term -> URI TString CLOSE_ROUND . [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production term -> URI TString CLOSE_ROUND 
-- On S reduce production term -> URI TString CLOSE_ROUND 
-- On IMPORTANT reduce production term -> URI TString CLOSE_ROUND 
-- On COMMA reduce production term -> URI TString CLOSE_ROUND 
-- On CLOSE_ROUND reduce production term -> URI TString CLOSE_ROUND 

State 66:
term -> TString . [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production term -> TString 
-- On S reduce production term -> TString 
-- On IMPORTANT reduce production term -> TString 
-- On COMMA reduce production term -> TString 
-- On CLOSE_ROUND reduce production term -> TString 

State 67:
term -> TERM_FUNC . expr CLOSE_ROUND [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On VAR shift to state 62
-- On URI shift to state 63
-- On TString shift to state 66
-- On TERM_FUNC shift to state 67
-- On SLASH shift to state 68
-- On QUANTITY shift to state 69
-- On IDENT shift to state 70
-- On HASH shift to state 71
-- On term_separated_nonempty_list_sopt shift to state 72
-- On term shift to state 76
-- On sentence_separated_nonempty_list_COMMA shift to state 77
-- On sentence shift to state 80
-- On expr shift to state 81
-- On calc shift to state 75

State 68:
term -> SLASH . [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production term -> SLASH 
-- On S reduce production term -> SLASH 
-- On IMPORTANT reduce production term -> SLASH 
-- On COMMA reduce production term -> SLASH 
-- On CLOSE_ROUND reduce production term -> SLASH 

State 69:
calc -> QUANTITY . [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production calc -> QUANTITY 
-- On S reduce production calc -> QUANTITY 
-- On IMPORTANT reduce production calc -> QUANTITY 
-- On COMMA reduce production calc -> QUANTITY 
-- On CLOSE_ROUND reduce production calc -> QUANTITY 

State 70:
term -> IDENT . [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production term -> IDENT 
-- On S reduce production term -> IDENT 
-- On IMPORTANT reduce production term -> IDENT 
-- On COMMA reduce production term -> IDENT 
-- On CLOSE_ROUND reduce production term -> IDENT 

State 71:
term -> HASH . [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production term -> HASH 
-- On S reduce production term -> HASH 
-- On IMPORTANT reduce production term -> HASH 
-- On COMMA reduce production term -> HASH 
-- On CLOSE_ROUND reduce production term -> HASH 

State 72:
sentence -> term_separated_nonempty_list_sopt . [ SEMICOLON IMPORTANT COMMA CLOSE_ROUND ]
term_separated_nonempty_list_sopt -> term_separated_nonempty_list_sopt . S term [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On S shift to state 73
-- On SEMICOLON reduce production sentence -> term_separated_nonempty_list_sopt 
-- On IMPORTANT reduce production sentence -> term_separated_nonempty_list_sopt 
-- On COMMA reduce production sentence -> term_separated_nonempty_list_sopt 
-- On CLOSE_ROUND reduce production sentence -> term_separated_nonempty_list_sopt 

State 73:
term_separated_nonempty_list_sopt -> term_separated_nonempty_list_sopt S . term [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On VAR shift to state 62
-- On URI shift to state 63
-- On TString shift to state 66
-- On TERM_FUNC shift to state 67
-- On SLASH shift to state 68
-- On QUANTITY shift to state 69
-- On IDENT shift to state 70
-- On HASH shift to state 71
-- On term shift to state 74
-- On calc shift to state 75

State 74:
term_separated_nonempty_list_sopt -> term_separated_nonempty_list_sopt S term . [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production term_separated_nonempty_list_sopt -> term_separated_nonempty_list_sopt S term 
-- On S reduce production term_separated_nonempty_list_sopt -> term_separated_nonempty_list_sopt S term 
-- On IMPORTANT reduce production term_separated_nonempty_list_sopt -> term_separated_nonempty_list_sopt S term 
-- On COMMA reduce production term_separated_nonempty_list_sopt -> term_separated_nonempty_list_sopt S term 
-- On CLOSE_ROUND reduce production term_separated_nonempty_list_sopt -> term_separated_nonempty_list_sopt S term 

State 75:
term -> calc . [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production term -> calc 
-- On S reduce production term -> calc 
-- On IMPORTANT reduce production term -> calc 
-- On COMMA reduce production term -> calc 
-- On CLOSE_ROUND reduce production term -> calc 

State 76:
term_separated_nonempty_list_sopt -> term . [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production term_separated_nonempty_list_sopt -> term 
-- On S reduce production term_separated_nonempty_list_sopt -> term 
-- On IMPORTANT reduce production term_separated_nonempty_list_sopt -> term 
-- On COMMA reduce production term_separated_nonempty_list_sopt -> term 
-- On CLOSE_ROUND reduce production term_separated_nonempty_list_sopt -> term 

State 77:
expr -> sentence_separated_nonempty_list_COMMA . [ SEMICOLON IMPORTANT CLOSE_ROUND ]
sentence_separated_nonempty_list_COMMA -> sentence_separated_nonempty_list_COMMA . COMMA sentence [ SEMICOLON IMPORTANT COMMA CLOSE_ROUND ]
-- On COMMA shift to state 78
-- On SEMICOLON reduce production expr -> sentence_separated_nonempty_list_COMMA 
-- On IMPORTANT reduce production expr -> sentence_separated_nonempty_list_COMMA 
-- On CLOSE_ROUND reduce production expr -> sentence_separated_nonempty_list_COMMA 

State 78:
sentence_separated_nonempty_list_COMMA -> sentence_separated_nonempty_list_COMMA COMMA . sentence [ SEMICOLON IMPORTANT COMMA CLOSE_ROUND ]
-- On VAR shift to state 62
-- On URI shift to state 63
-- On TString shift to state 66
-- On TERM_FUNC shift to state 67
-- On SLASH shift to state 68
-- On QUANTITY shift to state 69
-- On IDENT shift to state 70
-- On HASH shift to state 71
-- On term_separated_nonempty_list_sopt shift to state 72
-- On term shift to state 76
-- On sentence shift to state 79
-- On calc shift to state 75

State 79:
sentence_separated_nonempty_list_COMMA -> sentence_separated_nonempty_list_COMMA COMMA sentence . [ SEMICOLON IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production sentence_separated_nonempty_list_COMMA -> sentence_separated_nonempty_list_COMMA COMMA sentence 
-- On IMPORTANT reduce production sentence_separated_nonempty_list_COMMA -> sentence_separated_nonempty_list_COMMA COMMA sentence 
-- On COMMA reduce production sentence_separated_nonempty_list_COMMA -> sentence_separated_nonempty_list_COMMA COMMA sentence 
-- On CLOSE_ROUND reduce production sentence_separated_nonempty_list_COMMA -> sentence_separated_nonempty_list_COMMA COMMA sentence 

State 80:
sentence_separated_nonempty_list_COMMA -> sentence . [ SEMICOLON IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production sentence_separated_nonempty_list_COMMA -> sentence 
-- On IMPORTANT reduce production sentence_separated_nonempty_list_COMMA -> sentence 
-- On COMMA reduce production sentence_separated_nonempty_list_COMMA -> sentence 
-- On CLOSE_ROUND reduce production sentence_separated_nonempty_list_COMMA -> sentence 

State 81:
term -> TERM_FUNC expr . CLOSE_ROUND [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On CLOSE_ROUND shift to state 82

State 82:
term -> TERM_FUNC expr CLOSE_ROUND . [ SEMICOLON S IMPORTANT COMMA CLOSE_ROUND ]
-- On SEMICOLON reduce production term -> TERM_FUNC expr CLOSE_ROUND 
-- On S reduce production term -> TERM_FUNC expr CLOSE_ROUND 
-- On IMPORTANT reduce production term -> TERM_FUNC expr CLOSE_ROUND 
-- On COMMA reduce production term -> TERM_FUNC expr CLOSE_ROUND 
-- On CLOSE_ROUND reduce production term -> TERM_FUNC expr CLOSE_ROUND 

State 83:
declaration -> IDENT COLON expr . boption_IMPORTANT SEMICOLON [ IDENT CLOSE_CURLY ]
-- On IMPORTANT shift to state 84
-- On boption_IMPORTANT shift to state 85
-- On SEMICOLON reduce production boption_IMPORTANT -> 

State 84:
boption_IMPORTANT -> IMPORTANT . [ SEMICOLON ]
-- On SEMICOLON reduce production boption_IMPORTANT -> IMPORTANT 

State 85:
declaration -> IDENT COLON expr boption_IMPORTANT . SEMICOLON [ IDENT CLOSE_CURLY ]
-- On SEMICOLON shift to state 86

State 86:
declaration -> IDENT COLON expr boption_IMPORTANT SEMICOLON . [ IDENT CLOSE_CURLY ]
-- On IDENT reduce production declaration -> IDENT COLON expr boption_IMPORTANT SEMICOLON 
-- On CLOSE_CURLY reduce production declaration -> IDENT COLON expr boption_IMPORTANT SEMICOLON 

State 87:
declaration_block -> OPEN_CURLY declaration_plus . CLOSE_CURLY [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH EOF DOUBLE_COLON COLON ASTERISK ]
declaration_plus -> declaration_plus . declaration [ IDENT CLOSE_CURLY ]
-- On IDENT shift to state 60
-- On CLOSE_CURLY shift to state 88
-- On declaration shift to state 89

State 88:
declaration_block -> OPEN_CURLY declaration_plus CLOSE_CURLY . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH EOF DOUBLE_COLON COLON ASTERISK ]
-- On SEL_FUNC reduce production declaration_block -> OPEN_CURLY declaration_plus CLOSE_CURLY 
-- On PERIOD reduce production declaration_block -> OPEN_CURLY declaration_plus CLOSE_CURLY 
-- On OPEN_SQUARE reduce production declaration_block -> OPEN_CURLY declaration_plus CLOSE_CURLY 
-- On IDENT reduce production declaration_block -> OPEN_CURLY declaration_plus CLOSE_CURLY 
-- On HASH reduce production declaration_block -> OPEN_CURLY declaration_plus CLOSE_CURLY 
-- On EOF reduce production declaration_block -> OPEN_CURLY declaration_plus CLOSE_CURLY 
-- On DOUBLE_COLON reduce production declaration_block -> OPEN_CURLY declaration_plus CLOSE_CURLY 
-- On COLON reduce production declaration_block -> OPEN_CURLY declaration_plus CLOSE_CURLY 
-- On ASTERISK reduce production declaration_block -> OPEN_CURLY declaration_plus CLOSE_CURLY 

State 89:
declaration_plus -> declaration_plus declaration . [ IDENT CLOSE_CURLY ]
-- On IDENT reduce production declaration_plus -> declaration_plus declaration 
-- On CLOSE_CURLY reduce production declaration_plus -> declaration_plus declaration 

State 90:
declaration_plus -> declaration . [ IDENT CLOSE_CURLY ]
-- On IDENT reduce production declaration_plus -> declaration 
-- On CLOSE_CURLY reduce production declaration_plus -> declaration 

State 91:
rule -> selector_list declaration_block . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH EOF DOUBLE_COLON COLON ASTERISK ]
-- On SEL_FUNC reduce production rule -> selector_list declaration_block 
-- On PERIOD reduce production rule -> selector_list declaration_block 
-- On OPEN_SQUARE reduce production rule -> selector_list declaration_block 
-- On IDENT reduce production rule -> selector_list declaration_block 
-- On HASH reduce production rule -> selector_list declaration_block 
-- On EOF reduce production rule -> selector_list declaration_block 
-- On DOUBLE_COLON reduce production rule -> selector_list declaration_block 
-- On COLON reduce production rule -> selector_list declaration_block 
-- On ASTERISK reduce production rule -> selector_list declaration_block 

State 92:
selector_separated_nonempty_list_COMMA -> selector . [ OPEN_CURLY COMMA ]
-- On OPEN_CURLY reduce production selector_separated_nonempty_list_COMMA -> selector 
-- On COMMA reduce production selector_separated_nonempty_list_COMMA -> selector 

State 93:
statement -> rule . [ SEL_FUNC PERIOD OPEN_SQUARE IDENT HASH EOF DOUBLE_COLON COLON ASTERISK ]
-- On SEL_FUNC reduce production statement -> rule 
-- On PERIOD reduce production statement -> rule 
-- On OPEN_SQUARE reduce production statement -> rule 
-- On IDENT reduce production statement -> rule 
-- On HASH reduce production statement -> rule 
-- On EOF reduce production statement -> rule 
-- On DOUBLE_COLON reduce production statement -> rule 
-- On COLON reduce production statement -> rule 
-- On ASTERISK reduce production statement -> rule 

