File "parser_js.mly", line 70, characters 52-60:
Warning: the token TComment is unused.
File "parser_js.mly", line 70, characters 34-49:
Warning: the token TCommentNewline is unused.
File "parser_js.mly", line 70, characters 20-33:
Warning: the token TCommentSpace is unused.
File "parser_js.mly", line 143, characters 20-28:
Warning: the token TUnknown is unused.
Grammar has 141 nonterminal symbols, among which 1 start symbols.
Grammar has 102 terminal symbols.
Grammar has 391 productions.
nullable(xhp_html) = false
nullable(xhp_children) = true
nullable(xhp_child) = false
nullable(xhp_attributes) = true
nullable(xhp_attribute_value) = false
nullable(xhp_attribute) = false
nullable(with_statement) = false
nullable(variable_statement) = false
nullable(variable_declaration_no_in) = false
nullable(variable_declaration_list_no_in) = false
nullable(variable_declaration_list) = false
nullable(variable_declaration) = false
nullable(type_variable_list) = false
nullable(type_variable) = false
nullable(type_reference) = false
nullable(type_expression) = false
nullable(type_arguments2) = false
nullable(type_arguments1) = false
nullable(type_arguments) = false
nullable(type_argument_list2) = false
nullable(type_argument_list1) = false
nullable(type_argument_list) = false
nullable(type_) = false
nullable(try_statement) = false
nullable(throw_statement) = false
nullable(switch_statement) = false
nullable(string_literal) = false
nullable(statement_list) = false
nullable(statement) = false
nullable(source_element) = false
nullable(semicolon) = false
nullable(return_statement) = false
nullable(rest_param_type) = false
nullable(regex_literal) = false
nullable(property_name_and_value_list) = false
nullable(property_name_and_value) = false
nullable(property_name) = false
nullable(program) = false
nullable(primary_expression_no_statement) = false
nullable(primary_expression) = false
nullable(pre_in_expression_no_statement) = false
nullable(pre_in_expression) = false
nullable(post_in_expression_no_statement) = false
nullable(post_in_expression_no_in) = false
nullable(post_in_expression) = false
nullable(param_type_list_opt) = true
nullable(param_type_list) = false
nullable(param_type) = false
nullable(optional_param_type_list) = false
nullable(optional_param_type) = false
nullable(object_literal) = false
nullable(numeric_literal) = false
nullable(null_literal) = false
nullable(nominal_type2) = false
nullable(nominal_type1) = false
nullable(nominal_type) = false
nullable(new_expression_no_statement) = false
nullable(new_expression) = false
nullable(mismatched_type_arguments) = false
nullable(method_name) = false
nullable(method_definition) = false
nullable(member_expression_no_statement) = false
nullable(member_expression) = false
nullable(main) = false
nullable(left_hand_side_expression_no_statement) = false
nullable(left_hand_side_expression) = false
nullable(labelled_statement) = false
nullable(iteration_statement) = false
nullable(interface_declaration) = false
nullable(initializeur_opt) = true
nullable(initializeur) = false
nullable(initializer_no_in) = false
nullable(if_statement) = false
nullable(identifier_opt) = true
nullable(identifier) = false
nullable(generics_opt) = true
nullable(generics) = false
nullable(function_expression) = false
nullable(function_declaration) = false
nullable(function_body) = true
nullable(formal_rest_parameter) = false
nullable(formal_parameter_list_opt) = true
nullable(formal_parameter_list) = false
nullable(formal_parameter) = false
nullable(formal_optional_parameter_list) = false
nullable(formal_optional_parameter) = false
nullable(finally) = false
nullable(field_type_list_opt) = true
nullable(field_type_list) = false
nullable(field_type) = false
nullable(field_name) = false
nullable(expression_statement) = false
nullable(expression_opt) = true
nullable(expression_no_statement) = false
nullable(expression_no_in_opt) = true
nullable(expression_no_in) = false
nullable(expression) = false
nullable(encaps_list_opt) = true
nullable(encaps_list) = false
nullable(encaps) = false
nullable(empty_statement) = false
nullable(elison) = false
nullable(element_list_rev) = false
nullable(element_list) = false
nullable(default_clause) = false
nullable(declaration) = false
nullable(continue_statement) = false
nullable(conditional_expression_no_statement) = false
nullable(conditional_expression_no_in) = false
nullable(conditional_expression) = false
nullable(complex_annotation) = false
nullable(class_tail) = false
nullable(class_heritage_opt) = true
nullable(class_heritage) = false
nullable(class_element_list) = false
nullable(class_element) = false
nullable(class_declaration) = false
nullable(class_body_opt) = true
nullable(class_body) = false
nullable(catch) = false
nullable(case_clauses_opt) = true
nullable(case_clauses) = false
nullable(case_clause) = false
nullable(case_block) = false
nullable(call_expression_no_statement) = false
nullable(call_expression) = false
nullable(break_statement) = false
nullable(boolean_literal) = false
nullable(block) = false
nullable(binding_identifier) = false
nullable(assignment_operator) = false
nullable(assignment_expression_no_statement) = false
nullable(assignment_expression_no_in) = false
nullable(assignment_expression) = false
nullable(arrow_function) = false
nullable(arrow_body) = false
nullable(array_literal) = false
nullable(arguments) = false
nullable(argument_list) = false
nullable(annotation_opt) = true
nullable(annotation) = false
first(xhp_html) = T_XHP_OPEN_TAG
first(xhp_children) = T_XHP_TEXT T_XHP_OPEN_TAG T_LCURLY
first(xhp_child) = T_XHP_TEXT T_XHP_OPEN_TAG T_LCURLY
first(xhp_attributes) = T_XHP_ATTR
first(xhp_attribute_value) = T_STRING T_LCURLY
first(xhp_attribute) = T_XHP_ATTR
first(with_statement) = T_WITH
first(variable_statement) = T_VAR T_CONST
first(variable_declaration_no_in) = T_IDENTIFIER
first(variable_declaration_list_no_in) = T_IDENTIFIER
first(variable_declaration_list) = T_IDENTIFIER
first(variable_declaration) = T_IDENTIFIER
first(type_variable_list) = T_IDENTIFIER
first(type_variable) = T_IDENTIFIER
first(type_reference) = T_IDENTIFIER
first(type_expression) = T_XHP_OPEN_TAG T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LBRACKET T_IDENTIFIER T_FALSE T_BACKQUOTE
first(type_arguments2) = T_LESS_THAN
first(type_arguments1) = T_LESS_THAN
first(type_arguments) = T_LESS_THAN
first(type_argument_list2) = T_VOID T_PLING T_LPAREN T_LCURLY T_IDENTIFIER
first(type_argument_list1) = T_VOID T_PLING T_LPAREN T_LCURLY T_IDENTIFIER
first(type_argument_list) = T_VOID T_PLING T_LPAREN T_LCURLY T_IDENTIFIER
first(type_) = T_VOID T_PLING T_LPAREN T_LCURLY T_IDENTIFIER
first(try_statement) = T_TRY
first(throw_statement) = T_THROW
first(switch_statement) = T_SWITCH
first(string_literal) = T_STRING
first(statement_list) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DECR T_CONTINUE T_CONST T_CLASS T_BREAK T_BIT_NOT T_BACKQUOTE
first(statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IF T_IDENTIFIER T_FOR T_FALSE T_DO T_DELETE T_DECR T_CONTINUE T_CONST T_BREAK T_BIT_NOT T_BACKQUOTE
first(source_element) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DECR T_CONTINUE T_CONST T_CLASS T_BREAK T_BIT_NOT T_BACKQUOTE
first(semicolon) = T_VIRTUAL_SEMICOLON T_SEMICOLON
first(return_statement) = T_RETURN
first(rest_param_type) = T_DOTS
first(regex_literal) = T_REGEX
first(property_name_and_value_list) = T_STRING T_NUMBER T_IDENTIFIER T_CLASS
first(property_name_and_value) = T_STRING T_NUMBER T_IDENTIFIER T_CLASS
first(property_name) = T_STRING T_NUMBER T_IDENTIFIER T_CLASS
first(program) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DECR T_CONTINUE T_CONST T_CLASS T_BREAK T_BIT_NOT T_BACKQUOTE
first(primary_expression_no_statement) = T_XHP_OPEN_TAG T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_LPAREN T_LBRACKET T_IDENTIFIER T_FALSE T_BACKQUOTE
first(primary_expression) = T_XHP_OPEN_TAG T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_LPAREN T_LCURLY T_LBRACKET T_IDENTIFIER T_FUNCTION T_FALSE T_BACKQUOTE
first(pre_in_expression_no_statement) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(pre_in_expression) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(post_in_expression_no_statement) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(post_in_expression_no_in) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(post_in_expression) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(param_type_list_opt) = T_IDENTIFIER T_DOTS
first(param_type_list) = T_IDENTIFIER T_DOTS
first(param_type) = T_IDENTIFIER
first(optional_param_type_list) = T_IDENTIFIER T_DOTS
first(optional_param_type) = T_IDENTIFIER
first(object_literal) = T_LCURLY
first(numeric_literal) = T_NUMBER
first(null_literal) = T_NULL
first(nominal_type2) = T_IDENTIFIER
first(nominal_type1) = T_IDENTIFIER
first(nominal_type) = T_IDENTIFIER
first(new_expression_no_statement) = T_XHP_OPEN_TAG T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LBRACKET T_IDENTIFIER T_FALSE T_BACKQUOTE
first(new_expression) = T_XHP_OPEN_TAG T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LCURLY T_LBRACKET T_IDENTIFIER T_FUNCTION T_FALSE T_BACKQUOTE
first(mismatched_type_arguments) = T_LESS_THAN
first(method_name) = T_IDENTIFIER T_DEFAULT
first(method_definition) = T_IDENTIFIER
first(member_expression_no_statement) = T_XHP_OPEN_TAG T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LBRACKET T_IDENTIFIER T_FALSE T_BACKQUOTE
first(member_expression) = T_XHP_OPEN_TAG T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LCURLY T_LBRACKET T_IDENTIFIER T_FUNCTION T_FALSE T_BACKQUOTE
first(main) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DECR T_CONTINUE T_CONST T_CLASS T_BREAK T_BIT_NOT T_BACKQUOTE
first(left_hand_side_expression_no_statement) = T_XHP_OPEN_TAG T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LBRACKET T_IDENTIFIER T_FALSE T_BACKQUOTE
first(left_hand_side_expression) = T_XHP_OPEN_TAG T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LCURLY T_LBRACKET T_IDENTIFIER T_FUNCTION T_FALSE T_BACKQUOTE
first(labelled_statement) = T_IDENTIFIER
first(iteration_statement) = T_WHILE T_FOR T_DO
first(interface_declaration) = T_INTERFACE
first(initializeur_opt) = T_ASSIGN
first(initializeur) = T_ASSIGN
first(initializer_no_in) = T_ASSIGN
first(if_statement) = T_IF
first(identifier_opt) = T_IDENTIFIER
first(identifier) = T_IDENTIFIER
first(generics_opt) = T_LESS_THAN
first(generics) = T_LESS_THAN
first(function_expression) = T_FUNCTION
first(function_declaration) = T_FUNCTION
first(function_body) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DECR T_CONTINUE T_CONST T_CLASS T_BREAK T_BIT_NOT T_BACKQUOTE
first(formal_rest_parameter) = T_DOTS
first(formal_parameter_list_opt) = T_IDENTIFIER T_DOTS
first(formal_parameter_list) = T_IDENTIFIER T_DOTS
first(formal_parameter) = T_IDENTIFIER
first(formal_optional_parameter_list) = T_IDENTIFIER T_DOTS
first(formal_optional_parameter) = T_IDENTIFIER
first(finally) = T_FINALLY
first(field_type_list_opt) = T_IDENTIFIER
first(field_type_list) = T_IDENTIFIER
first(field_type) = T_IDENTIFIER
first(field_name) = T_IDENTIFIER T_CLASS
first(expression_statement) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(expression_opt) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(expression_no_statement) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(expression_no_in_opt) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(expression_no_in) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(expression) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(encaps_list_opt) = T_ENCAPSED_STRING T_DOLLARCURLY
first(encaps_list) = T_ENCAPSED_STRING T_DOLLARCURLY
first(encaps) = T_ENCAPSED_STRING T_DOLLARCURLY
first(empty_statement) = T_VIRTUAL_SEMICOLON T_SEMICOLON
first(elison) = T_COMMA
first(element_list_rev) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_COMMA T_BIT_NOT T_BACKQUOTE
first(element_list) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_COMMA T_BIT_NOT T_BACKQUOTE
first(default_clause) = T_DEFAULT
first(declaration) = T_INTERFACE T_FUNCTION T_CLASS
first(continue_statement) = T_CONTINUE
first(conditional_expression_no_statement) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(conditional_expression_no_in) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(conditional_expression) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(complex_annotation) = T_LPAREN T_LESS_THAN T_COLON
first(class_tail) = T_LCURLY T_EXTENDS
first(class_heritage_opt) = T_EXTENDS
first(class_heritage) = T_EXTENDS
first(class_element_list) = T_VIRTUAL_SEMICOLON T_STATIC T_SEMICOLON T_IDENTIFIER
first(class_element) = T_VIRTUAL_SEMICOLON T_STATIC T_SEMICOLON T_IDENTIFIER
first(class_declaration) = T_CLASS
first(class_body_opt) = T_VIRTUAL_SEMICOLON T_STATIC T_SEMICOLON T_IDENTIFIER
first(class_body) = T_VIRTUAL_SEMICOLON T_STATIC T_SEMICOLON T_IDENTIFIER
first(catch) = T_CATCH
first(case_clauses_opt) = T_CASE
first(case_clauses) = T_CASE
first(case_clause) = T_CASE
first(case_block) = T_LCURLY
first(call_expression_no_statement) = T_XHP_OPEN_TAG T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LBRACKET T_IDENTIFIER T_FALSE T_BACKQUOTE
first(call_expression) = T_XHP_OPEN_TAG T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LCURLY T_LBRACKET T_IDENTIFIER T_FUNCTION T_FALSE T_BACKQUOTE
first(break_statement) = T_BREAK
first(boolean_literal) = T_TRUE T_FALSE
first(block) = T_LCURLY
first(binding_identifier) = T_IDENTIFIER
first(assignment_operator) = T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_PLUS_ASSIGN T_MULT_ASSIGN T_MOD_ASSIGN T_MINUS_ASSIGN T_LSHIFT_ASSIGN T_DIV_ASSIGN T_BIT_XOR_ASSIGN T_BIT_OR_ASSIGN T_BIT_AND_ASSIGN T_ASSIGN
first(assignment_expression_no_statement) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(assignment_expression_no_in) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(assignment_expression) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(arrow_function) = T_LPAREN T_IDENTIFIER
first(arrow_body) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(array_literal) = T_LBRACKET
first(arguments) = T_LPAREN
first(argument_list) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DOTS T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
first(annotation_opt) = T_COLON
first(annotation) = T_COLON
minimal(xhp_html) = (* 2 *) T_XHP_OPEN_TAG T_XHP_SLASH_GT
minimal(xhp_children) = (* 0 *)
minimal(xhp_child) = (* 1 *) T_XHP_TEXT
minimal(xhp_attributes) = (* 0 *)
minimal(xhp_attribute_value) = (* 1 *) T_STRING
minimal(xhp_attribute) = (* 3 *) T_XHP_ATTR T_ASSIGN T_STRING
minimal(with_statement) = (* 5 *) T_WITH T_LPAREN T_THIS T_RPAREN T_SEMICOLON
minimal(variable_statement) = (* 3 *) T_VAR T_IDENTIFIER T_SEMICOLON
minimal(variable_declaration_no_in) = (* 1 *) T_IDENTIFIER
minimal(variable_declaration_list_no_in) = (* 1 *) T_IDENTIFIER
minimal(variable_declaration_list) = (* 1 *) T_IDENTIFIER
minimal(variable_declaration) = (* 1 *) T_IDENTIFIER
minimal(type_variable_list) = (* 1 *) T_IDENTIFIER
minimal(type_variable) = (* 1 *) T_IDENTIFIER
minimal(type_reference) = (* 1 *) T_IDENTIFIER
minimal(type_expression) = (* 1 *) T_THIS
minimal(type_arguments2) = (* 4 *) T_LESS_THAN T_IDENTIFIER T_LESS_THAN T_VOID
minimal(type_arguments1) = (* 2 *) T_LESS_THAN T_VOID
minimal(type_arguments) = (* 3 *) T_LESS_THAN T_VOID T_GREATER_THAN
minimal(type_argument_list2) = (* 5 *) T_IDENTIFIER T_LESS_THAN T_IDENTIFIER T_LESS_THAN T_VOID
minimal(type_argument_list1) = (* 3 *) T_IDENTIFIER T_LESS_THAN T_VOID
minimal(type_argument_list) = (* 1 *) T_VOID
minimal(type_) = (* 1 *) T_VOID
minimal(try_statement) = (* 6 *) T_TRY T_LCURLY T_RCURLY T_FINALLY T_LCURLY T_RCURLY
minimal(throw_statement) = (* 3 *) T_THROW T_THIS T_SEMICOLON
minimal(switch_statement) = (* 6 *) T_SWITCH T_LPAREN T_THIS T_RPAREN T_LCURLY T_RCURLY
minimal(string_literal) = (* 1 *) T_STRING
minimal(statement_list) = (* 1 *) T_SEMICOLON
minimal(statement) = (* 1 *) T_SEMICOLON
minimal(source_element) = (* 1 *) T_SEMICOLON
minimal(semicolon) = (* 1 *) T_SEMICOLON
minimal(return_statement) = (* 2 *) T_RETURN T_SEMICOLON
minimal(rest_param_type) = (* 4 *) T_DOTS T_IDENTIFIER T_COLON T_VOID
minimal(regex_literal) = (* 1 *) T_REGEX
minimal(property_name_and_value_list) = (* 3 *) T_IDENTIFIER T_COLON T_THIS
minimal(property_name_and_value) = (* 3 *) T_IDENTIFIER T_COLON T_THIS
minimal(property_name) = (* 1 *) T_IDENTIFIER
minimal(program) = (* 1 *) T_SEMICOLON
minimal(primary_expression_no_statement) = (* 1 *) T_THIS
minimal(primary_expression) = (* 1 *) T_THIS
minimal(pre_in_expression_no_statement) = (* 1 *) T_THIS
minimal(pre_in_expression) = (* 1 *) T_THIS
minimal(post_in_expression_no_statement) = (* 1 *) T_THIS
minimal(post_in_expression_no_in) = (* 1 *) T_THIS
minimal(post_in_expression) = (* 1 *) T_THIS
minimal(param_type_list_opt) = (* 0 *)
minimal(param_type_list) = (* 3 *) T_IDENTIFIER T_COLON T_VOID
minimal(param_type) = (* 3 *) T_IDENTIFIER T_COLON T_VOID
minimal(optional_param_type_list) = (* 4 *) T_IDENTIFIER T_PLING T_COLON T_VOID
minimal(optional_param_type) = (* 4 *) T_IDENTIFIER T_PLING T_COLON T_VOID
minimal(object_literal) = (* 2 *) T_LCURLY T_RCURLY
minimal(numeric_literal) = (* 1 *) T_NUMBER
minimal(null_literal) = (* 1 *) T_NULL
minimal(nominal_type2) = (* 5 *) T_IDENTIFIER T_LESS_THAN T_IDENTIFIER T_LESS_THAN T_VOID
minimal(nominal_type1) = (* 3 *) T_IDENTIFIER T_LESS_THAN T_VOID
minimal(nominal_type) = (* 1 *) T_IDENTIFIER
minimal(new_expression_no_statement) = (* 1 *) T_THIS
minimal(new_expression) = (* 1 *) T_THIS
minimal(mismatched_type_arguments) = (* 5 *) T_LESS_THAN T_IDENTIFIER T_LESS_THAN T_VOID T_RSHIFT
minimal(method_name) = (* 1 *) T_IDENTIFIER
minimal(method_definition) = (* 5 *) T_IDENTIFIER T_LPAREN T_RPAREN T_LCURLY T_RCURLY
minimal(member_expression_no_statement) = (* 1 *) T_THIS
minimal(member_expression) = (* 1 *) T_THIS
minimal(main) = (* 2 *) T_SEMICOLON EOF
minimal(left_hand_side_expression_no_statement) = (* 1 *) T_THIS
minimal(left_hand_side_expression) = (* 1 *) T_THIS
minimal(labelled_statement) = (* 3 *) T_IDENTIFIER T_COLON T_SEMICOLON
minimal(iteration_statement) = (* 5 *) T_WHILE T_LPAREN T_THIS T_RPAREN T_SEMICOLON
minimal(interface_declaration) = (* 3 *) T_INTERFACE T_IDENTIFIER T_VOID
minimal(initializeur_opt) = (* 0 *)
minimal(initializeur) = (* 2 *) T_ASSIGN T_THIS
minimal(initializer_no_in) = (* 2 *) T_ASSIGN T_THIS
minimal(if_statement) = (* 5 *) T_IF T_LPAREN T_THIS T_RPAREN T_SEMICOLON
minimal(identifier_opt) = (* 0 *)
minimal(identifier) = (* 1 *) T_IDENTIFIER
minimal(generics_opt) = (* 0 *)
minimal(generics) = (* 3 *) T_LESS_THAN T_IDENTIFIER T_GREATER_THAN
minimal(function_expression) = (* 5 *) T_FUNCTION T_LPAREN T_RPAREN T_LCURLY T_RCURLY
minimal(function_declaration) = (* 6 *) T_FUNCTION T_IDENTIFIER T_LPAREN T_RPAREN T_LCURLY T_RCURLY
minimal(function_body) = (* 0 *)
minimal(formal_rest_parameter) = (* 2 *) T_DOTS T_IDENTIFIER
minimal(formal_parameter_list_opt) = (* 0 *)
minimal(formal_parameter_list) = (* 1 *) T_IDENTIFIER
minimal(formal_parameter) = (* 1 *) T_IDENTIFIER
minimal(formal_optional_parameter_list) = (* 2 *) T_IDENTIFIER T_PLING
minimal(formal_optional_parameter) = (* 2 *) T_IDENTIFIER T_PLING
minimal(finally) = (* 3 *) T_FINALLY T_LCURLY T_RCURLY
minimal(field_type_list_opt) = (* 0 *)
minimal(field_type_list) = (* 4 *) T_IDENTIFIER T_COLON T_VOID T_SEMICOLON
minimal(field_type) = (* 4 *) T_IDENTIFIER T_COLON T_VOID T_SEMICOLON
minimal(field_name) = (* 1 *) T_IDENTIFIER
minimal(expression_statement) = (* 2 *) T_THIS T_SEMICOLON
minimal(expression_opt) = (* 0 *)
minimal(expression_no_statement) = (* 1 *) T_THIS
minimal(expression_no_in_opt) = (* 0 *)
minimal(expression_no_in) = (* 1 *) T_THIS
minimal(expression) = (* 1 *) T_THIS
minimal(encaps_list_opt) = (* 0 *)
minimal(encaps_list) = (* 1 *) T_ENCAPSED_STRING
minimal(encaps) = (* 1 *) T_ENCAPSED_STRING
minimal(empty_statement) = (* 1 *) T_SEMICOLON
minimal(elison) = (* 1 *) T_COMMA
minimal(element_list_rev) = (* 1 *) T_THIS
minimal(element_list) = (* 1 *) T_THIS
minimal(default_clause) = (* 2 *) T_DEFAULT T_COLON
minimal(declaration) = (* 3 *) T_INTERFACE T_IDENTIFIER T_VOID
minimal(continue_statement) = (* 2 *) T_CONTINUE T_SEMICOLON
minimal(conditional_expression_no_statement) = (* 1 *) T_THIS
minimal(conditional_expression_no_in) = (* 1 *) T_THIS
minimal(conditional_expression) = (* 1 *) T_THIS
minimal(complex_annotation) = (* 2 *) T_COLON T_VOID
minimal(class_tail) = (* 2 *) T_LCURLY T_RCURLY
minimal(class_heritage_opt) = (* 0 *)
minimal(class_heritage) = (* 2 *) T_EXTENDS T_THIS
minimal(class_element_list) = (* 1 *) T_SEMICOLON
minimal(class_element) = (* 1 *) T_SEMICOLON
minimal(class_declaration) = (* 4 *) T_CLASS T_IDENTIFIER T_LCURLY T_RCURLY
minimal(class_body_opt) = (* 0 *)
minimal(class_body) = (* 1 *) T_SEMICOLON
minimal(catch) = (* 6 *) T_CATCH T_LPAREN T_IDENTIFIER T_RPAREN T_LCURLY T_RCURLY
minimal(case_clauses_opt) = (* 0 *)
minimal(case_clauses) = (* 3 *) T_CASE T_THIS T_COLON
minimal(case_clause) = (* 3 *) T_CASE T_THIS T_COLON
minimal(case_block) = (* 2 *) T_LCURLY T_RCURLY
minimal(call_expression_no_statement) = (* 3 *) T_THIS T_LPAREN T_RPAREN
minimal(call_expression) = (* 3 *) T_THIS T_LPAREN T_RPAREN
minimal(break_statement) = (* 2 *) T_BREAK T_SEMICOLON
minimal(boolean_literal) = (* 1 *) T_TRUE
minimal(block) = (* 2 *) T_LCURLY T_RCURLY
minimal(binding_identifier) = (* 1 *) T_IDENTIFIER
minimal(assignment_operator) = (* 1 *) T_ASSIGN
minimal(assignment_expression_no_statement) = (* 1 *) T_THIS
minimal(assignment_expression_no_in) = (* 1 *) T_THIS
minimal(assignment_expression) = (* 1 *) T_THIS
minimal(arrow_function) = (* 3 *) T_IDENTIFIER T_ARROW T_THIS
minimal(arrow_body) = (* 1 *) T_THIS
minimal(array_literal) = (* 2 *) T_LBRACKET T_RBRACKET
minimal(arguments) = (* 2 *) T_LPAREN T_RPAREN
minimal(argument_list) = (* 1 *) T_THIS
minimal(annotation_opt) = (* 0 *)
minimal(annotation) = (* 2 *) T_COLON T_VOID
follow(xhp_html) = T_XHP_TEXT T_XHP_OPEN_TAG T_XHP_CLOSE_TAG T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(xhp_children) = T_XHP_TEXT T_XHP_OPEN_TAG T_XHP_CLOSE_TAG T_LCURLY
follow(xhp_child) = T_XHP_TEXT T_XHP_OPEN_TAG T_XHP_CLOSE_TAG T_LCURLY
follow(xhp_attributes) = T_XHP_SLASH_GT T_XHP_GT T_XHP_ATTR
follow(xhp_attribute_value) = T_XHP_SLASH_GT T_XHP_GT T_XHP_ATTR
follow(xhp_attribute) = T_XHP_SLASH_GT T_XHP_GT T_XHP_ATTR
follow(with_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(variable_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(variable_declaration_no_in) = T_SEMICOLON T_IN T_COMMA
follow(variable_declaration_list_no_in) = T_SEMICOLON T_IN T_COMMA
follow(variable_declaration_list) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_COMMA
follow(variable_declaration) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_COMMA
follow(type_variable_list) = T_GREATER_THAN T_COMMA
follow(type_variable) = T_GREATER_THAN T_COMMA
follow(type_reference) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LESS_THAN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_COMMA T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE T_ASSIGN T_ARROW EOF
follow(type_expression) = T_LCURLY
follow(type_arguments2) = T_RSHIFT3
follow(type_arguments1) = T_RSHIFT3 T_RSHIFT
follow(type_arguments) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_COMMA T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE T_ASSIGN T_ARROW EOF
follow(type_argument_list2) = T_RSHIFT3
follow(type_argument_list1) = T_RSHIFT3 T_RSHIFT
follow(type_argument_list) = T_RSHIFT3 T_RSHIFT T_GREATER_THAN T_COMMA
follow(type_) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_COMMA T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE T_ASSIGN T_ARROW EOF
follow(try_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(throw_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(switch_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(string_literal) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(statement_list) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(source_element) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(semicolon) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STATIC T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(return_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(rest_param_type) = T_RPAREN
follow(regex_literal) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(property_name_and_value_list) = T_VIRTUAL_SEMICOLON T_COMMA
follow(property_name_and_value) = T_VIRTUAL_SEMICOLON T_COMMA
follow(property_name) = T_COLON
follow(program) = EOF
follow(primary_expression_no_statement) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(primary_expression) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(pre_in_expression_no_statement) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS T_PLING T_OR T_NOT_EQUAL T_MULT T_MOD T_MINUS T_LSHIFT T_LESS_THAN_EQUAL T_LESS_THAN T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR T_BIT_OR T_BIT_AND T_AND
follow(pre_in_expression) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS T_PLING T_OR T_NOT_EQUAL T_MULT T_MOD T_MINUS T_LSHIFT T_LESS_THAN_EQUAL T_LESS_THAN T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR T_BIT_OR T_BIT_AND T_AND
follow(post_in_expression_no_statement) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RPAREN T_RBRACKET T_PLING T_OR T_NOT_EQUAL T_LESS_THAN_EQUAL T_LESS_THAN T_INSTANCEOF T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_COMMA T_COLON T_BIT_XOR T_BIT_OR T_BIT_AND T_AND
follow(post_in_expression_no_in) = T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_PLING T_OR T_NOT_EQUAL T_LESS_THAN_EQUAL T_LESS_THAN T_INSTANCEOF T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_COMMA T_COLON T_BIT_XOR T_BIT_OR T_BIT_AND T_AND
follow(post_in_expression) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RPAREN T_RBRACKET T_PLING T_OR T_NOT_EQUAL T_LESS_THAN_EQUAL T_LESS_THAN T_INSTANCEOF T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_COMMA T_COLON T_BIT_XOR T_BIT_OR T_BIT_AND T_AND
follow(param_type_list_opt) = T_RPAREN
follow(param_type_list) = T_RPAREN
follow(param_type) = T_RPAREN T_COMMA
follow(optional_param_type_list) = T_RPAREN
follow(optional_param_type) = T_RPAREN T_COMMA
follow(object_literal) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(numeric_literal) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(null_literal) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(nominal_type2) = T_RSHIFT3
follow(nominal_type1) = T_RSHIFT3 T_RSHIFT
follow(nominal_type) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_COMMA T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE T_ASSIGN T_ARROW EOF
follow(new_expression_no_statement) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(new_expression) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(mismatched_type_arguments) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_COMMA T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE T_ASSIGN T_ARROW EOF
follow(method_name) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(method_definition) = T_VIRTUAL_SEMICOLON T_STATIC T_SEMICOLON T_RCURLY T_IDENTIFIER T_COMMA
follow(member_expression_no_statement) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(member_expression) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(main) = #
follow(left_hand_side_expression_no_statement) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(left_hand_side_expression) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LESS_THAN_EQUAL T_LESS_THAN T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(labelled_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(iteration_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(interface_declaration) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(initializeur_opt) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_COMMA
follow(initializeur) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_RPAREN T_COMMA
follow(initializer_no_in) = T_SEMICOLON T_IN T_COMMA
follow(if_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(identifier_opt) = T_LPAREN T_LESS_THAN
follow(identifier) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INTERFACE T_INSTANCEOF T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EXTENDS T_EQUAL T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_COMMA T_COLON T_CLASS T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_BACKQUOTE T_ASSIGN T_ARROW T_AND EOF
follow(generics_opt) = T_VOID T_PLING T_LPAREN T_LCURLY T_IDENTIFIER T_EXTENDS
follow(generics) = T_VOID T_PLING T_LPAREN T_LCURLY T_IDENTIFIER T_EXTENDS
follow(function_expression) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(function_declaration) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(function_body) = T_RCURLY
follow(formal_rest_parameter) = T_RPAREN
follow(formal_parameter_list_opt) = T_RPAREN
follow(formal_parameter_list) = T_RPAREN
follow(formal_parameter) = T_RPAREN T_COMMA
follow(formal_optional_parameter_list) = T_RPAREN
follow(formal_optional_parameter) = T_RPAREN T_COMMA
follow(finally) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(field_type_list_opt) = T_RCURLY
follow(field_type_list) = T_RCURLY T_IDENTIFIER
follow(field_type) = T_RCURLY T_IDENTIFIER
follow(field_name) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(expression_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(expression_opt) = T_SEMICOLON T_RPAREN
follow(expression_no_statement) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_COMMA
follow(expression_no_in_opt) = T_SEMICOLON
follow(expression_no_in) = T_SEMICOLON T_COMMA
follow(expression) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_RPAREN T_RBRACKET T_COMMA T_COLON
follow(encaps_list_opt) = T_BACKQUOTE
follow(encaps_list) = T_ENCAPSED_STRING T_DOLLARCURLY T_BACKQUOTE
follow(encaps) = T_ENCAPSED_STRING T_DOLLARCURLY T_BACKQUOTE
follow(empty_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(elison) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_RBRACKET T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_COMMA T_BIT_NOT T_BACKQUOTE
follow(element_list_rev) = T_RBRACKET T_COMMA
follow(element_list) = T_RBRACKET T_COMMA
follow(default_clause) = T_RCURLY T_CASE
follow(declaration) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(continue_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(conditional_expression_no_statement) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_RPAREN T_RBRACKET T_COMMA T_COLON
follow(conditional_expression_no_in) = T_SEMICOLON T_IN T_COMMA T_COLON
follow(conditional_expression) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_RPAREN T_RBRACKET T_COMMA T_COLON
follow(complex_annotation) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_RPAREN T_COMMA
follow(class_tail) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(class_heritage_opt) = T_LCURLY
follow(class_heritage) = T_LCURLY
follow(class_element_list) = T_VIRTUAL_SEMICOLON T_STATIC T_SEMICOLON T_RCURLY T_IDENTIFIER
follow(class_element) = T_VIRTUAL_SEMICOLON T_STATIC T_SEMICOLON T_RCURLY T_IDENTIFIER
follow(class_declaration) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(class_body_opt) = T_RCURLY
follow(class_body) = T_RCURLY
follow(catch) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FINALLY T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(case_clauses_opt) = T_RCURLY T_DEFAULT
follow(case_clauses) = T_RCURLY T_DEFAULT T_CASE
follow(case_clause) = T_RCURLY T_DEFAULT T_CASE
follow(case_block) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(call_expression_no_statement) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(call_expression) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(break_statement) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_CLASS T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(boolean_literal) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(block) = T_XHP_OPEN_TAG T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INTERFACE T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FINALLY T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR T_CONTINUE T_CONST T_COMMA T_COLON T_CLASS T_CATCH T_CASE T_BREAK T_BIT_NOT T_BACKQUOTE EOF
follow(binding_identifier) = T_VOID T_PLING T_LPAREN T_LESS_THAN T_LCURLY T_IDENTIFIER T_EXTENDS
follow(assignment_operator) = T_XHP_OPEN_TAG T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR T_BIT_NOT T_BACKQUOTE
follow(assignment_expression_no_statement) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_RPAREN T_RBRACKET T_COMMA T_COLON
follow(assignment_expression_no_in) = T_SEMICOLON T_IN T_COMMA T_COLON
follow(assignment_expression) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_RPAREN T_RBRACKET T_COMMA T_COLON
follow(arrow_function) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_RPAREN T_RBRACKET T_COMMA T_COLON
follow(arrow_body) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_RPAREN T_RBRACKET T_COMMA T_COLON
follow(array_literal) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(arguments) = T_VIRTUAL_SEMICOLON T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NOT_EQUAL T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_DIV_ASSIGN T_DIV T_DECR T_COMMA T_COLON T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND
follow(argument_list) = T_RPAREN
follow(annotation_opt) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_LCURLY T_COMMA T_ASSIGN T_ARROW
follow(annotation) = T_VIRTUAL_SEMICOLON T_SEMICOLON T_RPAREN T_LCURLY T_COMMA T_ASSIGN T_ARROW
Built an LR(0) automaton with 714 states.
The grammar is not SLR(1) -- 86 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 714 states.
1001 shift/reduce conflicts were silently solved.
File "parser_js.mly", line 152, characters 0-9:
Warning: the precedence level assigned to LOW_PRIORITY_RULE is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_ASSIGN is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_BIT_AND_ASSIGN is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_BIT_OR_ASSIGN is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_BIT_XOR_ASSIGN is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_DIV_ASSIGN is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_LSHIFT_ASSIGN is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_MINUS_ASSIGN is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_MOD_ASSIGN is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_MULT_ASSIGN is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_PLUS_ASSIGN is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_RSHIFT3_ASSIGN is never useful.
File "parser_js.mly", line 160, characters 0-6:
Warning: the precedence level assigned to T_RSHIFT_ASSIGN is never useful.
File "parser_js.mly", line 158, characters 0-9:
Warning: the precedence level assigned to p_POSTFIX is never useful.
File "parser_js.mly", line 868, characters 44-61:
Warning: this %prec declaration is never useful.
File "parser_js.mly", line 637, characters 34-43:
Warning: this %prec declaration is never useful.
File "parser_js.mly", line 638, characters 34-43:
Warning: this %prec declaration is never useful.
Warning: 2 states have shift/reduce conflicts.
Warning: 2 shift/reduce conflicts were arbitrarily resolved.
276 out of 714 states have a default reduction.
288 out of 714 states are represented.
0 out of 246 symbols keep track of their start position.
0 out of 246 symbols keep track of their end position.
192 out of 392 productions exploit shiftreduce optimization.
0 out of 714 states can peek at an error.
1966 functions before inlining, 247 functions after inlining.
