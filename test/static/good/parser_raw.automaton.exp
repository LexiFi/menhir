State 0:
## Known stack suffix:
##
## LR(1) items:
implementation' -> . implementation [ # ]
## Transitions:
-- On WHILE shift to state 1
-- On VAL shift to state 60
-- On UIDENT shift to state 94
-- On TYPE shift to state 154
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 327
-- On SEMISEMI shift to state 338
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OPEN shift to state 339
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 347
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKETATATAT shift to state 971
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INCLUDE shift to state 973
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 987
-- On CLASS shift to state 1203
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On value_description shift to state 1320
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On type_declarations shift to state 1321
-- On type_declaration shift to state 1155
-- On toplevel_directive shift to state 1322
-- On subtractive shift to state 614
-- On structure_tail shift to state 1323
-- On structure_item shift to state 1324
-- On structure shift to state 1489
-- On str_type_extension shift to state 1326
-- On str_include_statement shift to state 1327
-- On str_exception_declaration shift to state 1328
-- On simple_expr shift to state 615
-- On sig_exception_declaration shift to state 1329
-- On seq_expr shift to state 1358
-- On rec_module_bindings shift to state 1330
-- On rec_module_binding shift to state 1337
-- On primitive_declaration shift to state 1338
-- On open_statement shift to state 1339
-- On name_tag shift to state 635
-- On module_type_declaration shift to state 1340
-- On module_binding shift to state 1341
-- On mod_longident shift to state 493
-- On let_bindings shift to state 1361
-- On let_binding shift to state 640
-- On label shift to state 641
-- On item_extension shift to state 1343
-- On implementation shift to state 1491
-- On floating_attribute shift to state 1345
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On class_type_declarations shift to state 1346
-- On class_type_declaration shift to state 1188
-- On class_declarations shift to state 1347
-- On class_declaration shift to state 1356
-- On additive shift to state 653
## Reductions:
-- On EOF
--   reduce production structure_tail ->

State 1:
## Known stack suffix:
## WHILE
## LR(1) items:
expr -> WHILE . ext_attributes seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 1484
-- On attribute shift to state 295
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production ext_attributes ->

State 2:
## Known stack suffix:
## PERCENT
## LR(1) items:
ext_attributes -> PERCENT . attr_id attributes [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TRY TRUE TILDE STRUCT STRING SIG SHARP REC QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXCEPTION END CONSTRAINT CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
-- On WITH shift to state 3
-- On WHILE shift to state 4
-- On WHEN shift to state 5
-- On VIRTUAL shift to state 6
-- On VAL shift to state 7
-- On UIDENT shift to state 8
-- On TYPE shift to state 9
-- On TRY shift to state 10
-- On TRUE shift to state 11
-- On TO shift to state 12
-- On THEN shift to state 13
-- On STRUCT shift to state 14
-- On SIG shift to state 15
-- On REC shift to state 16
-- On PRIVATE shift to state 17
-- On OR shift to state 18
-- On OPEN shift to state 19
-- On OF shift to state 20
-- On OBJECT shift to state 21
-- On NONREC shift to state 22
-- On NEW shift to state 23
-- On MUTABLE shift to state 24
-- On MODULE shift to state 25
-- On METHOD shift to state 26
-- On MATCH shift to state 27
-- On LIDENT shift to state 28
-- On LET shift to state 29
-- On LAZY shift to state 30
-- On INITIALIZER shift to state 31
-- On INHERIT shift to state 32
-- On INCLUDE shift to state 33
-- On IN shift to state 34
-- On IF shift to state 35
-- On FUNCTOR shift to state 36
-- On FUNCTION shift to state 37
-- On FUN shift to state 38
-- On FOR shift to state 39
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 41
-- On EXCEPTION shift to state 42
-- On END shift to state 43
-- On ELSE shift to state 44
-- On DOWNTO shift to state 45
-- On DONE shift to state 46
-- On DO shift to state 47
-- On CONSTRAINT shift to state 48
-- On CLASS shift to state 49
-- On BEGIN shift to state 50
-- On ASSERT shift to state 51
-- On AS shift to state 52
-- On AND shift to state 53
-- On single_attr_id shift to state 54
-- On attr_id shift to state 57
## Reductions:

State 3:
## Known stack suffix:
## WITH
## LR(1) items:
single_attr_id -> WITH . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> WITH

State 4:
## Known stack suffix:
## WHILE
## LR(1) items:
single_attr_id -> WHILE . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> WHILE

State 5:
## Known stack suffix:
## WHEN
## LR(1) items:
single_attr_id -> WHEN . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> WHEN

State 6:
## Known stack suffix:
## VIRTUAL
## LR(1) items:
single_attr_id -> VIRTUAL . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> VIRTUAL

State 7:
## Known stack suffix:
## VAL
## LR(1) items:
single_attr_id -> VAL . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> VAL

State 8:
## Known stack suffix:
## UIDENT
## LR(1) items:
single_attr_id -> UIDENT . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> UIDENT

State 9:
## Known stack suffix:
## TYPE
## LR(1) items:
single_attr_id -> TYPE . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> TYPE

State 10:
## Known stack suffix:
## TRY
## LR(1) items:
single_attr_id -> TRY . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> TRY

State 11:
## Known stack suffix:
## TRUE
## LR(1) items:
single_attr_id -> TRUE . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> TRUE

State 12:
## Known stack suffix:
## TO
## LR(1) items:
single_attr_id -> TO . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> TO

State 13:
## Known stack suffix:
## THEN
## LR(1) items:
single_attr_id -> THEN . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> THEN

State 14:
## Known stack suffix:
## STRUCT
## LR(1) items:
single_attr_id -> STRUCT . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> STRUCT

State 15:
## Known stack suffix:
## SIG
## LR(1) items:
single_attr_id -> SIG . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> SIG

State 16:
## Known stack suffix:
## REC
## LR(1) items:
single_attr_id -> REC . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> REC

State 17:
## Known stack suffix:
## PRIVATE
## LR(1) items:
single_attr_id -> PRIVATE . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> PRIVATE

State 18:
## Known stack suffix:
## OR
## LR(1) items:
single_attr_id -> OR . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> OR

State 19:
## Known stack suffix:
## OPEN
## LR(1) items:
single_attr_id -> OPEN . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> OPEN

State 20:
## Known stack suffix:
## OF
## LR(1) items:
single_attr_id -> OF . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> OF

State 21:
## Known stack suffix:
## OBJECT
## LR(1) items:
single_attr_id -> OBJECT . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> OBJECT

State 22:
## Known stack suffix:
## NONREC
## LR(1) items:
single_attr_id -> NONREC . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> NONREC

State 23:
## Known stack suffix:
## NEW
## LR(1) items:
single_attr_id -> NEW . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> NEW

State 24:
## Known stack suffix:
## MUTABLE
## LR(1) items:
single_attr_id -> MUTABLE . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> MUTABLE

State 25:
## Known stack suffix:
## MODULE
## LR(1) items:
single_attr_id -> MODULE . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> MODULE

State 26:
## Known stack suffix:
## METHOD
## LR(1) items:
single_attr_id -> METHOD . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> METHOD

State 27:
## Known stack suffix:
## MATCH
## LR(1) items:
single_attr_id -> MATCH . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> MATCH

State 28:
## Known stack suffix:
## LIDENT
## LR(1) items:
single_attr_id -> LIDENT . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> LIDENT

State 29:
## Known stack suffix:
## LET
## LR(1) items:
single_attr_id -> LET . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> LET

State 30:
## Known stack suffix:
## LAZY
## LR(1) items:
single_attr_id -> LAZY . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> LAZY

State 31:
## Known stack suffix:
## INITIALIZER
## LR(1) items:
single_attr_id -> INITIALIZER . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> INITIALIZER

State 32:
## Known stack suffix:
## INHERIT
## LR(1) items:
single_attr_id -> INHERIT . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> INHERIT

State 33:
## Known stack suffix:
## INCLUDE
## LR(1) items:
single_attr_id -> INCLUDE . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> INCLUDE

State 34:
## Known stack suffix:
## IN
## LR(1) items:
single_attr_id -> IN . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> IN

State 35:
## Known stack suffix:
## IF
## LR(1) items:
single_attr_id -> IF . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> IF

State 36:
## Known stack suffix:
## FUNCTOR
## LR(1) items:
single_attr_id -> FUNCTOR . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> FUNCTOR

State 37:
## Known stack suffix:
## FUNCTION
## LR(1) items:
single_attr_id -> FUNCTION . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> FUNCTION

State 38:
## Known stack suffix:
## FUN
## LR(1) items:
single_attr_id -> FUN . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> FUN

State 39:
## Known stack suffix:
## FOR
## LR(1) items:
single_attr_id -> FOR . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> FOR

State 40:
## Known stack suffix:
## FALSE
## LR(1) items:
single_attr_id -> FALSE . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> FALSE

State 41:
## Known stack suffix:
## EXTERNAL
## LR(1) items:
single_attr_id -> EXTERNAL . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> EXTERNAL

State 42:
## Known stack suffix:
## EXCEPTION
## LR(1) items:
single_attr_id -> EXCEPTION . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> EXCEPTION

State 43:
## Known stack suffix:
## END
## LR(1) items:
single_attr_id -> END . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> END

State 44:
## Known stack suffix:
## ELSE
## LR(1) items:
single_attr_id -> ELSE . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> ELSE

State 45:
## Known stack suffix:
## DOWNTO
## LR(1) items:
single_attr_id -> DOWNTO . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> DOWNTO

State 46:
## Known stack suffix:
## DONE
## LR(1) items:
single_attr_id -> DONE . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> DONE

State 47:
## Known stack suffix:
## DO
## LR(1) items:
single_attr_id -> DO . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> DO

State 48:
## Known stack suffix:
## CONSTRAINT
## LR(1) items:
single_attr_id -> CONSTRAINT . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> CONSTRAINT

State 49:
## Known stack suffix:
## CLASS
## LR(1) items:
single_attr_id -> CLASS . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> CLASS

State 50:
## Known stack suffix:
## BEGIN
## LR(1) items:
single_attr_id -> BEGIN . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> BEGIN

State 51:
## Known stack suffix:
## ASSERT
## LR(1) items:
single_attr_id -> ASSERT . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> ASSERT

State 52:
## Known stack suffix:
## AS
## LR(1) items:
single_attr_id -> AS . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> AS

State 53:
## Known stack suffix:
## AND
## LR(1) items:
single_attr_id -> AND . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END DOT CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production single_attr_id -> AND

State 54:
## Known stack suffix:
## single_attr_id
## LR(1) items:
attr_id -> single_attr_id . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
attr_id -> single_attr_id . DOT attr_id [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
-- On DOT shift to state 55
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production attr_id -> single_attr_id

State 55:
## Known stack suffix:
## single_attr_id DOT
## LR(1) items:
attr_id -> single_attr_id DOT . attr_id [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
-- On WITH shift to state 3
-- On WHILE shift to state 4
-- On WHEN shift to state 5
-- On VIRTUAL shift to state 6
-- On VAL shift to state 7
-- On UIDENT shift to state 8
-- On TYPE shift to state 9
-- On TRY shift to state 10
-- On TRUE shift to state 11
-- On TO shift to state 12
-- On THEN shift to state 13
-- On STRUCT shift to state 14
-- On SIG shift to state 15
-- On REC shift to state 16
-- On PRIVATE shift to state 17
-- On OR shift to state 18
-- On OPEN shift to state 19
-- On OF shift to state 20
-- On OBJECT shift to state 21
-- On NONREC shift to state 22
-- On NEW shift to state 23
-- On MUTABLE shift to state 24
-- On MODULE shift to state 25
-- On METHOD shift to state 26
-- On MATCH shift to state 27
-- On LIDENT shift to state 28
-- On LET shift to state 29
-- On LAZY shift to state 30
-- On INITIALIZER shift to state 31
-- On INHERIT shift to state 32
-- On INCLUDE shift to state 33
-- On IN shift to state 34
-- On IF shift to state 35
-- On FUNCTOR shift to state 36
-- On FUNCTION shift to state 37
-- On FUN shift to state 38
-- On FOR shift to state 39
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 41
-- On EXCEPTION shift to state 42
-- On END shift to state 43
-- On ELSE shift to state 44
-- On DOWNTO shift to state 45
-- On DONE shift to state 46
-- On DO shift to state 47
-- On CONSTRAINT shift to state 48
-- On CLASS shift to state 49
-- On BEGIN shift to state 50
-- On ASSERT shift to state 51
-- On AS shift to state 52
-- On AND shift to state 53
-- On single_attr_id shift to state 54
-- On attr_id shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## single_attr_id DOT attr_id
## LR(1) items:
attr_id -> single_attr_id DOT attr_id . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI REC RBRACKET QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production attr_id -> single_attr_id DOT attr_id

State 57:
## Known stack suffix:
## PERCENT attr_id
## LR(1) items:
ext_attributes -> PERCENT attr_id . attributes [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TRY TRUE TILDE STRUCT STRING SIG SHARP REC QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXCEPTION END CONSTRAINT CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1483
-- On attribute shift to state 225
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TRY TRUE TILDE STRUCT STRING SIG SHARP REC QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXCEPTION END CONSTRAINT CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production attributes ->

State 58:
## Known stack suffix:
## LBRACKETAT
## LR(1) items:
attribute -> LBRACKETAT . attr_id payload RBRACKET [ WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRUCT STRING STAR SIG SHARP SEMISEMI SEMI RPAREN REC RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PRIVATE PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WITH shift to state 3
-- On WHILE shift to state 4
-- On WHEN shift to state 5
-- On VIRTUAL shift to state 6
-- On VAL shift to state 7
-- On UIDENT shift to state 8
-- On TYPE shift to state 9
-- On TRY shift to state 10
-- On TRUE shift to state 11
-- On TO shift to state 12
-- On THEN shift to state 13
-- On STRUCT shift to state 14
-- On SIG shift to state 15
-- On REC shift to state 16
-- On PRIVATE shift to state 17
-- On OR shift to state 18
-- On OPEN shift to state 19
-- On OF shift to state 20
-- On OBJECT shift to state 21
-- On NONREC shift to state 22
-- On NEW shift to state 23
-- On MUTABLE shift to state 24
-- On MODULE shift to state 25
-- On METHOD shift to state 26
-- On MATCH shift to state 27
-- On LIDENT shift to state 28
-- On LET shift to state 29
-- On LAZY shift to state 30
-- On INITIALIZER shift to state 31
-- On INHERIT shift to state 32
-- On INCLUDE shift to state 33
-- On IN shift to state 34
-- On IF shift to state 35
-- On FUNCTOR shift to state 36
-- On FUNCTION shift to state 37
-- On FUN shift to state 38
-- On FOR shift to state 39
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 41
-- On EXCEPTION shift to state 42
-- On END shift to state 43
-- On ELSE shift to state 44
-- On DOWNTO shift to state 45
-- On DONE shift to state 46
-- On DO shift to state 47
-- On CONSTRAINT shift to state 48
-- On CLASS shift to state 49
-- On BEGIN shift to state 50
-- On ASSERT shift to state 51
-- On AS shift to state 52
-- On AND shift to state 53
-- On single_attr_id shift to state 54
-- On attr_id shift to state 59
## Reductions:

State 59:
## Known stack suffix:
## LBRACKETAT attr_id
## LR(1) items:
attribute -> LBRACKETAT attr_id . payload RBRACKET [ WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRUCT STRING STAR SIG SHARP SEMISEMI SEMI RPAREN REC RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PRIVATE PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On VAL shift to state 60
-- On UIDENT shift to state 94
-- On TYPE shift to state 154
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 327
-- On SEMISEMI shift to state 338
-- On QUESTIONQUESTION shift to state 290
-- On QUESTION shift to state 967
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OPEN shift to state 339
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 347
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKETATATAT shift to state 971
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INCLUDE shift to state 973
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 987
-- On COLON shift to state 997
-- On CLASS shift to state 1203
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On value_description shift to state 1320
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On type_declarations shift to state 1321
-- On type_declaration shift to state 1155
-- On toplevel_directive shift to state 1322
-- On subtractive shift to state 614
-- On structure_tail shift to state 1323
-- On structure_item shift to state 1324
-- On structure shift to state 1362
-- On str_type_extension shift to state 1326
-- On str_include_statement shift to state 1327
-- On str_exception_declaration shift to state 1328
-- On simple_expr shift to state 615
-- On sig_exception_declaration shift to state 1329
-- On seq_expr shift to state 1358
-- On rec_module_bindings shift to state 1330
-- On rec_module_binding shift to state 1337
-- On primitive_declaration shift to state 1338
-- On payload shift to state 1481
-- On open_statement shift to state 1339
-- On name_tag shift to state 635
-- On module_type_declaration shift to state 1340
-- On module_binding shift to state 1341
-- On mod_longident shift to state 493
-- On let_bindings shift to state 1361
-- On let_binding shift to state 640
-- On label shift to state 641
-- On item_extension shift to state 1343
-- On floating_attribute shift to state 1345
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On class_type_declarations shift to state 1346
-- On class_type_declaration shift to state 1188
-- On class_declarations shift to state 1347
-- On class_declaration shift to state 1356
-- On additive shift to state 653
## Reductions:
-- On RBRACKET
--   reduce production structure_tail ->

State 60:
## Known stack suffix:
## VAL
## LR(1) items:
value_description -> VAL . ext_attributes val_ident COLON core_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 61
-- On attribute shift to state 295
## Reductions:
-- On LPAREN LIDENT
--   reduce production ext_attributes ->

State 61:
## Known stack suffix:
## VAL ext_attributes
## LR(1) items:
value_description -> VAL ext_attributes . val_ident COLON core_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LPAREN shift to state 62
-- On LIDENT shift to state 88
-- On val_ident shift to state 89
## Reductions:

State 62:
## Known stack suffix:
## LPAREN
## LR(1) items:
val_ident -> LPAREN . operator RPAREN [ WHILE WHEN VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END COMMA COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BAR BANG BACKQUOTE ASSERT AS ]
## Transitions:
-- On STAR shift to state 63
-- On SHARPOP shift to state 64
-- On PREFIXOP shift to state 65
-- On PLUSEQ shift to state 66
-- On PLUSDOT shift to state 67
-- On PLUS shift to state 68
-- On PERCENT shift to state 69
-- On OR shift to state 70
-- On MINUSDOT shift to state 71
-- On MINUS shift to state 72
-- On LESS shift to state 73
-- On INFIXOP4 shift to state 74
-- On INFIXOP3 shift to state 75
-- On INFIXOP2 shift to state 76
-- On INFIXOP1 shift to state 77
-- On INFIXOP0 shift to state 78
-- On GREATER shift to state 79
-- On EQUAL shift to state 80
-- On COLONEQUAL shift to state 81
-- On BARBAR shift to state 82
-- On BANG shift to state 83
-- On AMPERSAND shift to state 84
-- On AMPERAMPER shift to state 85
-- On operator shift to state 86
## Reductions:

State 63:
## Known stack suffix:
## STAR
## LR(1) items:
operator -> STAR . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> STAR

State 64:
## Known stack suffix:
## SHARPOP
## LR(1) items:
operator -> SHARPOP . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> SHARPOP

State 65:
## Known stack suffix:
## PREFIXOP
## LR(1) items:
operator -> PREFIXOP . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> PREFIXOP

State 66:
## Known stack suffix:
## PLUSEQ
## LR(1) items:
operator -> PLUSEQ . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> PLUSEQ

State 67:
## Known stack suffix:
## PLUSDOT
## LR(1) items:
operator -> PLUSDOT . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> PLUSDOT

State 68:
## Known stack suffix:
## PLUS
## LR(1) items:
operator -> PLUS . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> PLUS

State 69:
## Known stack suffix:
## PERCENT
## LR(1) items:
operator -> PERCENT . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> PERCENT

State 70:
## Known stack suffix:
## OR
## LR(1) items:
operator -> OR . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> OR

State 71:
## Known stack suffix:
## MINUSDOT
## LR(1) items:
operator -> MINUSDOT . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> MINUSDOT

State 72:
## Known stack suffix:
## MINUS
## LR(1) items:
operator -> MINUS . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> MINUS

State 73:
## Known stack suffix:
## LESS
## LR(1) items:
operator -> LESS . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> LESS

State 74:
## Known stack suffix:
## INFIXOP4
## LR(1) items:
operator -> INFIXOP4 . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> INFIXOP4

State 75:
## Known stack suffix:
## INFIXOP3
## LR(1) items:
operator -> INFIXOP3 . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> INFIXOP3

State 76:
## Known stack suffix:
## INFIXOP2
## LR(1) items:
operator -> INFIXOP2 . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> INFIXOP2

State 77:
## Known stack suffix:
## INFIXOP1
## LR(1) items:
operator -> INFIXOP1 . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> INFIXOP1

State 78:
## Known stack suffix:
## INFIXOP0
## LR(1) items:
operator -> INFIXOP0 . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> INFIXOP0

State 79:
## Known stack suffix:
## GREATER
## LR(1) items:
operator -> GREATER . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> GREATER

State 80:
## Known stack suffix:
## EQUAL
## LR(1) items:
operator -> EQUAL . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> EQUAL

State 81:
## Known stack suffix:
## COLONEQUAL
## LR(1) items:
operator -> COLONEQUAL . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> COLONEQUAL

State 82:
## Known stack suffix:
## BARBAR
## LR(1) items:
operator -> BARBAR . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> BARBAR

State 83:
## Known stack suffix:
## BANG
## LR(1) items:
operator -> BANG . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> BANG

State 84:
## Known stack suffix:
## AMPERSAND
## LR(1) items:
operator -> AMPERSAND . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> AMPERSAND

State 85:
## Known stack suffix:
## AMPERAMPER
## LR(1) items:
operator -> AMPERAMPER . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> AMPERAMPER

State 86:
## Known stack suffix:
## LPAREN operator
## LR(1) items:
val_ident -> LPAREN operator . RPAREN [ WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## LPAREN operator RPAREN
## LR(1) items:
val_ident -> LPAREN operator RPAREN . [ WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER
--   reduce production val_ident -> LPAREN operator RPAREN

State 88:
## Known stack suffix:
## LIDENT
## LR(1) items:
val_ident -> LIDENT . [ WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER
--   reduce production val_ident -> LIDENT

State 89:
## Known stack suffix:
## VAL ext_attributes val_ident
## LR(1) items:
value_description -> VAL ext_attributes val_ident . COLON core_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On COLON shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## VAL ext_attributes val_ident COLON
## LR(1) items:
value_description -> VAL ext_attributes val_ident COLON . core_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1479
## Reductions:

State 91:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
simple_core_type2 -> UNDERSCORE . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> UNDERSCORE

State 92:
## Known stack suffix:
## UIDENT
## LR(1) items:
mod_ext_longident -> UIDENT . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND
--   reduce production mod_ext_longident -> UIDENT

State 93:
## Known stack suffix:
## SHARP
## LR(1) items:
simple_core_type2 -> SHARP . class_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UIDENT shift to state 94
-- On LIDENT shift to state 95
-- On mod_longident shift to state 96
-- On class_longident shift to state 100
## Reductions:

State 94:
## Known stack suffix:
## UIDENT
## LR(1) items:
mod_longident -> UIDENT . [ WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER
--   reduce production mod_longident -> UIDENT

State 95:
## Known stack suffix:
## LIDENT
## LR(1) items:
class_longident -> LIDENT . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production class_longident -> LIDENT

State 96:
## Known stack suffix:
## mod_longident
## LR(1) items:
class_longident -> mod_longident . DOT LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
## Transitions:
-- On DOT shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
class_longident -> mod_longident DOT . LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident DOT . UIDENT [ DOT ]
## Transitions:
-- On UIDENT shift to state 98
-- On LIDENT shift to state 99
## Reductions:

State 98:
## Known stack suffix:
## mod_longident DOT UIDENT
## LR(1) items:
mod_longident -> mod_longident DOT UIDENT . [ WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER
--   reduce production mod_longident -> mod_longident DOT UIDENT

State 99:
## Known stack suffix:
## mod_longident DOT LIDENT
## LR(1) items:
class_longident -> mod_longident DOT LIDENT . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production class_longident -> mod_longident DOT LIDENT

State 100:
## Known stack suffix:
## SHARP class_longident
## LR(1) items:
simple_core_type2 -> SHARP class_longident . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> SHARP class_longident

State 101:
## Known stack suffix:
## QUOTE
## LR(1) items:
simple_core_type2 -> QUOTE . ident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UIDENT shift to state 102
-- On LIDENT shift to state 103
-- On ident shift to state 104
## Reductions:

State 102:
## Known stack suffix:
## UIDENT
## LR(1) items:
ident -> UIDENT . [ WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OF OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OF OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER
--   reduce production ident -> UIDENT

State 103:
## Known stack suffix:
## LIDENT
## LR(1) items:
ident -> LIDENT . [ WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OF OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OF OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER
--   reduce production ident -> LIDENT

State 104:
## Known stack suffix:
## QUOTE ident
## LR(1) items:
simple_core_type2 -> QUOTE ident . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> QUOTE ident

State 105:
## Known stack suffix:
## QUESTION
## LR(1) items:
core_type2 -> QUESTION . LIDENT COLON core_type2 MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On LIDENT shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## QUESTION LIDENT
## LR(1) items:
core_type2 -> QUESTION LIDENT . COLON core_type2 MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On COLON shift to state 107
## Reductions:

State 107:
## Known stack suffix:
## QUESTION LIDENT COLON
## LR(1) items:
core_type2 -> QUESTION LIDENT COLON . core_type2 MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type2 shift to state 1476
## Reductions:

State 108:
## Known stack suffix:
## OPTLABEL
## LR(1) items:
core_type2 -> OPTLABEL . core_type2 MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type2 shift to state 1473
## Reductions:

State 109:
## Known stack suffix:
## LPAREN
## LR(1) items:
simple_core_type -> LPAREN . core_type_comma_list RPAREN [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LPAREN . core_type_comma_list RPAREN type_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LPAREN . core_type_comma_list RPAREN SHARP class_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LPAREN . MODULE ext_attributes package_type RPAREN [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On MODULE shift to state 110
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type_comma_list shift to state 1423
-- On core_type2 shift to state 215
-- On core_type shift to state 1093
## Reductions:

State 110:
## Known stack suffix:
## LPAREN MODULE
## LR(1) items:
simple_core_type2 -> LPAREN MODULE . ext_attributes package_type RPAREN [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 111
-- On attribute shift to state 295
## Reductions:
-- On UIDENT SIG MODULE LPAREN LIDENT LBRACKETPERCENT FUNCTOR
--   reduce production ext_attributes ->

State 111:
## Known stack suffix:
## LPAREN MODULE ext_attributes
## LR(1) items:
simple_core_type2 -> LPAREN MODULE ext_attributes . package_type RPAREN [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On package_type shift to state 1471
-- On mty_longident shift to state 361
-- On module_type shift to state 465
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 112:
## Known stack suffix:
## UIDENT
## LR(1) items:
ident -> UIDENT . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production ident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> UIDENT

State 113:
## Known stack suffix:
## SIG
## LR(1) items:
module_type -> SIG . attributes signature END [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 114
-- On attribute shift to state 225
## Reductions:
-- On VAL TYPE SEMISEMI OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS
--   reduce production attributes ->

State 114:
## Known stack suffix:
## SIG attributes
## LR(1) items:
module_type -> SIG attributes . signature END [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On VAL shift to state 60
-- On TYPE shift to state 115
-- On SEMISEMI shift to state 998
-- On OPEN shift to state 339
-- On MODULE shift to state 999
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETATATAT shift to state 971
-- On INCLUDE shift to state 1022
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 1026
-- On CLASS shift to state 1029
-- On value_description shift to state 1144
-- On type_declarations shift to state 1145
-- On type_declaration shift to state 1155
-- On signature_item shift to state 1156
-- On signature shift to state 1469
-- On sig_type_extension shift to state 1158
-- On sig_include_statement shift to state 1159
-- On sig_exception_declaration shift to state 1160
-- On rec_module_declarations shift to state 1161
-- On rec_module_declaration shift to state 1169
-- On primitive_declaration shift to state 1170
-- On open_statement shift to state 1171
-- On module_type_declaration shift to state 1172
-- On module_declaration shift to state 1173
-- On module_alias shift to state 1174
-- On item_extension shift to state 1175
-- On floating_attribute shift to state 1177
-- On class_type_declarations shift to state 1178
-- On class_type_declaration shift to state 1188
-- On class_descriptions shift to state 1189
-- On class_description shift to state 1199
## Reductions:
-- On END
--   reduce production signature ->

State 115:
## Known stack suffix:
## TYPE
## LR(1) items:
sig_type_extension -> TYPE . ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag sig_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
type_declaration -> TYPE . ext_attributes nonrec_flag optional_type_parameters LIDENT type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 116
-- On attribute shift to state 295
## Reductions:
-- On UNDERSCORE UIDENT QUOTE PLUS NONREC MINUS LPAREN LIDENT
--   reduce production ext_attributes ->

State 116:
## Known stack suffix:
## TYPE ext_attributes
## LR(1) items:
sig_type_extension -> TYPE ext_attributes . nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag sig_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
type_declaration -> TYPE ext_attributes . nonrec_flag optional_type_parameters LIDENT type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On NONREC shift to state 117
-- On nonrec_flag shift to state 118
## Reductions:
-- On UNDERSCORE UIDENT QUOTE PLUS MINUS LPAREN LIDENT
--   reduce production nonrec_flag ->

State 117:
## Known stack suffix:
## NONREC
## LR(1) items:
nonrec_flag -> NONREC . [ UNDERSCORE UIDENT QUOTE PLUS MINUS LPAREN LIDENT ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT QUOTE PLUS MINUS LPAREN LIDENT
--   reduce production nonrec_flag -> NONREC

State 118:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag
## LR(1) items:
sig_type_extension -> TYPE ext_attributes nonrec_flag . optional_type_parameters type_longident PLUSEQ private_flag sig_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
type_declaration -> TYPE ext_attributes nonrec_flag . optional_type_parameters LIDENT type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On PLUS shift to state 119
-- On MINUS shift to state 120
-- On LPAREN shift to state 121
-- On type_variance shift to state 122
-- On optional_type_parameters shift to state 132
-- On optional_type_parameter shift to state 1153
## Reductions:
-- On UIDENT LIDENT
--   reduce production optional_type_parameters ->
-- On UNDERSCORE QUOTE
--   reduce production type_variance ->

State 119:
## Known stack suffix:
## PLUS
## LR(1) items:
type_variance -> PLUS . [ UNDERSCORE QUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE QUOTE
--   reduce production type_variance -> PLUS

State 120:
## Known stack suffix:
## MINUS
## LR(1) items:
type_variance -> MINUS . [ UNDERSCORE QUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE QUOTE
--   reduce production type_variance -> MINUS

State 121:
## Known stack suffix:
## LPAREN
## LR(1) items:
optional_type_parameters -> LPAREN . optional_type_parameter_list RPAREN [ UIDENT LIDENT ]
## Transitions:
-- On PLUS shift to state 119
-- On MINUS shift to state 120
-- On type_variance shift to state 122
-- On optional_type_parameter_list shift to state 127
-- On optional_type_parameter shift to state 131
## Reductions:
-- On UNDERSCORE QUOTE
--   reduce production type_variance ->

State 122:
## Known stack suffix:
## type_variance
## LR(1) items:
optional_type_parameter -> type_variance . optional_type_variable [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
-- On UNDERSCORE shift to state 123
-- On QUOTE shift to state 124
-- On optional_type_variable shift to state 126
## Reductions:

State 123:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
optional_type_variable -> UNDERSCORE . [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
## Reductions:
-- On UIDENT RPAREN LIDENT COMMA
--   reduce production optional_type_variable -> UNDERSCORE

State 124:
## Known stack suffix:
## QUOTE
## LR(1) items:
optional_type_variable -> QUOTE . ident [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
-- On UIDENT shift to state 102
-- On LIDENT shift to state 103
-- On ident shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## QUOTE ident
## LR(1) items:
optional_type_variable -> QUOTE ident . [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
## Reductions:
-- On UIDENT RPAREN LIDENT COMMA
--   reduce production optional_type_variable -> QUOTE ident

State 126:
## Known stack suffix:
## type_variance optional_type_variable
## LR(1) items:
optional_type_parameter -> type_variance optional_type_variable . [ UIDENT RPAREN LIDENT COMMA ]
## Transitions:
## Reductions:
-- On UIDENT RPAREN LIDENT COMMA
--   reduce production optional_type_parameter -> type_variance optional_type_variable

State 127:
## Known stack suffix:
## LPAREN optional_type_parameter_list
## LR(1) items:
optional_type_parameter_list -> optional_type_parameter_list . COMMA optional_type_parameter [ RPAREN COMMA ]
optional_type_parameters -> LPAREN optional_type_parameter_list . RPAREN [ UIDENT LIDENT ]
## Transitions:
-- On RPAREN shift to state 128
-- On COMMA shift to state 129
## Reductions:

State 128:
## Known stack suffix:
## LPAREN optional_type_parameter_list RPAREN
## LR(1) items:
optional_type_parameters -> LPAREN optional_type_parameter_list RPAREN . [ UIDENT LIDENT ]
## Transitions:
## Reductions:
-- On UIDENT LIDENT
--   reduce production optional_type_parameters -> LPAREN optional_type_parameter_list RPAREN

State 129:
## Known stack suffix:
## optional_type_parameter_list COMMA
## LR(1) items:
optional_type_parameter_list -> optional_type_parameter_list COMMA . optional_type_parameter [ RPAREN COMMA ]
## Transitions:
-- On PLUS shift to state 119
-- On MINUS shift to state 120
-- On type_variance shift to state 122
-- On optional_type_parameter shift to state 130
## Reductions:
-- On UNDERSCORE QUOTE
--   reduce production type_variance ->

State 130:
## Known stack suffix:
## optional_type_parameter_list COMMA optional_type_parameter
## LR(1) items:
optional_type_parameter_list -> optional_type_parameter_list COMMA optional_type_parameter . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production optional_type_parameter_list -> optional_type_parameter_list COMMA optional_type_parameter

State 131:
## Known stack suffix:
## optional_type_parameter
## LR(1) items:
optional_type_parameter_list -> optional_type_parameter . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production optional_type_parameter_list -> optional_type_parameter

State 132:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters
## LR(1) items:
sig_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters . type_longident PLUSEQ private_flag sig_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
type_declaration -> TYPE ext_attributes nonrec_flag optional_type_parameters . LIDENT type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 92
-- On LIDENT shift to state 133
-- On type_longident shift to state 1458
-- On mod_ext_longident shift to state 189
## Reductions:

State 133:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters LIDENT
## LR(1) items:
type_declaration -> TYPE ext_attributes nonrec_flag optional_type_parameters LIDENT . type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
type_longident -> LIDENT . [ PLUSEQ ]
## Transitions:
-- On EQUAL shift to state 134
-- On type_kind shift to state 1455
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production type_kind ->
-- On PLUSEQ
--   reduce production type_longident -> LIDENT

State 134:
## Known stack suffix:
## EQUAL
## LR(1) items:
type_kind -> EQUAL . core_type [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL . PRIVATE core_type [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL . constructor_declarations [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL . PRIVATE constructor_declarations [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL . DOTDOT [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL . private_flag LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL . core_type EQUAL private_flag constructor_declarations [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL . core_type EQUAL DOTDOT [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL . core_type EQUAL private_flag LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 135
-- On TRUE shift to state 136
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On PRIVATE shift to state 137
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 138
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 1428
-- On FALSE shift to state 168
-- On DOTDOT shift to state 1441
-- On BAR shift to state 1429
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On private_flag shift to state 1442
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1446
-- On constructor_declarations shift to state 1454
-- On constructor_declaration shift to state 1436
-- On constr_ident shift to state 1437
-- On bar_constructor_declaration shift to state 1440
## Reductions:
-- On LBRACE
--   reduce production private_flag ->

State 135:
## Known stack suffix:
## UIDENT
## LR(1) items:
constr_ident -> UIDENT . [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS BAR AND ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS BAR AND
--   reduce production constr_ident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> UIDENT

State 136:
## Known stack suffix:
## TRUE
## LR(1) items:
constr_ident -> TRUE . [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND
--   reduce production constr_ident -> TRUE

State 137:
## Known stack suffix:
## EQUAL PRIVATE
## LR(1) items:
private_flag -> PRIVATE . [ LBRACE ]
type_kind -> EQUAL PRIVATE . core_type [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL PRIVATE . constructor_declarations [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 135
-- On TRUE shift to state 136
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 138
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 1428
-- On FALSE shift to state 168
-- On BAR shift to state 1429
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1433
-- On constructor_declarations shift to state 1434
-- On constructor_declaration shift to state 1436
-- On constr_ident shift to state 1437
-- On bar_constructor_declaration shift to state 1440
## Reductions:
-- On LBRACE
--   reduce production private_flag -> PRIVATE

State 138:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_ident -> LPAREN . RPAREN [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS BAR AND ]
constr_ident -> LPAREN . COLONCOLON RPAREN [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS BAR AND ]
simple_core_type -> LPAREN . core_type_comma_list RPAREN [ VAL TYPE STAR SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AS AND ]
simple_core_type2 -> LPAREN . core_type_comma_list RPAREN type_longident [ VAL UIDENT TYPE STAR SHARP SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AS AND ]
simple_core_type2 -> LPAREN . core_type_comma_list RPAREN SHARP class_longident [ VAL UIDENT TYPE STAR SHARP SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AS AND ]
simple_core_type2 -> LPAREN . MODULE ext_attributes package_type RPAREN [ VAL UIDENT TYPE STAR SHARP SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On RPAREN shift to state 139
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On MODULE shift to state 110
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On COLONCOLON shift to state 164
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type_comma_list shift to state 1423
-- On core_type2 shift to state 215
-- On core_type shift to state 1093
## Reductions:

State 139:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
constr_ident -> LPAREN RPAREN . [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND
--   reduce production constr_ident -> LPAREN RPAREN

State 140:
## Known stack suffix:
## LIDENT
## LR(1) items:
core_type2 -> LIDENT . COLON core_type2 MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
type_longident -> LIDENT . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On COLON shift to state 141
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production type_longident -> LIDENT

State 141:
## Known stack suffix:
## LIDENT COLON
## LR(1) items:
core_type2 -> LIDENT COLON . core_type2 MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type2 shift to state 1420
## Reductions:

State 142:
## Known stack suffix:
## LESS
## LR(1) items:
simple_core_type2 -> LESS . meth_list GREATER [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LESS . GREATER [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On LIDENT shift to state 143
-- On GREATER shift to state 144
-- On DOTDOT shift to state 145
-- On meth_list shift to state 146
-- On label shift to state 148
-- On field_semi shift to state 1417
-- On field shift to state 1419
## Reductions:

State 143:
## Known stack suffix:
## LIDENT
## LR(1) items:
label -> LIDENT . [ WITH VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production label -> LIDENT

State 144:
## Known stack suffix:
## LESS GREATER
## LR(1) items:
simple_core_type2 -> LESS GREATER . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LESS GREATER

State 145:
## Known stack suffix:
## DOTDOT
## LR(1) items:
meth_list -> DOTDOT . [ GREATER ]
## Transitions:
## Reductions:
-- On GREATER
--   reduce production meth_list -> DOTDOT

State 146:
## Known stack suffix:
## LESS meth_list
## LR(1) items:
simple_core_type2 -> LESS meth_list . GREATER [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On GREATER shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## LESS meth_list GREATER
## LR(1) items:
simple_core_type2 -> LESS meth_list GREATER . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LESS meth_list GREATER

State 148:
## Known stack suffix:
## label
## LR(1) items:
field -> label . COLON poly_type_no_attr attributes [ GREATER ]
field_semi -> label . COLON poly_type_no_attr attributes SEMI attributes [ LIDENT GREATER DOTDOT ]
## Transitions:
-- On COLON shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## label COLON
## LR(1) items:
field -> label COLON . poly_type_no_attr attributes [ GREATER ]
field_semi -> label COLON . poly_type_no_attr attributes SEMI attributes [ LIDENT GREATER DOTDOT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 150
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On typevar_list shift to state 249
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On poly_type_no_attr shift to state 1413
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 258
-- On core_type2 shift to state 215
## Reductions:

State 150:
## Known stack suffix:
## QUOTE
## LR(1) items:
simple_core_type2 -> QUOTE . ident [ VAL UIDENT STAR SHARP SEMI RBRACE MINUSGREATER METHOD LIDENT LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT GREATER EQUAL END CONSTRAINT COLONGREATER AS ]
typevar_list -> QUOTE . ident [ QUOTE DOT ]
## Transitions:
-- On UIDENT shift to state 102
-- On LIDENT shift to state 103
-- On ident shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## QUOTE ident
## LR(1) items:
simple_core_type2 -> QUOTE ident . [ VAL UIDENT STAR SHARP SEMI RBRACE MINUSGREATER METHOD LIDENT LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT GREATER EQUAL END CONSTRAINT COLONGREATER AS ]
typevar_list -> QUOTE ident . [ QUOTE DOT ]
## Transitions:
## Reductions:
-- On VAL UIDENT STAR SHARP SEMI RBRACE MINUSGREATER METHOD LIDENT LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT GREATER EQUAL END CONSTRAINT COLONGREATER AS
--   reduce production simple_core_type2 -> QUOTE ident
-- On QUOTE DOT
--   reduce production typevar_list -> QUOTE ident

State 152:
## Known stack suffix:
## LBRACKETPERCENT
## LR(1) items:
extension -> LBRACKETPERCENT . attr_id payload RBRACKET [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WITH shift to state 3
-- On WHILE shift to state 4
-- On WHEN shift to state 5
-- On VIRTUAL shift to state 6
-- On VAL shift to state 7
-- On UIDENT shift to state 8
-- On TYPE shift to state 9
-- On TRY shift to state 10
-- On TRUE shift to state 11
-- On TO shift to state 12
-- On THEN shift to state 13
-- On STRUCT shift to state 14
-- On SIG shift to state 15
-- On REC shift to state 16
-- On PRIVATE shift to state 17
-- On OR shift to state 18
-- On OPEN shift to state 19
-- On OF shift to state 20
-- On OBJECT shift to state 21
-- On NONREC shift to state 22
-- On NEW shift to state 23
-- On MUTABLE shift to state 24
-- On MODULE shift to state 25
-- On METHOD shift to state 26
-- On MATCH shift to state 27
-- On LIDENT shift to state 28
-- On LET shift to state 29
-- On LAZY shift to state 30
-- On INITIALIZER shift to state 31
-- On INHERIT shift to state 32
-- On INCLUDE shift to state 33
-- On IN shift to state 34
-- On IF shift to state 35
-- On FUNCTOR shift to state 36
-- On FUNCTION shift to state 37
-- On FUN shift to state 38
-- On FOR shift to state 39
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 41
-- On EXCEPTION shift to state 42
-- On END shift to state 43
-- On ELSE shift to state 44
-- On DOWNTO shift to state 45
-- On DONE shift to state 46
-- On DO shift to state 47
-- On CONSTRAINT shift to state 48
-- On CLASS shift to state 49
-- On BEGIN shift to state 50
-- On ASSERT shift to state 51
-- On AS shift to state 52
-- On AND shift to state 53
-- On single_attr_id shift to state 54
-- On attr_id shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## LBRACKETPERCENT attr_id
## LR(1) items:
extension -> LBRACKETPERCENT attr_id . payload RBRACKET [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On VAL shift to state 60
-- On UIDENT shift to state 94
-- On TYPE shift to state 154
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 327
-- On SEMISEMI shift to state 338
-- On QUESTIONQUESTION shift to state 290
-- On QUESTION shift to state 967
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OPEN shift to state 339
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 347
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKETATATAT shift to state 971
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INCLUDE shift to state 973
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 987
-- On COLON shift to state 997
-- On CLASS shift to state 1203
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On value_description shift to state 1320
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On type_declarations shift to state 1321
-- On type_declaration shift to state 1155
-- On toplevel_directive shift to state 1322
-- On subtractive shift to state 614
-- On structure_tail shift to state 1323
-- On structure_item shift to state 1324
-- On structure shift to state 1362
-- On str_type_extension shift to state 1326
-- On str_include_statement shift to state 1327
-- On str_exception_declaration shift to state 1328
-- On simple_expr shift to state 615
-- On sig_exception_declaration shift to state 1329
-- On seq_expr shift to state 1358
-- On rec_module_bindings shift to state 1330
-- On rec_module_binding shift to state 1337
-- On primitive_declaration shift to state 1338
-- On payload shift to state 1411
-- On open_statement shift to state 1339
-- On name_tag shift to state 635
-- On module_type_declaration shift to state 1340
-- On module_binding shift to state 1341
-- On mod_longident shift to state 493
-- On let_bindings shift to state 1361
-- On let_binding shift to state 640
-- On label shift to state 641
-- On item_extension shift to state 1343
-- On floating_attribute shift to state 1345
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On class_type_declarations shift to state 1346
-- On class_type_declaration shift to state 1188
-- On class_declarations shift to state 1347
-- On class_declaration shift to state 1356
-- On additive shift to state 653
## Reductions:
-- On RBRACKET
--   reduce production structure_tail ->

State 154:
## Known stack suffix:
## TYPE
## LR(1) items:
str_type_extension -> TYPE . ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag str_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
type_declaration -> TYPE . ext_attributes nonrec_flag optional_type_parameters LIDENT type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 155
-- On attribute shift to state 295
## Reductions:
-- On UNDERSCORE UIDENT QUOTE PLUS NONREC MINUS LPAREN LIDENT
--   reduce production ext_attributes ->

State 155:
## Known stack suffix:
## TYPE ext_attributes
## LR(1) items:
str_type_extension -> TYPE ext_attributes . nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag str_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
type_declaration -> TYPE ext_attributes . nonrec_flag optional_type_parameters LIDENT type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On NONREC shift to state 117
-- On nonrec_flag shift to state 156
## Reductions:
-- On UNDERSCORE UIDENT QUOTE PLUS MINUS LPAREN LIDENT
--   reduce production nonrec_flag ->

State 156:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag
## LR(1) items:
str_type_extension -> TYPE ext_attributes nonrec_flag . optional_type_parameters type_longident PLUSEQ private_flag str_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
type_declaration -> TYPE ext_attributes nonrec_flag . optional_type_parameters LIDENT type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On PLUS shift to state 119
-- On MINUS shift to state 120
-- On LPAREN shift to state 121
-- On type_variance shift to state 122
-- On optional_type_parameters shift to state 157
-- On optional_type_parameter shift to state 1153
## Reductions:
-- On UIDENT LIDENT
--   reduce production optional_type_parameters ->
-- On UNDERSCORE QUOTE
--   reduce production type_variance ->

State 157:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters
## LR(1) items:
str_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters . type_longident PLUSEQ private_flag str_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
type_declaration -> TYPE ext_attributes nonrec_flag optional_type_parameters . LIDENT type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 92
-- On LIDENT shift to state 133
-- On type_longident shift to state 158
-- On mod_ext_longident shift to state 189
## Reductions:

State 158:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters type_longident
## LR(1) items:
str_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident . PLUSEQ private_flag str_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PLUSEQ shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ
## LR(1) items:
str_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ . private_flag str_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PRIVATE shift to state 160
-- On private_flag shift to state 161
## Reductions:
-- On UIDENT TRUE LPAREN LBRACKET FALSE BAR
--   reduce production private_flag ->

State 160:
## Known stack suffix:
## PRIVATE
## LR(1) items:
private_flag -> PRIVATE . [ UIDENT TRUE LPAREN LIDENT LBRACKET LBRACE FALSE BAR ]
## Transitions:
## Reductions:
-- On UIDENT TRUE LPAREN LIDENT LBRACKET LBRACE FALSE BAR
--   reduce production private_flag -> PRIVATE

State 161:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag
## LR(1) items:
str_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag . str_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 162
-- On TRUE shift to state 136
-- On LPAREN shift to state 163
-- On LBRACKET shift to state 166
-- On FALSE shift to state 168
-- On BAR shift to state 169
-- On str_extension_constructors shift to state 284
-- On extension_constructor_rebind shift to state 1401
-- On extension_constructor_declaration shift to state 1402
-- On constr_ident shift to state 1403
-- On bar_extension_constructor_rebind shift to state 1409
-- On bar_extension_constructor_declaration shift to state 1410
## Reductions:

State 162:
## Known stack suffix:
## UIDENT
## LR(1) items:
constr_ident -> UIDENT . [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND
--   reduce production constr_ident -> UIDENT

State 163:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_ident -> LPAREN . RPAREN [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND ]
constr_ident -> LPAREN . COLONCOLON RPAREN [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND ]
## Transitions:
-- On RPAREN shift to state 139
-- On COLONCOLON shift to state 164
## Reductions:

State 164:
## Known stack suffix:
## LPAREN COLONCOLON
## LR(1) items:
constr_ident -> LPAREN COLONCOLON . RPAREN [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND ]
## Transitions:
-- On RPAREN shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN
## LR(1) items:
constr_ident -> LPAREN COLONCOLON RPAREN . [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND
--   reduce production constr_ident -> LPAREN COLONCOLON RPAREN

State 166:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_ident -> LBRACKET . RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND ]
## Transitions:
-- On RBRACKET shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## LBRACKET RBRACKET
## LR(1) items:
constr_ident -> LBRACKET RBRACKET . [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND
--   reduce production constr_ident -> LBRACKET RBRACKET

State 168:
## Known stack suffix:
## FALSE
## LR(1) items:
constr_ident -> FALSE . [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLON CLASS BAR AND
--   reduce production constr_ident -> FALSE

State 169:
## Known stack suffix:
## BAR
## LR(1) items:
bar_extension_constructor_declaration -> BAR . constr_ident generalized_constructor_arguments attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
bar_extension_constructor_rebind -> BAR . constr_ident EQUAL constr_longident attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On UIDENT shift to state 162
-- On TRUE shift to state 136
-- On LPAREN shift to state 163
-- On LBRACKET shift to state 166
-- On FALSE shift to state 168
-- On constr_ident shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## BAR constr_ident
## LR(1) items:
bar_extension_constructor_declaration -> BAR constr_ident . generalized_constructor_arguments attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
bar_extension_constructor_rebind -> BAR constr_ident . EQUAL constr_longident attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On OF shift to state 171
-- On EQUAL shift to state 266
-- On COLON shift to state 277
-- On generalized_constructor_arguments shift to state 282
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production generalized_constructor_arguments ->

State 171:
## Known stack suffix:
## OF
## LR(1) items:
generalized_constructor_arguments -> OF . constructor_arguments [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On LBRACE shift to state 244
-- On type_longident shift to state 183
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 209
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_list shift to state 264
-- On constructor_arguments shift to state 265
## Reductions:

State 172:
## Known stack suffix:
## LIDENT
## LR(1) items:
type_longident -> LIDENT . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INITIALIZER INHERIT INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BARRBRACKET BAR BACKQUOTE AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INITIALIZER INHERIT INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BARRBRACKET BAR BACKQUOTE AS AND AMPERSAND
--   reduce production type_longident -> LIDENT

State 173:
## Known stack suffix:
## LBRACKETLESS
## LR(1) items:
simple_core_type2 -> LBRACKETLESS . opt_bar row_field_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LBRACKETLESS . opt_bar row_field_list GREATER name_tag_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On BAR shift to state 174
-- On opt_bar shift to state 175
## Reductions:
-- On UNDERSCORE UIDENT SHARP QUOTE LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET BACKQUOTE
--   reduce production opt_bar ->

State 174:
## Known stack suffix:
## BAR
## LR(1) items:
opt_bar -> BAR . [ UNDERSCORE UIDENT TRUE STRING SHARP QUOTE PLUS MINUS LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE EXCEPTION CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP QUOTE PLUS MINUS LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE EXCEPTION CHAR BACKQUOTE
--   reduce production opt_bar -> BAR

State 175:
## Known stack suffix:
## LBRACKETLESS opt_bar
## LR(1) items:
simple_core_type2 -> LBRACKETLESS opt_bar . row_field_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LBRACKETLESS opt_bar . row_field_list GREATER name_tag_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On BACKQUOTE shift to state 181
-- On type_longident shift to state 183
-- On tag_field shift to state 184
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 197
-- On row_field_list shift to state 237
-- On row_field shift to state 228
-- On name_tag shift to state 202
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 176:
## Known stack suffix:
## LBRACKETGREATER
## LR(1) items:
simple_core_type2 -> LBRACKETGREATER . opt_bar row_field_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LBRACKETGREATER . RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On RBRACKET shift to state 177
-- On BAR shift to state 174
-- On opt_bar shift to state 178
## Reductions:
-- On UNDERSCORE UIDENT SHARP QUOTE LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET BACKQUOTE
--   reduce production opt_bar ->

State 177:
## Known stack suffix:
## LBRACKETGREATER RBRACKET
## LR(1) items:
simple_core_type2 -> LBRACKETGREATER RBRACKET . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LBRACKETGREATER RBRACKET

State 178:
## Known stack suffix:
## LBRACKETGREATER opt_bar
## LR(1) items:
simple_core_type2 -> LBRACKETGREATER opt_bar . row_field_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On BACKQUOTE shift to state 181
-- On type_longident shift to state 183
-- On tag_field shift to state 184
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 197
-- On row_field_list shift to state 235
-- On row_field shift to state 228
-- On name_tag shift to state 202
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 179:
## Known stack suffix:
## LBRACKET
## LR(1) items:
simple_core_type2 -> LBRACKET . tag_field RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LBRACKET . BAR row_field_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LBRACKET . row_field BAR row_field_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On BAR shift to state 180
-- On BACKQUOTE shift to state 181
-- On type_longident shift to state 183
-- On tag_field shift to state 229
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 197
-- On row_field shift to state 231
-- On name_tag shift to state 202
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 180:
## Known stack suffix:
## LBRACKET BAR
## LR(1) items:
simple_core_type2 -> LBRACKET BAR . row_field_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On BACKQUOTE shift to state 181
-- On type_longident shift to state 183
-- On tag_field shift to state 184
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 197
-- On row_field_list shift to state 198
-- On row_field shift to state 228
-- On name_tag shift to state 202
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 181:
## Known stack suffix:
## BACKQUOTE
## LR(1) items:
name_tag -> BACKQUOTE . ident [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OF NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 102
-- On LIDENT shift to state 103
-- On ident shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## BACKQUOTE ident
## LR(1) items:
name_tag -> BACKQUOTE ident . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OF NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OF NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production name_tag -> BACKQUOTE ident

State 183:
## Known stack suffix:
## type_longident
## LR(1) items:
simple_core_type2 -> type_longident . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> type_longident

State 184:
## Known stack suffix:
## tag_field
## LR(1) items:
row_field -> tag_field . [ RBRACKET GREATER BAR ]
## Transitions:
## Reductions:
-- On RBRACKET GREATER BAR
--   reduce production row_field -> tag_field

State 185:
## Known stack suffix:
## simple_core_type2
## LR(1) items:
simple_core_type -> simple_core_type2 . [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> simple_core_type2 . type_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> simple_core_type2 . SHARP class_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UIDENT shift to state 92
-- On SHARP shift to state 186
-- On LIDENT shift to state 172
-- On type_longident shift to state 188
-- On mod_ext_longident shift to state 189
## Reductions:
-- On WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type -> simple_core_type2

State 186:
## Known stack suffix:
## simple_core_type2 SHARP
## LR(1) items:
simple_core_type2 -> simple_core_type2 SHARP . class_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UIDENT shift to state 94
-- On LIDENT shift to state 95
-- On mod_longident shift to state 96
-- On class_longident shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## simple_core_type2 SHARP class_longident
## LR(1) items:
simple_core_type2 -> simple_core_type2 SHARP class_longident . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> simple_core_type2 SHARP class_longident

State 188:
## Known stack suffix:
## simple_core_type2 type_longident
## LR(1) items:
simple_core_type2 -> simple_core_type2 type_longident . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> simple_core_type2 type_longident

State 189:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PLUSEQ PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INITIALIZER INHERIT INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BARRBRACKET BAR BACKQUOTE AS AND AMPERSAND ]
## Transitions:
-- On LPAREN shift to state 190
-- On DOT shift to state 195
## Reductions:

State 190:
## Known stack suffix:
## mod_ext_longident LPAREN
## LR(1) items:
mod_ext_longident -> mod_ext_longident LPAREN . mod_ext_longident RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND ]
## Transitions:
-- On UIDENT shift to state 92
-- On mod_ext_longident shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## mod_ext_longident LPAREN mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ RPAREN LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ RPAREN LPAREN DOT ]
mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND ]
## Transitions:
-- On RPAREN shift to state 192
-- On LPAREN shift to state 190
-- On DOT shift to state 193
## Reductions:

State 192:
## Known stack suffix:
## mod_ext_longident LPAREN mod_ext_longident RPAREN
## LR(1) items:
mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND
--   reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN

State 193:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND ]
## Transitions:
-- On UIDENT shift to state 194
## Reductions:

State 194:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND
--   reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 195:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PLUSEQ PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INITIALIZER INHERIT INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BARRBRACKET BAR BACKQUOTE AS AND AMPERSAND ]
## Transitions:
-- On UIDENT shift to state 194
-- On LIDENT shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## mod_ext_longident DOT LIDENT
## LR(1) items:
type_longident -> mod_ext_longident DOT LIDENT . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PLUSEQ PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INITIALIZER INHERIT INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BARRBRACKET BAR BACKQUOTE AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PLUSEQ PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INITIALIZER INHERIT INCLUDE IN GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BARRBRACKET BAR BACKQUOTE AS AND AMPERSAND
--   reduce production type_longident -> mod_ext_longident DOT LIDENT

State 197:
## Known stack suffix:
## simple_core_type
## LR(1) items:
row_field -> simple_core_type . [ RBRACKET GREATER BAR ]
## Transitions:
## Reductions:
-- On RBRACKET GREATER BAR
--   reduce production row_field -> simple_core_type

State 198:
## Known stack suffix:
## LBRACKET BAR row_field_list
## LR(1) items:
row_field_list -> row_field_list . BAR row_field [ RBRACKET BAR ]
simple_core_type2 -> LBRACKET BAR row_field_list . RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On RBRACKET shift to state 199
-- On BAR shift to state 200
## Reductions:

State 199:
## Known stack suffix:
## LBRACKET BAR row_field_list RBRACKET
## LR(1) items:
simple_core_type2 -> LBRACKET BAR row_field_list RBRACKET . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LBRACKET BAR row_field_list RBRACKET

State 200:
## Known stack suffix:
## row_field_list BAR
## LR(1) items:
row_field_list -> row_field_list BAR . row_field [ RBRACKET GREATER BAR ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On BACKQUOTE shift to state 181
-- On type_longident shift to state 183
-- On tag_field shift to state 184
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 197
-- On row_field shift to state 201
-- On name_tag shift to state 202
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 201:
## Known stack suffix:
## row_field_list BAR row_field
## LR(1) items:
row_field_list -> row_field_list BAR row_field . [ RBRACKET GREATER BAR ]
## Transitions:
## Reductions:
-- On RBRACKET GREATER BAR
--   reduce production row_field_list -> row_field_list BAR row_field

State 202:
## Known stack suffix:
## name_tag
## LR(1) items:
tag_field -> name_tag . OF opt_ampersand amper_type_list attributes [ RBRACKET GREATER BAR ]
tag_field -> name_tag . attributes [ RBRACKET GREATER BAR ]
## Transitions:
-- On OF shift to state 203
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 227
-- On attribute shift to state 225
## Reductions:
-- On RBRACKET GREATER BAR
--   reduce production attributes ->

State 203:
## Known stack suffix:
## name_tag OF
## LR(1) items:
tag_field -> name_tag OF . opt_ampersand amper_type_list attributes [ RBRACKET GREATER BAR ]
## Transitions:
-- On AMPERSAND shift to state 204
-- On opt_ampersand shift to state 205
## Reductions:
-- On UNDERSCORE UIDENT SHARP QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET
--   reduce production opt_ampersand ->

State 204:
## Known stack suffix:
## AMPERSAND
## LR(1) items:
opt_ampersand -> AMPERSAND . [ UNDERSCORE UIDENT SHARP QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT SHARP QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET
--   reduce production opt_ampersand -> AMPERSAND

State 205:
## Known stack suffix:
## name_tag OF opt_ampersand
## LR(1) items:
tag_field -> name_tag OF opt_ampersand . amper_type_list attributes [ RBRACKET GREATER BAR ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 214
-- On core_type2 shift to state 215
-- On amper_type_list shift to state 221
## Reductions:

State 206:
## Known stack suffix:
## simple_core_type_or_tuple
## LR(1) items:
core_type2 -> simple_core_type_or_tuple . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production core_type2 -> simple_core_type_or_tuple

State 207:
## Known stack suffix:
## simple_core_type
## LR(1) items:
simple_core_type_or_tuple -> simple_core_type . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type_or_tuple -> simple_core_type . STAR core_type_list [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On STAR shift to state 208
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type_or_tuple -> simple_core_type

State 208:
## Known stack suffix:
## simple_core_type STAR
## LR(1) items:
simple_core_type_or_tuple -> simple_core_type STAR . core_type_list [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 209
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_list shift to state 211
## Reductions:

State 209:
## Known stack suffix:
## simple_core_type
## LR(1) items:
core_type_list -> simple_core_type . [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production core_type_list -> simple_core_type

State 210:
## Known stack suffix:
## extension
## LR(1) items:
simple_core_type2 -> extension . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> extension

State 211:
## Known stack suffix:
## simple_core_type STAR core_type_list
## LR(1) items:
core_type_list -> core_type_list . STAR simple_core_type [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type_or_tuple -> simple_core_type STAR core_type_list . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On STAR shift to state 212
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type_or_tuple -> simple_core_type STAR core_type_list

State 212:
## Known stack suffix:
## core_type_list STAR
## LR(1) items:
core_type_list -> core_type_list STAR . simple_core_type [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 213
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 213:
## Known stack suffix:
## core_type_list STAR simple_core_type
## LR(1) items:
core_type_list -> core_type_list STAR simple_core_type . [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production core_type_list -> core_type_list STAR simple_core_type

State 214:
## Known stack suffix:
## core_type_no_attr
## LR(1) items:
amper_type_list -> core_type_no_attr . [ RBRACKET LBRACKETAT GREATER BAR AMPERSAND ]
## Transitions:
## Reductions:
-- On RBRACKET LBRACKETAT GREATER BAR AMPERSAND
--   reduce production amper_type_list -> core_type_no_attr

State 215:
## Known stack suffix:
## core_type2
## LR(1) items:
core_type2 -> core_type2 . MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type_no_attr -> core_type2 . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AND AMPERSAND ]
core_type_no_attr -> core_type2 . AS QUOTE ident [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AND AMPERSAND ]
## Transitions:
-- On MINUSGREATER shift to state 216
-- On AS shift to state 218
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AND AMPERSAND
--   reduce production core_type_no_attr -> core_type2

State 216:
## Known stack suffix:
## core_type2 MINUSGREATER
## LR(1) items:
core_type2 -> core_type2 MINUSGREATER . core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type2 shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## core_type2 MINUSGREATER core_type2
## LR(1) items:
core_type2 -> core_type2 . MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 MINUSGREATER core_type2 . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On MINUSGREATER shift to state 216
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production core_type2 -> core_type2 MINUSGREATER core_type2

State 218:
## Known stack suffix:
## core_type2 AS
## LR(1) items:
core_type_no_attr -> core_type2 AS . QUOTE ident [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AND AMPERSAND ]
## Transitions:
-- On QUOTE shift to state 219
## Reductions:

State 219:
## Known stack suffix:
## core_type2 AS QUOTE
## LR(1) items:
core_type_no_attr -> core_type2 AS QUOTE . ident [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AND AMPERSAND ]
## Transitions:
-- On UIDENT shift to state 102
-- On LIDENT shift to state 103
-- On ident shift to state 220
## Reductions:

State 220:
## Known stack suffix:
## core_type2 AS QUOTE ident
## LR(1) items:
core_type_no_attr -> core_type2 AS QUOTE ident . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AND AMPERSAND
--   reduce production core_type_no_attr -> core_type2 AS QUOTE ident

State 221:
## Known stack suffix:
## name_tag OF opt_ampersand amper_type_list
## LR(1) items:
amper_type_list -> amper_type_list . AMPERSAND core_type_no_attr [ RBRACKET LBRACKETAT GREATER BAR AMPERSAND ]
tag_field -> name_tag OF opt_ampersand amper_type_list . attributes [ RBRACKET GREATER BAR ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On AMPERSAND shift to state 222
-- On attributes shift to state 224
-- On attribute shift to state 225
## Reductions:
-- On RBRACKET GREATER BAR
--   reduce production attributes ->

State 222:
## Known stack suffix:
## amper_type_list AMPERSAND
## LR(1) items:
amper_type_list -> amper_type_list AMPERSAND . core_type_no_attr [ RBRACKET LBRACKETAT GREATER BAR AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 223
-- On core_type2 shift to state 215
## Reductions:

State 223:
## Known stack suffix:
## amper_type_list AMPERSAND core_type_no_attr
## LR(1) items:
amper_type_list -> amper_type_list AMPERSAND core_type_no_attr . [ RBRACKET LBRACKETAT GREATER BAR AMPERSAND ]
## Transitions:
## Reductions:
-- On RBRACKET LBRACKETAT GREATER BAR AMPERSAND
--   reduce production amper_type_list -> amper_type_list AMPERSAND core_type_no_attr

State 224:
## Known stack suffix:
## name_tag OF opt_ampersand amper_type_list attributes
## LR(1) items:
tag_field -> name_tag OF opt_ampersand amper_type_list attributes . [ RBRACKET GREATER BAR ]
## Transitions:
## Reductions:
-- On RBRACKET GREATER BAR
--   reduce production tag_field -> name_tag OF opt_ampersand amper_type_list attributes

State 225:
## Known stack suffix:
## attribute
## LR(1) items:
attributes -> attribute . attributes [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI SEMI REC RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PRIVATE PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IN IF GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DOTDOT CONSTRAINT CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 226
-- On attribute shift to state 225
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI SEMI REC RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PRIVATE PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IN IF GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DOTDOT CONSTRAINT CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT AND
--   reduce production attributes ->

State 226:
## Known stack suffix:
## attribute attributes
## LR(1) items:
attributes -> attribute attributes . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI SEMI REC RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PRIVATE PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IN IF GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DOTDOT CONSTRAINT CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT AND ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SHARP SEMISEMI SEMI REC RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PRIVATE PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INCLUDE IN IF GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DOTDOT CONSTRAINT CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT AND
--   reduce production attributes -> attribute attributes

State 227:
## Known stack suffix:
## name_tag attributes
## LR(1) items:
tag_field -> name_tag attributes . [ RBRACKET GREATER BAR ]
## Transitions:
## Reductions:
-- On RBRACKET GREATER BAR
--   reduce production tag_field -> name_tag attributes

State 228:
## Known stack suffix:
## row_field
## LR(1) items:
row_field_list -> row_field . [ RBRACKET GREATER BAR ]
## Transitions:
## Reductions:
-- On RBRACKET GREATER BAR
--   reduce production row_field_list -> row_field

State 229:
## Known stack suffix:
## LBRACKET tag_field
## LR(1) items:
row_field -> tag_field . [ BAR ]
simple_core_type2 -> LBRACKET tag_field . RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On RBRACKET shift to state 230
## Reductions:
-- On BAR
--   reduce production row_field -> tag_field

State 230:
## Known stack suffix:
## LBRACKET tag_field RBRACKET
## LR(1) items:
simple_core_type2 -> LBRACKET tag_field RBRACKET . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LBRACKET tag_field RBRACKET

State 231:
## Known stack suffix:
## LBRACKET row_field
## LR(1) items:
simple_core_type2 -> LBRACKET row_field . BAR row_field_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On BAR shift to state 232
## Reductions:

State 232:
## Known stack suffix:
## LBRACKET row_field BAR
## LR(1) items:
simple_core_type2 -> LBRACKET row_field BAR . row_field_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On BACKQUOTE shift to state 181
-- On type_longident shift to state 183
-- On tag_field shift to state 184
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 197
-- On row_field_list shift to state 233
-- On row_field shift to state 228
-- On name_tag shift to state 202
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 233:
## Known stack suffix:
## LBRACKET row_field BAR row_field_list
## LR(1) items:
row_field_list -> row_field_list . BAR row_field [ RBRACKET BAR ]
simple_core_type2 -> LBRACKET row_field BAR row_field_list . RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On RBRACKET shift to state 234
-- On BAR shift to state 200
## Reductions:

State 234:
## Known stack suffix:
## LBRACKET row_field BAR row_field_list RBRACKET
## LR(1) items:
simple_core_type2 -> LBRACKET row_field BAR row_field_list RBRACKET . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LBRACKET row_field BAR row_field_list RBRACKET

State 235:
## Known stack suffix:
## LBRACKETGREATER opt_bar row_field_list
## LR(1) items:
row_field_list -> row_field_list . BAR row_field [ RBRACKET BAR ]
simple_core_type2 -> LBRACKETGREATER opt_bar row_field_list . RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On RBRACKET shift to state 236
-- On BAR shift to state 200
## Reductions:

State 236:
## Known stack suffix:
## LBRACKETGREATER opt_bar row_field_list RBRACKET
## LR(1) items:
simple_core_type2 -> LBRACKETGREATER opt_bar row_field_list RBRACKET . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LBRACKETGREATER opt_bar row_field_list RBRACKET

State 237:
## Known stack suffix:
## LBRACKETLESS opt_bar row_field_list
## LR(1) items:
row_field_list -> row_field_list . BAR row_field [ RBRACKET GREATER BAR ]
simple_core_type2 -> LBRACKETLESS opt_bar row_field_list . RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LBRACKETLESS opt_bar row_field_list . GREATER name_tag_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On RBRACKET shift to state 238
-- On GREATER shift to state 239
-- On BAR shift to state 200
## Reductions:

State 238:
## Known stack suffix:
## LBRACKETLESS opt_bar row_field_list RBRACKET
## LR(1) items:
simple_core_type2 -> LBRACKETLESS opt_bar row_field_list RBRACKET . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LBRACKETLESS opt_bar row_field_list RBRACKET

State 239:
## Known stack suffix:
## LBRACKETLESS opt_bar row_field_list GREATER
## LR(1) items:
simple_core_type2 -> LBRACKETLESS opt_bar row_field_list GREATER . name_tag_list RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On BACKQUOTE shift to state 181
-- On name_tag_list shift to state 240
-- On name_tag shift to state 243
## Reductions:

State 240:
## Known stack suffix:
## LBRACKETLESS opt_bar row_field_list GREATER name_tag_list
## LR(1) items:
name_tag_list -> name_tag_list . name_tag [ RBRACKET BACKQUOTE ]
simple_core_type2 -> LBRACKETLESS opt_bar row_field_list GREATER name_tag_list . RBRACKET [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On RBRACKET shift to state 241
-- On BACKQUOTE shift to state 181
-- On name_tag shift to state 242
## Reductions:

State 241:
## Known stack suffix:
## LBRACKETLESS opt_bar row_field_list GREATER name_tag_list RBRACKET
## LR(1) items:
simple_core_type2 -> LBRACKETLESS opt_bar row_field_list GREATER name_tag_list RBRACKET . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LBRACKETLESS opt_bar row_field_list GREATER name_tag_list RBRACKET

State 242:
## Known stack suffix:
## name_tag_list name_tag
## LR(1) items:
name_tag_list -> name_tag_list name_tag . [ RBRACKET BACKQUOTE ]
## Transitions:
## Reductions:
-- On RBRACKET BACKQUOTE
--   reduce production name_tag_list -> name_tag_list name_tag

State 243:
## Known stack suffix:
## name_tag
## LR(1) items:
name_tag_list -> name_tag . [ RBRACKET BACKQUOTE ]
## Transitions:
## Reductions:
-- On RBRACKET BACKQUOTE
--   reduce production name_tag_list -> name_tag

State 244:
## Known stack suffix:
## LBRACE
## LR(1) items:
constructor_arguments -> LBRACE . label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On MUTABLE shift to state 245
-- On mutable_flag shift to state 246
-- On label_declarations shift to state 259
-- On label_declaration_semi shift to state 261
-- On label_declaration shift to state 263
## Reductions:
-- On LIDENT
--   reduce production mutable_flag ->

State 245:
## Known stack suffix:
## MUTABLE
## LR(1) items:
mutable_flag -> MUTABLE . [ LIDENT ]
## Transitions:
## Reductions:
-- On LIDENT
--   reduce production mutable_flag -> MUTABLE

State 246:
## Known stack suffix:
## mutable_flag
## LR(1) items:
label_declaration -> mutable_flag . label COLON poly_type_no_attr attributes [ RBRACE ]
label_declaration_semi -> mutable_flag . label COLON poly_type_no_attr attributes SEMI attributes [ RBRACE MUTABLE LIDENT ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 247
## Reductions:

State 247:
## Known stack suffix:
## mutable_flag label
## LR(1) items:
label_declaration -> mutable_flag label . COLON poly_type_no_attr attributes [ RBRACE ]
label_declaration_semi -> mutable_flag label . COLON poly_type_no_attr attributes SEMI attributes [ RBRACE MUTABLE LIDENT ]
## Transitions:
-- On COLON shift to state 248
## Reductions:

State 248:
## Known stack suffix:
## mutable_flag label COLON
## LR(1) items:
label_declaration -> mutable_flag label COLON . poly_type_no_attr attributes [ RBRACE ]
label_declaration_semi -> mutable_flag label COLON . poly_type_no_attr attributes SEMI attributes [ RBRACE MUTABLE LIDENT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 150
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On typevar_list shift to state 249
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On poly_type_no_attr shift to state 254
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 258
-- On core_type2 shift to state 215
## Reductions:

State 249:
## Known stack suffix:
## typevar_list
## LR(1) items:
poly_type_no_attr -> typevar_list . DOT core_type_no_attr [ SEMI RBRACE LBRACKETAT GREATER ]
typevar_list -> typevar_list . QUOTE ident [ QUOTE DOT ]
## Transitions:
-- On QUOTE shift to state 250
-- On DOT shift to state 252
## Reductions:

State 250:
## Known stack suffix:
## typevar_list QUOTE
## LR(1) items:
typevar_list -> typevar_list QUOTE . ident [ QUOTE DOT ]
## Transitions:
-- On UIDENT shift to state 102
-- On LIDENT shift to state 103
-- On ident shift to state 251
## Reductions:

State 251:
## Known stack suffix:
## typevar_list QUOTE ident
## LR(1) items:
typevar_list -> typevar_list QUOTE ident . [ QUOTE DOT ]
## Transitions:
## Reductions:
-- On QUOTE DOT
--   reduce production typevar_list -> typevar_list QUOTE ident

State 252:
## Known stack suffix:
## typevar_list DOT
## LR(1) items:
poly_type_no_attr -> typevar_list DOT . core_type_no_attr [ SEMI RBRACE LBRACKETAT GREATER ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 253
-- On core_type2 shift to state 215
## Reductions:

State 253:
## Known stack suffix:
## typevar_list DOT core_type_no_attr
## LR(1) items:
poly_type_no_attr -> typevar_list DOT core_type_no_attr . [ SEMI RBRACE LBRACKETAT GREATER ]
## Transitions:
## Reductions:
-- On SEMI RBRACE LBRACKETAT GREATER
--   reduce production poly_type_no_attr -> typevar_list DOT core_type_no_attr

State 254:
## Known stack suffix:
## mutable_flag label COLON poly_type_no_attr
## LR(1) items:
label_declaration -> mutable_flag label COLON poly_type_no_attr . attributes [ RBRACE ]
label_declaration_semi -> mutable_flag label COLON poly_type_no_attr . attributes SEMI attributes [ RBRACE MUTABLE LIDENT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 255
-- On attribute shift to state 225
## Reductions:
-- On SEMI RBRACE
--   reduce production attributes ->

State 255:
## Known stack suffix:
## mutable_flag label COLON poly_type_no_attr attributes
## LR(1) items:
label_declaration -> mutable_flag label COLON poly_type_no_attr attributes . [ RBRACE ]
label_declaration_semi -> mutable_flag label COLON poly_type_no_attr attributes . SEMI attributes [ RBRACE MUTABLE LIDENT ]
## Transitions:
-- On SEMI shift to state 256
## Reductions:
-- On RBRACE
--   reduce production label_declaration -> mutable_flag label COLON poly_type_no_attr attributes

State 256:
## Known stack suffix:
## mutable_flag label COLON poly_type_no_attr attributes SEMI
## LR(1) items:
label_declaration_semi -> mutable_flag label COLON poly_type_no_attr attributes SEMI . attributes [ RBRACE MUTABLE LIDENT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 257
-- On attribute shift to state 225
## Reductions:
-- On RBRACE MUTABLE LIDENT
--   reduce production attributes ->

State 257:
## Known stack suffix:
## mutable_flag label COLON poly_type_no_attr attributes SEMI attributes
## LR(1) items:
label_declaration_semi -> mutable_flag label COLON poly_type_no_attr attributes SEMI attributes . [ RBRACE MUTABLE LIDENT ]
## Transitions:
## Reductions:
-- On RBRACE MUTABLE LIDENT
--   reduce production label_declaration_semi -> mutable_flag label COLON poly_type_no_attr attributes SEMI attributes

State 258:
## Known stack suffix:
## core_type_no_attr
## LR(1) items:
poly_type_no_attr -> core_type_no_attr . [ SEMI RBRACE LBRACKETAT GREATER ]
## Transitions:
## Reductions:
-- On SEMI RBRACE LBRACKETAT GREATER
--   reduce production poly_type_no_attr -> core_type_no_attr

State 259:
## Known stack suffix:
## LBRACE label_declarations
## LR(1) items:
constructor_arguments -> LBRACE label_declarations . RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On RBRACE shift to state 260
## Reductions:

State 260:
## Known stack suffix:
## LBRACE label_declarations RBRACE
## LR(1) items:
constructor_arguments -> LBRACE label_declarations RBRACE . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production constructor_arguments -> LBRACE label_declarations RBRACE

State 261:
## Known stack suffix:
## label_declaration_semi
## LR(1) items:
label_declarations -> label_declaration_semi . [ RBRACE ]
label_declarations -> label_declaration_semi . label_declarations [ RBRACE ]
## Transitions:
-- On MUTABLE shift to state 245
-- On mutable_flag shift to state 246
-- On label_declarations shift to state 262
-- On label_declaration_semi shift to state 261
-- On label_declaration shift to state 263
## Reductions:
-- On RBRACE
--   reduce production label_declarations -> label_declaration_semi
-- On LIDENT
--   reduce production mutable_flag ->

State 262:
## Known stack suffix:
## label_declaration_semi label_declarations
## LR(1) items:
label_declarations -> label_declaration_semi label_declarations . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production label_declarations -> label_declaration_semi label_declarations

State 263:
## Known stack suffix:
## label_declaration
## LR(1) items:
label_declarations -> label_declaration . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production label_declarations -> label_declaration

State 264:
## Known stack suffix:
## core_type_list
## LR(1) items:
constructor_arguments -> core_type_list . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
core_type_list -> core_type_list . STAR simple_core_type [ VAL TYPE STAR SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On STAR shift to state 212
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production constructor_arguments -> core_type_list

State 265:
## Known stack suffix:
## OF constructor_arguments
## LR(1) items:
generalized_constructor_arguments -> OF constructor_arguments . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production generalized_constructor_arguments -> OF constructor_arguments

State 266:
## Known stack suffix:
## BAR constr_ident EQUAL
## LR(1) items:
bar_extension_constructor_rebind -> BAR constr_ident EQUAL . constr_longident attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On LPAREN shift to state 268
-- On LBRACKET shift to state 270
-- On FALSE shift to state 272
-- On mod_longident shift to state 273
-- On constr_longident shift to state 275
## Reductions:

State 267:
## Known stack suffix:
## TRUE
## LR(1) items:
constr_longident -> TRUE . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production constr_longident -> TRUE

State 268:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On RPAREN shift to state 269
## Reductions:

State 269:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
constr_longident -> LPAREN RPAREN . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production constr_longident -> LPAREN RPAREN

State 270:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_longident -> LBRACKET . RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On RBRACKET shift to state 271
## Reductions:

State 271:
## Known stack suffix:
## LBRACKET RBRACKET
## LR(1) items:
constr_longident -> LBRACKET RBRACKET . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production constr_longident -> LBRACKET RBRACKET

State 272:
## Known stack suffix:
## FALSE
## LR(1) items:
constr_longident -> FALSE . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production constr_longident -> FALSE

State 273:
## Known stack suffix:
## mod_longident
## LR(1) items:
constr_longident -> mod_longident . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
mod_longident -> mod_longident . DOT UIDENT [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END DOT CLASS BAR ]
## Transitions:
-- On DOT shift to state 274
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production constr_longident -> mod_longident

State 274:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
mod_longident -> mod_longident DOT . UIDENT [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER COLON CLASS BAR AND ]
## Transitions:
-- On UIDENT shift to state 98
## Reductions:

State 275:
## Known stack suffix:
## BAR constr_ident EQUAL constr_longident
## LR(1) items:
bar_extension_constructor_rebind -> BAR constr_ident EQUAL constr_longident . attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 276
-- On attribute shift to state 225
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production attributes ->

State 276:
## Known stack suffix:
## BAR constr_ident EQUAL constr_longident attributes
## LR(1) items:
bar_extension_constructor_rebind -> BAR constr_ident EQUAL constr_longident attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production bar_extension_constructor_rebind -> BAR constr_ident EQUAL constr_longident attributes

State 277:
## Known stack suffix:
## COLON
## LR(1) items:
generalized_constructor_arguments -> COLON . constructor_arguments MINUSGREATER simple_core_type [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
generalized_constructor_arguments -> COLON . simple_core_type [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On LBRACE shift to state 244
-- On type_longident shift to state 183
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 278
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_list shift to state 264
-- On constructor_arguments shift to state 279
## Reductions:

State 278:
## Known stack suffix:
## COLON simple_core_type
## LR(1) items:
core_type_list -> simple_core_type . [ STAR MINUSGREATER ]
generalized_constructor_arguments -> COLON simple_core_type . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
## Reductions:
-- On STAR MINUSGREATER
--   reduce production core_type_list -> simple_core_type
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production generalized_constructor_arguments -> COLON simple_core_type

State 279:
## Known stack suffix:
## COLON constructor_arguments
## LR(1) items:
generalized_constructor_arguments -> COLON constructor_arguments . MINUSGREATER simple_core_type [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On MINUSGREATER shift to state 280
## Reductions:

State 280:
## Known stack suffix:
## COLON constructor_arguments MINUSGREATER
## LR(1) items:
generalized_constructor_arguments -> COLON constructor_arguments MINUSGREATER . simple_core_type [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 281
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 281:
## Known stack suffix:
## COLON constructor_arguments MINUSGREATER simple_core_type
## LR(1) items:
generalized_constructor_arguments -> COLON constructor_arguments MINUSGREATER simple_core_type . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production generalized_constructor_arguments -> COLON constructor_arguments MINUSGREATER simple_core_type

State 282:
## Known stack suffix:
## BAR constr_ident generalized_constructor_arguments
## LR(1) items:
bar_extension_constructor_declaration -> BAR constr_ident generalized_constructor_arguments . attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 283
-- On attribute shift to state 225
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production attributes ->

State 283:
## Known stack suffix:
## BAR constr_ident generalized_constructor_arguments attributes
## LR(1) items:
bar_extension_constructor_declaration -> BAR constr_ident generalized_constructor_arguments attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production bar_extension_constructor_declaration -> BAR constr_ident generalized_constructor_arguments attributes

State 284:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag str_extension_constructors
## LR(1) items:
str_extension_constructors -> str_extension_constructors . bar_extension_constructor_declaration [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
str_extension_constructors -> str_extension_constructors . bar_extension_constructor_rebind [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
str_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag str_extension_constructors . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On BAR shift to state 169
-- On post_item_attributes shift to state 1398
-- On post_item_attribute shift to state 345
-- On bar_extension_constructor_rebind shift to state 1399
-- On bar_extension_constructor_declaration shift to state 1400
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 285:
## Known stack suffix:
## LBRACKETATAT
## LR(1) items:
post_item_attribute -> LBRACKETATAT . attr_id payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On WITH shift to state 3
-- On WHILE shift to state 4
-- On WHEN shift to state 5
-- On VIRTUAL shift to state 6
-- On VAL shift to state 7
-- On UIDENT shift to state 8
-- On TYPE shift to state 9
-- On TRY shift to state 10
-- On TRUE shift to state 11
-- On TO shift to state 12
-- On THEN shift to state 13
-- On STRUCT shift to state 14
-- On SIG shift to state 15
-- On REC shift to state 16
-- On PRIVATE shift to state 17
-- On OR shift to state 18
-- On OPEN shift to state 19
-- On OF shift to state 20
-- On OBJECT shift to state 21
-- On NONREC shift to state 22
-- On NEW shift to state 23
-- On MUTABLE shift to state 24
-- On MODULE shift to state 25
-- On METHOD shift to state 26
-- On MATCH shift to state 27
-- On LIDENT shift to state 28
-- On LET shift to state 29
-- On LAZY shift to state 30
-- On INITIALIZER shift to state 31
-- On INHERIT shift to state 32
-- On INCLUDE shift to state 33
-- On IN shift to state 34
-- On IF shift to state 35
-- On FUNCTOR shift to state 36
-- On FUNCTION shift to state 37
-- On FUN shift to state 38
-- On FOR shift to state 39
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 41
-- On EXCEPTION shift to state 42
-- On END shift to state 43
-- On ELSE shift to state 44
-- On DOWNTO shift to state 45
-- On DONE shift to state 46
-- On DO shift to state 47
-- On CONSTRAINT shift to state 48
-- On CLASS shift to state 49
-- On BEGIN shift to state 50
-- On ASSERT shift to state 51
-- On AS shift to state 52
-- On AND shift to state 53
-- On single_attr_id shift to state 54
-- On attr_id shift to state 286
## Reductions:

State 286:
## Known stack suffix:
## LBRACKETATAT attr_id
## LR(1) items:
post_item_attribute -> LBRACKETATAT attr_id . payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On WHILE shift to state 1
-- On VAL shift to state 60
-- On UIDENT shift to state 94
-- On TYPE shift to state 154
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 327
-- On SEMISEMI shift to state 338
-- On QUESTIONQUESTION shift to state 290
-- On QUESTION shift to state 967
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OPEN shift to state 339
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 347
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKETATATAT shift to state 971
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INCLUDE shift to state 973
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 987
-- On COLON shift to state 997
-- On CLASS shift to state 1203
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On value_description shift to state 1320
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On type_declarations shift to state 1321
-- On type_declaration shift to state 1155
-- On toplevel_directive shift to state 1322
-- On subtractive shift to state 614
-- On structure_tail shift to state 1323
-- On structure_item shift to state 1324
-- On structure shift to state 1362
-- On str_type_extension shift to state 1326
-- On str_include_statement shift to state 1327
-- On str_exception_declaration shift to state 1328
-- On simple_expr shift to state 615
-- On sig_exception_declaration shift to state 1329
-- On seq_expr shift to state 1358
-- On rec_module_bindings shift to state 1330
-- On rec_module_binding shift to state 1337
-- On primitive_declaration shift to state 1338
-- On payload shift to state 1396
-- On open_statement shift to state 1339
-- On name_tag shift to state 635
-- On module_type_declaration shift to state 1340
-- On module_binding shift to state 1341
-- On mod_longident shift to state 493
-- On let_bindings shift to state 1361
-- On let_binding shift to state 640
-- On label shift to state 641
-- On item_extension shift to state 1343
-- On floating_attribute shift to state 1345
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On class_type_declarations shift to state 1346
-- On class_type_declaration shift to state 1188
-- On class_declarations shift to state 1347
-- On class_declaration shift to state 1356
-- On additive shift to state 653
## Reductions:
-- On RBRACKET
--   reduce production structure_tail ->

State 287:
## Known stack suffix:
## TRY
## LR(1) items:
expr -> TRY . ext_attributes seq_expr WITH opt_bar match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 288
-- On attribute shift to state 295
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production ext_attributes ->

State 288:
## Known stack suffix:
## TRY ext_attributes
## LR(1) items:
expr -> TRY ext_attributes . seq_expr WITH opt_bar match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 1392
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 289:
## Known stack suffix:
## STRING
## LR(1) items:
constant -> STRING . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production constant -> STRING

State 290:
## Known stack suffix:
## QUESTIONQUESTION
## LR(1) items:
simple_expr -> QUESTIONQUESTION . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> QUESTIONQUESTION

State 291:
## Known stack suffix:
## PREFIXOP
## LR(1) items:
simple_expr -> PREFIXOP . simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 1391
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:

State 292:
## Known stack suffix:
## NEW
## LR(1) items:
simple_expr -> NEW . ext_attributes class_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 293
-- On attribute shift to state 295
## Reductions:
-- On UIDENT LIDENT
--   reduce production ext_attributes ->

State 293:
## Known stack suffix:
## NEW ext_attributes
## LR(1) items:
simple_expr -> NEW ext_attributes . class_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On LIDENT shift to state 95
-- On mod_longident shift to state 96
-- On class_longident shift to state 294
## Reductions:

State 294:
## Known stack suffix:
## NEW ext_attributes class_longident
## LR(1) items:
simple_expr -> NEW ext_attributes class_longident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> NEW ext_attributes class_longident

State 295:
## Known stack suffix:
## attribute
## LR(1) items:
ext_attributes -> attribute . attributes [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TRY TRUE TILDE STRUCT STRING SIG SHARP REC QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXCEPTION END CONSTRAINT CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 296
-- On attribute shift to state 225
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TRY TRUE TILDE STRUCT STRING SIG SHARP REC QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXCEPTION END CONSTRAINT CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production attributes ->

State 296:
## Known stack suffix:
## attribute attributes
## LR(1) items:
ext_attributes -> attribute attributes . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TRY TRUE TILDE STRUCT STRING SIG SHARP REC QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXCEPTION END CONSTRAINT CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TRY TRUE TILDE STRUCT STRING SIG SHARP REC QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXCEPTION END CONSTRAINT CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production ext_attributes -> attribute attributes

State 297:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr type_constraint RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . MODULE ext_attributes module_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . MODULE ext_attributes module_expr COLON package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
val_ident -> LPAREN . operator RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On STAR shift to state 63
-- On SHARPOP shift to state 64
-- On RPAREN shift to state 269
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 298
-- On PLUSEQ shift to state 66
-- On PLUSDOT shift to state 439
-- On PLUS shift to state 440
-- On PERCENT shift to state 69
-- On OR shift to state 70
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 441
-- On MINUSDOT shift to state 466
-- On MINUS shift to state 467
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LESS shift to state 73
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INFIXOP4 shift to state 74
-- On INFIXOP3 shift to state 75
-- On INFIXOP2 shift to state 76
-- On INFIXOP1 shift to state 77
-- On INFIXOP0 shift to state 78
-- On IF shift to state 503
-- On GREATER shift to state 79
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EQUAL shift to state 80
-- On COLONEQUAL shift to state 81
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BARBAR shift to state 82
-- On BANG shift to state 853
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On AMPERSAND shift to state 84
-- On AMPERAMPER shift to state 85
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 939
-- On operator shift to state 86
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 298:
## Known stack suffix:
## PREFIXOP
## LR(1) items:
operator -> PREFIXOP . [ RPAREN ]
simple_expr -> PREFIXOP . simple_expr [ UIDENT TRUE TILDE STRING STAR SHARPOP SHARP SEMI RPAREN QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL NEW MINUSDOT MINUS LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER FLOAT FALSE EQUAL DOT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BEGIN BARBAR BANG BACKQUOTE AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 1391
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:
-- On RPAREN
--   reduce production operator -> PREFIXOP

State 299:
## Known stack suffix:
## LBRACKETBAR
## LR(1) items:
simple_expr -> LBRACKETBAR . expr_semi_list opt_semi BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR . BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BARRBRACKET shift to state 1387
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_semi_list shift to state 1388
-- On expr_comma_list shift to state 643
-- On expr shift to state 863
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 300:
## Known stack suffix:
## PLUSDOT
## LR(1) items:
additive -> PLUSDOT . [ WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production additive -> PLUSDOT

State 301:
## Known stack suffix:
## PLUS
## LR(1) items:
additive -> PLUS . [ WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production additive -> PLUS

State 302:
## Known stack suffix:
## OBJECT
## LR(1) items:
expr -> OBJECT . ext_attributes class_structure END [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 303
-- On attribute shift to state 295
## Reductions:
-- On VAL METHOD LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production ext_attributes ->

State 303:
## Known stack suffix:
## OBJECT ext_attributes
## LR(1) items:
expr -> OBJECT ext_attributes . class_structure END [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LPAREN shift to state 304
-- On class_structure shift to state 1385
-- On class_self_pattern shift to state 1213
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_self_pattern ->

State 304:
## Known stack suffix:
## LPAREN
## LR(1) items:
class_self_pattern -> LPAREN . pattern RPAREN [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
class_self_pattern -> LPAREN . pattern COLON core_type RPAREN [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 1380
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 305:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
simple_pattern_not_ident -> UNDERSCORE . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> UNDERSCORE

State 306:
## Known stack suffix:
## SHARP
## LR(1) items:
simple_pattern_not_ident -> SHARP . type_longident [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UIDENT shift to state 92
-- On LIDENT shift to state 172
-- On type_longident shift to state 307
-- On mod_ext_longident shift to state 189
## Reductions:

State 307:
## Known stack suffix:
## SHARP type_longident
## LR(1) items:
simple_pattern_not_ident -> SHARP type_longident . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> SHARP type_longident

State 308:
## Known stack suffix:
## PLUS
## LR(1) items:
signed_constant -> PLUS . INT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
signed_constant -> PLUS . FLOAT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On INT shift to state 309
-- On FLOAT shift to state 310
## Reductions:

State 309:
## Known stack suffix:
## PLUS INT
## LR(1) items:
signed_constant -> PLUS INT . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production signed_constant -> PLUS INT

State 310:
## Known stack suffix:
## PLUS FLOAT
## LR(1) items:
signed_constant -> PLUS FLOAT . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production signed_constant -> PLUS FLOAT

State 311:
## Known stack suffix:
## MINUS
## LR(1) items:
signed_constant -> MINUS . INT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
signed_constant -> MINUS . FLOAT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On INT shift to state 312
-- On FLOAT shift to state 313
## Reductions:

State 312:
## Known stack suffix:
## MINUS INT
## LR(1) items:
signed_constant -> MINUS INT . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production signed_constant -> MINUS INT

State 313:
## Known stack suffix:
## MINUS FLOAT
## LR(1) items:
signed_constant -> MINUS FLOAT . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production signed_constant -> MINUS FLOAT

State 314:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ WHEN UNDERSCORE UIDENT TRUE STRING SHARP SEMI RPAREN RBRACKET RBRACE PLUS MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT FLOAT FALSE EXCEPTION EQUAL COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
pattern_gen -> LPAREN . COLONCOLON RPAREN LPAREN pattern COMMA pattern RPAREN [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern_not_ident -> LPAREN . pattern RPAREN [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern_not_ident -> LPAREN . MODULE ext_attributes UIDENT RPAREN [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern_not_ident -> LPAREN . MODULE ext_attributes UIDENT COLON package_type RPAREN [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
val_ident -> LPAREN . operator RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On STAR shift to state 63
-- On SHARPOP shift to state 64
-- On SHARP shift to state 306
-- On RPAREN shift to state 269
-- On PREFIXOP shift to state 65
-- On PLUSEQ shift to state 66
-- On PLUSDOT shift to state 67
-- On PLUS shift to state 315
-- On PERCENT shift to state 69
-- On OR shift to state 70
-- On MODULE shift to state 316
-- On MINUSDOT shift to state 71
-- On MINUS shift to state 528
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LESS shift to state 73
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On INFIXOP4 shift to state 74
-- On INFIXOP3 shift to state 75
-- On INFIXOP2 shift to state 76
-- On INFIXOP1 shift to state 77
-- On INFIXOP0 shift to state 78
-- On GREATER shift to state 79
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On EQUAL shift to state 80
-- On COLONEQUAL shift to state 81
-- On COLONCOLON shift to state 1373
-- On CHAR shift to state 484
-- On BARBAR shift to state 82
-- On BANG shift to state 83
-- On BACKQUOTE shift to state 181
-- On AMPERSAND shift to state 84
-- On AMPERAMPER shift to state 85
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 573
-- On operator shift to state 86
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 315:
## Known stack suffix:
## PLUS
## LR(1) items:
operator -> PLUS . [ RPAREN ]
signed_constant -> PLUS . INT [ RPAREN LBRACKETAT DOTDOT COMMA COLONCOLON COLON BAR AS ]
signed_constant -> PLUS . FLOAT [ RPAREN LBRACKETAT DOTDOT COMMA COLONCOLON COLON BAR AS ]
## Transitions:
-- On INT shift to state 309
-- On FLOAT shift to state 310
## Reductions:
-- On RPAREN
--   reduce production operator -> PLUS

State 316:
## Known stack suffix:
## LPAREN MODULE
## LR(1) items:
simple_pattern_not_ident -> LPAREN MODULE . ext_attributes UIDENT RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> LPAREN MODULE . ext_attributes UIDENT COLON package_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 317
-- On attribute shift to state 295
## Reductions:
-- On UIDENT
--   reduce production ext_attributes ->

State 317:
## Known stack suffix:
## LPAREN MODULE ext_attributes
## LR(1) items:
simple_pattern_not_ident -> LPAREN MODULE ext_attributes . UIDENT RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> LPAREN MODULE ext_attributes . UIDENT COLON package_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UIDENT shift to state 318
## Reductions:

State 318:
## Known stack suffix:
## LPAREN MODULE ext_attributes UIDENT
## LR(1) items:
simple_pattern_not_ident -> LPAREN MODULE ext_attributes UIDENT . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> LPAREN MODULE ext_attributes UIDENT . COLON package_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On RPAREN shift to state 319
-- On COLON shift to state 320
## Reductions:

State 319:
## Known stack suffix:
## LPAREN MODULE ext_attributes UIDENT RPAREN
## LR(1) items:
simple_pattern_not_ident -> LPAREN MODULE ext_attributes UIDENT RPAREN . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> LPAREN MODULE ext_attributes UIDENT RPAREN

State 320:
## Known stack suffix:
## LPAREN MODULE ext_attributes UIDENT COLON
## LR(1) items:
simple_pattern_not_ident -> LPAREN MODULE ext_attributes UIDENT COLON . package_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On package_type shift to state 1371
-- On mty_longident shift to state 361
-- On module_type shift to state 465
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 321:
## Known stack suffix:
## MODULE
## LR(1) items:
module_type -> MODULE . TYPE OF attributes module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On TYPE shift to state 322
## Reductions:

State 322:
## Known stack suffix:
## MODULE TYPE
## LR(1) items:
module_type -> MODULE TYPE . OF attributes module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On OF shift to state 323
## Reductions:

State 323:
## Known stack suffix:
## MODULE TYPE OF
## LR(1) items:
module_type -> MODULE TYPE OF . attributes module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 324
-- On attribute shift to state 225
## Reductions:
-- On UIDENT STRUCT LPAREN LBRACKETPERCENT FUNCTOR
--   reduce production attributes ->

State 324:
## Known stack suffix:
## MODULE TYPE OF attributes
## LR(1) items:
module_type -> MODULE TYPE OF attributes . module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On STRUCT shift to state 325
-- On LPAREN shift to state 431
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 443
-- On paren_module_expr shift to state 447
-- On module_expr shift to state 1370
-- On mod_longident shift to state 458
-- On extension shift to state 459
## Reductions:

State 325:
## Known stack suffix:
## STRUCT
## LR(1) items:
module_expr -> STRUCT . attributes structure END [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 326
-- On attribute shift to state 225
## Reductions:
-- On WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production attributes ->

State 326:
## Known stack suffix:
## STRUCT attributes
## LR(1) items:
module_expr -> STRUCT attributes . structure END [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On WHILE shift to state 1
-- On VAL shift to state 60
-- On UIDENT shift to state 94
-- On TYPE shift to state 154
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 327
-- On SEMISEMI shift to state 338
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OPEN shift to state 339
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 347
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKETATATAT shift to state 971
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INCLUDE shift to state 973
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 987
-- On CLASS shift to state 1203
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On value_description shift to state 1320
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On type_declarations shift to state 1321
-- On type_declaration shift to state 1155
-- On toplevel_directive shift to state 1322
-- On subtractive shift to state 614
-- On structure_tail shift to state 1323
-- On structure_item shift to state 1324
-- On structure shift to state 1368
-- On str_type_extension shift to state 1326
-- On str_include_statement shift to state 1327
-- On str_exception_declaration shift to state 1328
-- On simple_expr shift to state 615
-- On sig_exception_declaration shift to state 1329
-- On seq_expr shift to state 1358
-- On rec_module_bindings shift to state 1330
-- On rec_module_binding shift to state 1337
-- On primitive_declaration shift to state 1338
-- On open_statement shift to state 1339
-- On name_tag shift to state 635
-- On module_type_declaration shift to state 1340
-- On module_binding shift to state 1341
-- On mod_longident shift to state 493
-- On let_bindings shift to state 1361
-- On let_binding shift to state 640
-- On label shift to state 641
-- On item_extension shift to state 1343
-- On floating_attribute shift to state 1345
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On class_type_declarations shift to state 1346
-- On class_type_declaration shift to state 1188
-- On class_declarations shift to state 1347
-- On class_declaration shift to state 1356
-- On additive shift to state 653
## Reductions:
-- On END
--   reduce production structure_tail ->

State 327:
## Known stack suffix:
## SHARP
## LR(1) items:
toplevel_directive -> SHARP . ident [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP . ident STRING [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP . ident INT [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP . ident val_longident [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP . ident mod_longident [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP . ident FALSE [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP . ident TRUE [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
-- On UIDENT shift to state 102
-- On LIDENT shift to state 103
-- On ident shift to state 328
## Reductions:

State 328:
## Known stack suffix:
## SHARP ident
## LR(1) items:
toplevel_directive -> SHARP ident . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP ident . STRING [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP ident . INT [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP ident . val_longident [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP ident . mod_longident [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP ident . FALSE [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP ident . TRUE [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 329
-- On STRING shift to state 330
-- On LPAREN shift to state 62
-- On LIDENT shift to state 88
-- On INT shift to state 331
-- On FALSE shift to state 332
-- On val_longident shift to state 333
-- On val_ident shift to state 334
-- On mod_longident shift to state 335
## Reductions:
-- On WHILE VAL TYPE TRY SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INCLUDE IF FUNCTION FUN FOR FLOAT EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production toplevel_directive -> SHARP ident

State 329:
## Known stack suffix:
## SHARP ident TRUE
## LR(1) items:
toplevel_directive -> SHARP ident TRUE . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production toplevel_directive -> SHARP ident TRUE

State 330:
## Known stack suffix:
## SHARP ident STRING
## LR(1) items:
toplevel_directive -> SHARP ident STRING . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production toplevel_directive -> SHARP ident STRING

State 331:
## Known stack suffix:
## SHARP ident INT
## LR(1) items:
toplevel_directive -> SHARP ident INT . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production toplevel_directive -> SHARP ident INT

State 332:
## Known stack suffix:
## SHARP ident FALSE
## LR(1) items:
toplevel_directive -> SHARP ident FALSE . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production toplevel_directive -> SHARP ident FALSE

State 333:
## Known stack suffix:
## SHARP ident val_longident
## LR(1) items:
toplevel_directive -> SHARP ident val_longident . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production toplevel_directive -> SHARP ident val_longident

State 334:
## Known stack suffix:
## val_ident
## LR(1) items:
val_longident -> val_ident . [ WITH WHILE VAL UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHILE VAL UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER
--   reduce production val_longident -> val_ident

State 335:
## Known stack suffix:
## SHARP ident mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DOT CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
toplevel_directive -> SHARP ident mod_longident . [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
val_longident -> mod_longident . DOT val_ident [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
-- On DOT shift to state 336
## Reductions:
-- On WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production toplevel_directive -> SHARP ident mod_longident

State 336:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
mod_longident -> mod_longident DOT . UIDENT [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DOT CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
val_longident -> mod_longident DOT . val_ident [ WHILE VAL UIDENT TYPE TRY TRUE STRING SHARP SEMISEMI RBRACKET QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY INT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END CLASS CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
-- On UIDENT shift to state 98
-- On LPAREN shift to state 62
-- On LIDENT shift to state 88
-- On val_ident shift to state 337
## Reductions:

State 337:
## Known stack suffix:
## mod_longident DOT val_ident
## LR(1) items:
val_longident -> mod_longident DOT val_ident . [ WITH WHILE VAL UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHILE VAL UIDENT TYPE TRY TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER
--   reduce production val_longident -> mod_longident DOT val_ident

State 338:
## Known stack suffix:
## SEMISEMI
## LR(1) items:
structure_tail -> SEMISEMI . structure [ RBRACKET EOF END ]
## Transitions:
-- On WHILE shift to state 1
-- On VAL shift to state 60
-- On UIDENT shift to state 94
-- On TYPE shift to state 154
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 327
-- On SEMISEMI shift to state 338
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OPEN shift to state 339
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 347
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKETATATAT shift to state 971
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INCLUDE shift to state 973
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 987
-- On CLASS shift to state 1203
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On value_description shift to state 1320
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On type_declarations shift to state 1321
-- On type_declaration shift to state 1155
-- On toplevel_directive shift to state 1322
-- On subtractive shift to state 614
-- On structure_tail shift to state 1323
-- On structure_item shift to state 1324
-- On structure shift to state 1367
-- On str_type_extension shift to state 1326
-- On str_include_statement shift to state 1327
-- On str_exception_declaration shift to state 1328
-- On simple_expr shift to state 615
-- On sig_exception_declaration shift to state 1329
-- On seq_expr shift to state 1358
-- On rec_module_bindings shift to state 1330
-- On rec_module_binding shift to state 1337
-- On primitive_declaration shift to state 1338
-- On open_statement shift to state 1339
-- On name_tag shift to state 635
-- On module_type_declaration shift to state 1340
-- On module_binding shift to state 1341
-- On mod_longident shift to state 493
-- On let_bindings shift to state 1361
-- On let_binding shift to state 640
-- On label shift to state 641
-- On item_extension shift to state 1343
-- On floating_attribute shift to state 1345
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On class_type_declarations shift to state 1346
-- On class_type_declaration shift to state 1188
-- On class_declarations shift to state 1347
-- On class_declaration shift to state 1356
-- On additive shift to state 653
## Reductions:
-- On RBRACKET EOF END
--   reduce production structure_tail ->

State 339:
## Known stack suffix:
## OPEN
## LR(1) items:
open_statement -> OPEN . override_flag ext_attributes mod_longident post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On BANG shift to state 340
-- On override_flag shift to state 341
## Reductions:
-- On UIDENT PERCENT LBRACKETAT
--   reduce production override_flag ->

State 340:
## Known stack suffix:
## BANG
## LR(1) items:
override_flag -> BANG . [ VIRTUAL UIDENT PRIVATE PERCENT OBJECT MUTABLE LPAREN LIDENT LET LBRACKETPERCENT LBRACKETAT LBRACKET FUN ]
## Transitions:
## Reductions:
-- On VIRTUAL UIDENT PRIVATE PERCENT OBJECT MUTABLE LPAREN LIDENT LET LBRACKETPERCENT LBRACKETAT LBRACKET FUN
--   reduce production override_flag -> BANG

State 341:
## Known stack suffix:
## OPEN override_flag
## LR(1) items:
open_statement -> OPEN override_flag . ext_attributes mod_longident post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 342
-- On attribute shift to state 295
## Reductions:
-- On UIDENT
--   reduce production ext_attributes ->

State 342:
## Known stack suffix:
## OPEN override_flag ext_attributes
## LR(1) items:
open_statement -> OPEN override_flag ext_attributes . mod_longident post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 94
-- On mod_longident shift to state 343
## Reductions:

State 343:
## Known stack suffix:
## OPEN override_flag ext_attributes mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END DOT CLASS ]
open_statement -> OPEN override_flag ext_attributes mod_longident . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On DOT shift to state 274
-- On post_item_attributes shift to state 344
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 344:
## Known stack suffix:
## OPEN override_flag ext_attributes mod_longident post_item_attributes
## LR(1) items:
open_statement -> OPEN override_flag ext_attributes mod_longident post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production open_statement -> OPEN override_flag ext_attributes mod_longident post_item_attributes

State 345:
## Known stack suffix:
## post_item_attribute
## LR(1) items:
post_item_attributes -> post_item_attribute . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 346
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production post_item_attributes ->

State 346:
## Known stack suffix:
## post_item_attribute post_item_attributes
## LR(1) items:
post_item_attributes -> post_item_attribute post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production post_item_attributes -> post_item_attribute post_item_attributes

State 347:
## Known stack suffix:
## MODULE
## LR(1) items:
module_binding -> MODULE . ext_attributes UIDENT module_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_type_declaration -> MODULE . TYPE ext_attributes ident module_type_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
rec_module_binding -> MODULE . ext_attributes REC UIDENT module_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On TYPE shift to state 348
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 428
-- On attribute shift to state 295
## Reductions:
-- On UIDENT REC
--   reduce production ext_attributes ->

State 348:
## Known stack suffix:
## MODULE TYPE
## LR(1) items:
module_type_declaration -> MODULE TYPE . ext_attributes ident module_type_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 349
-- On attribute shift to state 295
## Reductions:
-- On UIDENT LIDENT
--   reduce production ext_attributes ->

State 349:
## Known stack suffix:
## MODULE TYPE ext_attributes
## LR(1) items:
module_type_declaration -> MODULE TYPE ext_attributes . ident module_type_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 102
-- On LIDENT shift to state 103
-- On ident shift to state 350
## Reductions:

State 350:
## Known stack suffix:
## MODULE TYPE ext_attributes ident
## LR(1) items:
module_type_declaration -> MODULE TYPE ext_attributes ident . module_type_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On EQUAL shift to state 351
-- On module_type_declaration_body shift to state 426
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production module_type_declaration_body ->

State 351:
## Known stack suffix:
## EQUAL
## LR(1) items:
module_type_declaration_body -> EQUAL . module_type [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 425
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 352:
## Known stack suffix:
## LPAREN
## LR(1) items:
module_type -> LPAREN . module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 423
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 353:
## Known stack suffix:
## FUNCTOR
## LR(1) items:
module_type -> FUNCTOR . attributes functor_args MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 354
-- On attribute shift to state 225
## Reductions:
-- On LPAREN
--   reduce production attributes ->

State 354:
## Known stack suffix:
## FUNCTOR attributes
## LR(1) items:
module_type -> FUNCTOR attributes . functor_args MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On LPAREN shift to state 355
-- On functor_args shift to state 418
-- On functor_arg shift to state 422
## Reductions:

State 355:
## Known stack suffix:
## LPAREN
## LR(1) items:
functor_arg -> LPAREN . RPAREN [ MINUSGREATER LPAREN EQUAL COLON ]
functor_arg -> LPAREN . functor_arg_name COLON module_type RPAREN [ MINUSGREATER LPAREN EQUAL COLON ]
## Transitions:
-- On UNDERSCORE shift to state 356
-- On UIDENT shift to state 357
-- On RPAREN shift to state 358
-- On functor_arg_name shift to state 359
## Reductions:

State 356:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
functor_arg_name -> UNDERSCORE . [ COLON ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production functor_arg_name -> UNDERSCORE

State 357:
## Known stack suffix:
## UIDENT
## LR(1) items:
functor_arg_name -> UIDENT . [ COLON ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production functor_arg_name -> UIDENT

State 358:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
functor_arg -> LPAREN RPAREN . [ MINUSGREATER LPAREN EQUAL COLON ]
## Transitions:
## Reductions:
-- On MINUSGREATER LPAREN EQUAL COLON
--   reduce production functor_arg -> LPAREN RPAREN

State 359:
## Known stack suffix:
## LPAREN functor_arg_name
## LR(1) items:
functor_arg -> LPAREN functor_arg_name . COLON module_type RPAREN [ MINUSGREATER LPAREN EQUAL COLON ]
## Transitions:
-- On COLON shift to state 360
## Reductions:

State 360:
## Known stack suffix:
## LPAREN functor_arg_name COLON
## LR(1) items:
functor_arg -> LPAREN functor_arg_name COLON . module_type RPAREN [ MINUSGREATER LPAREN EQUAL COLON ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 362
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 361:
## Known stack suffix:
## mty_longident
## LR(1) items:
module_type -> mty_longident . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production module_type -> mty_longident

State 362:
## Known stack suffix:
## LPAREN functor_arg_name COLON module_type
## LR(1) items:
functor_arg -> LPAREN functor_arg_name COLON module_type . RPAREN [ MINUSGREATER LPAREN EQUAL COLON ]
module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN MINUSGREATER LBRACKETAT ]
module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## Transitions:
-- On WITH shift to state 363
-- On RPAREN shift to state 408
-- On MINUSGREATER shift to state 409
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 411
## Reductions:

State 363:
## Known stack suffix:
## module_type WITH
## LR(1) items:
module_type -> module_type WITH . with_constraints [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On TYPE shift to state 364
-- On MODULE shift to state 397
-- On with_constraints shift to state 404
-- On with_constraint shift to state 407
## Reductions:

State 364:
## Known stack suffix:
## TYPE
## LR(1) items:
with_constraint -> TYPE . type_parameters label_longident with_type_binder core_type_no_attr constraints [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
with_constraint -> TYPE . type_parameters label COLONEQUAL core_type_no_attr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On PLUS shift to state 119
-- On MINUS shift to state 120
-- On LPAREN shift to state 365
-- On type_variance shift to state 366
-- On type_parameters shift to state 375
-- On type_parameter shift to state 396
## Reductions:
-- On UIDENT LIDENT
--   reduce production type_parameters ->
-- On QUOTE
--   reduce production type_variance ->

State 365:
## Known stack suffix:
## LPAREN
## LR(1) items:
type_parameters -> LPAREN . type_parameter_list RPAREN [ UIDENT LIDENT ]
## Transitions:
-- On PLUS shift to state 119
-- On MINUS shift to state 120
-- On type_variance shift to state 366
-- On type_parameter_list shift to state 370
-- On type_parameter shift to state 374
## Reductions:
-- On QUOTE
--   reduce production type_variance ->

State 366:
## Known stack suffix:
## type_variance
## LR(1) items:
type_parameter -> type_variance . type_variable [ UIDENT RPAREN RBRACKET LIDENT COMMA ]
## Transitions:
-- On QUOTE shift to state 367
-- On type_variable shift to state 369
## Reductions:

State 367:
## Known stack suffix:
## QUOTE
## LR(1) items:
type_variable -> QUOTE . ident [ UIDENT RPAREN RBRACKET LIDENT COMMA ]
## Transitions:
-- On UIDENT shift to state 102
-- On LIDENT shift to state 103
-- On ident shift to state 368
## Reductions:

State 368:
## Known stack suffix:
## QUOTE ident
## LR(1) items:
type_variable -> QUOTE ident . [ UIDENT RPAREN RBRACKET LIDENT COMMA ]
## Transitions:
## Reductions:
-- On UIDENT RPAREN RBRACKET LIDENT COMMA
--   reduce production type_variable -> QUOTE ident

State 369:
## Known stack suffix:
## type_variance type_variable
## LR(1) items:
type_parameter -> type_variance type_variable . [ UIDENT RPAREN RBRACKET LIDENT COMMA ]
## Transitions:
## Reductions:
-- On UIDENT RPAREN RBRACKET LIDENT COMMA
--   reduce production type_parameter -> type_variance type_variable

State 370:
## Known stack suffix:
## LPAREN type_parameter_list
## LR(1) items:
type_parameter_list -> type_parameter_list . COMMA type_parameter [ RPAREN COMMA ]
type_parameters -> LPAREN type_parameter_list . RPAREN [ UIDENT LIDENT ]
## Transitions:
-- On RPAREN shift to state 371
-- On COMMA shift to state 372
## Reductions:

State 371:
## Known stack suffix:
## LPAREN type_parameter_list RPAREN
## LR(1) items:
type_parameters -> LPAREN type_parameter_list RPAREN . [ UIDENT LIDENT ]
## Transitions:
## Reductions:
-- On UIDENT LIDENT
--   reduce production type_parameters -> LPAREN type_parameter_list RPAREN

State 372:
## Known stack suffix:
## type_parameter_list COMMA
## LR(1) items:
type_parameter_list -> type_parameter_list COMMA . type_parameter [ RPAREN RBRACKET COMMA ]
## Transitions:
-- On PLUS shift to state 119
-- On MINUS shift to state 120
-- On type_variance shift to state 366
-- On type_parameter shift to state 373
## Reductions:
-- On QUOTE
--   reduce production type_variance ->

State 373:
## Known stack suffix:
## type_parameter_list COMMA type_parameter
## LR(1) items:
type_parameter_list -> type_parameter_list COMMA type_parameter . [ RPAREN RBRACKET COMMA ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET COMMA
--   reduce production type_parameter_list -> type_parameter_list COMMA type_parameter

State 374:
## Known stack suffix:
## type_parameter
## LR(1) items:
type_parameter_list -> type_parameter . [ RPAREN RBRACKET COMMA ]
## Transitions:
## Reductions:
-- On RPAREN RBRACKET COMMA
--   reduce production type_parameter_list -> type_parameter

State 375:
## Known stack suffix:
## TYPE type_parameters
## LR(1) items:
with_constraint -> TYPE type_parameters . label_longident with_type_binder core_type_no_attr constraints [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
with_constraint -> TYPE type_parameters . label COLONEQUAL core_type_no_attr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On LIDENT shift to state 376
-- On mod_longident shift to state 377
-- On label_longident shift to state 380
-- On label shift to state 393
## Reductions:

State 376:
## Known stack suffix:
## LIDENT
## LR(1) items:
label -> LIDENT . [ COLONEQUAL ]
label_longident -> LIDENT . [ EQUAL ]
## Transitions:
## Reductions:
-- On COLONEQUAL
--   reduce production label -> LIDENT
-- On EQUAL
--   reduce production label_longident -> LIDENT

State 377:
## Known stack suffix:
## mod_longident
## LR(1) items:
label_longident -> mod_longident . DOT LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESSMINUS LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
## Transitions:
-- On DOT shift to state 378
## Reductions:

State 378:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
label_longident -> mod_longident DOT . LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESSMINUS LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident DOT . UIDENT [ DOT ]
## Transitions:
-- On UIDENT shift to state 98
-- On LIDENT shift to state 379
## Reductions:

State 379:
## Known stack suffix:
## mod_longident DOT LIDENT
## LR(1) items:
label_longident -> mod_longident DOT LIDENT . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESSMINUS LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESSMINUS LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production label_longident -> mod_longident DOT LIDENT

State 380:
## Known stack suffix:
## TYPE type_parameters label_longident
## LR(1) items:
with_constraint -> TYPE type_parameters label_longident . with_type_binder core_type_no_attr constraints [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On EQUAL shift to state 381
-- On with_type_binder shift to state 383
## Reductions:

State 381:
## Known stack suffix:
## EQUAL
## LR(1) items:
with_type_binder -> EQUAL . [ UNDERSCORE UIDENT SHARP QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET ]
with_type_binder -> EQUAL . PRIVATE [ UNDERSCORE UIDENT SHARP QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET ]
## Transitions:
-- On PRIVATE shift to state 382
## Reductions:
-- On UNDERSCORE UIDENT SHARP QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET
--   reduce production with_type_binder -> EQUAL

State 382:
## Known stack suffix:
## EQUAL PRIVATE
## LR(1) items:
with_type_binder -> EQUAL PRIVATE . [ UNDERSCORE UIDENT SHARP QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT SHARP QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET
--   reduce production with_type_binder -> EQUAL PRIVATE

State 383:
## Known stack suffix:
## TYPE type_parameters label_longident with_type_binder
## LR(1) items:
with_constraint -> TYPE type_parameters label_longident with_type_binder . core_type_no_attr constraints [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 384
-- On core_type2 shift to state 215
## Reductions:

State 384:
## Known stack suffix:
## TYPE type_parameters label_longident with_type_binder core_type_no_attr
## LR(1) items:
with_constraint -> TYPE type_parameters label_longident with_type_binder core_type_no_attr . constraints [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On constraints shift to state 385
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLONGREATER CLASS AND
--   reduce production constraints ->

State 385:
## Known stack suffix:
## TYPE type_parameters label_longident with_type_binder core_type_no_attr constraints
## LR(1) items:
constraints -> constraints . CONSTRAINT constrain [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLONGREATER CLASS AND ]
with_constraint -> TYPE type_parameters label_longident with_type_binder core_type_no_attr constraints . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On CONSTRAINT shift to state 386
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production with_constraint -> TYPE type_parameters label_longident with_type_binder core_type_no_attr constraints

State 386:
## Known stack suffix:
## constraints CONSTRAINT
## LR(1) items:
constraints -> constraints CONSTRAINT . constrain [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLONGREATER CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 388
-- On constrain shift to state 392
## Reductions:

State 387:
## Known stack suffix:
## core_type_no_attr
## LR(1) items:
core_type -> core_type_no_attr . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS AND
--   reduce production core_type -> core_type_no_attr

State 388:
## Known stack suffix:
## core_type
## LR(1) items:
constrain -> core_type . EQUAL core_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLONGREATER CLASS AND ]
core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On EQUAL shift to state 389
-- On attribute shift to state 391
## Reductions:

State 389:
## Known stack suffix:
## core_type EQUAL
## LR(1) items:
constrain -> core_type EQUAL . core_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLONGREATER CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 390
## Reductions:

State 390:
## Known stack suffix:
## core_type EQUAL core_type
## LR(1) items:
constrain -> core_type EQUAL core_type . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLONGREATER CLASS AND ]
core_type -> core_type . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLONGREATER CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLONGREATER CLASS AND
--   reduce production constrain -> core_type EQUAL core_type

State 391:
## Known stack suffix:
## core_type attribute
## LR(1) items:
core_type -> core_type attribute . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS AND
--   reduce production core_type -> core_type attribute

State 392:
## Known stack suffix:
## constraints CONSTRAINT constrain
## LR(1) items:
constraints -> constraints CONSTRAINT constrain . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COLONGREATER CLASS AND
--   reduce production constraints -> constraints CONSTRAINT constrain

State 393:
## Known stack suffix:
## TYPE type_parameters label
## LR(1) items:
with_constraint -> TYPE type_parameters label . COLONEQUAL core_type_no_attr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On COLONEQUAL shift to state 394
## Reductions:

State 394:
## Known stack suffix:
## TYPE type_parameters label COLONEQUAL
## LR(1) items:
with_constraint -> TYPE type_parameters label COLONEQUAL . core_type_no_attr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 395
-- On core_type2 shift to state 215
## Reductions:

State 395:
## Known stack suffix:
## TYPE type_parameters label COLONEQUAL core_type_no_attr
## LR(1) items:
with_constraint -> TYPE type_parameters label COLONEQUAL core_type_no_attr . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production with_constraint -> TYPE type_parameters label COLONEQUAL core_type_no_attr

State 396:
## Known stack suffix:
## type_parameter
## LR(1) items:
type_parameters -> type_parameter . [ UIDENT LIDENT ]
## Transitions:
## Reductions:
-- On UIDENT LIDENT
--   reduce production type_parameters -> type_parameter

State 397:
## Known stack suffix:
## MODULE
## LR(1) items:
with_constraint -> MODULE . mod_longident EQUAL mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
with_constraint -> MODULE . UIDENT COLONEQUAL mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On UIDENT shift to state 398
-- On mod_longident shift to state 401
## Reductions:

State 398:
## Known stack suffix:
## MODULE UIDENT
## LR(1) items:
mod_longident -> UIDENT . [ EQUAL DOT ]
with_constraint -> MODULE UIDENT . COLONEQUAL mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On COLONEQUAL shift to state 399
## Reductions:
-- On EQUAL DOT
--   reduce production mod_longident -> UIDENT

State 399:
## Known stack suffix:
## MODULE UIDENT COLONEQUAL
## LR(1) items:
with_constraint -> MODULE UIDENT COLONEQUAL . mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On UIDENT shift to state 92
-- On mod_ext_longident shift to state 400
## Reductions:

State 400:
## Known stack suffix:
## MODULE UIDENT COLONEQUAL mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND ]
with_constraint -> MODULE UIDENT COLONEQUAL mod_ext_longident . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On LPAREN shift to state 190
-- On DOT shift to state 193
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production with_constraint -> MODULE UIDENT COLONEQUAL mod_ext_longident

State 401:
## Known stack suffix:
## MODULE mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ EQUAL DOT ]
with_constraint -> MODULE mod_longident . EQUAL mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On EQUAL shift to state 402
-- On DOT shift to state 274
## Reductions:

State 402:
## Known stack suffix:
## MODULE mod_longident EQUAL
## LR(1) items:
with_constraint -> MODULE mod_longident EQUAL . mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On UIDENT shift to state 92
-- On mod_ext_longident shift to state 403
## Reductions:

State 403:
## Known stack suffix:
## MODULE mod_longident EQUAL mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER CLASS AND ]
with_constraint -> MODULE mod_longident EQUAL mod_ext_longident . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On LPAREN shift to state 190
-- On DOT shift to state 193
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident

State 404:
## Known stack suffix:
## module_type WITH with_constraints
## LR(1) items:
module_type -> module_type WITH with_constraints . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
with_constraints -> with_constraints . AND with_constraint [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On AND shift to state 405
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS
--   reduce production module_type -> module_type WITH with_constraints

State 405:
## Known stack suffix:
## with_constraints AND
## LR(1) items:
with_constraints -> with_constraints AND . with_constraint [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On TYPE shift to state 364
-- On MODULE shift to state 397
-- On with_constraint shift to state 406
## Reductions:

State 406:
## Known stack suffix:
## with_constraints AND with_constraint
## LR(1) items:
with_constraints -> with_constraints AND with_constraint . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production with_constraints -> with_constraints AND with_constraint

State 407:
## Known stack suffix:
## with_constraint
## LR(1) items:
with_constraints -> with_constraint . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production with_constraints -> with_constraint

State 408:
## Known stack suffix:
## LPAREN functor_arg_name COLON module_type RPAREN
## LR(1) items:
functor_arg -> LPAREN functor_arg_name COLON module_type RPAREN . [ MINUSGREATER LPAREN EQUAL COLON ]
## Transitions:
## Reductions:
-- On MINUSGREATER LPAREN EQUAL COLON
--   reduce production functor_arg -> LPAREN functor_arg_name COLON module_type RPAREN

State 409:
## Known stack suffix:
## module_type MINUSGREATER
## LR(1) items:
module_type -> module_type MINUSGREATER . module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 410
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 410:
## Known stack suffix:
## module_type MINUSGREATER module_type
## LR(1) items:
module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
module_type -> module_type MINUSGREATER module_type . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On WITH shift to state 363
-- On MINUSGREATER shift to state 409
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 411
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production module_type -> module_type MINUSGREATER module_type

State 411:
## Known stack suffix:
## module_type attribute
## LR(1) items:
module_type -> module_type attribute . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production module_type -> module_type attribute

State 412:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
mty_longident -> mod_ext_longident . DOT ident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On LPAREN shift to state 190
-- On DOT shift to state 413
## Reductions:

State 413:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
mty_longident -> mod_ext_longident DOT . ident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On UIDENT shift to state 414
-- On LIDENT shift to state 103
-- On ident shift to state 415
## Reductions:

State 414:
## Known stack suffix:
## mod_ext_longident DOT UIDENT
## LR(1) items:
ident -> UIDENT . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production ident -> UIDENT
-- On LPAREN DOT
--   reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 415:
## Known stack suffix:
## mod_ext_longident DOT ident
## LR(1) items:
mty_longident -> mod_ext_longident DOT ident . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production mty_longident -> mod_ext_longident DOT ident

State 416:
## Known stack suffix:
## ident
## LR(1) items:
mty_longident -> ident . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production mty_longident -> ident

State 417:
## Known stack suffix:
## extension
## LR(1) items:
module_type -> extension . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production module_type -> extension

State 418:
## Known stack suffix:
## FUNCTOR attributes functor_args
## LR(1) items:
functor_args -> functor_args . functor_arg [ MINUSGREATER LPAREN ]
module_type -> FUNCTOR attributes functor_args . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On MINUSGREATER shift to state 419
-- On LPAREN shift to state 355
-- On functor_arg shift to state 421
## Reductions:

State 419:
## Known stack suffix:
## FUNCTOR attributes functor_args MINUSGREATER
## LR(1) items:
module_type -> FUNCTOR attributes functor_args MINUSGREATER . module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 420
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 420:
## Known stack suffix:
## FUNCTOR attributes functor_args MINUSGREATER module_type
## LR(1) items:
module_type -> FUNCTOR attributes functor_args MINUSGREATER module_type . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On WITH shift to state 363
-- On MINUSGREATER shift to state 409
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 411
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production module_type -> FUNCTOR attributes functor_args MINUSGREATER module_type

State 421:
## Known stack suffix:
## functor_args functor_arg
## LR(1) items:
functor_args -> functor_args functor_arg . [ MINUSGREATER LPAREN ]
## Transitions:
## Reductions:
-- On MINUSGREATER LPAREN
--   reduce production functor_args -> functor_args functor_arg

State 422:
## Known stack suffix:
## functor_arg
## LR(1) items:
functor_args -> functor_arg . [ MINUSGREATER LPAREN ]
## Transitions:
## Reductions:
-- On MINUSGREATER LPAREN
--   reduce production functor_args -> functor_arg

State 423:
## Known stack suffix:
## LPAREN module_type
## LR(1) items:
module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN MINUSGREATER LBRACKETAT ]
module_type -> LPAREN module_type . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## Transitions:
-- On WITH shift to state 363
-- On RPAREN shift to state 424
-- On MINUSGREATER shift to state 409
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 411
## Reductions:

State 424:
## Known stack suffix:
## LPAREN module_type RPAREN
## LR(1) items:
module_type -> LPAREN module_type RPAREN . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production module_type -> LPAREN module_type RPAREN

State 425:
## Known stack suffix:
## EQUAL module_type
## LR(1) items:
module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_type_declaration_body -> EQUAL module_type . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On WITH shift to state 363
-- On MINUSGREATER shift to state 409
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 411
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production module_type_declaration_body -> EQUAL module_type

State 426:
## Known stack suffix:
## MODULE TYPE ext_attributes ident module_type_declaration_body
## LR(1) items:
module_type_declaration -> MODULE TYPE ext_attributes ident module_type_declaration_body . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 427
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 427:
## Known stack suffix:
## MODULE TYPE ext_attributes ident module_type_declaration_body post_item_attributes
## LR(1) items:
module_type_declaration -> MODULE TYPE ext_attributes ident module_type_declaration_body post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production module_type_declaration -> MODULE TYPE ext_attributes ident module_type_declaration_body post_item_attributes

State 428:
## Known stack suffix:
## MODULE ext_attributes
## LR(1) items:
module_binding -> MODULE ext_attributes . UIDENT module_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
rec_module_binding -> MODULE ext_attributes . REC UIDENT module_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 429
-- On REC shift to state 961
## Reductions:

State 429:
## Known stack suffix:
## MODULE ext_attributes UIDENT
## LR(1) items:
module_binding -> MODULE ext_attributes UIDENT . module_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LPAREN shift to state 355
-- On EQUAL shift to state 430
-- On COLON shift to state 910
-- On module_binding_body shift to state 959
-- On functor_arg shift to state 917
## Reductions:

State 430:
## Known stack suffix:
## EQUAL
## LR(1) items:
module_binding_body -> EQUAL . module_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On STRUCT shift to state 325
-- On LPAREN shift to state 431
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 443
-- On paren_module_expr shift to state 447
-- On module_expr shift to state 958
-- On mod_longident shift to state 458
-- On extension shift to state 459
## Reductions:

State 431:
## Known stack suffix:
## LPAREN
## LR(1) items:
paren_module_expr -> LPAREN . module_expr COLON module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN . module_expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN . VAL attributes expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN . VAL attributes expr COLON package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN . VAL attributes expr COLON package_type COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN . VAL attributes expr COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On VAL shift to state 432
-- On UIDENT shift to state 94
-- On STRUCT shift to state 325
-- On LPAREN shift to state 431
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 443
-- On paren_module_expr shift to state 447
-- On module_expr shift to state 451
-- On mod_longident shift to state 458
-- On extension shift to state 459
## Reductions:

State 432:
## Known stack suffix:
## LPAREN VAL
## LR(1) items:
paren_module_expr -> LPAREN VAL . attributes expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN VAL . attributes expr COLON package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN VAL . attributes expr COLON package_type COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN VAL . attributes expr COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 433
-- On attribute shift to state 225
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production attributes ->

State 433:
## Known stack suffix:
## LPAREN VAL attributes
## LR(1) items:
paren_module_expr -> LPAREN VAL attributes . expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN VAL attributes . expr COLON package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN VAL attributes . expr COLON package_type COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN VAL attributes . expr COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 947
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 434:
## Known stack suffix:
## MINUSDOT
## LR(1) items:
subtractive -> MINUSDOT . [ WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production subtractive -> MINUSDOT

State 435:
## Known stack suffix:
## MINUS
## LR(1) items:
subtractive -> MINUS . [ WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production subtractive -> MINUS

State 436:
## Known stack suffix:
## MATCH
## LR(1) items:
expr -> MATCH . ext_attributes seq_expr WITH opt_bar match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 437
-- On attribute shift to state 295
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production ext_attributes ->

State 437:
## Known stack suffix:
## MATCH ext_attributes
## LR(1) items:
expr -> MATCH ext_attributes . seq_expr WITH opt_bar match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 943
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 438:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
expr -> LPAREN . COLONCOLON RPAREN LPAREN expr COMMA expr RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr type_constraint RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . MODULE ext_attributes module_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . MODULE ext_attributes module_expr COLON package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
val_ident -> LPAREN . operator RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On STAR shift to state 63
-- On SHARPOP shift to state 64
-- On RPAREN shift to state 269
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 298
-- On PLUSEQ shift to state 66
-- On PLUSDOT shift to state 439
-- On PLUS shift to state 440
-- On PERCENT shift to state 69
-- On OR shift to state 70
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 441
-- On MINUSDOT shift to state 466
-- On MINUS shift to state 467
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LESS shift to state 73
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INFIXOP4 shift to state 74
-- On INFIXOP3 shift to state 75
-- On INFIXOP2 shift to state 76
-- On INFIXOP1 shift to state 77
-- On INFIXOP0 shift to state 78
-- On IF shift to state 503
-- On GREATER shift to state 79
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EQUAL shift to state 80
-- On COLONEQUAL shift to state 81
-- On COLONCOLON shift to state 932
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BARBAR shift to state 82
-- On BANG shift to state 853
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On AMPERSAND shift to state 84
-- On AMPERAMPER shift to state 85
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 939
-- On operator shift to state 86
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 439:
## Known stack suffix:
## PLUSDOT
## LR(1) items:
additive -> PLUSDOT . [ WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
operator -> PLUSDOT . [ RPAREN ]
## Transitions:
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production additive -> PLUSDOT
-- On RPAREN
--   reduce production operator -> PLUSDOT

State 440:
## Known stack suffix:
## PLUS
## LR(1) items:
additive -> PLUS . [ WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
operator -> PLUS . [ RPAREN ]
## Transitions:
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production additive -> PLUS
-- On RPAREN
--   reduce production operator -> PLUS

State 441:
## Known stack suffix:
## LPAREN MODULE
## LR(1) items:
simple_expr -> LPAREN MODULE . ext_attributes module_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN MODULE . ext_attributes module_expr COLON package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 442
-- On attribute shift to state 295
## Reductions:
-- On UIDENT STRUCT LPAREN LBRACKETPERCENT FUNCTOR
--   reduce production ext_attributes ->

State 442:
## Known stack suffix:
## LPAREN MODULE ext_attributes
## LR(1) items:
simple_expr -> LPAREN MODULE ext_attributes . module_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN MODULE ext_attributes . module_expr COLON package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On STRUCT shift to state 325
-- On LPAREN shift to state 431
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 443
-- On paren_module_expr shift to state 447
-- On module_expr shift to state 460
-- On mod_longident shift to state 458
-- On extension shift to state 459
## Reductions:

State 443:
## Known stack suffix:
## FUNCTOR
## LR(1) items:
module_expr -> FUNCTOR . attributes functor_args MINUSGREATER module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 444
-- On attribute shift to state 225
## Reductions:
-- On LPAREN
--   reduce production attributes ->

State 444:
## Known stack suffix:
## FUNCTOR attributes
## LR(1) items:
module_expr -> FUNCTOR attributes . functor_args MINUSGREATER module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On LPAREN shift to state 355
-- On functor_args shift to state 445
-- On functor_arg shift to state 422
## Reductions:

State 445:
## Known stack suffix:
## FUNCTOR attributes functor_args
## LR(1) items:
functor_args -> functor_args . functor_arg [ MINUSGREATER LPAREN ]
module_expr -> FUNCTOR attributes functor_args . MINUSGREATER module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On MINUSGREATER shift to state 446
-- On LPAREN shift to state 355
-- On functor_arg shift to state 421
## Reductions:

State 446:
## Known stack suffix:
## FUNCTOR attributes functor_args MINUSGREATER
## LR(1) items:
module_expr -> FUNCTOR attributes functor_args MINUSGREATER . module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On STRUCT shift to state 325
-- On LPAREN shift to state 431
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 443
-- On paren_module_expr shift to state 447
-- On module_expr shift to state 448
-- On mod_longident shift to state 458
-- On extension shift to state 459
## Reductions:

State 447:
## Known stack suffix:
## paren_module_expr
## LR(1) items:
module_expr -> paren_module_expr . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production module_expr -> paren_module_expr

State 448:
## Known stack suffix:
## FUNCTOR attributes functor_args MINUSGREATER module_expr
## LR(1) items:
module_expr -> FUNCTOR attributes functor_args MINUSGREATER module_expr . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
module_expr -> module_expr . paren_module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
module_expr -> module_expr . LPAREN RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
module_expr -> module_expr . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On LPAREN shift to state 449
-- On LBRACKETAT shift to state 58
-- On paren_module_expr shift to state 456
-- On attribute shift to state 457
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production module_expr -> FUNCTOR attributes functor_args MINUSGREATER module_expr

State 449:
## Known stack suffix:
## module_expr LPAREN
## LR(1) items:
module_expr -> module_expr LPAREN . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN . module_expr COLON module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN . module_expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN . VAL attributes expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN . VAL attributes expr COLON package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN . VAL attributes expr COLON package_type COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN . VAL attributes expr COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On VAL shift to state 432
-- On UIDENT shift to state 94
-- On STRUCT shift to state 325
-- On RPAREN shift to state 450
-- On LPAREN shift to state 431
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 443
-- On paren_module_expr shift to state 447
-- On module_expr shift to state 451
-- On mod_longident shift to state 458
-- On extension shift to state 459
## Reductions:

State 450:
## Known stack suffix:
## module_expr LPAREN RPAREN
## LR(1) items:
module_expr -> module_expr LPAREN RPAREN . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production module_expr -> module_expr LPAREN RPAREN

State 451:
## Known stack suffix:
## LPAREN module_expr
## LR(1) items:
module_expr -> module_expr . paren_module_expr [ RPAREN LPAREN LBRACKETAT COLON ]
module_expr -> module_expr . LPAREN RPAREN [ RPAREN LPAREN LBRACKETAT COLON ]
module_expr -> module_expr . attribute [ RPAREN LPAREN LBRACKETAT COLON ]
paren_module_expr -> LPAREN module_expr . COLON module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN module_expr . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On RPAREN shift to state 452
-- On LPAREN shift to state 449
-- On LBRACKETAT shift to state 58
-- On COLON shift to state 453
-- On paren_module_expr shift to state 456
-- On attribute shift to state 457
## Reductions:

State 452:
## Known stack suffix:
## LPAREN module_expr RPAREN
## LR(1) items:
paren_module_expr -> LPAREN module_expr RPAREN . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production paren_module_expr -> LPAREN module_expr RPAREN

State 453:
## Known stack suffix:
## LPAREN module_expr COLON
## LR(1) items:
paren_module_expr -> LPAREN module_expr COLON . module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 454
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 454:
## Known stack suffix:
## LPAREN module_expr COLON module_type
## LR(1) items:
module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN MINUSGREATER LBRACKETAT ]
module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
paren_module_expr -> LPAREN module_expr COLON module_type . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On WITH shift to state 363
-- On RPAREN shift to state 455
-- On MINUSGREATER shift to state 409
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 411
## Reductions:

State 455:
## Known stack suffix:
## LPAREN module_expr COLON module_type RPAREN
## LR(1) items:
paren_module_expr -> LPAREN module_expr COLON module_type RPAREN . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production paren_module_expr -> LPAREN module_expr COLON module_type RPAREN

State 456:
## Known stack suffix:
## module_expr paren_module_expr
## LR(1) items:
module_expr -> module_expr paren_module_expr . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production module_expr -> module_expr paren_module_expr

State 457:
## Known stack suffix:
## module_expr attribute
## LR(1) items:
module_expr -> module_expr attribute . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production module_expr -> module_expr attribute

State 458:
## Known stack suffix:
## mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END DOT COLONGREATER COLON CLASS AND ]
module_expr -> mod_longident . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On DOT shift to state 274
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production module_expr -> mod_longident

State 459:
## Known stack suffix:
## extension
## LR(1) items:
module_expr -> extension . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production module_expr -> extension

State 460:
## Known stack suffix:
## LPAREN MODULE ext_attributes module_expr
## LR(1) items:
module_expr -> module_expr . paren_module_expr [ RPAREN LPAREN LBRACKETAT COLON ]
module_expr -> module_expr . LPAREN RPAREN [ RPAREN LPAREN LBRACKETAT COLON ]
module_expr -> module_expr . attribute [ RPAREN LPAREN LBRACKETAT COLON ]
simple_expr -> LPAREN MODULE ext_attributes module_expr . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN MODULE ext_attributes module_expr . COLON package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 461
-- On LPAREN shift to state 449
-- On LBRACKETAT shift to state 58
-- On COLON shift to state 462
-- On paren_module_expr shift to state 456
-- On attribute shift to state 457
## Reductions:

State 461:
## Known stack suffix:
## LPAREN MODULE ext_attributes module_expr RPAREN
## LR(1) items:
simple_expr -> LPAREN MODULE ext_attributes module_expr RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> LPAREN MODULE ext_attributes module_expr RPAREN

State 462:
## Known stack suffix:
## LPAREN MODULE ext_attributes module_expr COLON
## LR(1) items:
simple_expr -> LPAREN MODULE ext_attributes module_expr COLON . package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On package_type shift to state 463
-- On mty_longident shift to state 361
-- On module_type shift to state 465
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 463:
## Known stack suffix:
## LPAREN MODULE ext_attributes module_expr COLON package_type
## LR(1) items:
simple_expr -> LPAREN MODULE ext_attributes module_expr COLON package_type . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 464
## Reductions:

State 464:
## Known stack suffix:
## LPAREN MODULE ext_attributes module_expr COLON package_type RPAREN
## LR(1) items:
simple_expr -> LPAREN MODULE ext_attributes module_expr COLON package_type RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> LPAREN MODULE ext_attributes module_expr COLON package_type RPAREN

State 465:
## Known stack suffix:
## module_type
## LR(1) items:
module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT COLONGREATER ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN MINUSGREATER LBRACKETAT COLONGREATER ]
module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT COLONGREATER ]
package_type -> module_type . [ RPAREN COLONGREATER ]
## Transitions:
-- On WITH shift to state 363
-- On MINUSGREATER shift to state 409
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 411
## Reductions:
-- On RPAREN COLONGREATER
--   reduce production package_type -> module_type

State 466:
## Known stack suffix:
## MINUSDOT
## LR(1) items:
operator -> MINUSDOT . [ RPAREN ]
subtractive -> MINUSDOT . [ WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> MINUSDOT
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production subtractive -> MINUSDOT

State 467:
## Known stack suffix:
## MINUS
## LR(1) items:
operator -> MINUS . [ RPAREN ]
subtractive -> MINUS . [ WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production operator -> MINUS
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production subtractive -> MINUS

State 468:
## Known stack suffix:
## LIDENT
## LR(1) items:
label -> LIDENT . [ LESSMINUS ]
val_ident -> LIDENT . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On LESSMINUS
--   reduce production label -> LIDENT
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER
--   reduce production val_ident -> LIDENT

State 469:
## Known stack suffix:
## LET
## LR(1) items:
expr -> LET . MODULE ext_attributes UIDENT module_binding_body IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> LET . EXCEPTION ext_attributes let_exception_declaration IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> LET . OPEN override_flag ext_attributes mod_longident IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
let_binding -> LET . ext_attributes rec_flag let_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On PERCENT shift to state 2
-- On OPEN shift to state 470
-- On MODULE shift to state 907
-- On LBRACKETAT shift to state 58
-- On EXCEPTION shift to state 919
-- On ext_attributes shift to state 927
-- On attribute shift to state 295
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP REC PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE CHAR BACKQUOTE
--   reduce production ext_attributes ->

State 470:
## Known stack suffix:
## LET OPEN
## LR(1) items:
expr -> LET OPEN . override_flag ext_attributes mod_longident IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BANG shift to state 340
-- On override_flag shift to state 471
## Reductions:
-- On UIDENT PERCENT LBRACKETAT
--   reduce production override_flag ->

State 471:
## Known stack suffix:
## LET OPEN override_flag
## LR(1) items:
expr -> LET OPEN override_flag . ext_attributes mod_longident IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 472
-- On attribute shift to state 295
## Reductions:
-- On UIDENT
--   reduce production ext_attributes ->

State 472:
## Known stack suffix:
## LET OPEN override_flag ext_attributes
## LR(1) items:
expr -> LET OPEN override_flag ext_attributes . mod_longident IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On mod_longident shift to state 473
## Reductions:

State 473:
## Known stack suffix:
## LET OPEN override_flag ext_attributes mod_longident
## LR(1) items:
expr -> LET OPEN override_flag ext_attributes mod_longident . IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ IN DOT ]
## Transitions:
-- On IN shift to state 474
-- On DOT shift to state 274
## Reductions:

State 474:
## Known stack suffix:
## LET OPEN override_flag ext_attributes mod_longident IN
## LR(1) items:
expr -> LET OPEN override_flag ext_attributes mod_longident IN . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 906
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 475:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_longident -> LBRACKET . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET . expr_semi_list opt_semi RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On RBRACKET shift to state 271
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_semi_list shift to state 903
-- On expr_comma_list shift to state 643
-- On expr shift to state 863
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 476:
## Known stack suffix:
## LBRACELESS
## LR(1) items:
simple_expr -> LBRACELESS . field_expr_list GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACELESS . GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LIDENT shift to state 143
-- On GREATERRBRACE shift to state 477
-- On label shift to state 478
-- On field_expr_list shift to state 901
-- On field_expr shift to state 872
## Reductions:

State 477:
## Known stack suffix:
## LBRACELESS GREATERRBRACE
## LR(1) items:
simple_expr -> LBRACELESS GREATERRBRACE . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> LBRACELESS GREATERRBRACE

State 478:
## Known stack suffix:
## label
## LR(1) items:
field_expr -> label . EQUAL expr [ SEMI GREATERRBRACE ]
field_expr -> label . [ SEMI GREATERRBRACE ]
## Transitions:
-- On EQUAL shift to state 479
## Reductions:
-- On SEMI GREATERRBRACE
--   reduce production field_expr -> label

State 479:
## Known stack suffix:
## label EQUAL
## LR(1) items:
field_expr -> label EQUAL . expr [ SEMI GREATERRBRACE ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 900
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 480:
## Known stack suffix:
## LBRACE
## LR(1) items:
simple_expr -> LBRACE . record_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 481
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 877
-- On record_expr shift to state 898
-- On name_tag shift to state 492
-- On mod_longident shift to state 890
-- On lbl_expr_list shift to state 893
-- On lbl_expr shift to state 880
-- On label_longident shift to state 883
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:

State 481:
## Known stack suffix:
## LIDENT
## LR(1) items:
label_longident -> LIDENT . [ SEMI RBRACE EQUAL COLONGREATER COLON ]
val_ident -> LIDENT . [ WITH SHARPOP SHARP DOT ]
## Transitions:
## Reductions:
-- On SEMI RBRACE EQUAL COLONGREATER COLON
--   reduce production label_longident -> LIDENT
-- On WITH SHARPOP SHARP DOT
--   reduce production val_ident -> LIDENT

State 482:
## Known stack suffix:
## INT
## LR(1) items:
constant -> INT . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production constant -> INT

State 483:
## Known stack suffix:
## FLOAT
## LR(1) items:
constant -> FLOAT . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production constant -> FLOAT

State 484:
## Known stack suffix:
## CHAR
## LR(1) items:
constant -> CHAR . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production constant -> CHAR

State 485:
## Known stack suffix:
## BEGIN
## LR(1) items:
simple_expr -> BEGIN . ext_attributes seq_expr END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN . ext_attributes END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 486
-- On attribute shift to state 295
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production ext_attributes ->

State 486:
## Known stack suffix:
## BEGIN ext_attributes
## LR(1) items:
simple_expr -> BEGIN ext_attributes . seq_expr END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN ext_attributes . END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On END shift to state 895
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 896
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 487:
## Known stack suffix:
## LAZY
## LR(1) items:
expr -> LAZY . ext_attributes simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 488
-- On attribute shift to state 295
## Reductions:
-- On UIDENT TRUE STRING QUESTIONQUESTION PREFIXOP NEW LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE INT FLOAT FALSE CHAR BEGIN BANG BACKQUOTE
--   reduce production ext_attributes ->

State 488:
## Known stack suffix:
## LAZY ext_attributes
## LR(1) items:
expr -> LAZY ext_attributes . simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 894
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:

State 489:
## Known stack suffix:
## BANG
## LR(1) items:
simple_expr -> BANG . simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 491
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:

State 490:
## Known stack suffix:
## val_longident
## LR(1) items:
simple_expr -> val_longident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> val_longident

State 491:
## Known stack suffix:
## BANG simple_expr
## LR(1) items:
simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> BANG simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> BANG simple_expr

State 492:
## Known stack suffix:
## name_tag
## LR(1) items:
simple_expr -> name_tag . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> name_tag

State 493:
## Known stack suffix:
## mod_longident
## LR(1) items:
constr_longident -> mod_longident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident . DOT LPAREN RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident . DOT LBRACE record_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident . DOT LBRACKETBAR expr_semi_list opt_semi BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident . DOT LBRACKETBAR BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident . DOT LBRACKET expr_semi_list opt_semi RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident . DOT LBRACKET RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident . DOT LBRACELESS field_expr_list GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident . DOT LPAREN MODULE ext_attributes module_expr COLON package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
val_longident -> mod_longident . DOT val_ident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 494
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production constr_longident -> mod_longident

State 494:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
mod_longident -> mod_longident DOT . UIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT . LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT . LPAREN RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT . LBRACE record_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT . LBRACKETBAR expr_semi_list opt_semi BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT . LBRACKETBAR BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT . LBRACKET expr_semi_list opt_semi RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT . LBRACKET RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT . LBRACELESS field_expr_list GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT . LPAREN MODULE ext_attributes module_expr COLON package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
val_longident -> mod_longident DOT . val_ident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 98
-- On LPAREN shift to state 495
-- On LIDENT shift to state 88
-- On LBRACKETBAR shift to state 856
-- On LBRACKET shift to state 864
-- On LBRACELESS shift to state 869
-- On LBRACE shift to state 876
-- On val_ident shift to state 337
## Reductions:

State 495:
## Known stack suffix:
## mod_longident DOT LPAREN
## LR(1) items:
simple_expr -> mod_longident DOT LPAREN . seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT LPAREN . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT LPAREN . MODULE ext_attributes module_expr COLON package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
val_ident -> LPAREN . operator RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On STAR shift to state 63
-- On SHARPOP shift to state 64
-- On RPAREN shift to state 496
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 298
-- On PLUSEQ shift to state 66
-- On PLUSDOT shift to state 439
-- On PLUS shift to state 440
-- On PERCENT shift to state 69
-- On OR shift to state 70
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 497
-- On MINUSDOT shift to state 466
-- On MINUS shift to state 467
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LESS shift to state 73
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INFIXOP4 shift to state 74
-- On INFIXOP3 shift to state 75
-- On INFIXOP2 shift to state 76
-- On INFIXOP1 shift to state 77
-- On INFIXOP0 shift to state 78
-- On IF shift to state 503
-- On GREATER shift to state 79
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EQUAL shift to state 80
-- On COLONEQUAL shift to state 81
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BARBAR shift to state 82
-- On BANG shift to state 853
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On AMPERSAND shift to state 84
-- On AMPERAMPER shift to state 85
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 854
-- On operator shift to state 86
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 496:
## Known stack suffix:
## mod_longident DOT LPAREN RPAREN
## LR(1) items:
simple_expr -> mod_longident DOT LPAREN RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> mod_longident DOT LPAREN RPAREN

State 497:
## Known stack suffix:
## mod_longident DOT LPAREN MODULE
## LR(1) items:
simple_expr -> mod_longident DOT LPAREN MODULE . ext_attributes module_expr COLON package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 498
-- On attribute shift to state 295
## Reductions:
-- On UIDENT STRUCT LPAREN LBRACKETPERCENT FUNCTOR
--   reduce production ext_attributes ->

State 498:
## Known stack suffix:
## mod_longident DOT LPAREN MODULE ext_attributes
## LR(1) items:
simple_expr -> mod_longident DOT LPAREN MODULE ext_attributes . module_expr COLON package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On STRUCT shift to state 325
-- On LPAREN shift to state 431
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 443
-- On paren_module_expr shift to state 447
-- On module_expr shift to state 499
-- On mod_longident shift to state 458
-- On extension shift to state 459
## Reductions:

State 499:
## Known stack suffix:
## mod_longident DOT LPAREN MODULE ext_attributes module_expr
## LR(1) items:
module_expr -> module_expr . paren_module_expr [ LPAREN LBRACKETAT COLON ]
module_expr -> module_expr . LPAREN RPAREN [ LPAREN LBRACKETAT COLON ]
module_expr -> module_expr . attribute [ LPAREN LBRACKETAT COLON ]
simple_expr -> mod_longident DOT LPAREN MODULE ext_attributes module_expr . COLON package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LPAREN shift to state 449
-- On LBRACKETAT shift to state 58
-- On COLON shift to state 500
-- On paren_module_expr shift to state 456
-- On attribute shift to state 457
## Reductions:

State 500:
## Known stack suffix:
## mod_longident DOT LPAREN MODULE ext_attributes module_expr COLON
## LR(1) items:
simple_expr -> mod_longident DOT LPAREN MODULE ext_attributes module_expr COLON . package_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On package_type shift to state 501
-- On mty_longident shift to state 361
-- On module_type shift to state 465
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 501:
## Known stack suffix:
## mod_longident DOT LPAREN MODULE ext_attributes module_expr COLON package_type
## LR(1) items:
simple_expr -> mod_longident DOT LPAREN MODULE ext_attributes module_expr COLON package_type . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 502
## Reductions:

State 502:
## Known stack suffix:
## mod_longident DOT LPAREN MODULE ext_attributes module_expr COLON package_type RPAREN
## LR(1) items:
simple_expr -> mod_longident DOT LPAREN MODULE ext_attributes module_expr COLON package_type RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> mod_longident DOT LPAREN MODULE ext_attributes module_expr COLON package_type RPAREN

State 503:
## Known stack suffix:
## IF
## LR(1) items:
expr -> IF . ext_attributes seq_expr THEN expr ELSE expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF . ext_attributes seq_expr THEN expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 504
-- On attribute shift to state 295
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production ext_attributes ->

State 504:
## Known stack suffix:
## IF ext_attributes
## LR(1) items:
expr -> IF ext_attributes . seq_expr THEN expr ELSE expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF ext_attributes . seq_expr THEN expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 848
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 505:
## Known stack suffix:
## FUNCTION
## LR(1) items:
expr -> FUNCTION . ext_attributes opt_bar match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 506
-- On attribute shift to state 295
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE EXCEPTION CHAR BAR BACKQUOTE
--   reduce production ext_attributes ->

State 506:
## Known stack suffix:
## FUNCTION ext_attributes
## LR(1) items:
expr -> FUNCTION ext_attributes . opt_bar match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 174
-- On opt_bar shift to state 507
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE EXCEPTION CHAR BACKQUOTE
--   reduce production opt_bar ->

State 507:
## Known stack suffix:
## FUNCTION ext_attributes opt_bar
## LR(1) items:
expr -> FUNCTION ext_attributes opt_bar . match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 586
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On match_cases shift to state 844
-- On match_case shift to state 847
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 508:
## Known stack suffix:
## LBRACKETBAR
## LR(1) items:
simple_delimited_pattern -> LBRACKETBAR . pattern_semi_list opt_semi BARRBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_delimited_pattern -> LBRACKETBAR . BARRBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BARRBRACKET shift to state 582
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_semi_list shift to state 583
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 570
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 509:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_longident -> LBRACKET . RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT FLOAT FALSE EXCEPTION EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_delimited_pattern -> LBRACKET . pattern_semi_list opt_semi RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On RBRACKET shift to state 271
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_semi_list shift to state 565
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 570
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 510:
## Known stack suffix:
## LBRACE
## LR(1) items:
simple_delimited_pattern -> LBRACE . lbl_pattern_list RBRACE [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UIDENT shift to state 94
-- On LIDENT shift to state 511
-- On mod_longident shift to state 377
-- On lbl_pattern_list shift to state 512
-- On lbl_pattern shift to state 514
-- On label_longident shift to state 520
## Reductions:

State 511:
## Known stack suffix:
## LIDENT
## LR(1) items:
label_longident -> LIDENT . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESSMINUS LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESSMINUS LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production label_longident -> LIDENT

State 512:
## Known stack suffix:
## LBRACE lbl_pattern_list
## LR(1) items:
simple_delimited_pattern -> LBRACE lbl_pattern_list . RBRACE [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On RBRACE shift to state 513
## Reductions:

State 513:
## Known stack suffix:
## LBRACE lbl_pattern_list RBRACE
## LR(1) items:
simple_delimited_pattern -> LBRACE lbl_pattern_list RBRACE . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_delimited_pattern -> LBRACE lbl_pattern_list RBRACE

State 514:
## Known stack suffix:
## lbl_pattern
## LR(1) items:
lbl_pattern_list -> lbl_pattern . [ RBRACE ]
lbl_pattern_list -> lbl_pattern . SEMI [ RBRACE ]
lbl_pattern_list -> lbl_pattern . SEMI UNDERSCORE opt_semi [ RBRACE ]
lbl_pattern_list -> lbl_pattern . SEMI lbl_pattern_list [ RBRACE ]
## Transitions:
-- On SEMI shift to state 515
## Reductions:
-- On RBRACE
--   reduce production lbl_pattern_list -> lbl_pattern

State 515:
## Known stack suffix:
## lbl_pattern SEMI
## LR(1) items:
lbl_pattern_list -> lbl_pattern SEMI . [ RBRACE ]
lbl_pattern_list -> lbl_pattern SEMI . UNDERSCORE opt_semi [ RBRACE ]
lbl_pattern_list -> lbl_pattern SEMI . lbl_pattern_list [ RBRACE ]
## Transitions:
-- On UNDERSCORE shift to state 516
-- On UIDENT shift to state 94
-- On LIDENT shift to state 511
-- On mod_longident shift to state 377
-- On lbl_pattern_list shift to state 519
-- On lbl_pattern shift to state 514
-- On label_longident shift to state 520
## Reductions:
-- On RBRACE
--   reduce production lbl_pattern_list -> lbl_pattern SEMI

State 516:
## Known stack suffix:
## lbl_pattern SEMI UNDERSCORE
## LR(1) items:
lbl_pattern_list -> lbl_pattern SEMI UNDERSCORE . opt_semi [ RBRACE ]
## Transitions:
-- On SEMI shift to state 517
-- On opt_semi shift to state 518
## Reductions:
-- On RBRACE
--   reduce production opt_semi ->

State 517:
## Known stack suffix:
## SEMI
## LR(1) items:
opt_semi -> SEMI . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production opt_semi -> SEMI

State 518:
## Known stack suffix:
## lbl_pattern SEMI UNDERSCORE opt_semi
## LR(1) items:
lbl_pattern_list -> lbl_pattern SEMI UNDERSCORE opt_semi . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production lbl_pattern_list -> lbl_pattern SEMI UNDERSCORE opt_semi

State 519:
## Known stack suffix:
## lbl_pattern SEMI lbl_pattern_list
## LR(1) items:
lbl_pattern_list -> lbl_pattern SEMI lbl_pattern_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production lbl_pattern_list -> lbl_pattern SEMI lbl_pattern_list

State 520:
## Known stack suffix:
## label_longident
## LR(1) items:
lbl_pattern -> label_longident . opt_pattern_type_constraint EQUAL pattern [ SEMI RBRACE ]
lbl_pattern -> label_longident . opt_pattern_type_constraint [ SEMI RBRACE ]
## Transitions:
-- On COLON shift to state 521
-- On opt_pattern_type_constraint shift to state 523
## Reductions:
-- On SEMI RBRACE EQUAL
--   reduce production opt_pattern_type_constraint ->

State 521:
## Known stack suffix:
## COLON
## LR(1) items:
opt_pattern_type_constraint -> COLON . core_type [ SEMI RBRACE EQUAL ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 522
## Reductions:

State 522:
## Known stack suffix:
## COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ SEMI RBRACE LBRACKETAT EQUAL ]
opt_pattern_type_constraint -> COLON core_type . [ SEMI RBRACE EQUAL ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On SEMI RBRACE EQUAL
--   reduce production opt_pattern_type_constraint -> COLON core_type

State 523:
## Known stack suffix:
## label_longident opt_pattern_type_constraint
## LR(1) items:
lbl_pattern -> label_longident opt_pattern_type_constraint . EQUAL pattern [ SEMI RBRACE ]
lbl_pattern -> label_longident opt_pattern_type_constraint . [ SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 524
## Reductions:
-- On SEMI RBRACE
--   reduce production lbl_pattern -> label_longident opt_pattern_type_constraint

State 524:
## Known stack suffix:
## label_longident opt_pattern_type_constraint EQUAL
## LR(1) items:
lbl_pattern -> label_longident opt_pattern_type_constraint EQUAL . pattern [ SEMI RBRACE ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 581
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 525:
## Known stack suffix:
## LAZY
## LR(1) items:
pattern_gen -> LAZY . ext_attributes simple_pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 526
-- On attribute shift to state 295
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE INT FLOAT FALSE CHAR BACKQUOTE
--   reduce production ext_attributes ->

State 526:
## Known stack suffix:
## LAZY ext_attributes
## LR(1) items:
pattern_gen -> LAZY ext_attributes . simple_pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 527
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 578
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
## Reductions:

State 527:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> LPAREN . pattern RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> LPAREN . MODULE ext_attributes UIDENT RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> LPAREN . MODULE ext_attributes UIDENT COLON package_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
val_ident -> LPAREN . operator RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On STAR shift to state 63
-- On SHARPOP shift to state 64
-- On SHARP shift to state 306
-- On RPAREN shift to state 269
-- On PREFIXOP shift to state 65
-- On PLUSEQ shift to state 66
-- On PLUSDOT shift to state 67
-- On PLUS shift to state 315
-- On PERCENT shift to state 69
-- On OR shift to state 70
-- On MODULE shift to state 316
-- On MINUSDOT shift to state 71
-- On MINUS shift to state 528
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LESS shift to state 73
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On INFIXOP4 shift to state 74
-- On INFIXOP3 shift to state 75
-- On INFIXOP2 shift to state 76
-- On INFIXOP1 shift to state 77
-- On INFIXOP0 shift to state 78
-- On GREATER shift to state 79
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On EQUAL shift to state 80
-- On COLONEQUAL shift to state 81
-- On CHAR shift to state 484
-- On BARBAR shift to state 82
-- On BANG shift to state 83
-- On BACKQUOTE shift to state 181
-- On AMPERSAND shift to state 84
-- On AMPERAMPER shift to state 85
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 573
-- On operator shift to state 86
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 528:
## Known stack suffix:
## MINUS
## LR(1) items:
operator -> MINUS . [ RPAREN ]
signed_constant -> MINUS . INT [ RPAREN LBRACKETAT DOTDOT COMMA COLONCOLON COLON BAR AS ]
signed_constant -> MINUS . FLOAT [ RPAREN LBRACKETAT DOTDOT COMMA COLONCOLON COLON BAR AS ]
## Transitions:
-- On INT shift to state 312
-- On FLOAT shift to state 313
## Reductions:
-- On RPAREN
--   reduce production operator -> MINUS

State 529:
## Known stack suffix:
## EXCEPTION
## LR(1) items:
pattern -> EXCEPTION . ext_attributes pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 530
-- On attribute shift to state 295
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE EXCEPTION CHAR BACKQUOTE
--   reduce production ext_attributes ->

State 530:
## Known stack suffix:
## EXCEPTION ext_attributes
## LR(1) items:
pattern -> EXCEPTION ext_attributes . pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 572
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 531:
## Known stack suffix:
## val_ident
## LR(1) items:
simple_pattern -> val_ident . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern -> val_ident

State 532:
## Known stack suffix:
## simple_pattern_not_ident
## LR(1) items:
simple_pattern -> simple_pattern_not_ident . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern -> simple_pattern_not_ident

State 533:
## Known stack suffix:
## simple_pattern
## LR(1) items:
pattern_gen -> simple_pattern . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production pattern_gen -> simple_pattern

State 534:
## Known stack suffix:
## simple_delimited_pattern
## LR(1) items:
simple_pattern_not_ident -> simple_delimited_pattern . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> simple_delimited_pattern

State 535:
## Known stack suffix:
## signed_constant
## LR(1) items:
simple_pattern_not_ident -> signed_constant . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> signed_constant . DOTDOT signed_constant [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On DOTDOT shift to state 536
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> signed_constant

State 536:
## Known stack suffix:
## signed_constant DOTDOT
## LR(1) items:
simple_pattern_not_ident -> signed_constant DOTDOT . signed_constant [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On STRING shift to state 289
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On CHAR shift to state 484
-- On signed_constant shift to state 537
-- On constant shift to state 538
## Reductions:

State 537:
## Known stack suffix:
## signed_constant DOTDOT signed_constant
## LR(1) items:
simple_pattern_not_ident -> signed_constant DOTDOT signed_constant . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> signed_constant DOTDOT signed_constant

State 538:
## Known stack suffix:
## constant
## LR(1) items:
signed_constant -> constant . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production signed_constant -> constant

State 539:
## Known stack suffix:
## pattern_gen
## LR(1) items:
pattern -> pattern_gen . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production pattern -> pattern_gen

State 540:
## Known stack suffix:
## pattern_comma_list
## LR(1) items:
pattern -> pattern_comma_list . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern_comma_list . COMMA pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On COMMA shift to state 541
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production pattern -> pattern_comma_list

State 541:
## Known stack suffix:
## pattern_comma_list COMMA
## LR(1) items:
pattern_comma_list -> pattern_comma_list COMMA . pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 542
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 542:
## Known stack suffix:
## pattern_comma_list COMMA pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . attribute [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern_comma_list COMMA pattern . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COLONCOLON shift to state 543
-- On attribute shift to state 545
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER EQUAL COMMA COLON BARRBRACKET BAR AS
--   reduce production pattern_comma_list -> pattern_comma_list COMMA pattern

State 543:
## Known stack suffix:
## pattern COLONCOLON
## LR(1) items:
pattern -> pattern COLONCOLON . pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 544
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 544:
## Known stack suffix:
## pattern COLONCOLON pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern COLONCOLON pattern . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . attribute [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On COLONCOLON shift to state 543
-- On attribute shift to state 545
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLON BARRBRACKET BAR AS
--   reduce production pattern -> pattern COLONCOLON pattern

State 545:
## Known stack suffix:
## pattern attribute
## LR(1) items:
pattern -> pattern attribute . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production pattern -> pattern attribute

State 546:
## Known stack suffix:
## name_tag
## LR(1) items:
pattern_gen -> name_tag . pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern_not_ident -> name_tag . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 547
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production simple_pattern_not_ident -> name_tag

State 547:
## Known stack suffix:
## name_tag pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . attribute [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_gen -> name_tag pattern . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On attribute shift to state 545
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production pattern_gen -> name_tag pattern

State 548:
## Known stack suffix:
## mod_longident
## LR(1) items:
constr_longident -> mod_longident . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT FLOAT FALSE EXCEPTION EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
mod_longident -> mod_longident . DOT UIDENT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT FLOAT FALSE EXCEPTION EQUAL DOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> mod_longident . DOT simple_delimited_pattern [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> mod_longident . DOT LBRACKET RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> mod_longident . DOT LPAREN RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> mod_longident . DOT LPAREN pattern RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On DOT shift to state 549
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT FLOAT FALSE EXCEPTION EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production constr_longident -> mod_longident

State 549:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
mod_longident -> mod_longident DOT . UIDENT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT FLOAT FALSE EXCEPTION EQUAL DOT COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> mod_longident DOT . simple_delimited_pattern [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> mod_longident DOT . LBRACKET RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> mod_longident DOT . LPAREN RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> mod_longident DOT . LPAREN pattern RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UIDENT shift to state 98
-- On LPAREN shift to state 550
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 563
-- On LBRACE shift to state 510
-- On simple_delimited_pattern shift to state 571
## Reductions:

State 550:
## Known stack suffix:
## mod_longident DOT LPAREN
## LR(1) items:
simple_pattern_not_ident -> mod_longident DOT LPAREN . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> mod_longident DOT LPAREN . pattern RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On RPAREN shift to state 551
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 552
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 551:
## Known stack suffix:
## mod_longident DOT LPAREN RPAREN
## LR(1) items:
simple_pattern_not_ident -> mod_longident DOT LPAREN RPAREN . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> mod_longident DOT LPAREN RPAREN

State 552:
## Known stack suffix:
## mod_longident DOT LPAREN pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . attribute [ RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
simple_pattern_not_ident -> mod_longident DOT LPAREN pattern . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On RPAREN shift to state 553
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On BAR shift to state 559
-- On AS shift to state 561
-- On attribute shift to state 545
## Reductions:

State 553:
## Known stack suffix:
## mod_longident DOT LPAREN pattern RPAREN
## LR(1) items:
simple_pattern_not_ident -> mod_longident DOT LPAREN pattern RPAREN . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> mod_longident DOT LPAREN pattern RPAREN

State 554:
## Known stack suffix:
## pattern COMMA
## LR(1) items:
pattern_comma_list -> pattern COMMA . pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 555
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 555:
## Known stack suffix:
## pattern COMMA pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . attribute [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern COMMA pattern . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COLONCOLON shift to state 543
-- On attribute shift to state 545
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER EQUAL COMMA COLON BARRBRACKET BAR AS
--   reduce production pattern_comma_list -> pattern COMMA pattern

State 556:
## Known stack suffix:
## extension
## LR(1) items:
simple_pattern_not_ident -> extension . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> extension

State 557:
## Known stack suffix:
## constr_longident
## LR(1) items:
pattern_gen -> constr_longident . pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
simple_pattern_not_ident -> constr_longident . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 558
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production simple_pattern_not_ident -> constr_longident

State 558:
## Known stack suffix:
## constr_longident pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . attribute [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_gen -> constr_longident pattern . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On attribute shift to state 545
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production pattern_gen -> constr_longident pattern

State 559:
## Known stack suffix:
## pattern BAR
## LR(1) items:
pattern -> pattern BAR . pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 560
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 560:
## Known stack suffix:
## pattern BAR pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern BAR pattern . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . attribute [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On attribute shift to state 545
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER EQUAL COLON BARRBRACKET BAR AS
--   reduce production pattern -> pattern BAR pattern

State 561:
## Known stack suffix:
## pattern AS
## LR(1) items:
pattern -> pattern AS . val_ident [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On LPAREN shift to state 62
-- On LIDENT shift to state 88
-- On val_ident shift to state 562
## Reductions:

State 562:
## Known stack suffix:
## pattern AS val_ident
## LR(1) items:
pattern -> pattern AS val_ident . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production pattern -> pattern AS val_ident

State 563:
## Known stack suffix:
## mod_longident DOT LBRACKET
## LR(1) items:
simple_delimited_pattern -> LBRACKET . pattern_semi_list opt_semi RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> mod_longident DOT LBRACKET . RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On RBRACKET shift to state 564
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_semi_list shift to state 565
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 570
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 564:
## Known stack suffix:
## mod_longident DOT LBRACKET RBRACKET
## LR(1) items:
simple_pattern_not_ident -> mod_longident DOT LBRACKET RBRACKET . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> mod_longident DOT LBRACKET RBRACKET

State 565:
## Known stack suffix:
## LBRACKET pattern_semi_list
## LR(1) items:
pattern_semi_list -> pattern_semi_list . SEMI pattern [ SEMI RBRACKET ]
simple_delimited_pattern -> LBRACKET pattern_semi_list . opt_semi RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On SEMI shift to state 566
-- On opt_semi shift to state 568
## Reductions:
-- On RBRACKET
--   reduce production opt_semi ->

State 566:
## Known stack suffix:
## pattern_semi_list SEMI
## LR(1) items:
opt_semi -> SEMI . [ RBRACKET BARRBRACKET ]
pattern_semi_list -> pattern_semi_list SEMI . pattern [ SEMI RBRACKET BARRBRACKET ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 567
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:
-- On RBRACKET BARRBRACKET
--   reduce production opt_semi -> SEMI

State 567:
## Known stack suffix:
## pattern_semi_list SEMI pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern -> pattern . attribute [ SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern_semi_list -> pattern_semi_list SEMI pattern . [ SEMI RBRACKET BARRBRACKET ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On BAR shift to state 559
-- On AS shift to state 561
-- On attribute shift to state 545
## Reductions:
-- On SEMI RBRACKET BARRBRACKET
--   reduce production pattern_semi_list -> pattern_semi_list SEMI pattern

State 568:
## Known stack suffix:
## LBRACKET pattern_semi_list opt_semi
## LR(1) items:
simple_delimited_pattern -> LBRACKET pattern_semi_list opt_semi . RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On RBRACKET shift to state 569
## Reductions:

State 569:
## Known stack suffix:
## LBRACKET pattern_semi_list opt_semi RBRACKET
## LR(1) items:
simple_delimited_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_delimited_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET

State 570:
## Known stack suffix:
## pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern -> pattern . attribute [ SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
pattern_semi_list -> pattern . [ SEMI RBRACKET BARRBRACKET ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On BAR shift to state 559
-- On AS shift to state 561
-- On attribute shift to state 545
## Reductions:
-- On SEMI RBRACKET BARRBRACKET
--   reduce production pattern_semi_list -> pattern

State 571:
## Known stack suffix:
## mod_longident DOT simple_delimited_pattern
## LR(1) items:
simple_pattern_not_ident -> mod_longident DOT simple_delimited_pattern . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> mod_longident DOT simple_delimited_pattern

State 572:
## Known stack suffix:
## EXCEPTION ext_attributes pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . BAR pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> EXCEPTION ext_attributes pattern . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern -> pattern . attribute [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On attribute shift to state 545
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production pattern -> EXCEPTION ext_attributes pattern

State 573:
## Known stack suffix:
## LPAREN pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . attribute [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
simple_pattern_not_ident -> LPAREN pattern . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
simple_pattern_not_ident -> LPAREN pattern . COLON core_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On RPAREN shift to state 574
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On COLON shift to state 575
-- On BAR shift to state 559
-- On AS shift to state 561
-- On attribute shift to state 545
## Reductions:

State 574:
## Known stack suffix:
## LPAREN pattern RPAREN
## LR(1) items:
simple_pattern_not_ident -> LPAREN pattern RPAREN . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> LPAREN pattern RPAREN

State 575:
## Known stack suffix:
## LPAREN pattern COLON
## LR(1) items:
simple_pattern_not_ident -> LPAREN pattern COLON . core_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 576
## Reductions:

State 576:
## Known stack suffix:
## LPAREN pattern COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ RPAREN LBRACKETAT ]
simple_pattern_not_ident -> LPAREN pattern COLON core_type . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On RPAREN shift to state 577
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:

State 577:
## Known stack suffix:
## LPAREN pattern COLON core_type RPAREN
## LR(1) items:
simple_pattern_not_ident -> LPAREN pattern COLON core_type RPAREN . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> LPAREN pattern COLON core_type RPAREN

State 578:
## Known stack suffix:
## LAZY ext_attributes simple_pattern
## LR(1) items:
pattern_gen -> LAZY ext_attributes simple_pattern . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production pattern_gen -> LAZY ext_attributes simple_pattern

State 579:
## Known stack suffix:
## name_tag
## LR(1) items:
simple_pattern_not_ident -> name_tag . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> name_tag

State 580:
## Known stack suffix:
## constr_longident
## LR(1) items:
simple_pattern_not_ident -> constr_longident . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> constr_longident

State 581:
## Known stack suffix:
## label_longident opt_pattern_type_constraint EQUAL pattern
## LR(1) items:
lbl_pattern -> label_longident opt_pattern_type_constraint EQUAL pattern . [ SEMI RBRACE ]
pattern -> pattern . AS val_ident [ SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . attribute [ SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On BAR shift to state 559
-- On AS shift to state 561
-- On attribute shift to state 545
## Reductions:
-- On SEMI RBRACE
--   reduce production lbl_pattern -> label_longident opt_pattern_type_constraint EQUAL pattern

State 582:
## Known stack suffix:
## LBRACKETBAR BARRBRACKET
## LR(1) items:
simple_delimited_pattern -> LBRACKETBAR BARRBRACKET . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_delimited_pattern -> LBRACKETBAR BARRBRACKET

State 583:
## Known stack suffix:
## LBRACKETBAR pattern_semi_list
## LR(1) items:
pattern_semi_list -> pattern_semi_list . SEMI pattern [ SEMI BARRBRACKET ]
simple_delimited_pattern -> LBRACKETBAR pattern_semi_list . opt_semi BARRBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On SEMI shift to state 566
-- On opt_semi shift to state 584
## Reductions:
-- On BARRBRACKET
--   reduce production opt_semi ->

State 584:
## Known stack suffix:
## LBRACKETBAR pattern_semi_list opt_semi
## LR(1) items:
simple_delimited_pattern -> LBRACKETBAR pattern_semi_list opt_semi . BARRBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On BARRBRACKET shift to state 585
## Reductions:

State 585:
## Known stack suffix:
## LBRACKETBAR pattern_semi_list opt_semi BARRBRACKET
## LR(1) items:
simple_delimited_pattern -> LBRACKETBAR pattern_semi_list opt_semi BARRBRACKET . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_delimited_pattern -> LBRACKETBAR pattern_semi_list opt_semi BARRBRACKET

State 586:
## Known stack suffix:
## pattern
## LR(1) items:
match_case -> pattern . MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
match_case -> pattern . WHEN seq_expr MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
match_case -> pattern . MINUSGREATER DOT [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . attribute [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## Transitions:
-- On WHEN shift to state 587
-- On MINUSGREATER shift to state 841
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On BAR shift to state 559
-- On AS shift to state 561
-- On attribute shift to state 545
## Reductions:

State 587:
## Known stack suffix:
## pattern WHEN
## LR(1) items:
match_case -> pattern WHEN . seq_expr MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 838
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 588:
## Known stack suffix:
## FUN
## LR(1) items:
expr -> FUN . ext_attributes labeled_simple_pattern fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> FUN . ext_attributes LPAREN TYPE lident_list RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 589
-- On attribute shift to state 295
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE CHAR BACKQUOTE
--   reduce production ext_attributes ->

State 589:
## Known stack suffix:
## FUN ext_attributes
## LR(1) items:
expr -> FUN ext_attributes . labeled_simple_pattern fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> FUN ext_attributes . LPAREN TYPE lident_list RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUS shift to state 311
-- On LPAREN shift to state 818
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 836
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
## Reductions:

State 590:
## Known stack suffix:
## TILDE
## LR(1) items:
labeled_simple_pattern -> TILDE . LPAREN label_let_pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
labeled_simple_pattern -> TILDE . label_var [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On LPAREN shift to state 591
-- On LIDENT shift to state 592
-- On label_var shift to state 598
## Reductions:

State 591:
## Known stack suffix:
## TILDE LPAREN
## LR(1) items:
labeled_simple_pattern -> TILDE LPAREN . label_let_pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On LIDENT shift to state 592
-- On label_var shift to state 593
-- On label_let_pattern shift to state 596
## Reductions:

State 592:
## Known stack suffix:
## LIDENT
## LR(1) items:
label_var -> LIDENT . [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP RPAREN QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP RPAREN QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE
--   reduce production label_var -> LIDENT

State 593:
## Known stack suffix:
## label_var
## LR(1) items:
label_let_pattern -> label_var . [ RPAREN EQUAL ]
label_let_pattern -> label_var . COLON core_type [ RPAREN EQUAL ]
## Transitions:
-- On COLON shift to state 594
## Reductions:
-- On RPAREN EQUAL
--   reduce production label_let_pattern -> label_var

State 594:
## Known stack suffix:
## label_var COLON
## LR(1) items:
label_let_pattern -> label_var COLON . core_type [ RPAREN EQUAL ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 595
## Reductions:

State 595:
## Known stack suffix:
## label_var COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ RPAREN LBRACKETAT EQUAL ]
label_let_pattern -> label_var COLON core_type . [ RPAREN EQUAL ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On RPAREN EQUAL
--   reduce production label_let_pattern -> label_var COLON core_type

State 596:
## Known stack suffix:
## TILDE LPAREN label_let_pattern
## LR(1) items:
labeled_simple_pattern -> TILDE LPAREN label_let_pattern . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On RPAREN shift to state 597
## Reductions:

State 597:
## Known stack suffix:
## TILDE LPAREN label_let_pattern RPAREN
## LR(1) items:
labeled_simple_pattern -> TILDE LPAREN label_let_pattern RPAREN . [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE
--   reduce production labeled_simple_pattern -> TILDE LPAREN label_let_pattern RPAREN

State 598:
## Known stack suffix:
## TILDE label_var
## LR(1) items:
labeled_simple_pattern -> TILDE label_var . [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE
--   reduce production labeled_simple_pattern -> TILDE label_var

State 599:
## Known stack suffix:
## QUESTION
## LR(1) items:
labeled_simple_pattern -> QUESTION . LPAREN label_let_pattern opt_default RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
labeled_simple_pattern -> QUESTION . label_var [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On LPAREN shift to state 600
-- On LIDENT shift to state 592
-- On label_var shift to state 817
## Reductions:

State 600:
## Known stack suffix:
## QUESTION LPAREN
## LR(1) items:
labeled_simple_pattern -> QUESTION LPAREN . label_let_pattern opt_default RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On LIDENT shift to state 592
-- On label_var shift to state 593
-- On label_let_pattern shift to state 601
## Reductions:

State 601:
## Known stack suffix:
## QUESTION LPAREN label_let_pattern
## LR(1) items:
labeled_simple_pattern -> QUESTION LPAREN label_let_pattern . opt_default RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On EQUAL shift to state 602
-- On opt_default shift to state 815
## Reductions:
-- On RPAREN
--   reduce production opt_default ->

State 602:
## Known stack suffix:
## EQUAL
## LR(1) items:
opt_default -> EQUAL . seq_expr [ RPAREN ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 814
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 603:
## Known stack suffix:
## FOR
## LR(1) items:
expr -> FOR . ext_attributes pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 604
-- On attribute shift to state 295
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE EXCEPTION CHAR BACKQUOTE
--   reduce production ext_attributes ->

State 604:
## Known stack suffix:
## FOR ext_attributes
## LR(1) items:
expr -> FOR ext_attributes . pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 605
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 605:
## Known stack suffix:
## FOR ext_attributes pattern
## LR(1) items:
expr -> FOR ext_attributes pattern . EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
pattern -> pattern . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On EQUAL shift to state 606
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On BAR shift to state 559
-- On AS shift to state 561
-- On attribute shift to state 545
## Reductions:

State 606:
## Known stack suffix:
## FOR ext_attributes pattern EQUAL
## LR(1) items:
expr -> FOR ext_attributes pattern EQUAL . seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 806
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 607:
## Known stack suffix:
## ASSERT
## LR(1) items:
expr -> ASSERT . ext_attributes simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 608
-- On attribute shift to state 295
## Reductions:
-- On UIDENT TRUE STRING QUESTIONQUESTION PREFIXOP NEW LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE INT FLOAT FALSE CHAR BEGIN BANG BACKQUOTE
--   reduce production ext_attributes ->

State 608:
## Known stack suffix:
## ASSERT ext_attributes
## LR(1) items:
expr -> ASSERT ext_attributes . simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 609
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:

State 609:
## Known stack suffix:
## ASSERT ext_attributes simple_expr
## LR(1) items:
expr -> ASSERT ext_attributes simple_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SHARPOP shift to state 610
-- On SHARP shift to state 619
-- On DOT shift to state 612
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> ASSERT ext_attributes simple_expr

State 610:
## Known stack suffix:
## simple_expr SHARPOP
## LR(1) items:
simple_expr -> simple_expr SHARPOP . simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 611
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:

State 611:
## Known stack suffix:
## simple_expr SHARPOP simple_expr
## LR(1) items:
simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr SHARPOP simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DOT shift to state 612
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr SHARPOP simple_expr

State 612:
## Known stack suffix:
## simple_expr DOT
## LR(1) items:
simple_expr -> simple_expr DOT . label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACE expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On LPAREN shift to state 613
-- On LIDENT shift to state 511
-- On LBRACKET shift to state 799
-- On LBRACE shift to state 802
-- On mod_longident shift to state 377
-- On label_longident shift to state 805
## Reductions:

State 613:
## Known stack suffix:
## simple_expr DOT LPAREN
## LR(1) items:
simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 797
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 614:
## Known stack suffix:
## subtractive
## LR(1) items:
expr -> subtractive . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 796
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 615:
## Known stack suffix:
## simple_expr
## LR(1) items:
expr -> simple_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . simple_labeled_expr_list [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT label_longident LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LPAREN seq_expr RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LBRACE expr RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 616
-- On STRING shift to state 289
-- On SHARPOP shift to state 610
-- On SHARP shift to state 619
-- On QUESTIONQUESTION shift to state 290
-- On QUESTION shift to state 621
-- On PREFIXOP shift to state 291
-- On OPTLABEL shift to state 623
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LABEL shift to state 628
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On DOT shift to state 630
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_labeled_expr_list shift to state 791
-- On simple_expr shift to state 792
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On labeled_simple_expr shift to state 795
-- On label_expr shift to state 794
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> simple_expr

State 616:
## Known stack suffix:
## TILDE
## LR(1) items:
label_expr -> TILDE . label_ident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LIDENT shift to state 617
-- On label_ident shift to state 618
## Reductions:

State 617:
## Known stack suffix:
## LIDENT
## LR(1) items:
label_ident -> LIDENT . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production label_ident -> LIDENT

State 618:
## Known stack suffix:
## TILDE label_ident
## LR(1) items:
label_expr -> TILDE label_ident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production label_expr -> TILDE label_ident

State 619:
## Known stack suffix:
## simple_expr SHARP
## LR(1) items:
simple_expr -> simple_expr SHARP . label [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 620
## Reductions:

State 620:
## Known stack suffix:
## simple_expr SHARP label
## LR(1) items:
simple_expr -> simple_expr SHARP label . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr SHARP label

State 621:
## Known stack suffix:
## QUESTION
## LR(1) items:
label_expr -> QUESTION . label_ident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LIDENT shift to state 617
-- On label_ident shift to state 622
## Reductions:

State 622:
## Known stack suffix:
## QUESTION label_ident
## LR(1) items:
label_expr -> QUESTION label_ident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production label_expr -> QUESTION label_ident

State 623:
## Known stack suffix:
## OPTLABEL
## LR(1) items:
label_expr -> OPTLABEL . simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 624
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:

State 624:
## Known stack suffix:
## OPTLABEL simple_expr
## LR(1) items:
label_expr -> OPTLABEL simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SHARPOP shift to state 610
-- On SHARP shift to state 619
-- On DOT shift to state 612
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production label_expr -> OPTLABEL simple_expr

State 625:
## Known stack suffix:
## extension
## LR(1) items:
simple_expr -> extension . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> extension

State 626:
## Known stack suffix:
## constr_longident
## LR(1) items:
simple_expr -> constr_longident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> constr_longident

State 627:
## Known stack suffix:
## constant
## LR(1) items:
simple_expr -> constant . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> constant

State 628:
## Known stack suffix:
## LABEL
## LR(1) items:
label_expr -> LABEL . simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 629
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:

State 629:
## Known stack suffix:
## LABEL simple_expr
## LR(1) items:
label_expr -> LABEL simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SHARPOP shift to state 610
-- On SHARP shift to state 619
-- On DOT shift to state 612
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production label_expr -> LABEL simple_expr

State 630:
## Known stack suffix:
## simple_expr DOT
## LR(1) items:
expr -> simple_expr DOT . label_longident LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LPAREN seq_expr RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LBRACE expr RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACE expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On LPAREN shift to state 631
-- On LIDENT shift to state 511
-- On LBRACKET shift to state 778
-- On LBRACE shift to state 783
-- On mod_longident shift to state 377
-- On label_longident shift to state 788
## Reductions:

State 631:
## Known stack suffix:
## simple_expr DOT LPAREN
## LR(1) items:
expr -> simple_expr DOT LPAREN . seq_expr RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 632
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 632:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr
## LR(1) items:
expr -> simple_expr DOT LPAREN seq_expr . RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 633
## Reductions:

State 633:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN
## LR(1) items:
expr -> simple_expr DOT LPAREN seq_expr RPAREN . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 634
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN

State 634:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS
## LR(1) items:
expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 777
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 635:
## Known stack suffix:
## name_tag
## LR(1) items:
expr -> name_tag . simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> name_tag . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 636
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:
-- On WITH VAL TYPE TO TILDE THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT LABEL INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> name_tag

State 636:
## Known stack suffix:
## name_tag simple_expr
## LR(1) items:
expr -> name_tag simple_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SHARPOP shift to state 610
-- On SHARP shift to state 619
-- On DOT shift to state 612
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> name_tag simple_expr

State 637:
## Known stack suffix:
## let_bindings
## LR(1) items:
expr -> let_bindings . IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
let_bindings -> let_bindings . and_let_binding [ IN AND ]
## Transitions:
-- On IN shift to state 638
-- On AND shift to state 702
-- On and_let_binding shift to state 776
## Reductions:

State 638:
## Known stack suffix:
## let_bindings IN
## LR(1) items:
expr -> let_bindings IN . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 639
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 639:
## Known stack suffix:
## let_bindings IN seq_expr
## LR(1) items:
expr -> let_bindings IN seq_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> let_bindings IN seq_expr

State 640:
## Known stack suffix:
## let_binding
## LR(1) items:
let_bindings -> let_binding . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production let_bindings -> let_binding

State 641:
## Known stack suffix:
## label
## LR(1) items:
expr -> label . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 642
## Reductions:

State 642:
## Known stack suffix:
## label LESSMINUS
## LR(1) items:
expr -> label LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 691
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 643:
## Known stack suffix:
## expr_comma_list
## LR(1) items:
expr -> expr_comma_list . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On COMMA shift to state 644
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr_comma_list

State 644:
## Known stack suffix:
## expr_comma_list COMMA
## LR(1) items:
expr_comma_list -> expr_comma_list COMMA . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 645
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 645:
## Known stack suffix:
## expr_comma_list COMMA expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list COMMA expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BAR AND
--   reduce production expr_comma_list -> expr_comma_list COMMA expr

State 646:
## Known stack suffix:
## expr STAR
## LR(1) items:
expr -> expr STAR . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 647
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 647:
## Known stack suffix:
## expr STAR expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr STAR expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On INFIXOP4 shift to state 648
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr STAR expr

State 648:
## Known stack suffix:
## expr INFIXOP4
## LR(1) items:
expr -> expr INFIXOP4 . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 649
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 649:
## Known stack suffix:
## expr INFIXOP4 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP4 expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On INFIXOP4 shift to state 648
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP4 expr

State 650:
## Known stack suffix:
## expr attribute
## LR(1) items:
expr -> expr attribute . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr attribute

State 651:
## Known stack suffix:
## constr_longident
## LR(1) items:
expr -> constr_longident . simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> constr_longident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 652
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:
-- On WITH VAL TYPE TO TILDE THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT LABEL INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> constr_longident

State 652:
## Known stack suffix:
## constr_longident simple_expr
## LR(1) items:
expr -> constr_longident simple_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SHARPOP shift to state 610
-- On SHARP shift to state 619
-- On DOT shift to state 612
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> constr_longident simple_expr

State 653:
## Known stack suffix:
## additive
## LR(1) items:
expr -> additive . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 654
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 654:
## Known stack suffix:
## additive expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> additive expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> additive expr

State 655:
## Known stack suffix:
## expr PLUSEQ
## LR(1) items:
expr -> expr PLUSEQ . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 656
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 656:
## Known stack suffix:
## expr PLUSEQ expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr PLUSEQ expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PERCENT shift to state 657
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr PLUSEQ expr

State 657:
## Known stack suffix:
## expr PERCENT
## LR(1) items:
expr -> expr PERCENT . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 658
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 658:
## Known stack suffix:
## expr PERCENT expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr PERCENT expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On INFIXOP4 shift to state 648
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr PERCENT expr

State 659:
## Known stack suffix:
## expr INFIXOP3
## LR(1) items:
expr -> expr INFIXOP3 . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 660
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 660:
## Known stack suffix:
## expr INFIXOP3 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP3 expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On INFIXOP4 shift to state 648
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP3 expr

State 661:
## Known stack suffix:
## expr PLUSDOT
## LR(1) items:
expr -> expr PLUSDOT . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 662
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 662:
## Known stack suffix:
## expr PLUSDOT expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr PLUSDOT expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PERCENT shift to state 657
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr PLUSDOT expr

State 663:
## Known stack suffix:
## expr PLUS
## LR(1) items:
expr -> expr PLUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 664
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 664:
## Known stack suffix:
## expr PLUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr PLUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PERCENT shift to state 657
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr PLUS expr

State 665:
## Known stack suffix:
## expr OR
## LR(1) items:
expr -> expr OR . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 666
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 666:
## Known stack suffix:
## expr OR expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr OR expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BAR AND
--   reduce production expr -> expr OR expr

State 667:
## Known stack suffix:
## expr MINUSDOT
## LR(1) items:
expr -> expr MINUSDOT . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 668
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 668:
## Known stack suffix:
## expr MINUSDOT expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr MINUSDOT expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PERCENT shift to state 657
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr MINUSDOT expr

State 669:
## Known stack suffix:
## expr MINUS
## LR(1) items:
expr -> expr MINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 670
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 670:
## Known stack suffix:
## expr MINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr MINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PERCENT shift to state 657
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr MINUS expr

State 671:
## Known stack suffix:
## expr LESS
## LR(1) items:
expr -> expr LESS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 672
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 672:
## Known stack suffix:
## expr LESS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr LESS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On COLONCOLON shift to state 677
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OR OPEN MODULE MINUSGREATER METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr LESS expr

State 673:
## Known stack suffix:
## expr INFIXOP2
## LR(1) items:
expr -> expr INFIXOP2 . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 674
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 674:
## Known stack suffix:
## expr INFIXOP2 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP2 expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PERCENT shift to state 657
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP2 expr

State 675:
## Known stack suffix:
## expr INFIXOP1
## LR(1) items:
expr -> expr INFIXOP1 . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 676
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 676:
## Known stack suffix:
## expr INFIXOP1 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP1 expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On COLONCOLON shift to state 677
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OR OPEN MODULE MINUSGREATER METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP1 expr

State 677:
## Known stack suffix:
## expr COLONCOLON
## LR(1) items:
expr -> expr COLONCOLON . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 678
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 678:
## Known stack suffix:
## expr COLONCOLON expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr COLONCOLON expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On COLONCOLON shift to state 677
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OR OPEN MODULE MINUSGREATER METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr COLONCOLON expr

State 679:
## Known stack suffix:
## expr INFIXOP0
## LR(1) items:
expr -> expr INFIXOP0 . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 680
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 680:
## Known stack suffix:
## expr INFIXOP0 expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP0 expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On COLONCOLON shift to state 677
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OR OPEN MODULE MINUSGREATER METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr INFIXOP0 expr

State 681:
## Known stack suffix:
## expr GREATER
## LR(1) items:
expr -> expr GREATER . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 682
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 682:
## Known stack suffix:
## expr GREATER expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr GREATER expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On COLONCOLON shift to state 677
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OR OPEN MODULE MINUSGREATER METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr GREATER expr

State 683:
## Known stack suffix:
## expr EQUAL
## LR(1) items:
expr -> expr EQUAL . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 684
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 684:
## Known stack suffix:
## expr EQUAL expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr EQUAL expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On COLONCOLON shift to state 677
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OR OPEN MODULE MINUSGREATER METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> expr EQUAL expr

State 685:
## Known stack suffix:
## expr BARBAR
## LR(1) items:
expr -> expr BARBAR . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 686
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 686:
## Known stack suffix:
## expr BARBAR expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr BARBAR expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BAR AND
--   reduce production expr -> expr BARBAR expr

State 687:
## Known stack suffix:
## expr AMPERSAND
## LR(1) items:
expr -> expr AMPERSAND . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 688
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 688:
## Known stack suffix:
## expr AMPERSAND expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr AMPERSAND expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COLONCOLON shift to state 677
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OR OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BARBAR BAR AND
--   reduce production expr -> expr AMPERSAND expr

State 689:
## Known stack suffix:
## expr AMPERAMPER
## LR(1) items:
expr -> expr AMPERAMPER . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 690
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 690:
## Known stack suffix:
## expr AMPERAMPER expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr AMPERAMPER expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COLONCOLON shift to state 677
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OR OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BARBAR BAR AND
--   reduce production expr -> expr AMPERAMPER expr

State 691:
## Known stack suffix:
## label LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> label LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COLONGREATER COLON CLASS BARRBRACKET BAR AND
--   reduce production expr -> label LESSMINUS expr

State 692:
## Known stack suffix:
## expr COMMA
## LR(1) items:
expr_comma_list -> expr COMMA . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 693
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 693:
## Known stack suffix:
## expr COMMA expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr COMMA expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLON CLASS BARRBRACKET BAR AND
--   reduce production expr_comma_list -> expr COMMA expr

State 694:
## Known stack suffix:
## expr COLONEQUAL
## LR(1) items:
expr -> expr COLONEQUAL . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 695
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 695:
## Known stack suffix:
## expr COLONEQUAL expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr COLONEQUAL expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COLONGREATER COLON CLASS BARRBRACKET BAR AND
--   reduce production expr -> expr COLONEQUAL expr

State 696:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . SEMI [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . SEMI seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . SEMI PERCENT attr_id seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On SEMI shift to state 697
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COLONGREATER COLON CLASS BARRBRACKET BAR AND
--   reduce production seq_expr -> expr

State 697:
## Known stack suffix:
## expr SEMI
## LR(1) items:
seq_expr -> expr SEMI . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr SEMI . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
seq_expr -> expr SEMI . PERCENT attr_id seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On PERCENT shift to state 698
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 701
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ OR OPEN MODULE MINUSGREATER METHOD LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production seq_expr -> expr SEMI

State 698:
## Known stack suffix:
## expr SEMI PERCENT
## LR(1) items:
seq_expr -> expr SEMI PERCENT . attr_id seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WITH shift to state 3
-- On WHILE shift to state 4
-- On WHEN shift to state 5
-- On VIRTUAL shift to state 6
-- On VAL shift to state 7
-- On UIDENT shift to state 8
-- On TYPE shift to state 9
-- On TRY shift to state 10
-- On TRUE shift to state 11
-- On TO shift to state 12
-- On THEN shift to state 13
-- On STRUCT shift to state 14
-- On SIG shift to state 15
-- On REC shift to state 16
-- On PRIVATE shift to state 17
-- On OR shift to state 18
-- On OPEN shift to state 19
-- On OF shift to state 20
-- On OBJECT shift to state 21
-- On NONREC shift to state 22
-- On NEW shift to state 23
-- On MUTABLE shift to state 24
-- On MODULE shift to state 25
-- On METHOD shift to state 26
-- On MATCH shift to state 27
-- On LIDENT shift to state 28
-- On LET shift to state 29
-- On LAZY shift to state 30
-- On INITIALIZER shift to state 31
-- On INHERIT shift to state 32
-- On INCLUDE shift to state 33
-- On IN shift to state 34
-- On IF shift to state 35
-- On FUNCTOR shift to state 36
-- On FUNCTION shift to state 37
-- On FUN shift to state 38
-- On FOR shift to state 39
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 41
-- On EXCEPTION shift to state 42
-- On END shift to state 43
-- On ELSE shift to state 44
-- On DOWNTO shift to state 45
-- On DONE shift to state 46
-- On DO shift to state 47
-- On CONSTRAINT shift to state 48
-- On CLASS shift to state 49
-- On BEGIN shift to state 50
-- On ASSERT shift to state 51
-- On AS shift to state 52
-- On AND shift to state 53
-- On single_attr_id shift to state 54
-- On attr_id shift to state 699
## Reductions:

State 699:
## Known stack suffix:
## expr SEMI PERCENT attr_id
## LR(1) items:
seq_expr -> expr SEMI PERCENT attr_id . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 700
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 700:
## Known stack suffix:
## expr SEMI PERCENT attr_id seq_expr
## LR(1) items:
seq_expr -> expr SEMI PERCENT attr_id seq_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production seq_expr -> expr SEMI PERCENT attr_id seq_expr

State 701:
## Known stack suffix:
## expr SEMI seq_expr
## LR(1) items:
seq_expr -> expr SEMI seq_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production seq_expr -> expr SEMI seq_expr

State 702:
## Known stack suffix:
## AND
## LR(1) items:
and_let_binding -> AND . attributes let_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 703
-- On attribute shift to state 225
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE CHAR BACKQUOTE
--   reduce production attributes ->

State 703:
## Known stack suffix:
## AND attributes
## LR(1) items:
and_let_binding -> AND attributes . let_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 704
-- On simple_pattern_not_ident shift to state 753
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_no_exn_comma_list shift to state 758
-- On pattern_no_exn shift to state 761
-- On pattern_gen shift to state 773
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On let_binding_body shift to state 774
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 704:
## Known stack suffix:
## val_ident
## LR(1) items:
let_binding_body -> val_ident . fun_binding [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
let_binding_body -> val_ident . COLON typevar_list DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
let_binding_body -> val_ident . COLON TYPE lident_list DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
simple_pattern -> val_ident . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUS shift to state 311
-- On LPAREN shift to state 716
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EQUAL shift to state 724
-- On COLONGREATER shift to state 726
-- On COLON shift to state 740
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On type_constraint shift to state 732
-- On strict_binding shift to state 735
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 737
-- On fun_binding shift to state 752
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
## Reductions:
-- On LBRACKETAT COMMA COLONCOLON BAR AS
--   reduce production simple_pattern -> val_ident

State 705:
## Known stack suffix:
## OPTLABEL
## LR(1) items:
labeled_simple_pattern -> OPTLABEL . LPAREN let_pattern opt_default RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
labeled_simple_pattern -> OPTLABEL . pattern_var [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On UNDERSCORE shift to state 706
-- On LPAREN shift to state 707
-- On LIDENT shift to state 714
-- On pattern_var shift to state 715
## Reductions:

State 706:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
pattern_var -> UNDERSCORE . [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE
--   reduce production pattern_var -> UNDERSCORE

State 707:
## Known stack suffix:
## OPTLABEL LPAREN
## LR(1) items:
labeled_simple_pattern -> OPTLABEL LPAREN . let_pattern opt_default RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 708
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On let_pattern shift to state 711
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 708:
## Known stack suffix:
## pattern
## LR(1) items:
let_pattern -> pattern . [ RPAREN EQUAL ]
let_pattern -> pattern . COLON core_type [ RPAREN EQUAL ]
pattern -> pattern . AS val_ident [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . attribute [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On COLON shift to state 709
-- On BAR shift to state 559
-- On AS shift to state 561
-- On attribute shift to state 545
## Reductions:
-- On RPAREN EQUAL
--   reduce production let_pattern -> pattern

State 709:
## Known stack suffix:
## pattern COLON
## LR(1) items:
let_pattern -> pattern COLON . core_type [ RPAREN EQUAL ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 710
## Reductions:

State 710:
## Known stack suffix:
## pattern COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ RPAREN LBRACKETAT EQUAL ]
let_pattern -> pattern COLON core_type . [ RPAREN EQUAL ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On RPAREN EQUAL
--   reduce production let_pattern -> pattern COLON core_type

State 711:
## Known stack suffix:
## OPTLABEL LPAREN let_pattern
## LR(1) items:
labeled_simple_pattern -> OPTLABEL LPAREN let_pattern . opt_default RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On EQUAL shift to state 602
-- On opt_default shift to state 712
## Reductions:
-- On RPAREN
--   reduce production opt_default ->

State 712:
## Known stack suffix:
## OPTLABEL LPAREN let_pattern opt_default
## LR(1) items:
labeled_simple_pattern -> OPTLABEL LPAREN let_pattern opt_default . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On RPAREN shift to state 713
## Reductions:

State 713:
## Known stack suffix:
## OPTLABEL LPAREN let_pattern opt_default RPAREN
## LR(1) items:
labeled_simple_pattern -> OPTLABEL LPAREN let_pattern opt_default RPAREN . [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE
--   reduce production labeled_simple_pattern -> OPTLABEL LPAREN let_pattern opt_default RPAREN

State 714:
## Known stack suffix:
## LIDENT
## LR(1) items:
pattern_var -> LIDENT . [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE
--   reduce production pattern_var -> LIDENT

State 715:
## Known stack suffix:
## OPTLABEL pattern_var
## LR(1) items:
labeled_simple_pattern -> OPTLABEL pattern_var . [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE
--   reduce production labeled_simple_pattern -> OPTLABEL pattern_var

State 716:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
simple_pattern_not_ident -> LPAREN . pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
simple_pattern_not_ident -> LPAREN . MODULE ext_attributes UIDENT RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
simple_pattern_not_ident -> LPAREN . MODULE ext_attributes UIDENT COLON package_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
strict_binding -> LPAREN . TYPE lident_list RPAREN fun_binding [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
val_ident -> LPAREN . operator RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TYPE shift to state 717
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On STAR shift to state 63
-- On SHARPOP shift to state 64
-- On SHARP shift to state 306
-- On RPAREN shift to state 269
-- On PREFIXOP shift to state 65
-- On PLUSEQ shift to state 66
-- On PLUSDOT shift to state 67
-- On PLUS shift to state 315
-- On PERCENT shift to state 69
-- On OR shift to state 70
-- On MODULE shift to state 316
-- On MINUSDOT shift to state 71
-- On MINUS shift to state 528
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LESS shift to state 73
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On INFIXOP4 shift to state 74
-- On INFIXOP3 shift to state 75
-- On INFIXOP2 shift to state 76
-- On INFIXOP1 shift to state 77
-- On INFIXOP0 shift to state 78
-- On GREATER shift to state 79
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On EQUAL shift to state 80
-- On COLONEQUAL shift to state 81
-- On CHAR shift to state 484
-- On BARBAR shift to state 82
-- On BANG shift to state 83
-- On BACKQUOTE shift to state 181
-- On AMPERSAND shift to state 84
-- On AMPERAMPER shift to state 85
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 573
-- On operator shift to state 86
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 717:
## Known stack suffix:
## LPAREN TYPE
## LR(1) items:
strict_binding -> LPAREN TYPE . lident_list RPAREN fun_binding [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On LIDENT shift to state 718
-- On lident_list shift to state 720
## Reductions:

State 718:
## Known stack suffix:
## LIDENT
## LR(1) items:
lident_list -> LIDENT . [ RPAREN DOT ]
lident_list -> LIDENT . lident_list [ RPAREN DOT ]
## Transitions:
-- On LIDENT shift to state 718
-- On lident_list shift to state 719
## Reductions:
-- On RPAREN DOT
--   reduce production lident_list -> LIDENT

State 719:
## Known stack suffix:
## LIDENT lident_list
## LR(1) items:
lident_list -> LIDENT lident_list . [ RPAREN DOT ]
## Transitions:
## Reductions:
-- On RPAREN DOT
--   reduce production lident_list -> LIDENT lident_list

State 720:
## Known stack suffix:
## LPAREN TYPE lident_list
## LR(1) items:
strict_binding -> LPAREN TYPE lident_list . RPAREN fun_binding [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On RPAREN shift to state 721
## Reductions:

State 721:
## Known stack suffix:
## LPAREN TYPE lident_list RPAREN
## LR(1) items:
strict_binding -> LPAREN TYPE lident_list RPAREN . fun_binding [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUS shift to state 311
-- On LPAREN shift to state 716
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EQUAL shift to state 724
-- On COLONGREATER shift to state 726
-- On COLON shift to state 728
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On type_constraint shift to state 732
-- On strict_binding shift to state 735
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 737
-- On fun_binding shift to state 739
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
## Reductions:

State 722:
## Known stack suffix:
## LABEL
## LR(1) items:
labeled_simple_pattern -> LABEL . simple_pattern [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 527
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 723
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
## Reductions:

State 723:
## Known stack suffix:
## LABEL simple_pattern
## LR(1) items:
labeled_simple_pattern -> LABEL simple_pattern . [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE
--   reduce production labeled_simple_pattern -> LABEL simple_pattern

State 724:
## Known stack suffix:
## EQUAL
## LR(1) items:
strict_binding -> EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 725
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 725:
## Known stack suffix:
## EQUAL seq_expr
## LR(1) items:
strict_binding -> EQUAL seq_expr . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production strict_binding -> EQUAL seq_expr

State 726:
## Known stack suffix:
## COLONGREATER
## LR(1) items:
type_constraint -> COLONGREATER . core_type [ SEMI RPAREN RBRACE EQUAL ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 727
## Reductions:

State 727:
## Known stack suffix:
## COLONGREATER core_type
## LR(1) items:
core_type -> core_type . attribute [ SEMI RPAREN RBRACE LBRACKETAT EQUAL ]
type_constraint -> COLONGREATER core_type . [ SEMI RPAREN RBRACE EQUAL ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On SEMI RPAREN RBRACE EQUAL
--   reduce production type_constraint -> COLONGREATER core_type

State 728:
## Known stack suffix:
## COLON
## LR(1) items:
type_constraint -> COLON . core_type [ SEMI RPAREN RBRACE EQUAL ]
type_constraint -> COLON . core_type COLONGREATER core_type [ SEMI RPAREN RBRACE EQUAL ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 729
## Reductions:

State 729:
## Known stack suffix:
## COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ SEMI RPAREN RBRACE LBRACKETAT EQUAL COLONGREATER ]
type_constraint -> COLON core_type . [ SEMI RPAREN RBRACE EQUAL ]
type_constraint -> COLON core_type . COLONGREATER core_type [ SEMI RPAREN RBRACE EQUAL ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COLONGREATER shift to state 730
-- On attribute shift to state 391
## Reductions:
-- On SEMI RPAREN RBRACE EQUAL
--   reduce production type_constraint -> COLON core_type

State 730:
## Known stack suffix:
## COLON core_type COLONGREATER
## LR(1) items:
type_constraint -> COLON core_type COLONGREATER . core_type [ SEMI RPAREN RBRACE EQUAL ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 731
## Reductions:

State 731:
## Known stack suffix:
## COLON core_type COLONGREATER core_type
## LR(1) items:
core_type -> core_type . attribute [ SEMI RPAREN RBRACE LBRACKETAT EQUAL ]
type_constraint -> COLON core_type COLONGREATER core_type . [ SEMI RPAREN RBRACE EQUAL ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On SEMI RPAREN RBRACE EQUAL
--   reduce production type_constraint -> COLON core_type COLONGREATER core_type

State 732:
## Known stack suffix:
## type_constraint
## LR(1) items:
fun_binding -> type_constraint . EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On EQUAL shift to state 733
## Reductions:

State 733:
## Known stack suffix:
## type_constraint EQUAL
## LR(1) items:
fun_binding -> type_constraint EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 734
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 734:
## Known stack suffix:
## type_constraint EQUAL seq_expr
## LR(1) items:
fun_binding -> type_constraint EQUAL seq_expr . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production fun_binding -> type_constraint EQUAL seq_expr

State 735:
## Known stack suffix:
## strict_binding
## LR(1) items:
fun_binding -> strict_binding . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production fun_binding -> strict_binding

State 736:
## Known stack suffix:
## simple_pattern
## LR(1) items:
labeled_simple_pattern -> simple_pattern . [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE
--   reduce production labeled_simple_pattern -> simple_pattern

State 737:
## Known stack suffix:
## labeled_simple_pattern
## LR(1) items:
strict_binding -> labeled_simple_pattern . fun_binding [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUS shift to state 311
-- On LPAREN shift to state 716
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EQUAL shift to state 724
-- On COLONGREATER shift to state 726
-- On COLON shift to state 728
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On type_constraint shift to state 732
-- On strict_binding shift to state 735
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 737
-- On fun_binding shift to state 738
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
## Reductions:

State 738:
## Known stack suffix:
## labeled_simple_pattern fun_binding
## LR(1) items:
strict_binding -> labeled_simple_pattern fun_binding . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production strict_binding -> labeled_simple_pattern fun_binding

State 739:
## Known stack suffix:
## LPAREN TYPE lident_list RPAREN fun_binding
## LR(1) items:
strict_binding -> LPAREN TYPE lident_list RPAREN fun_binding . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production strict_binding -> LPAREN TYPE lident_list RPAREN fun_binding

State 740:
## Known stack suffix:
## val_ident COLON
## LR(1) items:
let_binding_body -> val_ident COLON . typevar_list DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
let_binding_body -> val_ident COLON . TYPE lident_list DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
type_constraint -> COLON . core_type [ EQUAL ]
type_constraint -> COLON . core_type COLONGREATER core_type [ EQUAL ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On TYPE shift to state 741
-- On SHARP shift to state 93
-- On QUOTE shift to state 150
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On typevar_list shift to state 747
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 729
## Reductions:

State 741:
## Known stack suffix:
## val_ident COLON TYPE
## LR(1) items:
let_binding_body -> val_ident COLON TYPE . lident_list DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LIDENT shift to state 718
-- On lident_list shift to state 742
## Reductions:

State 742:
## Known stack suffix:
## val_ident COLON TYPE lident_list
## LR(1) items:
let_binding_body -> val_ident COLON TYPE lident_list . DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On DOT shift to state 743
## Reductions:

State 743:
## Known stack suffix:
## val_ident COLON TYPE lident_list DOT
## LR(1) items:
let_binding_body -> val_ident COLON TYPE lident_list DOT . core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 744
## Reductions:

State 744:
## Known stack suffix:
## val_ident COLON TYPE lident_list DOT core_type
## LR(1) items:
core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
let_binding_body -> val_ident COLON TYPE lident_list DOT core_type . EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On EQUAL shift to state 745
-- On attribute shift to state 391
## Reductions:

State 745:
## Known stack suffix:
## val_ident COLON TYPE lident_list DOT core_type EQUAL
## LR(1) items:
let_binding_body -> val_ident COLON TYPE lident_list DOT core_type EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 746
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 746:
## Known stack suffix:
## val_ident COLON TYPE lident_list DOT core_type EQUAL seq_expr
## LR(1) items:
let_binding_body -> val_ident COLON TYPE lident_list DOT core_type EQUAL seq_expr . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production let_binding_body -> val_ident COLON TYPE lident_list DOT core_type EQUAL seq_expr

State 747:
## Known stack suffix:
## val_ident COLON typevar_list
## LR(1) items:
let_binding_body -> val_ident COLON typevar_list . DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
typevar_list -> typevar_list . QUOTE ident [ QUOTE DOT ]
## Transitions:
-- On QUOTE shift to state 250
-- On DOT shift to state 748
## Reductions:

State 748:
## Known stack suffix:
## val_ident COLON typevar_list DOT
## LR(1) items:
let_binding_body -> val_ident COLON typevar_list DOT . core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 749
## Reductions:

State 749:
## Known stack suffix:
## val_ident COLON typevar_list DOT core_type
## LR(1) items:
core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
let_binding_body -> val_ident COLON typevar_list DOT core_type . EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On EQUAL shift to state 750
-- On attribute shift to state 391
## Reductions:

State 750:
## Known stack suffix:
## val_ident COLON typevar_list DOT core_type EQUAL
## LR(1) items:
let_binding_body -> val_ident COLON typevar_list DOT core_type EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 751
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 751:
## Known stack suffix:
## val_ident COLON typevar_list DOT core_type EQUAL seq_expr
## LR(1) items:
let_binding_body -> val_ident COLON typevar_list DOT core_type EQUAL seq_expr . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production let_binding_body -> val_ident COLON typevar_list DOT core_type EQUAL seq_expr

State 752:
## Known stack suffix:
## val_ident fun_binding
## LR(1) items:
let_binding_body -> val_ident fun_binding . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production let_binding_body -> val_ident fun_binding

State 753:
## Known stack suffix:
## simple_pattern_not_ident
## LR(1) items:
let_binding_body -> simple_pattern_not_ident . COLON core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
simple_pattern -> simple_pattern_not_ident . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On COLON shift to state 754
## Reductions:
-- On LBRACKETAT EQUAL COMMA COLONCOLON BAR AS
--   reduce production simple_pattern -> simple_pattern_not_ident

State 754:
## Known stack suffix:
## simple_pattern_not_ident COLON
## LR(1) items:
let_binding_body -> simple_pattern_not_ident COLON . core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 755
## Reductions:

State 755:
## Known stack suffix:
## simple_pattern_not_ident COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
let_binding_body -> simple_pattern_not_ident COLON core_type . EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On EQUAL shift to state 756
-- On attribute shift to state 391
## Reductions:

State 756:
## Known stack suffix:
## simple_pattern_not_ident COLON core_type EQUAL
## LR(1) items:
let_binding_body -> simple_pattern_not_ident COLON core_type EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 757
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 757:
## Known stack suffix:
## simple_pattern_not_ident COLON core_type EQUAL seq_expr
## LR(1) items:
let_binding_body -> simple_pattern_not_ident COLON core_type EQUAL seq_expr . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production let_binding_body -> simple_pattern_not_ident COLON core_type EQUAL seq_expr

State 758:
## Known stack suffix:
## pattern_no_exn_comma_list
## LR(1) items:
pattern_no_exn -> pattern_no_exn_comma_list . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_no_exn_comma_list -> pattern_no_exn_comma_list . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On COMMA shift to state 759
## Reductions:
-- On LBRACKETAT EQUAL COLONCOLON BAR AS
--   reduce production pattern_no_exn -> pattern_no_exn_comma_list

State 759:
## Known stack suffix:
## pattern_no_exn_comma_list COMMA
## LR(1) items:
pattern_no_exn_comma_list -> pattern_no_exn_comma_list COMMA . pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 760
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 760:
## Known stack suffix:
## pattern_no_exn_comma_list COMMA pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_no_exn_comma_list -> pattern_no_exn_comma_list COMMA pattern . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COLONCOLON shift to state 543
-- On attribute shift to state 545
## Reductions:
-- On EQUAL COMMA BAR AS
--   reduce production pattern_no_exn_comma_list -> pattern_no_exn_comma_list COMMA pattern

State 761:
## Known stack suffix:
## pattern_no_exn
## LR(1) items:
let_binding_body -> pattern_no_exn . EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
pattern_no_exn -> pattern_no_exn . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_no_exn -> pattern_no_exn . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_no_exn -> pattern_no_exn . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_no_exn -> pattern_no_exn . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_no_exn_comma_list -> pattern_no_exn . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On EQUAL shift to state 762
-- On COMMA shift to state 764
-- On COLONCOLON shift to state 766
-- On BAR shift to state 768
-- On AS shift to state 770
-- On attribute shift to state 772
## Reductions:

State 762:
## Known stack suffix:
## pattern_no_exn EQUAL
## LR(1) items:
let_binding_body -> pattern_no_exn EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 763
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 763:
## Known stack suffix:
## pattern_no_exn EQUAL seq_expr
## LR(1) items:
let_binding_body -> pattern_no_exn EQUAL seq_expr . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production let_binding_body -> pattern_no_exn EQUAL seq_expr

State 764:
## Known stack suffix:
## pattern_no_exn COMMA
## LR(1) items:
pattern_no_exn_comma_list -> pattern_no_exn COMMA . pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 765
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 765:
## Known stack suffix:
## pattern_no_exn COMMA pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_no_exn_comma_list -> pattern_no_exn COMMA pattern . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COLONCOLON shift to state 543
-- On attribute shift to state 545
## Reductions:
-- On EQUAL COMMA BAR AS
--   reduce production pattern_no_exn_comma_list -> pattern_no_exn COMMA pattern

State 766:
## Known stack suffix:
## pattern_no_exn COLONCOLON
## LR(1) items:
pattern_no_exn -> pattern_no_exn COLONCOLON . pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 767
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 767:
## Known stack suffix:
## pattern_no_exn COLONCOLON pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_no_exn -> pattern_no_exn COLONCOLON pattern . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On COLONCOLON shift to state 543
-- On attribute shift to state 545
## Reductions:
-- On LBRACKETAT EQUAL COMMA BAR AS
--   reduce production pattern_no_exn -> pattern_no_exn COLONCOLON pattern

State 768:
## Known stack suffix:
## pattern_no_exn BAR
## LR(1) items:
pattern_no_exn -> pattern_no_exn BAR . pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 769
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 769:
## Known stack suffix:
## pattern_no_exn BAR pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
pattern_no_exn -> pattern_no_exn BAR pattern . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On attribute shift to state 545
## Reductions:
-- On EQUAL BAR AS
--   reduce production pattern_no_exn -> pattern_no_exn BAR pattern

State 770:
## Known stack suffix:
## pattern_no_exn AS
## LR(1) items:
pattern_no_exn -> pattern_no_exn AS . val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
-- On LPAREN shift to state 62
-- On LIDENT shift to state 88
-- On val_ident shift to state 771
## Reductions:

State 771:
## Known stack suffix:
## pattern_no_exn AS val_ident
## LR(1) items:
pattern_no_exn -> pattern_no_exn AS val_ident . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
## Reductions:
-- On LBRACKETAT EQUAL COMMA COLONCOLON BAR AS
--   reduce production pattern_no_exn -> pattern_no_exn AS val_ident

State 772:
## Known stack suffix:
## pattern_no_exn attribute
## LR(1) items:
pattern_no_exn -> pattern_no_exn attribute . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
## Reductions:
-- On LBRACKETAT EQUAL COMMA COLONCOLON BAR AS
--   reduce production pattern_no_exn -> pattern_no_exn attribute

State 773:
## Known stack suffix:
## pattern_gen
## LR(1) items:
pattern_no_exn -> pattern_gen . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## Transitions:
## Reductions:
-- On LBRACKETAT EQUAL COMMA COLONCOLON BAR AS
--   reduce production pattern_no_exn -> pattern_gen

State 774:
## Known stack suffix:
## AND attributes let_binding_body
## LR(1) items:
and_let_binding -> AND attributes let_binding_body . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 775
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 775:
## Known stack suffix:
## AND attributes let_binding_body post_item_attributes
## LR(1) items:
and_let_binding -> AND attributes let_binding_body post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production and_let_binding -> AND attributes let_binding_body post_item_attributes

State 776:
## Known stack suffix:
## let_bindings and_let_binding
## LR(1) items:
let_bindings -> let_bindings and_let_binding . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production let_bindings -> let_bindings and_let_binding

State 777:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COLONGREATER COLON CLASS BARRBRACKET BAR AND
--   reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr

State 778:
## Known stack suffix:
## simple_expr DOT LBRACKET
## LR(1) items:
expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 779
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 779:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr
## LR(1) items:
expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RBRACKET shift to state 780
## Reductions:

State 780:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET
## LR(1) items:
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 781
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET

State 781:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS
## LR(1) items:
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 782
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 782:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COLONGREATER COLON CLASS BARRBRACKET BAR AND
--   reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr

State 783:
## Known stack suffix:
## simple_expr DOT LBRACE
## LR(1) items:
expr -> simple_expr DOT LBRACE . expr RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE . expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 784
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 784:
## Known stack suffix:
## simple_expr DOT LBRACE expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LBRACE expr . RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE expr . RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On RBRACE shift to state 785
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:

State 785:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE
## LR(1) items:
expr -> simple_expr DOT LBRACE expr RBRACE . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE expr RBRACE . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 786
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LBRACE expr RBRACE

State 786:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE LESSMINUS
## LR(1) items:
expr -> simple_expr DOT LBRACE expr RBRACE LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 787
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 787:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LBRACE expr RBRACE LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COLONGREATER COLON CLASS BARRBRACKET BAR AND
--   reduce production expr -> simple_expr DOT LBRACE expr RBRACE LESSMINUS expr

State 788:
## Known stack suffix:
## simple_expr DOT label_longident
## LR(1) items:
expr -> simple_expr DOT label_longident . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT label_longident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LESSMINUS shift to state 789
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT label_longident

State 789:
## Known stack suffix:
## simple_expr DOT label_longident LESSMINUS
## LR(1) items:
expr -> simple_expr DOT label_longident LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 790
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 790:
## Known stack suffix:
## simple_expr DOT label_longident LESSMINUS expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT label_longident LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COLONGREATER COLON CLASS BARRBRACKET BAR AND
--   reduce production expr -> simple_expr DOT label_longident LESSMINUS expr

State 791:
## Known stack suffix:
## simple_expr simple_labeled_expr_list
## LR(1) items:
expr -> simple_expr simple_labeled_expr_list . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_labeled_expr_list -> simple_labeled_expr_list . labeled_simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 616
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On QUESTION shift to state 621
-- On PREFIXOP shift to state 291
-- On OPTLABEL shift to state 623
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LABEL shift to state 628
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 792
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On labeled_simple_expr shift to state 793
-- On label_expr shift to state 794
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> simple_expr simple_labeled_expr_list

State 792:
## Known stack suffix:
## simple_expr
## LR(1) items:
labeled_simple_expr -> simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SHARPOP shift to state 610
-- On SHARP shift to state 619
-- On DOT shift to state 612
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production labeled_simple_expr -> simple_expr

State 793:
## Known stack suffix:
## simple_labeled_expr_list labeled_simple_expr
## LR(1) items:
simple_labeled_expr_list -> simple_labeled_expr_list labeled_simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_labeled_expr_list -> simple_labeled_expr_list labeled_simple_expr

State 794:
## Known stack suffix:
## label_expr
## LR(1) items:
labeled_simple_expr -> label_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production labeled_simple_expr -> label_expr

State 795:
## Known stack suffix:
## labeled_simple_expr
## LR(1) items:
simple_labeled_expr_list -> labeled_simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_labeled_expr_list -> labeled_simple_expr

State 796:
## Known stack suffix:
## subtractive expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> subtractive expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> subtractive expr

State 797:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr
## LR(1) items:
simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 798
## Reductions:

State 798:
## Known stack suffix:
## simple_expr DOT LPAREN seq_expr RPAREN
## LR(1) items:
simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN

State 799:
## Known stack suffix:
## simple_expr DOT LBRACKET
## LR(1) items:
simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 800
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 800:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr
## LR(1) items:
simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RBRACKET shift to state 801
## Reductions:

State 801:
## Known stack suffix:
## simple_expr DOT LBRACKET seq_expr RBRACKET
## LR(1) items:
simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET

State 802:
## Known stack suffix:
## simple_expr DOT LBRACE
## LR(1) items:
simple_expr -> simple_expr DOT LBRACE . expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 803
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 803:
## Known stack suffix:
## simple_expr DOT LBRACE expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ STAR RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACE expr . RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On RBRACE shift to state 804
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:

State 804:
## Known stack suffix:
## simple_expr DOT LBRACE expr RBRACE
## LR(1) items:
simple_expr -> simple_expr DOT LBRACE expr RBRACE . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT LBRACE expr RBRACE

State 805:
## Known stack suffix:
## simple_expr DOT label_longident
## LR(1) items:
simple_expr -> simple_expr DOT label_longident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> simple_expr DOT label_longident

State 806:
## Known stack suffix:
## FOR ext_attributes pattern EQUAL seq_expr
## LR(1) items:
expr -> FOR ext_attributes pattern EQUAL seq_expr . direction_flag seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On TO shift to state 807
-- On DOWNTO shift to state 808
-- On direction_flag shift to state 809
## Reductions:

State 807:
## Known stack suffix:
## TO
## LR(1) items:
direction_flag -> TO . [ WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production direction_flag -> TO

State 808:
## Known stack suffix:
## DOWNTO
## LR(1) items:
direction_flag -> DOWNTO . [ WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production direction_flag -> DOWNTO

State 809:
## Known stack suffix:
## FOR ext_attributes pattern EQUAL seq_expr direction_flag
## LR(1) items:
expr -> FOR ext_attributes pattern EQUAL seq_expr direction_flag . seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 810
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 810:
## Known stack suffix:
## FOR ext_attributes pattern EQUAL seq_expr direction_flag seq_expr
## LR(1) items:
expr -> FOR ext_attributes pattern EQUAL seq_expr direction_flag seq_expr . DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DO shift to state 811
## Reductions:

State 811:
## Known stack suffix:
## FOR ext_attributes pattern EQUAL seq_expr direction_flag seq_expr DO
## LR(1) items:
expr -> FOR ext_attributes pattern EQUAL seq_expr direction_flag seq_expr DO . seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 812
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 812:
## Known stack suffix:
## FOR ext_attributes pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr
## LR(1) items:
expr -> FOR ext_attributes pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr . DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DONE shift to state 813
## Reductions:

State 813:
## Known stack suffix:
## FOR ext_attributes pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
## LR(1) items:
expr -> FOR ext_attributes pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> FOR ext_attributes pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE

State 814:
## Known stack suffix:
## EQUAL seq_expr
## LR(1) items:
opt_default -> EQUAL seq_expr . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production opt_default -> EQUAL seq_expr

State 815:
## Known stack suffix:
## QUESTION LPAREN label_let_pattern opt_default
## LR(1) items:
labeled_simple_pattern -> QUESTION LPAREN label_let_pattern opt_default . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
-- On RPAREN shift to state 816
## Reductions:

State 816:
## Known stack suffix:
## QUESTION LPAREN label_let_pattern opt_default RPAREN
## LR(1) items:
labeled_simple_pattern -> QUESTION LPAREN label_let_pattern opt_default RPAREN . [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE
--   reduce production labeled_simple_pattern -> QUESTION LPAREN label_let_pattern opt_default RPAREN

State 817:
## Known stack suffix:
## QUESTION label_var
## LR(1) items:
labeled_simple_pattern -> QUESTION label_var . [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE
--   reduce production labeled_simple_pattern -> QUESTION label_var

State 818:
## Known stack suffix:
## FUN ext_attributes LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
expr -> FUN ext_attributes LPAREN . TYPE lident_list RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_pattern_not_ident -> LPAREN . pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
simple_pattern_not_ident -> LPAREN . MODULE ext_attributes UIDENT RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
simple_pattern_not_ident -> LPAREN . MODULE ext_attributes UIDENT COLON package_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
val_ident -> LPAREN . operator RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TYPE shift to state 819
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On STAR shift to state 63
-- On SHARPOP shift to state 64
-- On SHARP shift to state 306
-- On RPAREN shift to state 269
-- On PREFIXOP shift to state 65
-- On PLUSEQ shift to state 66
-- On PLUSDOT shift to state 67
-- On PLUS shift to state 315
-- On PERCENT shift to state 69
-- On OR shift to state 70
-- On MODULE shift to state 316
-- On MINUSDOT shift to state 71
-- On MINUS shift to state 528
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LESS shift to state 73
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On INFIXOP4 shift to state 74
-- On INFIXOP3 shift to state 75
-- On INFIXOP2 shift to state 76
-- On INFIXOP1 shift to state 77
-- On INFIXOP0 shift to state 78
-- On GREATER shift to state 79
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On EQUAL shift to state 80
-- On COLONEQUAL shift to state 81
-- On CHAR shift to state 484
-- On BARBAR shift to state 82
-- On BANG shift to state 83
-- On BACKQUOTE shift to state 181
-- On AMPERSAND shift to state 84
-- On AMPERAMPER shift to state 85
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 573
-- On operator shift to state 86
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 819:
## Known stack suffix:
## FUN ext_attributes LPAREN TYPE
## LR(1) items:
expr -> FUN ext_attributes LPAREN TYPE . lident_list RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LIDENT shift to state 718
-- On lident_list shift to state 820
## Reductions:

State 820:
## Known stack suffix:
## FUN ext_attributes LPAREN TYPE lident_list
## LR(1) items:
expr -> FUN ext_attributes LPAREN TYPE lident_list . RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 821
## Reductions:

State 821:
## Known stack suffix:
## FUN ext_attributes LPAREN TYPE lident_list RPAREN
## LR(1) items:
expr -> FUN ext_attributes LPAREN TYPE lident_list RPAREN . fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUSGREATER shift to state 822
-- On MINUS shift to state 311
-- On LPAREN shift to state 824
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On COLON shift to state 828
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 832
-- On fun_def shift to state 835
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
## Reductions:

State 822:
## Known stack suffix:
## MINUSGREATER
## LR(1) items:
fun_def -> MINUSGREATER . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 823
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 823:
## Known stack suffix:
## MINUSGREATER seq_expr
## LR(1) items:
fun_def -> MINUSGREATER seq_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production fun_def -> MINUSGREATER seq_expr

State 824:
## Known stack suffix:
## LPAREN
## LR(1) items:
constr_longident -> LPAREN . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
fun_def -> LPAREN . TYPE lident_list RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_pattern_not_ident -> LPAREN . pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
simple_pattern_not_ident -> LPAREN . MODULE ext_attributes UIDENT RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
simple_pattern_not_ident -> LPAREN . MODULE ext_attributes UIDENT COLON package_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
val_ident -> LPAREN . operator RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE COLON CHAR BACKQUOTE ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TYPE shift to state 825
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On STAR shift to state 63
-- On SHARPOP shift to state 64
-- On SHARP shift to state 306
-- On RPAREN shift to state 269
-- On PREFIXOP shift to state 65
-- On PLUSEQ shift to state 66
-- On PLUSDOT shift to state 67
-- On PLUS shift to state 315
-- On PERCENT shift to state 69
-- On OR shift to state 70
-- On MODULE shift to state 316
-- On MINUSDOT shift to state 71
-- On MINUS shift to state 528
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LESS shift to state 73
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On INFIXOP4 shift to state 74
-- On INFIXOP3 shift to state 75
-- On INFIXOP2 shift to state 76
-- On INFIXOP1 shift to state 77
-- On INFIXOP0 shift to state 78
-- On GREATER shift to state 79
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On EQUAL shift to state 80
-- On COLONEQUAL shift to state 81
-- On CHAR shift to state 484
-- On BARBAR shift to state 82
-- On BANG shift to state 83
-- On BACKQUOTE shift to state 181
-- On AMPERSAND shift to state 84
-- On AMPERAMPER shift to state 85
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 573
-- On operator shift to state 86
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 825:
## Known stack suffix:
## LPAREN TYPE
## LR(1) items:
fun_def -> LPAREN TYPE . lident_list RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LIDENT shift to state 718
-- On lident_list shift to state 826
## Reductions:

State 826:
## Known stack suffix:
## LPAREN TYPE lident_list
## LR(1) items:
fun_def -> LPAREN TYPE lident_list . RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 827
## Reductions:

State 827:
## Known stack suffix:
## LPAREN TYPE lident_list RPAREN
## LR(1) items:
fun_def -> LPAREN TYPE lident_list RPAREN . fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUSGREATER shift to state 822
-- On MINUS shift to state 311
-- On LPAREN shift to state 824
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On COLON shift to state 828
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 832
-- On fun_def shift to state 834
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
## Reductions:

State 828:
## Known stack suffix:
## COLON
## LR(1) items:
fun_def -> COLON . simple_core_type MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 829
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 829:
## Known stack suffix:
## COLON simple_core_type
## LR(1) items:
fun_def -> COLON simple_core_type . MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On MINUSGREATER shift to state 830
## Reductions:

State 830:
## Known stack suffix:
## COLON simple_core_type MINUSGREATER
## LR(1) items:
fun_def -> COLON simple_core_type MINUSGREATER . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 831
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 831:
## Known stack suffix:
## COLON simple_core_type MINUSGREATER seq_expr
## LR(1) items:
fun_def -> COLON simple_core_type MINUSGREATER seq_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production fun_def -> COLON simple_core_type MINUSGREATER seq_expr

State 832:
## Known stack suffix:
## labeled_simple_pattern
## LR(1) items:
fun_def -> labeled_simple_pattern . fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUSGREATER shift to state 822
-- On MINUS shift to state 311
-- On LPAREN shift to state 824
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On COLON shift to state 828
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 832
-- On fun_def shift to state 833
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
## Reductions:

State 833:
## Known stack suffix:
## labeled_simple_pattern fun_def
## LR(1) items:
fun_def -> labeled_simple_pattern fun_def . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production fun_def -> labeled_simple_pattern fun_def

State 834:
## Known stack suffix:
## LPAREN TYPE lident_list RPAREN fun_def
## LR(1) items:
fun_def -> LPAREN TYPE lident_list RPAREN fun_def . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production fun_def -> LPAREN TYPE lident_list RPAREN fun_def

State 835:
## Known stack suffix:
## FUN ext_attributes LPAREN TYPE lident_list RPAREN fun_def
## LR(1) items:
expr -> FUN ext_attributes LPAREN TYPE lident_list RPAREN fun_def . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> FUN ext_attributes LPAREN TYPE lident_list RPAREN fun_def

State 836:
## Known stack suffix:
## FUN ext_attributes labeled_simple_pattern
## LR(1) items:
expr -> FUN ext_attributes labeled_simple_pattern . fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUSGREATER shift to state 822
-- On MINUS shift to state 311
-- On LPAREN shift to state 824
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On COLON shift to state 828
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 832
-- On fun_def shift to state 837
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
## Reductions:

State 837:
## Known stack suffix:
## FUN ext_attributes labeled_simple_pattern fun_def
## LR(1) items:
expr -> FUN ext_attributes labeled_simple_pattern fun_def . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> FUN ext_attributes labeled_simple_pattern fun_def

State 838:
## Known stack suffix:
## pattern WHEN seq_expr
## LR(1) items:
match_case -> pattern WHEN seq_expr . MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On MINUSGREATER shift to state 839
## Reductions:

State 839:
## Known stack suffix:
## pattern WHEN seq_expr MINUSGREATER
## LR(1) items:
match_case -> pattern WHEN seq_expr MINUSGREATER . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 840
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 840:
## Known stack suffix:
## pattern WHEN seq_expr MINUSGREATER seq_expr
## LR(1) items:
match_case -> pattern WHEN seq_expr MINUSGREATER seq_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production match_case -> pattern WHEN seq_expr MINUSGREATER seq_expr

State 841:
## Known stack suffix:
## pattern MINUSGREATER
## LR(1) items:
match_case -> pattern MINUSGREATER . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
match_case -> pattern MINUSGREATER . DOT [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On DOT shift to state 842
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 843
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 842:
## Known stack suffix:
## pattern MINUSGREATER DOT
## LR(1) items:
match_case -> pattern MINUSGREATER DOT . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production match_case -> pattern MINUSGREATER DOT

State 843:
## Known stack suffix:
## pattern MINUSGREATER seq_expr
## LR(1) items:
match_case -> pattern MINUSGREATER seq_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production match_case -> pattern MINUSGREATER seq_expr

State 844:
## Known stack suffix:
## FUNCTION ext_attributes opt_bar match_cases
## LR(1) items:
expr -> FUNCTION ext_attributes opt_bar match_cases . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR match_case [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 845
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> FUNCTION ext_attributes opt_bar match_cases

State 845:
## Known stack suffix:
## match_cases BAR
## LR(1) items:
match_cases -> match_cases BAR . match_case [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 586
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On match_case shift to state 846
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 846:
## Known stack suffix:
## match_cases BAR match_case
## LR(1) items:
match_cases -> match_cases BAR match_case . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production match_cases -> match_cases BAR match_case

State 847:
## Known stack suffix:
## match_case
## LR(1) items:
match_cases -> match_case . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production match_cases -> match_case

State 848:
## Known stack suffix:
## IF ext_attributes seq_expr
## LR(1) items:
expr -> IF ext_attributes seq_expr . THEN expr ELSE expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF ext_attributes seq_expr . THEN expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On THEN shift to state 849
## Reductions:

State 849:
## Known stack suffix:
## IF ext_attributes seq_expr THEN
## LR(1) items:
expr -> IF ext_attributes seq_expr THEN . expr ELSE expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF ext_attributes seq_expr THEN . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 850
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 850:
## Known stack suffix:
## IF ext_attributes seq_expr THEN expr
## LR(1) items:
expr -> IF ext_attributes seq_expr THEN expr . ELSE expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> IF ext_attributes seq_expr THEN expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On ELSE shift to state 851
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END DOWNTO DONE DO CONSTRAINT COLONGREATER COLON CLASS BARRBRACKET BAR AND
--   reduce production expr -> IF ext_attributes seq_expr THEN expr

State 851:
## Known stack suffix:
## IF ext_attributes seq_expr THEN expr ELSE
## LR(1) items:
expr -> IF ext_attributes seq_expr THEN expr ELSE . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 852
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 852:
## Known stack suffix:
## IF ext_attributes seq_expr THEN expr ELSE expr
## LR(1) items:
expr -> IF ext_attributes seq_expr THEN expr ELSE expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On WITH VAL TYPE TO THEN SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN GREATERRBRACE EXTERNAL EXCEPTION EOF END ELSE DOWNTO DONE DO CONSTRAINT COLONGREATER COLON CLASS BARRBRACKET BAR AND
--   reduce production expr -> IF ext_attributes seq_expr THEN expr ELSE expr

State 853:
## Known stack suffix:
## BANG
## LR(1) items:
operator -> BANG . [ RPAREN ]
simple_expr -> BANG . simple_expr [ UIDENT TRUE TILDE STRING STAR SHARPOP SHARP SEMI RPAREN QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL NEW MINUSDOT MINUS LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER FLOAT FALSE EQUAL DOT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BEGIN BARBAR BANG BACKQUOTE AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 491
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:
-- On RPAREN
--   reduce production operator -> BANG

State 854:
## Known stack suffix:
## mod_longident DOT LPAREN seq_expr
## LR(1) items:
simple_expr -> mod_longident DOT LPAREN seq_expr . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 855
## Reductions:

State 855:
## Known stack suffix:
## mod_longident DOT LPAREN seq_expr RPAREN
## LR(1) items:
simple_expr -> mod_longident DOT LPAREN seq_expr RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> mod_longident DOT LPAREN seq_expr RPAREN

State 856:
## Known stack suffix:
## mod_longident DOT LBRACKETBAR
## LR(1) items:
simple_expr -> mod_longident DOT LBRACKETBAR . expr_semi_list opt_semi BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT LBRACKETBAR . BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BARRBRACKET shift to state 857
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_semi_list shift to state 858
-- On expr_comma_list shift to state 643
-- On expr shift to state 863
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 857:
## Known stack suffix:
## mod_longident DOT LBRACKETBAR BARRBRACKET
## LR(1) items:
simple_expr -> mod_longident DOT LBRACKETBAR BARRBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> mod_longident DOT LBRACKETBAR BARRBRACKET

State 858:
## Known stack suffix:
## mod_longident DOT LBRACKETBAR expr_semi_list
## LR(1) items:
expr_semi_list -> expr_semi_list . SEMI expr [ SEMI BARRBRACKET ]
simple_expr -> mod_longident DOT LBRACKETBAR expr_semi_list . opt_semi BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SEMI shift to state 859
-- On opt_semi shift to state 861
## Reductions:
-- On BARRBRACKET
--   reduce production opt_semi ->

State 859:
## Known stack suffix:
## expr_semi_list SEMI
## LR(1) items:
expr_semi_list -> expr_semi_list SEMI . expr [ SEMI RBRACKET BARRBRACKET ]
opt_semi -> SEMI . [ RBRACKET BARRBRACKET ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 860
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:
-- On RBRACKET BARRBRACKET
--   reduce production opt_semi -> SEMI

State 860:
## Known stack suffix:
## expr_semi_list SEMI expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_semi_list -> expr_semi_list SEMI expr . [ SEMI RBRACKET BARRBRACKET ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On SEMI RBRACKET BARRBRACKET
--   reduce production expr_semi_list -> expr_semi_list SEMI expr

State 861:
## Known stack suffix:
## mod_longident DOT LBRACKETBAR expr_semi_list opt_semi
## LR(1) items:
simple_expr -> mod_longident DOT LBRACKETBAR expr_semi_list opt_semi . BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BARRBRACKET shift to state 862
## Reductions:

State 862:
## Known stack suffix:
## mod_longident DOT LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
## LR(1) items:
simple_expr -> mod_longident DOT LBRACKETBAR expr_semi_list opt_semi BARRBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> mod_longident DOT LBRACKETBAR expr_semi_list opt_semi BARRBRACKET

State 863:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ STAR SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_semi_list -> expr . [ SEMI RBRACKET BARRBRACKET ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On SEMI RBRACKET BARRBRACKET
--   reduce production expr_semi_list -> expr

State 864:
## Known stack suffix:
## mod_longident DOT LBRACKET
## LR(1) items:
simple_expr -> mod_longident DOT LBRACKET . expr_semi_list opt_semi RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> mod_longident DOT LBRACKET . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On RBRACKET shift to state 865
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_semi_list shift to state 866
-- On expr_comma_list shift to state 643
-- On expr shift to state 863
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 865:
## Known stack suffix:
## mod_longident DOT LBRACKET RBRACKET
## LR(1) items:
simple_expr -> mod_longident DOT LBRACKET RBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> mod_longident DOT LBRACKET RBRACKET

State 866:
## Known stack suffix:
## mod_longident DOT LBRACKET expr_semi_list
## LR(1) items:
expr_semi_list -> expr_semi_list . SEMI expr [ SEMI RBRACKET ]
simple_expr -> mod_longident DOT LBRACKET expr_semi_list . opt_semi RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SEMI shift to state 859
-- On opt_semi shift to state 867
## Reductions:
-- On RBRACKET
--   reduce production opt_semi ->

State 867:
## Known stack suffix:
## mod_longident DOT LBRACKET expr_semi_list opt_semi
## LR(1) items:
simple_expr -> mod_longident DOT LBRACKET expr_semi_list opt_semi . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RBRACKET shift to state 868
## Reductions:

State 868:
## Known stack suffix:
## mod_longident DOT LBRACKET expr_semi_list opt_semi RBRACKET
## LR(1) items:
simple_expr -> mod_longident DOT LBRACKET expr_semi_list opt_semi RBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> mod_longident DOT LBRACKET expr_semi_list opt_semi RBRACKET

State 869:
## Known stack suffix:
## mod_longident DOT LBRACELESS
## LR(1) items:
simple_expr -> mod_longident DOT LBRACELESS . field_expr_list GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 478
-- On field_expr_list shift to state 870
-- On field_expr shift to state 872
## Reductions:

State 870:
## Known stack suffix:
## mod_longident DOT LBRACELESS field_expr_list
## LR(1) items:
simple_expr -> mod_longident DOT LBRACELESS field_expr_list . GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On GREATERRBRACE shift to state 871
## Reductions:

State 871:
## Known stack suffix:
## mod_longident DOT LBRACELESS field_expr_list GREATERRBRACE
## LR(1) items:
simple_expr -> mod_longident DOT LBRACELESS field_expr_list GREATERRBRACE . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> mod_longident DOT LBRACELESS field_expr_list GREATERRBRACE

State 872:
## Known stack suffix:
## field_expr
## LR(1) items:
field_expr_list -> field_expr . opt_semi [ GREATERRBRACE ]
field_expr_list -> field_expr . SEMI field_expr_list [ GREATERRBRACE ]
## Transitions:
-- On SEMI shift to state 873
-- On opt_semi shift to state 875
## Reductions:
-- On GREATERRBRACE
--   reduce production opt_semi ->

State 873:
## Known stack suffix:
## field_expr SEMI
## LR(1) items:
field_expr_list -> field_expr SEMI . field_expr_list [ GREATERRBRACE ]
opt_semi -> SEMI . [ GREATERRBRACE ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 478
-- On field_expr_list shift to state 874
-- On field_expr shift to state 872
## Reductions:
-- On GREATERRBRACE
--   reduce production opt_semi -> SEMI

State 874:
## Known stack suffix:
## field_expr SEMI field_expr_list
## LR(1) items:
field_expr_list -> field_expr SEMI field_expr_list . [ GREATERRBRACE ]
## Transitions:
## Reductions:
-- On GREATERRBRACE
--   reduce production field_expr_list -> field_expr SEMI field_expr_list

State 875:
## Known stack suffix:
## field_expr opt_semi
## LR(1) items:
field_expr_list -> field_expr opt_semi . [ GREATERRBRACE ]
## Transitions:
## Reductions:
-- On GREATERRBRACE
--   reduce production field_expr_list -> field_expr opt_semi

State 876:
## Known stack suffix:
## mod_longident DOT LBRACE
## LR(1) items:
simple_expr -> mod_longident DOT LBRACE . record_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 481
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 877
-- On record_expr shift to state 888
-- On name_tag shift to state 492
-- On mod_longident shift to state 890
-- On lbl_expr_list shift to state 893
-- On lbl_expr shift to state 880
-- On label_longident shift to state 883
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:

State 877:
## Known stack suffix:
## simple_expr
## LR(1) items:
record_expr -> simple_expr . WITH lbl_expr_list [ RBRACE ]
simple_expr -> simple_expr . DOT label_longident [ WITH SHARPOP SHARP DOT ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH SHARPOP SHARP DOT ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH SHARPOP SHARP DOT ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH SHARPOP SHARP DOT ]
simple_expr -> simple_expr . SHARP label [ WITH SHARPOP SHARP DOT ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH SHARPOP SHARP DOT ]
## Transitions:
-- On WITH shift to state 878
-- On SHARPOP shift to state 610
-- On SHARP shift to state 619
-- On DOT shift to state 612
## Reductions:

State 878:
## Known stack suffix:
## simple_expr WITH
## LR(1) items:
record_expr -> simple_expr WITH . lbl_expr_list [ RBRACE ]
## Transitions:
-- On UIDENT shift to state 94
-- On LIDENT shift to state 511
-- On mod_longident shift to state 377
-- On lbl_expr_list shift to state 879
-- On lbl_expr shift to state 880
-- On label_longident shift to state 883
## Reductions:

State 879:
## Known stack suffix:
## simple_expr WITH lbl_expr_list
## LR(1) items:
record_expr -> simple_expr WITH lbl_expr_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production record_expr -> simple_expr WITH lbl_expr_list

State 880:
## Known stack suffix:
## lbl_expr
## LR(1) items:
lbl_expr_list -> lbl_expr . [ RBRACE ]
lbl_expr_list -> lbl_expr . SEMI lbl_expr_list [ RBRACE ]
lbl_expr_list -> lbl_expr . SEMI [ RBRACE ]
## Transitions:
-- On SEMI shift to state 881
## Reductions:
-- On RBRACE
--   reduce production lbl_expr_list -> lbl_expr

State 881:
## Known stack suffix:
## lbl_expr SEMI
## LR(1) items:
lbl_expr_list -> lbl_expr SEMI . lbl_expr_list [ RBRACE ]
lbl_expr_list -> lbl_expr SEMI . [ RBRACE ]
## Transitions:
-- On UIDENT shift to state 94
-- On LIDENT shift to state 511
-- On mod_longident shift to state 377
-- On lbl_expr_list shift to state 882
-- On lbl_expr shift to state 880
-- On label_longident shift to state 883
## Reductions:
-- On RBRACE
--   reduce production lbl_expr_list -> lbl_expr SEMI

State 882:
## Known stack suffix:
## lbl_expr SEMI lbl_expr_list
## LR(1) items:
lbl_expr_list -> lbl_expr SEMI lbl_expr_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production lbl_expr_list -> lbl_expr SEMI lbl_expr_list

State 883:
## Known stack suffix:
## label_longident
## LR(1) items:
lbl_expr -> label_longident . opt_type_constraint EQUAL expr [ SEMI RBRACE ]
lbl_expr -> label_longident . opt_type_constraint [ SEMI RBRACE ]
## Transitions:
-- On COLONGREATER shift to state 726
-- On COLON shift to state 728
-- On type_constraint shift to state 884
-- On opt_type_constraint shift to state 885
## Reductions:
-- On SEMI RBRACE EQUAL
--   reduce production opt_type_constraint ->

State 884:
## Known stack suffix:
## type_constraint
## LR(1) items:
opt_type_constraint -> type_constraint . [ SEMI RBRACE EQUAL ]
## Transitions:
## Reductions:
-- On SEMI RBRACE EQUAL
--   reduce production opt_type_constraint -> type_constraint

State 885:
## Known stack suffix:
## label_longident opt_type_constraint
## LR(1) items:
lbl_expr -> label_longident opt_type_constraint . EQUAL expr [ SEMI RBRACE ]
lbl_expr -> label_longident opt_type_constraint . [ SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 886
## Reductions:
-- On SEMI RBRACE
--   reduce production lbl_expr -> label_longident opt_type_constraint

State 886:
## Known stack suffix:
## label_longident opt_type_constraint EQUAL
## LR(1) items:
lbl_expr -> label_longident opt_type_constraint EQUAL . expr [ SEMI RBRACE ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 887
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 887:
## Known stack suffix:
## label_longident opt_type_constraint EQUAL expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
lbl_expr -> label_longident opt_type_constraint EQUAL expr . [ SEMI RBRACE ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On SEMI RBRACE
--   reduce production lbl_expr -> label_longident opt_type_constraint EQUAL expr

State 888:
## Known stack suffix:
## mod_longident DOT LBRACE record_expr
## LR(1) items:
simple_expr -> mod_longident DOT LBRACE record_expr . RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RBRACE shift to state 889
## Reductions:

State 889:
## Known stack suffix:
## mod_longident DOT LBRACE record_expr RBRACE
## LR(1) items:
simple_expr -> mod_longident DOT LBRACE record_expr RBRACE . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> mod_longident DOT LBRACE record_expr RBRACE

State 890:
## Known stack suffix:
## mod_longident
## LR(1) items:
constr_longident -> mod_longident . [ WITH SHARPOP SHARP DOT ]
label_longident -> mod_longident . DOT LIDENT [ SEMI RBRACE EQUAL COLONGREATER COLON ]
mod_longident -> mod_longident . DOT UIDENT [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident . DOT LPAREN seq_expr RPAREN [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident . DOT LPAREN RPAREN [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident . DOT LBRACE record_expr RBRACE [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident . DOT LBRACKETBAR expr_semi_list opt_semi BARRBRACKET [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident . DOT LBRACKETBAR BARRBRACKET [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident . DOT LBRACKET expr_semi_list opt_semi RBRACKET [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident . DOT LBRACKET RBRACKET [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident . DOT LBRACELESS field_expr_list GREATERRBRACE [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident . DOT LPAREN MODULE ext_attributes module_expr COLON package_type RPAREN [ WITH SHARPOP SHARP DOT ]
val_longident -> mod_longident . DOT val_ident [ WITH SHARPOP SHARP DOT ]
## Transitions:
-- On DOT shift to state 891
## Reductions:
-- On WITH SHARPOP SHARP
--   reduce production constr_longident -> mod_longident

State 891:
## Known stack suffix:
## mod_longident DOT
## LR(1) items:
label_longident -> mod_longident DOT . LIDENT [ SEMI RBRACE EQUAL COLONGREATER COLON ]
mod_longident -> mod_longident DOT . UIDENT [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident DOT . LPAREN seq_expr RPAREN [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident DOT . LPAREN RPAREN [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident DOT . LBRACE record_expr RBRACE [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident DOT . LBRACKETBAR expr_semi_list opt_semi BARRBRACKET [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident DOT . LBRACKETBAR BARRBRACKET [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident DOT . LBRACKET expr_semi_list opt_semi RBRACKET [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident DOT . LBRACKET RBRACKET [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident DOT . LBRACELESS field_expr_list GREATERRBRACE [ WITH SHARPOP SHARP DOT ]
simple_expr -> mod_longident DOT . LPAREN MODULE ext_attributes module_expr COLON package_type RPAREN [ WITH SHARPOP SHARP DOT ]
val_longident -> mod_longident DOT . val_ident [ WITH SHARPOP SHARP DOT ]
## Transitions:
-- On UIDENT shift to state 98
-- On LPAREN shift to state 495
-- On LIDENT shift to state 892
-- On LBRACKETBAR shift to state 856
-- On LBRACKET shift to state 864
-- On LBRACELESS shift to state 869
-- On LBRACE shift to state 876
-- On val_ident shift to state 337
## Reductions:

State 892:
## Known stack suffix:
## mod_longident DOT LIDENT
## LR(1) items:
label_longident -> mod_longident DOT LIDENT . [ SEMI RBRACE EQUAL COLONGREATER COLON ]
val_ident -> LIDENT . [ WITH SHARPOP SHARP DOT ]
## Transitions:
## Reductions:
-- On SEMI RBRACE EQUAL COLONGREATER COLON
--   reduce production label_longident -> mod_longident DOT LIDENT
-- On WITH SHARPOP SHARP DOT
--   reduce production val_ident -> LIDENT

State 893:
## Known stack suffix:
## lbl_expr_list
## LR(1) items:
record_expr -> lbl_expr_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production record_expr -> lbl_expr_list

State 894:
## Known stack suffix:
## LAZY ext_attributes simple_expr
## LR(1) items:
expr -> LAZY ext_attributes simple_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH VAL TYPE TO THEN STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SHARPOP shift to state 610
-- On SHARP shift to state 619
-- On DOT shift to state 612
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> LAZY ext_attributes simple_expr

State 895:
## Known stack suffix:
## BEGIN ext_attributes END
## LR(1) items:
simple_expr -> BEGIN ext_attributes END . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> BEGIN ext_attributes END

State 896:
## Known stack suffix:
## BEGIN ext_attributes seq_expr
## LR(1) items:
simple_expr -> BEGIN ext_attributes seq_expr . END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On END shift to state 897
## Reductions:

State 897:
## Known stack suffix:
## BEGIN ext_attributes seq_expr END
## LR(1) items:
simple_expr -> BEGIN ext_attributes seq_expr END . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> BEGIN ext_attributes seq_expr END

State 898:
## Known stack suffix:
## LBRACE record_expr
## LR(1) items:
simple_expr -> LBRACE record_expr . RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RBRACE shift to state 899
## Reductions:

State 899:
## Known stack suffix:
## LBRACE record_expr RBRACE
## LR(1) items:
simple_expr -> LBRACE record_expr RBRACE . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> LBRACE record_expr RBRACE

State 900:
## Known stack suffix:
## label EQUAL expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ STAR SEMI PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
field_expr -> label EQUAL expr . [ SEMI GREATERRBRACE ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On SEMI GREATERRBRACE
--   reduce production field_expr -> label EQUAL expr

State 901:
## Known stack suffix:
## LBRACELESS field_expr_list
## LR(1) items:
simple_expr -> LBRACELESS field_expr_list . GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On GREATERRBRACE shift to state 902
## Reductions:

State 902:
## Known stack suffix:
## LBRACELESS field_expr_list GREATERRBRACE
## LR(1) items:
simple_expr -> LBRACELESS field_expr_list GREATERRBRACE . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> LBRACELESS field_expr_list GREATERRBRACE

State 903:
## Known stack suffix:
## LBRACKET expr_semi_list
## LR(1) items:
expr_semi_list -> expr_semi_list . SEMI expr [ SEMI RBRACKET ]
simple_expr -> LBRACKET expr_semi_list . opt_semi RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SEMI shift to state 859
-- On opt_semi shift to state 904
## Reductions:
-- On RBRACKET
--   reduce production opt_semi ->

State 904:
## Known stack suffix:
## LBRACKET expr_semi_list opt_semi
## LR(1) items:
simple_expr -> LBRACKET expr_semi_list opt_semi . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RBRACKET shift to state 905
## Reductions:

State 905:
## Known stack suffix:
## LBRACKET expr_semi_list opt_semi RBRACKET
## LR(1) items:
simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET

State 906:
## Known stack suffix:
## LET OPEN override_flag ext_attributes mod_longident IN seq_expr
## LR(1) items:
expr -> LET OPEN override_flag ext_attributes mod_longident IN seq_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> LET OPEN override_flag ext_attributes mod_longident IN seq_expr

State 907:
## Known stack suffix:
## LET MODULE
## LR(1) items:
expr -> LET MODULE . ext_attributes UIDENT module_binding_body IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 908
-- On attribute shift to state 295
## Reductions:
-- On UIDENT
--   reduce production ext_attributes ->

State 908:
## Known stack suffix:
## LET MODULE ext_attributes
## LR(1) items:
expr -> LET MODULE ext_attributes . UIDENT module_binding_body IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 909
## Reductions:

State 909:
## Known stack suffix:
## LET MODULE ext_attributes UIDENT
## LR(1) items:
expr -> LET MODULE ext_attributes UIDENT . module_binding_body IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LPAREN shift to state 355
-- On EQUAL shift to state 430
-- On COLON shift to state 910
-- On module_binding_body shift to state 914
-- On functor_arg shift to state 917
## Reductions:

State 910:
## Known stack suffix:
## COLON
## LR(1) items:
module_binding_body -> COLON . module_type EQUAL module_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 911
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 911:
## Known stack suffix:
## COLON module_type
## LR(1) items:
module_binding_body -> COLON module_type . EQUAL module_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
module_type -> module_type . MINUSGREATER module_type [ WITH MINUSGREATER LBRACKETAT EQUAL ]
module_type -> module_type . WITH with_constraints [ WITH MINUSGREATER LBRACKETAT EQUAL ]
module_type -> module_type . attribute [ WITH MINUSGREATER LBRACKETAT EQUAL ]
## Transitions:
-- On WITH shift to state 363
-- On MINUSGREATER shift to state 409
-- On LBRACKETAT shift to state 58
-- On EQUAL shift to state 912
-- On attribute shift to state 411
## Reductions:

State 912:
## Known stack suffix:
## COLON module_type EQUAL
## LR(1) items:
module_binding_body -> COLON module_type EQUAL . module_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On STRUCT shift to state 325
-- On LPAREN shift to state 431
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 443
-- On paren_module_expr shift to state 447
-- On module_expr shift to state 913
-- On mod_longident shift to state 458
-- On extension shift to state 459
## Reductions:

State 913:
## Known stack suffix:
## COLON module_type EQUAL module_expr
## LR(1) items:
module_binding_body -> COLON module_type EQUAL module_expr . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
module_expr -> module_expr . paren_module_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
module_expr -> module_expr . LPAREN RPAREN [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
module_expr -> module_expr . attribute [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LPAREN shift to state 449
-- On LBRACKETAT shift to state 58
-- On paren_module_expr shift to state 456
-- On attribute shift to state 457
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production module_binding_body -> COLON module_type EQUAL module_expr

State 914:
## Known stack suffix:
## LET MODULE ext_attributes UIDENT module_binding_body
## LR(1) items:
expr -> LET MODULE ext_attributes UIDENT module_binding_body . IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On IN shift to state 915
## Reductions:

State 915:
## Known stack suffix:
## LET MODULE ext_attributes UIDENT module_binding_body IN
## LR(1) items:
expr -> LET MODULE ext_attributes UIDENT module_binding_body IN . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 916
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 916:
## Known stack suffix:
## LET MODULE ext_attributes UIDENT module_binding_body IN seq_expr
## LR(1) items:
expr -> LET MODULE ext_attributes UIDENT module_binding_body IN seq_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> LET MODULE ext_attributes UIDENT module_binding_body IN seq_expr

State 917:
## Known stack suffix:
## functor_arg
## LR(1) items:
module_binding_body -> functor_arg . module_binding_body [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LPAREN shift to state 355
-- On EQUAL shift to state 430
-- On COLON shift to state 910
-- On module_binding_body shift to state 918
-- On functor_arg shift to state 917
## Reductions:

State 918:
## Known stack suffix:
## functor_arg module_binding_body
## LR(1) items:
module_binding_body -> functor_arg module_binding_body . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production module_binding_body -> functor_arg module_binding_body

State 919:
## Known stack suffix:
## LET EXCEPTION
## LR(1) items:
expr -> LET EXCEPTION . ext_attributes let_exception_declaration IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 920
-- On attribute shift to state 295
## Reductions:
-- On UIDENT TRUE LPAREN LBRACKET FALSE
--   reduce production ext_attributes ->

State 920:
## Known stack suffix:
## LET EXCEPTION ext_attributes
## LR(1) items:
expr -> LET EXCEPTION ext_attributes . let_exception_declaration IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UIDENT shift to state 162
-- On TRUE shift to state 136
-- On LPAREN shift to state 163
-- On LBRACKET shift to state 166
-- On FALSE shift to state 168
-- On let_exception_declaration shift to state 921
-- On constr_ident shift to state 924
## Reductions:

State 921:
## Known stack suffix:
## LET EXCEPTION ext_attributes let_exception_declaration
## LR(1) items:
expr -> LET EXCEPTION ext_attributes let_exception_declaration . IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On IN shift to state 922
## Reductions:

State 922:
## Known stack suffix:
## LET EXCEPTION ext_attributes let_exception_declaration IN
## LR(1) items:
expr -> LET EXCEPTION ext_attributes let_exception_declaration IN . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 923
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 923:
## Known stack suffix:
## LET EXCEPTION ext_attributes let_exception_declaration IN seq_expr
## LR(1) items:
expr -> LET EXCEPTION ext_attributes let_exception_declaration IN seq_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> LET EXCEPTION ext_attributes let_exception_declaration IN seq_expr

State 924:
## Known stack suffix:
## constr_ident
## LR(1) items:
let_exception_declaration -> constr_ident . generalized_constructor_arguments attributes [ IN ]
## Transitions:
-- On OF shift to state 171
-- On COLON shift to state 277
-- On generalized_constructor_arguments shift to state 925
## Reductions:
-- On LBRACKETAT IN
--   reduce production generalized_constructor_arguments ->

State 925:
## Known stack suffix:
## constr_ident generalized_constructor_arguments
## LR(1) items:
let_exception_declaration -> constr_ident generalized_constructor_arguments . attributes [ IN ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 926
-- On attribute shift to state 225
## Reductions:
-- On IN
--   reduce production attributes ->

State 926:
## Known stack suffix:
## constr_ident generalized_constructor_arguments attributes
## LR(1) items:
let_exception_declaration -> constr_ident generalized_constructor_arguments attributes . [ IN ]
## Transitions:
## Reductions:
-- On IN
--   reduce production let_exception_declaration -> constr_ident generalized_constructor_arguments attributes

State 927:
## Known stack suffix:
## LET ext_attributes
## LR(1) items:
let_binding -> LET ext_attributes . rec_flag let_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On REC shift to state 928
-- On rec_flag shift to state 929
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE CHAR BACKQUOTE
--   reduce production rec_flag ->

State 928:
## Known stack suffix:
## REC
## LR(1) items:
rec_flag -> REC . [ UNDERSCORE UIDENT TRUE STRING SHARP PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE CHAR BACKQUOTE ]
## Transitions:
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE CHAR BACKQUOTE
--   reduce production rec_flag -> REC

State 929:
## Known stack suffix:
## LET ext_attributes rec_flag
## LR(1) items:
let_binding -> LET ext_attributes rec_flag . let_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 704
-- On simple_pattern_not_ident shift to state 753
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_no_exn_comma_list shift to state 758
-- On pattern_no_exn shift to state 761
-- On pattern_gen shift to state 773
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On let_binding_body shift to state 930
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 930:
## Known stack suffix:
## LET ext_attributes rec_flag let_binding_body
## LR(1) items:
let_binding -> LET ext_attributes rec_flag let_binding_body . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 931
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 931:
## Known stack suffix:
## LET ext_attributes rec_flag let_binding_body post_item_attributes
## LR(1) items:
let_binding -> LET ext_attributes rec_flag let_binding_body post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production let_binding -> LET ext_attributes rec_flag let_binding_body post_item_attributes

State 932:
## Known stack suffix:
## LPAREN COLONCOLON
## LR(1) items:
expr -> LPAREN COLONCOLON . RPAREN LPAREN expr COMMA expr RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 933
## Reductions:

State 933:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN
## LR(1) items:
expr -> LPAREN COLONCOLON RPAREN . LPAREN expr COMMA expr RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On LPAREN shift to state 934
## Reductions:

State 934:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN LPAREN
## LR(1) items:
expr -> LPAREN COLONCOLON RPAREN LPAREN . expr COMMA expr RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 935
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 935:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN LPAREN expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> LPAREN COLONCOLON RPAREN LPAREN expr . COMMA expr RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 936
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:

State 936:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN LPAREN expr COMMA
## LR(1) items:
expr -> LPAREN COLONCOLON RPAREN LPAREN expr COMMA . expr RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr COMMA . expr [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 937
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 937:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN LPAREN expr COMMA expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> LPAREN COLONCOLON RPAREN LPAREN expr COMMA expr . RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr COMMA expr . [ STAR PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## Transitions:
-- On STAR shift to state 646
-- On RPAREN shift to state 938
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COLONCOLON shift to state 677
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:
-- On COMMA COLONEQUAL
--   reduce production expr_comma_list -> expr COMMA expr

State 938:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN LPAREN expr COMMA expr RPAREN
## LR(1) items:
expr -> LPAREN COLONCOLON RPAREN LPAREN expr COMMA expr RPAREN . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> LPAREN COLONCOLON RPAREN LPAREN expr COMMA expr RPAREN

State 939:
## Known stack suffix:
## LPAREN seq_expr
## LR(1) items:
simple_expr -> LPAREN seq_expr . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN seq_expr . type_constraint RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 940
-- On COLONGREATER shift to state 726
-- On COLON shift to state 728
-- On type_constraint shift to state 941
## Reductions:

State 940:
## Known stack suffix:
## LPAREN seq_expr RPAREN
## LR(1) items:
simple_expr -> LPAREN seq_expr RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> LPAREN seq_expr RPAREN

State 941:
## Known stack suffix:
## LPAREN seq_expr type_constraint
## LR(1) items:
simple_expr -> LPAREN seq_expr type_constraint . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RPAREN shift to state 942
## Reductions:

State 942:
## Known stack suffix:
## LPAREN seq_expr type_constraint RPAREN
## LR(1) items:
simple_expr -> LPAREN seq_expr type_constraint RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN

State 943:
## Known stack suffix:
## MATCH ext_attributes seq_expr
## LR(1) items:
expr -> MATCH ext_attributes seq_expr . WITH opt_bar match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WITH shift to state 944
## Reductions:

State 944:
## Known stack suffix:
## MATCH ext_attributes seq_expr WITH
## LR(1) items:
expr -> MATCH ext_attributes seq_expr WITH . opt_bar match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 174
-- On opt_bar shift to state 945
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE EXCEPTION CHAR BACKQUOTE
--   reduce production opt_bar ->

State 945:
## Known stack suffix:
## MATCH ext_attributes seq_expr WITH opt_bar
## LR(1) items:
expr -> MATCH ext_attributes seq_expr WITH opt_bar . match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 586
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On match_cases shift to state 946
-- On match_case shift to state 847
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 946:
## Known stack suffix:
## MATCH ext_attributes seq_expr WITH opt_bar match_cases
## LR(1) items:
expr -> MATCH ext_attributes seq_expr WITH opt_bar match_cases . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR match_case [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 845
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> MATCH ext_attributes seq_expr WITH opt_bar match_cases

State 947:
## Known stack suffix:
## LPAREN VAL attributes expr
## LR(1) items:
expr -> expr . COLONCOLON expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUS expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSDOT expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PLUSEQ expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUS expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . MINUSDOT expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . PERCENT expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . attribute [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
paren_module_expr -> LPAREN VAL attributes expr . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN VAL attributes expr . COLON package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN VAL attributes expr . COLON package_type COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN VAL attributes expr . COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On STAR shift to state 646
-- On RPAREN shift to state 948
-- On PLUSEQ shift to state 655
-- On PLUSDOT shift to state 661
-- On PLUS shift to state 663
-- On PERCENT shift to state 657
-- On OR shift to state 665
-- On MINUSDOT shift to state 667
-- On MINUS shift to state 669
-- On LESS shift to state 671
-- On LBRACKETAT shift to state 58
-- On INFIXOP4 shift to state 648
-- On INFIXOP3 shift to state 659
-- On INFIXOP2 shift to state 673
-- On INFIXOP1 shift to state 675
-- On INFIXOP0 shift to state 679
-- On GREATER shift to state 681
-- On EQUAL shift to state 683
-- On COMMA shift to state 692
-- On COLONGREATER shift to state 949
-- On COLONEQUAL shift to state 694
-- On COLONCOLON shift to state 677
-- On COLON shift to state 952
-- On BARBAR shift to state 685
-- On AMPERSAND shift to state 687
-- On AMPERAMPER shift to state 689
-- On attribute shift to state 650
## Reductions:

State 948:
## Known stack suffix:
## LPAREN VAL attributes expr RPAREN
## LR(1) items:
paren_module_expr -> LPAREN VAL attributes expr RPAREN . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production paren_module_expr -> LPAREN VAL attributes expr RPAREN

State 949:
## Known stack suffix:
## LPAREN VAL attributes expr COLONGREATER
## LR(1) items:
paren_module_expr -> LPAREN VAL attributes expr COLONGREATER . package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On package_type shift to state 950
-- On mty_longident shift to state 361
-- On module_type shift to state 465
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 950:
## Known stack suffix:
## LPAREN VAL attributes expr COLONGREATER package_type
## LR(1) items:
paren_module_expr -> LPAREN VAL attributes expr COLONGREATER package_type . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On RPAREN shift to state 951
## Reductions:

State 951:
## Known stack suffix:
## LPAREN VAL attributes expr COLONGREATER package_type RPAREN
## LR(1) items:
paren_module_expr -> LPAREN VAL attributes expr COLONGREATER package_type RPAREN . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production paren_module_expr -> LPAREN VAL attributes expr COLONGREATER package_type RPAREN

State 952:
## Known stack suffix:
## LPAREN VAL attributes expr COLON
## LR(1) items:
paren_module_expr -> LPAREN VAL attributes expr COLON . package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN VAL attributes expr COLON . package_type COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On package_type shift to state 953
-- On mty_longident shift to state 361
-- On module_type shift to state 465
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 953:
## Known stack suffix:
## LPAREN VAL attributes expr COLON package_type
## LR(1) items:
paren_module_expr -> LPAREN VAL attributes expr COLON package_type . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
paren_module_expr -> LPAREN VAL attributes expr COLON package_type . COLONGREATER package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On RPAREN shift to state 954
-- On COLONGREATER shift to state 955
## Reductions:

State 954:
## Known stack suffix:
## LPAREN VAL attributes expr COLON package_type RPAREN
## LR(1) items:
paren_module_expr -> LPAREN VAL attributes expr COLON package_type RPAREN . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production paren_module_expr -> LPAREN VAL attributes expr COLON package_type RPAREN

State 955:
## Known stack suffix:
## LPAREN VAL attributes expr COLON package_type COLONGREATER
## LR(1) items:
paren_module_expr -> LPAREN VAL attributes expr COLON package_type COLONGREATER . package_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On package_type shift to state 956
-- On mty_longident shift to state 361
-- On module_type shift to state 465
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 956:
## Known stack suffix:
## LPAREN VAL attributes expr COLON package_type COLONGREATER package_type
## LR(1) items:
paren_module_expr -> LPAREN VAL attributes expr COLON package_type COLONGREATER package_type . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On RPAREN shift to state 957
## Reductions:

State 957:
## Known stack suffix:
## LPAREN VAL attributes expr COLON package_type COLONGREATER package_type RPAREN
## LR(1) items:
paren_module_expr -> LPAREN VAL attributes expr COLON package_type COLONGREATER package_type RPAREN . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production paren_module_expr -> LPAREN VAL attributes expr COLON package_type COLONGREATER package_type RPAREN

State 958:
## Known stack suffix:
## EQUAL module_expr
## LR(1) items:
module_binding_body -> EQUAL module_expr . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
module_expr -> module_expr . paren_module_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
module_expr -> module_expr . LPAREN RPAREN [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
module_expr -> module_expr . attribute [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LPAREN shift to state 449
-- On LBRACKETAT shift to state 58
-- On paren_module_expr shift to state 456
-- On attribute shift to state 457
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production module_binding_body -> EQUAL module_expr

State 959:
## Known stack suffix:
## MODULE ext_attributes UIDENT module_binding_body
## LR(1) items:
module_binding -> MODULE ext_attributes UIDENT module_binding_body . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 960
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 960:
## Known stack suffix:
## MODULE ext_attributes UIDENT module_binding_body post_item_attributes
## LR(1) items:
module_binding -> MODULE ext_attributes UIDENT module_binding_body post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production module_binding -> MODULE ext_attributes UIDENT module_binding_body post_item_attributes

State 961:
## Known stack suffix:
## MODULE ext_attributes REC
## LR(1) items:
rec_module_binding -> MODULE ext_attributes REC . UIDENT module_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 962
## Reductions:

State 962:
## Known stack suffix:
## MODULE ext_attributes REC UIDENT
## LR(1) items:
rec_module_binding -> MODULE ext_attributes REC UIDENT . module_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LPAREN shift to state 355
-- On EQUAL shift to state 430
-- On COLON shift to state 910
-- On module_binding_body shift to state 963
-- On functor_arg shift to state 917
## Reductions:

State 963:
## Known stack suffix:
## MODULE ext_attributes REC UIDENT module_binding_body
## LR(1) items:
rec_module_binding -> MODULE ext_attributes REC UIDENT module_binding_body . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 964
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 964:
## Known stack suffix:
## MODULE ext_attributes REC UIDENT module_binding_body post_item_attributes
## LR(1) items:
rec_module_binding -> MODULE ext_attributes REC UIDENT module_binding_body post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production rec_module_binding -> MODULE ext_attributes REC UIDENT module_binding_body post_item_attributes

State 965:
## Known stack suffix:
## LBRACKETPERCENTPERCENT
## LR(1) items:
item_extension -> LBRACKETPERCENTPERCENT . attr_id payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS ]
## Transitions:
-- On WITH shift to state 3
-- On WHILE shift to state 4
-- On WHEN shift to state 5
-- On VIRTUAL shift to state 6
-- On VAL shift to state 7
-- On UIDENT shift to state 8
-- On TYPE shift to state 9
-- On TRY shift to state 10
-- On TRUE shift to state 11
-- On TO shift to state 12
-- On THEN shift to state 13
-- On STRUCT shift to state 14
-- On SIG shift to state 15
-- On REC shift to state 16
-- On PRIVATE shift to state 17
-- On OR shift to state 18
-- On OPEN shift to state 19
-- On OF shift to state 20
-- On OBJECT shift to state 21
-- On NONREC shift to state 22
-- On NEW shift to state 23
-- On MUTABLE shift to state 24
-- On MODULE shift to state 25
-- On METHOD shift to state 26
-- On MATCH shift to state 27
-- On LIDENT shift to state 28
-- On LET shift to state 29
-- On LAZY shift to state 30
-- On INITIALIZER shift to state 31
-- On INHERIT shift to state 32
-- On INCLUDE shift to state 33
-- On IN shift to state 34
-- On IF shift to state 35
-- On FUNCTOR shift to state 36
-- On FUNCTION shift to state 37
-- On FUN shift to state 38
-- On FOR shift to state 39
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 41
-- On EXCEPTION shift to state 42
-- On END shift to state 43
-- On ELSE shift to state 44
-- On DOWNTO shift to state 45
-- On DONE shift to state 46
-- On DO shift to state 47
-- On CONSTRAINT shift to state 48
-- On CLASS shift to state 49
-- On BEGIN shift to state 50
-- On ASSERT shift to state 51
-- On AS shift to state 52
-- On AND shift to state 53
-- On single_attr_id shift to state 54
-- On attr_id shift to state 966
## Reductions:

State 966:
## Known stack suffix:
## LBRACKETPERCENTPERCENT attr_id
## LR(1) items:
item_extension -> LBRACKETPERCENTPERCENT attr_id . payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS ]
## Transitions:
-- On WHILE shift to state 1
-- On VAL shift to state 60
-- On UIDENT shift to state 94
-- On TYPE shift to state 154
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 327
-- On SEMISEMI shift to state 338
-- On QUESTIONQUESTION shift to state 290
-- On QUESTION shift to state 967
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OPEN shift to state 339
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 347
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKETATATAT shift to state 971
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INCLUDE shift to state 973
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 987
-- On COLON shift to state 997
-- On CLASS shift to state 1203
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On value_description shift to state 1320
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On type_declarations shift to state 1321
-- On type_declaration shift to state 1155
-- On toplevel_directive shift to state 1322
-- On subtractive shift to state 614
-- On structure_tail shift to state 1323
-- On structure_item shift to state 1324
-- On structure shift to state 1362
-- On str_type_extension shift to state 1326
-- On str_include_statement shift to state 1327
-- On str_exception_declaration shift to state 1328
-- On simple_expr shift to state 615
-- On sig_exception_declaration shift to state 1329
-- On seq_expr shift to state 1358
-- On rec_module_bindings shift to state 1330
-- On rec_module_binding shift to state 1337
-- On primitive_declaration shift to state 1338
-- On payload shift to state 1365
-- On open_statement shift to state 1339
-- On name_tag shift to state 635
-- On module_type_declaration shift to state 1340
-- On module_binding shift to state 1341
-- On mod_longident shift to state 493
-- On let_bindings shift to state 1361
-- On let_binding shift to state 640
-- On label shift to state 641
-- On item_extension shift to state 1343
-- On floating_attribute shift to state 1345
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On class_type_declarations shift to state 1346
-- On class_type_declaration shift to state 1188
-- On class_declarations shift to state 1347
-- On class_declaration shift to state 1356
-- On additive shift to state 653
## Reductions:
-- On RBRACKET
--   reduce production structure_tail ->

State 967:
## Known stack suffix:
## QUESTION
## LR(1) items:
payload -> QUESTION . pattern [ RBRACKET ]
payload -> QUESTION . pattern WHEN seq_expr [ RBRACKET ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 968
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 968:
## Known stack suffix:
## QUESTION pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . attribute [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
payload -> QUESTION pattern . [ RBRACKET ]
payload -> QUESTION pattern . WHEN seq_expr [ RBRACKET ]
## Transitions:
-- On WHEN shift to state 969
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On BAR shift to state 559
-- On AS shift to state 561
-- On attribute shift to state 545
## Reductions:
-- On RBRACKET
--   reduce production payload -> QUESTION pattern

State 969:
## Known stack suffix:
## QUESTION pattern WHEN
## LR(1) items:
payload -> QUESTION pattern WHEN . seq_expr [ RBRACKET ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 970
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 970:
## Known stack suffix:
## QUESTION pattern WHEN seq_expr
## LR(1) items:
payload -> QUESTION pattern WHEN seq_expr . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production payload -> QUESTION pattern WHEN seq_expr

State 971:
## Known stack suffix:
## LBRACKETATATAT
## LR(1) items:
floating_attribute -> LBRACKETATATAT . attr_id payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS ]
## Transitions:
-- On WITH shift to state 3
-- On WHILE shift to state 4
-- On WHEN shift to state 5
-- On VIRTUAL shift to state 6
-- On VAL shift to state 7
-- On UIDENT shift to state 8
-- On TYPE shift to state 9
-- On TRY shift to state 10
-- On TRUE shift to state 11
-- On TO shift to state 12
-- On THEN shift to state 13
-- On STRUCT shift to state 14
-- On SIG shift to state 15
-- On REC shift to state 16
-- On PRIVATE shift to state 17
-- On OR shift to state 18
-- On OPEN shift to state 19
-- On OF shift to state 20
-- On OBJECT shift to state 21
-- On NONREC shift to state 22
-- On NEW shift to state 23
-- On MUTABLE shift to state 24
-- On MODULE shift to state 25
-- On METHOD shift to state 26
-- On MATCH shift to state 27
-- On LIDENT shift to state 28
-- On LET shift to state 29
-- On LAZY shift to state 30
-- On INITIALIZER shift to state 31
-- On INHERIT shift to state 32
-- On INCLUDE shift to state 33
-- On IN shift to state 34
-- On IF shift to state 35
-- On FUNCTOR shift to state 36
-- On FUNCTION shift to state 37
-- On FUN shift to state 38
-- On FOR shift to state 39
-- On FALSE shift to state 40
-- On EXTERNAL shift to state 41
-- On EXCEPTION shift to state 42
-- On END shift to state 43
-- On ELSE shift to state 44
-- On DOWNTO shift to state 45
-- On DONE shift to state 46
-- On DO shift to state 47
-- On CONSTRAINT shift to state 48
-- On CLASS shift to state 49
-- On BEGIN shift to state 50
-- On ASSERT shift to state 51
-- On AS shift to state 52
-- On AND shift to state 53
-- On single_attr_id shift to state 54
-- On attr_id shift to state 972
## Reductions:

State 972:
## Known stack suffix:
## LBRACKETATATAT attr_id
## LR(1) items:
floating_attribute -> LBRACKETATATAT attr_id . payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS ]
## Transitions:
-- On WHILE shift to state 1
-- On VAL shift to state 60
-- On UIDENT shift to state 94
-- On TYPE shift to state 154
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 327
-- On SEMISEMI shift to state 338
-- On QUESTIONQUESTION shift to state 290
-- On QUESTION shift to state 967
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OPEN shift to state 339
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 347
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKETATATAT shift to state 971
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INCLUDE shift to state 973
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 987
-- On COLON shift to state 997
-- On CLASS shift to state 1203
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On value_description shift to state 1320
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On type_declarations shift to state 1321
-- On type_declaration shift to state 1155
-- On toplevel_directive shift to state 1322
-- On subtractive shift to state 614
-- On structure_tail shift to state 1323
-- On structure_item shift to state 1324
-- On structure shift to state 1362
-- On str_type_extension shift to state 1326
-- On str_include_statement shift to state 1327
-- On str_exception_declaration shift to state 1328
-- On simple_expr shift to state 615
-- On sig_exception_declaration shift to state 1329
-- On seq_expr shift to state 1358
-- On rec_module_bindings shift to state 1330
-- On rec_module_binding shift to state 1337
-- On primitive_declaration shift to state 1338
-- On payload shift to state 1363
-- On open_statement shift to state 1339
-- On name_tag shift to state 635
-- On module_type_declaration shift to state 1340
-- On module_binding shift to state 1341
-- On mod_longident shift to state 493
-- On let_bindings shift to state 1361
-- On let_binding shift to state 640
-- On label shift to state 641
-- On item_extension shift to state 1343
-- On floating_attribute shift to state 1345
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On class_type_declarations shift to state 1346
-- On class_type_declaration shift to state 1188
-- On class_declarations shift to state 1347
-- On class_declaration shift to state 1356
-- On additive shift to state 653
## Reductions:
-- On RBRACKET
--   reduce production structure_tail ->

State 973:
## Known stack suffix:
## INCLUDE
## LR(1) items:
str_include_statement -> INCLUDE . ext_attributes module_expr post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 974
-- On attribute shift to state 295
## Reductions:
-- On UIDENT STRUCT LPAREN LBRACKETPERCENT FUNCTOR
--   reduce production ext_attributes ->

State 974:
## Known stack suffix:
## INCLUDE ext_attributes
## LR(1) items:
str_include_statement -> INCLUDE ext_attributes . module_expr post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 94
-- On STRUCT shift to state 325
-- On LPAREN shift to state 431
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 443
-- On paren_module_expr shift to state 447
-- On module_expr shift to state 975
-- On mod_longident shift to state 458
-- On extension shift to state 459
## Reductions:

State 975:
## Known stack suffix:
## INCLUDE ext_attributes module_expr
## LR(1) items:
module_expr -> module_expr . paren_module_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_expr -> module_expr . LPAREN RPAREN [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_expr -> module_expr . attribute [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
str_include_statement -> INCLUDE ext_attributes module_expr . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LPAREN shift to state 449
-- On LBRACKETATAT shift to state 285
-- On LBRACKETAT shift to state 58
-- On post_item_attributes shift to state 976
-- On post_item_attribute shift to state 345
-- On paren_module_expr shift to state 456
-- On attribute shift to state 457
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 976:
## Known stack suffix:
## INCLUDE ext_attributes module_expr post_item_attributes
## LR(1) items:
str_include_statement -> INCLUDE ext_attributes module_expr post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production str_include_statement -> INCLUDE ext_attributes module_expr post_item_attributes

State 977:
## Known stack suffix:
## EXTERNAL
## LR(1) items:
primitive_declaration -> EXTERNAL . ext_attributes val_ident COLON core_type EQUAL primitive_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 978
-- On attribute shift to state 295
## Reductions:
-- On LPAREN LIDENT
--   reduce production ext_attributes ->

State 978:
## Known stack suffix:
## EXTERNAL ext_attributes
## LR(1) items:
primitive_declaration -> EXTERNAL ext_attributes . val_ident COLON core_type EQUAL primitive_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LPAREN shift to state 62
-- On LIDENT shift to state 88
-- On val_ident shift to state 979
## Reductions:

State 979:
## Known stack suffix:
## EXTERNAL ext_attributes val_ident
## LR(1) items:
primitive_declaration -> EXTERNAL ext_attributes val_ident . COLON core_type EQUAL primitive_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On COLON shift to state 980
## Reductions:

State 980:
## Known stack suffix:
## EXTERNAL ext_attributes val_ident COLON
## LR(1) items:
primitive_declaration -> EXTERNAL ext_attributes val_ident COLON . core_type EQUAL primitive_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 981
## Reductions:

State 981:
## Known stack suffix:
## EXTERNAL ext_attributes val_ident COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
primitive_declaration -> EXTERNAL ext_attributes val_ident COLON core_type . EQUAL primitive_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On EQUAL shift to state 982
-- On attribute shift to state 391
## Reductions:

State 982:
## Known stack suffix:
## EXTERNAL ext_attributes val_ident COLON core_type EQUAL
## LR(1) items:
primitive_declaration -> EXTERNAL ext_attributes val_ident COLON core_type EQUAL . primitive_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On STRING shift to state 983
-- On primitive_declaration_body shift to state 985
## Reductions:

State 983:
## Known stack suffix:
## STRING
## LR(1) items:
primitive_declaration_body -> STRING . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
primitive_declaration_body -> STRING . primitive_declaration_body [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On STRING shift to state 983
-- On primitive_declaration_body shift to state 984
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production primitive_declaration_body -> STRING

State 984:
## Known stack suffix:
## STRING primitive_declaration_body
## LR(1) items:
primitive_declaration_body -> STRING primitive_declaration_body . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production primitive_declaration_body -> STRING primitive_declaration_body

State 985:
## Known stack suffix:
## EXTERNAL ext_attributes val_ident COLON core_type EQUAL primitive_declaration_body
## LR(1) items:
primitive_declaration -> EXTERNAL ext_attributes val_ident COLON core_type EQUAL primitive_declaration_body . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 986
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 986:
## Known stack suffix:
## EXTERNAL ext_attributes val_ident COLON core_type EQUAL primitive_declaration_body post_item_attributes
## LR(1) items:
primitive_declaration -> EXTERNAL ext_attributes val_ident COLON core_type EQUAL primitive_declaration_body post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production primitive_declaration -> EXTERNAL ext_attributes val_ident COLON core_type EQUAL primitive_declaration_body post_item_attributes

State 987:
## Known stack suffix:
## EXCEPTION
## LR(1) items:
sig_exception_declaration -> EXCEPTION . ext_attributes constr_ident generalized_constructor_arguments attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
str_exception_declaration -> EXCEPTION . ext_attributes constr_ident EQUAL constr_longident attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 988
-- On attribute shift to state 295
## Reductions:
-- On UIDENT TRUE LPAREN LBRACKET FALSE
--   reduce production ext_attributes ->

State 988:
## Known stack suffix:
## EXCEPTION ext_attributes
## LR(1) items:
sig_exception_declaration -> EXCEPTION ext_attributes . constr_ident generalized_constructor_arguments attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
str_exception_declaration -> EXCEPTION ext_attributes . constr_ident EQUAL constr_longident attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 162
-- On TRUE shift to state 136
-- On LPAREN shift to state 163
-- On LBRACKET shift to state 166
-- On FALSE shift to state 168
-- On constr_ident shift to state 989
## Reductions:

State 989:
## Known stack suffix:
## EXCEPTION ext_attributes constr_ident
## LR(1) items:
sig_exception_declaration -> EXCEPTION ext_attributes constr_ident . generalized_constructor_arguments attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
str_exception_declaration -> EXCEPTION ext_attributes constr_ident . EQUAL constr_longident attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On OF shift to state 171
-- On EQUAL shift to state 990
-- On COLON shift to state 277
-- On generalized_constructor_arguments shift to state 994
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production generalized_constructor_arguments ->

State 990:
## Known stack suffix:
## EXCEPTION ext_attributes constr_ident EQUAL
## LR(1) items:
str_exception_declaration -> EXCEPTION ext_attributes constr_ident EQUAL . constr_longident attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On LPAREN shift to state 268
-- On LBRACKET shift to state 270
-- On FALSE shift to state 272
-- On mod_longident shift to state 273
-- On constr_longident shift to state 991
## Reductions:

State 991:
## Known stack suffix:
## EXCEPTION ext_attributes constr_ident EQUAL constr_longident
## LR(1) items:
str_exception_declaration -> EXCEPTION ext_attributes constr_ident EQUAL constr_longident . attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 992
-- On attribute shift to state 225
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production attributes ->

State 992:
## Known stack suffix:
## EXCEPTION ext_attributes constr_ident EQUAL constr_longident attributes
## LR(1) items:
str_exception_declaration -> EXCEPTION ext_attributes constr_ident EQUAL constr_longident attributes . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 993
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 993:
## Known stack suffix:
## EXCEPTION ext_attributes constr_ident EQUAL constr_longident attributes post_item_attributes
## LR(1) items:
str_exception_declaration -> EXCEPTION ext_attributes constr_ident EQUAL constr_longident attributes post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production str_exception_declaration -> EXCEPTION ext_attributes constr_ident EQUAL constr_longident attributes post_item_attributes

State 994:
## Known stack suffix:
## EXCEPTION ext_attributes constr_ident generalized_constructor_arguments
## LR(1) items:
sig_exception_declaration -> EXCEPTION ext_attributes constr_ident generalized_constructor_arguments . attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 995
-- On attribute shift to state 225
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production attributes ->

State 995:
## Known stack suffix:
## EXCEPTION ext_attributes constr_ident generalized_constructor_arguments attributes
## LR(1) items:
sig_exception_declaration -> EXCEPTION ext_attributes constr_ident generalized_constructor_arguments attributes . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 996
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 996:
## Known stack suffix:
## EXCEPTION ext_attributes constr_ident generalized_constructor_arguments attributes post_item_attributes
## LR(1) items:
sig_exception_declaration -> EXCEPTION ext_attributes constr_ident generalized_constructor_arguments attributes post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production sig_exception_declaration -> EXCEPTION ext_attributes constr_ident generalized_constructor_arguments attributes post_item_attributes

State 997:
## Known stack suffix:
## COLON
## LR(1) items:
payload -> COLON . signature [ RBRACKET ]
payload -> COLON . core_type [ RBRACKET ]
## Transitions:
-- On VAL shift to state 60
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On TYPE shift to state 115
-- On SHARP shift to state 93
-- On SEMISEMI shift to state 998
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On OPEN shift to state 339
-- On MODULE shift to state 999
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKETATATAT shift to state 971
-- On LBRACKET shift to state 179
-- On INCLUDE shift to state 1022
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 1026
-- On CLASS shift to state 1029
-- On value_description shift to state 1144
-- On type_longident shift to state 183
-- On type_declarations shift to state 1145
-- On type_declaration shift to state 1155
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On signature_item shift to state 1156
-- On signature shift to state 1201
-- On sig_type_extension shift to state 1158
-- On sig_include_statement shift to state 1159
-- On sig_exception_declaration shift to state 1160
-- On rec_module_declarations shift to state 1161
-- On rec_module_declaration shift to state 1169
-- On primitive_declaration shift to state 1170
-- On open_statement shift to state 1171
-- On module_type_declaration shift to state 1172
-- On module_declaration shift to state 1173
-- On module_alias shift to state 1174
-- On mod_ext_longident shift to state 189
-- On item_extension shift to state 1175
-- On floating_attribute shift to state 1177
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1202
-- On class_type_declarations shift to state 1178
-- On class_type_declaration shift to state 1188
-- On class_descriptions shift to state 1189
-- On class_description shift to state 1199
## Reductions:
-- On RBRACKET
--   reduce production signature ->

State 998:
## Known stack suffix:
## SEMISEMI
## LR(1) items:
signature -> SEMISEMI . signature [ RBRACKET EOF END ]
## Transitions:
-- On VAL shift to state 60
-- On TYPE shift to state 115
-- On SEMISEMI shift to state 998
-- On OPEN shift to state 339
-- On MODULE shift to state 999
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETATATAT shift to state 971
-- On INCLUDE shift to state 1022
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 1026
-- On CLASS shift to state 1029
-- On value_description shift to state 1144
-- On type_declarations shift to state 1145
-- On type_declaration shift to state 1155
-- On signature_item shift to state 1156
-- On signature shift to state 1200
-- On sig_type_extension shift to state 1158
-- On sig_include_statement shift to state 1159
-- On sig_exception_declaration shift to state 1160
-- On rec_module_declarations shift to state 1161
-- On rec_module_declaration shift to state 1169
-- On primitive_declaration shift to state 1170
-- On open_statement shift to state 1171
-- On module_type_declaration shift to state 1172
-- On module_declaration shift to state 1173
-- On module_alias shift to state 1174
-- On item_extension shift to state 1175
-- On floating_attribute shift to state 1177
-- On class_type_declarations shift to state 1178
-- On class_type_declaration shift to state 1188
-- On class_descriptions shift to state 1189
-- On class_description shift to state 1199
## Reductions:
-- On RBRACKET EOF END
--   reduce production signature ->

State 999:
## Known stack suffix:
## MODULE
## LR(1) items:
module_alias -> MODULE . ext_attributes UIDENT EQUAL mod_longident post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_declaration -> MODULE . ext_attributes UIDENT module_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_type_declaration -> MODULE . TYPE ext_attributes ident module_type_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
rec_module_declaration -> MODULE . ext_attributes REC UIDENT COLON module_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On TYPE shift to state 348
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 1000
-- On attribute shift to state 295
## Reductions:
-- On UIDENT REC
--   reduce production ext_attributes ->

State 1000:
## Known stack suffix:
## MODULE ext_attributes
## LR(1) items:
module_alias -> MODULE ext_attributes . UIDENT EQUAL mod_longident post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_declaration -> MODULE ext_attributes . UIDENT module_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
rec_module_declaration -> MODULE ext_attributes . REC UIDENT COLON module_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 1001
-- On REC shift to state 1017
## Reductions:

State 1001:
## Known stack suffix:
## MODULE ext_attributes UIDENT
## LR(1) items:
module_alias -> MODULE ext_attributes UIDENT . EQUAL mod_longident post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_declaration -> MODULE ext_attributes UIDENT . module_declaration_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LPAREN shift to state 1002
-- On EQUAL shift to state 1012
-- On COLON shift to state 1007
-- On module_declaration_body shift to state 1015
## Reductions:

State 1002:
## Known stack suffix:
## LPAREN
## LR(1) items:
module_declaration_body -> LPAREN . UIDENT COLON module_type RPAREN module_declaration_body [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_declaration_body -> LPAREN . RPAREN module_declaration_body [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 1003
-- On RPAREN shift to state 1010
## Reductions:

State 1003:
## Known stack suffix:
## LPAREN UIDENT
## LR(1) items:
module_declaration_body -> LPAREN UIDENT . COLON module_type RPAREN module_declaration_body [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On COLON shift to state 1004
## Reductions:

State 1004:
## Known stack suffix:
## LPAREN UIDENT COLON
## LR(1) items:
module_declaration_body -> LPAREN UIDENT COLON . module_type RPAREN module_declaration_body [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 1005
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 1005:
## Known stack suffix:
## LPAREN UIDENT COLON module_type
## LR(1) items:
module_declaration_body -> LPAREN UIDENT COLON module_type . RPAREN module_declaration_body [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN MINUSGREATER LBRACKETAT ]
module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## Transitions:
-- On WITH shift to state 363
-- On RPAREN shift to state 1006
-- On MINUSGREATER shift to state 409
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 411
## Reductions:

State 1006:
## Known stack suffix:
## LPAREN UIDENT COLON module_type RPAREN
## LR(1) items:
module_declaration_body -> LPAREN UIDENT COLON module_type RPAREN . module_declaration_body [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LPAREN shift to state 1002
-- On COLON shift to state 1007
-- On module_declaration_body shift to state 1009
## Reductions:

State 1007:
## Known stack suffix:
## COLON
## LR(1) items:
module_declaration_body -> COLON . module_type [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 1008
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 1008:
## Known stack suffix:
## COLON module_type
## LR(1) items:
module_declaration_body -> COLON module_type . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On WITH shift to state 363
-- On MINUSGREATER shift to state 409
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 411
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production module_declaration_body -> COLON module_type

State 1009:
## Known stack suffix:
## LPAREN UIDENT COLON module_type RPAREN module_declaration_body
## LR(1) items:
module_declaration_body -> LPAREN UIDENT COLON module_type RPAREN module_declaration_body . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production module_declaration_body -> LPAREN UIDENT COLON module_type RPAREN module_declaration_body

State 1010:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
module_declaration_body -> LPAREN RPAREN . module_declaration_body [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LPAREN shift to state 1002
-- On COLON shift to state 1007
-- On module_declaration_body shift to state 1011
## Reductions:

State 1011:
## Known stack suffix:
## LPAREN RPAREN module_declaration_body
## LR(1) items:
module_declaration_body -> LPAREN RPAREN module_declaration_body . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production module_declaration_body -> LPAREN RPAREN module_declaration_body

State 1012:
## Known stack suffix:
## MODULE ext_attributes UIDENT EQUAL
## LR(1) items:
module_alias -> MODULE ext_attributes UIDENT EQUAL . mod_longident post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 94
-- On mod_longident shift to state 1013
## Reductions:

State 1013:
## Known stack suffix:
## MODULE ext_attributes UIDENT EQUAL mod_longident
## LR(1) items:
mod_longident -> mod_longident . DOT UIDENT [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END DOT CLASS ]
module_alias -> MODULE ext_attributes UIDENT EQUAL mod_longident . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On DOT shift to state 274
-- On post_item_attributes shift to state 1014
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 1014:
## Known stack suffix:
## MODULE ext_attributes UIDENT EQUAL mod_longident post_item_attributes
## LR(1) items:
module_alias -> MODULE ext_attributes UIDENT EQUAL mod_longident post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production module_alias -> MODULE ext_attributes UIDENT EQUAL mod_longident post_item_attributes

State 1015:
## Known stack suffix:
## MODULE ext_attributes UIDENT module_declaration_body
## LR(1) items:
module_declaration -> MODULE ext_attributes UIDENT module_declaration_body . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1016
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 1016:
## Known stack suffix:
## MODULE ext_attributes UIDENT module_declaration_body post_item_attributes
## LR(1) items:
module_declaration -> MODULE ext_attributes UIDENT module_declaration_body post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production module_declaration -> MODULE ext_attributes UIDENT module_declaration_body post_item_attributes

State 1017:
## Known stack suffix:
## MODULE ext_attributes REC
## LR(1) items:
rec_module_declaration -> MODULE ext_attributes REC . UIDENT COLON module_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 1018
## Reductions:

State 1018:
## Known stack suffix:
## MODULE ext_attributes REC UIDENT
## LR(1) items:
rec_module_declaration -> MODULE ext_attributes REC UIDENT . COLON module_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On COLON shift to state 1019
## Reductions:

State 1019:
## Known stack suffix:
## MODULE ext_attributes REC UIDENT COLON
## LR(1) items:
rec_module_declaration -> MODULE ext_attributes REC UIDENT COLON . module_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 1020
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 1020:
## Known stack suffix:
## MODULE ext_attributes REC UIDENT COLON module_type
## LR(1) items:
module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
rec_module_declaration -> MODULE ext_attributes REC UIDENT COLON module_type . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On WITH shift to state 363
-- On MINUSGREATER shift to state 409
-- On LBRACKETATAT shift to state 285
-- On LBRACKETAT shift to state 58
-- On post_item_attributes shift to state 1021
-- On post_item_attribute shift to state 345
-- On attribute shift to state 411
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 1021:
## Known stack suffix:
## MODULE ext_attributes REC UIDENT COLON module_type post_item_attributes
## LR(1) items:
rec_module_declaration -> MODULE ext_attributes REC UIDENT COLON module_type post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production rec_module_declaration -> MODULE ext_attributes REC UIDENT COLON module_type post_item_attributes

State 1022:
## Known stack suffix:
## INCLUDE
## LR(1) items:
sig_include_statement -> INCLUDE . ext_attributes module_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 1023
-- On attribute shift to state 295
## Reductions:
-- On UIDENT SIG MODULE LPAREN LIDENT LBRACKETPERCENT FUNCTOR
--   reduce production ext_attributes ->

State 1023:
## Known stack suffix:
## INCLUDE ext_attributes
## LR(1) items:
sig_include_statement -> INCLUDE ext_attributes . module_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 1024
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 1024:
## Known stack suffix:
## INCLUDE ext_attributes module_type
## LR(1) items:
module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
sig_include_statement -> INCLUDE ext_attributes module_type . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On WITH shift to state 363
-- On MINUSGREATER shift to state 409
-- On LBRACKETATAT shift to state 285
-- On LBRACKETAT shift to state 58
-- On post_item_attributes shift to state 1025
-- On post_item_attribute shift to state 345
-- On attribute shift to state 411
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 1025:
## Known stack suffix:
## INCLUDE ext_attributes module_type post_item_attributes
## LR(1) items:
sig_include_statement -> INCLUDE ext_attributes module_type post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production sig_include_statement -> INCLUDE ext_attributes module_type post_item_attributes

State 1026:
## Known stack suffix:
## EXCEPTION
## LR(1) items:
sig_exception_declaration -> EXCEPTION . ext_attributes constr_ident generalized_constructor_arguments attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 1027
-- On attribute shift to state 295
## Reductions:
-- On UIDENT TRUE LPAREN LBRACKET FALSE
--   reduce production ext_attributes ->

State 1027:
## Known stack suffix:
## EXCEPTION ext_attributes
## LR(1) items:
sig_exception_declaration -> EXCEPTION ext_attributes . constr_ident generalized_constructor_arguments attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 162
-- On TRUE shift to state 136
-- On LPAREN shift to state 163
-- On LBRACKET shift to state 166
-- On FALSE shift to state 168
-- On constr_ident shift to state 1028
## Reductions:

State 1028:
## Known stack suffix:
## EXCEPTION ext_attributes constr_ident
## LR(1) items:
sig_exception_declaration -> EXCEPTION ext_attributes constr_ident . generalized_constructor_arguments attributes post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On OF shift to state 171
-- On COLON shift to state 277
-- On generalized_constructor_arguments shift to state 994
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production generalized_constructor_arguments ->

State 1029:
## Known stack suffix:
## CLASS
## LR(1) items:
class_description -> CLASS . ext_attributes virtual_flag class_type_parameters LIDENT COLON class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
class_type_declaration -> CLASS . TYPE ext_attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On TYPE shift to state 1030
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 1112
-- On attribute shift to state 295
## Reductions:
-- On VIRTUAL LIDENT LBRACKET
--   reduce production ext_attributes ->

State 1030:
## Known stack suffix:
## CLASS TYPE
## LR(1) items:
class_type_declaration -> CLASS TYPE . ext_attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 1031
-- On attribute shift to state 295
## Reductions:
-- On VIRTUAL LIDENT LBRACKET
--   reduce production ext_attributes ->

State 1031:
## Known stack suffix:
## CLASS TYPE ext_attributes
## LR(1) items:
class_type_declaration -> CLASS TYPE ext_attributes . virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On VIRTUAL shift to state 1032
-- On virtual_flag shift to state 1033
## Reductions:
-- On LIDENT LBRACKET
--   reduce production virtual_flag ->

State 1032:
## Known stack suffix:
## VIRTUAL
## LR(1) items:
virtual_flag -> VIRTUAL . [ LIDENT LBRACKET ]
## Transitions:
## Reductions:
-- On LIDENT LBRACKET
--   reduce production virtual_flag -> VIRTUAL

State 1033:
## Known stack suffix:
## CLASS TYPE ext_attributes virtual_flag
## LR(1) items:
class_type_declaration -> CLASS TYPE ext_attributes virtual_flag . class_type_parameters LIDENT EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKET shift to state 1034
-- On class_type_parameters shift to state 1037
## Reductions:
-- On LIDENT
--   reduce production class_type_parameters ->

State 1034:
## Known stack suffix:
## LBRACKET
## LR(1) items:
class_type_parameters -> LBRACKET . type_parameter_list RBRACKET [ LIDENT ]
## Transitions:
-- On PLUS shift to state 119
-- On MINUS shift to state 120
-- On type_variance shift to state 366
-- On type_parameter_list shift to state 1035
-- On type_parameter shift to state 374
## Reductions:
-- On QUOTE
--   reduce production type_variance ->

State 1035:
## Known stack suffix:
## LBRACKET type_parameter_list
## LR(1) items:
class_type_parameters -> LBRACKET type_parameter_list . RBRACKET [ LIDENT ]
type_parameter_list -> type_parameter_list . COMMA type_parameter [ RBRACKET COMMA ]
## Transitions:
-- On RBRACKET shift to state 1036
-- On COMMA shift to state 372
## Reductions:

State 1036:
## Known stack suffix:
## LBRACKET type_parameter_list RBRACKET
## LR(1) items:
class_type_parameters -> LBRACKET type_parameter_list RBRACKET . [ LIDENT ]
## Transitions:
## Reductions:
-- On LIDENT
--   reduce production class_type_parameters -> LBRACKET type_parameter_list RBRACKET

State 1037:
## Known stack suffix:
## CLASS TYPE ext_attributes virtual_flag class_type_parameters
## LR(1) items:
class_type_declaration -> CLASS TYPE ext_attributes virtual_flag class_type_parameters . LIDENT EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LIDENT shift to state 1038
## Reductions:

State 1038:
## Known stack suffix:
## CLASS TYPE ext_attributes virtual_flag class_type_parameters LIDENT
## LR(1) items:
class_type_declaration -> CLASS TYPE ext_attributes virtual_flag class_type_parameters LIDENT . EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On EQUAL shift to state 1039
## Reductions:

State 1039:
## Known stack suffix:
## CLASS TYPE ext_attributes virtual_flag class_type_parameters LIDENT EQUAL
## LR(1) items:
class_type_declaration -> CLASS TYPE ext_attributes virtual_flag class_type_parameters LIDENT EQUAL . class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 92
-- On OBJECT shift to state 1040
-- On LIDENT shift to state 1083
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKET shift to state 1084
-- On mod_ext_longident shift to state 1087
-- On extension shift to state 1094
-- On clty_longident shift to state 1095
-- On class_signature shift to state 1110
## Reductions:

State 1040:
## Known stack suffix:
## OBJECT
## LR(1) items:
class_signature -> OBJECT . attributes class_sig_body END [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1041
-- On attribute shift to state 225
## Reductions:
-- On VAL METHOD LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production attributes ->

State 1041:
## Known stack suffix:
## OBJECT attributes
## LR(1) items:
class_signature -> OBJECT attributes . class_sig_body END [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On LPAREN shift to state 1042
-- On class_sig_body shift to state 1045
-- On class_self_type shift to state 1047
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production class_self_type ->

State 1042:
## Known stack suffix:
## LPAREN
## LR(1) items:
class_self_type -> LPAREN . core_type RPAREN [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1043
## Reductions:

State 1043:
## Known stack suffix:
## LPAREN core_type
## LR(1) items:
class_self_type -> LPAREN core_type . RPAREN [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
core_type -> core_type . attribute [ RPAREN LBRACKETAT ]
## Transitions:
-- On RPAREN shift to state 1044
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:

State 1044:
## Known stack suffix:
## LPAREN core_type RPAREN
## LR(1) items:
class_self_type -> LPAREN core_type RPAREN . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production class_self_type -> LPAREN core_type RPAREN

State 1045:
## Known stack suffix:
## OBJECT attributes class_sig_body
## LR(1) items:
class_signature -> OBJECT attributes class_sig_body . END [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On END shift to state 1046
## Reductions:

State 1046:
## Known stack suffix:
## OBJECT attributes class_sig_body END
## LR(1) items:
class_signature -> OBJECT attributes class_sig_body END . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND
--   reduce production class_signature -> OBJECT attributes class_sig_body END

State 1047:
## Known stack suffix:
## class_self_type
## LR(1) items:
class_sig_body -> class_self_type . class_sig_fields [ END ]
## Transitions:
-- On class_sig_fields shift to state 1048
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production class_sig_fields ->

State 1048:
## Known stack suffix:
## class_self_type class_sig_fields
## LR(1) items:
class_sig_body -> class_self_type class_sig_fields . [ END ]
class_sig_fields -> class_sig_fields . class_sig_field [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On VAL shift to state 1049
-- On METHOD shift to state 1066
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETATATAT shift to state 971
-- On INHERIT shift to state 1081
-- On CONSTRAINT shift to state 1099
-- On item_extension shift to state 1106
-- On floating_attribute shift to state 1108
-- On class_sig_field shift to state 1109
## Reductions:
-- On END
--   reduce production class_sig_body -> class_self_type class_sig_fields

State 1049:
## Known stack suffix:
## VAL
## LR(1) items:
class_sig_field -> VAL . attributes value_type post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1050
-- On attribute shift to state 225
## Reductions:
-- On VIRTUAL MUTABLE LIDENT
--   reduce production attributes ->

State 1050:
## Known stack suffix:
## VAL attributes
## LR(1) items:
class_sig_field -> VAL attributes . value_type post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On VIRTUAL shift to state 1051
-- On MUTABLE shift to state 1056
-- On LIDENT shift to state 143
-- On value_type shift to state 1061
-- On label shift to state 1063
## Reductions:

State 1051:
## Known stack suffix:
## VIRTUAL
## LR(1) items:
value_type -> VIRTUAL . mutable_flag label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On MUTABLE shift to state 245
-- On mutable_flag shift to state 1052
## Reductions:
-- On LIDENT
--   reduce production mutable_flag ->

State 1052:
## Known stack suffix:
## VIRTUAL mutable_flag
## LR(1) items:
value_type -> VIRTUAL mutable_flag . label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 1053
## Reductions:

State 1053:
## Known stack suffix:
## VIRTUAL mutable_flag label
## LR(1) items:
value_type -> VIRTUAL mutable_flag label . COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On COLON shift to state 1054
## Reductions:

State 1054:
## Known stack suffix:
## VIRTUAL mutable_flag label COLON
## LR(1) items:
value_type -> VIRTUAL mutable_flag label COLON . core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1055
## Reductions:

State 1055:
## Known stack suffix:
## VIRTUAL mutable_flag label COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT END CONSTRAINT ]
value_type -> VIRTUAL mutable_flag label COLON core_type . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT
--   reduce production value_type -> VIRTUAL mutable_flag label COLON core_type

State 1056:
## Known stack suffix:
## MUTABLE
## LR(1) items:
value_type -> MUTABLE . virtual_flag label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On VIRTUAL shift to state 1032
-- On virtual_flag shift to state 1057
## Reductions:
-- On LIDENT
--   reduce production virtual_flag ->

State 1057:
## Known stack suffix:
## MUTABLE virtual_flag
## LR(1) items:
value_type -> MUTABLE virtual_flag . label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 1058
## Reductions:

State 1058:
## Known stack suffix:
## MUTABLE virtual_flag label
## LR(1) items:
value_type -> MUTABLE virtual_flag label . COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On COLON shift to state 1059
## Reductions:

State 1059:
## Known stack suffix:
## MUTABLE virtual_flag label COLON
## LR(1) items:
value_type -> MUTABLE virtual_flag label COLON . core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1060
## Reductions:

State 1060:
## Known stack suffix:
## MUTABLE virtual_flag label COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT END CONSTRAINT ]
value_type -> MUTABLE virtual_flag label COLON core_type . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT
--   reduce production value_type -> MUTABLE virtual_flag label COLON core_type

State 1061:
## Known stack suffix:
## VAL attributes value_type
## LR(1) items:
class_sig_field -> VAL attributes value_type . post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1062
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production post_item_attributes ->

State 1062:
## Known stack suffix:
## VAL attributes value_type post_item_attributes
## LR(1) items:
class_sig_field -> VAL attributes value_type post_item_attributes . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production class_sig_field -> VAL attributes value_type post_item_attributes

State 1063:
## Known stack suffix:
## label
## LR(1) items:
value_type -> label . COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On COLON shift to state 1064
## Reductions:

State 1064:
## Known stack suffix:
## label COLON
## LR(1) items:
value_type -> label COLON . core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1065
## Reductions:

State 1065:
## Known stack suffix:
## label COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT END CONSTRAINT ]
value_type -> label COLON core_type . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INHERIT END CONSTRAINT
--   reduce production value_type -> label COLON core_type

State 1066:
## Known stack suffix:
## METHOD
## LR(1) items:
class_sig_field -> METHOD . attributes private_virtual_flags label COLON poly_type post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1067
-- On attribute shift to state 225
## Reductions:
-- On VIRTUAL PRIVATE LIDENT
--   reduce production attributes ->

State 1067:
## Known stack suffix:
## METHOD attributes
## LR(1) items:
class_sig_field -> METHOD attributes . private_virtual_flags label COLON poly_type post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On VIRTUAL shift to state 1068
-- On PRIVATE shift to state 1070
-- On private_virtual_flags shift to state 1072
## Reductions:
-- On LIDENT
--   reduce production private_virtual_flags ->

State 1068:
## Known stack suffix:
## VIRTUAL
## LR(1) items:
private_virtual_flags -> VIRTUAL . [ LIDENT ]
private_virtual_flags -> VIRTUAL . PRIVATE [ LIDENT ]
## Transitions:
-- On PRIVATE shift to state 1069
## Reductions:
-- On LIDENT
--   reduce production private_virtual_flags -> VIRTUAL

State 1069:
## Known stack suffix:
## VIRTUAL PRIVATE
## LR(1) items:
private_virtual_flags -> VIRTUAL PRIVATE . [ LIDENT ]
## Transitions:
## Reductions:
-- On LIDENT
--   reduce production private_virtual_flags -> VIRTUAL PRIVATE

State 1070:
## Known stack suffix:
## PRIVATE
## LR(1) items:
private_virtual_flags -> PRIVATE . [ LIDENT ]
private_virtual_flags -> PRIVATE . VIRTUAL [ LIDENT ]
## Transitions:
-- On VIRTUAL shift to state 1071
## Reductions:
-- On LIDENT
--   reduce production private_virtual_flags -> PRIVATE

State 1071:
## Known stack suffix:
## PRIVATE VIRTUAL
## LR(1) items:
private_virtual_flags -> PRIVATE VIRTUAL . [ LIDENT ]
## Transitions:
## Reductions:
-- On LIDENT
--   reduce production private_virtual_flags -> PRIVATE VIRTUAL

State 1072:
## Known stack suffix:
## METHOD attributes private_virtual_flags
## LR(1) items:
class_sig_field -> METHOD attributes private_virtual_flags . label COLON poly_type post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 1073
## Reductions:

State 1073:
## Known stack suffix:
## METHOD attributes private_virtual_flags label
## LR(1) items:
class_sig_field -> METHOD attributes private_virtual_flags label . COLON poly_type post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On COLON shift to state 1074
## Reductions:

State 1074:
## Known stack suffix:
## METHOD attributes private_virtual_flags label COLON
## LR(1) items:
class_sig_field -> METHOD attributes private_virtual_flags label COLON . poly_type post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 150
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On typevar_list shift to state 1075
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On poly_type shift to state 1078
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1080
## Reductions:

State 1075:
## Known stack suffix:
## typevar_list
## LR(1) items:
poly_type -> typevar_list . DOT core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT EQUAL END CONSTRAINT ]
typevar_list -> typevar_list . QUOTE ident [ QUOTE DOT ]
## Transitions:
-- On QUOTE shift to state 250
-- On DOT shift to state 1076
## Reductions:

State 1076:
## Known stack suffix:
## typevar_list DOT
## LR(1) items:
poly_type -> typevar_list DOT . core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT EQUAL END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1077
## Reductions:

State 1077:
## Known stack suffix:
## typevar_list DOT core_type
## LR(1) items:
core_type -> core_type . attribute [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT EQUAL END CONSTRAINT ]
poly_type -> typevar_list DOT core_type . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT EQUAL END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT EQUAL END CONSTRAINT
--   reduce production poly_type -> typevar_list DOT core_type

State 1078:
## Known stack suffix:
## METHOD attributes private_virtual_flags label COLON poly_type
## LR(1) items:
class_sig_field -> METHOD attributes private_virtual_flags label COLON poly_type . post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1079
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production post_item_attributes ->

State 1079:
## Known stack suffix:
## METHOD attributes private_virtual_flags label COLON poly_type post_item_attributes
## LR(1) items:
class_sig_field -> METHOD attributes private_virtual_flags label COLON poly_type post_item_attributes . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production class_sig_field -> METHOD attributes private_virtual_flags label COLON poly_type post_item_attributes

State 1080:
## Known stack suffix:
## core_type
## LR(1) items:
core_type -> core_type . attribute [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT EQUAL END CONSTRAINT ]
poly_type -> core_type . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT EQUAL END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT EQUAL END CONSTRAINT
--   reduce production poly_type -> core_type

State 1081:
## Known stack suffix:
## INHERIT
## LR(1) items:
class_sig_field -> INHERIT . attributes class_signature post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1082
-- On attribute shift to state 225
## Reductions:
-- On UIDENT OBJECT LIDENT LBRACKETPERCENT LBRACKET
--   reduce production attributes ->

State 1082:
## Known stack suffix:
## INHERIT attributes
## LR(1) items:
class_sig_field -> INHERIT attributes . class_signature post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On UIDENT shift to state 92
-- On OBJECT shift to state 1040
-- On LIDENT shift to state 1083
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKET shift to state 1084
-- On mod_ext_longident shift to state 1087
-- On extension shift to state 1094
-- On clty_longident shift to state 1095
-- On class_signature shift to state 1096
## Reductions:

State 1083:
## Known stack suffix:
## LIDENT
## LR(1) items:
clty_longident -> LIDENT . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND
--   reduce production clty_longident -> LIDENT

State 1084:
## Known stack suffix:
## LBRACKET
## LR(1) items:
class_signature -> LBRACKET . core_type_comma_list RBRACKET clty_longident [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type_comma_list shift to state 1085
-- On core_type2 shift to state 215
-- On core_type shift to state 1093
## Reductions:

State 1085:
## Known stack suffix:
## LBRACKET core_type_comma_list
## LR(1) items:
class_signature -> LBRACKET core_type_comma_list . RBRACKET clty_longident [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
core_type_comma_list -> core_type_comma_list . COMMA core_type [ RBRACKET COMMA ]
## Transitions:
-- On RBRACKET shift to state 1086
-- On COMMA shift to state 1091
## Reductions:

State 1086:
## Known stack suffix:
## LBRACKET core_type_comma_list RBRACKET
## LR(1) items:
class_signature -> LBRACKET core_type_comma_list RBRACKET . clty_longident [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On UIDENT shift to state 92
-- On LIDENT shift to state 1083
-- On mod_ext_longident shift to state 1087
-- On clty_longident shift to state 1090
## Reductions:

State 1087:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
clty_longident -> mod_ext_longident . DOT LIDENT [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
## Transitions:
-- On LPAREN shift to state 190
-- On DOT shift to state 1088
## Reductions:

State 1088:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
clty_longident -> mod_ext_longident DOT . LIDENT [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
## Transitions:
-- On UIDENT shift to state 194
-- On LIDENT shift to state 1089
## Reductions:

State 1089:
## Known stack suffix:
## mod_ext_longident DOT LIDENT
## LR(1) items:
clty_longident -> mod_ext_longident DOT LIDENT . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND
--   reduce production clty_longident -> mod_ext_longident DOT LIDENT

State 1090:
## Known stack suffix:
## LBRACKET core_type_comma_list RBRACKET clty_longident
## LR(1) items:
class_signature -> LBRACKET core_type_comma_list RBRACKET clty_longident . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND
--   reduce production class_signature -> LBRACKET core_type_comma_list RBRACKET clty_longident

State 1091:
## Known stack suffix:
## core_type_comma_list COMMA
## LR(1) items:
core_type_comma_list -> core_type_comma_list COMMA . core_type [ RPAREN RBRACKET COMMA ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1092
## Reductions:

State 1092:
## Known stack suffix:
## core_type_comma_list COMMA core_type
## LR(1) items:
core_type -> core_type . attribute [ RPAREN RBRACKET LBRACKETAT COMMA ]
core_type_comma_list -> core_type_comma_list COMMA core_type . [ RPAREN RBRACKET COMMA ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On RPAREN RBRACKET COMMA
--   reduce production core_type_comma_list -> core_type_comma_list COMMA core_type

State 1093:
## Known stack suffix:
## core_type
## LR(1) items:
core_type -> core_type . attribute [ RPAREN RBRACKET LBRACKETAT COMMA ]
core_type_comma_list -> core_type . [ RPAREN RBRACKET COMMA ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On RPAREN RBRACKET COMMA
--   reduce production core_type_comma_list -> core_type

State 1094:
## Known stack suffix:
## extension
## LR(1) items:
class_signature -> extension . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production class_signature -> extension

State 1095:
## Known stack suffix:
## clty_longident
## LR(1) items:
class_signature -> clty_longident . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND
--   reduce production class_signature -> clty_longident

State 1096:
## Known stack suffix:
## INHERIT attributes class_signature
## LR(1) items:
class_sig_field -> INHERIT attributes class_signature . post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
class_signature -> class_signature . attribute [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On LBRACKETAT shift to state 58
-- On post_item_attributes shift to state 1097
-- On post_item_attribute shift to state 345
-- On attribute shift to state 1098
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production post_item_attributes ->

State 1097:
## Known stack suffix:
## INHERIT attributes class_signature post_item_attributes
## LR(1) items:
class_sig_field -> INHERIT attributes class_signature post_item_attributes . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production class_sig_field -> INHERIT attributes class_signature post_item_attributes

State 1098:
## Known stack suffix:
## class_signature attribute
## LR(1) items:
class_signature -> class_signature attribute . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND
--   reduce production class_signature -> class_signature attribute

State 1099:
## Known stack suffix:
## CONSTRAINT
## LR(1) items:
class_sig_field -> CONSTRAINT . attributes constrain_field post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1100
-- On attribute shift to state 225
## Reductions:
-- On UNDERSCORE UIDENT SHARP QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET
--   reduce production attributes ->

State 1100:
## Known stack suffix:
## CONSTRAINT attributes
## LR(1) items:
class_sig_field -> CONSTRAINT attributes . constrain_field post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1101
-- On constrain_field shift to state 1104
## Reductions:

State 1101:
## Known stack suffix:
## core_type
## LR(1) items:
constrain_field -> core_type . EQUAL core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On EQUAL shift to state 1102
-- On attribute shift to state 391
## Reductions:

State 1102:
## Known stack suffix:
## core_type EQUAL
## LR(1) items:
constrain_field -> core_type EQUAL . core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1103
## Reductions:

State 1103:
## Known stack suffix:
## core_type EQUAL core_type
## LR(1) items:
constrain_field -> core_type EQUAL core_type . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
core_type -> core_type . attribute [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production constrain_field -> core_type EQUAL core_type

State 1104:
## Known stack suffix:
## CONSTRAINT attributes constrain_field
## LR(1) items:
class_sig_field -> CONSTRAINT attributes constrain_field . post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1105
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production post_item_attributes ->

State 1105:
## Known stack suffix:
## CONSTRAINT attributes constrain_field post_item_attributes
## LR(1) items:
class_sig_field -> CONSTRAINT attributes constrain_field post_item_attributes . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production class_sig_field -> CONSTRAINT attributes constrain_field post_item_attributes

State 1106:
## Known stack suffix:
## item_extension
## LR(1) items:
class_sig_field -> item_extension . post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1107
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production post_item_attributes ->

State 1107:
## Known stack suffix:
## item_extension post_item_attributes
## LR(1) items:
class_sig_field -> item_extension post_item_attributes . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production class_sig_field -> item_extension post_item_attributes

State 1108:
## Known stack suffix:
## floating_attribute
## LR(1) items:
class_sig_field -> floating_attribute . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production class_sig_field -> floating_attribute

State 1109:
## Known stack suffix:
## class_sig_fields class_sig_field
## LR(1) items:
class_sig_fields -> class_sig_fields class_sig_field . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT
--   reduce production class_sig_fields -> class_sig_fields class_sig_field

State 1110:
## Known stack suffix:
## CLASS TYPE ext_attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature
## LR(1) items:
class_signature -> class_signature . attribute [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
class_type_declaration -> CLASS TYPE ext_attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On LBRACKETAT shift to state 58
-- On post_item_attributes shift to state 1111
-- On post_item_attribute shift to state 345
-- On attribute shift to state 1098
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 1111:
## Known stack suffix:
## CLASS TYPE ext_attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes
## LR(1) items:
class_type_declaration -> CLASS TYPE ext_attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_type_declaration -> CLASS TYPE ext_attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes

State 1112:
## Known stack suffix:
## CLASS ext_attributes
## LR(1) items:
class_description -> CLASS ext_attributes . virtual_flag class_type_parameters LIDENT COLON class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On VIRTUAL shift to state 1032
-- On virtual_flag shift to state 1113
## Reductions:
-- On LIDENT LBRACKET
--   reduce production virtual_flag ->

State 1113:
## Known stack suffix:
## CLASS ext_attributes virtual_flag
## LR(1) items:
class_description -> CLASS ext_attributes virtual_flag . class_type_parameters LIDENT COLON class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKET shift to state 1034
-- On class_type_parameters shift to state 1114
## Reductions:
-- On LIDENT
--   reduce production class_type_parameters ->

State 1114:
## Known stack suffix:
## CLASS ext_attributes virtual_flag class_type_parameters
## LR(1) items:
class_description -> CLASS ext_attributes virtual_flag class_type_parameters . LIDENT COLON class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LIDENT shift to state 1115
## Reductions:

State 1115:
## Known stack suffix:
## CLASS ext_attributes virtual_flag class_type_parameters LIDENT
## LR(1) items:
class_description -> CLASS ext_attributes virtual_flag class_type_parameters LIDENT . COLON class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On COLON shift to state 1116
## Reductions:

State 1116:
## Known stack suffix:
## CLASS ext_attributes virtual_flag class_type_parameters LIDENT COLON
## LR(1) items:
class_description -> CLASS ext_attributes virtual_flag class_type_parameters LIDENT COLON . class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 1117
-- On OPTLABEL shift to state 1122
-- On OBJECT shift to state 1040
-- On LPAREN shift to state 109
-- On LIDENT shift to state 1125
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 1129
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 1131
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 1133
-- On extension shift to state 1136
-- On clty_longident shift to state 1095
-- On class_type shift to state 1142
-- On class_signature shift to state 1138
## Reductions:

State 1117:
## Known stack suffix:
## QUESTION
## LR(1) items:
class_type -> QUESTION . LIDENT COLON simple_core_type_or_tuple MINUSGREATER class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On LIDENT shift to state 1118
## Reductions:

State 1118:
## Known stack suffix:
## QUESTION LIDENT
## LR(1) items:
class_type -> QUESTION LIDENT . COLON simple_core_type_or_tuple MINUSGREATER class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On COLON shift to state 1119
## Reductions:

State 1119:
## Known stack suffix:
## QUESTION LIDENT COLON
## LR(1) items:
class_type -> QUESTION LIDENT COLON . simple_core_type_or_tuple MINUSGREATER class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 1120
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 1120:
## Known stack suffix:
## QUESTION LIDENT COLON simple_core_type_or_tuple
## LR(1) items:
class_type -> QUESTION LIDENT COLON simple_core_type_or_tuple . MINUSGREATER class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On MINUSGREATER shift to state 1121
## Reductions:

State 1121:
## Known stack suffix:
## QUESTION LIDENT COLON simple_core_type_or_tuple MINUSGREATER
## LR(1) items:
class_type -> QUESTION LIDENT COLON simple_core_type_or_tuple MINUSGREATER . class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 1117
-- On OPTLABEL shift to state 1122
-- On OBJECT shift to state 1040
-- On LPAREN shift to state 109
-- On LIDENT shift to state 1125
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 1129
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 1131
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 1133
-- On extension shift to state 1136
-- On clty_longident shift to state 1095
-- On class_type shift to state 1141
-- On class_signature shift to state 1138
## Reductions:

State 1122:
## Known stack suffix:
## OPTLABEL
## LR(1) items:
class_type -> OPTLABEL . simple_core_type_or_tuple MINUSGREATER class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 1123
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 1123:
## Known stack suffix:
## OPTLABEL simple_core_type_or_tuple
## LR(1) items:
class_type -> OPTLABEL simple_core_type_or_tuple . MINUSGREATER class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On MINUSGREATER shift to state 1124
## Reductions:

State 1124:
## Known stack suffix:
## OPTLABEL simple_core_type_or_tuple MINUSGREATER
## LR(1) items:
class_type -> OPTLABEL simple_core_type_or_tuple MINUSGREATER . class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 1117
-- On OPTLABEL shift to state 1122
-- On OBJECT shift to state 1040
-- On LPAREN shift to state 109
-- On LIDENT shift to state 1125
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 1129
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 1131
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 1133
-- On extension shift to state 1136
-- On clty_longident shift to state 1095
-- On class_type shift to state 1140
-- On class_signature shift to state 1138
## Reductions:

State 1125:
## Known stack suffix:
## LIDENT
## LR(1) items:
class_type -> LIDENT . COLON simple_core_type_or_tuple MINUSGREATER class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
clty_longident -> LIDENT . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
type_longident -> LIDENT . [ UIDENT STAR SHARP MINUSGREATER LIDENT ]
## Transitions:
-- On COLON shift to state 1126
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND
--   reduce production clty_longident -> LIDENT
-- On UIDENT STAR SHARP MINUSGREATER LIDENT
--   reduce production type_longident -> LIDENT

State 1126:
## Known stack suffix:
## LIDENT COLON
## LR(1) items:
class_type -> LIDENT COLON . simple_core_type_or_tuple MINUSGREATER class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 1127
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 1127:
## Known stack suffix:
## LIDENT COLON simple_core_type_or_tuple
## LR(1) items:
class_type -> LIDENT COLON simple_core_type_or_tuple . MINUSGREATER class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On MINUSGREATER shift to state 1128
## Reductions:

State 1128:
## Known stack suffix:
## LIDENT COLON simple_core_type_or_tuple MINUSGREATER
## LR(1) items:
class_type -> LIDENT COLON simple_core_type_or_tuple MINUSGREATER . class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 1117
-- On OPTLABEL shift to state 1122
-- On OBJECT shift to state 1040
-- On LPAREN shift to state 109
-- On LIDENT shift to state 1125
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 1129
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 1131
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 1133
-- On extension shift to state 1136
-- On clty_longident shift to state 1095
-- On class_type shift to state 1139
-- On class_signature shift to state 1138
## Reductions:

State 1129:
## Known stack suffix:
## LBRACKET
## LR(1) items:
class_signature -> LBRACKET . core_type_comma_list RBRACKET clty_longident [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
simple_core_type2 -> LBRACKET . tag_field RBRACKET [ UIDENT STAR SHARP MINUSGREATER LIDENT ]
simple_core_type2 -> LBRACKET . BAR row_field_list RBRACKET [ UIDENT STAR SHARP MINUSGREATER LIDENT ]
simple_core_type2 -> LBRACKET . row_field BAR row_field_list RBRACKET [ UIDENT STAR SHARP MINUSGREATER LIDENT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On BAR shift to state 180
-- On BACKQUOTE shift to state 181
-- On type_longident shift to state 183
-- On tag_field shift to state 229
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 1130
-- On row_field shift to state 231
-- On name_tag shift to state 202
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type_comma_list shift to state 1085
-- On core_type2 shift to state 215
-- On core_type shift to state 1093
## Reductions:

State 1130:
## Known stack suffix:
## simple_core_type
## LR(1) items:
row_field -> simple_core_type . [ BAR ]
simple_core_type_or_tuple -> simple_core_type . [ RBRACKET MINUSGREATER LBRACKETAT COMMA AS ]
simple_core_type_or_tuple -> simple_core_type . STAR core_type_list [ RBRACKET MINUSGREATER LBRACKETAT COMMA AS ]
## Transitions:
-- On STAR shift to state 208
## Reductions:
-- On BAR
--   reduce production row_field -> simple_core_type
-- On RBRACKET MINUSGREATER LBRACKETAT COMMA AS
--   reduce production simple_core_type_or_tuple -> simple_core_type

State 1131:
## Known stack suffix:
## simple_core_type_or_tuple
## LR(1) items:
class_type -> simple_core_type_or_tuple . MINUSGREATER class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On MINUSGREATER shift to state 1132
## Reductions:

State 1132:
## Known stack suffix:
## simple_core_type_or_tuple MINUSGREATER
## LR(1) items:
class_type -> simple_core_type_or_tuple MINUSGREATER . class_type [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 1117
-- On OPTLABEL shift to state 1122
-- On OBJECT shift to state 1040
-- On LPAREN shift to state 109
-- On LIDENT shift to state 1125
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 1129
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 1131
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 1133
-- On extension shift to state 1136
-- On clty_longident shift to state 1095
-- On class_type shift to state 1137
-- On class_signature shift to state 1138
## Reductions:

State 1133:
## Known stack suffix:
## mod_ext_longident
## LR(1) items:
clty_longident -> mod_ext_longident . DOT LIDENT [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ UIDENT STAR SHARP MINUSGREATER LIDENT ]
## Transitions:
-- On LPAREN shift to state 190
-- On DOT shift to state 1134
## Reductions:

State 1134:
## Known stack suffix:
## mod_ext_longident DOT
## LR(1) items:
clty_longident -> mod_ext_longident DOT . LIDENT [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ UIDENT STAR SHARP MINUSGREATER LIDENT ]
## Transitions:
-- On UIDENT shift to state 194
-- On LIDENT shift to state 1135
## Reductions:

State 1135:
## Known stack suffix:
## mod_ext_longident DOT LIDENT
## LR(1) items:
clty_longident -> mod_ext_longident DOT LIDENT . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
type_longident -> mod_ext_longident DOT LIDENT . [ UIDENT STAR SHARP MINUSGREATER LIDENT ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND
--   reduce production clty_longident -> mod_ext_longident DOT LIDENT
-- On UIDENT STAR SHARP MINUSGREATER LIDENT
--   reduce production type_longident -> mod_ext_longident DOT LIDENT

State 1136:
## Known stack suffix:
## extension
## LR(1) items:
class_signature -> extension . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
simple_core_type2 -> extension . [ UIDENT STAR SHARP MINUSGREATER LIDENT ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND
--   reduce production class_signature -> extension
-- On UIDENT STAR SHARP MINUSGREATER LIDENT
--   reduce production simple_core_type2 -> extension

State 1137:
## Known stack suffix:
## simple_core_type_or_tuple MINUSGREATER class_type
## LR(1) items:
class_type -> simple_core_type_or_tuple MINUSGREATER class_type . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND
--   reduce production class_type -> simple_core_type_or_tuple MINUSGREATER class_type

State 1138:
## Known stack suffix:
## class_signature
## LR(1) items:
class_signature -> class_signature . attribute [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
class_type -> class_signature . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 1098
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND
--   reduce production class_type -> class_signature

State 1139:
## Known stack suffix:
## LIDENT COLON simple_core_type_or_tuple MINUSGREATER class_type
## LR(1) items:
class_type -> LIDENT COLON simple_core_type_or_tuple MINUSGREATER class_type . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND
--   reduce production class_type -> LIDENT COLON simple_core_type_or_tuple MINUSGREATER class_type

State 1140:
## Known stack suffix:
## OPTLABEL simple_core_type_or_tuple MINUSGREATER class_type
## LR(1) items:
class_type -> OPTLABEL simple_core_type_or_tuple MINUSGREATER class_type . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND
--   reduce production class_type -> OPTLABEL simple_core_type_or_tuple MINUSGREATER class_type

State 1141:
## Known stack suffix:
## QUESTION LIDENT COLON simple_core_type_or_tuple MINUSGREATER class_type
## LR(1) items:
class_type -> QUESTION LIDENT COLON simple_core_type_or_tuple MINUSGREATER class_type . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CLASS AND
--   reduce production class_type -> QUESTION LIDENT COLON simple_core_type_or_tuple MINUSGREATER class_type

State 1142:
## Known stack suffix:
## CLASS ext_attributes virtual_flag class_type_parameters LIDENT COLON class_type
## LR(1) items:
class_description -> CLASS ext_attributes virtual_flag class_type_parameters LIDENT COLON class_type . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1143
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 1143:
## Known stack suffix:
## CLASS ext_attributes virtual_flag class_type_parameters LIDENT COLON class_type post_item_attributes
## LR(1) items:
class_description -> CLASS ext_attributes virtual_flag class_type_parameters LIDENT COLON class_type post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_description -> CLASS ext_attributes virtual_flag class_type_parameters LIDENT COLON class_type post_item_attributes

State 1144:
## Known stack suffix:
## value_description
## LR(1) items:
signature_item -> value_description . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> value_description

State 1145:
## Known stack suffix:
## type_declarations
## LR(1) items:
signature_item -> type_declarations . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
type_declarations -> type_declarations . and_type_declaration [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On AND shift to state 1146
-- On and_type_declaration shift to state 1154
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> type_declarations

State 1146:
## Known stack suffix:
## AND
## LR(1) items:
and_type_declaration -> AND . attributes optional_type_parameters LIDENT type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1147
-- On attribute shift to state 225
## Reductions:
-- On UNDERSCORE QUOTE PLUS MINUS LPAREN LIDENT
--   reduce production attributes ->

State 1147:
## Known stack suffix:
## AND attributes
## LR(1) items:
and_type_declaration -> AND attributes . optional_type_parameters LIDENT type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On PLUS shift to state 119
-- On MINUS shift to state 120
-- On LPAREN shift to state 121
-- On type_variance shift to state 122
-- On optional_type_parameters shift to state 1148
-- On optional_type_parameter shift to state 1153
## Reductions:
-- On LIDENT
--   reduce production optional_type_parameters ->
-- On UNDERSCORE QUOTE
--   reduce production type_variance ->

State 1148:
## Known stack suffix:
## AND attributes optional_type_parameters
## LR(1) items:
and_type_declaration -> AND attributes optional_type_parameters . LIDENT type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LIDENT shift to state 1149
## Reductions:

State 1149:
## Known stack suffix:
## AND attributes optional_type_parameters LIDENT
## LR(1) items:
and_type_declaration -> AND attributes optional_type_parameters LIDENT . type_kind constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On EQUAL shift to state 134
-- On type_kind shift to state 1150
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production type_kind ->

State 1150:
## Known stack suffix:
## AND attributes optional_type_parameters LIDENT type_kind
## LR(1) items:
and_type_declaration -> AND attributes optional_type_parameters LIDENT type_kind . constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On constraints shift to state 1151
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production constraints ->

State 1151:
## Known stack suffix:
## AND attributes optional_type_parameters LIDENT type_kind constraints
## LR(1) items:
and_type_declaration -> AND attributes optional_type_parameters LIDENT type_kind constraints . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
constraints -> constraints . CONSTRAINT constrain [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On CONSTRAINT shift to state 386
-- On post_item_attributes shift to state 1152
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 1152:
## Known stack suffix:
## AND attributes optional_type_parameters LIDENT type_kind constraints post_item_attributes
## LR(1) items:
and_type_declaration -> AND attributes optional_type_parameters LIDENT type_kind constraints post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production and_type_declaration -> AND attributes optional_type_parameters LIDENT type_kind constraints post_item_attributes

State 1153:
## Known stack suffix:
## optional_type_parameter
## LR(1) items:
optional_type_parameters -> optional_type_parameter . [ UIDENT LIDENT ]
## Transitions:
## Reductions:
-- On UIDENT LIDENT
--   reduce production optional_type_parameters -> optional_type_parameter

State 1154:
## Known stack suffix:
## type_declarations and_type_declaration
## LR(1) items:
type_declarations -> type_declarations and_type_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production type_declarations -> type_declarations and_type_declaration

State 1155:
## Known stack suffix:
## type_declaration
## LR(1) items:
type_declarations -> type_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production type_declarations -> type_declaration

State 1156:
## Known stack suffix:
## signature_item
## LR(1) items:
signature -> signature_item . signature [ RBRACKET EOF END ]
## Transitions:
-- On VAL shift to state 60
-- On TYPE shift to state 115
-- On SEMISEMI shift to state 998
-- On OPEN shift to state 339
-- On MODULE shift to state 999
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETATATAT shift to state 971
-- On INCLUDE shift to state 1022
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 1026
-- On CLASS shift to state 1029
-- On value_description shift to state 1144
-- On type_declarations shift to state 1145
-- On type_declaration shift to state 1155
-- On signature_item shift to state 1156
-- On signature shift to state 1157
-- On sig_type_extension shift to state 1158
-- On sig_include_statement shift to state 1159
-- On sig_exception_declaration shift to state 1160
-- On rec_module_declarations shift to state 1161
-- On rec_module_declaration shift to state 1169
-- On primitive_declaration shift to state 1170
-- On open_statement shift to state 1171
-- On module_type_declaration shift to state 1172
-- On module_declaration shift to state 1173
-- On module_alias shift to state 1174
-- On item_extension shift to state 1175
-- On floating_attribute shift to state 1177
-- On class_type_declarations shift to state 1178
-- On class_type_declaration shift to state 1188
-- On class_descriptions shift to state 1189
-- On class_description shift to state 1199
## Reductions:
-- On RBRACKET EOF END
--   reduce production signature ->

State 1157:
## Known stack suffix:
## signature_item signature
## LR(1) items:
signature -> signature_item signature . [ RBRACKET EOF END ]
## Transitions:
## Reductions:
-- On RBRACKET EOF END
--   reduce production signature -> signature_item signature

State 1158:
## Known stack suffix:
## sig_type_extension
## LR(1) items:
signature_item -> sig_type_extension . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> sig_type_extension

State 1159:
## Known stack suffix:
## sig_include_statement
## LR(1) items:
signature_item -> sig_include_statement . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> sig_include_statement

State 1160:
## Known stack suffix:
## sig_exception_declaration
## LR(1) items:
signature_item -> sig_exception_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> sig_exception_declaration

State 1161:
## Known stack suffix:
## rec_module_declarations
## LR(1) items:
rec_module_declarations -> rec_module_declarations . and_module_declaration [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
signature_item -> rec_module_declarations . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On AND shift to state 1162
-- On and_module_declaration shift to state 1168
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> rec_module_declarations

State 1162:
## Known stack suffix:
## AND
## LR(1) items:
and_module_declaration -> AND . attributes UIDENT COLON module_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1163
-- On attribute shift to state 225
## Reductions:
-- On UIDENT
--   reduce production attributes ->

State 1163:
## Known stack suffix:
## AND attributes
## LR(1) items:
and_module_declaration -> AND attributes . UIDENT COLON module_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 1164
## Reductions:

State 1164:
## Known stack suffix:
## AND attributes UIDENT
## LR(1) items:
and_module_declaration -> AND attributes UIDENT . COLON module_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On COLON shift to state 1165
## Reductions:

State 1165:
## Known stack suffix:
## AND attributes UIDENT COLON
## LR(1) items:
and_module_declaration -> AND attributes UIDENT COLON . module_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 112
-- On SIG shift to state 113
-- On MODULE shift to state 321
-- On LPAREN shift to state 352
-- On LIDENT shift to state 103
-- On LBRACKETPERCENT shift to state 152
-- On FUNCTOR shift to state 353
-- On mty_longident shift to state 361
-- On module_type shift to state 1166
-- On mod_ext_longident shift to state 412
-- On ident shift to state 416
-- On extension shift to state 417
## Reductions:

State 1166:
## Known stack suffix:
## AND attributes UIDENT COLON module_type
## LR(1) items:
and_module_declaration -> AND attributes UIDENT COLON module_type . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On WITH shift to state 363
-- On MINUSGREATER shift to state 409
-- On LBRACKETATAT shift to state 285
-- On LBRACKETAT shift to state 58
-- On post_item_attributes shift to state 1167
-- On post_item_attribute shift to state 345
-- On attribute shift to state 411
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 1167:
## Known stack suffix:
## AND attributes UIDENT COLON module_type post_item_attributes
## LR(1) items:
and_module_declaration -> AND attributes UIDENT COLON module_type post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production and_module_declaration -> AND attributes UIDENT COLON module_type post_item_attributes

State 1168:
## Known stack suffix:
## rec_module_declarations and_module_declaration
## LR(1) items:
rec_module_declarations -> rec_module_declarations and_module_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production rec_module_declarations -> rec_module_declarations and_module_declaration

State 1169:
## Known stack suffix:
## rec_module_declaration
## LR(1) items:
rec_module_declarations -> rec_module_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production rec_module_declarations -> rec_module_declaration

State 1170:
## Known stack suffix:
## primitive_declaration
## LR(1) items:
signature_item -> primitive_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> primitive_declaration

State 1171:
## Known stack suffix:
## open_statement
## LR(1) items:
signature_item -> open_statement . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> open_statement

State 1172:
## Known stack suffix:
## module_type_declaration
## LR(1) items:
signature_item -> module_type_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> module_type_declaration

State 1173:
## Known stack suffix:
## module_declaration
## LR(1) items:
signature_item -> module_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> module_declaration

State 1174:
## Known stack suffix:
## module_alias
## LR(1) items:
signature_item -> module_alias . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> module_alias

State 1175:
## Known stack suffix:
## item_extension
## LR(1) items:
signature_item -> item_extension . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1176
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 1176:
## Known stack suffix:
## item_extension post_item_attributes
## LR(1) items:
signature_item -> item_extension post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> item_extension post_item_attributes

State 1177:
## Known stack suffix:
## floating_attribute
## LR(1) items:
signature_item -> floating_attribute . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> floating_attribute

State 1178:
## Known stack suffix:
## class_type_declarations
## LR(1) items:
class_type_declarations -> class_type_declarations . and_class_type_declaration [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
signature_item -> class_type_declarations . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On AND shift to state 1179
-- On and_class_type_declaration shift to state 1187
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> class_type_declarations

State 1179:
## Known stack suffix:
## AND
## LR(1) items:
and_class_type_declaration -> AND . attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1180
-- On attribute shift to state 225
## Reductions:
-- On VIRTUAL LIDENT LBRACKET
--   reduce production attributes ->

State 1180:
## Known stack suffix:
## AND attributes
## LR(1) items:
and_class_type_declaration -> AND attributes . virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On VIRTUAL shift to state 1032
-- On virtual_flag shift to state 1181
## Reductions:
-- On LIDENT LBRACKET
--   reduce production virtual_flag ->

State 1181:
## Known stack suffix:
## AND attributes virtual_flag
## LR(1) items:
and_class_type_declaration -> AND attributes virtual_flag . class_type_parameters LIDENT EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKET shift to state 1034
-- On class_type_parameters shift to state 1182
## Reductions:
-- On LIDENT
--   reduce production class_type_parameters ->

State 1182:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters
## LR(1) items:
and_class_type_declaration -> AND attributes virtual_flag class_type_parameters . LIDENT EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LIDENT shift to state 1183
## Reductions:

State 1183:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters LIDENT
## LR(1) items:
and_class_type_declaration -> AND attributes virtual_flag class_type_parameters LIDENT . EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On EQUAL shift to state 1184
## Reductions:

State 1184:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters LIDENT EQUAL
## LR(1) items:
and_class_type_declaration -> AND attributes virtual_flag class_type_parameters LIDENT EQUAL . class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 92
-- On OBJECT shift to state 1040
-- On LIDENT shift to state 1083
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKET shift to state 1084
-- On mod_ext_longident shift to state 1087
-- On extension shift to state 1094
-- On clty_longident shift to state 1095
-- On class_signature shift to state 1185
## Reductions:

State 1185:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature
## LR(1) items:
and_class_type_declaration -> AND attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
class_signature -> class_signature . attribute [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On LBRACKETAT shift to state 58
-- On post_item_attributes shift to state 1186
-- On post_item_attribute shift to state 345
-- On attribute shift to state 1098
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 1186:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes
## LR(1) items:
and_class_type_declaration -> AND attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production and_class_type_declaration -> AND attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes

State 1187:
## Known stack suffix:
## class_type_declarations and_class_type_declaration
## LR(1) items:
class_type_declarations -> class_type_declarations and_class_type_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_type_declarations -> class_type_declarations and_class_type_declaration

State 1188:
## Known stack suffix:
## class_type_declaration
## LR(1) items:
class_type_declarations -> class_type_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_type_declarations -> class_type_declaration

State 1189:
## Known stack suffix:
## class_descriptions
## LR(1) items:
class_descriptions -> class_descriptions . and_class_description [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
signature_item -> class_descriptions . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On AND shift to state 1190
-- On and_class_description shift to state 1198
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production signature_item -> class_descriptions

State 1190:
## Known stack suffix:
## AND
## LR(1) items:
and_class_description -> AND . attributes virtual_flag class_type_parameters LIDENT COLON class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1191
-- On attribute shift to state 225
## Reductions:
-- On VIRTUAL LIDENT LBRACKET
--   reduce production attributes ->

State 1191:
## Known stack suffix:
## AND attributes
## LR(1) items:
and_class_description -> AND attributes . virtual_flag class_type_parameters LIDENT COLON class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On VIRTUAL shift to state 1032
-- On virtual_flag shift to state 1192
## Reductions:
-- On LIDENT LBRACKET
--   reduce production virtual_flag ->

State 1192:
## Known stack suffix:
## AND attributes virtual_flag
## LR(1) items:
and_class_description -> AND attributes virtual_flag . class_type_parameters LIDENT COLON class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKET shift to state 1034
-- On class_type_parameters shift to state 1193
## Reductions:
-- On LIDENT
--   reduce production class_type_parameters ->

State 1193:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters
## LR(1) items:
and_class_description -> AND attributes virtual_flag class_type_parameters . LIDENT COLON class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LIDENT shift to state 1194
## Reductions:

State 1194:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters LIDENT
## LR(1) items:
and_class_description -> AND attributes virtual_flag class_type_parameters LIDENT . COLON class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On COLON shift to state 1195
## Reductions:

State 1195:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters LIDENT COLON
## LR(1) items:
and_class_description -> AND attributes virtual_flag class_type_parameters LIDENT COLON . class_type post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 1117
-- On OPTLABEL shift to state 1122
-- On OBJECT shift to state 1040
-- On LPAREN shift to state 109
-- On LIDENT shift to state 1125
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 1129
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 1131
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 1133
-- On extension shift to state 1136
-- On clty_longident shift to state 1095
-- On class_type shift to state 1196
-- On class_signature shift to state 1138
## Reductions:

State 1196:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters LIDENT COLON class_type
## LR(1) items:
and_class_description -> AND attributes virtual_flag class_type_parameters LIDENT COLON class_type . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1197
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 1197:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters LIDENT COLON class_type post_item_attributes
## LR(1) items:
and_class_description -> AND attributes virtual_flag class_type_parameters LIDENT COLON class_type post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production and_class_description -> AND attributes virtual_flag class_type_parameters LIDENT COLON class_type post_item_attributes

State 1198:
## Known stack suffix:
## class_descriptions and_class_description
## LR(1) items:
class_descriptions -> class_descriptions and_class_description . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_descriptions -> class_descriptions and_class_description

State 1199:
## Known stack suffix:
## class_description
## LR(1) items:
class_descriptions -> class_description . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_descriptions -> class_description

State 1200:
## Known stack suffix:
## SEMISEMI signature
## LR(1) items:
signature -> SEMISEMI signature . [ RBRACKET EOF END ]
## Transitions:
## Reductions:
-- On RBRACKET EOF END
--   reduce production signature -> SEMISEMI signature

State 1201:
## Known stack suffix:
## COLON signature
## LR(1) items:
payload -> COLON signature . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production payload -> COLON signature

State 1202:
## Known stack suffix:
## COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ RBRACKET LBRACKETAT ]
payload -> COLON core_type . [ RBRACKET ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On RBRACKET
--   reduce production payload -> COLON core_type

State 1203:
## Known stack suffix:
## CLASS
## LR(1) items:
class_declaration -> CLASS . ext_attributes virtual_flag class_type_parameters LIDENT class_fun_binding post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
class_type_declaration -> CLASS . TYPE ext_attributes virtual_flag class_type_parameters LIDENT EQUAL class_signature post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On TYPE shift to state 1030
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 1204
-- On attribute shift to state 295
## Reductions:
-- On VIRTUAL LIDENT LBRACKET
--   reduce production ext_attributes ->

State 1204:
## Known stack suffix:
## CLASS ext_attributes
## LR(1) items:
class_declaration -> CLASS ext_attributes . virtual_flag class_type_parameters LIDENT class_fun_binding post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On VIRTUAL shift to state 1032
-- On virtual_flag shift to state 1205
## Reductions:
-- On LIDENT LBRACKET
--   reduce production virtual_flag ->

State 1205:
## Known stack suffix:
## CLASS ext_attributes virtual_flag
## LR(1) items:
class_declaration -> CLASS ext_attributes virtual_flag . class_type_parameters LIDENT class_fun_binding post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKET shift to state 1034
-- On class_type_parameters shift to state 1206
## Reductions:
-- On LIDENT
--   reduce production class_type_parameters ->

State 1206:
## Known stack suffix:
## CLASS ext_attributes virtual_flag class_type_parameters
## LR(1) items:
class_declaration -> CLASS ext_attributes virtual_flag class_type_parameters . LIDENT class_fun_binding post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LIDENT shift to state 1207
## Reductions:

State 1207:
## Known stack suffix:
## CLASS ext_attributes virtual_flag class_type_parameters LIDENT
## LR(1) items:
class_declaration -> CLASS ext_attributes virtual_flag class_type_parameters LIDENT . class_fun_binding post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUS shift to state 311
-- On LPAREN shift to state 527
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EQUAL shift to state 1208
-- On COLON shift to state 1312
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 1316
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
-- On class_fun_binding shift to state 1318
## Reductions:

State 1208:
## Known stack suffix:
## EQUAL
## LR(1) items:
class_fun_binding -> EQUAL . class_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On OBJECT shift to state 1209
-- On LPAREN shift to state 1272
-- On LIDENT shift to state 95
-- On LET shift to state 1273
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKET shift to state 1274
-- On FUN shift to state 1278
-- On mod_longident shift to state 96
-- On let_bindings shift to state 1282
-- On let_binding shift to state 640
-- On extension shift to state 1284
-- On class_simple_expr shift to state 1285
-- On class_longident shift to state 1287
-- On class_expr shift to state 1311
## Reductions:

State 1209:
## Known stack suffix:
## OBJECT
## LR(1) items:
class_simple_expr -> OBJECT . attributes class_structure END [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1210
-- On attribute shift to state 225
## Reductions:
-- On VAL METHOD LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production attributes ->

State 1210:
## Known stack suffix:
## OBJECT attributes
## LR(1) items:
class_simple_expr -> OBJECT attributes . class_structure END [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
-- On LPAREN shift to state 304
-- On class_structure shift to state 1211
-- On class_self_pattern shift to state 1213
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_self_pattern ->

State 1211:
## Known stack suffix:
## OBJECT attributes class_structure
## LR(1) items:
class_simple_expr -> OBJECT attributes class_structure . END [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
-- On END shift to state 1212
## Reductions:

State 1212:
## Known stack suffix:
## OBJECT attributes class_structure END
## LR(1) items:
class_simple_expr -> OBJECT attributes class_structure END . [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
## Reductions:
-- On VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND
--   reduce production class_simple_expr -> OBJECT attributes class_structure END

State 1213:
## Known stack suffix:
## class_self_pattern
## LR(1) items:
class_structure -> class_self_pattern . class_fields [ END ]
## Transitions:
-- On class_fields shift to state 1214
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_fields ->

State 1214:
## Known stack suffix:
## class_self_pattern class_fields
## LR(1) items:
class_fields -> class_fields . class_field [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
class_structure -> class_self_pattern class_fields . [ END ]
## Transitions:
-- On VAL shift to state 1215
-- On METHOD shift to state 1237
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETATATAT shift to state 971
-- On INITIALIZER shift to state 1265
-- On INHERIT shift to state 1269
-- On CONSTRAINT shift to state 1303
-- On item_extension shift to state 1307
-- On floating_attribute shift to state 1309
-- On class_field shift to state 1310
## Reductions:
-- On END
--   reduce production class_structure -> class_self_pattern class_fields

State 1215:
## Known stack suffix:
## VAL
## LR(1) items:
class_field -> VAL . value post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On BANG shift to state 340
-- On value shift to state 1216
-- On override_flag shift to state 1218
## Reductions:
-- On VIRTUAL MUTABLE LIDENT LBRACKETAT
--   reduce production override_flag ->

State 1216:
## Known stack suffix:
## VAL value
## LR(1) items:
class_field -> VAL value . post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1217
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production post_item_attributes ->

State 1217:
## Known stack suffix:
## VAL value post_item_attributes
## LR(1) items:
class_field -> VAL value post_item_attributes . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_field -> VAL value post_item_attributes

State 1218:
## Known stack suffix:
## override_flag
## LR(1) items:
value -> override_flag . attributes MUTABLE VIRTUAL label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
value -> override_flag . attributes VIRTUAL mutable_flag label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
value -> override_flag . attributes mutable_flag label EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
value -> override_flag . attributes mutable_flag label type_constraint EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1219
-- On attribute shift to state 225
## Reductions:
-- On VIRTUAL MUTABLE LIDENT
--   reduce production attributes ->

State 1219:
## Known stack suffix:
## override_flag attributes
## LR(1) items:
value -> override_flag attributes . MUTABLE VIRTUAL label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
value -> override_flag attributes . VIRTUAL mutable_flag label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
value -> override_flag attributes . mutable_flag label EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
value -> override_flag attributes . mutable_flag label type_constraint EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On VIRTUAL shift to state 1220
-- On MUTABLE shift to state 1225
-- On mutable_flag shift to state 1230
## Reductions:
-- On LIDENT
--   reduce production mutable_flag ->

State 1220:
## Known stack suffix:
## override_flag attributes VIRTUAL
## LR(1) items:
value -> override_flag attributes VIRTUAL . mutable_flag label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On MUTABLE shift to state 245
-- On mutable_flag shift to state 1221
## Reductions:
-- On LIDENT
--   reduce production mutable_flag ->

State 1221:
## Known stack suffix:
## override_flag attributes VIRTUAL mutable_flag
## LR(1) items:
value -> override_flag attributes VIRTUAL mutable_flag . label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 1222
## Reductions:

State 1222:
## Known stack suffix:
## override_flag attributes VIRTUAL mutable_flag label
## LR(1) items:
value -> override_flag attributes VIRTUAL mutable_flag label . COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On COLON shift to state 1223
## Reductions:

State 1223:
## Known stack suffix:
## override_flag attributes VIRTUAL mutable_flag label COLON
## LR(1) items:
value -> override_flag attributes VIRTUAL mutable_flag label COLON . core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1224
## Reductions:

State 1224:
## Known stack suffix:
## override_flag attributes VIRTUAL mutable_flag label COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT ]
value -> override_flag attributes VIRTUAL mutable_flag label COLON core_type . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production value -> override_flag attributes VIRTUAL mutable_flag label COLON core_type

State 1225:
## Known stack suffix:
## override_flag attributes MUTABLE
## LR(1) items:
mutable_flag -> MUTABLE . [ LIDENT ]
value -> override_flag attributes MUTABLE . VIRTUAL label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On VIRTUAL shift to state 1226
## Reductions:
-- On LIDENT
--   reduce production mutable_flag -> MUTABLE

State 1226:
## Known stack suffix:
## override_flag attributes MUTABLE VIRTUAL
## LR(1) items:
value -> override_flag attributes MUTABLE VIRTUAL . label COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 1227
## Reductions:

State 1227:
## Known stack suffix:
## override_flag attributes MUTABLE VIRTUAL label
## LR(1) items:
value -> override_flag attributes MUTABLE VIRTUAL label . COLON core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On COLON shift to state 1228
## Reductions:

State 1228:
## Known stack suffix:
## override_flag attributes MUTABLE VIRTUAL label COLON
## LR(1) items:
value -> override_flag attributes MUTABLE VIRTUAL label COLON . core_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1229
## Reductions:

State 1229:
## Known stack suffix:
## override_flag attributes MUTABLE VIRTUAL label COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT ]
value -> override_flag attributes MUTABLE VIRTUAL label COLON core_type . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production value -> override_flag attributes MUTABLE VIRTUAL label COLON core_type

State 1230:
## Known stack suffix:
## override_flag attributes mutable_flag
## LR(1) items:
value -> override_flag attributes mutable_flag . label EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
value -> override_flag attributes mutable_flag . label type_constraint EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 1231
## Reductions:

State 1231:
## Known stack suffix:
## override_flag attributes mutable_flag label
## LR(1) items:
value -> override_flag attributes mutable_flag label . EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
value -> override_flag attributes mutable_flag label . type_constraint EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On EQUAL shift to state 1232
-- On COLONGREATER shift to state 726
-- On COLON shift to state 728
-- On type_constraint shift to state 1234
## Reductions:

State 1232:
## Known stack suffix:
## override_flag attributes mutable_flag label EQUAL
## LR(1) items:
value -> override_flag attributes mutable_flag label EQUAL . seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 1233
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 1233:
## Known stack suffix:
## override_flag attributes mutable_flag label EQUAL seq_expr
## LR(1) items:
value -> override_flag attributes mutable_flag label EQUAL seq_expr . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production value -> override_flag attributes mutable_flag label EQUAL seq_expr

State 1234:
## Known stack suffix:
## override_flag attributes mutable_flag label type_constraint
## LR(1) items:
value -> override_flag attributes mutable_flag label type_constraint . EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On EQUAL shift to state 1235
## Reductions:

State 1235:
## Known stack suffix:
## override_flag attributes mutable_flag label type_constraint EQUAL
## LR(1) items:
value -> override_flag attributes mutable_flag label type_constraint EQUAL . seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 1236
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 1236:
## Known stack suffix:
## override_flag attributes mutable_flag label type_constraint EQUAL seq_expr
## LR(1) items:
value -> override_flag attributes mutable_flag label type_constraint EQUAL seq_expr . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production value -> override_flag attributes mutable_flag label type_constraint EQUAL seq_expr

State 1237:
## Known stack suffix:
## METHOD
## LR(1) items:
class_field -> METHOD . method_ post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On BANG shift to state 340
-- On override_flag shift to state 1238
-- On method_ shift to state 1263
## Reductions:
-- On VIRTUAL PRIVATE LIDENT LBRACKETAT
--   reduce production override_flag ->

State 1238:
## Known stack suffix:
## override_flag
## LR(1) items:
method_ -> override_flag . attributes PRIVATE VIRTUAL label COLON poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag . attributes VIRTUAL private_flag label COLON poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag . attributes private_flag label strict_binding [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag . attributes private_flag label COLON poly_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag . attributes private_flag label COLON TYPE lident_list DOT core_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1239
-- On attribute shift to state 225
## Reductions:
-- On VIRTUAL PRIVATE LIDENT
--   reduce production attributes ->

State 1239:
## Known stack suffix:
## override_flag attributes
## LR(1) items:
method_ -> override_flag attributes . PRIVATE VIRTUAL label COLON poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag attributes . VIRTUAL private_flag label COLON poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag attributes . private_flag label strict_binding [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag attributes . private_flag label COLON poly_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag attributes . private_flag label COLON TYPE lident_list DOT core_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On VIRTUAL shift to state 1240
-- On PRIVATE shift to state 1245
-- On private_flag shift to state 1250
## Reductions:
-- On LIDENT
--   reduce production private_flag ->

State 1240:
## Known stack suffix:
## override_flag attributes VIRTUAL
## LR(1) items:
method_ -> override_flag attributes VIRTUAL . private_flag label COLON poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On PRIVATE shift to state 160
-- On private_flag shift to state 1241
## Reductions:
-- On LIDENT
--   reduce production private_flag ->

State 1241:
## Known stack suffix:
## override_flag attributes VIRTUAL private_flag
## LR(1) items:
method_ -> override_flag attributes VIRTUAL private_flag . label COLON poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 1242
## Reductions:

State 1242:
## Known stack suffix:
## override_flag attributes VIRTUAL private_flag label
## LR(1) items:
method_ -> override_flag attributes VIRTUAL private_flag label . COLON poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On COLON shift to state 1243
## Reductions:

State 1243:
## Known stack suffix:
## override_flag attributes VIRTUAL private_flag label COLON
## LR(1) items:
method_ -> override_flag attributes VIRTUAL private_flag label COLON . poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 150
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On typevar_list shift to state 1075
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On poly_type shift to state 1244
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1080
## Reductions:

State 1244:
## Known stack suffix:
## override_flag attributes VIRTUAL private_flag label COLON poly_type
## LR(1) items:
method_ -> override_flag attributes VIRTUAL private_flag label COLON poly_type . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production method_ -> override_flag attributes VIRTUAL private_flag label COLON poly_type

State 1245:
## Known stack suffix:
## override_flag attributes PRIVATE
## LR(1) items:
method_ -> override_flag attributes PRIVATE . VIRTUAL label COLON poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
private_flag -> PRIVATE . [ LIDENT ]
## Transitions:
-- On VIRTUAL shift to state 1246
## Reductions:
-- On LIDENT
--   reduce production private_flag -> PRIVATE

State 1246:
## Known stack suffix:
## override_flag attributes PRIVATE VIRTUAL
## LR(1) items:
method_ -> override_flag attributes PRIVATE VIRTUAL . label COLON poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 1247
## Reductions:

State 1247:
## Known stack suffix:
## override_flag attributes PRIVATE VIRTUAL label
## LR(1) items:
method_ -> override_flag attributes PRIVATE VIRTUAL label . COLON poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On COLON shift to state 1248
## Reductions:

State 1248:
## Known stack suffix:
## override_flag attributes PRIVATE VIRTUAL label COLON
## LR(1) items:
method_ -> override_flag attributes PRIVATE VIRTUAL label COLON . poly_type [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 150
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On typevar_list shift to state 1075
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On poly_type shift to state 1249
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1080
## Reductions:

State 1249:
## Known stack suffix:
## override_flag attributes PRIVATE VIRTUAL label COLON poly_type
## LR(1) items:
method_ -> override_flag attributes PRIVATE VIRTUAL label COLON poly_type . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production method_ -> override_flag attributes PRIVATE VIRTUAL label COLON poly_type

State 1250:
## Known stack suffix:
## override_flag attributes private_flag
## LR(1) items:
method_ -> override_flag attributes private_flag . label strict_binding [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag attributes private_flag . label COLON poly_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag attributes private_flag . label COLON TYPE lident_list DOT core_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LIDENT shift to state 143
-- On label shift to state 1251
## Reductions:

State 1251:
## Known stack suffix:
## override_flag attributes private_flag label
## LR(1) items:
method_ -> override_flag attributes private_flag label . strict_binding [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag attributes private_flag label . COLON poly_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag attributes private_flag label . COLON TYPE lident_list DOT core_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUS shift to state 311
-- On LPAREN shift to state 716
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EQUAL shift to state 724
-- On COLON shift to state 1252
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On strict_binding shift to state 1262
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 737
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
## Reductions:

State 1252:
## Known stack suffix:
## override_flag attributes private_flag label COLON
## LR(1) items:
method_ -> override_flag attributes private_flag label COLON . poly_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
method_ -> override_flag attributes private_flag label COLON . TYPE lident_list DOT core_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On TYPE shift to state 1253
-- On SHARP shift to state 93
-- On QUOTE shift to state 150
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On typevar_list shift to state 1075
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On poly_type shift to state 1259
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1080
## Reductions:

State 1253:
## Known stack suffix:
## override_flag attributes private_flag label COLON TYPE
## LR(1) items:
method_ -> override_flag attributes private_flag label COLON TYPE . lident_list DOT core_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LIDENT shift to state 718
-- On lident_list shift to state 1254
## Reductions:

State 1254:
## Known stack suffix:
## override_flag attributes private_flag label COLON TYPE lident_list
## LR(1) items:
method_ -> override_flag attributes private_flag label COLON TYPE lident_list . DOT core_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On DOT shift to state 1255
## Reductions:

State 1255:
## Known stack suffix:
## override_flag attributes private_flag label COLON TYPE lident_list DOT
## LR(1) items:
method_ -> override_flag attributes private_flag label COLON TYPE lident_list DOT . core_type EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1256
## Reductions:

State 1256:
## Known stack suffix:
## override_flag attributes private_flag label COLON TYPE lident_list DOT core_type
## LR(1) items:
core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
method_ -> override_flag attributes private_flag label COLON TYPE lident_list DOT core_type . EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On EQUAL shift to state 1257
-- On attribute shift to state 391
## Reductions:

State 1257:
## Known stack suffix:
## override_flag attributes private_flag label COLON TYPE lident_list DOT core_type EQUAL
## LR(1) items:
method_ -> override_flag attributes private_flag label COLON TYPE lident_list DOT core_type EQUAL . seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 1258
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 1258:
## Known stack suffix:
## override_flag attributes private_flag label COLON TYPE lident_list DOT core_type EQUAL seq_expr
## LR(1) items:
method_ -> override_flag attributes private_flag label COLON TYPE lident_list DOT core_type EQUAL seq_expr . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production method_ -> override_flag attributes private_flag label COLON TYPE lident_list DOT core_type EQUAL seq_expr

State 1259:
## Known stack suffix:
## override_flag attributes private_flag label COLON poly_type
## LR(1) items:
method_ -> override_flag attributes private_flag label COLON poly_type . EQUAL seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On EQUAL shift to state 1260
## Reductions:

State 1260:
## Known stack suffix:
## override_flag attributes private_flag label COLON poly_type EQUAL
## LR(1) items:
method_ -> override_flag attributes private_flag label COLON poly_type EQUAL . seq_expr [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 1261
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 1261:
## Known stack suffix:
## override_flag attributes private_flag label COLON poly_type EQUAL seq_expr
## LR(1) items:
method_ -> override_flag attributes private_flag label COLON poly_type EQUAL seq_expr . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production method_ -> override_flag attributes private_flag label COLON poly_type EQUAL seq_expr

State 1262:
## Known stack suffix:
## override_flag attributes private_flag label strict_binding
## LR(1) items:
method_ -> override_flag attributes private_flag label strict_binding . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production method_ -> override_flag attributes private_flag label strict_binding

State 1263:
## Known stack suffix:
## METHOD method_
## LR(1) items:
class_field -> METHOD method_ . post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1264
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production post_item_attributes ->

State 1264:
## Known stack suffix:
## METHOD method_ post_item_attributes
## LR(1) items:
class_field -> METHOD method_ post_item_attributes . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_field -> METHOD method_ post_item_attributes

State 1265:
## Known stack suffix:
## INITIALIZER
## LR(1) items:
class_field -> INITIALIZER . attributes seq_expr post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1266
-- On attribute shift to state 225
## Reductions:
-- On WHILE UIDENT TRY TRUE STRING QUESTIONQUESTION PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT
--   reduce production attributes ->

State 1266:
## Known stack suffix:
## INITIALIZER attributes
## LR(1) items:
class_field -> INITIALIZER attributes . seq_expr post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 1267
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 1267:
## Known stack suffix:
## INITIALIZER attributes seq_expr
## LR(1) items:
class_field -> INITIALIZER attributes seq_expr . post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1268
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production post_item_attributes ->

State 1268:
## Known stack suffix:
## INITIALIZER attributes seq_expr post_item_attributes
## LR(1) items:
class_field -> INITIALIZER attributes seq_expr post_item_attributes . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_field -> INITIALIZER attributes seq_expr post_item_attributes

State 1269:
## Known stack suffix:
## INHERIT
## LR(1) items:
class_field -> INHERIT . override_flag attributes class_expr parent_binder post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On BANG shift to state 340
-- On override_flag shift to state 1270
## Reductions:
-- On UIDENT OBJECT LPAREN LIDENT LET LBRACKETPERCENT LBRACKETAT LBRACKET FUN
--   reduce production override_flag ->

State 1270:
## Known stack suffix:
## INHERIT override_flag
## LR(1) items:
class_field -> INHERIT override_flag . attributes class_expr parent_binder post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1271
-- On attribute shift to state 225
## Reductions:
-- On UIDENT OBJECT LPAREN LIDENT LET LBRACKETPERCENT LBRACKET FUN
--   reduce production attributes ->

State 1271:
## Known stack suffix:
## INHERIT override_flag attributes
## LR(1) items:
class_field -> INHERIT override_flag attributes . class_expr parent_binder post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UIDENT shift to state 94
-- On OBJECT shift to state 1209
-- On LPAREN shift to state 1272
-- On LIDENT shift to state 95
-- On LET shift to state 1273
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKET shift to state 1274
-- On FUN shift to state 1278
-- On mod_longident shift to state 96
-- On let_bindings shift to state 1282
-- On let_binding shift to state 640
-- On extension shift to state 1284
-- On class_simple_expr shift to state 1285
-- On class_longident shift to state 1287
-- On class_expr shift to state 1298
## Reductions:

State 1272:
## Known stack suffix:
## LPAREN
## LR(1) items:
class_simple_expr -> LPAREN . class_expr COLON class_type RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
class_simple_expr -> LPAREN . class_expr RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On OBJECT shift to state 1209
-- On LPAREN shift to state 1272
-- On LIDENT shift to state 95
-- On LET shift to state 1273
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKET shift to state 1274
-- On FUN shift to state 1278
-- On mod_longident shift to state 96
-- On let_bindings shift to state 1282
-- On let_binding shift to state 640
-- On extension shift to state 1284
-- On class_simple_expr shift to state 1285
-- On class_longident shift to state 1287
-- On class_expr shift to state 1293
## Reductions:

State 1273:
## Known stack suffix:
## LET
## LR(1) items:
let_binding -> LET . ext_attributes rec_flag let_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On PERCENT shift to state 2
-- On LBRACKETAT shift to state 58
-- On ext_attributes shift to state 927
-- On attribute shift to state 295
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP REC PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE CHAR BACKQUOTE
--   reduce production ext_attributes ->

State 1274:
## Known stack suffix:
## LBRACKET
## LR(1) items:
class_simple_expr -> LBRACKET . core_type_comma_list RBRACKET class_longident [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type_comma_list shift to state 1275
-- On core_type2 shift to state 215
-- On core_type shift to state 1093
## Reductions:

State 1275:
## Known stack suffix:
## LBRACKET core_type_comma_list
## LR(1) items:
class_simple_expr -> LBRACKET core_type_comma_list . RBRACKET class_longident [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
core_type_comma_list -> core_type_comma_list . COMMA core_type [ RBRACKET COMMA ]
## Transitions:
-- On RBRACKET shift to state 1276
-- On COMMA shift to state 1091
## Reductions:

State 1276:
## Known stack suffix:
## LBRACKET core_type_comma_list RBRACKET
## LR(1) items:
class_simple_expr -> LBRACKET core_type_comma_list RBRACKET . class_longident [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On LIDENT shift to state 95
-- On mod_longident shift to state 96
-- On class_longident shift to state 1277
## Reductions:

State 1277:
## Known stack suffix:
## LBRACKET core_type_comma_list RBRACKET class_longident
## LR(1) items:
class_simple_expr -> LBRACKET core_type_comma_list RBRACKET class_longident . [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
## Reductions:
-- On VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND
--   reduce production class_simple_expr -> LBRACKET core_type_comma_list RBRACKET class_longident

State 1278:
## Known stack suffix:
## FUN
## LR(1) items:
class_expr -> FUN . attributes class_fun_def [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1279
-- On attribute shift to state 225
## Reductions:
-- On UNDERSCORE UIDENT TRUE TILDE STRING SHARP QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT FLOAT FALSE CHAR BACKQUOTE
--   reduce production attributes ->

State 1279:
## Known stack suffix:
## FUN attributes
## LR(1) items:
class_expr -> FUN attributes . class_fun_def [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUS shift to state 311
-- On LPAREN shift to state 527
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 1280
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
-- On class_fun_def shift to state 1292
## Reductions:

State 1280:
## Known stack suffix:
## labeled_simple_pattern
## LR(1) items:
class_fun_def -> labeled_simple_pattern . MINUSGREATER class_expr [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
class_fun_def -> labeled_simple_pattern . class_fun_def [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUSGREATER shift to state 1281
-- On MINUS shift to state 311
-- On LPAREN shift to state 527
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 1280
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
-- On class_fun_def shift to state 1291
## Reductions:

State 1281:
## Known stack suffix:
## labeled_simple_pattern MINUSGREATER
## LR(1) items:
class_fun_def -> labeled_simple_pattern MINUSGREATER . class_expr [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On OBJECT shift to state 1209
-- On LPAREN shift to state 1272
-- On LIDENT shift to state 95
-- On LET shift to state 1273
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKET shift to state 1274
-- On FUN shift to state 1278
-- On mod_longident shift to state 96
-- On let_bindings shift to state 1282
-- On let_binding shift to state 640
-- On extension shift to state 1284
-- On class_simple_expr shift to state 1285
-- On class_longident shift to state 1287
-- On class_expr shift to state 1290
## Reductions:

State 1282:
## Known stack suffix:
## let_bindings
## LR(1) items:
class_expr -> let_bindings . IN class_expr [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
let_bindings -> let_bindings . and_let_binding [ IN AND ]
## Transitions:
-- On IN shift to state 1283
-- On AND shift to state 702
-- On and_let_binding shift to state 776
## Reductions:

State 1283:
## Known stack suffix:
## let_bindings IN
## LR(1) items:
class_expr -> let_bindings IN . class_expr [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On OBJECT shift to state 1209
-- On LPAREN shift to state 1272
-- On LIDENT shift to state 95
-- On LET shift to state 1273
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKET shift to state 1274
-- On FUN shift to state 1278
-- On mod_longident shift to state 96
-- On let_bindings shift to state 1282
-- On let_binding shift to state 640
-- On extension shift to state 1284
-- On class_simple_expr shift to state 1285
-- On class_longident shift to state 1287
-- On class_expr shift to state 1288
## Reductions:

State 1284:
## Known stack suffix:
## extension
## LR(1) items:
class_expr -> extension . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND
--   reduce production class_expr -> extension

State 1285:
## Known stack suffix:
## class_simple_expr
## LR(1) items:
class_expr -> class_simple_expr . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
class_expr -> class_simple_expr . simple_labeled_expr_list [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 616
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On QUESTION shift to state 621
-- On PREFIXOP shift to state 291
-- On OPTLABEL shift to state 623
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LABEL shift to state 628
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_labeled_expr_list shift to state 1286
-- On simple_expr shift to state 792
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On labeled_simple_expr shift to state 795
-- On label_expr shift to state 794
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND
--   reduce production class_expr -> class_simple_expr

State 1286:
## Known stack suffix:
## class_simple_expr simple_labeled_expr_list
## LR(1) items:
class_expr -> class_simple_expr simple_labeled_expr_list . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
simple_labeled_expr_list -> simple_labeled_expr_list . labeled_simple_expr [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 616
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On QUESTION shift to state 621
-- On PREFIXOP shift to state 291
-- On OPTLABEL shift to state 623
-- On NEW shift to state 292
-- On LPAREN shift to state 297
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LABEL shift to state 628
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On simple_expr shift to state 792
-- On name_tag shift to state 492
-- On mod_longident shift to state 493
-- On labeled_simple_expr shift to state 793
-- On label_expr shift to state 794
-- On extension shift to state 625
-- On constr_longident shift to state 626
-- On constant shift to state 627
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND
--   reduce production class_expr -> class_simple_expr simple_labeled_expr_list

State 1287:
## Known stack suffix:
## class_longident
## LR(1) items:
class_simple_expr -> class_longident . [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
## Reductions:
-- On VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND
--   reduce production class_simple_expr -> class_longident

State 1288:
## Known stack suffix:
## let_bindings IN class_expr
## LR(1) items:
class_expr -> let_bindings IN class_expr . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
class_expr -> class_expr . attribute [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 1289
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND
--   reduce production class_expr -> let_bindings IN class_expr

State 1289:
## Known stack suffix:
## class_expr attribute
## LR(1) items:
class_expr -> class_expr attribute . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND
--   reduce production class_expr -> class_expr attribute

State 1290:
## Known stack suffix:
## labeled_simple_pattern MINUSGREATER class_expr
## LR(1) items:
class_expr -> class_expr . attribute [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
class_fun_def -> labeled_simple_pattern MINUSGREATER class_expr . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 1289
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND
--   reduce production class_fun_def -> labeled_simple_pattern MINUSGREATER class_expr

State 1291:
## Known stack suffix:
## labeled_simple_pattern class_fun_def
## LR(1) items:
class_fun_def -> labeled_simple_pattern class_fun_def . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND
--   reduce production class_fun_def -> labeled_simple_pattern class_fun_def

State 1292:
## Known stack suffix:
## FUN attributes class_fun_def
## LR(1) items:
class_expr -> FUN attributes class_fun_def . [ VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS AS AND
--   reduce production class_expr -> FUN attributes class_fun_def

State 1293:
## Known stack suffix:
## LPAREN class_expr
## LR(1) items:
class_expr -> class_expr . attribute [ RPAREN LBRACKETAT COLON ]
class_simple_expr -> LPAREN class_expr . COLON class_type RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
class_simple_expr -> LPAREN class_expr . RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
-- On RPAREN shift to state 1294
-- On LBRACKETAT shift to state 58
-- On COLON shift to state 1295
-- On attribute shift to state 1289
## Reductions:

State 1294:
## Known stack suffix:
## LPAREN class_expr RPAREN
## LR(1) items:
class_simple_expr -> LPAREN class_expr RPAREN . [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
## Reductions:
-- On VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND
--   reduce production class_simple_expr -> LPAREN class_expr RPAREN

State 1295:
## Known stack suffix:
## LPAREN class_expr COLON
## LR(1) items:
class_simple_expr -> LPAREN class_expr COLON . class_type RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 1117
-- On OPTLABEL shift to state 1122
-- On OBJECT shift to state 1040
-- On LPAREN shift to state 109
-- On LIDENT shift to state 1125
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 1129
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 1131
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 1133
-- On extension shift to state 1136
-- On clty_longident shift to state 1095
-- On class_type shift to state 1296
-- On class_signature shift to state 1138
## Reductions:

State 1296:
## Known stack suffix:
## LPAREN class_expr COLON class_type
## LR(1) items:
class_simple_expr -> LPAREN class_expr COLON class_type . RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
-- On RPAREN shift to state 1297
## Reductions:

State 1297:
## Known stack suffix:
## LPAREN class_expr COLON class_type RPAREN
## LR(1) items:
class_simple_expr -> LPAREN class_expr COLON class_type RPAREN . [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## Transitions:
## Reductions:
-- On VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUESTIONQUESTION QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND
--   reduce production class_simple_expr -> LPAREN class_expr COLON class_type RPAREN

State 1298:
## Known stack suffix:
## INHERIT override_flag attributes class_expr
## LR(1) items:
class_expr -> class_expr . attribute [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT AS ]
class_field -> INHERIT override_flag attributes class_expr . parent_binder post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On AS shift to state 1299
-- On parent_binder shift to state 1301
-- On attribute shift to state 1289
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production parent_binder ->

State 1299:
## Known stack suffix:
## AS
## LR(1) items:
parent_binder -> AS . LIDENT [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LIDENT shift to state 1300
## Reductions:

State 1300:
## Known stack suffix:
## AS LIDENT
## LR(1) items:
parent_binder -> AS LIDENT . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production parent_binder -> AS LIDENT

State 1301:
## Known stack suffix:
## INHERIT override_flag attributes class_expr parent_binder
## LR(1) items:
class_field -> INHERIT override_flag attributes class_expr parent_binder . post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1302
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production post_item_attributes ->

State 1302:
## Known stack suffix:
## INHERIT override_flag attributes class_expr parent_binder post_item_attributes
## LR(1) items:
class_field -> INHERIT override_flag attributes class_expr parent_binder post_item_attributes . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_field -> INHERIT override_flag attributes class_expr parent_binder post_item_attributes

State 1303:
## Known stack suffix:
## CONSTRAINT
## LR(1) items:
class_field -> CONSTRAINT . attributes constrain_field post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1304
-- On attribute shift to state 225
## Reductions:
-- On UNDERSCORE UIDENT SHARP QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET
--   reduce production attributes ->

State 1304:
## Known stack suffix:
## CONSTRAINT attributes
## LR(1) items:
class_field -> CONSTRAINT attributes . constrain_field post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1101
-- On constrain_field shift to state 1305
## Reductions:

State 1305:
## Known stack suffix:
## CONSTRAINT attributes constrain_field
## LR(1) items:
class_field -> CONSTRAINT attributes constrain_field . post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1306
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production post_item_attributes ->

State 1306:
## Known stack suffix:
## CONSTRAINT attributes constrain_field post_item_attributes
## LR(1) items:
class_field -> CONSTRAINT attributes constrain_field post_item_attributes . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_field -> CONSTRAINT attributes constrain_field post_item_attributes

State 1307:
## Known stack suffix:
## item_extension
## LR(1) items:
class_field -> item_extension . post_item_attributes [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1308
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production post_item_attributes ->

State 1308:
## Known stack suffix:
## item_extension post_item_attributes
## LR(1) items:
class_field -> item_extension post_item_attributes . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_field -> item_extension post_item_attributes

State 1309:
## Known stack suffix:
## floating_attribute
## LR(1) items:
class_field -> floating_attribute . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_field -> floating_attribute

State 1310:
## Known stack suffix:
## class_fields class_field
## LR(1) items:
class_fields -> class_fields class_field . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_fields -> class_fields class_field

State 1311:
## Known stack suffix:
## EQUAL class_expr
## LR(1) items:
class_expr -> class_expr . attribute [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
class_fun_binding -> EQUAL class_expr . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 1289
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_fun_binding -> EQUAL class_expr

State 1312:
## Known stack suffix:
## COLON
## LR(1) items:
class_fun_binding -> COLON . class_type EQUAL class_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 1117
-- On OPTLABEL shift to state 1122
-- On OBJECT shift to state 1040
-- On LPAREN shift to state 109
-- On LIDENT shift to state 1125
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 1129
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 1131
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 1133
-- On extension shift to state 1136
-- On clty_longident shift to state 1095
-- On class_type shift to state 1313
-- On class_signature shift to state 1138
## Reductions:

State 1313:
## Known stack suffix:
## COLON class_type
## LR(1) items:
class_fun_binding -> COLON class_type . EQUAL class_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On EQUAL shift to state 1314
## Reductions:

State 1314:
## Known stack suffix:
## COLON class_type EQUAL
## LR(1) items:
class_fun_binding -> COLON class_type EQUAL . class_expr [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 94
-- On OBJECT shift to state 1209
-- On LPAREN shift to state 1272
-- On LIDENT shift to state 95
-- On LET shift to state 1273
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKET shift to state 1274
-- On FUN shift to state 1278
-- On mod_longident shift to state 96
-- On let_bindings shift to state 1282
-- On let_binding shift to state 640
-- On extension shift to state 1284
-- On class_simple_expr shift to state 1285
-- On class_longident shift to state 1287
-- On class_expr shift to state 1315
## Reductions:

State 1315:
## Known stack suffix:
## COLON class_type EQUAL class_expr
## LR(1) items:
class_expr -> class_expr . attribute [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
class_fun_binding -> COLON class_type EQUAL class_expr . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 1289
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_fun_binding -> COLON class_type EQUAL class_expr

State 1316:
## Known stack suffix:
## labeled_simple_pattern
## LR(1) items:
class_fun_binding -> labeled_simple_pattern . class_fun_binding [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUS shift to state 311
-- On LPAREN shift to state 527
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EQUAL shift to state 1208
-- On COLON shift to state 1312
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 1316
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
-- On class_fun_binding shift to state 1317
## Reductions:

State 1317:
## Known stack suffix:
## labeled_simple_pattern class_fun_binding
## LR(1) items:
class_fun_binding -> labeled_simple_pattern class_fun_binding . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_fun_binding -> labeled_simple_pattern class_fun_binding

State 1318:
## Known stack suffix:
## CLASS ext_attributes virtual_flag class_type_parameters LIDENT class_fun_binding
## LR(1) items:
class_declaration -> CLASS ext_attributes virtual_flag class_type_parameters LIDENT class_fun_binding . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1319
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 1319:
## Known stack suffix:
## CLASS ext_attributes virtual_flag class_type_parameters LIDENT class_fun_binding post_item_attributes
## LR(1) items:
class_declaration -> CLASS ext_attributes virtual_flag class_type_parameters LIDENT class_fun_binding post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_declaration -> CLASS ext_attributes virtual_flag class_type_parameters LIDENT class_fun_binding post_item_attributes

State 1320:
## Known stack suffix:
## value_description
## LR(1) items:
structure_item -> value_description . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> value_description

State 1321:
## Known stack suffix:
## type_declarations
## LR(1) items:
structure_item -> type_declarations . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
type_declarations -> type_declarations . and_type_declaration [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On AND shift to state 1146
-- On and_type_declaration shift to state 1154
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> type_declarations

State 1322:
## Known stack suffix:
## toplevel_directive
## LR(1) items:
structure -> toplevel_directive . structure [ RBRACKET EOF END ]
## Transitions:
-- On WHILE shift to state 1
-- On VAL shift to state 60
-- On UIDENT shift to state 94
-- On TYPE shift to state 154
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 327
-- On SEMISEMI shift to state 338
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OPEN shift to state 339
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MODULE shift to state 347
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKETATATAT shift to state 971
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On INCLUDE shift to state 973
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 987
-- On CLASS shift to state 1203
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On value_description shift to state 1320
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On type_declarations shift to state 1321
-- On type_declaration shift to state 1155
-- On toplevel_directive shift to state 1322
-- On subtractive shift to state 614
-- On structure_tail shift to state 1323
-- On structure_item shift to state 1324
-- On structure shift to state 1357
-- On str_type_extension shift to state 1326
-- On str_include_statement shift to state 1327
-- On str_exception_declaration shift to state 1328
-- On simple_expr shift to state 615
-- On sig_exception_declaration shift to state 1329
-- On seq_expr shift to state 1358
-- On rec_module_bindings shift to state 1330
-- On rec_module_binding shift to state 1337
-- On primitive_declaration shift to state 1338
-- On open_statement shift to state 1339
-- On name_tag shift to state 635
-- On module_type_declaration shift to state 1340
-- On module_binding shift to state 1341
-- On mod_longident shift to state 493
-- On let_bindings shift to state 1361
-- On let_binding shift to state 640
-- On label shift to state 641
-- On item_extension shift to state 1343
-- On floating_attribute shift to state 1345
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On class_type_declarations shift to state 1346
-- On class_type_declaration shift to state 1188
-- On class_declarations shift to state 1347
-- On class_declaration shift to state 1356
-- On additive shift to state 653
## Reductions:
-- On RBRACKET EOF END
--   reduce production structure_tail ->

State 1323:
## Known stack suffix:
## structure_tail
## LR(1) items:
structure -> structure_tail . [ RBRACKET EOF END ]
## Transitions:
## Reductions:
-- On RBRACKET EOF END
--   reduce production structure -> structure_tail

State 1324:
## Known stack suffix:
## structure_item
## LR(1) items:
structure_tail -> structure_item . structure_tail [ RBRACKET EOF END ]
## Transitions:
-- On VAL shift to state 60
-- On TYPE shift to state 154
-- On SEMISEMI shift to state 338
-- On OPEN shift to state 339
-- On MODULE shift to state 347
-- On LET shift to state 1273
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETATATAT shift to state 971
-- On INCLUDE shift to state 973
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 987
-- On CLASS shift to state 1203
-- On value_description shift to state 1320
-- On type_declarations shift to state 1321
-- On type_declaration shift to state 1155
-- On structure_tail shift to state 1325
-- On structure_item shift to state 1324
-- On str_type_extension shift to state 1326
-- On str_include_statement shift to state 1327
-- On str_exception_declaration shift to state 1328
-- On sig_exception_declaration shift to state 1329
-- On rec_module_bindings shift to state 1330
-- On rec_module_binding shift to state 1337
-- On primitive_declaration shift to state 1338
-- On open_statement shift to state 1339
-- On module_type_declaration shift to state 1340
-- On module_binding shift to state 1341
-- On let_bindings shift to state 1342
-- On let_binding shift to state 640
-- On item_extension shift to state 1343
-- On floating_attribute shift to state 1345
-- On class_type_declarations shift to state 1346
-- On class_type_declaration shift to state 1188
-- On class_declarations shift to state 1347
-- On class_declaration shift to state 1356
## Reductions:
-- On RBRACKET EOF END
--   reduce production structure_tail ->

State 1325:
## Known stack suffix:
## structure_item structure_tail
## LR(1) items:
structure_tail -> structure_item structure_tail . [ RBRACKET EOF END ]
## Transitions:
## Reductions:
-- On RBRACKET EOF END
--   reduce production structure_tail -> structure_item structure_tail

State 1326:
## Known stack suffix:
## str_type_extension
## LR(1) items:
structure_item -> str_type_extension . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> str_type_extension

State 1327:
## Known stack suffix:
## str_include_statement
## LR(1) items:
structure_item -> str_include_statement . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> str_include_statement

State 1328:
## Known stack suffix:
## str_exception_declaration
## LR(1) items:
structure_item -> str_exception_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> str_exception_declaration

State 1329:
## Known stack suffix:
## sig_exception_declaration
## LR(1) items:
str_exception_declaration -> sig_exception_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production str_exception_declaration -> sig_exception_declaration

State 1330:
## Known stack suffix:
## rec_module_bindings
## LR(1) items:
rec_module_bindings -> rec_module_bindings . and_module_binding [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
structure_item -> rec_module_bindings . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On AND shift to state 1331
-- On and_module_binding shift to state 1336
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> rec_module_bindings

State 1331:
## Known stack suffix:
## AND
## LR(1) items:
and_module_binding -> AND . attributes UIDENT module_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1332
-- On attribute shift to state 225
## Reductions:
-- On UIDENT
--   reduce production attributes ->

State 1332:
## Known stack suffix:
## AND attributes
## LR(1) items:
and_module_binding -> AND attributes . UIDENT module_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UIDENT shift to state 1333
## Reductions:

State 1333:
## Known stack suffix:
## AND attributes UIDENT
## LR(1) items:
and_module_binding -> AND attributes UIDENT . module_binding_body post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LPAREN shift to state 355
-- On EQUAL shift to state 430
-- On COLON shift to state 910
-- On module_binding_body shift to state 1334
-- On functor_arg shift to state 917
## Reductions:

State 1334:
## Known stack suffix:
## AND attributes UIDENT module_binding_body
## LR(1) items:
and_module_binding -> AND attributes UIDENT module_binding_body . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1335
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 1335:
## Known stack suffix:
## AND attributes UIDENT module_binding_body post_item_attributes
## LR(1) items:
and_module_binding -> AND attributes UIDENT module_binding_body post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production and_module_binding -> AND attributes UIDENT module_binding_body post_item_attributes

State 1336:
## Known stack suffix:
## rec_module_bindings and_module_binding
## LR(1) items:
rec_module_bindings -> rec_module_bindings and_module_binding . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production rec_module_bindings -> rec_module_bindings and_module_binding

State 1337:
## Known stack suffix:
## rec_module_binding
## LR(1) items:
rec_module_bindings -> rec_module_binding . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production rec_module_bindings -> rec_module_binding

State 1338:
## Known stack suffix:
## primitive_declaration
## LR(1) items:
structure_item -> primitive_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> primitive_declaration

State 1339:
## Known stack suffix:
## open_statement
## LR(1) items:
structure_item -> open_statement . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> open_statement

State 1340:
## Known stack suffix:
## module_type_declaration
## LR(1) items:
structure_item -> module_type_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> module_type_declaration

State 1341:
## Known stack suffix:
## module_binding
## LR(1) items:
structure_item -> module_binding . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> module_binding

State 1342:
## Known stack suffix:
## let_bindings
## LR(1) items:
let_bindings -> let_bindings . and_let_binding [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
structure_item -> let_bindings . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On AND shift to state 702
-- On and_let_binding shift to state 776
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> let_bindings

State 1343:
## Known stack suffix:
## item_extension
## LR(1) items:
structure_item -> item_extension . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1344
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 1344:
## Known stack suffix:
## item_extension post_item_attributes
## LR(1) items:
structure_item -> item_extension post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> item_extension post_item_attributes

State 1345:
## Known stack suffix:
## floating_attribute
## LR(1) items:
structure_item -> floating_attribute . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> floating_attribute

State 1346:
## Known stack suffix:
## class_type_declarations
## LR(1) items:
class_type_declarations -> class_type_declarations . and_class_type_declaration [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
structure_item -> class_type_declarations . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On AND shift to state 1179
-- On and_class_type_declaration shift to state 1187
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> class_type_declarations

State 1347:
## Known stack suffix:
## class_declarations
## LR(1) items:
class_declarations -> class_declarations . and_class_declaration [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
structure_item -> class_declarations . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On AND shift to state 1348
-- On and_class_declaration shift to state 1355
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> class_declarations

State 1348:
## Known stack suffix:
## AND
## LR(1) items:
and_class_declaration -> AND . attributes virtual_flag class_type_parameters LIDENT class_fun_binding post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1349
-- On attribute shift to state 225
## Reductions:
-- On VIRTUAL LIDENT LBRACKET
--   reduce production attributes ->

State 1349:
## Known stack suffix:
## AND attributes
## LR(1) items:
and_class_declaration -> AND attributes . virtual_flag class_type_parameters LIDENT class_fun_binding post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On VIRTUAL shift to state 1032
-- On virtual_flag shift to state 1350
## Reductions:
-- On LIDENT LBRACKET
--   reduce production virtual_flag ->

State 1350:
## Known stack suffix:
## AND attributes virtual_flag
## LR(1) items:
and_class_declaration -> AND attributes virtual_flag . class_type_parameters LIDENT class_fun_binding post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKET shift to state 1034
-- On class_type_parameters shift to state 1351
## Reductions:
-- On LIDENT
--   reduce production class_type_parameters ->

State 1351:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters
## LR(1) items:
and_class_declaration -> AND attributes virtual_flag class_type_parameters . LIDENT class_fun_binding post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LIDENT shift to state 1352
## Reductions:

State 1352:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters LIDENT
## LR(1) items:
and_class_declaration -> AND attributes virtual_flag class_type_parameters LIDENT . class_fun_binding post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On TILDE shift to state 590
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On QUESTION shift to state 599
-- On PLUS shift to state 308
-- On OPTLABEL shift to state 705
-- On MINUS shift to state 311
-- On LPAREN shift to state 527
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LABEL shift to state 722
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EQUAL shift to state 1208
-- On COLON shift to state 1312
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 736
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On name_tag shift to state 579
-- On mod_longident shift to state 548
-- On labeled_simple_pattern shift to state 1316
-- On extension shift to state 556
-- On constr_longident shift to state 580
-- On constant shift to state 538
-- On class_fun_binding shift to state 1353
## Reductions:

State 1353:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters LIDENT class_fun_binding
## LR(1) items:
and_class_declaration -> AND attributes virtual_flag class_type_parameters LIDENT class_fun_binding . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1354
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 1354:
## Known stack suffix:
## AND attributes virtual_flag class_type_parameters LIDENT class_fun_binding post_item_attributes
## LR(1) items:
and_class_declaration -> AND attributes virtual_flag class_type_parameters LIDENT class_fun_binding post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production and_class_declaration -> AND attributes virtual_flag class_type_parameters LIDENT class_fun_binding post_item_attributes

State 1355:
## Known stack suffix:
## class_declarations and_class_declaration
## LR(1) items:
class_declarations -> class_declarations and_class_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_declarations -> class_declarations and_class_declaration

State 1356:
## Known stack suffix:
## class_declaration
## LR(1) items:
class_declarations -> class_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production class_declarations -> class_declaration

State 1357:
## Known stack suffix:
## toplevel_directive structure
## LR(1) items:
structure -> toplevel_directive structure . [ RBRACKET EOF END ]
## Transitions:
## Reductions:
-- On RBRACKET EOF END
--   reduce production structure -> toplevel_directive structure

State 1358:
## Known stack suffix:
## seq_expr
## LR(1) items:
structure -> seq_expr . post_item_attributes structure_tail [ RBRACKET EOF END ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On post_item_attributes shift to state 1359
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 1359:
## Known stack suffix:
## seq_expr post_item_attributes
## LR(1) items:
structure -> seq_expr post_item_attributes . structure_tail [ RBRACKET EOF END ]
## Transitions:
-- On VAL shift to state 60
-- On TYPE shift to state 154
-- On SEMISEMI shift to state 338
-- On OPEN shift to state 339
-- On MODULE shift to state 347
-- On LET shift to state 1273
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETATATAT shift to state 971
-- On INCLUDE shift to state 973
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 987
-- On CLASS shift to state 1203
-- On value_description shift to state 1320
-- On type_declarations shift to state 1321
-- On type_declaration shift to state 1155
-- On structure_tail shift to state 1360
-- On structure_item shift to state 1324
-- On str_type_extension shift to state 1326
-- On str_include_statement shift to state 1327
-- On str_exception_declaration shift to state 1328
-- On sig_exception_declaration shift to state 1329
-- On rec_module_bindings shift to state 1330
-- On rec_module_binding shift to state 1337
-- On primitive_declaration shift to state 1338
-- On open_statement shift to state 1339
-- On module_type_declaration shift to state 1340
-- On module_binding shift to state 1341
-- On let_bindings shift to state 1342
-- On let_binding shift to state 640
-- On item_extension shift to state 1343
-- On floating_attribute shift to state 1345
-- On class_type_declarations shift to state 1346
-- On class_type_declaration shift to state 1188
-- On class_declarations shift to state 1347
-- On class_declaration shift to state 1356
## Reductions:
-- On RBRACKET EOF END
--   reduce production structure_tail ->

State 1360:
## Known stack suffix:
## seq_expr post_item_attributes structure_tail
## LR(1) items:
structure -> seq_expr post_item_attributes structure_tail . [ RBRACKET EOF END ]
## Transitions:
## Reductions:
-- On RBRACKET EOF END
--   reduce production structure -> seq_expr post_item_attributes structure_tail

State 1361:
## Known stack suffix:
## let_bindings
## LR(1) items:
expr -> let_bindings . IN seq_expr [ VAL TYPE STAR SEMISEMI SEMI RBRACKET PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
let_bindings -> let_bindings . and_let_binding [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION EOF END CLASS AND ]
structure_item -> let_bindings . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On IN shift to state 638
-- On AND shift to state 702
-- On and_let_binding shift to state 776
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production structure_item -> let_bindings

State 1362:
## Known stack suffix:
## structure
## LR(1) items:
payload -> structure . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production payload -> structure

State 1363:
## Known stack suffix:
## LBRACKETATATAT attr_id payload
## LR(1) items:
floating_attribute -> LBRACKETATATAT attr_id payload . RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS ]
## Transitions:
-- On RBRACKET shift to state 1364
## Reductions:

State 1364:
## Known stack suffix:
## LBRACKETATATAT attr_id payload RBRACKET
## LR(1) items:
floating_attribute -> LBRACKETATATAT attr_id payload RBRACKET . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS
--   reduce production floating_attribute -> LBRACKETATATAT attr_id payload RBRACKET

State 1365:
## Known stack suffix:
## LBRACKETPERCENTPERCENT attr_id payload
## LR(1) items:
item_extension -> LBRACKETPERCENTPERCENT attr_id payload . RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS ]
## Transitions:
-- On RBRACKET shift to state 1366
## Reductions:

State 1366:
## Known stack suffix:
## LBRACKETPERCENTPERCENT attr_id payload RBRACKET
## LR(1) items:
item_extension -> LBRACKETPERCENTPERCENT attr_id payload RBRACKET . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS
--   reduce production item_extension -> LBRACKETPERCENTPERCENT attr_id payload RBRACKET

State 1367:
## Known stack suffix:
## SEMISEMI structure
## LR(1) items:
structure_tail -> SEMISEMI structure . [ RBRACKET EOF END ]
## Transitions:
## Reductions:
-- On RBRACKET EOF END
--   reduce production structure_tail -> SEMISEMI structure

State 1368:
## Known stack suffix:
## STRUCT attributes structure
## LR(1) items:
module_expr -> STRUCT attributes structure . END [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
-- On END shift to state 1369
## Reductions:

State 1369:
## Known stack suffix:
## STRUCT attributes structure END
## LR(1) items:
module_expr -> STRUCT attributes structure END . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER COLON CLASS AND
--   reduce production module_expr -> STRUCT attributes structure END

State 1370:
## Known stack suffix:
## MODULE TYPE OF attributes module_expr
## LR(1) items:
module_expr -> module_expr . paren_module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
module_expr -> module_expr . LPAREN RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
module_expr -> module_expr . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
module_type -> MODULE TYPE OF attributes module_expr . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On LPAREN shift to state 449
-- On LBRACKETAT shift to state 58
-- On paren_module_expr shift to state 456
-- On attribute shift to state 457
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production module_type -> MODULE TYPE OF attributes module_expr

State 1371:
## Known stack suffix:
## LPAREN MODULE ext_attributes UIDENT COLON package_type
## LR(1) items:
simple_pattern_not_ident -> LPAREN MODULE ext_attributes UIDENT COLON package_type . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
-- On RPAREN shift to state 1372
## Reductions:

State 1372:
## Known stack suffix:
## LPAREN MODULE ext_attributes UIDENT COLON package_type RPAREN
## LR(1) items:
simple_pattern_not_ident -> LPAREN MODULE ext_attributes UIDENT COLON package_type RPAREN . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## Transitions:
## Reductions:
-- On WHEN UNDERSCORE UIDENT TRUE TILDE STRING SHARP SEMI RPAREN RBRACKET RBRACE QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT FLOAT FALSE EQUAL COMMA COLONGREATER COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS
--   reduce production simple_pattern_not_ident -> LPAREN MODULE ext_attributes UIDENT COLON package_type RPAREN

State 1373:
## Known stack suffix:
## LPAREN COLONCOLON
## LR(1) items:
pattern_gen -> LPAREN COLONCOLON . RPAREN LPAREN pattern COMMA pattern RPAREN [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On RPAREN shift to state 1374
## Reductions:

State 1374:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN
## LR(1) items:
pattern_gen -> LPAREN COLONCOLON RPAREN . LPAREN pattern COMMA pattern RPAREN [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On LPAREN shift to state 1375
## Reductions:

State 1375:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN LPAREN
## LR(1) items:
pattern_gen -> LPAREN COLONCOLON RPAREN LPAREN . pattern COMMA pattern RPAREN [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 1376
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 1376:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN LPAREN pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . attribute [ LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern_gen -> LPAREN COLONCOLON RPAREN LPAREN pattern . COMMA pattern RPAREN [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 1377
-- On COLONCOLON shift to state 543
-- On BAR shift to state 559
-- On AS shift to state 561
-- On attribute shift to state 545
## Reductions:

State 1377:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN LPAREN pattern COMMA
## LR(1) items:
pattern_comma_list -> pattern COMMA . pattern [ LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern_gen -> LPAREN COLONCOLON RPAREN LPAREN pattern COMMA . pattern RPAREN [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 1378
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 1378:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN LPAREN pattern COMMA pattern
## LR(1) items:
pattern -> pattern . AS val_ident [ RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern -> pattern . attribute [ RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern COMMA pattern . [ LBRACKETAT COMMA COLONCOLON BAR AS ]
pattern_gen -> LPAREN COLONCOLON RPAREN LPAREN pattern COMMA pattern . RPAREN [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
-- On RPAREN shift to state 1379
-- On LBRACKETAT shift to state 58
-- On COLONCOLON shift to state 543
-- On attribute shift to state 545
## Reductions:
-- On COMMA BAR AS
--   reduce production pattern_comma_list -> pattern COMMA pattern

State 1379:
## Known stack suffix:
## LPAREN COLONCOLON RPAREN LPAREN pattern COMMA pattern RPAREN
## LR(1) items:
pattern_gen -> LPAREN COLONCOLON RPAREN LPAREN pattern COMMA pattern RPAREN . [ WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## Transitions:
## Reductions:
-- On WHEN SEMI RPAREN RBRACKET RBRACE MINUSGREATER LBRACKETAT EQUAL COMMA COLONCOLON COLON BARRBRACKET BAR AS
--   reduce production pattern_gen -> LPAREN COLONCOLON RPAREN LPAREN pattern COMMA pattern RPAREN

State 1380:
## Known stack suffix:
## LPAREN pattern
## LR(1) items:
class_self_pattern -> LPAREN pattern . RPAREN [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
class_self_pattern -> LPAREN pattern . COLON core_type RPAREN [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
pattern -> pattern . AS val_ident [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . attribute [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## Transitions:
-- On RPAREN shift to state 1381
-- On LBRACKETAT shift to state 58
-- On COMMA shift to state 554
-- On COLONCOLON shift to state 543
-- On COLON shift to state 1382
-- On BAR shift to state 559
-- On AS shift to state 561
-- On attribute shift to state 545
## Reductions:

State 1381:
## Known stack suffix:
## LPAREN pattern RPAREN
## LR(1) items:
class_self_pattern -> LPAREN pattern RPAREN . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_self_pattern -> LPAREN pattern RPAREN

State 1382:
## Known stack suffix:
## LPAREN pattern COLON
## LR(1) items:
class_self_pattern -> LPAREN pattern COLON . core_type RPAREN [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type_no_attr shift to state 387
-- On core_type2 shift to state 215
-- On core_type shift to state 1383
## Reductions:

State 1383:
## Known stack suffix:
## LPAREN pattern COLON core_type
## LR(1) items:
class_self_pattern -> LPAREN pattern COLON core_type . RPAREN [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
core_type -> core_type . attribute [ RPAREN LBRACKETAT ]
## Transitions:
-- On RPAREN shift to state 1384
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:

State 1384:
## Known stack suffix:
## LPAREN pattern COLON core_type RPAREN
## LR(1) items:
class_self_pattern -> LPAREN pattern COLON core_type RPAREN . [ VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## Transitions:
## Reductions:
-- On VAL METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT
--   reduce production class_self_pattern -> LPAREN pattern COLON core_type RPAREN

State 1385:
## Known stack suffix:
## OBJECT ext_attributes class_structure
## LR(1) items:
expr -> OBJECT ext_attributes class_structure . END [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On END shift to state 1386
## Reductions:

State 1386:
## Known stack suffix:
## OBJECT ext_attributes class_structure END
## LR(1) items:
expr -> OBJECT ext_attributes class_structure END . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> OBJECT ext_attributes class_structure END

State 1387:
## Known stack suffix:
## LBRACKETBAR BARRBRACKET
## LR(1) items:
simple_expr -> LBRACKETBAR BARRBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> LBRACKETBAR BARRBRACKET

State 1388:
## Known stack suffix:
## LBRACKETBAR expr_semi_list
## LR(1) items:
expr_semi_list -> expr_semi_list . SEMI expr [ SEMI BARRBRACKET ]
simple_expr -> LBRACKETBAR expr_semi_list . opt_semi BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On SEMI shift to state 859
-- On opt_semi shift to state 1389
## Reductions:
-- On BARRBRACKET
--   reduce production opt_semi ->

State 1389:
## Known stack suffix:
## LBRACKETBAR expr_semi_list opt_semi
## LR(1) items:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi . BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BARRBRACKET shift to state 1390
## Reductions:

State 1390:
## Known stack suffix:
## LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
## LR(1) items:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET

State 1391:
## Known stack suffix:
## PREFIXOP simple_expr
## LR(1) items:
simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACE expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> PREFIXOP simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARPOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production simple_expr -> PREFIXOP simple_expr

State 1392:
## Known stack suffix:
## TRY ext_attributes seq_expr
## LR(1) items:
expr -> TRY ext_attributes seq_expr . WITH opt_bar match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WITH shift to state 1393
## Reductions:

State 1393:
## Known stack suffix:
## TRY ext_attributes seq_expr WITH
## LR(1) items:
expr -> TRY ext_attributes seq_expr WITH . opt_bar match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 174
-- On opt_bar shift to state 1394
## Reductions:
-- On UNDERSCORE UIDENT TRUE STRING SHARP PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LAZY INT FLOAT FALSE EXCEPTION CHAR BACKQUOTE
--   reduce production opt_bar ->

State 1394:
## Known stack suffix:
## TRY ext_attributes seq_expr WITH opt_bar
## LR(1) items:
expr -> TRY ext_attributes seq_expr WITH opt_bar . match_cases [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On UNDERSCORE shift to state 305
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On SHARP shift to state 306
-- On PLUS shift to state 308
-- On MINUS shift to state 311
-- On LPAREN shift to state 314
-- On LIDENT shift to state 88
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 508
-- On LBRACKET shift to state 509
-- On LBRACE shift to state 510
-- On LAZY shift to state 525
-- On INT shift to state 482
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On EXCEPTION shift to state 529
-- On CHAR shift to state 484
-- On BACKQUOTE shift to state 181
-- On val_ident shift to state 531
-- On simple_pattern_not_ident shift to state 532
-- On simple_pattern shift to state 533
-- On simple_delimited_pattern shift to state 534
-- On signed_constant shift to state 535
-- On pattern_gen shift to state 539
-- On pattern_comma_list shift to state 540
-- On pattern shift to state 586
-- On name_tag shift to state 546
-- On mod_longident shift to state 548
-- On match_cases shift to state 1395
-- On match_case shift to state 847
-- On extension shift to state 556
-- On constr_longident shift to state 557
-- On constant shift to state 538
## Reductions:

State 1395:
## Known stack suffix:
## TRY ext_attributes seq_expr WITH opt_bar match_cases
## LR(1) items:
expr -> TRY ext_attributes seq_expr WITH opt_bar match_cases . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR match_case [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On BAR shift to state 845
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> TRY ext_attributes seq_expr WITH opt_bar match_cases

State 1396:
## Known stack suffix:
## LBRACKETATAT attr_id payload
## LR(1) items:
post_item_attribute -> LBRACKETATAT attr_id payload . RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On RBRACKET shift to state 1397
## Reductions:

State 1397:
## Known stack suffix:
## LBRACKETATAT attr_id payload RBRACKET
## LR(1) items:
post_item_attribute -> LBRACKETATAT attr_id payload RBRACKET . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production post_item_attribute -> LBRACKETATAT attr_id payload RBRACKET

State 1398:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag str_extension_constructors post_item_attributes
## LR(1) items:
str_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag str_extension_constructors post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production str_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag str_extension_constructors post_item_attributes

State 1399:
## Known stack suffix:
## str_extension_constructors bar_extension_constructor_rebind
## LR(1) items:
str_extension_constructors -> str_extension_constructors bar_extension_constructor_rebind . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production str_extension_constructors -> str_extension_constructors bar_extension_constructor_rebind

State 1400:
## Known stack suffix:
## str_extension_constructors bar_extension_constructor_declaration
## LR(1) items:
str_extension_constructors -> str_extension_constructors bar_extension_constructor_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production str_extension_constructors -> str_extension_constructors bar_extension_constructor_declaration

State 1401:
## Known stack suffix:
## extension_constructor_rebind
## LR(1) items:
str_extension_constructors -> extension_constructor_rebind . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production str_extension_constructors -> extension_constructor_rebind

State 1402:
## Known stack suffix:
## extension_constructor_declaration
## LR(1) items:
str_extension_constructors -> extension_constructor_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production str_extension_constructors -> extension_constructor_declaration

State 1403:
## Known stack suffix:
## constr_ident
## LR(1) items:
extension_constructor_declaration -> constr_ident . generalized_constructor_arguments attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
extension_constructor_rebind -> constr_ident . EQUAL constr_longident attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On OF shift to state 171
-- On EQUAL shift to state 1404
-- On COLON shift to state 277
-- On generalized_constructor_arguments shift to state 1407
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production generalized_constructor_arguments ->

State 1404:
## Known stack suffix:
## constr_ident EQUAL
## LR(1) items:
extension_constructor_rebind -> constr_ident EQUAL . constr_longident attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On UIDENT shift to state 94
-- On TRUE shift to state 267
-- On LPAREN shift to state 268
-- On LBRACKET shift to state 270
-- On FALSE shift to state 272
-- On mod_longident shift to state 273
-- On constr_longident shift to state 1405
## Reductions:

State 1405:
## Known stack suffix:
## constr_ident EQUAL constr_longident
## LR(1) items:
extension_constructor_rebind -> constr_ident EQUAL constr_longident . attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1406
-- On attribute shift to state 225
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production attributes ->

State 1406:
## Known stack suffix:
## constr_ident EQUAL constr_longident attributes
## LR(1) items:
extension_constructor_rebind -> constr_ident EQUAL constr_longident attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production extension_constructor_rebind -> constr_ident EQUAL constr_longident attributes

State 1407:
## Known stack suffix:
## constr_ident generalized_constructor_arguments
## LR(1) items:
extension_constructor_declaration -> constr_ident generalized_constructor_arguments . attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1408
-- On attribute shift to state 225
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production attributes ->

State 1408:
## Known stack suffix:
## constr_ident generalized_constructor_arguments attributes
## LR(1) items:
extension_constructor_declaration -> constr_ident generalized_constructor_arguments attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production extension_constructor_declaration -> constr_ident generalized_constructor_arguments attributes

State 1409:
## Known stack suffix:
## bar_extension_constructor_rebind
## LR(1) items:
str_extension_constructors -> bar_extension_constructor_rebind . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production str_extension_constructors -> bar_extension_constructor_rebind

State 1410:
## Known stack suffix:
## bar_extension_constructor_declaration
## LR(1) items:
str_extension_constructors -> bar_extension_constructor_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production str_extension_constructors -> bar_extension_constructor_declaration

State 1411:
## Known stack suffix:
## LBRACKETPERCENT attr_id payload
## LR(1) items:
extension -> LBRACKETPERCENT attr_id payload . RBRACKET [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RBRACKET shift to state 1412
## Reductions:

State 1412:
## Known stack suffix:
## LBRACKETPERCENT attr_id payload RBRACKET
## LR(1) items:
extension -> LBRACKETPERCENT attr_id payload RBRACKET . [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SHARPOP SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTIONQUESTION QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER
--   reduce production extension -> LBRACKETPERCENT attr_id payload RBRACKET

State 1413:
## Known stack suffix:
## label COLON poly_type_no_attr
## LR(1) items:
field -> label COLON poly_type_no_attr . attributes [ GREATER ]
field_semi -> label COLON poly_type_no_attr . attributes SEMI attributes [ LIDENT GREATER DOTDOT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1414
-- On attribute shift to state 225
## Reductions:
-- On SEMI GREATER
--   reduce production attributes ->

State 1414:
## Known stack suffix:
## label COLON poly_type_no_attr attributes
## LR(1) items:
field -> label COLON poly_type_no_attr attributes . [ GREATER ]
field_semi -> label COLON poly_type_no_attr attributes . SEMI attributes [ LIDENT GREATER DOTDOT ]
## Transitions:
-- On SEMI shift to state 1415
## Reductions:
-- On GREATER
--   reduce production field -> label COLON poly_type_no_attr attributes

State 1415:
## Known stack suffix:
## label COLON poly_type_no_attr attributes SEMI
## LR(1) items:
field_semi -> label COLON poly_type_no_attr attributes SEMI . attributes [ LIDENT GREATER DOTDOT ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1416
-- On attribute shift to state 225
## Reductions:
-- On LIDENT GREATER DOTDOT
--   reduce production attributes ->

State 1416:
## Known stack suffix:
## label COLON poly_type_no_attr attributes SEMI attributes
## LR(1) items:
field_semi -> label COLON poly_type_no_attr attributes SEMI attributes . [ LIDENT GREATER DOTDOT ]
## Transitions:
## Reductions:
-- On LIDENT GREATER DOTDOT
--   reduce production field_semi -> label COLON poly_type_no_attr attributes SEMI attributes

State 1417:
## Known stack suffix:
## field_semi
## LR(1) items:
meth_list -> field_semi . meth_list [ GREATER ]
meth_list -> field_semi . [ GREATER ]
## Transitions:
-- On LIDENT shift to state 143
-- On DOTDOT shift to state 145
-- On meth_list shift to state 1418
-- On label shift to state 148
-- On field_semi shift to state 1417
-- On field shift to state 1419
## Reductions:
-- On GREATER
--   reduce production meth_list -> field_semi

State 1418:
## Known stack suffix:
## field_semi meth_list
## LR(1) items:
meth_list -> field_semi meth_list . [ GREATER ]
## Transitions:
## Reductions:
-- On GREATER
--   reduce production meth_list -> field_semi meth_list

State 1419:
## Known stack suffix:
## field
## LR(1) items:
meth_list -> field . [ GREATER ]
## Transitions:
## Reductions:
-- On GREATER
--   reduce production meth_list -> field

State 1420:
## Known stack suffix:
## LIDENT COLON core_type2
## LR(1) items:
core_type2 -> LIDENT COLON core_type2 . MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 . MINUSGREATER core_type2 [ MINUSGREATER ]
## Transitions:
-- On MINUSGREATER shift to state 1421
## Reductions:

State 1421:
## Known stack suffix:
## LIDENT COLON core_type2 MINUSGREATER
## LR(1) items:
core_type2 -> LIDENT COLON core_type2 MINUSGREATER . core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 MINUSGREATER . core_type2 [ MINUSGREATER ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type2 shift to state 1422
## Reductions:

State 1422:
## Known stack suffix:
## LIDENT COLON core_type2 MINUSGREATER core_type2
## LR(1) items:
core_type2 -> LIDENT COLON core_type2 MINUSGREATER core_type2 . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 . MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 MINUSGREATER core_type2 . [ MINUSGREATER ]
## Transitions:
-- On MINUSGREATER shift to state 216
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production core_type2 -> LIDENT COLON core_type2 MINUSGREATER core_type2

State 1423:
## Known stack suffix:
## LPAREN core_type_comma_list
## LR(1) items:
core_type_comma_list -> core_type_comma_list . COMMA core_type [ RPAREN COMMA ]
simple_core_type -> LPAREN core_type_comma_list . RPAREN [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LPAREN core_type_comma_list . RPAREN type_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LPAREN core_type_comma_list . RPAREN SHARP class_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On RPAREN shift to state 1424
-- On COMMA shift to state 1091
## Reductions:

State 1424:
## Known stack suffix:
## LPAREN core_type_comma_list RPAREN
## LR(1) items:
simple_core_type -> LPAREN core_type_comma_list RPAREN . [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LPAREN core_type_comma_list RPAREN . type_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
simple_core_type2 -> LPAREN core_type_comma_list RPAREN . SHARP class_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UIDENT shift to state 92
-- On SHARP shift to state 1425
-- On LIDENT shift to state 172
-- On type_longident shift to state 1427
-- On mod_ext_longident shift to state 189
## Reductions:
-- On WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN

State 1425:
## Known stack suffix:
## LPAREN core_type_comma_list RPAREN SHARP
## LR(1) items:
simple_core_type2 -> LPAREN core_type_comma_list RPAREN SHARP . class_longident [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On UIDENT shift to state 94
-- On LIDENT shift to state 95
-- On mod_longident shift to state 96
-- On class_longident shift to state 1426
## Reductions:

State 1426:
## Known stack suffix:
## LPAREN core_type_comma_list RPAREN SHARP class_longident
## LR(1) items:
simple_core_type2 -> LPAREN core_type_comma_list RPAREN SHARP class_longident . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LPAREN core_type_comma_list RPAREN SHARP class_longident

State 1427:
## Known stack suffix:
## LPAREN core_type_comma_list RPAREN type_longident
## LR(1) items:
simple_core_type2 -> LPAREN core_type_comma_list RPAREN type_longident . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LPAREN core_type_comma_list RPAREN type_longident

State 1428:
## Known stack suffix:
## LBRACKET
## LR(1) items:
constr_ident -> LBRACKET . RBRACKET [ VAL TYPE SEMISEMI RBRACKET OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT COLON CLASS BAR AND ]
simple_core_type2 -> LBRACKET . tag_field RBRACKET [ VAL UIDENT TYPE STAR SHARP SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AS AND ]
simple_core_type2 -> LBRACKET . BAR row_field_list RBRACKET [ VAL UIDENT TYPE STAR SHARP SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AS AND ]
simple_core_type2 -> LBRACKET . row_field BAR row_field_list RBRACKET [ VAL UIDENT TYPE STAR SHARP SEMISEMI RBRACKET OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AS AND ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On RBRACKET shift to state 167
-- On QUOTE shift to state 101
-- On LPAREN shift to state 109
-- On LIDENT shift to state 172
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On BAR shift to state 180
-- On BACKQUOTE shift to state 181
-- On type_longident shift to state 183
-- On tag_field shift to state 229
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 197
-- On row_field shift to state 231
-- On name_tag shift to state 202
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
## Reductions:

State 1429:
## Known stack suffix:
## BAR
## LR(1) items:
bar_constructor_declaration -> BAR . constr_ident generalized_constructor_arguments attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On UIDENT shift to state 162
-- On TRUE shift to state 136
-- On LPAREN shift to state 163
-- On LBRACKET shift to state 166
-- On FALSE shift to state 168
-- On constr_ident shift to state 1430
## Reductions:

State 1430:
## Known stack suffix:
## BAR constr_ident
## LR(1) items:
bar_constructor_declaration -> BAR constr_ident . generalized_constructor_arguments attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On OF shift to state 171
-- On COLON shift to state 277
-- On generalized_constructor_arguments shift to state 1431
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production generalized_constructor_arguments ->

State 1431:
## Known stack suffix:
## BAR constr_ident generalized_constructor_arguments
## LR(1) items:
bar_constructor_declaration -> BAR constr_ident generalized_constructor_arguments . attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1432
-- On attribute shift to state 225
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production attributes ->

State 1432:
## Known stack suffix:
## BAR constr_ident generalized_constructor_arguments attributes
## LR(1) items:
bar_constructor_declaration -> BAR constr_ident generalized_constructor_arguments attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production bar_constructor_declaration -> BAR constr_ident generalized_constructor_arguments attributes

State 1433:
## Known stack suffix:
## EQUAL PRIVATE core_type
## LR(1) items:
core_type -> core_type . attribute [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL PRIVATE core_type . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attribute shift to state 391
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production type_kind -> EQUAL PRIVATE core_type

State 1434:
## Known stack suffix:
## EQUAL PRIVATE constructor_declarations
## LR(1) items:
constructor_declarations -> constructor_declarations . bar_constructor_declaration [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
type_kind -> EQUAL PRIVATE constructor_declarations . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On BAR shift to state 1429
-- On bar_constructor_declaration shift to state 1435
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production type_kind -> EQUAL PRIVATE constructor_declarations

State 1435:
## Known stack suffix:
## constructor_declarations bar_constructor_declaration
## LR(1) items:
constructor_declarations -> constructor_declarations bar_constructor_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production constructor_declarations -> constructor_declarations bar_constructor_declaration

State 1436:
## Known stack suffix:
## constructor_declaration
## LR(1) items:
constructor_declarations -> constructor_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production constructor_declarations -> constructor_declaration

State 1437:
## Known stack suffix:
## constr_ident
## LR(1) items:
constructor_declaration -> constr_ident . generalized_constructor_arguments attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On OF shift to state 171
-- On COLON shift to state 277
-- On generalized_constructor_arguments shift to state 1438
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production generalized_constructor_arguments ->

State 1438:
## Known stack suffix:
## constr_ident generalized_constructor_arguments
## LR(1) items:
constructor_declaration -> constr_ident generalized_constructor_arguments . attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On attributes shift to state 1439
-- On attribute shift to state 225
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production attributes ->

State 1439:
## Known stack suffix:
## constr_ident generalized_constructor_arguments attributes
## LR(1) items:
constructor_declaration -> constr_ident generalized_constructor_arguments attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production constructor_declaration -> constr_ident generalized_constructor_arguments attributes

State 1440:
## Known stack suffix:
## bar_constructor_declaration
## LR(1) items:
constructor_declarations -> bar_constructor_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND
--   reduce production constructor_declarations -> bar_constructor_declaration

State 1441:
## Known stack suffix:
## EQUAL DOTDOT
## LR(1) items:
type_kind -> EQUAL DOTDOT . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production type_kind -> EQUAL DOTDOT

State 1442:
## Known stack suffix:
## EQUAL private_flag
## LR(1) items:
type_kind -> EQUAL private_flag . LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On LBRACE shift to state 1443
## Reductions:

State 1443:
## Known stack suffix:
## EQUAL private_flag LBRACE
## LR(1) items:
type_kind -> EQUAL private_flag LBRACE . label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On MUTABLE shift to state 245
-- On mutable_flag shift to state 246
-- On label_declarations shift to state 1444
-- On label_declaration_semi shift to state 261
-- On label_declaration shift to state 263
## Reductions:
-- On LIDENT
--   reduce production mutable_flag ->

State 1444:
## Known stack suffix:
## EQUAL private_flag LBRACE label_declarations
## LR(1) items:
type_kind -> EQUAL private_flag LBRACE label_declarations . RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On RBRACE shift to state 1445
## Reductions:

State 1445:
## Known stack suffix:
## EQUAL private_flag LBRACE label_declarations RBRACE
## LR(1) items:
type_kind -> EQUAL private_flag LBRACE label_declarations RBRACE . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production type_kind -> EQUAL private_flag LBRACE label_declarations RBRACE

State 1446:
## Known stack suffix:
## EQUAL core_type
## LR(1) items:
core_type -> core_type . attribute [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type . EQUAL private_flag constructor_declarations [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type . EQUAL DOTDOT [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type . EQUAL private_flag LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On LBRACKETAT shift to state 58
-- On EQUAL shift to state 1447
-- On attribute shift to state 391
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production type_kind -> EQUAL core_type

State 1447:
## Known stack suffix:
## EQUAL core_type EQUAL
## LR(1) items:
type_kind -> EQUAL core_type EQUAL . private_flag constructor_declarations [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type EQUAL . DOTDOT [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type EQUAL . private_flag LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On PRIVATE shift to state 160
-- On DOTDOT shift to state 1448
-- On private_flag shift to state 1449
## Reductions:
-- On UIDENT TRUE LPAREN LBRACKET LBRACE FALSE BAR
--   reduce production private_flag ->

State 1448:
## Known stack suffix:
## EQUAL core_type EQUAL DOTDOT
## LR(1) items:
type_kind -> EQUAL core_type EQUAL DOTDOT . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production type_kind -> EQUAL core_type EQUAL DOTDOT

State 1449:
## Known stack suffix:
## EQUAL core_type EQUAL private_flag
## LR(1) items:
type_kind -> EQUAL core_type EQUAL private_flag . constructor_declarations [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type EQUAL private_flag . LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On UIDENT shift to state 162
-- On TRUE shift to state 136
-- On LPAREN shift to state 163
-- On LBRACKET shift to state 166
-- On LBRACE shift to state 1450
-- On FALSE shift to state 168
-- On BAR shift to state 1429
-- On constructor_declarations shift to state 1453
-- On constructor_declaration shift to state 1436
-- On constr_ident shift to state 1437
-- On bar_constructor_declaration shift to state 1440
## Reductions:

State 1450:
## Known stack suffix:
## EQUAL core_type EQUAL private_flag LBRACE
## LR(1) items:
type_kind -> EQUAL core_type EQUAL private_flag LBRACE . label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On MUTABLE shift to state 245
-- On mutable_flag shift to state 246
-- On label_declarations shift to state 1451
-- On label_declaration_semi shift to state 261
-- On label_declaration shift to state 263
## Reductions:
-- On LIDENT
--   reduce production mutable_flag ->

State 1451:
## Known stack suffix:
## EQUAL core_type EQUAL private_flag LBRACE label_declarations
## LR(1) items:
type_kind -> EQUAL core_type EQUAL private_flag LBRACE label_declarations . RBRACE [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On RBRACE shift to state 1452
## Reductions:

State 1452:
## Known stack suffix:
## EQUAL core_type EQUAL private_flag LBRACE label_declarations RBRACE
## LR(1) items:
type_kind -> EQUAL core_type EQUAL private_flag LBRACE label_declarations RBRACE . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production type_kind -> EQUAL core_type EQUAL private_flag LBRACE label_declarations RBRACE

State 1453:
## Known stack suffix:
## EQUAL core_type EQUAL private_flag constructor_declarations
## LR(1) items:
constructor_declarations -> constructor_declarations . bar_constructor_declaration [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
type_kind -> EQUAL core_type EQUAL private_flag constructor_declarations . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On BAR shift to state 1429
-- On bar_constructor_declaration shift to state 1435
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production type_kind -> EQUAL core_type EQUAL private_flag constructor_declarations

State 1454:
## Known stack suffix:
## EQUAL constructor_declarations
## LR(1) items:
constructor_declarations -> constructor_declarations . bar_constructor_declaration [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS BAR AND ]
type_kind -> EQUAL constructor_declarations . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
## Transitions:
-- On BAR shift to state 1429
-- On bar_constructor_declaration shift to state 1435
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production type_kind -> EQUAL constructor_declarations

State 1455:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters LIDENT type_kind
## LR(1) items:
type_declaration -> TYPE ext_attributes nonrec_flag optional_type_parameters LIDENT type_kind . constraints post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On constraints shift to state 1456
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND
--   reduce production constraints ->

State 1456:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters LIDENT type_kind constraints
## LR(1) items:
constraints -> constraints . CONSTRAINT constrain [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CONSTRAINT CLASS AND ]
type_declaration -> TYPE ext_attributes nonrec_flag optional_type_parameters LIDENT type_kind constraints . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On CONSTRAINT shift to state 386
-- On post_item_attributes shift to state 1457
-- On post_item_attribute shift to state 345
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production post_item_attributes ->

State 1457:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters LIDENT type_kind constraints post_item_attributes
## LR(1) items:
type_declaration -> TYPE ext_attributes nonrec_flag optional_type_parameters LIDENT type_kind constraints post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS AND
--   reduce production type_declaration -> TYPE ext_attributes nonrec_flag optional_type_parameters LIDENT type_kind constraints post_item_attributes

State 1458:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters type_longident
## LR(1) items:
sig_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident . PLUSEQ private_flag sig_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PLUSEQ shift to state 1459
## Reductions:

State 1459:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ
## LR(1) items:
sig_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ . private_flag sig_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On PRIVATE shift to state 160
-- On private_flag shift to state 1460
## Reductions:
-- On UIDENT TRUE LPAREN LBRACKET FALSE BAR
--   reduce production private_flag ->

State 1460:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag
## LR(1) items:
sig_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag . sig_extension_constructors post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On UIDENT shift to state 162
-- On TRUE shift to state 136
-- On LPAREN shift to state 163
-- On LBRACKET shift to state 166
-- On FALSE shift to state 168
-- On BAR shift to state 1461
-- On sig_extension_constructors shift to state 1463
-- On extension_constructor_declaration shift to state 1466
-- On constr_ident shift to state 1467
-- On bar_extension_constructor_declaration shift to state 1468
## Reductions:

State 1461:
## Known stack suffix:
## BAR
## LR(1) items:
bar_extension_constructor_declaration -> BAR . constr_ident generalized_constructor_arguments attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On UIDENT shift to state 162
-- On TRUE shift to state 136
-- On LPAREN shift to state 163
-- On LBRACKET shift to state 166
-- On FALSE shift to state 168
-- On constr_ident shift to state 1462
## Reductions:

State 1462:
## Known stack suffix:
## BAR constr_ident
## LR(1) items:
bar_extension_constructor_declaration -> BAR constr_ident . generalized_constructor_arguments attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On OF shift to state 171
-- On COLON shift to state 277
-- On generalized_constructor_arguments shift to state 282
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production generalized_constructor_arguments ->

State 1463:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag sig_extension_constructors
## LR(1) items:
sig_extension_constructors -> sig_extension_constructors . bar_extension_constructor_declaration [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
sig_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag sig_extension_constructors . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On BAR shift to state 1461
-- On post_item_attributes shift to state 1464
-- On post_item_attribute shift to state 345
-- On bar_extension_constructor_declaration shift to state 1465
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 1464:
## Known stack suffix:
## TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag sig_extension_constructors post_item_attributes
## LR(1) items:
sig_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag sig_extension_constructors post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production sig_type_extension -> TYPE ext_attributes nonrec_flag optional_type_parameters type_longident PLUSEQ private_flag sig_extension_constructors post_item_attributes

State 1465:
## Known stack suffix:
## sig_extension_constructors bar_extension_constructor_declaration
## LR(1) items:
sig_extension_constructors -> sig_extension_constructors bar_extension_constructor_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production sig_extension_constructors -> sig_extension_constructors bar_extension_constructor_declaration

State 1466:
## Known stack suffix:
## extension_constructor_declaration
## LR(1) items:
sig_extension_constructors -> extension_constructor_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production sig_extension_constructors -> extension_constructor_declaration

State 1467:
## Known stack suffix:
## constr_ident
## LR(1) items:
extension_constructor_declaration -> constr_ident . generalized_constructor_arguments attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
-- On OF shift to state 171
-- On COLON shift to state 277
-- On generalized_constructor_arguments shift to state 1407
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production generalized_constructor_arguments ->

State 1468:
## Known stack suffix:
## bar_extension_constructor_declaration
## LR(1) items:
sig_extension_constructors -> bar_extension_constructor_declaration . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS BAR
--   reduce production sig_extension_constructors -> bar_extension_constructor_declaration

State 1469:
## Known stack suffix:
## SIG attributes signature
## LR(1) items:
module_type -> SIG attributes signature . END [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
-- On END shift to state 1470
## Reductions:

State 1470:
## Known stack suffix:
## SIG attributes signature END
## LR(1) items:
module_type -> SIG attributes signature END . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE SEMISEMI RPAREN RBRACKET OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END COLONGREATER CLASS AND
--   reduce production module_type -> SIG attributes signature END

State 1471:
## Known stack suffix:
## LPAREN MODULE ext_attributes package_type
## LR(1) items:
simple_core_type2 -> LPAREN MODULE ext_attributes package_type . RPAREN [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
-- On RPAREN shift to state 1472
## Reductions:

State 1472:
## Known stack suffix:
## LPAREN MODULE ext_attributes package_type RPAREN
## LR(1) items:
simple_core_type2 -> LPAREN MODULE ext_attributes package_type RPAREN . [ WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## Transitions:
## Reductions:
-- On WITH VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE IN GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production simple_core_type2 -> LPAREN MODULE ext_attributes package_type RPAREN

State 1473:
## Known stack suffix:
## OPTLABEL core_type2
## LR(1) items:
core_type2 -> OPTLABEL core_type2 . MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 . MINUSGREATER core_type2 [ MINUSGREATER ]
## Transitions:
-- On MINUSGREATER shift to state 1474
## Reductions:

State 1474:
## Known stack suffix:
## OPTLABEL core_type2 MINUSGREATER
## LR(1) items:
core_type2 -> OPTLABEL core_type2 MINUSGREATER . core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 MINUSGREATER . core_type2 [ MINUSGREATER ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type2 shift to state 1475
## Reductions:

State 1475:
## Known stack suffix:
## OPTLABEL core_type2 MINUSGREATER core_type2
## LR(1) items:
core_type2 -> OPTLABEL core_type2 MINUSGREATER core_type2 . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 . MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 MINUSGREATER core_type2 . [ MINUSGREATER ]
## Transitions:
-- On MINUSGREATER shift to state 216
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production core_type2 -> OPTLABEL core_type2 MINUSGREATER core_type2

State 1476:
## Known stack suffix:
## QUESTION LIDENT COLON core_type2
## LR(1) items:
core_type2 -> QUESTION LIDENT COLON core_type2 . MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 . MINUSGREATER core_type2 [ MINUSGREATER ]
## Transitions:
-- On MINUSGREATER shift to state 1477
## Reductions:

State 1477:
## Known stack suffix:
## QUESTION LIDENT COLON core_type2 MINUSGREATER
## LR(1) items:
core_type2 -> QUESTION LIDENT COLON core_type2 MINUSGREATER . core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 MINUSGREATER . core_type2 [ MINUSGREATER ]
## Transitions:
-- On UNDERSCORE shift to state 91
-- On UIDENT shift to state 92
-- On SHARP shift to state 93
-- On QUOTE shift to state 101
-- On QUESTION shift to state 105
-- On OPTLABEL shift to state 108
-- On LPAREN shift to state 109
-- On LIDENT shift to state 140
-- On LESS shift to state 142
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETLESS shift to state 173
-- On LBRACKETGREATER shift to state 176
-- On LBRACKET shift to state 179
-- On type_longident shift to state 183
-- On simple_core_type_or_tuple shift to state 206
-- On simple_core_type2 shift to state 185
-- On simple_core_type shift to state 207
-- On mod_ext_longident shift to state 189
-- On extension shift to state 210
-- On core_type2 shift to state 1478
## Reductions:

State 1478:
## Known stack suffix:
## QUESTION LIDENT COLON core_type2 MINUSGREATER core_type2
## LR(1) items:
core_type2 -> QUESTION LIDENT COLON core_type2 MINUSGREATER core_type2 . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 . MINUSGREATER core_type2 [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
core_type2 -> core_type2 MINUSGREATER core_type2 . [ MINUSGREATER ]
## Transitions:
-- On MINUSGREATER shift to state 216
## Reductions:
-- On WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE GREATER EXTERNAL EXCEPTION EQUAL EOF END CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND
--   reduce production core_type2 -> QUESTION LIDENT COLON core_type2 MINUSGREATER core_type2

State 1479:
## Known stack suffix:
## VAL ext_attributes val_ident COLON core_type
## LR(1) items:
core_type -> core_type . attribute [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
value_description -> VAL ext_attributes val_ident COLON core_type . post_item_attributes [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
-- On LBRACKETATAT shift to state 285
-- On LBRACKETAT shift to state 58
-- On post_item_attributes shift to state 1480
-- On post_item_attribute shift to state 345
-- On attribute shift to state 391
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production post_item_attributes ->

State 1480:
## Known stack suffix:
## VAL ext_attributes val_ident COLON core_type post_item_attributes
## LR(1) items:
value_description -> VAL ext_attributes val_ident COLON core_type post_item_attributes . [ VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS ]
## Transitions:
## Reductions:
-- On VAL TYPE SEMISEMI RBRACKET OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF END CLASS
--   reduce production value_description -> VAL ext_attributes val_ident COLON core_type post_item_attributes

State 1481:
## Known stack suffix:
## LBRACKETAT attr_id payload
## LR(1) items:
attribute -> LBRACKETAT attr_id payload . RBRACKET [ WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRUCT STRING STAR SIG SHARP SEMISEMI SEMI RPAREN REC RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PRIVATE PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On RBRACKET shift to state 1482
## Reductions:

State 1482:
## Known stack suffix:
## LBRACKETAT attr_id payload RBRACKET
## LR(1) items:
attribute -> LBRACKETAT attr_id payload RBRACKET . [ WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRUCT STRING STAR SIG SHARP SEMISEMI SEMI RPAREN REC RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PRIVATE PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRUCT STRING STAR SIG SHARP SEMISEMI SEMI RPAREN REC RBRACKET RBRACE QUOTE QUESTIONQUESTION QUESTION PRIVATE PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER
--   reduce production attribute -> LBRACKETAT attr_id payload RBRACKET

State 1483:
## Known stack suffix:
## PERCENT attr_id attributes
## LR(1) items:
ext_attributes -> PERCENT attr_id attributes . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TRY TRUE TILDE STRUCT STRING SIG SHARP REC QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXCEPTION END CONSTRAINT CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## Transitions:
## Reductions:
-- On WHILE VIRTUAL VAL UNDERSCORE UIDENT TRY TRUE TILDE STRUCT STRING SIG SHARP REC QUOTE QUESTIONQUESTION QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OBJECT NONREC NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT IF FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXCEPTION END CONSTRAINT CHAR BEGIN BAR BANG BACKQUOTE ASSERT
--   reduce production ext_attributes -> PERCENT attr_id attributes

State 1484:
## Known stack suffix:
## WHILE ext_attributes
## LR(1) items:
expr -> WHILE ext_attributes . seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 1485
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 1485:
## Known stack suffix:
## WHILE ext_attributes seq_expr
## LR(1) items:
expr -> WHILE ext_attributes seq_expr . DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DO shift to state 1486
## Reductions:

State 1486:
## Known stack suffix:
## WHILE ext_attributes seq_expr DO
## LR(1) items:
expr -> WHILE ext_attributes seq_expr DO . seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 1487
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 1487:
## Known stack suffix:
## WHILE ext_attributes seq_expr DO seq_expr
## LR(1) items:
expr -> WHILE ext_attributes seq_expr DO seq_expr . DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
-- On DONE shift to state 1488
## Reductions:

State 1488:
## Known stack suffix:
## WHILE ext_attributes seq_expr DO seq_expr DONE
## LR(1) items:
expr -> WHILE ext_attributes seq_expr DO seq_expr DONE . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## Transitions:
## Reductions:
-- On WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER
--   reduce production expr -> WHILE ext_attributes seq_expr DO seq_expr DONE

State 1489:
## Known stack suffix:
## structure
## LR(1) items:
implementation -> structure . EOF [ # ]
## Transitions:
-- On EOF shift to state 1490
## Reductions:

State 1490:
## Known stack suffix:
## structure EOF
## LR(1) items:
implementation -> structure EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production implementation -> structure EOF

State 1491:
## Known stack suffix:
## implementation
## LR(1) items:
implementation' -> implementation . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept implementation

State 1492:
## Known stack suffix:
##
## LR(1) items:
interface' -> . interface [ # ]
## Transitions:
-- On VAL shift to state 60
-- On TYPE shift to state 115
-- On SEMISEMI shift to state 998
-- On OPEN shift to state 339
-- On MODULE shift to state 999
-- On LBRACKETPERCENTPERCENT shift to state 965
-- On LBRACKETATATAT shift to state 971
-- On INCLUDE shift to state 1022
-- On EXTERNAL shift to state 977
-- On EXCEPTION shift to state 1026
-- On CLASS shift to state 1029
-- On value_description shift to state 1144
-- On type_declarations shift to state 1145
-- On type_declaration shift to state 1155
-- On signature_item shift to state 1156
-- On signature shift to state 1493
-- On sig_type_extension shift to state 1158
-- On sig_include_statement shift to state 1159
-- On sig_exception_declaration shift to state 1160
-- On rec_module_declarations shift to state 1161
-- On rec_module_declaration shift to state 1169
-- On primitive_declaration shift to state 1170
-- On open_statement shift to state 1171
-- On module_type_declaration shift to state 1172
-- On module_declaration shift to state 1173
-- On module_alias shift to state 1174
-- On item_extension shift to state 1175
-- On interface shift to state 1495
-- On floating_attribute shift to state 1177
-- On class_type_declarations shift to state 1178
-- On class_type_declaration shift to state 1188
-- On class_descriptions shift to state 1189
-- On class_description shift to state 1199
## Reductions:
-- On EOF
--   reduce production signature ->

State 1493:
## Known stack suffix:
## signature
## LR(1) items:
interface -> signature . EOF [ # ]
## Transitions:
-- On EOF shift to state 1494
## Reductions:

State 1494:
## Known stack suffix:
## signature EOF
## LR(1) items:
interface -> signature EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production interface -> signature EOF

State 1495:
## Known stack suffix:
## interface
## LR(1) items:
interface' -> interface . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept interface

State 1496:
## Known stack suffix:
##
## LR(1) items:
parse_expression' -> . parse_expression [ # ]
## Transitions:
-- On WHILE shift to state 1
-- On UIDENT shift to state 94
-- On TRY shift to state 287
-- On TRUE shift to state 267
-- On STRING shift to state 289
-- On QUESTIONQUESTION shift to state 290
-- On PREFIXOP shift to state 291
-- On PLUSDOT shift to state 300
-- On PLUS shift to state 301
-- On OBJECT shift to state 302
-- On NEW shift to state 292
-- On MINUSDOT shift to state 434
-- On MINUS shift to state 435
-- On MATCH shift to state 436
-- On LPAREN shift to state 438
-- On LIDENT shift to state 468
-- On LET shift to state 469
-- On LBRACKETPERCENT shift to state 152
-- On LBRACKETBAR shift to state 299
-- On LBRACKET shift to state 475
-- On LBRACELESS shift to state 476
-- On LBRACE shift to state 480
-- On LAZY shift to state 487
-- On INT shift to state 482
-- On IF shift to state 503
-- On FUNCTION shift to state 505
-- On FUN shift to state 588
-- On FOR shift to state 603
-- On FLOAT shift to state 483
-- On FALSE shift to state 272
-- On CHAR shift to state 484
-- On BEGIN shift to state 485
-- On BANG shift to state 489
-- On BACKQUOTE shift to state 181
-- On ASSERT shift to state 607
-- On val_longident shift to state 490
-- On val_ident shift to state 334
-- On subtractive shift to state 614
-- On simple_expr shift to state 615
-- On seq_expr shift to state 1497
-- On parse_expression shift to state 1499
-- On name_tag shift to state 635
-- On mod_longident shift to state 493
-- On let_bindings shift to state 637
-- On let_binding shift to state 640
-- On label shift to state 641
-- On extension shift to state 625
-- On expr_comma_list shift to state 643
-- On expr shift to state 696
-- On constr_longident shift to state 651
-- On constant shift to state 627
-- On additive shift to state 653
## Reductions:

State 1497:
## Known stack suffix:
## seq_expr
## LR(1) items:
parse_expression -> seq_expr . EOF [ # ]
## Transitions:
-- On EOF shift to state 1498
## Reductions:

State 1498:
## Known stack suffix:
## seq_expr EOF
## LR(1) items:
parse_expression -> seq_expr EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production parse_expression -> seq_expr EOF

State 1499:
## Known stack suffix:
## parse_expression
## LR(1) items:
parse_expression' -> parse_expression . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept parse_expression

