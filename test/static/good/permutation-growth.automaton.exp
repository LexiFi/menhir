State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On B shift to state 1
-- On A shift to state 2
-- On main shift to state 7
-- On F(A,id(A)) shift to state 8
## Reductions:

State 1:
## Known stack suffix:
## B
## LR(1) items:
F(A,id(A)) -> B . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production F(A,id(A)) -> B

State 2:
## Known stack suffix:
## A
## LR(1) items:
F(A,id(A)) -> A . F(id(A),A) [ # ]
## Transitions:
-- On B shift to state 3
-- On A shift to state 4
-- On F(id(A),A) shift to state 6
## Reductions:

State 3:
## Known stack suffix:
## B
## LR(1) items:
F(id(A),A) -> B . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production F(id(A),A) -> B

State 4:
## Known stack suffix:
## A
## LR(1) items:
F(id(A),A) -> A . F(A,id(A)) [ # ]
## Transitions:
-- On B shift to state 1
-- On A shift to state 2
-- On F(A,id(A)) shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## A F(A,id(A))
## LR(1) items:
F(id(A),A) -> A F(A,id(A)) . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production F(id(A),A) -> A F(A,id(A))

State 6:
## Known stack suffix:
## A F(id(A),A)
## LR(1) items:
F(A,id(A)) -> A F(id(A),A) . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production F(A,id(A)) -> A F(id(A),A)

State 7:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

State 8:
## Known stack suffix:
## F(A,id(A))
## LR(1) items:
main -> F(A,id(A)) . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> F(A,id(A))

