Grammar has 3 nonterminal symbols, among which 1 start symbols.
Grammar has 3 terminal symbols.
Grammar has 5 productions.
nullable(main) = false
nullable(aseq(B,A)) = true
nullable(aseq(A,B)) = true
first(main) = EOF A
first(aseq(B,A)) = B
first(aseq(A,B)) = A
minimal(main) = (* 1 *) EOF
minimal(aseq(B,A)) = (* 0 *)
minimal(aseq(A,B)) = (* 0 *)
follow(main) = #
follow(aseq(B,A)) = EOF
follow(aseq(A,B)) = EOF
Built an LR(0) automaton with 8 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 8 states.
4 out of 8 states have a default reduction.
2 out of 8 states are represented.
0 out of 9 symbols keep track of their start position.
0 out of 9 symbols keep track of their end position.
3 out of 6 productions exploit shiftreduce optimization.
0 out of 8 states can peek at an error.
31 functions before inlining, 7 functions after inlining.
