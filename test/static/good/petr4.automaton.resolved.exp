State 0:
p4program' -> . p4program [ # ]
-- On VOID shift to state 1
-- On VARBIT shift to state 2
-- On TYPEDEF shift to state 200
-- On TYPE shift to state 407
-- On TUPLE shift to state 16
-- On STRUCT shift to state 201
-- On STRING shift to state 18
-- On SEMICOLON shift to state 414
-- On PRAGMA shift to state 207
-- On PARSER shift to state 415
-- On PACKAGE shift to state 449
-- On NAME shift to state 11
-- On MATCH_KIND shift to state 455
-- On INT shift to state 20
-- On HEADER_UNION shift to state 332
-- On HEADER shift to state 337
-- On EXTERN shift to state 459
-- On ERROR shift to state 510
-- On ENUM shift to state 342
-- On DOT shift to state 38
-- On CONTROL shift to state 514
-- On CONST shift to state 520
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On ACTION shift to state 527
-- On varName shift to state 479
-- On typedefDeclaration shift to state 671
-- On typeRef shift to state 630
-- On typeOrVoid shift to state 462
-- On typeName shift to state 138
-- On typeDeclaration shift to state 672
-- On tupleType shift to state 128
-- On topDeclarationList shift to state 976
-- On topDeclaration shift to state 674
-- On structTypeDeclaration shift to state 371
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parserTypeDeclaration shift to state 676
-- On parserDeclaration shift to state 810
-- On packageTypeDeclaration shift to state 811
-- On p4program shift to state 978
-- On nonempty_list_aux(annotation) shift to state 325
-- On matchKindDeclaration shift to state 814
-- On instantiation shift to state 815
-- On headerUnionDeclaration shift to state 372
-- On headerTypeDeclaration shift to state 373
-- On headerStackType shift to state 142
-- On functionPrototype shift to state 633
-- On functionDeclaration shift to state 816
-- On externDeclaration shift to state 817
-- On errorDeclaration shift to state 818
-- On enumDeclaration shift to state 374
-- On dotPrefix shift to state 143
-- On derivedTypeDeclaration shift to state 819
-- On controlTypeDeclaration shift to state 820
-- On controlDeclaration shift to state 930
-- On constantDeclaration shift to state 931
-- On baseType shift to state 146
-- On annotations shift to state 932
-- On annotation shift to state 331
-- On actionDeclaration shift to state 975
-- On END reduce production topDeclarationList ->

State 1:
typeOrVoid -> VOID . [ TYPE STATE NAME KEY ENTRIES APPLY ACTIONS ]
-- On TYPE reduce production typeOrVoid -> VOID
-- On STATE reduce production typeOrVoid -> VOID
-- On NAME reduce production typeOrVoid -> VOID
-- On KEY reduce production typeOrVoid -> VOID
-- On ENTRIES reduce production typeOrVoid -> VOID
-- On APPLY reduce production typeOrVoid -> VOID
-- On ACTIONS reduce production typeOrVoid -> VOID

State 2:
baseType -> VARBIT . L_ANGLE INTEGER R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
baseType -> VARBIT . L_ANGLE L_PAREN expression R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On L_ANGLE shift to state 3

State 3:
baseType -> VARBIT L_ANGLE . INTEGER R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
baseType -> VARBIT L_ANGLE . L_PAREN expression R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On L_PAREN shift to state 4
-- On INTEGER shift to state 198

State 4:
baseType -> VARBIT L_ANGLE L_PAREN . expression R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 195
-- On dotPrefix shift to state 91

State 5:
nonTypeName -> TYPE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production nonTypeName -> TYPE
-- On VARBIT reduce production nonTypeName -> TYPE
-- On VALUESET reduce production nonTypeName -> TYPE
-- On TYPEDEF reduce production nonTypeName -> TYPE
-- On TYPE reduce production nonTypeName -> TYPE
-- On TUPLE reduce production nonTypeName -> TYPE
-- On TRUE reduce production nonTypeName -> TYPE
-- On TRANSITION reduce production nonTypeName -> TYPE
-- On TABLE reduce production nonTypeName -> TYPE
-- On SWITCH reduce production nonTypeName -> TYPE
-- On STRUCT reduce production nonTypeName -> TYPE
-- On STRING_LITERAL reduce production nonTypeName -> TYPE
-- On STRING reduce production nonTypeName -> TYPE
-- On STATE reduce production nonTypeName -> TYPE
-- On SHL reduce production nonTypeName -> TYPE
-- On SEMICOLON reduce production nonTypeName -> TYPE
-- On SELECT reduce production nonTypeName -> TYPE
-- On R_PAREN reduce production nonTypeName -> TYPE
-- On R_BRACKET reduce production nonTypeName -> TYPE
-- On R_BRACE reduce production nonTypeName -> TYPE
-- On R_ANGLE reduce production nonTypeName -> TYPE
-- On RETURN reduce production nonTypeName -> TYPE
-- On RANGE reduce production nonTypeName -> TYPE
-- On QUESTION reduce production nonTypeName -> TYPE
-- On PRAGMA_END reduce production nonTypeName -> TYPE
-- On PRAGMA reduce production nonTypeName -> TYPE
-- On PLUS_SAT reduce production nonTypeName -> TYPE
-- On PLUSPLUS reduce production nonTypeName -> TYPE
-- On PLUS reduce production nonTypeName -> TYPE
-- On PARSER reduce production nonTypeName -> TYPE
-- On PACKAGE reduce production nonTypeName -> TYPE
-- On OUT reduce production nonTypeName -> TYPE
-- On OR reduce production nonTypeName -> TYPE
-- On NOT reduce production nonTypeName -> TYPE
-- On NE reduce production nonTypeName -> TYPE
-- On NAME reduce production nonTypeName -> TYPE
-- On MUL reduce production nonTypeName -> TYPE
-- On MOD reduce production nonTypeName -> TYPE
-- On MINUS_SAT reduce production nonTypeName -> TYPE
-- On MINUS reduce production nonTypeName -> TYPE
-- On MATCH_KIND reduce production nonTypeName -> TYPE
-- On MASK reduce production nonTypeName -> TYPE
-- On L_PAREN reduce production nonTypeName -> TYPE
-- On L_BRACKET reduce production nonTypeName -> TYPE
-- On L_BRACE reduce production nonTypeName -> TYPE
-- On L_ANGLE reduce production nonTypeName -> TYPE
-- On LE reduce production nonTypeName -> TYPE
-- On KEY reduce production nonTypeName -> TYPE
-- On INTEGER reduce production nonTypeName -> TYPE
-- On INT reduce production nonTypeName -> TYPE
-- On INOUT reduce production nonTypeName -> TYPE
-- On IN reduce production nonTypeName -> TYPE
-- On IF reduce production nonTypeName -> TYPE
-- On HEADER_UNION reduce production nonTypeName -> TYPE
-- On HEADER reduce production nonTypeName -> TYPE
-- On GE reduce production nonTypeName -> TYPE
-- On FALSE reduce production nonTypeName -> TYPE
-- On EXTERN reduce production nonTypeName -> TYPE
-- On EXIT reduce production nonTypeName -> TYPE
-- On ERROR reduce production nonTypeName -> TYPE
-- On EQ reduce production nonTypeName -> TYPE
-- On ENUM reduce production nonTypeName -> TYPE
-- On ENTRIES reduce production nonTypeName -> TYPE
-- On ELSE reduce production nonTypeName -> TYPE
-- On DOT reduce production nonTypeName -> TYPE
-- On DONTCARE reduce production nonTypeName -> TYPE
-- On DIV reduce production nonTypeName -> TYPE
-- On DEFAULT reduce production nonTypeName -> TYPE
-- On CONTROL reduce production nonTypeName -> TYPE
-- On CONST reduce production nonTypeName -> TYPE
-- On COMPLEMENT reduce production nonTypeName -> TYPE
-- On COMMA reduce production nonTypeName -> TYPE
-- On COLON reduce production nonTypeName -> TYPE
-- On BOOL reduce production nonTypeName -> TYPE
-- On BIT_XOR reduce production nonTypeName -> TYPE
-- On BIT_OR reduce production nonTypeName -> TYPE
-- On BIT_AND reduce production nonTypeName -> TYPE
-- On BIT reduce production nonTypeName -> TYPE
-- On AT reduce production nonTypeName -> TYPE
-- On ASSIGN reduce production nonTypeName -> TYPE
-- On APPLY reduce production nonTypeName -> TYPE
-- On AND reduce production nonTypeName -> TYPE
-- On ACTIONS reduce production nonTypeName -> TYPE
-- On ACTION reduce production nonTypeName -> TYPE
-- On ABSTRACT reduce production nonTypeName -> TYPE

State 6:
expression -> TRUE . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> TRUE
-- On SEMICOLON reduce production expression -> TRUE
-- On R_PAREN reduce production expression -> TRUE
-- On R_BRACKET reduce production expression -> TRUE
-- On R_BRACE reduce production expression -> TRUE
-- On R_ANGLE reduce production expression -> TRUE
-- On RANGE reduce production expression -> TRUE
-- On QUESTION reduce production expression -> TRUE
-- On PLUS_SAT reduce production expression -> TRUE
-- On PLUSPLUS reduce production expression -> TRUE
-- On PLUS reduce production expression -> TRUE
-- On OR reduce production expression -> TRUE
-- On NE reduce production expression -> TRUE
-- On MUL reduce production expression -> TRUE
-- On MOD reduce production expression -> TRUE
-- On MINUS_SAT reduce production expression -> TRUE
-- On MINUS reduce production expression -> TRUE
-- On MASK reduce production expression -> TRUE
-- On L_PAREN reduce production expression -> TRUE
-- On L_BRACKET reduce production expression -> TRUE
-- On L_ANGLE reduce production expression -> TRUE
-- On LE reduce production expression -> TRUE
-- On GE reduce production expression -> TRUE
-- On EQ reduce production expression -> TRUE
-- On DOT reduce production expression -> TRUE
-- On DIV reduce production expression -> TRUE
-- On COMMA reduce production expression -> TRUE
-- On COLON reduce production expression -> TRUE
-- On BIT_XOR reduce production expression -> TRUE
-- On BIT_OR reduce production expression -> TRUE
-- On BIT_AND reduce production expression -> TRUE
-- On AND reduce production expression -> TRUE

State 7:
expression -> STRING_LITERAL . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> STRING_LITERAL
-- On SEMICOLON reduce production expression -> STRING_LITERAL
-- On R_PAREN reduce production expression -> STRING_LITERAL
-- On R_BRACKET reduce production expression -> STRING_LITERAL
-- On R_BRACE reduce production expression -> STRING_LITERAL
-- On R_ANGLE reduce production expression -> STRING_LITERAL
-- On RANGE reduce production expression -> STRING_LITERAL
-- On QUESTION reduce production expression -> STRING_LITERAL
-- On PLUS_SAT reduce production expression -> STRING_LITERAL
-- On PLUSPLUS reduce production expression -> STRING_LITERAL
-- On PLUS reduce production expression -> STRING_LITERAL
-- On OR reduce production expression -> STRING_LITERAL
-- On NE reduce production expression -> STRING_LITERAL
-- On MUL reduce production expression -> STRING_LITERAL
-- On MOD reduce production expression -> STRING_LITERAL
-- On MINUS_SAT reduce production expression -> STRING_LITERAL
-- On MINUS reduce production expression -> STRING_LITERAL
-- On MASK reduce production expression -> STRING_LITERAL
-- On L_PAREN reduce production expression -> STRING_LITERAL
-- On L_BRACKET reduce production expression -> STRING_LITERAL
-- On L_ANGLE reduce production expression -> STRING_LITERAL
-- On LE reduce production expression -> STRING_LITERAL
-- On GE reduce production expression -> STRING_LITERAL
-- On EQ reduce production expression -> STRING_LITERAL
-- On DOT reduce production expression -> STRING_LITERAL
-- On DIV reduce production expression -> STRING_LITERAL
-- On COMMA reduce production expression -> STRING_LITERAL
-- On COLON reduce production expression -> STRING_LITERAL
-- On BIT_XOR reduce production expression -> STRING_LITERAL
-- On BIT_OR reduce production expression -> STRING_LITERAL
-- On BIT_AND reduce production expression -> STRING_LITERAL
-- On AND reduce production expression -> STRING_LITERAL

State 8:
nonTypeName -> STATE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production nonTypeName -> STATE
-- On VARBIT reduce production nonTypeName -> STATE
-- On VALUESET reduce production nonTypeName -> STATE
-- On TYPEDEF reduce production nonTypeName -> STATE
-- On TYPE reduce production nonTypeName -> STATE
-- On TUPLE reduce production nonTypeName -> STATE
-- On TRUE reduce production nonTypeName -> STATE
-- On TRANSITION reduce production nonTypeName -> STATE
-- On TABLE reduce production nonTypeName -> STATE
-- On SWITCH reduce production nonTypeName -> STATE
-- On STRUCT reduce production nonTypeName -> STATE
-- On STRING_LITERAL reduce production nonTypeName -> STATE
-- On STRING reduce production nonTypeName -> STATE
-- On STATE reduce production nonTypeName -> STATE
-- On SHL reduce production nonTypeName -> STATE
-- On SEMICOLON reduce production nonTypeName -> STATE
-- On SELECT reduce production nonTypeName -> STATE
-- On R_PAREN reduce production nonTypeName -> STATE
-- On R_BRACKET reduce production nonTypeName -> STATE
-- On R_BRACE reduce production nonTypeName -> STATE
-- On R_ANGLE reduce production nonTypeName -> STATE
-- On RETURN reduce production nonTypeName -> STATE
-- On RANGE reduce production nonTypeName -> STATE
-- On QUESTION reduce production nonTypeName -> STATE
-- On PRAGMA_END reduce production nonTypeName -> STATE
-- On PRAGMA reduce production nonTypeName -> STATE
-- On PLUS_SAT reduce production nonTypeName -> STATE
-- On PLUSPLUS reduce production nonTypeName -> STATE
-- On PLUS reduce production nonTypeName -> STATE
-- On PARSER reduce production nonTypeName -> STATE
-- On PACKAGE reduce production nonTypeName -> STATE
-- On OUT reduce production nonTypeName -> STATE
-- On OR reduce production nonTypeName -> STATE
-- On NOT reduce production nonTypeName -> STATE
-- On NE reduce production nonTypeName -> STATE
-- On NAME reduce production nonTypeName -> STATE
-- On MUL reduce production nonTypeName -> STATE
-- On MOD reduce production nonTypeName -> STATE
-- On MINUS_SAT reduce production nonTypeName -> STATE
-- On MINUS reduce production nonTypeName -> STATE
-- On MATCH_KIND reduce production nonTypeName -> STATE
-- On MASK reduce production nonTypeName -> STATE
-- On L_PAREN reduce production nonTypeName -> STATE
-- On L_BRACKET reduce production nonTypeName -> STATE
-- On L_BRACE reduce production nonTypeName -> STATE
-- On L_ANGLE reduce production nonTypeName -> STATE
-- On LE reduce production nonTypeName -> STATE
-- On KEY reduce production nonTypeName -> STATE
-- On INTEGER reduce production nonTypeName -> STATE
-- On INT reduce production nonTypeName -> STATE
-- On INOUT reduce production nonTypeName -> STATE
-- On IN reduce production nonTypeName -> STATE
-- On IF reduce production nonTypeName -> STATE
-- On HEADER_UNION reduce production nonTypeName -> STATE
-- On HEADER reduce production nonTypeName -> STATE
-- On GE reduce production nonTypeName -> STATE
-- On FALSE reduce production nonTypeName -> STATE
-- On EXTERN reduce production nonTypeName -> STATE
-- On EXIT reduce production nonTypeName -> STATE
-- On ERROR reduce production nonTypeName -> STATE
-- On EQ reduce production nonTypeName -> STATE
-- On ENUM reduce production nonTypeName -> STATE
-- On ENTRIES reduce production nonTypeName -> STATE
-- On ELSE reduce production nonTypeName -> STATE
-- On DOT reduce production nonTypeName -> STATE
-- On DONTCARE reduce production nonTypeName -> STATE
-- On DIV reduce production nonTypeName -> STATE
-- On DEFAULT reduce production nonTypeName -> STATE
-- On CONTROL reduce production nonTypeName -> STATE
-- On CONST reduce production nonTypeName -> STATE
-- On COMPLEMENT reduce production nonTypeName -> STATE
-- On COMMA reduce production nonTypeName -> STATE
-- On COLON reduce production nonTypeName -> STATE
-- On BOOL reduce production nonTypeName -> STATE
-- On BIT_XOR reduce production nonTypeName -> STATE
-- On BIT_OR reduce production nonTypeName -> STATE
-- On BIT_AND reduce production nonTypeName -> STATE
-- On BIT reduce production nonTypeName -> STATE
-- On AT reduce production nonTypeName -> STATE
-- On ASSIGN reduce production nonTypeName -> STATE
-- On APPLY reduce production nonTypeName -> STATE
-- On AND reduce production nonTypeName -> STATE
-- On ACTIONS reduce production nonTypeName -> STATE
-- On ACTION reduce production nonTypeName -> STATE
-- On ABSTRACT reduce production nonTypeName -> STATE

State 9:
expression -> PLUS . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 194
-- On dotPrefix shift to state 91

State 10:
expression -> NOT . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 193
-- On dotPrefix shift to state 91

State 11:
prefixedType -> NAME . TYPENAME [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN L_BRACKET L_ANGLE KEY ENTRIES DOT COMMA APPLY ACTIONS ]
varName -> NAME . IDENTIFIER [ TYPE STATE SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE NAME MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY GE EQ ENTRIES DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND ASSIGN APPLY AND ACTIONS ]
-- On TYPENAME shift to state 12
-- On IDENTIFIER shift to state 13

State 12:
prefixedType -> NAME TYPENAME . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN L_BRACKET L_ANGLE KEY ENTRIES DOT COMMA APPLY ACTIONS ]
-- On TYPE reduce production prefixedType -> NAME TYPENAME
-- On STATE reduce production prefixedType -> NAME TYPENAME
-- On R_PAREN reduce production prefixedType -> NAME TYPENAME
-- On R_ANGLE reduce production prefixedType -> NAME TYPENAME
-- On NAME reduce production prefixedType -> NAME TYPENAME
-- On L_PAREN reduce production prefixedType -> NAME TYPENAME
-- On L_BRACKET reduce production prefixedType -> NAME TYPENAME
-- On L_ANGLE reduce production prefixedType -> NAME TYPENAME
-- On KEY reduce production prefixedType -> NAME TYPENAME
-- On ENTRIES reduce production prefixedType -> NAME TYPENAME
-- On DOT reduce production prefixedType -> NAME TYPENAME
-- On COMMA reduce production prefixedType -> NAME TYPENAME
-- On APPLY reduce production prefixedType -> NAME TYPENAME
-- On ACTIONS reduce production prefixedType -> NAME TYPENAME

State 13:
varName -> NAME IDENTIFIER . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production varName -> NAME IDENTIFIER
-- On VARBIT reduce production varName -> NAME IDENTIFIER
-- On VALUESET reduce production varName -> NAME IDENTIFIER
-- On TYPEDEF reduce production varName -> NAME IDENTIFIER
-- On TYPE reduce production varName -> NAME IDENTIFIER
-- On TUPLE reduce production varName -> NAME IDENTIFIER
-- On TRUE reduce production varName -> NAME IDENTIFIER
-- On TRANSITION reduce production varName -> NAME IDENTIFIER
-- On TABLE reduce production varName -> NAME IDENTIFIER
-- On SWITCH reduce production varName -> NAME IDENTIFIER
-- On STRUCT reduce production varName -> NAME IDENTIFIER
-- On STRING_LITERAL reduce production varName -> NAME IDENTIFIER
-- On STRING reduce production varName -> NAME IDENTIFIER
-- On STATE reduce production varName -> NAME IDENTIFIER
-- On SHL reduce production varName -> NAME IDENTIFIER
-- On SEMICOLON reduce production varName -> NAME IDENTIFIER
-- On SELECT reduce production varName -> NAME IDENTIFIER
-- On R_PAREN reduce production varName -> NAME IDENTIFIER
-- On R_BRACKET reduce production varName -> NAME IDENTIFIER
-- On R_BRACE reduce production varName -> NAME IDENTIFIER
-- On R_ANGLE reduce production varName -> NAME IDENTIFIER
-- On RETURN reduce production varName -> NAME IDENTIFIER
-- On RANGE reduce production varName -> NAME IDENTIFIER
-- On QUESTION reduce production varName -> NAME IDENTIFIER
-- On PRAGMA_END reduce production varName -> NAME IDENTIFIER
-- On PRAGMA reduce production varName -> NAME IDENTIFIER
-- On PLUS_SAT reduce production varName -> NAME IDENTIFIER
-- On PLUSPLUS reduce production varName -> NAME IDENTIFIER
-- On PLUS reduce production varName -> NAME IDENTIFIER
-- On PARSER reduce production varName -> NAME IDENTIFIER
-- On PACKAGE reduce production varName -> NAME IDENTIFIER
-- On OUT reduce production varName -> NAME IDENTIFIER
-- On OR reduce production varName -> NAME IDENTIFIER
-- On NOT reduce production varName -> NAME IDENTIFIER
-- On NE reduce production varName -> NAME IDENTIFIER
-- On NAME reduce production varName -> NAME IDENTIFIER
-- On MUL reduce production varName -> NAME IDENTIFIER
-- On MOD reduce production varName -> NAME IDENTIFIER
-- On MINUS_SAT reduce production varName -> NAME IDENTIFIER
-- On MINUS reduce production varName -> NAME IDENTIFIER
-- On MATCH_KIND reduce production varName -> NAME IDENTIFIER
-- On MASK reduce production varName -> NAME IDENTIFIER
-- On L_PAREN reduce production varName -> NAME IDENTIFIER
-- On L_BRACKET reduce production varName -> NAME IDENTIFIER
-- On L_BRACE reduce production varName -> NAME IDENTIFIER
-- On L_ANGLE reduce production varName -> NAME IDENTIFIER
-- On LE reduce production varName -> NAME IDENTIFIER
-- On KEY reduce production varName -> NAME IDENTIFIER
-- On INTEGER reduce production varName -> NAME IDENTIFIER
-- On INT reduce production varName -> NAME IDENTIFIER
-- On INOUT reduce production varName -> NAME IDENTIFIER
-- On IN reduce production varName -> NAME IDENTIFIER
-- On IF reduce production varName -> NAME IDENTIFIER
-- On HEADER_UNION reduce production varName -> NAME IDENTIFIER
-- On HEADER reduce production varName -> NAME IDENTIFIER
-- On GE reduce production varName -> NAME IDENTIFIER
-- On FALSE reduce production varName -> NAME IDENTIFIER
-- On EXTERN reduce production varName -> NAME IDENTIFIER
-- On EXIT reduce production varName -> NAME IDENTIFIER
-- On ERROR reduce production varName -> NAME IDENTIFIER
-- On EQ reduce production varName -> NAME IDENTIFIER
-- On ENUM reduce production varName -> NAME IDENTIFIER
-- On ENTRIES reduce production varName -> NAME IDENTIFIER
-- On ELSE reduce production varName -> NAME IDENTIFIER
-- On DOT reduce production varName -> NAME IDENTIFIER
-- On DONTCARE reduce production varName -> NAME IDENTIFIER
-- On DIV reduce production varName -> NAME IDENTIFIER
-- On DEFAULT reduce production varName -> NAME IDENTIFIER
-- On CONTROL reduce production varName -> NAME IDENTIFIER
-- On CONST reduce production varName -> NAME IDENTIFIER
-- On COMPLEMENT reduce production varName -> NAME IDENTIFIER
-- On COMMA reduce production varName -> NAME IDENTIFIER
-- On COLON reduce production varName -> NAME IDENTIFIER
-- On BOOL reduce production varName -> NAME IDENTIFIER
-- On BIT_XOR reduce production varName -> NAME IDENTIFIER
-- On BIT_OR reduce production varName -> NAME IDENTIFIER
-- On BIT_AND reduce production varName -> NAME IDENTIFIER
-- On BIT reduce production varName -> NAME IDENTIFIER
-- On AT reduce production varName -> NAME IDENTIFIER
-- On ASSIGN reduce production varName -> NAME IDENTIFIER
-- On APPLY reduce production varName -> NAME IDENTIFIER
-- On AND reduce production varName -> NAME IDENTIFIER
-- On ACTIONS reduce production varName -> NAME IDENTIFIER
-- On ACTION reduce production varName -> NAME IDENTIFIER
-- On ABSTRACT reduce production varName -> NAME IDENTIFIER

State 14:
expression -> MINUS . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 192
-- On dotPrefix shift to state 91

State 15:
expression -> L_PAREN . expression R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> L_PAREN . typeRef R_PAREN expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On INT shift to state 20
-- On FALSE shift to state 25
-- On ERROR shift to state 107
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeRef shift to state 187
-- On typeName shift to state 110
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 129
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On headerStackType shift to state 142
-- On expression shift to state 190
-- On dotPrefix shift to state 91
-- On baseType shift to state 146

State 16:
tupleType -> TUPLE . L_ANGLE typeArgumentList R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On L_ANGLE shift to state 17

State 17:
tupleType -> TUPLE L_ANGLE . typeArgumentList R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On NAME shift to state 11
-- On KEY shift to state 19
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 47
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeRef shift to state 137
-- On typeName shift to state 138
-- On typeArgumentList shift to state 185
-- On typeArg shift to state 167
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 140
-- On separated_list_aux(COMMA,typeArg) shift to state 168
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,typeArg) shift to state 171
-- On nonTypeName shift to state 141
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146
-- On R_ANGLE reduce production separated_list_aux(COMMA,typeArg) ->
-- On COMMA reduce production separated_list_aux(COMMA,typeArg) ->

State 18:
baseType -> STRING . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production baseType -> STRING
-- On STATE reduce production baseType -> STRING
-- On R_PAREN reduce production baseType -> STRING
-- On R_ANGLE reduce production baseType -> STRING
-- On NAME reduce production baseType -> STRING
-- On L_PAREN reduce production baseType -> STRING
-- On KEY reduce production baseType -> STRING
-- On ENTRIES reduce production baseType -> STRING
-- On COMMA reduce production baseType -> STRING
-- On APPLY reduce production baseType -> STRING
-- On ACTIONS reduce production baseType -> STRING

State 19:
tableKwName -> KEY . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production tableKwName -> KEY
-- On VARBIT reduce production tableKwName -> KEY
-- On VALUESET reduce production tableKwName -> KEY
-- On TYPEDEF reduce production tableKwName -> KEY
-- On TYPE reduce production tableKwName -> KEY
-- On TUPLE reduce production tableKwName -> KEY
-- On TRUE reduce production tableKwName -> KEY
-- On TRANSITION reduce production tableKwName -> KEY
-- On TABLE reduce production tableKwName -> KEY
-- On SWITCH reduce production tableKwName -> KEY
-- On STRUCT reduce production tableKwName -> KEY
-- On STRING_LITERAL reduce production tableKwName -> KEY
-- On STRING reduce production tableKwName -> KEY
-- On STATE reduce production tableKwName -> KEY
-- On SHL reduce production tableKwName -> KEY
-- On SEMICOLON reduce production tableKwName -> KEY
-- On SELECT reduce production tableKwName -> KEY
-- On R_PAREN reduce production tableKwName -> KEY
-- On R_BRACKET reduce production tableKwName -> KEY
-- On R_BRACE reduce production tableKwName -> KEY
-- On R_ANGLE reduce production tableKwName -> KEY
-- On RETURN reduce production tableKwName -> KEY
-- On RANGE reduce production tableKwName -> KEY
-- On QUESTION reduce production tableKwName -> KEY
-- On PRAGMA_END reduce production tableKwName -> KEY
-- On PRAGMA reduce production tableKwName -> KEY
-- On PLUS_SAT reduce production tableKwName -> KEY
-- On PLUSPLUS reduce production tableKwName -> KEY
-- On PLUS reduce production tableKwName -> KEY
-- On PARSER reduce production tableKwName -> KEY
-- On PACKAGE reduce production tableKwName -> KEY
-- On OUT reduce production tableKwName -> KEY
-- On OR reduce production tableKwName -> KEY
-- On NOT reduce production tableKwName -> KEY
-- On NE reduce production tableKwName -> KEY
-- On NAME reduce production tableKwName -> KEY
-- On MUL reduce production tableKwName -> KEY
-- On MOD reduce production tableKwName -> KEY
-- On MINUS_SAT reduce production tableKwName -> KEY
-- On MINUS reduce production tableKwName -> KEY
-- On MATCH_KIND reduce production tableKwName -> KEY
-- On MASK reduce production tableKwName -> KEY
-- On L_PAREN reduce production tableKwName -> KEY
-- On L_BRACKET reduce production tableKwName -> KEY
-- On L_BRACE reduce production tableKwName -> KEY
-- On L_ANGLE reduce production tableKwName -> KEY
-- On LE reduce production tableKwName -> KEY
-- On KEY reduce production tableKwName -> KEY
-- On INTEGER reduce production tableKwName -> KEY
-- On INT reduce production tableKwName -> KEY
-- On INOUT reduce production tableKwName -> KEY
-- On IN reduce production tableKwName -> KEY
-- On IF reduce production tableKwName -> KEY
-- On HEADER_UNION reduce production tableKwName -> KEY
-- On HEADER reduce production tableKwName -> KEY
-- On GE reduce production tableKwName -> KEY
-- On FALSE reduce production tableKwName -> KEY
-- On EXTERN reduce production tableKwName -> KEY
-- On EXIT reduce production tableKwName -> KEY
-- On ERROR reduce production tableKwName -> KEY
-- On EQ reduce production tableKwName -> KEY
-- On ENUM reduce production tableKwName -> KEY
-- On ENTRIES reduce production tableKwName -> KEY
-- On ELSE reduce production tableKwName -> KEY
-- On DOT reduce production tableKwName -> KEY
-- On DONTCARE reduce production tableKwName -> KEY
-- On DIV reduce production tableKwName -> KEY
-- On DEFAULT reduce production tableKwName -> KEY
-- On CONTROL reduce production tableKwName -> KEY
-- On CONST reduce production tableKwName -> KEY
-- On COMPLEMENT reduce production tableKwName -> KEY
-- On COMMA reduce production tableKwName -> KEY
-- On COLON reduce production tableKwName -> KEY
-- On BOOL reduce production tableKwName -> KEY
-- On BIT_XOR reduce production tableKwName -> KEY
-- On BIT_OR reduce production tableKwName -> KEY
-- On BIT_AND reduce production tableKwName -> KEY
-- On BIT reduce production tableKwName -> KEY
-- On AT reduce production tableKwName -> KEY
-- On ASSIGN reduce production tableKwName -> KEY
-- On APPLY reduce production tableKwName -> KEY
-- On AND reduce production tableKwName -> KEY
-- On ACTIONS reduce production tableKwName -> KEY
-- On ACTION reduce production tableKwName -> KEY
-- On ABSTRACT reduce production tableKwName -> KEY

State 20:
baseType -> INT . L_ANGLE INTEGER R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
baseType -> INT . L_ANGLE L_PAREN expression R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
baseType -> INT . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On L_ANGLE shift to state 21
-- On TYPE reduce production baseType -> INT
-- On STATE reduce production baseType -> INT
-- On R_PAREN reduce production baseType -> INT
-- On R_ANGLE reduce production baseType -> INT
-- On NAME reduce production baseType -> INT
-- On L_PAREN reduce production baseType -> INT
-- On KEY reduce production baseType -> INT
-- On ENTRIES reduce production baseType -> INT
-- On COMMA reduce production baseType -> INT
-- On APPLY reduce production baseType -> INT
-- On ACTIONS reduce production baseType -> INT

State 21:
baseType -> INT L_ANGLE . INTEGER R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
baseType -> INT L_ANGLE . L_PAREN expression R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On L_PAREN shift to state 22
-- On INTEGER shift to state 183

State 22:
baseType -> INT L_ANGLE L_PAREN . expression R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 180
-- On dotPrefix shift to state 91

State 23:
expression -> L_BRACE . expressionList R_BRACE [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,expression) shift to state 173
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,expression) shift to state 176
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expressionList shift to state 177
-- On expression shift to state 179
-- On dotPrefix shift to state 91
-- On R_BRACE reduce production separated_list_aux(COMMA,expression) ->
-- On COMMA reduce production separated_list_aux(COMMA,expression) ->

State 24:
expression -> INTEGER . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> INTEGER
-- On SEMICOLON reduce production expression -> INTEGER
-- On R_PAREN reduce production expression -> INTEGER
-- On R_BRACKET reduce production expression -> INTEGER
-- On R_BRACE reduce production expression -> INTEGER
-- On R_ANGLE reduce production expression -> INTEGER
-- On RANGE reduce production expression -> INTEGER
-- On QUESTION reduce production expression -> INTEGER
-- On PLUS_SAT reduce production expression -> INTEGER
-- On PLUSPLUS reduce production expression -> INTEGER
-- On PLUS reduce production expression -> INTEGER
-- On OR reduce production expression -> INTEGER
-- On NE reduce production expression -> INTEGER
-- On MUL reduce production expression -> INTEGER
-- On MOD reduce production expression -> INTEGER
-- On MINUS_SAT reduce production expression -> INTEGER
-- On MINUS reduce production expression -> INTEGER
-- On MASK reduce production expression -> INTEGER
-- On L_PAREN reduce production expression -> INTEGER
-- On L_BRACKET reduce production expression -> INTEGER
-- On L_ANGLE reduce production expression -> INTEGER
-- On LE reduce production expression -> INTEGER
-- On GE reduce production expression -> INTEGER
-- On EQ reduce production expression -> INTEGER
-- On DOT reduce production expression -> INTEGER
-- On DIV reduce production expression -> INTEGER
-- On COMMA reduce production expression -> INTEGER
-- On COLON reduce production expression -> INTEGER
-- On BIT_XOR reduce production expression -> INTEGER
-- On BIT_OR reduce production expression -> INTEGER
-- On BIT_AND reduce production expression -> INTEGER
-- On AND reduce production expression -> INTEGER

State 25:
expression -> FALSE . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> FALSE
-- On SEMICOLON reduce production expression -> FALSE
-- On R_PAREN reduce production expression -> FALSE
-- On R_BRACKET reduce production expression -> FALSE
-- On R_BRACE reduce production expression -> FALSE
-- On R_ANGLE reduce production expression -> FALSE
-- On RANGE reduce production expression -> FALSE
-- On QUESTION reduce production expression -> FALSE
-- On PLUS_SAT reduce production expression -> FALSE
-- On PLUSPLUS reduce production expression -> FALSE
-- On PLUS reduce production expression -> FALSE
-- On OR reduce production expression -> FALSE
-- On NE reduce production expression -> FALSE
-- On MUL reduce production expression -> FALSE
-- On MOD reduce production expression -> FALSE
-- On MINUS_SAT reduce production expression -> FALSE
-- On MINUS reduce production expression -> FALSE
-- On MASK reduce production expression -> FALSE
-- On L_PAREN reduce production expression -> FALSE
-- On L_BRACKET reduce production expression -> FALSE
-- On L_ANGLE reduce production expression -> FALSE
-- On LE reduce production expression -> FALSE
-- On GE reduce production expression -> FALSE
-- On EQ reduce production expression -> FALSE
-- On DOT reduce production expression -> FALSE
-- On DIV reduce production expression -> FALSE
-- On COMMA reduce production expression -> FALSE
-- On COLON reduce production expression -> FALSE
-- On BIT_XOR reduce production expression -> FALSE
-- On BIT_OR reduce production expression -> FALSE
-- On BIT_AND reduce production expression -> FALSE
-- On AND reduce production expression -> FALSE

State 26:
expression -> ERROR . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On DOT shift to state 27

State 27:
expression -> ERROR DOT . member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 36
-- On member shift to state 37

State 28:
name -> NAME . TYPENAME [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
varName -> NAME . IDENTIFIER [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On TYPENAME shift to state 29
-- On IDENTIFIER shift to state 13

State 29:
name -> NAME TYPENAME . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production name -> NAME TYPENAME
-- On VARBIT reduce production name -> NAME TYPENAME
-- On VALUESET reduce production name -> NAME TYPENAME
-- On TYPEDEF reduce production name -> NAME TYPENAME
-- On TYPE reduce production name -> NAME TYPENAME
-- On TUPLE reduce production name -> NAME TYPENAME
-- On TRUE reduce production name -> NAME TYPENAME
-- On TRANSITION reduce production name -> NAME TYPENAME
-- On TABLE reduce production name -> NAME TYPENAME
-- On SWITCH reduce production name -> NAME TYPENAME
-- On STRUCT reduce production name -> NAME TYPENAME
-- On STRING_LITERAL reduce production name -> NAME TYPENAME
-- On STRING reduce production name -> NAME TYPENAME
-- On STATE reduce production name -> NAME TYPENAME
-- On SHL reduce production name -> NAME TYPENAME
-- On SEMICOLON reduce production name -> NAME TYPENAME
-- On SELECT reduce production name -> NAME TYPENAME
-- On R_PAREN reduce production name -> NAME TYPENAME
-- On R_BRACKET reduce production name -> NAME TYPENAME
-- On R_BRACE reduce production name -> NAME TYPENAME
-- On R_ANGLE reduce production name -> NAME TYPENAME
-- On RETURN reduce production name -> NAME TYPENAME
-- On RANGE reduce production name -> NAME TYPENAME
-- On QUESTION reduce production name -> NAME TYPENAME
-- On PRAGMA_END reduce production name -> NAME TYPENAME
-- On PRAGMA reduce production name -> NAME TYPENAME
-- On PLUS_SAT reduce production name -> NAME TYPENAME
-- On PLUSPLUS reduce production name -> NAME TYPENAME
-- On PLUS reduce production name -> NAME TYPENAME
-- On PARSER reduce production name -> NAME TYPENAME
-- On PACKAGE reduce production name -> NAME TYPENAME
-- On OUT reduce production name -> NAME TYPENAME
-- On OR reduce production name -> NAME TYPENAME
-- On NOT reduce production name -> NAME TYPENAME
-- On NE reduce production name -> NAME TYPENAME
-- On NAME reduce production name -> NAME TYPENAME
-- On MUL reduce production name -> NAME TYPENAME
-- On MOD reduce production name -> NAME TYPENAME
-- On MINUS_SAT reduce production name -> NAME TYPENAME
-- On MINUS reduce production name -> NAME TYPENAME
-- On MATCH_KIND reduce production name -> NAME TYPENAME
-- On MASK reduce production name -> NAME TYPENAME
-- On L_PAREN reduce production name -> NAME TYPENAME
-- On L_BRACKET reduce production name -> NAME TYPENAME
-- On L_BRACE reduce production name -> NAME TYPENAME
-- On L_ANGLE reduce production name -> NAME TYPENAME
-- On LE reduce production name -> NAME TYPENAME
-- On KEY reduce production name -> NAME TYPENAME
-- On INTEGER reduce production name -> NAME TYPENAME
-- On INT reduce production name -> NAME TYPENAME
-- On INOUT reduce production name -> NAME TYPENAME
-- On IN reduce production name -> NAME TYPENAME
-- On IF reduce production name -> NAME TYPENAME
-- On HEADER_UNION reduce production name -> NAME TYPENAME
-- On HEADER reduce production name -> NAME TYPENAME
-- On GE reduce production name -> NAME TYPENAME
-- On FALSE reduce production name -> NAME TYPENAME
-- On EXTERN reduce production name -> NAME TYPENAME
-- On EXIT reduce production name -> NAME TYPENAME
-- On ERROR reduce production name -> NAME TYPENAME
-- On EQ reduce production name -> NAME TYPENAME
-- On ENUM reduce production name -> NAME TYPENAME
-- On ENTRIES reduce production name -> NAME TYPENAME
-- On ELSE reduce production name -> NAME TYPENAME
-- On DOT reduce production name -> NAME TYPENAME
-- On DONTCARE reduce production name -> NAME TYPENAME
-- On DIV reduce production name -> NAME TYPENAME
-- On DEFAULT reduce production name -> NAME TYPENAME
-- On CONTROL reduce production name -> NAME TYPENAME
-- On CONST reduce production name -> NAME TYPENAME
-- On COMPLEMENT reduce production name -> NAME TYPENAME
-- On COMMA reduce production name -> NAME TYPENAME
-- On COLON reduce production name -> NAME TYPENAME
-- On BOOL reduce production name -> NAME TYPENAME
-- On BIT_XOR reduce production name -> NAME TYPENAME
-- On BIT_OR reduce production name -> NAME TYPENAME
-- On BIT_AND reduce production name -> NAME TYPENAME
-- On BIT reduce production name -> NAME TYPENAME
-- On AT reduce production name -> NAME TYPENAME
-- On ASSIGN reduce production name -> NAME TYPENAME
-- On APPLY reduce production name -> NAME TYPENAME
-- On AND reduce production name -> NAME TYPENAME
-- On ACTIONS reduce production name -> NAME TYPENAME
-- On ACTION reduce production name -> NAME TYPENAME
-- On ABSTRACT reduce production name -> NAME TYPENAME

State 30:
tableKwName -> ENTRIES . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production tableKwName -> ENTRIES
-- On VARBIT reduce production tableKwName -> ENTRIES
-- On VALUESET reduce production tableKwName -> ENTRIES
-- On TYPEDEF reduce production tableKwName -> ENTRIES
-- On TYPE reduce production tableKwName -> ENTRIES
-- On TUPLE reduce production tableKwName -> ENTRIES
-- On TRUE reduce production tableKwName -> ENTRIES
-- On TRANSITION reduce production tableKwName -> ENTRIES
-- On TABLE reduce production tableKwName -> ENTRIES
-- On SWITCH reduce production tableKwName -> ENTRIES
-- On STRUCT reduce production tableKwName -> ENTRIES
-- On STRING_LITERAL reduce production tableKwName -> ENTRIES
-- On STRING reduce production tableKwName -> ENTRIES
-- On STATE reduce production tableKwName -> ENTRIES
-- On SHL reduce production tableKwName -> ENTRIES
-- On SEMICOLON reduce production tableKwName -> ENTRIES
-- On SELECT reduce production tableKwName -> ENTRIES
-- On R_PAREN reduce production tableKwName -> ENTRIES
-- On R_BRACKET reduce production tableKwName -> ENTRIES
-- On R_BRACE reduce production tableKwName -> ENTRIES
-- On R_ANGLE reduce production tableKwName -> ENTRIES
-- On RETURN reduce production tableKwName -> ENTRIES
-- On RANGE reduce production tableKwName -> ENTRIES
-- On QUESTION reduce production tableKwName -> ENTRIES
-- On PRAGMA_END reduce production tableKwName -> ENTRIES
-- On PRAGMA reduce production tableKwName -> ENTRIES
-- On PLUS_SAT reduce production tableKwName -> ENTRIES
-- On PLUSPLUS reduce production tableKwName -> ENTRIES
-- On PLUS reduce production tableKwName -> ENTRIES
-- On PARSER reduce production tableKwName -> ENTRIES
-- On PACKAGE reduce production tableKwName -> ENTRIES
-- On OUT reduce production tableKwName -> ENTRIES
-- On OR reduce production tableKwName -> ENTRIES
-- On NOT reduce production tableKwName -> ENTRIES
-- On NE reduce production tableKwName -> ENTRIES
-- On NAME reduce production tableKwName -> ENTRIES
-- On MUL reduce production tableKwName -> ENTRIES
-- On MOD reduce production tableKwName -> ENTRIES
-- On MINUS_SAT reduce production tableKwName -> ENTRIES
-- On MINUS reduce production tableKwName -> ENTRIES
-- On MATCH_KIND reduce production tableKwName -> ENTRIES
-- On MASK reduce production tableKwName -> ENTRIES
-- On L_PAREN reduce production tableKwName -> ENTRIES
-- On L_BRACKET reduce production tableKwName -> ENTRIES
-- On L_BRACE reduce production tableKwName -> ENTRIES
-- On L_ANGLE reduce production tableKwName -> ENTRIES
-- On LE reduce production tableKwName -> ENTRIES
-- On KEY reduce production tableKwName -> ENTRIES
-- On INTEGER reduce production tableKwName -> ENTRIES
-- On INT reduce production tableKwName -> ENTRIES
-- On INOUT reduce production tableKwName -> ENTRIES
-- On IN reduce production tableKwName -> ENTRIES
-- On IF reduce production tableKwName -> ENTRIES
-- On HEADER_UNION reduce production tableKwName -> ENTRIES
-- On HEADER reduce production tableKwName -> ENTRIES
-- On GE reduce production tableKwName -> ENTRIES
-- On FALSE reduce production tableKwName -> ENTRIES
-- On EXTERN reduce production tableKwName -> ENTRIES
-- On EXIT reduce production tableKwName -> ENTRIES
-- On ERROR reduce production tableKwName -> ENTRIES
-- On EQ reduce production tableKwName -> ENTRIES
-- On ENUM reduce production tableKwName -> ENTRIES
-- On ENTRIES reduce production tableKwName -> ENTRIES
-- On ELSE reduce production tableKwName -> ENTRIES
-- On DOT reduce production tableKwName -> ENTRIES
-- On DONTCARE reduce production tableKwName -> ENTRIES
-- On DIV reduce production tableKwName -> ENTRIES
-- On DEFAULT reduce production tableKwName -> ENTRIES
-- On CONTROL reduce production tableKwName -> ENTRIES
-- On CONST reduce production tableKwName -> ENTRIES
-- On COMPLEMENT reduce production tableKwName -> ENTRIES
-- On COMMA reduce production tableKwName -> ENTRIES
-- On COLON reduce production tableKwName -> ENTRIES
-- On BOOL reduce production tableKwName -> ENTRIES
-- On BIT_XOR reduce production tableKwName -> ENTRIES
-- On BIT_OR reduce production tableKwName -> ENTRIES
-- On BIT_AND reduce production tableKwName -> ENTRIES
-- On BIT reduce production tableKwName -> ENTRIES
-- On AT reduce production tableKwName -> ENTRIES
-- On ASSIGN reduce production tableKwName -> ENTRIES
-- On APPLY reduce production tableKwName -> ENTRIES
-- On AND reduce production tableKwName -> ENTRIES
-- On ACTIONS reduce production tableKwName -> ENTRIES
-- On ACTION reduce production tableKwName -> ENTRIES
-- On ABSTRACT reduce production tableKwName -> ENTRIES

State 31:
nonTypeName -> APPLY . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production nonTypeName -> APPLY
-- On VARBIT reduce production nonTypeName -> APPLY
-- On VALUESET reduce production nonTypeName -> APPLY
-- On TYPEDEF reduce production nonTypeName -> APPLY
-- On TYPE reduce production nonTypeName -> APPLY
-- On TUPLE reduce production nonTypeName -> APPLY
-- On TRUE reduce production nonTypeName -> APPLY
-- On TRANSITION reduce production nonTypeName -> APPLY
-- On TABLE reduce production nonTypeName -> APPLY
-- On SWITCH reduce production nonTypeName -> APPLY
-- On STRUCT reduce production nonTypeName -> APPLY
-- On STRING_LITERAL reduce production nonTypeName -> APPLY
-- On STRING reduce production nonTypeName -> APPLY
-- On STATE reduce production nonTypeName -> APPLY
-- On SHL reduce production nonTypeName -> APPLY
-- On SEMICOLON reduce production nonTypeName -> APPLY
-- On SELECT reduce production nonTypeName -> APPLY
-- On R_PAREN reduce production nonTypeName -> APPLY
-- On R_BRACKET reduce production nonTypeName -> APPLY
-- On R_BRACE reduce production nonTypeName -> APPLY
-- On R_ANGLE reduce production nonTypeName -> APPLY
-- On RETURN reduce production nonTypeName -> APPLY
-- On RANGE reduce production nonTypeName -> APPLY
-- On QUESTION reduce production nonTypeName -> APPLY
-- On PRAGMA_END reduce production nonTypeName -> APPLY
-- On PRAGMA reduce production nonTypeName -> APPLY
-- On PLUS_SAT reduce production nonTypeName -> APPLY
-- On PLUSPLUS reduce production nonTypeName -> APPLY
-- On PLUS reduce production nonTypeName -> APPLY
-- On PARSER reduce production nonTypeName -> APPLY
-- On PACKAGE reduce production nonTypeName -> APPLY
-- On OUT reduce production nonTypeName -> APPLY
-- On OR reduce production nonTypeName -> APPLY
-- On NOT reduce production nonTypeName -> APPLY
-- On NE reduce production nonTypeName -> APPLY
-- On NAME reduce production nonTypeName -> APPLY
-- On MUL reduce production nonTypeName -> APPLY
-- On MOD reduce production nonTypeName -> APPLY
-- On MINUS_SAT reduce production nonTypeName -> APPLY
-- On MINUS reduce production nonTypeName -> APPLY
-- On MATCH_KIND reduce production nonTypeName -> APPLY
-- On MASK reduce production nonTypeName -> APPLY
-- On L_PAREN reduce production nonTypeName -> APPLY
-- On L_BRACKET reduce production nonTypeName -> APPLY
-- On L_BRACE reduce production nonTypeName -> APPLY
-- On L_ANGLE reduce production nonTypeName -> APPLY
-- On LE reduce production nonTypeName -> APPLY
-- On KEY reduce production nonTypeName -> APPLY
-- On INTEGER reduce production nonTypeName -> APPLY
-- On INT reduce production nonTypeName -> APPLY
-- On INOUT reduce production nonTypeName -> APPLY
-- On IN reduce production nonTypeName -> APPLY
-- On IF reduce production nonTypeName -> APPLY
-- On HEADER_UNION reduce production nonTypeName -> APPLY
-- On HEADER reduce production nonTypeName -> APPLY
-- On GE reduce production nonTypeName -> APPLY
-- On FALSE reduce production nonTypeName -> APPLY
-- On EXTERN reduce production nonTypeName -> APPLY
-- On EXIT reduce production nonTypeName -> APPLY
-- On ERROR reduce production nonTypeName -> APPLY
-- On EQ reduce production nonTypeName -> APPLY
-- On ENUM reduce production nonTypeName -> APPLY
-- On ENTRIES reduce production nonTypeName -> APPLY
-- On ELSE reduce production nonTypeName -> APPLY
-- On DOT reduce production nonTypeName -> APPLY
-- On DONTCARE reduce production nonTypeName -> APPLY
-- On DIV reduce production nonTypeName -> APPLY
-- On DEFAULT reduce production nonTypeName -> APPLY
-- On CONTROL reduce production nonTypeName -> APPLY
-- On CONST reduce production nonTypeName -> APPLY
-- On COMPLEMENT reduce production nonTypeName -> APPLY
-- On COMMA reduce production nonTypeName -> APPLY
-- On COLON reduce production nonTypeName -> APPLY
-- On BOOL reduce production nonTypeName -> APPLY
-- On BIT_XOR reduce production nonTypeName -> APPLY
-- On BIT_OR reduce production nonTypeName -> APPLY
-- On BIT_AND reduce production nonTypeName -> APPLY
-- On BIT reduce production nonTypeName -> APPLY
-- On AT reduce production nonTypeName -> APPLY
-- On ASSIGN reduce production nonTypeName -> APPLY
-- On APPLY reduce production nonTypeName -> APPLY
-- On AND reduce production nonTypeName -> APPLY
-- On ACTIONS reduce production nonTypeName -> APPLY
-- On ACTION reduce production nonTypeName -> APPLY
-- On ABSTRACT reduce production nonTypeName -> APPLY

State 32:
tableKwName -> ACTIONS . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production tableKwName -> ACTIONS
-- On VARBIT reduce production tableKwName -> ACTIONS
-- On VALUESET reduce production tableKwName -> ACTIONS
-- On TYPEDEF reduce production tableKwName -> ACTIONS
-- On TYPE reduce production tableKwName -> ACTIONS
-- On TUPLE reduce production tableKwName -> ACTIONS
-- On TRUE reduce production tableKwName -> ACTIONS
-- On TRANSITION reduce production tableKwName -> ACTIONS
-- On TABLE reduce production tableKwName -> ACTIONS
-- On SWITCH reduce production tableKwName -> ACTIONS
-- On STRUCT reduce production tableKwName -> ACTIONS
-- On STRING_LITERAL reduce production tableKwName -> ACTIONS
-- On STRING reduce production tableKwName -> ACTIONS
-- On STATE reduce production tableKwName -> ACTIONS
-- On SHL reduce production tableKwName -> ACTIONS
-- On SEMICOLON reduce production tableKwName -> ACTIONS
-- On SELECT reduce production tableKwName -> ACTIONS
-- On R_PAREN reduce production tableKwName -> ACTIONS
-- On R_BRACKET reduce production tableKwName -> ACTIONS
-- On R_BRACE reduce production tableKwName -> ACTIONS
-- On R_ANGLE reduce production tableKwName -> ACTIONS
-- On RETURN reduce production tableKwName -> ACTIONS
-- On RANGE reduce production tableKwName -> ACTIONS
-- On QUESTION reduce production tableKwName -> ACTIONS
-- On PRAGMA_END reduce production tableKwName -> ACTIONS
-- On PRAGMA reduce production tableKwName -> ACTIONS
-- On PLUS_SAT reduce production tableKwName -> ACTIONS
-- On PLUSPLUS reduce production tableKwName -> ACTIONS
-- On PLUS reduce production tableKwName -> ACTIONS
-- On PARSER reduce production tableKwName -> ACTIONS
-- On PACKAGE reduce production tableKwName -> ACTIONS
-- On OUT reduce production tableKwName -> ACTIONS
-- On OR reduce production tableKwName -> ACTIONS
-- On NOT reduce production tableKwName -> ACTIONS
-- On NE reduce production tableKwName -> ACTIONS
-- On NAME reduce production tableKwName -> ACTIONS
-- On MUL reduce production tableKwName -> ACTIONS
-- On MOD reduce production tableKwName -> ACTIONS
-- On MINUS_SAT reduce production tableKwName -> ACTIONS
-- On MINUS reduce production tableKwName -> ACTIONS
-- On MATCH_KIND reduce production tableKwName -> ACTIONS
-- On MASK reduce production tableKwName -> ACTIONS
-- On L_PAREN reduce production tableKwName -> ACTIONS
-- On L_BRACKET reduce production tableKwName -> ACTIONS
-- On L_BRACE reduce production tableKwName -> ACTIONS
-- On L_ANGLE reduce production tableKwName -> ACTIONS
-- On LE reduce production tableKwName -> ACTIONS
-- On KEY reduce production tableKwName -> ACTIONS
-- On INTEGER reduce production tableKwName -> ACTIONS
-- On INT reduce production tableKwName -> ACTIONS
-- On INOUT reduce production tableKwName -> ACTIONS
-- On IN reduce production tableKwName -> ACTIONS
-- On IF reduce production tableKwName -> ACTIONS
-- On HEADER_UNION reduce production tableKwName -> ACTIONS
-- On HEADER reduce production tableKwName -> ACTIONS
-- On GE reduce production tableKwName -> ACTIONS
-- On FALSE reduce production tableKwName -> ACTIONS
-- On EXTERN reduce production tableKwName -> ACTIONS
-- On EXIT reduce production tableKwName -> ACTIONS
-- On ERROR reduce production tableKwName -> ACTIONS
-- On EQ reduce production tableKwName -> ACTIONS
-- On ENUM reduce production tableKwName -> ACTIONS
-- On ENTRIES reduce production tableKwName -> ACTIONS
-- On ELSE reduce production tableKwName -> ACTIONS
-- On DOT reduce production tableKwName -> ACTIONS
-- On DONTCARE reduce production tableKwName -> ACTIONS
-- On DIV reduce production tableKwName -> ACTIONS
-- On DEFAULT reduce production tableKwName -> ACTIONS
-- On CONTROL reduce production tableKwName -> ACTIONS
-- On CONST reduce production tableKwName -> ACTIONS
-- On COMPLEMENT reduce production tableKwName -> ACTIONS
-- On COMMA reduce production tableKwName -> ACTIONS
-- On COLON reduce production tableKwName -> ACTIONS
-- On BOOL reduce production tableKwName -> ACTIONS
-- On BIT_XOR reduce production tableKwName -> ACTIONS
-- On BIT_OR reduce production tableKwName -> ACTIONS
-- On BIT_AND reduce production tableKwName -> ACTIONS
-- On BIT reduce production tableKwName -> ACTIONS
-- On AT reduce production tableKwName -> ACTIONS
-- On ASSIGN reduce production tableKwName -> ACTIONS
-- On APPLY reduce production tableKwName -> ACTIONS
-- On AND reduce production tableKwName -> ACTIONS
-- On ACTIONS reduce production tableKwName -> ACTIONS
-- On ACTION reduce production tableKwName -> ACTIONS
-- On ABSTRACT reduce production tableKwName -> ACTIONS

State 33:
nonTypeName -> varName . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production nonTypeName -> varName
-- On VARBIT reduce production nonTypeName -> varName
-- On VALUESET reduce production nonTypeName -> varName
-- On TYPEDEF reduce production nonTypeName -> varName
-- On TYPE reduce production nonTypeName -> varName
-- On TUPLE reduce production nonTypeName -> varName
-- On TRUE reduce production nonTypeName -> varName
-- On TRANSITION reduce production nonTypeName -> varName
-- On TABLE reduce production nonTypeName -> varName
-- On SWITCH reduce production nonTypeName -> varName
-- On STRUCT reduce production nonTypeName -> varName
-- On STRING_LITERAL reduce production nonTypeName -> varName
-- On STRING reduce production nonTypeName -> varName
-- On STATE reduce production nonTypeName -> varName
-- On SHL reduce production nonTypeName -> varName
-- On SEMICOLON reduce production nonTypeName -> varName
-- On SELECT reduce production nonTypeName -> varName
-- On R_PAREN reduce production nonTypeName -> varName
-- On R_BRACKET reduce production nonTypeName -> varName
-- On R_BRACE reduce production nonTypeName -> varName
-- On R_ANGLE reduce production nonTypeName -> varName
-- On RETURN reduce production nonTypeName -> varName
-- On RANGE reduce production nonTypeName -> varName
-- On QUESTION reduce production nonTypeName -> varName
-- On PRAGMA_END reduce production nonTypeName -> varName
-- On PRAGMA reduce production nonTypeName -> varName
-- On PLUS_SAT reduce production nonTypeName -> varName
-- On PLUSPLUS reduce production nonTypeName -> varName
-- On PLUS reduce production nonTypeName -> varName
-- On PARSER reduce production nonTypeName -> varName
-- On PACKAGE reduce production nonTypeName -> varName
-- On OUT reduce production nonTypeName -> varName
-- On OR reduce production nonTypeName -> varName
-- On NOT reduce production nonTypeName -> varName
-- On NE reduce production nonTypeName -> varName
-- On NAME reduce production nonTypeName -> varName
-- On MUL reduce production nonTypeName -> varName
-- On MOD reduce production nonTypeName -> varName
-- On MINUS_SAT reduce production nonTypeName -> varName
-- On MINUS reduce production nonTypeName -> varName
-- On MATCH_KIND reduce production nonTypeName -> varName
-- On MASK reduce production nonTypeName -> varName
-- On L_PAREN reduce production nonTypeName -> varName
-- On L_BRACKET reduce production nonTypeName -> varName
-- On L_BRACE reduce production nonTypeName -> varName
-- On L_ANGLE reduce production nonTypeName -> varName
-- On LE reduce production nonTypeName -> varName
-- On KEY reduce production nonTypeName -> varName
-- On INTEGER reduce production nonTypeName -> varName
-- On INT reduce production nonTypeName -> varName
-- On INOUT reduce production nonTypeName -> varName
-- On IN reduce production nonTypeName -> varName
-- On IF reduce production nonTypeName -> varName
-- On HEADER_UNION reduce production nonTypeName -> varName
-- On HEADER reduce production nonTypeName -> varName
-- On GE reduce production nonTypeName -> varName
-- On FALSE reduce production nonTypeName -> varName
-- On EXTERN reduce production nonTypeName -> varName
-- On EXIT reduce production nonTypeName -> varName
-- On ERROR reduce production nonTypeName -> varName
-- On EQ reduce production nonTypeName -> varName
-- On ENUM reduce production nonTypeName -> varName
-- On ENTRIES reduce production nonTypeName -> varName
-- On ELSE reduce production nonTypeName -> varName
-- On DOT reduce production nonTypeName -> varName
-- On DONTCARE reduce production nonTypeName -> varName
-- On DIV reduce production nonTypeName -> varName
-- On DEFAULT reduce production nonTypeName -> varName
-- On CONTROL reduce production nonTypeName -> varName
-- On CONST reduce production nonTypeName -> varName
-- On COMPLEMENT reduce production nonTypeName -> varName
-- On COMMA reduce production nonTypeName -> varName
-- On COLON reduce production nonTypeName -> varName
-- On BOOL reduce production nonTypeName -> varName
-- On BIT_XOR reduce production nonTypeName -> varName
-- On BIT_OR reduce production nonTypeName -> varName
-- On BIT_AND reduce production nonTypeName -> varName
-- On BIT reduce production nonTypeName -> varName
-- On AT reduce production nonTypeName -> varName
-- On ASSIGN reduce production nonTypeName -> varName
-- On APPLY reduce production nonTypeName -> varName
-- On AND reduce production nonTypeName -> varName
-- On ACTIONS reduce production nonTypeName -> varName
-- On ACTION reduce production nonTypeName -> varName
-- On ABSTRACT reduce production nonTypeName -> varName

State 34:
nonTypeName -> tableKwName . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production nonTypeName -> tableKwName
-- On VARBIT reduce production nonTypeName -> tableKwName
-- On VALUESET reduce production nonTypeName -> tableKwName
-- On TYPEDEF reduce production nonTypeName -> tableKwName
-- On TYPE reduce production nonTypeName -> tableKwName
-- On TUPLE reduce production nonTypeName -> tableKwName
-- On TRUE reduce production nonTypeName -> tableKwName
-- On TRANSITION reduce production nonTypeName -> tableKwName
-- On TABLE reduce production nonTypeName -> tableKwName
-- On SWITCH reduce production nonTypeName -> tableKwName
-- On STRUCT reduce production nonTypeName -> tableKwName
-- On STRING_LITERAL reduce production nonTypeName -> tableKwName
-- On STRING reduce production nonTypeName -> tableKwName
-- On STATE reduce production nonTypeName -> tableKwName
-- On SHL reduce production nonTypeName -> tableKwName
-- On SEMICOLON reduce production nonTypeName -> tableKwName
-- On SELECT reduce production nonTypeName -> tableKwName
-- On R_PAREN reduce production nonTypeName -> tableKwName
-- On R_BRACKET reduce production nonTypeName -> tableKwName
-- On R_BRACE reduce production nonTypeName -> tableKwName
-- On R_ANGLE reduce production nonTypeName -> tableKwName
-- On RETURN reduce production nonTypeName -> tableKwName
-- On RANGE reduce production nonTypeName -> tableKwName
-- On QUESTION reduce production nonTypeName -> tableKwName
-- On PRAGMA_END reduce production nonTypeName -> tableKwName
-- On PRAGMA reduce production nonTypeName -> tableKwName
-- On PLUS_SAT reduce production nonTypeName -> tableKwName
-- On PLUSPLUS reduce production nonTypeName -> tableKwName
-- On PLUS reduce production nonTypeName -> tableKwName
-- On PARSER reduce production nonTypeName -> tableKwName
-- On PACKAGE reduce production nonTypeName -> tableKwName
-- On OUT reduce production nonTypeName -> tableKwName
-- On OR reduce production nonTypeName -> tableKwName
-- On NOT reduce production nonTypeName -> tableKwName
-- On NE reduce production nonTypeName -> tableKwName
-- On NAME reduce production nonTypeName -> tableKwName
-- On MUL reduce production nonTypeName -> tableKwName
-- On MOD reduce production nonTypeName -> tableKwName
-- On MINUS_SAT reduce production nonTypeName -> tableKwName
-- On MINUS reduce production nonTypeName -> tableKwName
-- On MATCH_KIND reduce production nonTypeName -> tableKwName
-- On MASK reduce production nonTypeName -> tableKwName
-- On L_PAREN reduce production nonTypeName -> tableKwName
-- On L_BRACKET reduce production nonTypeName -> tableKwName
-- On L_BRACE reduce production nonTypeName -> tableKwName
-- On L_ANGLE reduce production nonTypeName -> tableKwName
-- On LE reduce production nonTypeName -> tableKwName
-- On KEY reduce production nonTypeName -> tableKwName
-- On INTEGER reduce production nonTypeName -> tableKwName
-- On INT reduce production nonTypeName -> tableKwName
-- On INOUT reduce production nonTypeName -> tableKwName
-- On IN reduce production nonTypeName -> tableKwName
-- On IF reduce production nonTypeName -> tableKwName
-- On HEADER_UNION reduce production nonTypeName -> tableKwName
-- On HEADER reduce production nonTypeName -> tableKwName
-- On GE reduce production nonTypeName -> tableKwName
-- On FALSE reduce production nonTypeName -> tableKwName
-- On EXTERN reduce production nonTypeName -> tableKwName
-- On EXIT reduce production nonTypeName -> tableKwName
-- On ERROR reduce production nonTypeName -> tableKwName
-- On EQ reduce production nonTypeName -> tableKwName
-- On ENUM reduce production nonTypeName -> tableKwName
-- On ENTRIES reduce production nonTypeName -> tableKwName
-- On ELSE reduce production nonTypeName -> tableKwName
-- On DOT reduce production nonTypeName -> tableKwName
-- On DONTCARE reduce production nonTypeName -> tableKwName
-- On DIV reduce production nonTypeName -> tableKwName
-- On DEFAULT reduce production nonTypeName -> tableKwName
-- On CONTROL reduce production nonTypeName -> tableKwName
-- On CONST reduce production nonTypeName -> tableKwName
-- On COMPLEMENT reduce production nonTypeName -> tableKwName
-- On COMMA reduce production nonTypeName -> tableKwName
-- On COLON reduce production nonTypeName -> tableKwName
-- On BOOL reduce production nonTypeName -> tableKwName
-- On BIT_XOR reduce production nonTypeName -> tableKwName
-- On BIT_OR reduce production nonTypeName -> tableKwName
-- On BIT_AND reduce production nonTypeName -> tableKwName
-- On BIT reduce production nonTypeName -> tableKwName
-- On AT reduce production nonTypeName -> tableKwName
-- On ASSIGN reduce production nonTypeName -> tableKwName
-- On APPLY reduce production nonTypeName -> tableKwName
-- On AND reduce production nonTypeName -> tableKwName
-- On ACTIONS reduce production nonTypeName -> tableKwName
-- On ACTION reduce production nonTypeName -> tableKwName
-- On ABSTRACT reduce production nonTypeName -> tableKwName

State 35:
name -> nonTypeName . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production name -> nonTypeName
-- On VARBIT reduce production name -> nonTypeName
-- On VALUESET reduce production name -> nonTypeName
-- On TYPEDEF reduce production name -> nonTypeName
-- On TYPE reduce production name -> nonTypeName
-- On TUPLE reduce production name -> nonTypeName
-- On TRUE reduce production name -> nonTypeName
-- On TRANSITION reduce production name -> nonTypeName
-- On TABLE reduce production name -> nonTypeName
-- On SWITCH reduce production name -> nonTypeName
-- On STRUCT reduce production name -> nonTypeName
-- On STRING_LITERAL reduce production name -> nonTypeName
-- On STRING reduce production name -> nonTypeName
-- On STATE reduce production name -> nonTypeName
-- On SHL reduce production name -> nonTypeName
-- On SEMICOLON reduce production name -> nonTypeName
-- On SELECT reduce production name -> nonTypeName
-- On R_PAREN reduce production name -> nonTypeName
-- On R_BRACKET reduce production name -> nonTypeName
-- On R_BRACE reduce production name -> nonTypeName
-- On R_ANGLE reduce production name -> nonTypeName
-- On RETURN reduce production name -> nonTypeName
-- On RANGE reduce production name -> nonTypeName
-- On QUESTION reduce production name -> nonTypeName
-- On PRAGMA_END reduce production name -> nonTypeName
-- On PRAGMA reduce production name -> nonTypeName
-- On PLUS_SAT reduce production name -> nonTypeName
-- On PLUSPLUS reduce production name -> nonTypeName
-- On PLUS reduce production name -> nonTypeName
-- On PARSER reduce production name -> nonTypeName
-- On PACKAGE reduce production name -> nonTypeName
-- On OUT reduce production name -> nonTypeName
-- On OR reduce production name -> nonTypeName
-- On NOT reduce production name -> nonTypeName
-- On NE reduce production name -> nonTypeName
-- On NAME reduce production name -> nonTypeName
-- On MUL reduce production name -> nonTypeName
-- On MOD reduce production name -> nonTypeName
-- On MINUS_SAT reduce production name -> nonTypeName
-- On MINUS reduce production name -> nonTypeName
-- On MATCH_KIND reduce production name -> nonTypeName
-- On MASK reduce production name -> nonTypeName
-- On L_PAREN reduce production name -> nonTypeName
-- On L_BRACKET reduce production name -> nonTypeName
-- On L_BRACE reduce production name -> nonTypeName
-- On L_ANGLE reduce production name -> nonTypeName
-- On LE reduce production name -> nonTypeName
-- On KEY reduce production name -> nonTypeName
-- On INTEGER reduce production name -> nonTypeName
-- On INT reduce production name -> nonTypeName
-- On INOUT reduce production name -> nonTypeName
-- On IN reduce production name -> nonTypeName
-- On IF reduce production name -> nonTypeName
-- On HEADER_UNION reduce production name -> nonTypeName
-- On HEADER reduce production name -> nonTypeName
-- On GE reduce production name -> nonTypeName
-- On FALSE reduce production name -> nonTypeName
-- On EXTERN reduce production name -> nonTypeName
-- On EXIT reduce production name -> nonTypeName
-- On ERROR reduce production name -> nonTypeName
-- On EQ reduce production name -> nonTypeName
-- On ENUM reduce production name -> nonTypeName
-- On ENTRIES reduce production name -> nonTypeName
-- On ELSE reduce production name -> nonTypeName
-- On DOT reduce production name -> nonTypeName
-- On DONTCARE reduce production name -> nonTypeName
-- On DIV reduce production name -> nonTypeName
-- On DEFAULT reduce production name -> nonTypeName
-- On CONTROL reduce production name -> nonTypeName
-- On CONST reduce production name -> nonTypeName
-- On COMPLEMENT reduce production name -> nonTypeName
-- On COMMA reduce production name -> nonTypeName
-- On COLON reduce production name -> nonTypeName
-- On BOOL reduce production name -> nonTypeName
-- On BIT_XOR reduce production name -> nonTypeName
-- On BIT_OR reduce production name -> nonTypeName
-- On BIT_AND reduce production name -> nonTypeName
-- On BIT reduce production name -> nonTypeName
-- On AT reduce production name -> nonTypeName
-- On ASSIGN reduce production name -> nonTypeName
-- On APPLY reduce production name -> nonTypeName
-- On AND reduce production name -> nonTypeName
-- On ACTIONS reduce production name -> nonTypeName
-- On ACTION reduce production name -> nonTypeName
-- On ABSTRACT reduce production name -> nonTypeName

State 36:
member -> name . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND ASSIGN AND ]
-- On SHL reduce production member -> name
-- On SEMICOLON reduce production member -> name
-- On R_PAREN reduce production member -> name
-- On R_BRACKET reduce production member -> name
-- On R_BRACE reduce production member -> name
-- On R_ANGLE reduce production member -> name
-- On RANGE reduce production member -> name
-- On QUESTION reduce production member -> name
-- On PLUS_SAT reduce production member -> name
-- On PLUSPLUS reduce production member -> name
-- On PLUS reduce production member -> name
-- On OR reduce production member -> name
-- On NE reduce production member -> name
-- On MUL reduce production member -> name
-- On MOD reduce production member -> name
-- On MINUS_SAT reduce production member -> name
-- On MINUS reduce production member -> name
-- On MASK reduce production member -> name
-- On L_PAREN reduce production member -> name
-- On L_BRACKET reduce production member -> name
-- On L_ANGLE reduce production member -> name
-- On LE reduce production member -> name
-- On GE reduce production member -> name
-- On EQ reduce production member -> name
-- On DOT reduce production member -> name
-- On DIV reduce production member -> name
-- On COMMA reduce production member -> name
-- On COLON reduce production member -> name
-- On BIT_XOR reduce production member -> name
-- On BIT_OR reduce production member -> name
-- On BIT_AND reduce production member -> name
-- On ASSIGN reduce production member -> name
-- On AND reduce production member -> name

State 37:
expression -> ERROR DOT member . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> ERROR DOT member
-- On SEMICOLON reduce production expression -> ERROR DOT member
-- On R_PAREN reduce production expression -> ERROR DOT member
-- On R_BRACKET reduce production expression -> ERROR DOT member
-- On R_BRACE reduce production expression -> ERROR DOT member
-- On R_ANGLE reduce production expression -> ERROR DOT member
-- On RANGE reduce production expression -> ERROR DOT member
-- On QUESTION reduce production expression -> ERROR DOT member
-- On PLUS_SAT reduce production expression -> ERROR DOT member
-- On PLUSPLUS reduce production expression -> ERROR DOT member
-- On PLUS reduce production expression -> ERROR DOT member
-- On OR reduce production expression -> ERROR DOT member
-- On NE reduce production expression -> ERROR DOT member
-- On MUL reduce production expression -> ERROR DOT member
-- On MOD reduce production expression -> ERROR DOT member
-- On MINUS_SAT reduce production expression -> ERROR DOT member
-- On MINUS reduce production expression -> ERROR DOT member
-- On MASK reduce production expression -> ERROR DOT member
-- On L_PAREN reduce production expression -> ERROR DOT member
-- On L_BRACKET reduce production expression -> ERROR DOT member
-- On L_ANGLE reduce production expression -> ERROR DOT member
-- On LE reduce production expression -> ERROR DOT member
-- On GE reduce production expression -> ERROR DOT member
-- On EQ reduce production expression -> ERROR DOT member
-- On DOT reduce production expression -> ERROR DOT member
-- On DIV reduce production expression -> ERROR DOT member
-- On COMMA reduce production expression -> ERROR DOT member
-- On COLON reduce production expression -> ERROR DOT member
-- On BIT_XOR reduce production expression -> ERROR DOT member
-- On BIT_OR reduce production expression -> ERROR DOT member
-- On BIT_AND reduce production expression -> ERROR DOT member
-- On AND reduce production expression -> ERROR DOT member

State 38:
dotPrefix -> DOT . [ TYPE STATE NAME KEY ENTRIES APPLY ACTIONS ]
-- On TYPE reduce production dotPrefix -> DOT
-- On STATE reduce production dotPrefix -> DOT
-- On NAME reduce production dotPrefix -> DOT
-- On KEY reduce production dotPrefix -> DOT
-- On ENTRIES reduce production dotPrefix -> DOT
-- On APPLY reduce production dotPrefix -> DOT
-- On ACTIONS reduce production dotPrefix -> DOT

State 39:
expression -> COMPLEMENT . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 172
-- On dotPrefix shift to state 91

State 40:
expression -> typeName . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
namedType -> typeName . [ L_PAREN ]
-- On DOT shift to state 41
-- On L_PAREN reduce production namedType -> typeName

State 41:
expression -> typeName DOT . member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 36
-- On member shift to state 42

State 42:
expression -> typeName DOT member . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> typeName DOT member
-- On SEMICOLON reduce production expression -> typeName DOT member
-- On R_PAREN reduce production expression -> typeName DOT member
-- On R_BRACKET reduce production expression -> typeName DOT member
-- On R_BRACE reduce production expression -> typeName DOT member
-- On R_ANGLE reduce production expression -> typeName DOT member
-- On RANGE reduce production expression -> typeName DOT member
-- On QUESTION reduce production expression -> typeName DOT member
-- On PLUS_SAT reduce production expression -> typeName DOT member
-- On PLUSPLUS reduce production expression -> typeName DOT member
-- On PLUS reduce production expression -> typeName DOT member
-- On OR reduce production expression -> typeName DOT member
-- On NE reduce production expression -> typeName DOT member
-- On MUL reduce production expression -> typeName DOT member
-- On MOD reduce production expression -> typeName DOT member
-- On MINUS_SAT reduce production expression -> typeName DOT member
-- On MINUS reduce production expression -> typeName DOT member
-- On MASK reduce production expression -> typeName DOT member
-- On L_PAREN reduce production expression -> typeName DOT member
-- On L_BRACKET reduce production expression -> typeName DOT member
-- On L_ANGLE reduce production expression -> typeName DOT member
-- On LE reduce production expression -> typeName DOT member
-- On GE reduce production expression -> typeName DOT member
-- On EQ reduce production expression -> typeName DOT member
-- On DOT reduce production expression -> typeName DOT member
-- On DIV reduce production expression -> typeName DOT member
-- On COMMA reduce production expression -> typeName DOT member
-- On COLON reduce production expression -> typeName DOT member
-- On BIT_XOR reduce production expression -> typeName DOT member
-- On BIT_OR reduce production expression -> typeName DOT member
-- On BIT_AND reduce production expression -> typeName DOT member
-- On AND reduce production expression -> typeName DOT member

State 43:
namedType -> specializedType . [ L_PAREN ]
-- On L_PAREN reduce production namedType -> specializedType

State 44:
specializedType -> prefixedType . L_ANGLE typeArgumentList R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
typeName -> prefixedType . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN L_BRACKET KEY ENTRIES DOT COMMA APPLY ACTIONS ]
-- On L_ANGLE shift to state 45
-- On TYPE reduce production typeName -> prefixedType
-- On STATE reduce production typeName -> prefixedType
-- On R_PAREN reduce production typeName -> prefixedType
-- On R_ANGLE reduce production typeName -> prefixedType
-- On NAME reduce production typeName -> prefixedType
-- On L_PAREN reduce production typeName -> prefixedType
-- On L_BRACKET reduce production typeName -> prefixedType
-- On KEY reduce production typeName -> prefixedType
-- On ENTRIES reduce production typeName -> prefixedType
-- On DOT reduce production typeName -> prefixedType
-- On COMMA reduce production typeName -> prefixedType
-- On APPLY reduce production typeName -> prefixedType
-- On ACTIONS reduce production typeName -> prefixedType

State 45:
specializedType -> prefixedType L_ANGLE . typeArgumentList R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On NAME shift to state 11
-- On KEY shift to state 19
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 47
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeRef shift to state 137
-- On typeName shift to state 138
-- On typeArgumentList shift to state 165
-- On typeArg shift to state 167
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 140
-- On separated_list_aux(COMMA,typeArg) shift to state 168
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,typeArg) shift to state 171
-- On nonTypeName shift to state 141
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146
-- On R_ANGLE reduce production separated_list_aux(COMMA,typeArg) ->
-- On COMMA reduce production separated_list_aux(COMMA,typeArg) ->

State 46:
baseType -> ERROR . [ TYPE STATE R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production baseType -> ERROR
-- On STATE reduce production baseType -> ERROR
-- On R_ANGLE reduce production baseType -> ERROR
-- On NAME reduce production baseType -> ERROR
-- On L_PAREN reduce production baseType -> ERROR
-- On KEY reduce production baseType -> ERROR
-- On ENTRIES reduce production baseType -> ERROR
-- On COMMA reduce production baseType -> ERROR
-- On APPLY reduce production baseType -> ERROR
-- On ACTIONS reduce production baseType -> ERROR

State 47:
typeArg -> DONTCARE . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production typeArg -> DONTCARE
-- On COMMA reduce production typeArg -> DONTCARE

State 48:
baseType -> BOOL . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production baseType -> BOOL
-- On STATE reduce production baseType -> BOOL
-- On R_PAREN reduce production baseType -> BOOL
-- On R_ANGLE reduce production baseType -> BOOL
-- On NAME reduce production baseType -> BOOL
-- On L_PAREN reduce production baseType -> BOOL
-- On KEY reduce production baseType -> BOOL
-- On ENTRIES reduce production baseType -> BOOL
-- On COMMA reduce production baseType -> BOOL
-- On APPLY reduce production baseType -> BOOL
-- On ACTIONS reduce production baseType -> BOOL

State 49:
baseType -> BIT . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
baseType -> BIT . L_ANGLE INTEGER R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
baseType -> BIT . L_ANGLE L_PAREN expression R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On L_ANGLE shift to state 50
-- On TYPE reduce production baseType -> BIT
-- On STATE reduce production baseType -> BIT
-- On R_PAREN reduce production baseType -> BIT
-- On R_ANGLE reduce production baseType -> BIT
-- On NAME reduce production baseType -> BIT
-- On L_PAREN reduce production baseType -> BIT
-- On KEY reduce production baseType -> BIT
-- On ENTRIES reduce production baseType -> BIT
-- On COMMA reduce production baseType -> BIT
-- On APPLY reduce production baseType -> BIT
-- On ACTIONS reduce production baseType -> BIT

State 50:
baseType -> BIT L_ANGLE . INTEGER R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
baseType -> BIT L_ANGLE . L_PAREN expression R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On L_PAREN shift to state 51
-- On INTEGER shift to state 163

State 51:
baseType -> BIT L_ANGLE L_PAREN . expression R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 160
-- On dotPrefix shift to state 91

State 52:
expression -> nonTypeName . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> nonTypeName
-- On SEMICOLON reduce production expression -> nonTypeName
-- On R_PAREN reduce production expression -> nonTypeName
-- On R_BRACKET reduce production expression -> nonTypeName
-- On R_BRACE reduce production expression -> nonTypeName
-- On R_ANGLE reduce production expression -> nonTypeName
-- On RANGE reduce production expression -> nonTypeName
-- On QUESTION reduce production expression -> nonTypeName
-- On PLUS_SAT reduce production expression -> nonTypeName
-- On PLUSPLUS reduce production expression -> nonTypeName
-- On PLUS reduce production expression -> nonTypeName
-- On OR reduce production expression -> nonTypeName
-- On NE reduce production expression -> nonTypeName
-- On MUL reduce production expression -> nonTypeName
-- On MOD reduce production expression -> nonTypeName
-- On MINUS_SAT reduce production expression -> nonTypeName
-- On MINUS reduce production expression -> nonTypeName
-- On MASK reduce production expression -> nonTypeName
-- On L_PAREN reduce production expression -> nonTypeName
-- On L_BRACKET reduce production expression -> nonTypeName
-- On L_ANGLE reduce production expression -> nonTypeName
-- On LE reduce production expression -> nonTypeName
-- On GE reduce production expression -> nonTypeName
-- On EQ reduce production expression -> nonTypeName
-- On DOT reduce production expression -> nonTypeName
-- On DIV reduce production expression -> nonTypeName
-- On COMMA reduce production expression -> nonTypeName
-- On COLON reduce production expression -> nonTypeName
-- On BIT_XOR reduce production expression -> nonTypeName
-- On BIT_OR reduce production expression -> nonTypeName
-- On BIT_AND reduce production expression -> nonTypeName
-- On AND reduce production expression -> nonTypeName

State 53:
expression -> namedType . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On L_PAREN shift to state 54

State 54:
expression -> namedType L_PAREN . argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 57
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,argument) shift to state 58
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,argument) shift to state 71
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 61
-- On expression shift to state 72
-- On dotPrefix shift to state 91
-- On argumentList shift to state 158
-- On argument shift to state 135
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) ->
-- On COMMA reduce production separated_list_aux(COMMA,argument) ->

State 55:
name -> NAME . TYPENAME [ EQ ASSIGN ]
prefixedType -> NAME . TYPENAME [ L_PAREN L_ANGLE DOT ]
varName -> NAME . IDENTIFIER [ SHL R_PAREN R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND ASSIGN AND ]
-- On TYPENAME shift to state 56
-- On IDENTIFIER shift to state 13

State 56:
name -> NAME TYPENAME . [ EQ ASSIGN ]
prefixedType -> NAME TYPENAME . [ L_PAREN L_ANGLE DOT ]
-- On L_PAREN reduce production prefixedType -> NAME TYPENAME
-- On L_ANGLE reduce production prefixedType -> NAME TYPENAME
-- On EQ reduce production name -> NAME TYPENAME
-- On DOT reduce production prefixedType -> NAME TYPENAME
-- On ASSIGN reduce production name -> NAME TYPENAME

State 57:
argument -> DONTCARE . [ R_PAREN COMMA ]
-- On R_PAREN reduce production argument -> DONTCARE
-- On COMMA reduce production argument -> DONTCARE

State 58:
petr4_separated_list(COMMA,argument) -> separated_list_aux(COMMA,argument) . [ R_PAREN ]
separated_list_aux(COMMA,argument) -> separated_list_aux(COMMA,argument) . COMMA argument [ R_PAREN COMMA ]
-- On COMMA shift to state 59
-- On R_PAREN reduce production petr4_separated_list(COMMA,argument) -> separated_list_aux(COMMA,argument)

State 59:
separated_list_aux(COMMA,argument) -> separated_list_aux(COMMA,argument) COMMA . argument [ R_PAREN COMMA ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 57
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 61
-- On expression shift to state 72
-- On dotPrefix shift to state 91
-- On argument shift to state 157

State 60:
expression -> nonTypeName . [ SHL R_PAREN R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
name -> nonTypeName . [ EQ ASSIGN ]
-- On SHL reduce production expression -> nonTypeName
-- On R_PAREN reduce production expression -> nonTypeName
-- On R_BRACKET reduce production expression -> nonTypeName
-- On R_ANGLE reduce production expression -> nonTypeName
-- On QUESTION reduce production expression -> nonTypeName
-- On PLUS_SAT reduce production expression -> nonTypeName
-- On PLUSPLUS reduce production expression -> nonTypeName
-- On PLUS reduce production expression -> nonTypeName
-- On OR reduce production expression -> nonTypeName
-- On NE reduce production expression -> nonTypeName
-- On MUL reduce production expression -> nonTypeName
-- On MOD reduce production expression -> nonTypeName
-- On MINUS_SAT reduce production expression -> nonTypeName
-- On MINUS reduce production expression -> nonTypeName
-- On L_PAREN reduce production expression -> nonTypeName
-- On L_BRACKET reduce production expression -> nonTypeName
-- On L_ANGLE reduce production expression -> nonTypeName
-- On LE reduce production expression -> nonTypeName
-- On GE reduce production expression -> nonTypeName
-- On EQ reduce production name -> nonTypeName
-- On DOT reduce production expression -> nonTypeName
-- On DIV reduce production expression -> nonTypeName
-- On COMMA reduce production expression -> nonTypeName
-- On BIT_XOR reduce production expression -> nonTypeName
-- On BIT_OR reduce production expression -> nonTypeName
-- On BIT_AND reduce production expression -> nonTypeName
-- On ASSIGN reduce production name -> nonTypeName
-- On AND reduce production expression -> nonTypeName
** Conflict on EQ

State 61:
argument -> name . ASSIGN expression [ R_PAREN COMMA ]
-- On ASSIGN shift to state 62

State 62:
argument -> name ASSIGN . expression [ R_PAREN COMMA ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 63
-- On dotPrefix shift to state 91

State 63:
argument -> name ASSIGN expression . [ R_PAREN COMMA ]
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On R_PAREN reduce production argument -> name ASSIGN expression
-- On COMMA reduce production argument -> name ASSIGN expression

State 64:
expression -> expression SHL . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 65
-- On dotPrefix shift to state 91

State 65:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression SHL expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On SHL reduce production expression -> expression SHL expression
-- On SEMICOLON reduce production expression -> expression SHL expression
-- On R_PAREN reduce production expression -> expression SHL expression
-- On R_BRACKET reduce production expression -> expression SHL expression
-- On R_BRACE reduce production expression -> expression SHL expression
-- On R_ANGLE reduce production expression -> expression SHL expression
-- On RANGE reduce production expression -> expression SHL expression
-- On QUESTION reduce production expression -> expression SHL expression
-- On OR reduce production expression -> expression SHL expression
-- On NE reduce production expression -> expression SHL expression
-- On MASK reduce production expression -> expression SHL expression
-- On L_ANGLE reduce production expression -> expression SHL expression
-- On LE reduce production expression -> expression SHL expression
-- On GE reduce production expression -> expression SHL expression
-- On EQ reduce production expression -> expression SHL expression
-- On COMMA reduce production expression -> expression SHL expression
-- On COLON reduce production expression -> expression SHL expression
-- On BIT_XOR reduce production expression -> expression SHL expression
-- On BIT_OR reduce production expression -> expression SHL expression
-- On BIT_AND reduce production expression -> expression SHL expression
-- On AND reduce production expression -> expression SHL expression

State 66:
expression -> expression PLUS_SAT . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 67
-- On dotPrefix shift to state 91

State 67:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression PLUS_SAT expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On SHL reduce production expression -> expression PLUS_SAT expression
-- On SEMICOLON reduce production expression -> expression PLUS_SAT expression
-- On R_PAREN reduce production expression -> expression PLUS_SAT expression
-- On R_BRACKET reduce production expression -> expression PLUS_SAT expression
-- On R_BRACE reduce production expression -> expression PLUS_SAT expression
-- On R_ANGLE reduce production expression -> expression PLUS_SAT expression
-- On RANGE reduce production expression -> expression PLUS_SAT expression
-- On QUESTION reduce production expression -> expression PLUS_SAT expression
-- On PLUS_SAT reduce production expression -> expression PLUS_SAT expression
-- On PLUSPLUS reduce production expression -> expression PLUS_SAT expression
-- On PLUS reduce production expression -> expression PLUS_SAT expression
-- On OR reduce production expression -> expression PLUS_SAT expression
-- On NE reduce production expression -> expression PLUS_SAT expression
-- On MINUS_SAT reduce production expression -> expression PLUS_SAT expression
-- On MINUS reduce production expression -> expression PLUS_SAT expression
-- On MASK reduce production expression -> expression PLUS_SAT expression
-- On L_ANGLE reduce production expression -> expression PLUS_SAT expression
-- On LE reduce production expression -> expression PLUS_SAT expression
-- On GE reduce production expression -> expression PLUS_SAT expression
-- On EQ reduce production expression -> expression PLUS_SAT expression
-- On COMMA reduce production expression -> expression PLUS_SAT expression
-- On COLON reduce production expression -> expression PLUS_SAT expression
-- On BIT_XOR reduce production expression -> expression PLUS_SAT expression
-- On BIT_OR reduce production expression -> expression PLUS_SAT expression
-- On BIT_AND reduce production expression -> expression PLUS_SAT expression
-- On AND reduce production expression -> expression PLUS_SAT expression

State 68:
expression -> expression MUL . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 69
-- On dotPrefix shift to state 91

State 69:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression MUL expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On SHL reduce production expression -> expression MUL expression
-- On SEMICOLON reduce production expression -> expression MUL expression
-- On R_PAREN reduce production expression -> expression MUL expression
-- On R_BRACKET reduce production expression -> expression MUL expression
-- On R_BRACE reduce production expression -> expression MUL expression
-- On R_ANGLE reduce production expression -> expression MUL expression
-- On RANGE reduce production expression -> expression MUL expression
-- On QUESTION reduce production expression -> expression MUL expression
-- On PLUS_SAT reduce production expression -> expression MUL expression
-- On PLUSPLUS reduce production expression -> expression MUL expression
-- On PLUS reduce production expression -> expression MUL expression
-- On OR reduce production expression -> expression MUL expression
-- On NE reduce production expression -> expression MUL expression
-- On MUL reduce production expression -> expression MUL expression
-- On MOD reduce production expression -> expression MUL expression
-- On MINUS_SAT reduce production expression -> expression MUL expression
-- On MINUS reduce production expression -> expression MUL expression
-- On MASK reduce production expression -> expression MUL expression
-- On L_ANGLE reduce production expression -> expression MUL expression
-- On LE reduce production expression -> expression MUL expression
-- On GE reduce production expression -> expression MUL expression
-- On EQ reduce production expression -> expression MUL expression
-- On DIV reduce production expression -> expression MUL expression
-- On COMMA reduce production expression -> expression MUL expression
-- On COLON reduce production expression -> expression MUL expression
-- On BIT_XOR reduce production expression -> expression MUL expression
-- On BIT_OR reduce production expression -> expression MUL expression
-- On BIT_AND reduce production expression -> expression MUL expression
-- On AND reduce production expression -> expression MUL expression

State 70:
expression -> expression L_PAREN . argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 57
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,argument) shift to state 58
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,argument) shift to state 71
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 61
-- On expression shift to state 72
-- On dotPrefix shift to state 91
-- On argumentList shift to state 155
-- On argument shift to state 135
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) ->
-- On COMMA reduce production separated_list_aux(COMMA,argument) ->

State 71:
argumentList -> petr4_separated_list(COMMA,argument) . [ R_PAREN ]
-- On R_PAREN reduce production argumentList -> petr4_separated_list(COMMA,argument)

State 72:
argument -> expression . [ R_PAREN COMMA ]
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On R_PAREN reduce production argument -> expression
-- On COMMA reduce production argument -> expression

State 73:
expression -> expression R_ANGLE . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression R_ANGLE . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On R_ANGLE shift to state 74
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 154
-- On dotPrefix shift to state 91

State 74:
expression -> expression R_ANGLE R_ANGLE . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 75
-- On dotPrefix shift to state 91

State 75:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression R_ANGLE R_ANGLE expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On SEMICOLON reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On R_PAREN reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On R_BRACKET reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On R_BRACE reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On R_ANGLE reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On RANGE reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On QUESTION reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On OR reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On NE reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On MASK reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On L_ANGLE reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On LE reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On GE reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On EQ reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On COMMA reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On COLON reduce production expression -> expression R_ANGLE R_ANGLE expression
-- On AND reduce production expression -> expression R_ANGLE R_ANGLE expression

State 76:
expression -> expression PLUSPLUS . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 77
-- On dotPrefix shift to state 91

State 77:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression PLUSPLUS expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On SHL reduce production expression -> expression PLUSPLUS expression
-- On SEMICOLON reduce production expression -> expression PLUSPLUS expression
-- On R_PAREN reduce production expression -> expression PLUSPLUS expression
-- On R_BRACKET reduce production expression -> expression PLUSPLUS expression
-- On R_BRACE reduce production expression -> expression PLUSPLUS expression
-- On R_ANGLE reduce production expression -> expression PLUSPLUS expression
-- On RANGE reduce production expression -> expression PLUSPLUS expression
-- On QUESTION reduce production expression -> expression PLUSPLUS expression
-- On PLUS_SAT reduce production expression -> expression PLUSPLUS expression
-- On PLUSPLUS reduce production expression -> expression PLUSPLUS expression
-- On PLUS reduce production expression -> expression PLUSPLUS expression
-- On OR reduce production expression -> expression PLUSPLUS expression
-- On NE reduce production expression -> expression PLUSPLUS expression
-- On MINUS_SAT reduce production expression -> expression PLUSPLUS expression
-- On MINUS reduce production expression -> expression PLUSPLUS expression
-- On MASK reduce production expression -> expression PLUSPLUS expression
-- On L_ANGLE reduce production expression -> expression PLUSPLUS expression
-- On LE reduce production expression -> expression PLUSPLUS expression
-- On GE reduce production expression -> expression PLUSPLUS expression
-- On EQ reduce production expression -> expression PLUSPLUS expression
-- On COMMA reduce production expression -> expression PLUSPLUS expression
-- On COLON reduce production expression -> expression PLUSPLUS expression
-- On BIT_XOR reduce production expression -> expression PLUSPLUS expression
-- On BIT_OR reduce production expression -> expression PLUSPLUS expression
-- On BIT_AND reduce production expression -> expression PLUSPLUS expression
-- On AND reduce production expression -> expression PLUSPLUS expression

State 78:
expression -> expression MOD . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 79
-- On dotPrefix shift to state 91

State 79:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression MOD expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On SHL reduce production expression -> expression MOD expression
-- On SEMICOLON reduce production expression -> expression MOD expression
-- On R_PAREN reduce production expression -> expression MOD expression
-- On R_BRACKET reduce production expression -> expression MOD expression
-- On R_BRACE reduce production expression -> expression MOD expression
-- On R_ANGLE reduce production expression -> expression MOD expression
-- On RANGE reduce production expression -> expression MOD expression
-- On QUESTION reduce production expression -> expression MOD expression
-- On PLUS_SAT reduce production expression -> expression MOD expression
-- On PLUSPLUS reduce production expression -> expression MOD expression
-- On PLUS reduce production expression -> expression MOD expression
-- On OR reduce production expression -> expression MOD expression
-- On NE reduce production expression -> expression MOD expression
-- On MUL reduce production expression -> expression MOD expression
-- On MOD reduce production expression -> expression MOD expression
-- On MINUS_SAT reduce production expression -> expression MOD expression
-- On MINUS reduce production expression -> expression MOD expression
-- On MASK reduce production expression -> expression MOD expression
-- On L_ANGLE reduce production expression -> expression MOD expression
-- On LE reduce production expression -> expression MOD expression
-- On GE reduce production expression -> expression MOD expression
-- On EQ reduce production expression -> expression MOD expression
-- On DIV reduce production expression -> expression MOD expression
-- On COMMA reduce production expression -> expression MOD expression
-- On COLON reduce production expression -> expression MOD expression
-- On BIT_XOR reduce production expression -> expression MOD expression
-- On BIT_OR reduce production expression -> expression MOD expression
-- On BIT_AND reduce production expression -> expression MOD expression
-- On AND reduce production expression -> expression MOD expression

State 80:
expression -> expression L_BRACKET . expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression L_BRACKET . expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 81
-- On dotPrefix shift to state 91

State 81:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression L_BRACKET expression . R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression L_BRACKET expression . COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_BRACKET shift to state 82
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On COLON shift to state 151
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 82:
expression -> expression L_BRACKET expression R_BRACKET . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On SEMICOLON reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On R_PAREN reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On R_BRACKET reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On R_BRACE reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On R_ANGLE reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On RANGE reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On QUESTION reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On PLUS_SAT reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On PLUSPLUS reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On PLUS reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On OR reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On NE reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On MUL reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On MOD reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On MINUS_SAT reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On MINUS reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On MASK reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On L_PAREN reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On L_BRACKET reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On L_ANGLE reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On LE reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On GE reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On EQ reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On DOT reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On DIV reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On COMMA reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On COLON reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On BIT_XOR reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On BIT_OR reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On BIT_AND reduce production expression -> expression L_BRACKET expression R_BRACKET
-- On AND reduce production expression -> expression L_BRACKET expression R_BRACKET

State 83:
expression -> expression QUESTION . expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 84
-- On dotPrefix shift to state 91

State 84:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression QUESTION expression . COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On COLON shift to state 149
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 85:
expression -> expression PLUS . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 86
-- On dotPrefix shift to state 91

State 86:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression PLUS expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On SHL reduce production expression -> expression PLUS expression
-- On SEMICOLON reduce production expression -> expression PLUS expression
-- On R_PAREN reduce production expression -> expression PLUS expression
-- On R_BRACKET reduce production expression -> expression PLUS expression
-- On R_BRACE reduce production expression -> expression PLUS expression
-- On R_ANGLE reduce production expression -> expression PLUS expression
-- On RANGE reduce production expression -> expression PLUS expression
-- On QUESTION reduce production expression -> expression PLUS expression
-- On PLUS_SAT reduce production expression -> expression PLUS expression
-- On PLUSPLUS reduce production expression -> expression PLUS expression
-- On PLUS reduce production expression -> expression PLUS expression
-- On OR reduce production expression -> expression PLUS expression
-- On NE reduce production expression -> expression PLUS expression
-- On MINUS_SAT reduce production expression -> expression PLUS expression
-- On MINUS reduce production expression -> expression PLUS expression
-- On MASK reduce production expression -> expression PLUS expression
-- On L_ANGLE reduce production expression -> expression PLUS expression
-- On LE reduce production expression -> expression PLUS expression
-- On GE reduce production expression -> expression PLUS expression
-- On EQ reduce production expression -> expression PLUS expression
-- On COMMA reduce production expression -> expression PLUS expression
-- On COLON reduce production expression -> expression PLUS expression
-- On BIT_XOR reduce production expression -> expression PLUS expression
-- On BIT_OR reduce production expression -> expression PLUS expression
-- On BIT_AND reduce production expression -> expression PLUS expression
-- On AND reduce production expression -> expression PLUS expression

State 87:
expression -> expression DOT . member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 36
-- On member shift to state 88

State 88:
expression -> expression DOT member . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> expression DOT member
-- On SEMICOLON reduce production expression -> expression DOT member
-- On R_PAREN reduce production expression -> expression DOT member
-- On R_BRACKET reduce production expression -> expression DOT member
-- On R_BRACE reduce production expression -> expression DOT member
-- On R_ANGLE reduce production expression -> expression DOT member
-- On RANGE reduce production expression -> expression DOT member
-- On QUESTION reduce production expression -> expression DOT member
-- On PLUS_SAT reduce production expression -> expression DOT member
-- On PLUSPLUS reduce production expression -> expression DOT member
-- On PLUS reduce production expression -> expression DOT member
-- On OR reduce production expression -> expression DOT member
-- On NE reduce production expression -> expression DOT member
-- On MUL reduce production expression -> expression DOT member
-- On MOD reduce production expression -> expression DOT member
-- On MINUS_SAT reduce production expression -> expression DOT member
-- On MINUS reduce production expression -> expression DOT member
-- On MASK reduce production expression -> expression DOT member
-- On L_PAREN reduce production expression -> expression DOT member
-- On L_BRACKET reduce production expression -> expression DOT member
-- On L_ANGLE reduce production expression -> expression DOT member
-- On LE reduce production expression -> expression DOT member
-- On GE reduce production expression -> expression DOT member
-- On EQ reduce production expression -> expression DOT member
-- On DOT reduce production expression -> expression DOT member
-- On DIV reduce production expression -> expression DOT member
-- On COMMA reduce production expression -> expression DOT member
-- On COLON reduce production expression -> expression DOT member
-- On BIT_XOR reduce production expression -> expression DOT member
-- On BIT_OR reduce production expression -> expression DOT member
-- On BIT_AND reduce production expression -> expression DOT member
-- On AND reduce production expression -> expression DOT member

State 89:
expression -> expression DIV . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 90
-- On dotPrefix shift to state 91

State 90:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression DIV expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On SHL reduce production expression -> expression DIV expression
-- On SEMICOLON reduce production expression -> expression DIV expression
-- On R_PAREN reduce production expression -> expression DIV expression
-- On R_BRACKET reduce production expression -> expression DIV expression
-- On R_BRACE reduce production expression -> expression DIV expression
-- On R_ANGLE reduce production expression -> expression DIV expression
-- On RANGE reduce production expression -> expression DIV expression
-- On QUESTION reduce production expression -> expression DIV expression
-- On PLUS_SAT reduce production expression -> expression DIV expression
-- On PLUSPLUS reduce production expression -> expression DIV expression
-- On PLUS reduce production expression -> expression DIV expression
-- On OR reduce production expression -> expression DIV expression
-- On NE reduce production expression -> expression DIV expression
-- On MUL reduce production expression -> expression DIV expression
-- On MOD reduce production expression -> expression DIV expression
-- On MINUS_SAT reduce production expression -> expression DIV expression
-- On MINUS reduce production expression -> expression DIV expression
-- On MASK reduce production expression -> expression DIV expression
-- On L_ANGLE reduce production expression -> expression DIV expression
-- On LE reduce production expression -> expression DIV expression
-- On GE reduce production expression -> expression DIV expression
-- On EQ reduce production expression -> expression DIV expression
-- On DIV reduce production expression -> expression DIV expression
-- On COMMA reduce production expression -> expression DIV expression
-- On COLON reduce production expression -> expression DIV expression
-- On BIT_XOR reduce production expression -> expression DIV expression
-- On BIT_OR reduce production expression -> expression DIV expression
-- On BIT_AND reduce production expression -> expression DIV expression
-- On AND reduce production expression -> expression DIV expression

State 91:
expression -> dotPrefix . go_toplevel nonTypeName go_local [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
prefixedType -> dotPrefix . go_toplevel NAME TYPENAME go_local [ R_PAREN R_ANGLE L_PAREN L_BRACKET L_ANGLE DOT COMMA ]
-- On go_toplevel shift to state 92
-- On TYPE reduce production go_toplevel ->
-- On STATE reduce production go_toplevel ->
-- On NAME reduce production go_toplevel ->
-- On KEY reduce production go_toplevel ->
-- On ENTRIES reduce production go_toplevel ->
-- On APPLY reduce production go_toplevel ->
-- On ACTIONS reduce production go_toplevel ->

State 92:
expression -> dotPrefix go_toplevel . nonTypeName go_local [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
prefixedType -> dotPrefix go_toplevel . NAME TYPENAME go_local [ R_PAREN R_ANGLE L_PAREN L_BRACKET L_ANGLE DOT COMMA ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 93
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 96

State 93:
prefixedType -> dotPrefix go_toplevel NAME . TYPENAME go_local [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN L_BRACKET L_ANGLE KEY ENTRIES DOT COMMA APPLY ACTIONS ]
varName -> NAME . IDENTIFIER [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND ASSIGN AND ]
-- On TYPENAME shift to state 94
-- On IDENTIFIER shift to state 13

State 94:
prefixedType -> dotPrefix go_toplevel NAME TYPENAME . go_local [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN L_BRACKET L_ANGLE KEY ENTRIES DOT COMMA APPLY ACTIONS ]
-- On go_local shift to state 95
-- On TYPE reduce production go_local ->
-- On STATE reduce production go_local ->
-- On R_PAREN reduce production go_local ->
-- On R_ANGLE reduce production go_local ->
-- On NAME reduce production go_local ->
-- On L_PAREN reduce production go_local ->
-- On L_BRACKET reduce production go_local ->
-- On L_ANGLE reduce production go_local ->
-- On KEY reduce production go_local ->
-- On ENTRIES reduce production go_local ->
-- On DOT reduce production go_local ->
-- On COMMA reduce production go_local ->
-- On APPLY reduce production go_local ->
-- On ACTIONS reduce production go_local ->

State 95:
prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN L_BRACKET L_ANGLE KEY ENTRIES DOT COMMA APPLY ACTIONS ]
-- On TYPE reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On STATE reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On R_PAREN reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On R_ANGLE reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On NAME reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On L_PAREN reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On L_BRACKET reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On L_ANGLE reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On KEY reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On ENTRIES reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On DOT reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On COMMA reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On APPLY reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local
-- On ACTIONS reduce production prefixedType -> dotPrefix go_toplevel NAME TYPENAME go_local

State 96:
expression -> dotPrefix go_toplevel nonTypeName . go_local [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On go_local shift to state 97
-- On SHL reduce production go_local ->
-- On SEMICOLON reduce production go_local ->
-- On R_PAREN reduce production go_local ->
-- On R_BRACKET reduce production go_local ->
-- On R_BRACE reduce production go_local ->
-- On R_ANGLE reduce production go_local ->
-- On RANGE reduce production go_local ->
-- On QUESTION reduce production go_local ->
-- On PLUS_SAT reduce production go_local ->
-- On PLUSPLUS reduce production go_local ->
-- On PLUS reduce production go_local ->
-- On OR reduce production go_local ->
-- On NE reduce production go_local ->
-- On MUL reduce production go_local ->
-- On MOD reduce production go_local ->
-- On MINUS_SAT reduce production go_local ->
-- On MINUS reduce production go_local ->
-- On MASK reduce production go_local ->
-- On L_PAREN reduce production go_local ->
-- On L_BRACKET reduce production go_local ->
-- On L_ANGLE reduce production go_local ->
-- On LE reduce production go_local ->
-- On GE reduce production go_local ->
-- On EQ reduce production go_local ->
-- On DOT reduce production go_local ->
-- On DIV reduce production go_local ->
-- On COMMA reduce production go_local ->
-- On COLON reduce production go_local ->
-- On BIT_XOR reduce production go_local ->
-- On BIT_OR reduce production go_local ->
-- On BIT_AND reduce production go_local ->
-- On AND reduce production go_local ->

State 97:
expression -> dotPrefix go_toplevel nonTypeName go_local . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On SEMICOLON reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On R_PAREN reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On R_BRACKET reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On R_BRACE reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On R_ANGLE reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On RANGE reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On QUESTION reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On PLUS_SAT reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On PLUSPLUS reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On PLUS reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On OR reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On NE reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On MUL reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On MOD reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On MINUS_SAT reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On MINUS reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On MASK reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On L_PAREN reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On L_BRACKET reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On L_ANGLE reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On LE reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On GE reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On EQ reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On DOT reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On DIV reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On COMMA reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On COLON reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On BIT_XOR reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On BIT_OR reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On BIT_AND reduce production expression -> dotPrefix go_toplevel nonTypeName go_local
-- On AND reduce production expression -> dotPrefix go_toplevel nonTypeName go_local

State 98:
expression -> expression OR . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 99
-- On dotPrefix shift to state 91

State 99:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression OR expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On SEMICOLON reduce production expression -> expression OR expression
-- On R_PAREN reduce production expression -> expression OR expression
-- On R_BRACKET reduce production expression -> expression OR expression
-- On R_BRACE reduce production expression -> expression OR expression
-- On RANGE reduce production expression -> expression OR expression
-- On QUESTION reduce production expression -> expression OR expression
-- On OR reduce production expression -> expression OR expression
-- On MASK reduce production expression -> expression OR expression
-- On COMMA reduce production expression -> expression OR expression
-- On COLON reduce production expression -> expression OR expression

State 100:
expression -> expression NE . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 101
-- On dotPrefix shift to state 91

State 101:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression NE expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On SEMICOLON reduce production expression -> expression NE expression
-- On R_PAREN reduce production expression -> expression NE expression
-- On R_BRACKET reduce production expression -> expression NE expression
-- On R_BRACE reduce production expression -> expression NE expression
-- On RANGE reduce production expression -> expression NE expression
-- On QUESTION reduce production expression -> expression NE expression
-- On OR reduce production expression -> expression NE expression
-- On NE reduce production expression -> expression NE expression
-- On MASK reduce production expression -> expression NE expression
-- On EQ reduce production expression -> expression NE expression
-- On COMMA reduce production expression -> expression NE expression
-- On COLON reduce production expression -> expression NE expression
-- On AND reduce production expression -> expression NE expression

State 102:
expression -> expression MINUS_SAT . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 103
-- On dotPrefix shift to state 91

State 103:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression MINUS_SAT expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On SHL reduce production expression -> expression MINUS_SAT expression
-- On SEMICOLON reduce production expression -> expression MINUS_SAT expression
-- On R_PAREN reduce production expression -> expression MINUS_SAT expression
-- On R_BRACKET reduce production expression -> expression MINUS_SAT expression
-- On R_BRACE reduce production expression -> expression MINUS_SAT expression
-- On R_ANGLE reduce production expression -> expression MINUS_SAT expression
-- On RANGE reduce production expression -> expression MINUS_SAT expression
-- On QUESTION reduce production expression -> expression MINUS_SAT expression
-- On PLUS_SAT reduce production expression -> expression MINUS_SAT expression
-- On PLUSPLUS reduce production expression -> expression MINUS_SAT expression
-- On PLUS reduce production expression -> expression MINUS_SAT expression
-- On OR reduce production expression -> expression MINUS_SAT expression
-- On NE reduce production expression -> expression MINUS_SAT expression
-- On MINUS_SAT reduce production expression -> expression MINUS_SAT expression
-- On MINUS reduce production expression -> expression MINUS_SAT expression
-- On MASK reduce production expression -> expression MINUS_SAT expression
-- On L_ANGLE reduce production expression -> expression MINUS_SAT expression
-- On LE reduce production expression -> expression MINUS_SAT expression
-- On GE reduce production expression -> expression MINUS_SAT expression
-- On EQ reduce production expression -> expression MINUS_SAT expression
-- On COMMA reduce production expression -> expression MINUS_SAT expression
-- On COLON reduce production expression -> expression MINUS_SAT expression
-- On BIT_XOR reduce production expression -> expression MINUS_SAT expression
-- On BIT_OR reduce production expression -> expression MINUS_SAT expression
-- On BIT_AND reduce production expression -> expression MINUS_SAT expression
-- On AND reduce production expression -> expression MINUS_SAT expression

State 104:
expression -> expression MINUS . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 105
-- On dotPrefix shift to state 91

State 105:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression MINUS expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On SHL reduce production expression -> expression MINUS expression
-- On SEMICOLON reduce production expression -> expression MINUS expression
-- On R_PAREN reduce production expression -> expression MINUS expression
-- On R_BRACKET reduce production expression -> expression MINUS expression
-- On R_BRACE reduce production expression -> expression MINUS expression
-- On R_ANGLE reduce production expression -> expression MINUS expression
-- On RANGE reduce production expression -> expression MINUS expression
-- On QUESTION reduce production expression -> expression MINUS expression
-- On PLUS_SAT reduce production expression -> expression MINUS expression
-- On PLUSPLUS reduce production expression -> expression MINUS expression
-- On PLUS reduce production expression -> expression MINUS expression
-- On OR reduce production expression -> expression MINUS expression
-- On NE reduce production expression -> expression MINUS expression
-- On MINUS_SAT reduce production expression -> expression MINUS expression
-- On MINUS reduce production expression -> expression MINUS expression
-- On MASK reduce production expression -> expression MINUS expression
-- On L_ANGLE reduce production expression -> expression MINUS expression
-- On LE reduce production expression -> expression MINUS expression
-- On GE reduce production expression -> expression MINUS expression
-- On EQ reduce production expression -> expression MINUS expression
-- On COMMA reduce production expression -> expression MINUS expression
-- On COLON reduce production expression -> expression MINUS expression
-- On BIT_XOR reduce production expression -> expression MINUS expression
-- On BIT_OR reduce production expression -> expression MINUS expression
-- On BIT_AND reduce production expression -> expression MINUS expression
-- On AND reduce production expression -> expression MINUS expression

State 106:
expression -> expression L_ANGLE . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression L_ANGLE . realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On INT shift to state 20
-- On FALSE shift to state 25
-- On ERROR shift to state 107
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 108
-- On COMPLEMENT shift to state 39
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeRef shift to state 109
-- On typeName shift to state 110
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 129
-- On realTypeArgumentList shift to state 130
-- On realTypeArg shift to state 147
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On headerStackType shift to state 142
-- On expression shift to state 148
-- On dotPrefix shift to state 91
-- On baseType shift to state 146

State 107:
baseType -> ERROR . [ R_PAREN R_ANGLE COMMA ]
expression -> ERROR . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On DOT shift to state 27
-- On R_PAREN reduce production baseType -> ERROR
-- On R_ANGLE reduce production baseType -> ERROR
-- On COMMA reduce production baseType -> ERROR

State 108:
realTypeArg -> DONTCARE . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production realTypeArg -> DONTCARE
-- On COMMA reduce production realTypeArg -> DONTCARE

State 109:
realTypeArg -> typeRef . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production realTypeArg -> typeRef
-- On COMMA reduce production realTypeArg -> typeRef

State 110:
expression -> typeName . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
headerStackType -> typeName . L_BRACKET expression R_BRACKET [ R_PAREN R_ANGLE COMMA ]
namedType -> typeName . [ L_PAREN ]
typeRef -> typeName . [ R_PAREN R_ANGLE COMMA ]
-- On L_BRACKET shift to state 111
-- On DOT shift to state 41
-- On R_PAREN reduce production typeRef -> typeName
-- On R_ANGLE reduce production typeRef -> typeName
-- On L_PAREN reduce production namedType -> typeName
-- On COMMA reduce production typeRef -> typeName

State 111:
headerStackType -> typeName L_BRACKET . expression R_BRACKET [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 112
-- On dotPrefix shift to state 91

State 112:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
headerStackType -> typeName L_BRACKET expression . R_BRACKET [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On SHL shift to state 64
-- On R_BRACKET shift to state 113
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 113:
headerStackType -> typeName L_BRACKET expression R_BRACKET . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production headerStackType -> typeName L_BRACKET expression R_BRACKET
-- On STATE reduce production headerStackType -> typeName L_BRACKET expression R_BRACKET
-- On R_PAREN reduce production headerStackType -> typeName L_BRACKET expression R_BRACKET
-- On R_ANGLE reduce production headerStackType -> typeName L_BRACKET expression R_BRACKET
-- On NAME reduce production headerStackType -> typeName L_BRACKET expression R_BRACKET
-- On L_PAREN reduce production headerStackType -> typeName L_BRACKET expression R_BRACKET
-- On KEY reduce production headerStackType -> typeName L_BRACKET expression R_BRACKET
-- On ENTRIES reduce production headerStackType -> typeName L_BRACKET expression R_BRACKET
-- On COMMA reduce production headerStackType -> typeName L_BRACKET expression R_BRACKET
-- On APPLY reduce production headerStackType -> typeName L_BRACKET expression R_BRACKET
-- On ACTIONS reduce production headerStackType -> typeName L_BRACKET expression R_BRACKET

State 114:
expression -> expression LE . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 115
-- On dotPrefix shift to state 91

State 115:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression LE expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On SEMICOLON reduce production expression -> expression LE expression
-- On R_PAREN reduce production expression -> expression LE expression
-- On R_BRACKET reduce production expression -> expression LE expression
-- On R_BRACE reduce production expression -> expression LE expression
-- On R_ANGLE reduce production expression -> expression LE expression
-- On RANGE reduce production expression -> expression LE expression
-- On QUESTION reduce production expression -> expression LE expression
-- On OR reduce production expression -> expression LE expression
-- On NE reduce production expression -> expression LE expression
-- On MASK reduce production expression -> expression LE expression
-- On L_ANGLE reduce production expression -> expression LE expression
-- On LE reduce production expression -> expression LE expression
-- On GE reduce production expression -> expression LE expression
-- On EQ reduce production expression -> expression LE expression
-- On COMMA reduce production expression -> expression LE expression
-- On COLON reduce production expression -> expression LE expression
-- On AND reduce production expression -> expression LE expression

State 116:
expression -> expression BIT_XOR . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 117
-- On dotPrefix shift to state 91

State 117:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression BIT_XOR expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_AND shift to state 118
-- On SEMICOLON reduce production expression -> expression BIT_XOR expression
-- On R_PAREN reduce production expression -> expression BIT_XOR expression
-- On R_BRACKET reduce production expression -> expression BIT_XOR expression
-- On R_BRACE reduce production expression -> expression BIT_XOR expression
-- On R_ANGLE reduce production expression -> expression BIT_XOR expression
-- On RANGE reduce production expression -> expression BIT_XOR expression
-- On QUESTION reduce production expression -> expression BIT_XOR expression
-- On OR reduce production expression -> expression BIT_XOR expression
-- On NE reduce production expression -> expression BIT_XOR expression
-- On MASK reduce production expression -> expression BIT_XOR expression
-- On L_ANGLE reduce production expression -> expression BIT_XOR expression
-- On LE reduce production expression -> expression BIT_XOR expression
-- On GE reduce production expression -> expression BIT_XOR expression
-- On EQ reduce production expression -> expression BIT_XOR expression
-- On COMMA reduce production expression -> expression BIT_XOR expression
-- On COLON reduce production expression -> expression BIT_XOR expression
-- On BIT_XOR reduce production expression -> expression BIT_XOR expression
-- On BIT_OR reduce production expression -> expression BIT_XOR expression
-- On AND reduce production expression -> expression BIT_XOR expression

State 118:
expression -> expression BIT_AND . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 119
-- On dotPrefix shift to state 91

State 119:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression BIT_AND expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On SEMICOLON reduce production expression -> expression BIT_AND expression
-- On R_PAREN reduce production expression -> expression BIT_AND expression
-- On R_BRACKET reduce production expression -> expression BIT_AND expression
-- On R_BRACE reduce production expression -> expression BIT_AND expression
-- On R_ANGLE reduce production expression -> expression BIT_AND expression
-- On RANGE reduce production expression -> expression BIT_AND expression
-- On QUESTION reduce production expression -> expression BIT_AND expression
-- On OR reduce production expression -> expression BIT_AND expression
-- On NE reduce production expression -> expression BIT_AND expression
-- On MASK reduce production expression -> expression BIT_AND expression
-- On L_ANGLE reduce production expression -> expression BIT_AND expression
-- On LE reduce production expression -> expression BIT_AND expression
-- On GE reduce production expression -> expression BIT_AND expression
-- On EQ reduce production expression -> expression BIT_AND expression
-- On COMMA reduce production expression -> expression BIT_AND expression
-- On COLON reduce production expression -> expression BIT_AND expression
-- On BIT_XOR reduce production expression -> expression BIT_AND expression
-- On BIT_OR reduce production expression -> expression BIT_AND expression
-- On BIT_AND reduce production expression -> expression BIT_AND expression
-- On AND reduce production expression -> expression BIT_AND expression

State 120:
expression -> expression BIT_OR . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 121
-- On dotPrefix shift to state 91

State 121:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression BIT_OR expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_AND shift to state 118
-- On SEMICOLON reduce production expression -> expression BIT_OR expression
-- On R_PAREN reduce production expression -> expression BIT_OR expression
-- On R_BRACKET reduce production expression -> expression BIT_OR expression
-- On R_BRACE reduce production expression -> expression BIT_OR expression
-- On R_ANGLE reduce production expression -> expression BIT_OR expression
-- On RANGE reduce production expression -> expression BIT_OR expression
-- On QUESTION reduce production expression -> expression BIT_OR expression
-- On OR reduce production expression -> expression BIT_OR expression
-- On NE reduce production expression -> expression BIT_OR expression
-- On MASK reduce production expression -> expression BIT_OR expression
-- On L_ANGLE reduce production expression -> expression BIT_OR expression
-- On LE reduce production expression -> expression BIT_OR expression
-- On GE reduce production expression -> expression BIT_OR expression
-- On EQ reduce production expression -> expression BIT_OR expression
-- On COMMA reduce production expression -> expression BIT_OR expression
-- On COLON reduce production expression -> expression BIT_OR expression
-- On BIT_OR reduce production expression -> expression BIT_OR expression
-- On AND reduce production expression -> expression BIT_OR expression

State 122:
expression -> expression GE . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 123
-- On dotPrefix shift to state 91

State 123:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression GE expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On SEMICOLON reduce production expression -> expression GE expression
-- On R_PAREN reduce production expression -> expression GE expression
-- On R_BRACKET reduce production expression -> expression GE expression
-- On R_BRACE reduce production expression -> expression GE expression
-- On R_ANGLE reduce production expression -> expression GE expression
-- On RANGE reduce production expression -> expression GE expression
-- On QUESTION reduce production expression -> expression GE expression
-- On OR reduce production expression -> expression GE expression
-- On NE reduce production expression -> expression GE expression
-- On MASK reduce production expression -> expression GE expression
-- On L_ANGLE reduce production expression -> expression GE expression
-- On LE reduce production expression -> expression GE expression
-- On GE reduce production expression -> expression GE expression
-- On EQ reduce production expression -> expression GE expression
-- On COMMA reduce production expression -> expression GE expression
-- On COLON reduce production expression -> expression GE expression
-- On AND reduce production expression -> expression GE expression

State 124:
expression -> expression EQ . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 125
-- On dotPrefix shift to state 91

State 125:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression EQ expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On SEMICOLON reduce production expression -> expression EQ expression
-- On R_PAREN reduce production expression -> expression EQ expression
-- On R_BRACKET reduce production expression -> expression EQ expression
-- On R_BRACE reduce production expression -> expression EQ expression
-- On RANGE reduce production expression -> expression EQ expression
-- On QUESTION reduce production expression -> expression EQ expression
-- On OR reduce production expression -> expression EQ expression
-- On NE reduce production expression -> expression EQ expression
-- On MASK reduce production expression -> expression EQ expression
-- On EQ reduce production expression -> expression EQ expression
-- On COMMA reduce production expression -> expression EQ expression
-- On COLON reduce production expression -> expression EQ expression
-- On AND reduce production expression -> expression EQ expression

State 126:
expression -> expression AND . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 127
-- On dotPrefix shift to state 91

State 127:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression AND expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On SEMICOLON reduce production expression -> expression AND expression
-- On R_PAREN reduce production expression -> expression AND expression
-- On R_BRACKET reduce production expression -> expression AND expression
-- On R_BRACE reduce production expression -> expression AND expression
-- On RANGE reduce production expression -> expression AND expression
-- On QUESTION reduce production expression -> expression AND expression
-- On OR reduce production expression -> expression AND expression
-- On MASK reduce production expression -> expression AND expression
-- On COMMA reduce production expression -> expression AND expression
-- On COLON reduce production expression -> expression AND expression
-- On AND reduce production expression -> expression AND expression

State 128:
typeRef -> tupleType . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production typeRef -> tupleType
-- On STATE reduce production typeRef -> tupleType
-- On R_PAREN reduce production typeRef -> tupleType
-- On R_ANGLE reduce production typeRef -> tupleType
-- On NAME reduce production typeRef -> tupleType
-- On L_PAREN reduce production typeRef -> tupleType
-- On KEY reduce production typeRef -> tupleType
-- On ENTRIES reduce production typeRef -> tupleType
-- On COMMA reduce production typeRef -> tupleType
-- On APPLY reduce production typeRef -> tupleType
-- On ACTIONS reduce production typeRef -> tupleType

State 129:
namedType -> specializedType . [ L_PAREN ]
typeRef -> specializedType . [ R_PAREN R_ANGLE COMMA ]
-- On R_PAREN reduce production typeRef -> specializedType
-- On R_ANGLE reduce production typeRef -> specializedType
-- On L_PAREN reduce production namedType -> specializedType
-- On COMMA reduce production typeRef -> specializedType

State 130:
expression -> expression L_ANGLE realTypeArgumentList . R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
realTypeArgumentList -> realTypeArgumentList . COMMA typeArg [ R_ANGLE COMMA ]
-- On R_ANGLE shift to state 131
-- On COMMA shift to state 136

State 131:
expression -> expression L_ANGLE realTypeArgumentList R_ANGLE . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On L_PAREN shift to state 132

State 132:
expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN . argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 57
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,argument) shift to state 58
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,argument) shift to state 71
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 61
-- On expression shift to state 72
-- On dotPrefix shift to state 91
-- On argumentList shift to state 133
-- On argument shift to state 135
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) ->
-- On COMMA reduce production separated_list_aux(COMMA,argument) ->

State 133:
expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList . R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On R_PAREN shift to state 134

State 134:
expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On SEMICOLON reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On R_PAREN reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On R_BRACKET reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On R_BRACE reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On R_ANGLE reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On RANGE reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On QUESTION reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On PLUS_SAT reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On PLUSPLUS reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On PLUS reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On OR reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On NE reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On MUL reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On MOD reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On MINUS_SAT reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On MINUS reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On MASK reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On L_PAREN reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On L_BRACKET reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On L_ANGLE reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On LE reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On GE reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On EQ reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On DOT reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On DIV reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On COMMA reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On COLON reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On BIT_XOR reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On BIT_OR reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On BIT_AND reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN
-- On AND reduce production expression -> expression L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN

State 135:
separated_list_aux(COMMA,argument) -> argument . [ R_PAREN COMMA ]
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) -> argument
-- On COMMA reduce production separated_list_aux(COMMA,argument) -> argument

State 136:
realTypeArgumentList -> realTypeArgumentList COMMA . typeArg [ R_ANGLE COMMA ]
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On NAME shift to state 11
-- On KEY shift to state 19
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 47
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeRef shift to state 137
-- On typeName shift to state 138
-- On typeArg shift to state 139
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 141
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 137:
typeArg -> typeRef . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production typeArg -> typeRef
-- On COMMA reduce production typeArg -> typeRef

State 138:
headerStackType -> typeName . L_BRACKET expression R_BRACKET [ TYPE STATE R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
typeRef -> typeName . [ TYPE STATE R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On L_BRACKET shift to state 111
-- On TYPE reduce production typeRef -> typeName
-- On STATE reduce production typeRef -> typeName
-- On R_ANGLE reduce production typeRef -> typeName
-- On NAME reduce production typeRef -> typeName
-- On L_PAREN reduce production typeRef -> typeName
-- On KEY reduce production typeRef -> typeName
-- On ENTRIES reduce production typeRef -> typeName
-- On COMMA reduce production typeRef -> typeName
-- On APPLY reduce production typeRef -> typeName
-- On ACTIONS reduce production typeRef -> typeName

State 139:
realTypeArgumentList -> realTypeArgumentList COMMA typeArg . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production realTypeArgumentList -> realTypeArgumentList COMMA typeArg
-- On COMMA reduce production realTypeArgumentList -> realTypeArgumentList COMMA typeArg

State 140:
typeRef -> specializedType . [ TYPE STATE R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production typeRef -> specializedType
-- On STATE reduce production typeRef -> specializedType
-- On R_ANGLE reduce production typeRef -> specializedType
-- On NAME reduce production typeRef -> specializedType
-- On L_PAREN reduce production typeRef -> specializedType
-- On KEY reduce production typeRef -> specializedType
-- On ENTRIES reduce production typeRef -> specializedType
-- On COMMA reduce production typeRef -> specializedType
-- On APPLY reduce production typeRef -> specializedType
-- On ACTIONS reduce production typeRef -> specializedType

State 141:
typeArg -> nonTypeName . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production typeArg -> nonTypeName
-- On COMMA reduce production typeArg -> nonTypeName

State 142:
typeRef -> headerStackType . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production typeRef -> headerStackType
-- On STATE reduce production typeRef -> headerStackType
-- On R_PAREN reduce production typeRef -> headerStackType
-- On R_ANGLE reduce production typeRef -> headerStackType
-- On NAME reduce production typeRef -> headerStackType
-- On L_PAREN reduce production typeRef -> headerStackType
-- On KEY reduce production typeRef -> headerStackType
-- On ENTRIES reduce production typeRef -> headerStackType
-- On COMMA reduce production typeRef -> headerStackType
-- On APPLY reduce production typeRef -> headerStackType
-- On ACTIONS reduce production typeRef -> headerStackType

State 143:
prefixedType -> dotPrefix . go_toplevel NAME TYPENAME go_local [ TYPE STATE R_ANGLE NAME L_PAREN L_BRACKET L_ANGLE KEY ENTRIES COMMA APPLY ACTIONS ]
-- On go_toplevel shift to state 144
-- On NAME reduce production go_toplevel ->

State 144:
prefixedType -> dotPrefix go_toplevel . NAME TYPENAME go_local [ TYPE STATE R_ANGLE NAME L_PAREN L_BRACKET L_ANGLE KEY ENTRIES COMMA APPLY ACTIONS ]
-- On NAME shift to state 145

State 145:
prefixedType -> dotPrefix go_toplevel NAME . TYPENAME go_local [ TYPE STATE R_ANGLE NAME L_PAREN L_BRACKET L_ANGLE KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPENAME shift to state 94

State 146:
typeRef -> baseType . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production typeRef -> baseType
-- On STATE reduce production typeRef -> baseType
-- On R_PAREN reduce production typeRef -> baseType
-- On R_ANGLE reduce production typeRef -> baseType
-- On NAME reduce production typeRef -> baseType
-- On L_PAREN reduce production typeRef -> baseType
-- On KEY reduce production typeRef -> baseType
-- On ENTRIES reduce production typeRef -> baseType
-- On COMMA reduce production typeRef -> baseType
-- On APPLY reduce production typeRef -> baseType
-- On ACTIONS reduce production typeRef -> baseType

State 147:
realTypeArgumentList -> realTypeArg . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production realTypeArgumentList -> realTypeArg
-- On COMMA reduce production realTypeArgumentList -> realTypeArg

State 148:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression L_ANGLE expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On SEMICOLON reduce production expression -> expression L_ANGLE expression
-- On R_PAREN reduce production expression -> expression L_ANGLE expression
-- On R_BRACKET reduce production expression -> expression L_ANGLE expression
-- On R_BRACE reduce production expression -> expression L_ANGLE expression
-- On R_ANGLE reduce production expression -> expression L_ANGLE expression
-- On RANGE reduce production expression -> expression L_ANGLE expression
-- On QUESTION reduce production expression -> expression L_ANGLE expression
-- On OR reduce production expression -> expression L_ANGLE expression
-- On NE reduce production expression -> expression L_ANGLE expression
-- On MASK reduce production expression -> expression L_ANGLE expression
-- On L_ANGLE reduce production expression -> expression L_ANGLE expression
-- On LE reduce production expression -> expression L_ANGLE expression
-- On GE reduce production expression -> expression L_ANGLE expression
-- On EQ reduce production expression -> expression L_ANGLE expression
-- On COMMA reduce production expression -> expression L_ANGLE expression
-- On COLON reduce production expression -> expression L_ANGLE expression
-- On AND reduce production expression -> expression L_ANGLE expression

State 149:
expression -> expression QUESTION expression COLON . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 150
-- On dotPrefix shift to state 91

State 150:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression QUESTION expression COLON expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On SEMICOLON reduce production expression -> expression QUESTION expression COLON expression
-- On R_PAREN reduce production expression -> expression QUESTION expression COLON expression
-- On R_BRACKET reduce production expression -> expression QUESTION expression COLON expression
-- On R_BRACE reduce production expression -> expression QUESTION expression COLON expression
-- On RANGE reduce production expression -> expression QUESTION expression COLON expression
-- On QUESTION reduce production expression -> expression QUESTION expression COLON expression
-- On MASK reduce production expression -> expression QUESTION expression COLON expression
-- On COMMA reduce production expression -> expression QUESTION expression COLON expression
-- On COLON reduce production expression -> expression QUESTION expression COLON expression

State 151:
expression -> expression L_BRACKET expression COLON . expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 152
-- On dotPrefix shift to state 91

State 152:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression L_BRACKET expression COLON expression . R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_BRACKET shift to state 153
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 153:
expression -> expression L_BRACKET expression COLON expression R_BRACKET . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On SEMICOLON reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On R_PAREN reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On R_BRACKET reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On R_BRACE reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On R_ANGLE reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On RANGE reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On QUESTION reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On PLUS_SAT reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On PLUSPLUS reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On PLUS reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On OR reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On NE reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On MUL reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On MOD reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On MINUS_SAT reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On MINUS reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On MASK reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On L_PAREN reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On L_BRACKET reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On L_ANGLE reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On LE reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On GE reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On EQ reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On DOT reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On DIV reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On COMMA reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On COLON reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On BIT_XOR reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On BIT_OR reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On BIT_AND reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET
-- On AND reduce production expression -> expression L_BRACKET expression COLON expression R_BRACKET

State 154:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression R_ANGLE expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On SEMICOLON reduce production expression -> expression R_ANGLE expression
-- On R_PAREN reduce production expression -> expression R_ANGLE expression
-- On R_BRACKET reduce production expression -> expression R_ANGLE expression
-- On R_BRACE reduce production expression -> expression R_ANGLE expression
-- On R_ANGLE reduce production expression -> expression R_ANGLE expression
-- On RANGE reduce production expression -> expression R_ANGLE expression
-- On QUESTION reduce production expression -> expression R_ANGLE expression
-- On OR reduce production expression -> expression R_ANGLE expression
-- On NE reduce production expression -> expression R_ANGLE expression
-- On MASK reduce production expression -> expression R_ANGLE expression
-- On L_ANGLE reduce production expression -> expression R_ANGLE expression
-- On LE reduce production expression -> expression R_ANGLE expression
-- On GE reduce production expression -> expression R_ANGLE expression
-- On EQ reduce production expression -> expression R_ANGLE expression
-- On COMMA reduce production expression -> expression R_ANGLE expression
-- On COLON reduce production expression -> expression R_ANGLE expression
-- On AND reduce production expression -> expression R_ANGLE expression

State 155:
expression -> expression L_PAREN argumentList . R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On R_PAREN shift to state 156

State 156:
expression -> expression L_PAREN argumentList R_PAREN . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On SEMICOLON reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On R_PAREN reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On R_BRACKET reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On R_BRACE reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On R_ANGLE reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On RANGE reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On QUESTION reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On PLUS_SAT reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On PLUSPLUS reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On PLUS reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On OR reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On NE reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On MUL reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On MOD reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On MINUS_SAT reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On MINUS reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On MASK reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On L_PAREN reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On L_BRACKET reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On L_ANGLE reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On LE reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On GE reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On EQ reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On DOT reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On DIV reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On COMMA reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On COLON reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On BIT_XOR reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On BIT_OR reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On BIT_AND reduce production expression -> expression L_PAREN argumentList R_PAREN
-- On AND reduce production expression -> expression L_PAREN argumentList R_PAREN

State 157:
separated_list_aux(COMMA,argument) -> separated_list_aux(COMMA,argument) COMMA argument . [ R_PAREN COMMA ]
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) -> separated_list_aux(COMMA,argument) COMMA argument
-- On COMMA reduce production separated_list_aux(COMMA,argument) -> separated_list_aux(COMMA,argument) COMMA argument

State 158:
expression -> namedType L_PAREN argumentList . R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On R_PAREN shift to state 159

State 159:
expression -> namedType L_PAREN argumentList R_PAREN . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On SEMICOLON reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On R_PAREN reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On R_BRACKET reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On R_BRACE reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On R_ANGLE reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On RANGE reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On QUESTION reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On PLUS_SAT reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On PLUSPLUS reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On PLUS reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On OR reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On NE reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On MUL reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On MOD reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On MINUS_SAT reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On MINUS reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On MASK reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On L_PAREN reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On L_BRACKET reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On L_ANGLE reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On LE reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On GE reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On EQ reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On DOT reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On DIV reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On COMMA reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On COLON reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On BIT_XOR reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On BIT_OR reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On BIT_AND reduce production expression -> namedType L_PAREN argumentList R_PAREN
-- On AND reduce production expression -> namedType L_PAREN argumentList R_PAREN

State 160:
baseType -> BIT L_ANGLE L_PAREN expression . R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 161
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 161:
baseType -> BIT L_ANGLE L_PAREN expression R_PAREN . R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On R_ANGLE shift to state 162

State 162:
baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On STATE reduce production baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On R_PAREN reduce production baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On R_ANGLE reduce production baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On NAME reduce production baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On L_PAREN reduce production baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On KEY reduce production baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On ENTRIES reduce production baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On COMMA reduce production baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On APPLY reduce production baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On ACTIONS reduce production baseType -> BIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE

State 163:
baseType -> BIT L_ANGLE INTEGER . R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On R_ANGLE shift to state 164

State 164:
baseType -> BIT L_ANGLE INTEGER R_ANGLE . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production baseType -> BIT L_ANGLE INTEGER R_ANGLE
-- On STATE reduce production baseType -> BIT L_ANGLE INTEGER R_ANGLE
-- On R_PAREN reduce production baseType -> BIT L_ANGLE INTEGER R_ANGLE
-- On R_ANGLE reduce production baseType -> BIT L_ANGLE INTEGER R_ANGLE
-- On NAME reduce production baseType -> BIT L_ANGLE INTEGER R_ANGLE
-- On L_PAREN reduce production baseType -> BIT L_ANGLE INTEGER R_ANGLE
-- On KEY reduce production baseType -> BIT L_ANGLE INTEGER R_ANGLE
-- On ENTRIES reduce production baseType -> BIT L_ANGLE INTEGER R_ANGLE
-- On COMMA reduce production baseType -> BIT L_ANGLE INTEGER R_ANGLE
-- On APPLY reduce production baseType -> BIT L_ANGLE INTEGER R_ANGLE
-- On ACTIONS reduce production baseType -> BIT L_ANGLE INTEGER R_ANGLE

State 165:
specializedType -> prefixedType L_ANGLE typeArgumentList . R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On R_ANGLE shift to state 166

State 166:
specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE
-- On STATE reduce production specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE
-- On R_PAREN reduce production specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE
-- On R_ANGLE reduce production specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE
-- On NAME reduce production specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE
-- On L_PAREN reduce production specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE
-- On KEY reduce production specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE
-- On ENTRIES reduce production specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE
-- On COMMA reduce production specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE
-- On APPLY reduce production specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE
-- On ACTIONS reduce production specializedType -> prefixedType L_ANGLE typeArgumentList R_ANGLE

State 167:
separated_list_aux(COMMA,typeArg) -> typeArg . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production separated_list_aux(COMMA,typeArg) -> typeArg
-- On COMMA reduce production separated_list_aux(COMMA,typeArg) -> typeArg

State 168:
petr4_separated_list(COMMA,typeArg) -> separated_list_aux(COMMA,typeArg) . [ R_ANGLE ]
separated_list_aux(COMMA,typeArg) -> separated_list_aux(COMMA,typeArg) . COMMA typeArg [ R_ANGLE COMMA ]
-- On COMMA shift to state 169
-- On R_ANGLE reduce production petr4_separated_list(COMMA,typeArg) -> separated_list_aux(COMMA,typeArg)

State 169:
separated_list_aux(COMMA,typeArg) -> separated_list_aux(COMMA,typeArg) COMMA . typeArg [ R_ANGLE COMMA ]
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On NAME shift to state 11
-- On KEY shift to state 19
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 47
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeRef shift to state 137
-- On typeName shift to state 138
-- On typeArg shift to state 170
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 141
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 170:
separated_list_aux(COMMA,typeArg) -> separated_list_aux(COMMA,typeArg) COMMA typeArg . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production separated_list_aux(COMMA,typeArg) -> separated_list_aux(COMMA,typeArg) COMMA typeArg
-- On COMMA reduce production separated_list_aux(COMMA,typeArg) -> separated_list_aux(COMMA,typeArg) COMMA typeArg

State 171:
typeArgumentList -> petr4_separated_list(COMMA,typeArg) . [ R_ANGLE ]
-- On R_ANGLE reduce production typeArgumentList -> petr4_separated_list(COMMA,typeArg)

State 172:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> COMPLEMENT expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On SHL reduce production expression -> COMPLEMENT expression
-- On SEMICOLON reduce production expression -> COMPLEMENT expression
-- On R_PAREN reduce production expression -> COMPLEMENT expression
-- On R_BRACKET reduce production expression -> COMPLEMENT expression
-- On R_BRACE reduce production expression -> COMPLEMENT expression
-- On R_ANGLE reduce production expression -> COMPLEMENT expression
-- On RANGE reduce production expression -> COMPLEMENT expression
-- On QUESTION reduce production expression -> COMPLEMENT expression
-- On PLUS_SAT reduce production expression -> COMPLEMENT expression
-- On PLUSPLUS reduce production expression -> COMPLEMENT expression
-- On PLUS reduce production expression -> COMPLEMENT expression
-- On OR reduce production expression -> COMPLEMENT expression
-- On NE reduce production expression -> COMPLEMENT expression
-- On MUL reduce production expression -> COMPLEMENT expression
-- On MOD reduce production expression -> COMPLEMENT expression
-- On MINUS_SAT reduce production expression -> COMPLEMENT expression
-- On MINUS reduce production expression -> COMPLEMENT expression
-- On MASK reduce production expression -> COMPLEMENT expression
-- On L_ANGLE reduce production expression -> COMPLEMENT expression
-- On LE reduce production expression -> COMPLEMENT expression
-- On GE reduce production expression -> COMPLEMENT expression
-- On EQ reduce production expression -> COMPLEMENT expression
-- On DIV reduce production expression -> COMPLEMENT expression
-- On COMMA reduce production expression -> COMPLEMENT expression
-- On COLON reduce production expression -> COMPLEMENT expression
-- On BIT_XOR reduce production expression -> COMPLEMENT expression
-- On BIT_OR reduce production expression -> COMPLEMENT expression
-- On BIT_AND reduce production expression -> COMPLEMENT expression
-- On AND reduce production expression -> COMPLEMENT expression

State 173:
petr4_separated_list(COMMA,expression) -> separated_list_aux(COMMA,expression) . [ R_PAREN R_BRACKET R_BRACE ]
separated_list_aux(COMMA,expression) -> separated_list_aux(COMMA,expression) . COMMA expression [ R_PAREN R_BRACKET R_BRACE COMMA ]
-- On COMMA shift to state 174
-- On R_PAREN reduce production petr4_separated_list(COMMA,expression) -> separated_list_aux(COMMA,expression)
-- On R_BRACKET reduce production petr4_separated_list(COMMA,expression) -> separated_list_aux(COMMA,expression)
-- On R_BRACE reduce production petr4_separated_list(COMMA,expression) -> separated_list_aux(COMMA,expression)

State 174:
separated_list_aux(COMMA,expression) -> separated_list_aux(COMMA,expression) COMMA . expression [ R_PAREN R_BRACKET R_BRACE COMMA ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 175
-- On dotPrefix shift to state 91

State 175:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
separated_list_aux(COMMA,expression) -> separated_list_aux(COMMA,expression) COMMA expression . [ R_PAREN R_BRACKET R_BRACE COMMA ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On R_PAREN reduce production separated_list_aux(COMMA,expression) -> separated_list_aux(COMMA,expression) COMMA expression
-- On R_BRACKET reduce production separated_list_aux(COMMA,expression) -> separated_list_aux(COMMA,expression) COMMA expression
-- On R_BRACE reduce production separated_list_aux(COMMA,expression) -> separated_list_aux(COMMA,expression) COMMA expression
-- On COMMA reduce production separated_list_aux(COMMA,expression) -> separated_list_aux(COMMA,expression) COMMA expression

State 176:
expressionList -> petr4_separated_list(COMMA,expression) . [ R_PAREN R_BRACKET R_BRACE ]
-- On R_PAREN reduce production expressionList -> petr4_separated_list(COMMA,expression)
-- On R_BRACKET reduce production expressionList -> petr4_separated_list(COMMA,expression)
-- On R_BRACE reduce production expressionList -> petr4_separated_list(COMMA,expression)

State 177:
expression -> L_BRACE expressionList . R_BRACE [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On R_BRACE shift to state 178

State 178:
expression -> L_BRACE expressionList R_BRACE . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> L_BRACE expressionList R_BRACE
-- On SEMICOLON reduce production expression -> L_BRACE expressionList R_BRACE
-- On R_PAREN reduce production expression -> L_BRACE expressionList R_BRACE
-- On R_BRACKET reduce production expression -> L_BRACE expressionList R_BRACE
-- On R_BRACE reduce production expression -> L_BRACE expressionList R_BRACE
-- On R_ANGLE reduce production expression -> L_BRACE expressionList R_BRACE
-- On RANGE reduce production expression -> L_BRACE expressionList R_BRACE
-- On QUESTION reduce production expression -> L_BRACE expressionList R_BRACE
-- On PLUS_SAT reduce production expression -> L_BRACE expressionList R_BRACE
-- On PLUSPLUS reduce production expression -> L_BRACE expressionList R_BRACE
-- On PLUS reduce production expression -> L_BRACE expressionList R_BRACE
-- On OR reduce production expression -> L_BRACE expressionList R_BRACE
-- On NE reduce production expression -> L_BRACE expressionList R_BRACE
-- On MUL reduce production expression -> L_BRACE expressionList R_BRACE
-- On MOD reduce production expression -> L_BRACE expressionList R_BRACE
-- On MINUS_SAT reduce production expression -> L_BRACE expressionList R_BRACE
-- On MINUS reduce production expression -> L_BRACE expressionList R_BRACE
-- On MASK reduce production expression -> L_BRACE expressionList R_BRACE
-- On L_PAREN reduce production expression -> L_BRACE expressionList R_BRACE
-- On L_BRACKET reduce production expression -> L_BRACE expressionList R_BRACE
-- On L_ANGLE reduce production expression -> L_BRACE expressionList R_BRACE
-- On LE reduce production expression -> L_BRACE expressionList R_BRACE
-- On GE reduce production expression -> L_BRACE expressionList R_BRACE
-- On EQ reduce production expression -> L_BRACE expressionList R_BRACE
-- On DOT reduce production expression -> L_BRACE expressionList R_BRACE
-- On DIV reduce production expression -> L_BRACE expressionList R_BRACE
-- On COMMA reduce production expression -> L_BRACE expressionList R_BRACE
-- On COLON reduce production expression -> L_BRACE expressionList R_BRACE
-- On BIT_XOR reduce production expression -> L_BRACE expressionList R_BRACE
-- On BIT_OR reduce production expression -> L_BRACE expressionList R_BRACE
-- On BIT_AND reduce production expression -> L_BRACE expressionList R_BRACE
-- On AND reduce production expression -> L_BRACE expressionList R_BRACE

State 179:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_BRACKET R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
separated_list_aux(COMMA,expression) -> expression . [ R_PAREN R_BRACKET R_BRACE COMMA ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On R_PAREN reduce production separated_list_aux(COMMA,expression) -> expression
-- On R_BRACKET reduce production separated_list_aux(COMMA,expression) -> expression
-- On R_BRACE reduce production separated_list_aux(COMMA,expression) -> expression
-- On COMMA reduce production separated_list_aux(COMMA,expression) -> expression

State 180:
baseType -> INT L_ANGLE L_PAREN expression . R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 181
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 181:
baseType -> INT L_ANGLE L_PAREN expression R_PAREN . R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On R_ANGLE shift to state 182

State 182:
baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On STATE reduce production baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On R_PAREN reduce production baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On R_ANGLE reduce production baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On NAME reduce production baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On L_PAREN reduce production baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On KEY reduce production baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On ENTRIES reduce production baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On COMMA reduce production baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On APPLY reduce production baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On ACTIONS reduce production baseType -> INT L_ANGLE L_PAREN expression R_PAREN R_ANGLE

State 183:
baseType -> INT L_ANGLE INTEGER . R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On R_ANGLE shift to state 184

State 184:
baseType -> INT L_ANGLE INTEGER R_ANGLE . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production baseType -> INT L_ANGLE INTEGER R_ANGLE
-- On STATE reduce production baseType -> INT L_ANGLE INTEGER R_ANGLE
-- On R_PAREN reduce production baseType -> INT L_ANGLE INTEGER R_ANGLE
-- On R_ANGLE reduce production baseType -> INT L_ANGLE INTEGER R_ANGLE
-- On NAME reduce production baseType -> INT L_ANGLE INTEGER R_ANGLE
-- On L_PAREN reduce production baseType -> INT L_ANGLE INTEGER R_ANGLE
-- On KEY reduce production baseType -> INT L_ANGLE INTEGER R_ANGLE
-- On ENTRIES reduce production baseType -> INT L_ANGLE INTEGER R_ANGLE
-- On COMMA reduce production baseType -> INT L_ANGLE INTEGER R_ANGLE
-- On APPLY reduce production baseType -> INT L_ANGLE INTEGER R_ANGLE
-- On ACTIONS reduce production baseType -> INT L_ANGLE INTEGER R_ANGLE

State 185:
tupleType -> TUPLE L_ANGLE typeArgumentList . R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On R_ANGLE shift to state 186

State 186:
tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE
-- On STATE reduce production tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE
-- On R_PAREN reduce production tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE
-- On R_ANGLE reduce production tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE
-- On NAME reduce production tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE
-- On L_PAREN reduce production tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE
-- On KEY reduce production tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE
-- On ENTRIES reduce production tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE
-- On COMMA reduce production tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE
-- On APPLY reduce production tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE
-- On ACTIONS reduce production tupleType -> TUPLE L_ANGLE typeArgumentList R_ANGLE

State 187:
expression -> L_PAREN typeRef . R_PAREN expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On R_PAREN shift to state 188

State 188:
expression -> L_PAREN typeRef R_PAREN . expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 189
-- On dotPrefix shift to state 91

State 189:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> L_PAREN typeRef R_PAREN expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On SHL reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On SEMICOLON reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On R_PAREN reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On R_BRACKET reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On R_BRACE reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On R_ANGLE reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On RANGE reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On QUESTION reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On PLUS_SAT reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On PLUSPLUS reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On PLUS reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On OR reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On NE reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On MUL reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On MOD reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On MINUS_SAT reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On MINUS reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On MASK reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On L_ANGLE reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On LE reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On GE reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On EQ reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On DIV reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On COMMA reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On COLON reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On BIT_XOR reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On BIT_OR reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On BIT_AND reduce production expression -> L_PAREN typeRef R_PAREN expression
-- On AND reduce production expression -> L_PAREN typeRef R_PAREN expression

State 190:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> L_PAREN expression . R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 191
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 191:
expression -> L_PAREN expression R_PAREN . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL reduce production expression -> L_PAREN expression R_PAREN
-- On SEMICOLON reduce production expression -> L_PAREN expression R_PAREN
-- On R_PAREN reduce production expression -> L_PAREN expression R_PAREN
-- On R_BRACKET reduce production expression -> L_PAREN expression R_PAREN
-- On R_BRACE reduce production expression -> L_PAREN expression R_PAREN
-- On R_ANGLE reduce production expression -> L_PAREN expression R_PAREN
-- On RANGE reduce production expression -> L_PAREN expression R_PAREN
-- On QUESTION reduce production expression -> L_PAREN expression R_PAREN
-- On PLUS_SAT reduce production expression -> L_PAREN expression R_PAREN
-- On PLUSPLUS reduce production expression -> L_PAREN expression R_PAREN
-- On PLUS reduce production expression -> L_PAREN expression R_PAREN
-- On OR reduce production expression -> L_PAREN expression R_PAREN
-- On NE reduce production expression -> L_PAREN expression R_PAREN
-- On MUL reduce production expression -> L_PAREN expression R_PAREN
-- On MOD reduce production expression -> L_PAREN expression R_PAREN
-- On MINUS_SAT reduce production expression -> L_PAREN expression R_PAREN
-- On MINUS reduce production expression -> L_PAREN expression R_PAREN
-- On MASK reduce production expression -> L_PAREN expression R_PAREN
-- On L_PAREN reduce production expression -> L_PAREN expression R_PAREN
-- On L_BRACKET reduce production expression -> L_PAREN expression R_PAREN
-- On L_ANGLE reduce production expression -> L_PAREN expression R_PAREN
-- On LE reduce production expression -> L_PAREN expression R_PAREN
-- On GE reduce production expression -> L_PAREN expression R_PAREN
-- On EQ reduce production expression -> L_PAREN expression R_PAREN
-- On DOT reduce production expression -> L_PAREN expression R_PAREN
-- On DIV reduce production expression -> L_PAREN expression R_PAREN
-- On COMMA reduce production expression -> L_PAREN expression R_PAREN
-- On COLON reduce production expression -> L_PAREN expression R_PAREN
-- On BIT_XOR reduce production expression -> L_PAREN expression R_PAREN
-- On BIT_OR reduce production expression -> L_PAREN expression R_PAREN
-- On BIT_AND reduce production expression -> L_PAREN expression R_PAREN
-- On AND reduce production expression -> L_PAREN expression R_PAREN

State 192:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> MINUS expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On SHL reduce production expression -> MINUS expression
-- On SEMICOLON reduce production expression -> MINUS expression
-- On R_PAREN reduce production expression -> MINUS expression
-- On R_BRACKET reduce production expression -> MINUS expression
-- On R_BRACE reduce production expression -> MINUS expression
-- On R_ANGLE reduce production expression -> MINUS expression
-- On RANGE reduce production expression -> MINUS expression
-- On QUESTION reduce production expression -> MINUS expression
-- On PLUS_SAT reduce production expression -> MINUS expression
-- On PLUSPLUS reduce production expression -> MINUS expression
-- On PLUS reduce production expression -> MINUS expression
-- On OR reduce production expression -> MINUS expression
-- On NE reduce production expression -> MINUS expression
-- On MUL reduce production expression -> MINUS expression
-- On MOD reduce production expression -> MINUS expression
-- On MINUS_SAT reduce production expression -> MINUS expression
-- On MINUS reduce production expression -> MINUS expression
-- On MASK reduce production expression -> MINUS expression
-- On L_ANGLE reduce production expression -> MINUS expression
-- On LE reduce production expression -> MINUS expression
-- On GE reduce production expression -> MINUS expression
-- On EQ reduce production expression -> MINUS expression
-- On DIV reduce production expression -> MINUS expression
-- On COMMA reduce production expression -> MINUS expression
-- On COLON reduce production expression -> MINUS expression
-- On BIT_XOR reduce production expression -> MINUS expression
-- On BIT_OR reduce production expression -> MINUS expression
-- On BIT_AND reduce production expression -> MINUS expression
-- On AND reduce production expression -> MINUS expression

State 193:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> NOT expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On SHL reduce production expression -> NOT expression
-- On SEMICOLON reduce production expression -> NOT expression
-- On R_PAREN reduce production expression -> NOT expression
-- On R_BRACKET reduce production expression -> NOT expression
-- On R_BRACE reduce production expression -> NOT expression
-- On R_ANGLE reduce production expression -> NOT expression
-- On RANGE reduce production expression -> NOT expression
-- On QUESTION reduce production expression -> NOT expression
-- On PLUS_SAT reduce production expression -> NOT expression
-- On PLUSPLUS reduce production expression -> NOT expression
-- On PLUS reduce production expression -> NOT expression
-- On OR reduce production expression -> NOT expression
-- On NE reduce production expression -> NOT expression
-- On MUL reduce production expression -> NOT expression
-- On MOD reduce production expression -> NOT expression
-- On MINUS_SAT reduce production expression -> NOT expression
-- On MINUS reduce production expression -> NOT expression
-- On MASK reduce production expression -> NOT expression
-- On L_ANGLE reduce production expression -> NOT expression
-- On LE reduce production expression -> NOT expression
-- On GE reduce production expression -> NOT expression
-- On EQ reduce production expression -> NOT expression
-- On DIV reduce production expression -> NOT expression
-- On COMMA reduce production expression -> NOT expression
-- On COLON reduce production expression -> NOT expression
-- On BIT_XOR reduce production expression -> NOT expression
-- On BIT_OR reduce production expression -> NOT expression
-- On BIT_AND reduce production expression -> NOT expression
-- On AND reduce production expression -> NOT expression

State 194:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> PLUS expression . [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_PAREN R_BRACKET R_BRACE R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On DOT shift to state 87
-- On SHL reduce production expression -> PLUS expression
-- On SEMICOLON reduce production expression -> PLUS expression
-- On R_PAREN reduce production expression -> PLUS expression
-- On R_BRACKET reduce production expression -> PLUS expression
-- On R_BRACE reduce production expression -> PLUS expression
-- On R_ANGLE reduce production expression -> PLUS expression
-- On RANGE reduce production expression -> PLUS expression
-- On QUESTION reduce production expression -> PLUS expression
-- On PLUS_SAT reduce production expression -> PLUS expression
-- On PLUSPLUS reduce production expression -> PLUS expression
-- On PLUS reduce production expression -> PLUS expression
-- On OR reduce production expression -> PLUS expression
-- On NE reduce production expression -> PLUS expression
-- On MUL reduce production expression -> PLUS expression
-- On MOD reduce production expression -> PLUS expression
-- On MINUS_SAT reduce production expression -> PLUS expression
-- On MINUS reduce production expression -> PLUS expression
-- On MASK reduce production expression -> PLUS expression
-- On L_ANGLE reduce production expression -> PLUS expression
-- On LE reduce production expression -> PLUS expression
-- On GE reduce production expression -> PLUS expression
-- On EQ reduce production expression -> PLUS expression
-- On DIV reduce production expression -> PLUS expression
-- On COMMA reduce production expression -> PLUS expression
-- On COLON reduce production expression -> PLUS expression
-- On BIT_XOR reduce production expression -> PLUS expression
-- On BIT_OR reduce production expression -> PLUS expression
-- On BIT_AND reduce production expression -> PLUS expression
-- On AND reduce production expression -> PLUS expression

State 195:
baseType -> VARBIT L_ANGLE L_PAREN expression . R_PAREN R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 196
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 196:
baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN . R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On R_ANGLE shift to state 197

State 197:
baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On STATE reduce production baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On R_PAREN reduce production baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On R_ANGLE reduce production baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On NAME reduce production baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On L_PAREN reduce production baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On KEY reduce production baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On ENTRIES reduce production baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On COMMA reduce production baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On APPLY reduce production baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE
-- On ACTIONS reduce production baseType -> VARBIT L_ANGLE L_PAREN expression R_PAREN R_ANGLE

State 198:
baseType -> VARBIT L_ANGLE INTEGER . R_ANGLE [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On R_ANGLE shift to state 199

State 199:
baseType -> VARBIT L_ANGLE INTEGER R_ANGLE . [ TYPE STATE R_PAREN R_ANGLE NAME L_PAREN KEY ENTRIES COMMA APPLY ACTIONS ]
-- On TYPE reduce production baseType -> VARBIT L_ANGLE INTEGER R_ANGLE
-- On STATE reduce production baseType -> VARBIT L_ANGLE INTEGER R_ANGLE
-- On R_PAREN reduce production baseType -> VARBIT L_ANGLE INTEGER R_ANGLE
-- On R_ANGLE reduce production baseType -> VARBIT L_ANGLE INTEGER R_ANGLE
-- On NAME reduce production baseType -> VARBIT L_ANGLE INTEGER R_ANGLE
-- On L_PAREN reduce production baseType -> VARBIT L_ANGLE INTEGER R_ANGLE
-- On KEY reduce production baseType -> VARBIT L_ANGLE INTEGER R_ANGLE
-- On ENTRIES reduce production baseType -> VARBIT L_ANGLE INTEGER R_ANGLE
-- On COMMA reduce production baseType -> VARBIT L_ANGLE INTEGER R_ANGLE
-- On APPLY reduce production baseType -> VARBIT L_ANGLE INTEGER R_ANGLE
-- On ACTIONS reduce production baseType -> VARBIT L_ANGLE INTEGER R_ANGLE

State 200:
typedefDeclaration -> TYPEDEF . typeRef name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
typedefDeclaration -> TYPEDEF . derivedTypeDeclaration name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRUCT shift to state 201
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On HEADER_UNION shift to state 332
-- On HEADER shift to state 337
-- On ERROR shift to state 46
-- On ENUM shift to state 342
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On typeRef shift to state 368
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On structTypeDeclaration shift to state 371
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On headerUnionDeclaration shift to state 372
-- On headerTypeDeclaration shift to state 373
-- On headerStackType shift to state 142
-- On enumDeclaration shift to state 374
-- On dotPrefix shift to state 143
-- On derivedTypeDeclaration shift to state 375
-- On baseType shift to state 146
-- On annotations shift to state 378
-- On annotation shift to state 331

State 201:
structTypeDeclaration -> STRUCT . name L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 202

State 202:
structTypeDeclaration -> STRUCT name . L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 203

State 203:
structTypeDeclaration -> STRUCT name L_BRACE . petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On petr4_list(structField) shift to state 204
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 204:
structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 205

State 205:
structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On VARBIT reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On TYPEDEF reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On TYPE reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On TUPLE reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On STRUCT reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On STRING reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On STATE reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On SEMICOLON reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On PRAGMA reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On PARSER reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On PACKAGE reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On NAME reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On MATCH_KIND reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On KEY reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On INT reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER_UNION reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On EXTERN reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On ERROR reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On ENUM reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On ENTRIES reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On END reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On DOT reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On CONTROL reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On CONST reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On BOOL reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On BIT reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On AT reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On APPLY reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On ACTIONS reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On ACTION reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE

State 206:
list_aux(structField) -> list_aux(structField) . structField [ VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
petr4_list(structField) -> list_aux(structField) . [ R_BRACE ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On typeRef shift to state 320
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On structField shift to state 323
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146
-- On annotations shift to state 327
-- On annotation shift to state 331
-- On R_BRACE reduce production petr4_list(structField) -> list_aux(structField)

State 207:
annotation -> PRAGMA . name annotationBody PRAGMA_END [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 208

State 208:
annotation -> PRAGMA name . annotationBody PRAGMA_END [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On petr4_list(annotationToken) shift to state 209
-- On list_aux(annotationToken) shift to state 210
-- On annotationBody shift to state 296
-- On VOID reduce production list_aux(annotationToken) ->
-- On VARBIT reduce production list_aux(annotationToken) ->
-- On VALUESET reduce production list_aux(annotationToken) ->
-- On TYPEDEF reduce production list_aux(annotationToken) ->
-- On TYPE reduce production list_aux(annotationToken) ->
-- On TUPLE reduce production list_aux(annotationToken) ->
-- On TRUE reduce production list_aux(annotationToken) ->
-- On TRANSITION reduce production list_aux(annotationToken) ->
-- On TABLE reduce production list_aux(annotationToken) ->
-- On SWITCH reduce production list_aux(annotationToken) ->
-- On STRUCT reduce production list_aux(annotationToken) ->
-- On STRING_LITERAL reduce production list_aux(annotationToken) ->
-- On STRING reduce production list_aux(annotationToken) ->
-- On STATE reduce production list_aux(annotationToken) ->
-- On SHL reduce production list_aux(annotationToken) ->
-- On SEMICOLON reduce production list_aux(annotationToken) ->
-- On SELECT reduce production list_aux(annotationToken) ->
-- On R_BRACKET reduce production list_aux(annotationToken) ->
-- On R_BRACE reduce production list_aux(annotationToken) ->
-- On R_ANGLE reduce production list_aux(annotationToken) ->
-- On RETURN reduce production list_aux(annotationToken) ->
-- On RANGE reduce production list_aux(annotationToken) ->
-- On QUESTION reduce production list_aux(annotationToken) ->
-- On PRAGMA_END reduce production list_aux(annotationToken) ->
-- On PRAGMA reduce production list_aux(annotationToken) ->
-- On PLUS_SAT reduce production list_aux(annotationToken) ->
-- On PLUSPLUS reduce production list_aux(annotationToken) ->
-- On PLUS reduce production list_aux(annotationToken) ->
-- On PARSER reduce production list_aux(annotationToken) ->
-- On PACKAGE reduce production list_aux(annotationToken) ->
-- On OUT reduce production list_aux(annotationToken) ->
-- On OR reduce production list_aux(annotationToken) ->
-- On NOT reduce production list_aux(annotationToken) ->
-- On NE reduce production list_aux(annotationToken) ->
-- On NAME reduce production list_aux(annotationToken) ->
-- On MUL reduce production list_aux(annotationToken) ->
-- On MOD reduce production list_aux(annotationToken) ->
-- On MINUS_SAT reduce production list_aux(annotationToken) ->
-- On MINUS reduce production list_aux(annotationToken) ->
-- On MATCH_KIND reduce production list_aux(annotationToken) ->
-- On MASK reduce production list_aux(annotationToken) ->
-- On L_PAREN reduce production list_aux(annotationToken) ->
-- On L_BRACKET reduce production list_aux(annotationToken) ->
-- On L_BRACE reduce production list_aux(annotationToken) ->
-- On L_ANGLE reduce production list_aux(annotationToken) ->
-- On LE reduce production list_aux(annotationToken) ->
-- On KEY reduce production list_aux(annotationToken) ->
-- On INTEGER reduce production list_aux(annotationToken) ->
-- On INT reduce production list_aux(annotationToken) ->
-- On INOUT reduce production list_aux(annotationToken) ->
-- On IN reduce production list_aux(annotationToken) ->
-- On IF reduce production list_aux(annotationToken) ->
-- On HEADER_UNION reduce production list_aux(annotationToken) ->
-- On HEADER reduce production list_aux(annotationToken) ->
-- On GE reduce production list_aux(annotationToken) ->
-- On FALSE reduce production list_aux(annotationToken) ->
-- On EXTERN reduce production list_aux(annotationToken) ->
-- On EXIT reduce production list_aux(annotationToken) ->
-- On ERROR reduce production list_aux(annotationToken) ->
-- On EQ reduce production list_aux(annotationToken) ->
-- On ENUM reduce production list_aux(annotationToken) ->
-- On ENTRIES reduce production list_aux(annotationToken) ->
-- On ELSE reduce production list_aux(annotationToken) ->
-- On DOT reduce production list_aux(annotationToken) ->
-- On DONTCARE reduce production list_aux(annotationToken) ->
-- On DIV reduce production list_aux(annotationToken) ->
-- On DEFAULT reduce production list_aux(annotationToken) ->
-- On CONTROL reduce production list_aux(annotationToken) ->
-- On CONST reduce production list_aux(annotationToken) ->
-- On COMPLEMENT reduce production list_aux(annotationToken) ->
-- On COMMA reduce production list_aux(annotationToken) ->
-- On COLON reduce production list_aux(annotationToken) ->
-- On BOOL reduce production list_aux(annotationToken) ->
-- On BIT_XOR reduce production list_aux(annotationToken) ->
-- On BIT_OR reduce production list_aux(annotationToken) ->
-- On BIT_AND reduce production list_aux(annotationToken) ->
-- On BIT reduce production list_aux(annotationToken) ->
-- On AT reduce production list_aux(annotationToken) ->
-- On ASSIGN reduce production list_aux(annotationToken) ->
-- On APPLY reduce production list_aux(annotationToken) ->
-- On AND reduce production list_aux(annotationToken) ->
-- On ACTIONS reduce production list_aux(annotationToken) ->
-- On ACTION reduce production list_aux(annotationToken) ->
-- On ABSTRACT reduce production list_aux(annotationToken) ->

State 209:
annotationBody -> petr4_list(annotationToken) . [ R_PAREN PRAGMA_END L_PAREN ]
-- On R_PAREN reduce production annotationBody -> petr4_list(annotationToken)
-- On PRAGMA_END reduce production annotationBody -> petr4_list(annotationToken)
-- On L_PAREN reduce production annotationBody -> petr4_list(annotationToken)

State 210:
list_aux(annotationToken) -> list_aux(annotationToken) . annotationToken [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
petr4_list(annotationToken) -> list_aux(annotationToken) . [ R_PAREN PRAGMA_END L_PAREN ]
-- On VOID shift to state 211
-- On VARBIT shift to state 212
-- On VALUESET shift to state 213
-- On TYPEDEF shift to state 214
-- On TYPE shift to state 215
-- On TUPLE shift to state 216
-- On TRUE shift to state 217
-- On TRANSITION shift to state 218
-- On TABLE shift to state 219
-- On SWITCH shift to state 220
-- On STRUCT shift to state 221
-- On STRING_LITERAL shift to state 222
-- On STRING shift to state 223
-- On STATE shift to state 224
-- On SHL shift to state 225
-- On SEMICOLON shift to state 226
-- On SELECT shift to state 227
-- On R_BRACKET shift to state 228
-- On R_BRACE shift to state 229
-- On R_ANGLE shift to state 230
-- On RETURN shift to state 231
-- On RANGE shift to state 232
-- On QUESTION shift to state 233
-- On PRAGMA shift to state 234
-- On PLUS_SAT shift to state 235
-- On PLUSPLUS shift to state 236
-- On PLUS shift to state 237
-- On PARSER shift to state 238
-- On PACKAGE shift to state 239
-- On OUT shift to state 240
-- On OR shift to state 241
-- On NOT shift to state 242
-- On NE shift to state 243
-- On NAME shift to state 244
-- On MUL shift to state 247
-- On MOD shift to state 248
-- On MINUS_SAT shift to state 249
-- On MINUS shift to state 250
-- On MATCH_KIND shift to state 251
-- On MASK shift to state 252
-- On L_BRACKET shift to state 253
-- On L_BRACE shift to state 254
-- On L_ANGLE shift to state 255
-- On LE shift to state 256
-- On KEY shift to state 257
-- On INTEGER shift to state 258
-- On INT shift to state 259
-- On INOUT shift to state 260
-- On IN shift to state 261
-- On IF shift to state 262
-- On HEADER_UNION shift to state 263
-- On HEADER shift to state 264
-- On GE shift to state 265
-- On FALSE shift to state 266
-- On EXTERN shift to state 267
-- On EXIT shift to state 268
-- On ERROR shift to state 269
-- On EQ shift to state 270
-- On ENUM shift to state 271
-- On ENTRIES shift to state 272
-- On ELSE shift to state 273
-- On DOT shift to state 274
-- On DONTCARE shift to state 275
-- On DIV shift to state 276
-- On DEFAULT shift to state 277
-- On CONTROL shift to state 278
-- On CONST shift to state 279
-- On COMPLEMENT shift to state 280
-- On COMMA shift to state 281
-- On COLON shift to state 282
-- On BOOL shift to state 283
-- On BIT_XOR shift to state 284
-- On BIT_OR shift to state 285
-- On BIT_AND shift to state 286
-- On BIT shift to state 287
-- On AT shift to state 288
-- On ASSIGN shift to state 289
-- On APPLY shift to state 290
-- On AND shift to state 291
-- On ACTIONS shift to state 292
-- On ACTION shift to state 293
-- On ABSTRACT shift to state 294
-- On annotationToken shift to state 295
-- On R_PAREN reduce production petr4_list(annotationToken) -> list_aux(annotationToken)
-- On PRAGMA_END reduce production petr4_list(annotationToken) -> list_aux(annotationToken)
-- On L_PAREN reduce production petr4_list(annotationToken) -> list_aux(annotationToken)

State 211:
annotationToken -> VOID . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> VOID
-- On VARBIT reduce production annotationToken -> VOID
-- On VALUESET reduce production annotationToken -> VOID
-- On TYPEDEF reduce production annotationToken -> VOID
-- On TYPE reduce production annotationToken -> VOID
-- On TUPLE reduce production annotationToken -> VOID
-- On TRUE reduce production annotationToken -> VOID
-- On TRANSITION reduce production annotationToken -> VOID
-- On TABLE reduce production annotationToken -> VOID
-- On SWITCH reduce production annotationToken -> VOID
-- On STRUCT reduce production annotationToken -> VOID
-- On STRING_LITERAL reduce production annotationToken -> VOID
-- On STRING reduce production annotationToken -> VOID
-- On STATE reduce production annotationToken -> VOID
-- On SHL reduce production annotationToken -> VOID
-- On SEMICOLON reduce production annotationToken -> VOID
-- On SELECT reduce production annotationToken -> VOID
-- On R_PAREN reduce production annotationToken -> VOID
-- On R_BRACKET reduce production annotationToken -> VOID
-- On R_BRACE reduce production annotationToken -> VOID
-- On R_ANGLE reduce production annotationToken -> VOID
-- On RETURN reduce production annotationToken -> VOID
-- On RANGE reduce production annotationToken -> VOID
-- On QUESTION reduce production annotationToken -> VOID
-- On PRAGMA_END reduce production annotationToken -> VOID
-- On PRAGMA reduce production annotationToken -> VOID
-- On PLUS_SAT reduce production annotationToken -> VOID
-- On PLUSPLUS reduce production annotationToken -> VOID
-- On PLUS reduce production annotationToken -> VOID
-- On PARSER reduce production annotationToken -> VOID
-- On PACKAGE reduce production annotationToken -> VOID
-- On OUT reduce production annotationToken -> VOID
-- On OR reduce production annotationToken -> VOID
-- On NOT reduce production annotationToken -> VOID
-- On NE reduce production annotationToken -> VOID
-- On NAME reduce production annotationToken -> VOID
-- On MUL reduce production annotationToken -> VOID
-- On MOD reduce production annotationToken -> VOID
-- On MINUS_SAT reduce production annotationToken -> VOID
-- On MINUS reduce production annotationToken -> VOID
-- On MATCH_KIND reduce production annotationToken -> VOID
-- On MASK reduce production annotationToken -> VOID
-- On L_PAREN reduce production annotationToken -> VOID
-- On L_BRACKET reduce production annotationToken -> VOID
-- On L_BRACE reduce production annotationToken -> VOID
-- On L_ANGLE reduce production annotationToken -> VOID
-- On LE reduce production annotationToken -> VOID
-- On KEY reduce production annotationToken -> VOID
-- On INTEGER reduce production annotationToken -> VOID
-- On INT reduce production annotationToken -> VOID
-- On INOUT reduce production annotationToken -> VOID
-- On IN reduce production annotationToken -> VOID
-- On IF reduce production annotationToken -> VOID
-- On HEADER_UNION reduce production annotationToken -> VOID
-- On HEADER reduce production annotationToken -> VOID
-- On GE reduce production annotationToken -> VOID
-- On FALSE reduce production annotationToken -> VOID
-- On EXTERN reduce production annotationToken -> VOID
-- On EXIT reduce production annotationToken -> VOID
-- On ERROR reduce production annotationToken -> VOID
-- On EQ reduce production annotationToken -> VOID
-- On ENUM reduce production annotationToken -> VOID
-- On ENTRIES reduce production annotationToken -> VOID
-- On ELSE reduce production annotationToken -> VOID
-- On DOT reduce production annotationToken -> VOID
-- On DONTCARE reduce production annotationToken -> VOID
-- On DIV reduce production annotationToken -> VOID
-- On DEFAULT reduce production annotationToken -> VOID
-- On CONTROL reduce production annotationToken -> VOID
-- On CONST reduce production annotationToken -> VOID
-- On COMPLEMENT reduce production annotationToken -> VOID
-- On COMMA reduce production annotationToken -> VOID
-- On COLON reduce production annotationToken -> VOID
-- On BOOL reduce production annotationToken -> VOID
-- On BIT_XOR reduce production annotationToken -> VOID
-- On BIT_OR reduce production annotationToken -> VOID
-- On BIT_AND reduce production annotationToken -> VOID
-- On BIT reduce production annotationToken -> VOID
-- On AT reduce production annotationToken -> VOID
-- On ASSIGN reduce production annotationToken -> VOID
-- On APPLY reduce production annotationToken -> VOID
-- On AND reduce production annotationToken -> VOID
-- On ACTIONS reduce production annotationToken -> VOID
-- On ACTION reduce production annotationToken -> VOID
-- On ABSTRACT reduce production annotationToken -> VOID

State 212:
annotationToken -> VARBIT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> VARBIT
-- On VARBIT reduce production annotationToken -> VARBIT
-- On VALUESET reduce production annotationToken -> VARBIT
-- On TYPEDEF reduce production annotationToken -> VARBIT
-- On TYPE reduce production annotationToken -> VARBIT
-- On TUPLE reduce production annotationToken -> VARBIT
-- On TRUE reduce production annotationToken -> VARBIT
-- On TRANSITION reduce production annotationToken -> VARBIT
-- On TABLE reduce production annotationToken -> VARBIT
-- On SWITCH reduce production annotationToken -> VARBIT
-- On STRUCT reduce production annotationToken -> VARBIT
-- On STRING_LITERAL reduce production annotationToken -> VARBIT
-- On STRING reduce production annotationToken -> VARBIT
-- On STATE reduce production annotationToken -> VARBIT
-- On SHL reduce production annotationToken -> VARBIT
-- On SEMICOLON reduce production annotationToken -> VARBIT
-- On SELECT reduce production annotationToken -> VARBIT
-- On R_PAREN reduce production annotationToken -> VARBIT
-- On R_BRACKET reduce production annotationToken -> VARBIT
-- On R_BRACE reduce production annotationToken -> VARBIT
-- On R_ANGLE reduce production annotationToken -> VARBIT
-- On RETURN reduce production annotationToken -> VARBIT
-- On RANGE reduce production annotationToken -> VARBIT
-- On QUESTION reduce production annotationToken -> VARBIT
-- On PRAGMA_END reduce production annotationToken -> VARBIT
-- On PRAGMA reduce production annotationToken -> VARBIT
-- On PLUS_SAT reduce production annotationToken -> VARBIT
-- On PLUSPLUS reduce production annotationToken -> VARBIT
-- On PLUS reduce production annotationToken -> VARBIT
-- On PARSER reduce production annotationToken -> VARBIT
-- On PACKAGE reduce production annotationToken -> VARBIT
-- On OUT reduce production annotationToken -> VARBIT
-- On OR reduce production annotationToken -> VARBIT
-- On NOT reduce production annotationToken -> VARBIT
-- On NE reduce production annotationToken -> VARBIT
-- On NAME reduce production annotationToken -> VARBIT
-- On MUL reduce production annotationToken -> VARBIT
-- On MOD reduce production annotationToken -> VARBIT
-- On MINUS_SAT reduce production annotationToken -> VARBIT
-- On MINUS reduce production annotationToken -> VARBIT
-- On MATCH_KIND reduce production annotationToken -> VARBIT
-- On MASK reduce production annotationToken -> VARBIT
-- On L_PAREN reduce production annotationToken -> VARBIT
-- On L_BRACKET reduce production annotationToken -> VARBIT
-- On L_BRACE reduce production annotationToken -> VARBIT
-- On L_ANGLE reduce production annotationToken -> VARBIT
-- On LE reduce production annotationToken -> VARBIT
-- On KEY reduce production annotationToken -> VARBIT
-- On INTEGER reduce production annotationToken -> VARBIT
-- On INT reduce production annotationToken -> VARBIT
-- On INOUT reduce production annotationToken -> VARBIT
-- On IN reduce production annotationToken -> VARBIT
-- On IF reduce production annotationToken -> VARBIT
-- On HEADER_UNION reduce production annotationToken -> VARBIT
-- On HEADER reduce production annotationToken -> VARBIT
-- On GE reduce production annotationToken -> VARBIT
-- On FALSE reduce production annotationToken -> VARBIT
-- On EXTERN reduce production annotationToken -> VARBIT
-- On EXIT reduce production annotationToken -> VARBIT
-- On ERROR reduce production annotationToken -> VARBIT
-- On EQ reduce production annotationToken -> VARBIT
-- On ENUM reduce production annotationToken -> VARBIT
-- On ENTRIES reduce production annotationToken -> VARBIT
-- On ELSE reduce production annotationToken -> VARBIT
-- On DOT reduce production annotationToken -> VARBIT
-- On DONTCARE reduce production annotationToken -> VARBIT
-- On DIV reduce production annotationToken -> VARBIT
-- On DEFAULT reduce production annotationToken -> VARBIT
-- On CONTROL reduce production annotationToken -> VARBIT
-- On CONST reduce production annotationToken -> VARBIT
-- On COMPLEMENT reduce production annotationToken -> VARBIT
-- On COMMA reduce production annotationToken -> VARBIT
-- On COLON reduce production annotationToken -> VARBIT
-- On BOOL reduce production annotationToken -> VARBIT
-- On BIT_XOR reduce production annotationToken -> VARBIT
-- On BIT_OR reduce production annotationToken -> VARBIT
-- On BIT_AND reduce production annotationToken -> VARBIT
-- On BIT reduce production annotationToken -> VARBIT
-- On AT reduce production annotationToken -> VARBIT
-- On ASSIGN reduce production annotationToken -> VARBIT
-- On APPLY reduce production annotationToken -> VARBIT
-- On AND reduce production annotationToken -> VARBIT
-- On ACTIONS reduce production annotationToken -> VARBIT
-- On ACTION reduce production annotationToken -> VARBIT
-- On ABSTRACT reduce production annotationToken -> VARBIT

State 213:
annotationToken -> VALUESET . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> VALUESET
-- On VARBIT reduce production annotationToken -> VALUESET
-- On VALUESET reduce production annotationToken -> VALUESET
-- On TYPEDEF reduce production annotationToken -> VALUESET
-- On TYPE reduce production annotationToken -> VALUESET
-- On TUPLE reduce production annotationToken -> VALUESET
-- On TRUE reduce production annotationToken -> VALUESET
-- On TRANSITION reduce production annotationToken -> VALUESET
-- On TABLE reduce production annotationToken -> VALUESET
-- On SWITCH reduce production annotationToken -> VALUESET
-- On STRUCT reduce production annotationToken -> VALUESET
-- On STRING_LITERAL reduce production annotationToken -> VALUESET
-- On STRING reduce production annotationToken -> VALUESET
-- On STATE reduce production annotationToken -> VALUESET
-- On SHL reduce production annotationToken -> VALUESET
-- On SEMICOLON reduce production annotationToken -> VALUESET
-- On SELECT reduce production annotationToken -> VALUESET
-- On R_PAREN reduce production annotationToken -> VALUESET
-- On R_BRACKET reduce production annotationToken -> VALUESET
-- On R_BRACE reduce production annotationToken -> VALUESET
-- On R_ANGLE reduce production annotationToken -> VALUESET
-- On RETURN reduce production annotationToken -> VALUESET
-- On RANGE reduce production annotationToken -> VALUESET
-- On QUESTION reduce production annotationToken -> VALUESET
-- On PRAGMA_END reduce production annotationToken -> VALUESET
-- On PRAGMA reduce production annotationToken -> VALUESET
-- On PLUS_SAT reduce production annotationToken -> VALUESET
-- On PLUSPLUS reduce production annotationToken -> VALUESET
-- On PLUS reduce production annotationToken -> VALUESET
-- On PARSER reduce production annotationToken -> VALUESET
-- On PACKAGE reduce production annotationToken -> VALUESET
-- On OUT reduce production annotationToken -> VALUESET
-- On OR reduce production annotationToken -> VALUESET
-- On NOT reduce production annotationToken -> VALUESET
-- On NE reduce production annotationToken -> VALUESET
-- On NAME reduce production annotationToken -> VALUESET
-- On MUL reduce production annotationToken -> VALUESET
-- On MOD reduce production annotationToken -> VALUESET
-- On MINUS_SAT reduce production annotationToken -> VALUESET
-- On MINUS reduce production annotationToken -> VALUESET
-- On MATCH_KIND reduce production annotationToken -> VALUESET
-- On MASK reduce production annotationToken -> VALUESET
-- On L_PAREN reduce production annotationToken -> VALUESET
-- On L_BRACKET reduce production annotationToken -> VALUESET
-- On L_BRACE reduce production annotationToken -> VALUESET
-- On L_ANGLE reduce production annotationToken -> VALUESET
-- On LE reduce production annotationToken -> VALUESET
-- On KEY reduce production annotationToken -> VALUESET
-- On INTEGER reduce production annotationToken -> VALUESET
-- On INT reduce production annotationToken -> VALUESET
-- On INOUT reduce production annotationToken -> VALUESET
-- On IN reduce production annotationToken -> VALUESET
-- On IF reduce production annotationToken -> VALUESET
-- On HEADER_UNION reduce production annotationToken -> VALUESET
-- On HEADER reduce production annotationToken -> VALUESET
-- On GE reduce production annotationToken -> VALUESET
-- On FALSE reduce production annotationToken -> VALUESET
-- On EXTERN reduce production annotationToken -> VALUESET
-- On EXIT reduce production annotationToken -> VALUESET
-- On ERROR reduce production annotationToken -> VALUESET
-- On EQ reduce production annotationToken -> VALUESET
-- On ENUM reduce production annotationToken -> VALUESET
-- On ENTRIES reduce production annotationToken -> VALUESET
-- On ELSE reduce production annotationToken -> VALUESET
-- On DOT reduce production annotationToken -> VALUESET
-- On DONTCARE reduce production annotationToken -> VALUESET
-- On DIV reduce production annotationToken -> VALUESET
-- On DEFAULT reduce production annotationToken -> VALUESET
-- On CONTROL reduce production annotationToken -> VALUESET
-- On CONST reduce production annotationToken -> VALUESET
-- On COMPLEMENT reduce production annotationToken -> VALUESET
-- On COMMA reduce production annotationToken -> VALUESET
-- On COLON reduce production annotationToken -> VALUESET
-- On BOOL reduce production annotationToken -> VALUESET
-- On BIT_XOR reduce production annotationToken -> VALUESET
-- On BIT_OR reduce production annotationToken -> VALUESET
-- On BIT_AND reduce production annotationToken -> VALUESET
-- On BIT reduce production annotationToken -> VALUESET
-- On AT reduce production annotationToken -> VALUESET
-- On ASSIGN reduce production annotationToken -> VALUESET
-- On APPLY reduce production annotationToken -> VALUESET
-- On AND reduce production annotationToken -> VALUESET
-- On ACTIONS reduce production annotationToken -> VALUESET
-- On ACTION reduce production annotationToken -> VALUESET
-- On ABSTRACT reduce production annotationToken -> VALUESET

State 214:
annotationToken -> TYPEDEF . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> TYPEDEF
-- On VARBIT reduce production annotationToken -> TYPEDEF
-- On VALUESET reduce production annotationToken -> TYPEDEF
-- On TYPEDEF reduce production annotationToken -> TYPEDEF
-- On TYPE reduce production annotationToken -> TYPEDEF
-- On TUPLE reduce production annotationToken -> TYPEDEF
-- On TRUE reduce production annotationToken -> TYPEDEF
-- On TRANSITION reduce production annotationToken -> TYPEDEF
-- On TABLE reduce production annotationToken -> TYPEDEF
-- On SWITCH reduce production annotationToken -> TYPEDEF
-- On STRUCT reduce production annotationToken -> TYPEDEF
-- On STRING_LITERAL reduce production annotationToken -> TYPEDEF
-- On STRING reduce production annotationToken -> TYPEDEF
-- On STATE reduce production annotationToken -> TYPEDEF
-- On SHL reduce production annotationToken -> TYPEDEF
-- On SEMICOLON reduce production annotationToken -> TYPEDEF
-- On SELECT reduce production annotationToken -> TYPEDEF
-- On R_PAREN reduce production annotationToken -> TYPEDEF
-- On R_BRACKET reduce production annotationToken -> TYPEDEF
-- On R_BRACE reduce production annotationToken -> TYPEDEF
-- On R_ANGLE reduce production annotationToken -> TYPEDEF
-- On RETURN reduce production annotationToken -> TYPEDEF
-- On RANGE reduce production annotationToken -> TYPEDEF
-- On QUESTION reduce production annotationToken -> TYPEDEF
-- On PRAGMA_END reduce production annotationToken -> TYPEDEF
-- On PRAGMA reduce production annotationToken -> TYPEDEF
-- On PLUS_SAT reduce production annotationToken -> TYPEDEF
-- On PLUSPLUS reduce production annotationToken -> TYPEDEF
-- On PLUS reduce production annotationToken -> TYPEDEF
-- On PARSER reduce production annotationToken -> TYPEDEF
-- On PACKAGE reduce production annotationToken -> TYPEDEF
-- On OUT reduce production annotationToken -> TYPEDEF
-- On OR reduce production annotationToken -> TYPEDEF
-- On NOT reduce production annotationToken -> TYPEDEF
-- On NE reduce production annotationToken -> TYPEDEF
-- On NAME reduce production annotationToken -> TYPEDEF
-- On MUL reduce production annotationToken -> TYPEDEF
-- On MOD reduce production annotationToken -> TYPEDEF
-- On MINUS_SAT reduce production annotationToken -> TYPEDEF
-- On MINUS reduce production annotationToken -> TYPEDEF
-- On MATCH_KIND reduce production annotationToken -> TYPEDEF
-- On MASK reduce production annotationToken -> TYPEDEF
-- On L_PAREN reduce production annotationToken -> TYPEDEF
-- On L_BRACKET reduce production annotationToken -> TYPEDEF
-- On L_BRACE reduce production annotationToken -> TYPEDEF
-- On L_ANGLE reduce production annotationToken -> TYPEDEF
-- On LE reduce production annotationToken -> TYPEDEF
-- On KEY reduce production annotationToken -> TYPEDEF
-- On INTEGER reduce production annotationToken -> TYPEDEF
-- On INT reduce production annotationToken -> TYPEDEF
-- On INOUT reduce production annotationToken -> TYPEDEF
-- On IN reduce production annotationToken -> TYPEDEF
-- On IF reduce production annotationToken -> TYPEDEF
-- On HEADER_UNION reduce production annotationToken -> TYPEDEF
-- On HEADER reduce production annotationToken -> TYPEDEF
-- On GE reduce production annotationToken -> TYPEDEF
-- On FALSE reduce production annotationToken -> TYPEDEF
-- On EXTERN reduce production annotationToken -> TYPEDEF
-- On EXIT reduce production annotationToken -> TYPEDEF
-- On ERROR reduce production annotationToken -> TYPEDEF
-- On EQ reduce production annotationToken -> TYPEDEF
-- On ENUM reduce production annotationToken -> TYPEDEF
-- On ENTRIES reduce production annotationToken -> TYPEDEF
-- On ELSE reduce production annotationToken -> TYPEDEF
-- On DOT reduce production annotationToken -> TYPEDEF
-- On DONTCARE reduce production annotationToken -> TYPEDEF
-- On DIV reduce production annotationToken -> TYPEDEF
-- On DEFAULT reduce production annotationToken -> TYPEDEF
-- On CONTROL reduce production annotationToken -> TYPEDEF
-- On CONST reduce production annotationToken -> TYPEDEF
-- On COMPLEMENT reduce production annotationToken -> TYPEDEF
-- On COMMA reduce production annotationToken -> TYPEDEF
-- On COLON reduce production annotationToken -> TYPEDEF
-- On BOOL reduce production annotationToken -> TYPEDEF
-- On BIT_XOR reduce production annotationToken -> TYPEDEF
-- On BIT_OR reduce production annotationToken -> TYPEDEF
-- On BIT_AND reduce production annotationToken -> TYPEDEF
-- On BIT reduce production annotationToken -> TYPEDEF
-- On AT reduce production annotationToken -> TYPEDEF
-- On ASSIGN reduce production annotationToken -> TYPEDEF
-- On APPLY reduce production annotationToken -> TYPEDEF
-- On AND reduce production annotationToken -> TYPEDEF
-- On ACTIONS reduce production annotationToken -> TYPEDEF
-- On ACTION reduce production annotationToken -> TYPEDEF
-- On ABSTRACT reduce production annotationToken -> TYPEDEF

State 215:
annotationToken -> TYPE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> TYPE
-- On VARBIT reduce production annotationToken -> TYPE
-- On VALUESET reduce production annotationToken -> TYPE
-- On TYPEDEF reduce production annotationToken -> TYPE
-- On TYPE reduce production annotationToken -> TYPE
-- On TUPLE reduce production annotationToken -> TYPE
-- On TRUE reduce production annotationToken -> TYPE
-- On TRANSITION reduce production annotationToken -> TYPE
-- On TABLE reduce production annotationToken -> TYPE
-- On SWITCH reduce production annotationToken -> TYPE
-- On STRUCT reduce production annotationToken -> TYPE
-- On STRING_LITERAL reduce production annotationToken -> TYPE
-- On STRING reduce production annotationToken -> TYPE
-- On STATE reduce production annotationToken -> TYPE
-- On SHL reduce production annotationToken -> TYPE
-- On SEMICOLON reduce production annotationToken -> TYPE
-- On SELECT reduce production annotationToken -> TYPE
-- On R_PAREN reduce production annotationToken -> TYPE
-- On R_BRACKET reduce production annotationToken -> TYPE
-- On R_BRACE reduce production annotationToken -> TYPE
-- On R_ANGLE reduce production annotationToken -> TYPE
-- On RETURN reduce production annotationToken -> TYPE
-- On RANGE reduce production annotationToken -> TYPE
-- On QUESTION reduce production annotationToken -> TYPE
-- On PRAGMA_END reduce production annotationToken -> TYPE
-- On PRAGMA reduce production annotationToken -> TYPE
-- On PLUS_SAT reduce production annotationToken -> TYPE
-- On PLUSPLUS reduce production annotationToken -> TYPE
-- On PLUS reduce production annotationToken -> TYPE
-- On PARSER reduce production annotationToken -> TYPE
-- On PACKAGE reduce production annotationToken -> TYPE
-- On OUT reduce production annotationToken -> TYPE
-- On OR reduce production annotationToken -> TYPE
-- On NOT reduce production annotationToken -> TYPE
-- On NE reduce production annotationToken -> TYPE
-- On NAME reduce production annotationToken -> TYPE
-- On MUL reduce production annotationToken -> TYPE
-- On MOD reduce production annotationToken -> TYPE
-- On MINUS_SAT reduce production annotationToken -> TYPE
-- On MINUS reduce production annotationToken -> TYPE
-- On MATCH_KIND reduce production annotationToken -> TYPE
-- On MASK reduce production annotationToken -> TYPE
-- On L_PAREN reduce production annotationToken -> TYPE
-- On L_BRACKET reduce production annotationToken -> TYPE
-- On L_BRACE reduce production annotationToken -> TYPE
-- On L_ANGLE reduce production annotationToken -> TYPE
-- On LE reduce production annotationToken -> TYPE
-- On KEY reduce production annotationToken -> TYPE
-- On INTEGER reduce production annotationToken -> TYPE
-- On INT reduce production annotationToken -> TYPE
-- On INOUT reduce production annotationToken -> TYPE
-- On IN reduce production annotationToken -> TYPE
-- On IF reduce production annotationToken -> TYPE
-- On HEADER_UNION reduce production annotationToken -> TYPE
-- On HEADER reduce production annotationToken -> TYPE
-- On GE reduce production annotationToken -> TYPE
-- On FALSE reduce production annotationToken -> TYPE
-- On EXTERN reduce production annotationToken -> TYPE
-- On EXIT reduce production annotationToken -> TYPE
-- On ERROR reduce production annotationToken -> TYPE
-- On EQ reduce production annotationToken -> TYPE
-- On ENUM reduce production annotationToken -> TYPE
-- On ENTRIES reduce production annotationToken -> TYPE
-- On ELSE reduce production annotationToken -> TYPE
-- On DOT reduce production annotationToken -> TYPE
-- On DONTCARE reduce production annotationToken -> TYPE
-- On DIV reduce production annotationToken -> TYPE
-- On DEFAULT reduce production annotationToken -> TYPE
-- On CONTROL reduce production annotationToken -> TYPE
-- On CONST reduce production annotationToken -> TYPE
-- On COMPLEMENT reduce production annotationToken -> TYPE
-- On COMMA reduce production annotationToken -> TYPE
-- On COLON reduce production annotationToken -> TYPE
-- On BOOL reduce production annotationToken -> TYPE
-- On BIT_XOR reduce production annotationToken -> TYPE
-- On BIT_OR reduce production annotationToken -> TYPE
-- On BIT_AND reduce production annotationToken -> TYPE
-- On BIT reduce production annotationToken -> TYPE
-- On AT reduce production annotationToken -> TYPE
-- On ASSIGN reduce production annotationToken -> TYPE
-- On APPLY reduce production annotationToken -> TYPE
-- On AND reduce production annotationToken -> TYPE
-- On ACTIONS reduce production annotationToken -> TYPE
-- On ACTION reduce production annotationToken -> TYPE
-- On ABSTRACT reduce production annotationToken -> TYPE

State 216:
annotationToken -> TUPLE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> TUPLE
-- On VARBIT reduce production annotationToken -> TUPLE
-- On VALUESET reduce production annotationToken -> TUPLE
-- On TYPEDEF reduce production annotationToken -> TUPLE
-- On TYPE reduce production annotationToken -> TUPLE
-- On TUPLE reduce production annotationToken -> TUPLE
-- On TRUE reduce production annotationToken -> TUPLE
-- On TRANSITION reduce production annotationToken -> TUPLE
-- On TABLE reduce production annotationToken -> TUPLE
-- On SWITCH reduce production annotationToken -> TUPLE
-- On STRUCT reduce production annotationToken -> TUPLE
-- On STRING_LITERAL reduce production annotationToken -> TUPLE
-- On STRING reduce production annotationToken -> TUPLE
-- On STATE reduce production annotationToken -> TUPLE
-- On SHL reduce production annotationToken -> TUPLE
-- On SEMICOLON reduce production annotationToken -> TUPLE
-- On SELECT reduce production annotationToken -> TUPLE
-- On R_PAREN reduce production annotationToken -> TUPLE
-- On R_BRACKET reduce production annotationToken -> TUPLE
-- On R_BRACE reduce production annotationToken -> TUPLE
-- On R_ANGLE reduce production annotationToken -> TUPLE
-- On RETURN reduce production annotationToken -> TUPLE
-- On RANGE reduce production annotationToken -> TUPLE
-- On QUESTION reduce production annotationToken -> TUPLE
-- On PRAGMA_END reduce production annotationToken -> TUPLE
-- On PRAGMA reduce production annotationToken -> TUPLE
-- On PLUS_SAT reduce production annotationToken -> TUPLE
-- On PLUSPLUS reduce production annotationToken -> TUPLE
-- On PLUS reduce production annotationToken -> TUPLE
-- On PARSER reduce production annotationToken -> TUPLE
-- On PACKAGE reduce production annotationToken -> TUPLE
-- On OUT reduce production annotationToken -> TUPLE
-- On OR reduce production annotationToken -> TUPLE
-- On NOT reduce production annotationToken -> TUPLE
-- On NE reduce production annotationToken -> TUPLE
-- On NAME reduce production annotationToken -> TUPLE
-- On MUL reduce production annotationToken -> TUPLE
-- On MOD reduce production annotationToken -> TUPLE
-- On MINUS_SAT reduce production annotationToken -> TUPLE
-- On MINUS reduce production annotationToken -> TUPLE
-- On MATCH_KIND reduce production annotationToken -> TUPLE
-- On MASK reduce production annotationToken -> TUPLE
-- On L_PAREN reduce production annotationToken -> TUPLE
-- On L_BRACKET reduce production annotationToken -> TUPLE
-- On L_BRACE reduce production annotationToken -> TUPLE
-- On L_ANGLE reduce production annotationToken -> TUPLE
-- On LE reduce production annotationToken -> TUPLE
-- On KEY reduce production annotationToken -> TUPLE
-- On INTEGER reduce production annotationToken -> TUPLE
-- On INT reduce production annotationToken -> TUPLE
-- On INOUT reduce production annotationToken -> TUPLE
-- On IN reduce production annotationToken -> TUPLE
-- On IF reduce production annotationToken -> TUPLE
-- On HEADER_UNION reduce production annotationToken -> TUPLE
-- On HEADER reduce production annotationToken -> TUPLE
-- On GE reduce production annotationToken -> TUPLE
-- On FALSE reduce production annotationToken -> TUPLE
-- On EXTERN reduce production annotationToken -> TUPLE
-- On EXIT reduce production annotationToken -> TUPLE
-- On ERROR reduce production annotationToken -> TUPLE
-- On EQ reduce production annotationToken -> TUPLE
-- On ENUM reduce production annotationToken -> TUPLE
-- On ENTRIES reduce production annotationToken -> TUPLE
-- On ELSE reduce production annotationToken -> TUPLE
-- On DOT reduce production annotationToken -> TUPLE
-- On DONTCARE reduce production annotationToken -> TUPLE
-- On DIV reduce production annotationToken -> TUPLE
-- On DEFAULT reduce production annotationToken -> TUPLE
-- On CONTROL reduce production annotationToken -> TUPLE
-- On CONST reduce production annotationToken -> TUPLE
-- On COMPLEMENT reduce production annotationToken -> TUPLE
-- On COMMA reduce production annotationToken -> TUPLE
-- On COLON reduce production annotationToken -> TUPLE
-- On BOOL reduce production annotationToken -> TUPLE
-- On BIT_XOR reduce production annotationToken -> TUPLE
-- On BIT_OR reduce production annotationToken -> TUPLE
-- On BIT_AND reduce production annotationToken -> TUPLE
-- On BIT reduce production annotationToken -> TUPLE
-- On AT reduce production annotationToken -> TUPLE
-- On ASSIGN reduce production annotationToken -> TUPLE
-- On APPLY reduce production annotationToken -> TUPLE
-- On AND reduce production annotationToken -> TUPLE
-- On ACTIONS reduce production annotationToken -> TUPLE
-- On ACTION reduce production annotationToken -> TUPLE
-- On ABSTRACT reduce production annotationToken -> TUPLE

State 217:
annotationToken -> TRUE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> TRUE
-- On VARBIT reduce production annotationToken -> TRUE
-- On VALUESET reduce production annotationToken -> TRUE
-- On TYPEDEF reduce production annotationToken -> TRUE
-- On TYPE reduce production annotationToken -> TRUE
-- On TUPLE reduce production annotationToken -> TRUE
-- On TRUE reduce production annotationToken -> TRUE
-- On TRANSITION reduce production annotationToken -> TRUE
-- On TABLE reduce production annotationToken -> TRUE
-- On SWITCH reduce production annotationToken -> TRUE
-- On STRUCT reduce production annotationToken -> TRUE
-- On STRING_LITERAL reduce production annotationToken -> TRUE
-- On STRING reduce production annotationToken -> TRUE
-- On STATE reduce production annotationToken -> TRUE
-- On SHL reduce production annotationToken -> TRUE
-- On SEMICOLON reduce production annotationToken -> TRUE
-- On SELECT reduce production annotationToken -> TRUE
-- On R_PAREN reduce production annotationToken -> TRUE
-- On R_BRACKET reduce production annotationToken -> TRUE
-- On R_BRACE reduce production annotationToken -> TRUE
-- On R_ANGLE reduce production annotationToken -> TRUE
-- On RETURN reduce production annotationToken -> TRUE
-- On RANGE reduce production annotationToken -> TRUE
-- On QUESTION reduce production annotationToken -> TRUE
-- On PRAGMA_END reduce production annotationToken -> TRUE
-- On PRAGMA reduce production annotationToken -> TRUE
-- On PLUS_SAT reduce production annotationToken -> TRUE
-- On PLUSPLUS reduce production annotationToken -> TRUE
-- On PLUS reduce production annotationToken -> TRUE
-- On PARSER reduce production annotationToken -> TRUE
-- On PACKAGE reduce production annotationToken -> TRUE
-- On OUT reduce production annotationToken -> TRUE
-- On OR reduce production annotationToken -> TRUE
-- On NOT reduce production annotationToken -> TRUE
-- On NE reduce production annotationToken -> TRUE
-- On NAME reduce production annotationToken -> TRUE
-- On MUL reduce production annotationToken -> TRUE
-- On MOD reduce production annotationToken -> TRUE
-- On MINUS_SAT reduce production annotationToken -> TRUE
-- On MINUS reduce production annotationToken -> TRUE
-- On MATCH_KIND reduce production annotationToken -> TRUE
-- On MASK reduce production annotationToken -> TRUE
-- On L_PAREN reduce production annotationToken -> TRUE
-- On L_BRACKET reduce production annotationToken -> TRUE
-- On L_BRACE reduce production annotationToken -> TRUE
-- On L_ANGLE reduce production annotationToken -> TRUE
-- On LE reduce production annotationToken -> TRUE
-- On KEY reduce production annotationToken -> TRUE
-- On INTEGER reduce production annotationToken -> TRUE
-- On INT reduce production annotationToken -> TRUE
-- On INOUT reduce production annotationToken -> TRUE
-- On IN reduce production annotationToken -> TRUE
-- On IF reduce production annotationToken -> TRUE
-- On HEADER_UNION reduce production annotationToken -> TRUE
-- On HEADER reduce production annotationToken -> TRUE
-- On GE reduce production annotationToken -> TRUE
-- On FALSE reduce production annotationToken -> TRUE
-- On EXTERN reduce production annotationToken -> TRUE
-- On EXIT reduce production annotationToken -> TRUE
-- On ERROR reduce production annotationToken -> TRUE
-- On EQ reduce production annotationToken -> TRUE
-- On ENUM reduce production annotationToken -> TRUE
-- On ENTRIES reduce production annotationToken -> TRUE
-- On ELSE reduce production annotationToken -> TRUE
-- On DOT reduce production annotationToken -> TRUE
-- On DONTCARE reduce production annotationToken -> TRUE
-- On DIV reduce production annotationToken -> TRUE
-- On DEFAULT reduce production annotationToken -> TRUE
-- On CONTROL reduce production annotationToken -> TRUE
-- On CONST reduce production annotationToken -> TRUE
-- On COMPLEMENT reduce production annotationToken -> TRUE
-- On COMMA reduce production annotationToken -> TRUE
-- On COLON reduce production annotationToken -> TRUE
-- On BOOL reduce production annotationToken -> TRUE
-- On BIT_XOR reduce production annotationToken -> TRUE
-- On BIT_OR reduce production annotationToken -> TRUE
-- On BIT_AND reduce production annotationToken -> TRUE
-- On BIT reduce production annotationToken -> TRUE
-- On AT reduce production annotationToken -> TRUE
-- On ASSIGN reduce production annotationToken -> TRUE
-- On APPLY reduce production annotationToken -> TRUE
-- On AND reduce production annotationToken -> TRUE
-- On ACTIONS reduce production annotationToken -> TRUE
-- On ACTION reduce production annotationToken -> TRUE
-- On ABSTRACT reduce production annotationToken -> TRUE

State 218:
annotationToken -> TRANSITION . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> TRANSITION
-- On VARBIT reduce production annotationToken -> TRANSITION
-- On VALUESET reduce production annotationToken -> TRANSITION
-- On TYPEDEF reduce production annotationToken -> TRANSITION
-- On TYPE reduce production annotationToken -> TRANSITION
-- On TUPLE reduce production annotationToken -> TRANSITION
-- On TRUE reduce production annotationToken -> TRANSITION
-- On TRANSITION reduce production annotationToken -> TRANSITION
-- On TABLE reduce production annotationToken -> TRANSITION
-- On SWITCH reduce production annotationToken -> TRANSITION
-- On STRUCT reduce production annotationToken -> TRANSITION
-- On STRING_LITERAL reduce production annotationToken -> TRANSITION
-- On STRING reduce production annotationToken -> TRANSITION
-- On STATE reduce production annotationToken -> TRANSITION
-- On SHL reduce production annotationToken -> TRANSITION
-- On SEMICOLON reduce production annotationToken -> TRANSITION
-- On SELECT reduce production annotationToken -> TRANSITION
-- On R_PAREN reduce production annotationToken -> TRANSITION
-- On R_BRACKET reduce production annotationToken -> TRANSITION
-- On R_BRACE reduce production annotationToken -> TRANSITION
-- On R_ANGLE reduce production annotationToken -> TRANSITION
-- On RETURN reduce production annotationToken -> TRANSITION
-- On RANGE reduce production annotationToken -> TRANSITION
-- On QUESTION reduce production annotationToken -> TRANSITION
-- On PRAGMA_END reduce production annotationToken -> TRANSITION
-- On PRAGMA reduce production annotationToken -> TRANSITION
-- On PLUS_SAT reduce production annotationToken -> TRANSITION
-- On PLUSPLUS reduce production annotationToken -> TRANSITION
-- On PLUS reduce production annotationToken -> TRANSITION
-- On PARSER reduce production annotationToken -> TRANSITION
-- On PACKAGE reduce production annotationToken -> TRANSITION
-- On OUT reduce production annotationToken -> TRANSITION
-- On OR reduce production annotationToken -> TRANSITION
-- On NOT reduce production annotationToken -> TRANSITION
-- On NE reduce production annotationToken -> TRANSITION
-- On NAME reduce production annotationToken -> TRANSITION
-- On MUL reduce production annotationToken -> TRANSITION
-- On MOD reduce production annotationToken -> TRANSITION
-- On MINUS_SAT reduce production annotationToken -> TRANSITION
-- On MINUS reduce production annotationToken -> TRANSITION
-- On MATCH_KIND reduce production annotationToken -> TRANSITION
-- On MASK reduce production annotationToken -> TRANSITION
-- On L_PAREN reduce production annotationToken -> TRANSITION
-- On L_BRACKET reduce production annotationToken -> TRANSITION
-- On L_BRACE reduce production annotationToken -> TRANSITION
-- On L_ANGLE reduce production annotationToken -> TRANSITION
-- On LE reduce production annotationToken -> TRANSITION
-- On KEY reduce production annotationToken -> TRANSITION
-- On INTEGER reduce production annotationToken -> TRANSITION
-- On INT reduce production annotationToken -> TRANSITION
-- On INOUT reduce production annotationToken -> TRANSITION
-- On IN reduce production annotationToken -> TRANSITION
-- On IF reduce production annotationToken -> TRANSITION
-- On HEADER_UNION reduce production annotationToken -> TRANSITION
-- On HEADER reduce production annotationToken -> TRANSITION
-- On GE reduce production annotationToken -> TRANSITION
-- On FALSE reduce production annotationToken -> TRANSITION
-- On EXTERN reduce production annotationToken -> TRANSITION
-- On EXIT reduce production annotationToken -> TRANSITION
-- On ERROR reduce production annotationToken -> TRANSITION
-- On EQ reduce production annotationToken -> TRANSITION
-- On ENUM reduce production annotationToken -> TRANSITION
-- On ENTRIES reduce production annotationToken -> TRANSITION
-- On ELSE reduce production annotationToken -> TRANSITION
-- On DOT reduce production annotationToken -> TRANSITION
-- On DONTCARE reduce production annotationToken -> TRANSITION
-- On DIV reduce production annotationToken -> TRANSITION
-- On DEFAULT reduce production annotationToken -> TRANSITION
-- On CONTROL reduce production annotationToken -> TRANSITION
-- On CONST reduce production annotationToken -> TRANSITION
-- On COMPLEMENT reduce production annotationToken -> TRANSITION
-- On COMMA reduce production annotationToken -> TRANSITION
-- On COLON reduce production annotationToken -> TRANSITION
-- On BOOL reduce production annotationToken -> TRANSITION
-- On BIT_XOR reduce production annotationToken -> TRANSITION
-- On BIT_OR reduce production annotationToken -> TRANSITION
-- On BIT_AND reduce production annotationToken -> TRANSITION
-- On BIT reduce production annotationToken -> TRANSITION
-- On AT reduce production annotationToken -> TRANSITION
-- On ASSIGN reduce production annotationToken -> TRANSITION
-- On APPLY reduce production annotationToken -> TRANSITION
-- On AND reduce production annotationToken -> TRANSITION
-- On ACTIONS reduce production annotationToken -> TRANSITION
-- On ACTION reduce production annotationToken -> TRANSITION
-- On ABSTRACT reduce production annotationToken -> TRANSITION

State 219:
annotationToken -> TABLE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> TABLE
-- On VARBIT reduce production annotationToken -> TABLE
-- On VALUESET reduce production annotationToken -> TABLE
-- On TYPEDEF reduce production annotationToken -> TABLE
-- On TYPE reduce production annotationToken -> TABLE
-- On TUPLE reduce production annotationToken -> TABLE
-- On TRUE reduce production annotationToken -> TABLE
-- On TRANSITION reduce production annotationToken -> TABLE
-- On TABLE reduce production annotationToken -> TABLE
-- On SWITCH reduce production annotationToken -> TABLE
-- On STRUCT reduce production annotationToken -> TABLE
-- On STRING_LITERAL reduce production annotationToken -> TABLE
-- On STRING reduce production annotationToken -> TABLE
-- On STATE reduce production annotationToken -> TABLE
-- On SHL reduce production annotationToken -> TABLE
-- On SEMICOLON reduce production annotationToken -> TABLE
-- On SELECT reduce production annotationToken -> TABLE
-- On R_PAREN reduce production annotationToken -> TABLE
-- On R_BRACKET reduce production annotationToken -> TABLE
-- On R_BRACE reduce production annotationToken -> TABLE
-- On R_ANGLE reduce production annotationToken -> TABLE
-- On RETURN reduce production annotationToken -> TABLE
-- On RANGE reduce production annotationToken -> TABLE
-- On QUESTION reduce production annotationToken -> TABLE
-- On PRAGMA_END reduce production annotationToken -> TABLE
-- On PRAGMA reduce production annotationToken -> TABLE
-- On PLUS_SAT reduce production annotationToken -> TABLE
-- On PLUSPLUS reduce production annotationToken -> TABLE
-- On PLUS reduce production annotationToken -> TABLE
-- On PARSER reduce production annotationToken -> TABLE
-- On PACKAGE reduce production annotationToken -> TABLE
-- On OUT reduce production annotationToken -> TABLE
-- On OR reduce production annotationToken -> TABLE
-- On NOT reduce production annotationToken -> TABLE
-- On NE reduce production annotationToken -> TABLE
-- On NAME reduce production annotationToken -> TABLE
-- On MUL reduce production annotationToken -> TABLE
-- On MOD reduce production annotationToken -> TABLE
-- On MINUS_SAT reduce production annotationToken -> TABLE
-- On MINUS reduce production annotationToken -> TABLE
-- On MATCH_KIND reduce production annotationToken -> TABLE
-- On MASK reduce production annotationToken -> TABLE
-- On L_PAREN reduce production annotationToken -> TABLE
-- On L_BRACKET reduce production annotationToken -> TABLE
-- On L_BRACE reduce production annotationToken -> TABLE
-- On L_ANGLE reduce production annotationToken -> TABLE
-- On LE reduce production annotationToken -> TABLE
-- On KEY reduce production annotationToken -> TABLE
-- On INTEGER reduce production annotationToken -> TABLE
-- On INT reduce production annotationToken -> TABLE
-- On INOUT reduce production annotationToken -> TABLE
-- On IN reduce production annotationToken -> TABLE
-- On IF reduce production annotationToken -> TABLE
-- On HEADER_UNION reduce production annotationToken -> TABLE
-- On HEADER reduce production annotationToken -> TABLE
-- On GE reduce production annotationToken -> TABLE
-- On FALSE reduce production annotationToken -> TABLE
-- On EXTERN reduce production annotationToken -> TABLE
-- On EXIT reduce production annotationToken -> TABLE
-- On ERROR reduce production annotationToken -> TABLE
-- On EQ reduce production annotationToken -> TABLE
-- On ENUM reduce production annotationToken -> TABLE
-- On ENTRIES reduce production annotationToken -> TABLE
-- On ELSE reduce production annotationToken -> TABLE
-- On DOT reduce production annotationToken -> TABLE
-- On DONTCARE reduce production annotationToken -> TABLE
-- On DIV reduce production annotationToken -> TABLE
-- On DEFAULT reduce production annotationToken -> TABLE
-- On CONTROL reduce production annotationToken -> TABLE
-- On CONST reduce production annotationToken -> TABLE
-- On COMPLEMENT reduce production annotationToken -> TABLE
-- On COMMA reduce production annotationToken -> TABLE
-- On COLON reduce production annotationToken -> TABLE
-- On BOOL reduce production annotationToken -> TABLE
-- On BIT_XOR reduce production annotationToken -> TABLE
-- On BIT_OR reduce production annotationToken -> TABLE
-- On BIT_AND reduce production annotationToken -> TABLE
-- On BIT reduce production annotationToken -> TABLE
-- On AT reduce production annotationToken -> TABLE
-- On ASSIGN reduce production annotationToken -> TABLE
-- On APPLY reduce production annotationToken -> TABLE
-- On AND reduce production annotationToken -> TABLE
-- On ACTIONS reduce production annotationToken -> TABLE
-- On ACTION reduce production annotationToken -> TABLE
-- On ABSTRACT reduce production annotationToken -> TABLE

State 220:
annotationToken -> SWITCH . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> SWITCH
-- On VARBIT reduce production annotationToken -> SWITCH
-- On VALUESET reduce production annotationToken -> SWITCH
-- On TYPEDEF reduce production annotationToken -> SWITCH
-- On TYPE reduce production annotationToken -> SWITCH
-- On TUPLE reduce production annotationToken -> SWITCH
-- On TRUE reduce production annotationToken -> SWITCH
-- On TRANSITION reduce production annotationToken -> SWITCH
-- On TABLE reduce production annotationToken -> SWITCH
-- On SWITCH reduce production annotationToken -> SWITCH
-- On STRUCT reduce production annotationToken -> SWITCH
-- On STRING_LITERAL reduce production annotationToken -> SWITCH
-- On STRING reduce production annotationToken -> SWITCH
-- On STATE reduce production annotationToken -> SWITCH
-- On SHL reduce production annotationToken -> SWITCH
-- On SEMICOLON reduce production annotationToken -> SWITCH
-- On SELECT reduce production annotationToken -> SWITCH
-- On R_PAREN reduce production annotationToken -> SWITCH
-- On R_BRACKET reduce production annotationToken -> SWITCH
-- On R_BRACE reduce production annotationToken -> SWITCH
-- On R_ANGLE reduce production annotationToken -> SWITCH
-- On RETURN reduce production annotationToken -> SWITCH
-- On RANGE reduce production annotationToken -> SWITCH
-- On QUESTION reduce production annotationToken -> SWITCH
-- On PRAGMA_END reduce production annotationToken -> SWITCH
-- On PRAGMA reduce production annotationToken -> SWITCH
-- On PLUS_SAT reduce production annotationToken -> SWITCH
-- On PLUSPLUS reduce production annotationToken -> SWITCH
-- On PLUS reduce production annotationToken -> SWITCH
-- On PARSER reduce production annotationToken -> SWITCH
-- On PACKAGE reduce production annotationToken -> SWITCH
-- On OUT reduce production annotationToken -> SWITCH
-- On OR reduce production annotationToken -> SWITCH
-- On NOT reduce production annotationToken -> SWITCH
-- On NE reduce production annotationToken -> SWITCH
-- On NAME reduce production annotationToken -> SWITCH
-- On MUL reduce production annotationToken -> SWITCH
-- On MOD reduce production annotationToken -> SWITCH
-- On MINUS_SAT reduce production annotationToken -> SWITCH
-- On MINUS reduce production annotationToken -> SWITCH
-- On MATCH_KIND reduce production annotationToken -> SWITCH
-- On MASK reduce production annotationToken -> SWITCH
-- On L_PAREN reduce production annotationToken -> SWITCH
-- On L_BRACKET reduce production annotationToken -> SWITCH
-- On L_BRACE reduce production annotationToken -> SWITCH
-- On L_ANGLE reduce production annotationToken -> SWITCH
-- On LE reduce production annotationToken -> SWITCH
-- On KEY reduce production annotationToken -> SWITCH
-- On INTEGER reduce production annotationToken -> SWITCH
-- On INT reduce production annotationToken -> SWITCH
-- On INOUT reduce production annotationToken -> SWITCH
-- On IN reduce production annotationToken -> SWITCH
-- On IF reduce production annotationToken -> SWITCH
-- On HEADER_UNION reduce production annotationToken -> SWITCH
-- On HEADER reduce production annotationToken -> SWITCH
-- On GE reduce production annotationToken -> SWITCH
-- On FALSE reduce production annotationToken -> SWITCH
-- On EXTERN reduce production annotationToken -> SWITCH
-- On EXIT reduce production annotationToken -> SWITCH
-- On ERROR reduce production annotationToken -> SWITCH
-- On EQ reduce production annotationToken -> SWITCH
-- On ENUM reduce production annotationToken -> SWITCH
-- On ENTRIES reduce production annotationToken -> SWITCH
-- On ELSE reduce production annotationToken -> SWITCH
-- On DOT reduce production annotationToken -> SWITCH
-- On DONTCARE reduce production annotationToken -> SWITCH
-- On DIV reduce production annotationToken -> SWITCH
-- On DEFAULT reduce production annotationToken -> SWITCH
-- On CONTROL reduce production annotationToken -> SWITCH
-- On CONST reduce production annotationToken -> SWITCH
-- On COMPLEMENT reduce production annotationToken -> SWITCH
-- On COMMA reduce production annotationToken -> SWITCH
-- On COLON reduce production annotationToken -> SWITCH
-- On BOOL reduce production annotationToken -> SWITCH
-- On BIT_XOR reduce production annotationToken -> SWITCH
-- On BIT_OR reduce production annotationToken -> SWITCH
-- On BIT_AND reduce production annotationToken -> SWITCH
-- On BIT reduce production annotationToken -> SWITCH
-- On AT reduce production annotationToken -> SWITCH
-- On ASSIGN reduce production annotationToken -> SWITCH
-- On APPLY reduce production annotationToken -> SWITCH
-- On AND reduce production annotationToken -> SWITCH
-- On ACTIONS reduce production annotationToken -> SWITCH
-- On ACTION reduce production annotationToken -> SWITCH
-- On ABSTRACT reduce production annotationToken -> SWITCH

State 221:
annotationToken -> STRUCT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> STRUCT
-- On VARBIT reduce production annotationToken -> STRUCT
-- On VALUESET reduce production annotationToken -> STRUCT
-- On TYPEDEF reduce production annotationToken -> STRUCT
-- On TYPE reduce production annotationToken -> STRUCT
-- On TUPLE reduce production annotationToken -> STRUCT
-- On TRUE reduce production annotationToken -> STRUCT
-- On TRANSITION reduce production annotationToken -> STRUCT
-- On TABLE reduce production annotationToken -> STRUCT
-- On SWITCH reduce production annotationToken -> STRUCT
-- On STRUCT reduce production annotationToken -> STRUCT
-- On STRING_LITERAL reduce production annotationToken -> STRUCT
-- On STRING reduce production annotationToken -> STRUCT
-- On STATE reduce production annotationToken -> STRUCT
-- On SHL reduce production annotationToken -> STRUCT
-- On SEMICOLON reduce production annotationToken -> STRUCT
-- On SELECT reduce production annotationToken -> STRUCT
-- On R_PAREN reduce production annotationToken -> STRUCT
-- On R_BRACKET reduce production annotationToken -> STRUCT
-- On R_BRACE reduce production annotationToken -> STRUCT
-- On R_ANGLE reduce production annotationToken -> STRUCT
-- On RETURN reduce production annotationToken -> STRUCT
-- On RANGE reduce production annotationToken -> STRUCT
-- On QUESTION reduce production annotationToken -> STRUCT
-- On PRAGMA_END reduce production annotationToken -> STRUCT
-- On PRAGMA reduce production annotationToken -> STRUCT
-- On PLUS_SAT reduce production annotationToken -> STRUCT
-- On PLUSPLUS reduce production annotationToken -> STRUCT
-- On PLUS reduce production annotationToken -> STRUCT
-- On PARSER reduce production annotationToken -> STRUCT
-- On PACKAGE reduce production annotationToken -> STRUCT
-- On OUT reduce production annotationToken -> STRUCT
-- On OR reduce production annotationToken -> STRUCT
-- On NOT reduce production annotationToken -> STRUCT
-- On NE reduce production annotationToken -> STRUCT
-- On NAME reduce production annotationToken -> STRUCT
-- On MUL reduce production annotationToken -> STRUCT
-- On MOD reduce production annotationToken -> STRUCT
-- On MINUS_SAT reduce production annotationToken -> STRUCT
-- On MINUS reduce production annotationToken -> STRUCT
-- On MATCH_KIND reduce production annotationToken -> STRUCT
-- On MASK reduce production annotationToken -> STRUCT
-- On L_PAREN reduce production annotationToken -> STRUCT
-- On L_BRACKET reduce production annotationToken -> STRUCT
-- On L_BRACE reduce production annotationToken -> STRUCT
-- On L_ANGLE reduce production annotationToken -> STRUCT
-- On LE reduce production annotationToken -> STRUCT
-- On KEY reduce production annotationToken -> STRUCT
-- On INTEGER reduce production annotationToken -> STRUCT
-- On INT reduce production annotationToken -> STRUCT
-- On INOUT reduce production annotationToken -> STRUCT
-- On IN reduce production annotationToken -> STRUCT
-- On IF reduce production annotationToken -> STRUCT
-- On HEADER_UNION reduce production annotationToken -> STRUCT
-- On HEADER reduce production annotationToken -> STRUCT
-- On GE reduce production annotationToken -> STRUCT
-- On FALSE reduce production annotationToken -> STRUCT
-- On EXTERN reduce production annotationToken -> STRUCT
-- On EXIT reduce production annotationToken -> STRUCT
-- On ERROR reduce production annotationToken -> STRUCT
-- On EQ reduce production annotationToken -> STRUCT
-- On ENUM reduce production annotationToken -> STRUCT
-- On ENTRIES reduce production annotationToken -> STRUCT
-- On ELSE reduce production annotationToken -> STRUCT
-- On DOT reduce production annotationToken -> STRUCT
-- On DONTCARE reduce production annotationToken -> STRUCT
-- On DIV reduce production annotationToken -> STRUCT
-- On DEFAULT reduce production annotationToken -> STRUCT
-- On CONTROL reduce production annotationToken -> STRUCT
-- On CONST reduce production annotationToken -> STRUCT
-- On COMPLEMENT reduce production annotationToken -> STRUCT
-- On COMMA reduce production annotationToken -> STRUCT
-- On COLON reduce production annotationToken -> STRUCT
-- On BOOL reduce production annotationToken -> STRUCT
-- On BIT_XOR reduce production annotationToken -> STRUCT
-- On BIT_OR reduce production annotationToken -> STRUCT
-- On BIT_AND reduce production annotationToken -> STRUCT
-- On BIT reduce production annotationToken -> STRUCT
-- On AT reduce production annotationToken -> STRUCT
-- On ASSIGN reduce production annotationToken -> STRUCT
-- On APPLY reduce production annotationToken -> STRUCT
-- On AND reduce production annotationToken -> STRUCT
-- On ACTIONS reduce production annotationToken -> STRUCT
-- On ACTION reduce production annotationToken -> STRUCT
-- On ABSTRACT reduce production annotationToken -> STRUCT

State 222:
annotationToken -> STRING_LITERAL . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> STRING_LITERAL
-- On VARBIT reduce production annotationToken -> STRING_LITERAL
-- On VALUESET reduce production annotationToken -> STRING_LITERAL
-- On TYPEDEF reduce production annotationToken -> STRING_LITERAL
-- On TYPE reduce production annotationToken -> STRING_LITERAL
-- On TUPLE reduce production annotationToken -> STRING_LITERAL
-- On TRUE reduce production annotationToken -> STRING_LITERAL
-- On TRANSITION reduce production annotationToken -> STRING_LITERAL
-- On TABLE reduce production annotationToken -> STRING_LITERAL
-- On SWITCH reduce production annotationToken -> STRING_LITERAL
-- On STRUCT reduce production annotationToken -> STRING_LITERAL
-- On STRING_LITERAL reduce production annotationToken -> STRING_LITERAL
-- On STRING reduce production annotationToken -> STRING_LITERAL
-- On STATE reduce production annotationToken -> STRING_LITERAL
-- On SHL reduce production annotationToken -> STRING_LITERAL
-- On SEMICOLON reduce production annotationToken -> STRING_LITERAL
-- On SELECT reduce production annotationToken -> STRING_LITERAL
-- On R_PAREN reduce production annotationToken -> STRING_LITERAL
-- On R_BRACKET reduce production annotationToken -> STRING_LITERAL
-- On R_BRACE reduce production annotationToken -> STRING_LITERAL
-- On R_ANGLE reduce production annotationToken -> STRING_LITERAL
-- On RETURN reduce production annotationToken -> STRING_LITERAL
-- On RANGE reduce production annotationToken -> STRING_LITERAL
-- On QUESTION reduce production annotationToken -> STRING_LITERAL
-- On PRAGMA_END reduce production annotationToken -> STRING_LITERAL
-- On PRAGMA reduce production annotationToken -> STRING_LITERAL
-- On PLUS_SAT reduce production annotationToken -> STRING_LITERAL
-- On PLUSPLUS reduce production annotationToken -> STRING_LITERAL
-- On PLUS reduce production annotationToken -> STRING_LITERAL
-- On PARSER reduce production annotationToken -> STRING_LITERAL
-- On PACKAGE reduce production annotationToken -> STRING_LITERAL
-- On OUT reduce production annotationToken -> STRING_LITERAL
-- On OR reduce production annotationToken -> STRING_LITERAL
-- On NOT reduce production annotationToken -> STRING_LITERAL
-- On NE reduce production annotationToken -> STRING_LITERAL
-- On NAME reduce production annotationToken -> STRING_LITERAL
-- On MUL reduce production annotationToken -> STRING_LITERAL
-- On MOD reduce production annotationToken -> STRING_LITERAL
-- On MINUS_SAT reduce production annotationToken -> STRING_LITERAL
-- On MINUS reduce production annotationToken -> STRING_LITERAL
-- On MATCH_KIND reduce production annotationToken -> STRING_LITERAL
-- On MASK reduce production annotationToken -> STRING_LITERAL
-- On L_PAREN reduce production annotationToken -> STRING_LITERAL
-- On L_BRACKET reduce production annotationToken -> STRING_LITERAL
-- On L_BRACE reduce production annotationToken -> STRING_LITERAL
-- On L_ANGLE reduce production annotationToken -> STRING_LITERAL
-- On LE reduce production annotationToken -> STRING_LITERAL
-- On KEY reduce production annotationToken -> STRING_LITERAL
-- On INTEGER reduce production annotationToken -> STRING_LITERAL
-- On INT reduce production annotationToken -> STRING_LITERAL
-- On INOUT reduce production annotationToken -> STRING_LITERAL
-- On IN reduce production annotationToken -> STRING_LITERAL
-- On IF reduce production annotationToken -> STRING_LITERAL
-- On HEADER_UNION reduce production annotationToken -> STRING_LITERAL
-- On HEADER reduce production annotationToken -> STRING_LITERAL
-- On GE reduce production annotationToken -> STRING_LITERAL
-- On FALSE reduce production annotationToken -> STRING_LITERAL
-- On EXTERN reduce production annotationToken -> STRING_LITERAL
-- On EXIT reduce production annotationToken -> STRING_LITERAL
-- On ERROR reduce production annotationToken -> STRING_LITERAL
-- On EQ reduce production annotationToken -> STRING_LITERAL
-- On ENUM reduce production annotationToken -> STRING_LITERAL
-- On ENTRIES reduce production annotationToken -> STRING_LITERAL
-- On ELSE reduce production annotationToken -> STRING_LITERAL
-- On DOT reduce production annotationToken -> STRING_LITERAL
-- On DONTCARE reduce production annotationToken -> STRING_LITERAL
-- On DIV reduce production annotationToken -> STRING_LITERAL
-- On DEFAULT reduce production annotationToken -> STRING_LITERAL
-- On CONTROL reduce production annotationToken -> STRING_LITERAL
-- On CONST reduce production annotationToken -> STRING_LITERAL
-- On COMPLEMENT reduce production annotationToken -> STRING_LITERAL
-- On COMMA reduce production annotationToken -> STRING_LITERAL
-- On COLON reduce production annotationToken -> STRING_LITERAL
-- On BOOL reduce production annotationToken -> STRING_LITERAL
-- On BIT_XOR reduce production annotationToken -> STRING_LITERAL
-- On BIT_OR reduce production annotationToken -> STRING_LITERAL
-- On BIT_AND reduce production annotationToken -> STRING_LITERAL
-- On BIT reduce production annotationToken -> STRING_LITERAL
-- On AT reduce production annotationToken -> STRING_LITERAL
-- On ASSIGN reduce production annotationToken -> STRING_LITERAL
-- On APPLY reduce production annotationToken -> STRING_LITERAL
-- On AND reduce production annotationToken -> STRING_LITERAL
-- On ACTIONS reduce production annotationToken -> STRING_LITERAL
-- On ACTION reduce production annotationToken -> STRING_LITERAL
-- On ABSTRACT reduce production annotationToken -> STRING_LITERAL

State 223:
annotationToken -> STRING . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> STRING
-- On VARBIT reduce production annotationToken -> STRING
-- On VALUESET reduce production annotationToken -> STRING
-- On TYPEDEF reduce production annotationToken -> STRING
-- On TYPE reduce production annotationToken -> STRING
-- On TUPLE reduce production annotationToken -> STRING
-- On TRUE reduce production annotationToken -> STRING
-- On TRANSITION reduce production annotationToken -> STRING
-- On TABLE reduce production annotationToken -> STRING
-- On SWITCH reduce production annotationToken -> STRING
-- On STRUCT reduce production annotationToken -> STRING
-- On STRING_LITERAL reduce production annotationToken -> STRING
-- On STRING reduce production annotationToken -> STRING
-- On STATE reduce production annotationToken -> STRING
-- On SHL reduce production annotationToken -> STRING
-- On SEMICOLON reduce production annotationToken -> STRING
-- On SELECT reduce production annotationToken -> STRING
-- On R_PAREN reduce production annotationToken -> STRING
-- On R_BRACKET reduce production annotationToken -> STRING
-- On R_BRACE reduce production annotationToken -> STRING
-- On R_ANGLE reduce production annotationToken -> STRING
-- On RETURN reduce production annotationToken -> STRING
-- On RANGE reduce production annotationToken -> STRING
-- On QUESTION reduce production annotationToken -> STRING
-- On PRAGMA_END reduce production annotationToken -> STRING
-- On PRAGMA reduce production annotationToken -> STRING
-- On PLUS_SAT reduce production annotationToken -> STRING
-- On PLUSPLUS reduce production annotationToken -> STRING
-- On PLUS reduce production annotationToken -> STRING
-- On PARSER reduce production annotationToken -> STRING
-- On PACKAGE reduce production annotationToken -> STRING
-- On OUT reduce production annotationToken -> STRING
-- On OR reduce production annotationToken -> STRING
-- On NOT reduce production annotationToken -> STRING
-- On NE reduce production annotationToken -> STRING
-- On NAME reduce production annotationToken -> STRING
-- On MUL reduce production annotationToken -> STRING
-- On MOD reduce production annotationToken -> STRING
-- On MINUS_SAT reduce production annotationToken -> STRING
-- On MINUS reduce production annotationToken -> STRING
-- On MATCH_KIND reduce production annotationToken -> STRING
-- On MASK reduce production annotationToken -> STRING
-- On L_PAREN reduce production annotationToken -> STRING
-- On L_BRACKET reduce production annotationToken -> STRING
-- On L_BRACE reduce production annotationToken -> STRING
-- On L_ANGLE reduce production annotationToken -> STRING
-- On LE reduce production annotationToken -> STRING
-- On KEY reduce production annotationToken -> STRING
-- On INTEGER reduce production annotationToken -> STRING
-- On INT reduce production annotationToken -> STRING
-- On INOUT reduce production annotationToken -> STRING
-- On IN reduce production annotationToken -> STRING
-- On IF reduce production annotationToken -> STRING
-- On HEADER_UNION reduce production annotationToken -> STRING
-- On HEADER reduce production annotationToken -> STRING
-- On GE reduce production annotationToken -> STRING
-- On FALSE reduce production annotationToken -> STRING
-- On EXTERN reduce production annotationToken -> STRING
-- On EXIT reduce production annotationToken -> STRING
-- On ERROR reduce production annotationToken -> STRING
-- On EQ reduce production annotationToken -> STRING
-- On ENUM reduce production annotationToken -> STRING
-- On ENTRIES reduce production annotationToken -> STRING
-- On ELSE reduce production annotationToken -> STRING
-- On DOT reduce production annotationToken -> STRING
-- On DONTCARE reduce production annotationToken -> STRING
-- On DIV reduce production annotationToken -> STRING
-- On DEFAULT reduce production annotationToken -> STRING
-- On CONTROL reduce production annotationToken -> STRING
-- On CONST reduce production annotationToken -> STRING
-- On COMPLEMENT reduce production annotationToken -> STRING
-- On COMMA reduce production annotationToken -> STRING
-- On COLON reduce production annotationToken -> STRING
-- On BOOL reduce production annotationToken -> STRING
-- On BIT_XOR reduce production annotationToken -> STRING
-- On BIT_OR reduce production annotationToken -> STRING
-- On BIT_AND reduce production annotationToken -> STRING
-- On BIT reduce production annotationToken -> STRING
-- On AT reduce production annotationToken -> STRING
-- On ASSIGN reduce production annotationToken -> STRING
-- On APPLY reduce production annotationToken -> STRING
-- On AND reduce production annotationToken -> STRING
-- On ACTIONS reduce production annotationToken -> STRING
-- On ACTION reduce production annotationToken -> STRING
-- On ABSTRACT reduce production annotationToken -> STRING

State 224:
annotationToken -> STATE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> STATE
-- On VARBIT reduce production annotationToken -> STATE
-- On VALUESET reduce production annotationToken -> STATE
-- On TYPEDEF reduce production annotationToken -> STATE
-- On TYPE reduce production annotationToken -> STATE
-- On TUPLE reduce production annotationToken -> STATE
-- On TRUE reduce production annotationToken -> STATE
-- On TRANSITION reduce production annotationToken -> STATE
-- On TABLE reduce production annotationToken -> STATE
-- On SWITCH reduce production annotationToken -> STATE
-- On STRUCT reduce production annotationToken -> STATE
-- On STRING_LITERAL reduce production annotationToken -> STATE
-- On STRING reduce production annotationToken -> STATE
-- On STATE reduce production annotationToken -> STATE
-- On SHL reduce production annotationToken -> STATE
-- On SEMICOLON reduce production annotationToken -> STATE
-- On SELECT reduce production annotationToken -> STATE
-- On R_PAREN reduce production annotationToken -> STATE
-- On R_BRACKET reduce production annotationToken -> STATE
-- On R_BRACE reduce production annotationToken -> STATE
-- On R_ANGLE reduce production annotationToken -> STATE
-- On RETURN reduce production annotationToken -> STATE
-- On RANGE reduce production annotationToken -> STATE
-- On QUESTION reduce production annotationToken -> STATE
-- On PRAGMA_END reduce production annotationToken -> STATE
-- On PRAGMA reduce production annotationToken -> STATE
-- On PLUS_SAT reduce production annotationToken -> STATE
-- On PLUSPLUS reduce production annotationToken -> STATE
-- On PLUS reduce production annotationToken -> STATE
-- On PARSER reduce production annotationToken -> STATE
-- On PACKAGE reduce production annotationToken -> STATE
-- On OUT reduce production annotationToken -> STATE
-- On OR reduce production annotationToken -> STATE
-- On NOT reduce production annotationToken -> STATE
-- On NE reduce production annotationToken -> STATE
-- On NAME reduce production annotationToken -> STATE
-- On MUL reduce production annotationToken -> STATE
-- On MOD reduce production annotationToken -> STATE
-- On MINUS_SAT reduce production annotationToken -> STATE
-- On MINUS reduce production annotationToken -> STATE
-- On MATCH_KIND reduce production annotationToken -> STATE
-- On MASK reduce production annotationToken -> STATE
-- On L_PAREN reduce production annotationToken -> STATE
-- On L_BRACKET reduce production annotationToken -> STATE
-- On L_BRACE reduce production annotationToken -> STATE
-- On L_ANGLE reduce production annotationToken -> STATE
-- On LE reduce production annotationToken -> STATE
-- On KEY reduce production annotationToken -> STATE
-- On INTEGER reduce production annotationToken -> STATE
-- On INT reduce production annotationToken -> STATE
-- On INOUT reduce production annotationToken -> STATE
-- On IN reduce production annotationToken -> STATE
-- On IF reduce production annotationToken -> STATE
-- On HEADER_UNION reduce production annotationToken -> STATE
-- On HEADER reduce production annotationToken -> STATE
-- On GE reduce production annotationToken -> STATE
-- On FALSE reduce production annotationToken -> STATE
-- On EXTERN reduce production annotationToken -> STATE
-- On EXIT reduce production annotationToken -> STATE
-- On ERROR reduce production annotationToken -> STATE
-- On EQ reduce production annotationToken -> STATE
-- On ENUM reduce production annotationToken -> STATE
-- On ENTRIES reduce production annotationToken -> STATE
-- On ELSE reduce production annotationToken -> STATE
-- On DOT reduce production annotationToken -> STATE
-- On DONTCARE reduce production annotationToken -> STATE
-- On DIV reduce production annotationToken -> STATE
-- On DEFAULT reduce production annotationToken -> STATE
-- On CONTROL reduce production annotationToken -> STATE
-- On CONST reduce production annotationToken -> STATE
-- On COMPLEMENT reduce production annotationToken -> STATE
-- On COMMA reduce production annotationToken -> STATE
-- On COLON reduce production annotationToken -> STATE
-- On BOOL reduce production annotationToken -> STATE
-- On BIT_XOR reduce production annotationToken -> STATE
-- On BIT_OR reduce production annotationToken -> STATE
-- On BIT_AND reduce production annotationToken -> STATE
-- On BIT reduce production annotationToken -> STATE
-- On AT reduce production annotationToken -> STATE
-- On ASSIGN reduce production annotationToken -> STATE
-- On APPLY reduce production annotationToken -> STATE
-- On AND reduce production annotationToken -> STATE
-- On ACTIONS reduce production annotationToken -> STATE
-- On ACTION reduce production annotationToken -> STATE
-- On ABSTRACT reduce production annotationToken -> STATE

State 225:
annotationToken -> SHL . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> SHL
-- On VARBIT reduce production annotationToken -> SHL
-- On VALUESET reduce production annotationToken -> SHL
-- On TYPEDEF reduce production annotationToken -> SHL
-- On TYPE reduce production annotationToken -> SHL
-- On TUPLE reduce production annotationToken -> SHL
-- On TRUE reduce production annotationToken -> SHL
-- On TRANSITION reduce production annotationToken -> SHL
-- On TABLE reduce production annotationToken -> SHL
-- On SWITCH reduce production annotationToken -> SHL
-- On STRUCT reduce production annotationToken -> SHL
-- On STRING_LITERAL reduce production annotationToken -> SHL
-- On STRING reduce production annotationToken -> SHL
-- On STATE reduce production annotationToken -> SHL
-- On SHL reduce production annotationToken -> SHL
-- On SEMICOLON reduce production annotationToken -> SHL
-- On SELECT reduce production annotationToken -> SHL
-- On R_PAREN reduce production annotationToken -> SHL
-- On R_BRACKET reduce production annotationToken -> SHL
-- On R_BRACE reduce production annotationToken -> SHL
-- On R_ANGLE reduce production annotationToken -> SHL
-- On RETURN reduce production annotationToken -> SHL
-- On RANGE reduce production annotationToken -> SHL
-- On QUESTION reduce production annotationToken -> SHL
-- On PRAGMA_END reduce production annotationToken -> SHL
-- On PRAGMA reduce production annotationToken -> SHL
-- On PLUS_SAT reduce production annotationToken -> SHL
-- On PLUSPLUS reduce production annotationToken -> SHL
-- On PLUS reduce production annotationToken -> SHL
-- On PARSER reduce production annotationToken -> SHL
-- On PACKAGE reduce production annotationToken -> SHL
-- On OUT reduce production annotationToken -> SHL
-- On OR reduce production annotationToken -> SHL
-- On NOT reduce production annotationToken -> SHL
-- On NE reduce production annotationToken -> SHL
-- On NAME reduce production annotationToken -> SHL
-- On MUL reduce production annotationToken -> SHL
-- On MOD reduce production annotationToken -> SHL
-- On MINUS_SAT reduce production annotationToken -> SHL
-- On MINUS reduce production annotationToken -> SHL
-- On MATCH_KIND reduce production annotationToken -> SHL
-- On MASK reduce production annotationToken -> SHL
-- On L_PAREN reduce production annotationToken -> SHL
-- On L_BRACKET reduce production annotationToken -> SHL
-- On L_BRACE reduce production annotationToken -> SHL
-- On L_ANGLE reduce production annotationToken -> SHL
-- On LE reduce production annotationToken -> SHL
-- On KEY reduce production annotationToken -> SHL
-- On INTEGER reduce production annotationToken -> SHL
-- On INT reduce production annotationToken -> SHL
-- On INOUT reduce production annotationToken -> SHL
-- On IN reduce production annotationToken -> SHL
-- On IF reduce production annotationToken -> SHL
-- On HEADER_UNION reduce production annotationToken -> SHL
-- On HEADER reduce production annotationToken -> SHL
-- On GE reduce production annotationToken -> SHL
-- On FALSE reduce production annotationToken -> SHL
-- On EXTERN reduce production annotationToken -> SHL
-- On EXIT reduce production annotationToken -> SHL
-- On ERROR reduce production annotationToken -> SHL
-- On EQ reduce production annotationToken -> SHL
-- On ENUM reduce production annotationToken -> SHL
-- On ENTRIES reduce production annotationToken -> SHL
-- On ELSE reduce production annotationToken -> SHL
-- On DOT reduce production annotationToken -> SHL
-- On DONTCARE reduce production annotationToken -> SHL
-- On DIV reduce production annotationToken -> SHL
-- On DEFAULT reduce production annotationToken -> SHL
-- On CONTROL reduce production annotationToken -> SHL
-- On CONST reduce production annotationToken -> SHL
-- On COMPLEMENT reduce production annotationToken -> SHL
-- On COMMA reduce production annotationToken -> SHL
-- On COLON reduce production annotationToken -> SHL
-- On BOOL reduce production annotationToken -> SHL
-- On BIT_XOR reduce production annotationToken -> SHL
-- On BIT_OR reduce production annotationToken -> SHL
-- On BIT_AND reduce production annotationToken -> SHL
-- On BIT reduce production annotationToken -> SHL
-- On AT reduce production annotationToken -> SHL
-- On ASSIGN reduce production annotationToken -> SHL
-- On APPLY reduce production annotationToken -> SHL
-- On AND reduce production annotationToken -> SHL
-- On ACTIONS reduce production annotationToken -> SHL
-- On ACTION reduce production annotationToken -> SHL
-- On ABSTRACT reduce production annotationToken -> SHL

State 226:
annotationToken -> SEMICOLON . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> SEMICOLON
-- On VARBIT reduce production annotationToken -> SEMICOLON
-- On VALUESET reduce production annotationToken -> SEMICOLON
-- On TYPEDEF reduce production annotationToken -> SEMICOLON
-- On TYPE reduce production annotationToken -> SEMICOLON
-- On TUPLE reduce production annotationToken -> SEMICOLON
-- On TRUE reduce production annotationToken -> SEMICOLON
-- On TRANSITION reduce production annotationToken -> SEMICOLON
-- On TABLE reduce production annotationToken -> SEMICOLON
-- On SWITCH reduce production annotationToken -> SEMICOLON
-- On STRUCT reduce production annotationToken -> SEMICOLON
-- On STRING_LITERAL reduce production annotationToken -> SEMICOLON
-- On STRING reduce production annotationToken -> SEMICOLON
-- On STATE reduce production annotationToken -> SEMICOLON
-- On SHL reduce production annotationToken -> SEMICOLON
-- On SEMICOLON reduce production annotationToken -> SEMICOLON
-- On SELECT reduce production annotationToken -> SEMICOLON
-- On R_PAREN reduce production annotationToken -> SEMICOLON
-- On R_BRACKET reduce production annotationToken -> SEMICOLON
-- On R_BRACE reduce production annotationToken -> SEMICOLON
-- On R_ANGLE reduce production annotationToken -> SEMICOLON
-- On RETURN reduce production annotationToken -> SEMICOLON
-- On RANGE reduce production annotationToken -> SEMICOLON
-- On QUESTION reduce production annotationToken -> SEMICOLON
-- On PRAGMA_END reduce production annotationToken -> SEMICOLON
-- On PRAGMA reduce production annotationToken -> SEMICOLON
-- On PLUS_SAT reduce production annotationToken -> SEMICOLON
-- On PLUSPLUS reduce production annotationToken -> SEMICOLON
-- On PLUS reduce production annotationToken -> SEMICOLON
-- On PARSER reduce production annotationToken -> SEMICOLON
-- On PACKAGE reduce production annotationToken -> SEMICOLON
-- On OUT reduce production annotationToken -> SEMICOLON
-- On OR reduce production annotationToken -> SEMICOLON
-- On NOT reduce production annotationToken -> SEMICOLON
-- On NE reduce production annotationToken -> SEMICOLON
-- On NAME reduce production annotationToken -> SEMICOLON
-- On MUL reduce production annotationToken -> SEMICOLON
-- On MOD reduce production annotationToken -> SEMICOLON
-- On MINUS_SAT reduce production annotationToken -> SEMICOLON
-- On MINUS reduce production annotationToken -> SEMICOLON
-- On MATCH_KIND reduce production annotationToken -> SEMICOLON
-- On MASK reduce production annotationToken -> SEMICOLON
-- On L_PAREN reduce production annotationToken -> SEMICOLON
-- On L_BRACKET reduce production annotationToken -> SEMICOLON
-- On L_BRACE reduce production annotationToken -> SEMICOLON
-- On L_ANGLE reduce production annotationToken -> SEMICOLON
-- On LE reduce production annotationToken -> SEMICOLON
-- On KEY reduce production annotationToken -> SEMICOLON
-- On INTEGER reduce production annotationToken -> SEMICOLON
-- On INT reduce production annotationToken -> SEMICOLON
-- On INOUT reduce production annotationToken -> SEMICOLON
-- On IN reduce production annotationToken -> SEMICOLON
-- On IF reduce production annotationToken -> SEMICOLON
-- On HEADER_UNION reduce production annotationToken -> SEMICOLON
-- On HEADER reduce production annotationToken -> SEMICOLON
-- On GE reduce production annotationToken -> SEMICOLON
-- On FALSE reduce production annotationToken -> SEMICOLON
-- On EXTERN reduce production annotationToken -> SEMICOLON
-- On EXIT reduce production annotationToken -> SEMICOLON
-- On ERROR reduce production annotationToken -> SEMICOLON
-- On EQ reduce production annotationToken -> SEMICOLON
-- On ENUM reduce production annotationToken -> SEMICOLON
-- On ENTRIES reduce production annotationToken -> SEMICOLON
-- On ELSE reduce production annotationToken -> SEMICOLON
-- On DOT reduce production annotationToken -> SEMICOLON
-- On DONTCARE reduce production annotationToken -> SEMICOLON
-- On DIV reduce production annotationToken -> SEMICOLON
-- On DEFAULT reduce production annotationToken -> SEMICOLON
-- On CONTROL reduce production annotationToken -> SEMICOLON
-- On CONST reduce production annotationToken -> SEMICOLON
-- On COMPLEMENT reduce production annotationToken -> SEMICOLON
-- On COMMA reduce production annotationToken -> SEMICOLON
-- On COLON reduce production annotationToken -> SEMICOLON
-- On BOOL reduce production annotationToken -> SEMICOLON
-- On BIT_XOR reduce production annotationToken -> SEMICOLON
-- On BIT_OR reduce production annotationToken -> SEMICOLON
-- On BIT_AND reduce production annotationToken -> SEMICOLON
-- On BIT reduce production annotationToken -> SEMICOLON
-- On AT reduce production annotationToken -> SEMICOLON
-- On ASSIGN reduce production annotationToken -> SEMICOLON
-- On APPLY reduce production annotationToken -> SEMICOLON
-- On AND reduce production annotationToken -> SEMICOLON
-- On ACTIONS reduce production annotationToken -> SEMICOLON
-- On ACTION reduce production annotationToken -> SEMICOLON
-- On ABSTRACT reduce production annotationToken -> SEMICOLON

State 227:
annotationToken -> SELECT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> SELECT
-- On VARBIT reduce production annotationToken -> SELECT
-- On VALUESET reduce production annotationToken -> SELECT
-- On TYPEDEF reduce production annotationToken -> SELECT
-- On TYPE reduce production annotationToken -> SELECT
-- On TUPLE reduce production annotationToken -> SELECT
-- On TRUE reduce production annotationToken -> SELECT
-- On TRANSITION reduce production annotationToken -> SELECT
-- On TABLE reduce production annotationToken -> SELECT
-- On SWITCH reduce production annotationToken -> SELECT
-- On STRUCT reduce production annotationToken -> SELECT
-- On STRING_LITERAL reduce production annotationToken -> SELECT
-- On STRING reduce production annotationToken -> SELECT
-- On STATE reduce production annotationToken -> SELECT
-- On SHL reduce production annotationToken -> SELECT
-- On SEMICOLON reduce production annotationToken -> SELECT
-- On SELECT reduce production annotationToken -> SELECT
-- On R_PAREN reduce production annotationToken -> SELECT
-- On R_BRACKET reduce production annotationToken -> SELECT
-- On R_BRACE reduce production annotationToken -> SELECT
-- On R_ANGLE reduce production annotationToken -> SELECT
-- On RETURN reduce production annotationToken -> SELECT
-- On RANGE reduce production annotationToken -> SELECT
-- On QUESTION reduce production annotationToken -> SELECT
-- On PRAGMA_END reduce production annotationToken -> SELECT
-- On PRAGMA reduce production annotationToken -> SELECT
-- On PLUS_SAT reduce production annotationToken -> SELECT
-- On PLUSPLUS reduce production annotationToken -> SELECT
-- On PLUS reduce production annotationToken -> SELECT
-- On PARSER reduce production annotationToken -> SELECT
-- On PACKAGE reduce production annotationToken -> SELECT
-- On OUT reduce production annotationToken -> SELECT
-- On OR reduce production annotationToken -> SELECT
-- On NOT reduce production annotationToken -> SELECT
-- On NE reduce production annotationToken -> SELECT
-- On NAME reduce production annotationToken -> SELECT
-- On MUL reduce production annotationToken -> SELECT
-- On MOD reduce production annotationToken -> SELECT
-- On MINUS_SAT reduce production annotationToken -> SELECT
-- On MINUS reduce production annotationToken -> SELECT
-- On MATCH_KIND reduce production annotationToken -> SELECT
-- On MASK reduce production annotationToken -> SELECT
-- On L_PAREN reduce production annotationToken -> SELECT
-- On L_BRACKET reduce production annotationToken -> SELECT
-- On L_BRACE reduce production annotationToken -> SELECT
-- On L_ANGLE reduce production annotationToken -> SELECT
-- On LE reduce production annotationToken -> SELECT
-- On KEY reduce production annotationToken -> SELECT
-- On INTEGER reduce production annotationToken -> SELECT
-- On INT reduce production annotationToken -> SELECT
-- On INOUT reduce production annotationToken -> SELECT
-- On IN reduce production annotationToken -> SELECT
-- On IF reduce production annotationToken -> SELECT
-- On HEADER_UNION reduce production annotationToken -> SELECT
-- On HEADER reduce production annotationToken -> SELECT
-- On GE reduce production annotationToken -> SELECT
-- On FALSE reduce production annotationToken -> SELECT
-- On EXTERN reduce production annotationToken -> SELECT
-- On EXIT reduce production annotationToken -> SELECT
-- On ERROR reduce production annotationToken -> SELECT
-- On EQ reduce production annotationToken -> SELECT
-- On ENUM reduce production annotationToken -> SELECT
-- On ENTRIES reduce production annotationToken -> SELECT
-- On ELSE reduce production annotationToken -> SELECT
-- On DOT reduce production annotationToken -> SELECT
-- On DONTCARE reduce production annotationToken -> SELECT
-- On DIV reduce production annotationToken -> SELECT
-- On DEFAULT reduce production annotationToken -> SELECT
-- On CONTROL reduce production annotationToken -> SELECT
-- On CONST reduce production annotationToken -> SELECT
-- On COMPLEMENT reduce production annotationToken -> SELECT
-- On COMMA reduce production annotationToken -> SELECT
-- On COLON reduce production annotationToken -> SELECT
-- On BOOL reduce production annotationToken -> SELECT
-- On BIT_XOR reduce production annotationToken -> SELECT
-- On BIT_OR reduce production annotationToken -> SELECT
-- On BIT_AND reduce production annotationToken -> SELECT
-- On BIT reduce production annotationToken -> SELECT
-- On AT reduce production annotationToken -> SELECT
-- On ASSIGN reduce production annotationToken -> SELECT
-- On APPLY reduce production annotationToken -> SELECT
-- On AND reduce production annotationToken -> SELECT
-- On ACTIONS reduce production annotationToken -> SELECT
-- On ACTION reduce production annotationToken -> SELECT
-- On ABSTRACT reduce production annotationToken -> SELECT

State 228:
annotationToken -> R_BRACKET . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> R_BRACKET
-- On VARBIT reduce production annotationToken -> R_BRACKET
-- On VALUESET reduce production annotationToken -> R_BRACKET
-- On TYPEDEF reduce production annotationToken -> R_BRACKET
-- On TYPE reduce production annotationToken -> R_BRACKET
-- On TUPLE reduce production annotationToken -> R_BRACKET
-- On TRUE reduce production annotationToken -> R_BRACKET
-- On TRANSITION reduce production annotationToken -> R_BRACKET
-- On TABLE reduce production annotationToken -> R_BRACKET
-- On SWITCH reduce production annotationToken -> R_BRACKET
-- On STRUCT reduce production annotationToken -> R_BRACKET
-- On STRING_LITERAL reduce production annotationToken -> R_BRACKET
-- On STRING reduce production annotationToken -> R_BRACKET
-- On STATE reduce production annotationToken -> R_BRACKET
-- On SHL reduce production annotationToken -> R_BRACKET
-- On SEMICOLON reduce production annotationToken -> R_BRACKET
-- On SELECT reduce production annotationToken -> R_BRACKET
-- On R_PAREN reduce production annotationToken -> R_BRACKET
-- On R_BRACKET reduce production annotationToken -> R_BRACKET
-- On R_BRACE reduce production annotationToken -> R_BRACKET
-- On R_ANGLE reduce production annotationToken -> R_BRACKET
-- On RETURN reduce production annotationToken -> R_BRACKET
-- On RANGE reduce production annotationToken -> R_BRACKET
-- On QUESTION reduce production annotationToken -> R_BRACKET
-- On PRAGMA_END reduce production annotationToken -> R_BRACKET
-- On PRAGMA reduce production annotationToken -> R_BRACKET
-- On PLUS_SAT reduce production annotationToken -> R_BRACKET
-- On PLUSPLUS reduce production annotationToken -> R_BRACKET
-- On PLUS reduce production annotationToken -> R_BRACKET
-- On PARSER reduce production annotationToken -> R_BRACKET
-- On PACKAGE reduce production annotationToken -> R_BRACKET
-- On OUT reduce production annotationToken -> R_BRACKET
-- On OR reduce production annotationToken -> R_BRACKET
-- On NOT reduce production annotationToken -> R_BRACKET
-- On NE reduce production annotationToken -> R_BRACKET
-- On NAME reduce production annotationToken -> R_BRACKET
-- On MUL reduce production annotationToken -> R_BRACKET
-- On MOD reduce production annotationToken -> R_BRACKET
-- On MINUS_SAT reduce production annotationToken -> R_BRACKET
-- On MINUS reduce production annotationToken -> R_BRACKET
-- On MATCH_KIND reduce production annotationToken -> R_BRACKET
-- On MASK reduce production annotationToken -> R_BRACKET
-- On L_PAREN reduce production annotationToken -> R_BRACKET
-- On L_BRACKET reduce production annotationToken -> R_BRACKET
-- On L_BRACE reduce production annotationToken -> R_BRACKET
-- On L_ANGLE reduce production annotationToken -> R_BRACKET
-- On LE reduce production annotationToken -> R_BRACKET
-- On KEY reduce production annotationToken -> R_BRACKET
-- On INTEGER reduce production annotationToken -> R_BRACKET
-- On INT reduce production annotationToken -> R_BRACKET
-- On INOUT reduce production annotationToken -> R_BRACKET
-- On IN reduce production annotationToken -> R_BRACKET
-- On IF reduce production annotationToken -> R_BRACKET
-- On HEADER_UNION reduce production annotationToken -> R_BRACKET
-- On HEADER reduce production annotationToken -> R_BRACKET
-- On GE reduce production annotationToken -> R_BRACKET
-- On FALSE reduce production annotationToken -> R_BRACKET
-- On EXTERN reduce production annotationToken -> R_BRACKET
-- On EXIT reduce production annotationToken -> R_BRACKET
-- On ERROR reduce production annotationToken -> R_BRACKET
-- On EQ reduce production annotationToken -> R_BRACKET
-- On ENUM reduce production annotationToken -> R_BRACKET
-- On ENTRIES reduce production annotationToken -> R_BRACKET
-- On ELSE reduce production annotationToken -> R_BRACKET
-- On DOT reduce production annotationToken -> R_BRACKET
-- On DONTCARE reduce production annotationToken -> R_BRACKET
-- On DIV reduce production annotationToken -> R_BRACKET
-- On DEFAULT reduce production annotationToken -> R_BRACKET
-- On CONTROL reduce production annotationToken -> R_BRACKET
-- On CONST reduce production annotationToken -> R_BRACKET
-- On COMPLEMENT reduce production annotationToken -> R_BRACKET
-- On COMMA reduce production annotationToken -> R_BRACKET
-- On COLON reduce production annotationToken -> R_BRACKET
-- On BOOL reduce production annotationToken -> R_BRACKET
-- On BIT_XOR reduce production annotationToken -> R_BRACKET
-- On BIT_OR reduce production annotationToken -> R_BRACKET
-- On BIT_AND reduce production annotationToken -> R_BRACKET
-- On BIT reduce production annotationToken -> R_BRACKET
-- On AT reduce production annotationToken -> R_BRACKET
-- On ASSIGN reduce production annotationToken -> R_BRACKET
-- On APPLY reduce production annotationToken -> R_BRACKET
-- On AND reduce production annotationToken -> R_BRACKET
-- On ACTIONS reduce production annotationToken -> R_BRACKET
-- On ACTION reduce production annotationToken -> R_BRACKET
-- On ABSTRACT reduce production annotationToken -> R_BRACKET

State 229:
annotationToken -> R_BRACE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> R_BRACE
-- On VARBIT reduce production annotationToken -> R_BRACE
-- On VALUESET reduce production annotationToken -> R_BRACE
-- On TYPEDEF reduce production annotationToken -> R_BRACE
-- On TYPE reduce production annotationToken -> R_BRACE
-- On TUPLE reduce production annotationToken -> R_BRACE
-- On TRUE reduce production annotationToken -> R_BRACE
-- On TRANSITION reduce production annotationToken -> R_BRACE
-- On TABLE reduce production annotationToken -> R_BRACE
-- On SWITCH reduce production annotationToken -> R_BRACE
-- On STRUCT reduce production annotationToken -> R_BRACE
-- On STRING_LITERAL reduce production annotationToken -> R_BRACE
-- On STRING reduce production annotationToken -> R_BRACE
-- On STATE reduce production annotationToken -> R_BRACE
-- On SHL reduce production annotationToken -> R_BRACE
-- On SEMICOLON reduce production annotationToken -> R_BRACE
-- On SELECT reduce production annotationToken -> R_BRACE
-- On R_PAREN reduce production annotationToken -> R_BRACE
-- On R_BRACKET reduce production annotationToken -> R_BRACE
-- On R_BRACE reduce production annotationToken -> R_BRACE
-- On R_ANGLE reduce production annotationToken -> R_BRACE
-- On RETURN reduce production annotationToken -> R_BRACE
-- On RANGE reduce production annotationToken -> R_BRACE
-- On QUESTION reduce production annotationToken -> R_BRACE
-- On PRAGMA_END reduce production annotationToken -> R_BRACE
-- On PRAGMA reduce production annotationToken -> R_BRACE
-- On PLUS_SAT reduce production annotationToken -> R_BRACE
-- On PLUSPLUS reduce production annotationToken -> R_BRACE
-- On PLUS reduce production annotationToken -> R_BRACE
-- On PARSER reduce production annotationToken -> R_BRACE
-- On PACKAGE reduce production annotationToken -> R_BRACE
-- On OUT reduce production annotationToken -> R_BRACE
-- On OR reduce production annotationToken -> R_BRACE
-- On NOT reduce production annotationToken -> R_BRACE
-- On NE reduce production annotationToken -> R_BRACE
-- On NAME reduce production annotationToken -> R_BRACE
-- On MUL reduce production annotationToken -> R_BRACE
-- On MOD reduce production annotationToken -> R_BRACE
-- On MINUS_SAT reduce production annotationToken -> R_BRACE
-- On MINUS reduce production annotationToken -> R_BRACE
-- On MATCH_KIND reduce production annotationToken -> R_BRACE
-- On MASK reduce production annotationToken -> R_BRACE
-- On L_PAREN reduce production annotationToken -> R_BRACE
-- On L_BRACKET reduce production annotationToken -> R_BRACE
-- On L_BRACE reduce production annotationToken -> R_BRACE
-- On L_ANGLE reduce production annotationToken -> R_BRACE
-- On LE reduce production annotationToken -> R_BRACE
-- On KEY reduce production annotationToken -> R_BRACE
-- On INTEGER reduce production annotationToken -> R_BRACE
-- On INT reduce production annotationToken -> R_BRACE
-- On INOUT reduce production annotationToken -> R_BRACE
-- On IN reduce production annotationToken -> R_BRACE
-- On IF reduce production annotationToken -> R_BRACE
-- On HEADER_UNION reduce production annotationToken -> R_BRACE
-- On HEADER reduce production annotationToken -> R_BRACE
-- On GE reduce production annotationToken -> R_BRACE
-- On FALSE reduce production annotationToken -> R_BRACE
-- On EXTERN reduce production annotationToken -> R_BRACE
-- On EXIT reduce production annotationToken -> R_BRACE
-- On ERROR reduce production annotationToken -> R_BRACE
-- On EQ reduce production annotationToken -> R_BRACE
-- On ENUM reduce production annotationToken -> R_BRACE
-- On ENTRIES reduce production annotationToken -> R_BRACE
-- On ELSE reduce production annotationToken -> R_BRACE
-- On DOT reduce production annotationToken -> R_BRACE
-- On DONTCARE reduce production annotationToken -> R_BRACE
-- On DIV reduce production annotationToken -> R_BRACE
-- On DEFAULT reduce production annotationToken -> R_BRACE
-- On CONTROL reduce production annotationToken -> R_BRACE
-- On CONST reduce production annotationToken -> R_BRACE
-- On COMPLEMENT reduce production annotationToken -> R_BRACE
-- On COMMA reduce production annotationToken -> R_BRACE
-- On COLON reduce production annotationToken -> R_BRACE
-- On BOOL reduce production annotationToken -> R_BRACE
-- On BIT_XOR reduce production annotationToken -> R_BRACE
-- On BIT_OR reduce production annotationToken -> R_BRACE
-- On BIT_AND reduce production annotationToken -> R_BRACE
-- On BIT reduce production annotationToken -> R_BRACE
-- On AT reduce production annotationToken -> R_BRACE
-- On ASSIGN reduce production annotationToken -> R_BRACE
-- On APPLY reduce production annotationToken -> R_BRACE
-- On AND reduce production annotationToken -> R_BRACE
-- On ACTIONS reduce production annotationToken -> R_BRACE
-- On ACTION reduce production annotationToken -> R_BRACE
-- On ABSTRACT reduce production annotationToken -> R_BRACE

State 230:
annotationToken -> R_ANGLE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> R_ANGLE
-- On VARBIT reduce production annotationToken -> R_ANGLE
-- On VALUESET reduce production annotationToken -> R_ANGLE
-- On TYPEDEF reduce production annotationToken -> R_ANGLE
-- On TYPE reduce production annotationToken -> R_ANGLE
-- On TUPLE reduce production annotationToken -> R_ANGLE
-- On TRUE reduce production annotationToken -> R_ANGLE
-- On TRANSITION reduce production annotationToken -> R_ANGLE
-- On TABLE reduce production annotationToken -> R_ANGLE
-- On SWITCH reduce production annotationToken -> R_ANGLE
-- On STRUCT reduce production annotationToken -> R_ANGLE
-- On STRING_LITERAL reduce production annotationToken -> R_ANGLE
-- On STRING reduce production annotationToken -> R_ANGLE
-- On STATE reduce production annotationToken -> R_ANGLE
-- On SHL reduce production annotationToken -> R_ANGLE
-- On SEMICOLON reduce production annotationToken -> R_ANGLE
-- On SELECT reduce production annotationToken -> R_ANGLE
-- On R_PAREN reduce production annotationToken -> R_ANGLE
-- On R_BRACKET reduce production annotationToken -> R_ANGLE
-- On R_BRACE reduce production annotationToken -> R_ANGLE
-- On R_ANGLE reduce production annotationToken -> R_ANGLE
-- On RETURN reduce production annotationToken -> R_ANGLE
-- On RANGE reduce production annotationToken -> R_ANGLE
-- On QUESTION reduce production annotationToken -> R_ANGLE
-- On PRAGMA_END reduce production annotationToken -> R_ANGLE
-- On PRAGMA reduce production annotationToken -> R_ANGLE
-- On PLUS_SAT reduce production annotationToken -> R_ANGLE
-- On PLUSPLUS reduce production annotationToken -> R_ANGLE
-- On PLUS reduce production annotationToken -> R_ANGLE
-- On PARSER reduce production annotationToken -> R_ANGLE
-- On PACKAGE reduce production annotationToken -> R_ANGLE
-- On OUT reduce production annotationToken -> R_ANGLE
-- On OR reduce production annotationToken -> R_ANGLE
-- On NOT reduce production annotationToken -> R_ANGLE
-- On NE reduce production annotationToken -> R_ANGLE
-- On NAME reduce production annotationToken -> R_ANGLE
-- On MUL reduce production annotationToken -> R_ANGLE
-- On MOD reduce production annotationToken -> R_ANGLE
-- On MINUS_SAT reduce production annotationToken -> R_ANGLE
-- On MINUS reduce production annotationToken -> R_ANGLE
-- On MATCH_KIND reduce production annotationToken -> R_ANGLE
-- On MASK reduce production annotationToken -> R_ANGLE
-- On L_PAREN reduce production annotationToken -> R_ANGLE
-- On L_BRACKET reduce production annotationToken -> R_ANGLE
-- On L_BRACE reduce production annotationToken -> R_ANGLE
-- On L_ANGLE reduce production annotationToken -> R_ANGLE
-- On LE reduce production annotationToken -> R_ANGLE
-- On KEY reduce production annotationToken -> R_ANGLE
-- On INTEGER reduce production annotationToken -> R_ANGLE
-- On INT reduce production annotationToken -> R_ANGLE
-- On INOUT reduce production annotationToken -> R_ANGLE
-- On IN reduce production annotationToken -> R_ANGLE
-- On IF reduce production annotationToken -> R_ANGLE
-- On HEADER_UNION reduce production annotationToken -> R_ANGLE
-- On HEADER reduce production annotationToken -> R_ANGLE
-- On GE reduce production annotationToken -> R_ANGLE
-- On FALSE reduce production annotationToken -> R_ANGLE
-- On EXTERN reduce production annotationToken -> R_ANGLE
-- On EXIT reduce production annotationToken -> R_ANGLE
-- On ERROR reduce production annotationToken -> R_ANGLE
-- On EQ reduce production annotationToken -> R_ANGLE
-- On ENUM reduce production annotationToken -> R_ANGLE
-- On ENTRIES reduce production annotationToken -> R_ANGLE
-- On ELSE reduce production annotationToken -> R_ANGLE
-- On DOT reduce production annotationToken -> R_ANGLE
-- On DONTCARE reduce production annotationToken -> R_ANGLE
-- On DIV reduce production annotationToken -> R_ANGLE
-- On DEFAULT reduce production annotationToken -> R_ANGLE
-- On CONTROL reduce production annotationToken -> R_ANGLE
-- On CONST reduce production annotationToken -> R_ANGLE
-- On COMPLEMENT reduce production annotationToken -> R_ANGLE
-- On COMMA reduce production annotationToken -> R_ANGLE
-- On COLON reduce production annotationToken -> R_ANGLE
-- On BOOL reduce production annotationToken -> R_ANGLE
-- On BIT_XOR reduce production annotationToken -> R_ANGLE
-- On BIT_OR reduce production annotationToken -> R_ANGLE
-- On BIT_AND reduce production annotationToken -> R_ANGLE
-- On BIT reduce production annotationToken -> R_ANGLE
-- On AT reduce production annotationToken -> R_ANGLE
-- On ASSIGN reduce production annotationToken -> R_ANGLE
-- On APPLY reduce production annotationToken -> R_ANGLE
-- On AND reduce production annotationToken -> R_ANGLE
-- On ACTIONS reduce production annotationToken -> R_ANGLE
-- On ACTION reduce production annotationToken -> R_ANGLE
-- On ABSTRACT reduce production annotationToken -> R_ANGLE

State 231:
annotationToken -> RETURN . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> RETURN
-- On VARBIT reduce production annotationToken -> RETURN
-- On VALUESET reduce production annotationToken -> RETURN
-- On TYPEDEF reduce production annotationToken -> RETURN
-- On TYPE reduce production annotationToken -> RETURN
-- On TUPLE reduce production annotationToken -> RETURN
-- On TRUE reduce production annotationToken -> RETURN
-- On TRANSITION reduce production annotationToken -> RETURN
-- On TABLE reduce production annotationToken -> RETURN
-- On SWITCH reduce production annotationToken -> RETURN
-- On STRUCT reduce production annotationToken -> RETURN
-- On STRING_LITERAL reduce production annotationToken -> RETURN
-- On STRING reduce production annotationToken -> RETURN
-- On STATE reduce production annotationToken -> RETURN
-- On SHL reduce production annotationToken -> RETURN
-- On SEMICOLON reduce production annotationToken -> RETURN
-- On SELECT reduce production annotationToken -> RETURN
-- On R_PAREN reduce production annotationToken -> RETURN
-- On R_BRACKET reduce production annotationToken -> RETURN
-- On R_BRACE reduce production annotationToken -> RETURN
-- On R_ANGLE reduce production annotationToken -> RETURN
-- On RETURN reduce production annotationToken -> RETURN
-- On RANGE reduce production annotationToken -> RETURN
-- On QUESTION reduce production annotationToken -> RETURN
-- On PRAGMA_END reduce production annotationToken -> RETURN
-- On PRAGMA reduce production annotationToken -> RETURN
-- On PLUS_SAT reduce production annotationToken -> RETURN
-- On PLUSPLUS reduce production annotationToken -> RETURN
-- On PLUS reduce production annotationToken -> RETURN
-- On PARSER reduce production annotationToken -> RETURN
-- On PACKAGE reduce production annotationToken -> RETURN
-- On OUT reduce production annotationToken -> RETURN
-- On OR reduce production annotationToken -> RETURN
-- On NOT reduce production annotationToken -> RETURN
-- On NE reduce production annotationToken -> RETURN
-- On NAME reduce production annotationToken -> RETURN
-- On MUL reduce production annotationToken -> RETURN
-- On MOD reduce production annotationToken -> RETURN
-- On MINUS_SAT reduce production annotationToken -> RETURN
-- On MINUS reduce production annotationToken -> RETURN
-- On MATCH_KIND reduce production annotationToken -> RETURN
-- On MASK reduce production annotationToken -> RETURN
-- On L_PAREN reduce production annotationToken -> RETURN
-- On L_BRACKET reduce production annotationToken -> RETURN
-- On L_BRACE reduce production annotationToken -> RETURN
-- On L_ANGLE reduce production annotationToken -> RETURN
-- On LE reduce production annotationToken -> RETURN
-- On KEY reduce production annotationToken -> RETURN
-- On INTEGER reduce production annotationToken -> RETURN
-- On INT reduce production annotationToken -> RETURN
-- On INOUT reduce production annotationToken -> RETURN
-- On IN reduce production annotationToken -> RETURN
-- On IF reduce production annotationToken -> RETURN
-- On HEADER_UNION reduce production annotationToken -> RETURN
-- On HEADER reduce production annotationToken -> RETURN
-- On GE reduce production annotationToken -> RETURN
-- On FALSE reduce production annotationToken -> RETURN
-- On EXTERN reduce production annotationToken -> RETURN
-- On EXIT reduce production annotationToken -> RETURN
-- On ERROR reduce production annotationToken -> RETURN
-- On EQ reduce production annotationToken -> RETURN
-- On ENUM reduce production annotationToken -> RETURN
-- On ENTRIES reduce production annotationToken -> RETURN
-- On ELSE reduce production annotationToken -> RETURN
-- On DOT reduce production annotationToken -> RETURN
-- On DONTCARE reduce production annotationToken -> RETURN
-- On DIV reduce production annotationToken -> RETURN
-- On DEFAULT reduce production annotationToken -> RETURN
-- On CONTROL reduce production annotationToken -> RETURN
-- On CONST reduce production annotationToken -> RETURN
-- On COMPLEMENT reduce production annotationToken -> RETURN
-- On COMMA reduce production annotationToken -> RETURN
-- On COLON reduce production annotationToken -> RETURN
-- On BOOL reduce production annotationToken -> RETURN
-- On BIT_XOR reduce production annotationToken -> RETURN
-- On BIT_OR reduce production annotationToken -> RETURN
-- On BIT_AND reduce production annotationToken -> RETURN
-- On BIT reduce production annotationToken -> RETURN
-- On AT reduce production annotationToken -> RETURN
-- On ASSIGN reduce production annotationToken -> RETURN
-- On APPLY reduce production annotationToken -> RETURN
-- On AND reduce production annotationToken -> RETURN
-- On ACTIONS reduce production annotationToken -> RETURN
-- On ACTION reduce production annotationToken -> RETURN
-- On ABSTRACT reduce production annotationToken -> RETURN

State 232:
annotationToken -> RANGE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> RANGE
-- On VARBIT reduce production annotationToken -> RANGE
-- On VALUESET reduce production annotationToken -> RANGE
-- On TYPEDEF reduce production annotationToken -> RANGE
-- On TYPE reduce production annotationToken -> RANGE
-- On TUPLE reduce production annotationToken -> RANGE
-- On TRUE reduce production annotationToken -> RANGE
-- On TRANSITION reduce production annotationToken -> RANGE
-- On TABLE reduce production annotationToken -> RANGE
-- On SWITCH reduce production annotationToken -> RANGE
-- On STRUCT reduce production annotationToken -> RANGE
-- On STRING_LITERAL reduce production annotationToken -> RANGE
-- On STRING reduce production annotationToken -> RANGE
-- On STATE reduce production annotationToken -> RANGE
-- On SHL reduce production annotationToken -> RANGE
-- On SEMICOLON reduce production annotationToken -> RANGE
-- On SELECT reduce production annotationToken -> RANGE
-- On R_PAREN reduce production annotationToken -> RANGE
-- On R_BRACKET reduce production annotationToken -> RANGE
-- On R_BRACE reduce production annotationToken -> RANGE
-- On R_ANGLE reduce production annotationToken -> RANGE
-- On RETURN reduce production annotationToken -> RANGE
-- On RANGE reduce production annotationToken -> RANGE
-- On QUESTION reduce production annotationToken -> RANGE
-- On PRAGMA_END reduce production annotationToken -> RANGE
-- On PRAGMA reduce production annotationToken -> RANGE
-- On PLUS_SAT reduce production annotationToken -> RANGE
-- On PLUSPLUS reduce production annotationToken -> RANGE
-- On PLUS reduce production annotationToken -> RANGE
-- On PARSER reduce production annotationToken -> RANGE
-- On PACKAGE reduce production annotationToken -> RANGE
-- On OUT reduce production annotationToken -> RANGE
-- On OR reduce production annotationToken -> RANGE
-- On NOT reduce production annotationToken -> RANGE
-- On NE reduce production annotationToken -> RANGE
-- On NAME reduce production annotationToken -> RANGE
-- On MUL reduce production annotationToken -> RANGE
-- On MOD reduce production annotationToken -> RANGE
-- On MINUS_SAT reduce production annotationToken -> RANGE
-- On MINUS reduce production annotationToken -> RANGE
-- On MATCH_KIND reduce production annotationToken -> RANGE
-- On MASK reduce production annotationToken -> RANGE
-- On L_PAREN reduce production annotationToken -> RANGE
-- On L_BRACKET reduce production annotationToken -> RANGE
-- On L_BRACE reduce production annotationToken -> RANGE
-- On L_ANGLE reduce production annotationToken -> RANGE
-- On LE reduce production annotationToken -> RANGE
-- On KEY reduce production annotationToken -> RANGE
-- On INTEGER reduce production annotationToken -> RANGE
-- On INT reduce production annotationToken -> RANGE
-- On INOUT reduce production annotationToken -> RANGE
-- On IN reduce production annotationToken -> RANGE
-- On IF reduce production annotationToken -> RANGE
-- On HEADER_UNION reduce production annotationToken -> RANGE
-- On HEADER reduce production annotationToken -> RANGE
-- On GE reduce production annotationToken -> RANGE
-- On FALSE reduce production annotationToken -> RANGE
-- On EXTERN reduce production annotationToken -> RANGE
-- On EXIT reduce production annotationToken -> RANGE
-- On ERROR reduce production annotationToken -> RANGE
-- On EQ reduce production annotationToken -> RANGE
-- On ENUM reduce production annotationToken -> RANGE
-- On ENTRIES reduce production annotationToken -> RANGE
-- On ELSE reduce production annotationToken -> RANGE
-- On DOT reduce production annotationToken -> RANGE
-- On DONTCARE reduce production annotationToken -> RANGE
-- On DIV reduce production annotationToken -> RANGE
-- On DEFAULT reduce production annotationToken -> RANGE
-- On CONTROL reduce production annotationToken -> RANGE
-- On CONST reduce production annotationToken -> RANGE
-- On COMPLEMENT reduce production annotationToken -> RANGE
-- On COMMA reduce production annotationToken -> RANGE
-- On COLON reduce production annotationToken -> RANGE
-- On BOOL reduce production annotationToken -> RANGE
-- On BIT_XOR reduce production annotationToken -> RANGE
-- On BIT_OR reduce production annotationToken -> RANGE
-- On BIT_AND reduce production annotationToken -> RANGE
-- On BIT reduce production annotationToken -> RANGE
-- On AT reduce production annotationToken -> RANGE
-- On ASSIGN reduce production annotationToken -> RANGE
-- On APPLY reduce production annotationToken -> RANGE
-- On AND reduce production annotationToken -> RANGE
-- On ACTIONS reduce production annotationToken -> RANGE
-- On ACTION reduce production annotationToken -> RANGE
-- On ABSTRACT reduce production annotationToken -> RANGE

State 233:
annotationToken -> QUESTION . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> QUESTION
-- On VARBIT reduce production annotationToken -> QUESTION
-- On VALUESET reduce production annotationToken -> QUESTION
-- On TYPEDEF reduce production annotationToken -> QUESTION
-- On TYPE reduce production annotationToken -> QUESTION
-- On TUPLE reduce production annotationToken -> QUESTION
-- On TRUE reduce production annotationToken -> QUESTION
-- On TRANSITION reduce production annotationToken -> QUESTION
-- On TABLE reduce production annotationToken -> QUESTION
-- On SWITCH reduce production annotationToken -> QUESTION
-- On STRUCT reduce production annotationToken -> QUESTION
-- On STRING_LITERAL reduce production annotationToken -> QUESTION
-- On STRING reduce production annotationToken -> QUESTION
-- On STATE reduce production annotationToken -> QUESTION
-- On SHL reduce production annotationToken -> QUESTION
-- On SEMICOLON reduce production annotationToken -> QUESTION
-- On SELECT reduce production annotationToken -> QUESTION
-- On R_PAREN reduce production annotationToken -> QUESTION
-- On R_BRACKET reduce production annotationToken -> QUESTION
-- On R_BRACE reduce production annotationToken -> QUESTION
-- On R_ANGLE reduce production annotationToken -> QUESTION
-- On RETURN reduce production annotationToken -> QUESTION
-- On RANGE reduce production annotationToken -> QUESTION
-- On QUESTION reduce production annotationToken -> QUESTION
-- On PRAGMA_END reduce production annotationToken -> QUESTION
-- On PRAGMA reduce production annotationToken -> QUESTION
-- On PLUS_SAT reduce production annotationToken -> QUESTION
-- On PLUSPLUS reduce production annotationToken -> QUESTION
-- On PLUS reduce production annotationToken -> QUESTION
-- On PARSER reduce production annotationToken -> QUESTION
-- On PACKAGE reduce production annotationToken -> QUESTION
-- On OUT reduce production annotationToken -> QUESTION
-- On OR reduce production annotationToken -> QUESTION
-- On NOT reduce production annotationToken -> QUESTION
-- On NE reduce production annotationToken -> QUESTION
-- On NAME reduce production annotationToken -> QUESTION
-- On MUL reduce production annotationToken -> QUESTION
-- On MOD reduce production annotationToken -> QUESTION
-- On MINUS_SAT reduce production annotationToken -> QUESTION
-- On MINUS reduce production annotationToken -> QUESTION
-- On MATCH_KIND reduce production annotationToken -> QUESTION
-- On MASK reduce production annotationToken -> QUESTION
-- On L_PAREN reduce production annotationToken -> QUESTION
-- On L_BRACKET reduce production annotationToken -> QUESTION
-- On L_BRACE reduce production annotationToken -> QUESTION
-- On L_ANGLE reduce production annotationToken -> QUESTION
-- On LE reduce production annotationToken -> QUESTION
-- On KEY reduce production annotationToken -> QUESTION
-- On INTEGER reduce production annotationToken -> QUESTION
-- On INT reduce production annotationToken -> QUESTION
-- On INOUT reduce production annotationToken -> QUESTION
-- On IN reduce production annotationToken -> QUESTION
-- On IF reduce production annotationToken -> QUESTION
-- On HEADER_UNION reduce production annotationToken -> QUESTION
-- On HEADER reduce production annotationToken -> QUESTION
-- On GE reduce production annotationToken -> QUESTION
-- On FALSE reduce production annotationToken -> QUESTION
-- On EXTERN reduce production annotationToken -> QUESTION
-- On EXIT reduce production annotationToken -> QUESTION
-- On ERROR reduce production annotationToken -> QUESTION
-- On EQ reduce production annotationToken -> QUESTION
-- On ENUM reduce production annotationToken -> QUESTION
-- On ENTRIES reduce production annotationToken -> QUESTION
-- On ELSE reduce production annotationToken -> QUESTION
-- On DOT reduce production annotationToken -> QUESTION
-- On DONTCARE reduce production annotationToken -> QUESTION
-- On DIV reduce production annotationToken -> QUESTION
-- On DEFAULT reduce production annotationToken -> QUESTION
-- On CONTROL reduce production annotationToken -> QUESTION
-- On CONST reduce production annotationToken -> QUESTION
-- On COMPLEMENT reduce production annotationToken -> QUESTION
-- On COMMA reduce production annotationToken -> QUESTION
-- On COLON reduce production annotationToken -> QUESTION
-- On BOOL reduce production annotationToken -> QUESTION
-- On BIT_XOR reduce production annotationToken -> QUESTION
-- On BIT_OR reduce production annotationToken -> QUESTION
-- On BIT_AND reduce production annotationToken -> QUESTION
-- On BIT reduce production annotationToken -> QUESTION
-- On AT reduce production annotationToken -> QUESTION
-- On ASSIGN reduce production annotationToken -> QUESTION
-- On APPLY reduce production annotationToken -> QUESTION
-- On AND reduce production annotationToken -> QUESTION
-- On ACTIONS reduce production annotationToken -> QUESTION
-- On ACTION reduce production annotationToken -> QUESTION
-- On ABSTRACT reduce production annotationToken -> QUESTION

State 234:
annotationToken -> PRAGMA . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> PRAGMA
-- On VARBIT reduce production annotationToken -> PRAGMA
-- On VALUESET reduce production annotationToken -> PRAGMA
-- On TYPEDEF reduce production annotationToken -> PRAGMA
-- On TYPE reduce production annotationToken -> PRAGMA
-- On TUPLE reduce production annotationToken -> PRAGMA
-- On TRUE reduce production annotationToken -> PRAGMA
-- On TRANSITION reduce production annotationToken -> PRAGMA
-- On TABLE reduce production annotationToken -> PRAGMA
-- On SWITCH reduce production annotationToken -> PRAGMA
-- On STRUCT reduce production annotationToken -> PRAGMA
-- On STRING_LITERAL reduce production annotationToken -> PRAGMA
-- On STRING reduce production annotationToken -> PRAGMA
-- On STATE reduce production annotationToken -> PRAGMA
-- On SHL reduce production annotationToken -> PRAGMA
-- On SEMICOLON reduce production annotationToken -> PRAGMA
-- On SELECT reduce production annotationToken -> PRAGMA
-- On R_PAREN reduce production annotationToken -> PRAGMA
-- On R_BRACKET reduce production annotationToken -> PRAGMA
-- On R_BRACE reduce production annotationToken -> PRAGMA
-- On R_ANGLE reduce production annotationToken -> PRAGMA
-- On RETURN reduce production annotationToken -> PRAGMA
-- On RANGE reduce production annotationToken -> PRAGMA
-- On QUESTION reduce production annotationToken -> PRAGMA
-- On PRAGMA_END reduce production annotationToken -> PRAGMA
-- On PRAGMA reduce production annotationToken -> PRAGMA
-- On PLUS_SAT reduce production annotationToken -> PRAGMA
-- On PLUSPLUS reduce production annotationToken -> PRAGMA
-- On PLUS reduce production annotationToken -> PRAGMA
-- On PARSER reduce production annotationToken -> PRAGMA
-- On PACKAGE reduce production annotationToken -> PRAGMA
-- On OUT reduce production annotationToken -> PRAGMA
-- On OR reduce production annotationToken -> PRAGMA
-- On NOT reduce production annotationToken -> PRAGMA
-- On NE reduce production annotationToken -> PRAGMA
-- On NAME reduce production annotationToken -> PRAGMA
-- On MUL reduce production annotationToken -> PRAGMA
-- On MOD reduce production annotationToken -> PRAGMA
-- On MINUS_SAT reduce production annotationToken -> PRAGMA
-- On MINUS reduce production annotationToken -> PRAGMA
-- On MATCH_KIND reduce production annotationToken -> PRAGMA
-- On MASK reduce production annotationToken -> PRAGMA
-- On L_PAREN reduce production annotationToken -> PRAGMA
-- On L_BRACKET reduce production annotationToken -> PRAGMA
-- On L_BRACE reduce production annotationToken -> PRAGMA
-- On L_ANGLE reduce production annotationToken -> PRAGMA
-- On LE reduce production annotationToken -> PRAGMA
-- On KEY reduce production annotationToken -> PRAGMA
-- On INTEGER reduce production annotationToken -> PRAGMA
-- On INT reduce production annotationToken -> PRAGMA
-- On INOUT reduce production annotationToken -> PRAGMA
-- On IN reduce production annotationToken -> PRAGMA
-- On IF reduce production annotationToken -> PRAGMA
-- On HEADER_UNION reduce production annotationToken -> PRAGMA
-- On HEADER reduce production annotationToken -> PRAGMA
-- On GE reduce production annotationToken -> PRAGMA
-- On FALSE reduce production annotationToken -> PRAGMA
-- On EXTERN reduce production annotationToken -> PRAGMA
-- On EXIT reduce production annotationToken -> PRAGMA
-- On ERROR reduce production annotationToken -> PRAGMA
-- On EQ reduce production annotationToken -> PRAGMA
-- On ENUM reduce production annotationToken -> PRAGMA
-- On ENTRIES reduce production annotationToken -> PRAGMA
-- On ELSE reduce production annotationToken -> PRAGMA
-- On DOT reduce production annotationToken -> PRAGMA
-- On DONTCARE reduce production annotationToken -> PRAGMA
-- On DIV reduce production annotationToken -> PRAGMA
-- On DEFAULT reduce production annotationToken -> PRAGMA
-- On CONTROL reduce production annotationToken -> PRAGMA
-- On CONST reduce production annotationToken -> PRAGMA
-- On COMPLEMENT reduce production annotationToken -> PRAGMA
-- On COMMA reduce production annotationToken -> PRAGMA
-- On COLON reduce production annotationToken -> PRAGMA
-- On BOOL reduce production annotationToken -> PRAGMA
-- On BIT_XOR reduce production annotationToken -> PRAGMA
-- On BIT_OR reduce production annotationToken -> PRAGMA
-- On BIT_AND reduce production annotationToken -> PRAGMA
-- On BIT reduce production annotationToken -> PRAGMA
-- On AT reduce production annotationToken -> PRAGMA
-- On ASSIGN reduce production annotationToken -> PRAGMA
-- On APPLY reduce production annotationToken -> PRAGMA
-- On AND reduce production annotationToken -> PRAGMA
-- On ACTIONS reduce production annotationToken -> PRAGMA
-- On ACTION reduce production annotationToken -> PRAGMA
-- On ABSTRACT reduce production annotationToken -> PRAGMA

State 235:
annotationToken -> PLUS_SAT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> PLUS_SAT
-- On VARBIT reduce production annotationToken -> PLUS_SAT
-- On VALUESET reduce production annotationToken -> PLUS_SAT
-- On TYPEDEF reduce production annotationToken -> PLUS_SAT
-- On TYPE reduce production annotationToken -> PLUS_SAT
-- On TUPLE reduce production annotationToken -> PLUS_SAT
-- On TRUE reduce production annotationToken -> PLUS_SAT
-- On TRANSITION reduce production annotationToken -> PLUS_SAT
-- On TABLE reduce production annotationToken -> PLUS_SAT
-- On SWITCH reduce production annotationToken -> PLUS_SAT
-- On STRUCT reduce production annotationToken -> PLUS_SAT
-- On STRING_LITERAL reduce production annotationToken -> PLUS_SAT
-- On STRING reduce production annotationToken -> PLUS_SAT
-- On STATE reduce production annotationToken -> PLUS_SAT
-- On SHL reduce production annotationToken -> PLUS_SAT
-- On SEMICOLON reduce production annotationToken -> PLUS_SAT
-- On SELECT reduce production annotationToken -> PLUS_SAT
-- On R_PAREN reduce production annotationToken -> PLUS_SAT
-- On R_BRACKET reduce production annotationToken -> PLUS_SAT
-- On R_BRACE reduce production annotationToken -> PLUS_SAT
-- On R_ANGLE reduce production annotationToken -> PLUS_SAT
-- On RETURN reduce production annotationToken -> PLUS_SAT
-- On RANGE reduce production annotationToken -> PLUS_SAT
-- On QUESTION reduce production annotationToken -> PLUS_SAT
-- On PRAGMA_END reduce production annotationToken -> PLUS_SAT
-- On PRAGMA reduce production annotationToken -> PLUS_SAT
-- On PLUS_SAT reduce production annotationToken -> PLUS_SAT
-- On PLUSPLUS reduce production annotationToken -> PLUS_SAT
-- On PLUS reduce production annotationToken -> PLUS_SAT
-- On PARSER reduce production annotationToken -> PLUS_SAT
-- On PACKAGE reduce production annotationToken -> PLUS_SAT
-- On OUT reduce production annotationToken -> PLUS_SAT
-- On OR reduce production annotationToken -> PLUS_SAT
-- On NOT reduce production annotationToken -> PLUS_SAT
-- On NE reduce production annotationToken -> PLUS_SAT
-- On NAME reduce production annotationToken -> PLUS_SAT
-- On MUL reduce production annotationToken -> PLUS_SAT
-- On MOD reduce production annotationToken -> PLUS_SAT
-- On MINUS_SAT reduce production annotationToken -> PLUS_SAT
-- On MINUS reduce production annotationToken -> PLUS_SAT
-- On MATCH_KIND reduce production annotationToken -> PLUS_SAT
-- On MASK reduce production annotationToken -> PLUS_SAT
-- On L_PAREN reduce production annotationToken -> PLUS_SAT
-- On L_BRACKET reduce production annotationToken -> PLUS_SAT
-- On L_BRACE reduce production annotationToken -> PLUS_SAT
-- On L_ANGLE reduce production annotationToken -> PLUS_SAT
-- On LE reduce production annotationToken -> PLUS_SAT
-- On KEY reduce production annotationToken -> PLUS_SAT
-- On INTEGER reduce production annotationToken -> PLUS_SAT
-- On INT reduce production annotationToken -> PLUS_SAT
-- On INOUT reduce production annotationToken -> PLUS_SAT
-- On IN reduce production annotationToken -> PLUS_SAT
-- On IF reduce production annotationToken -> PLUS_SAT
-- On HEADER_UNION reduce production annotationToken -> PLUS_SAT
-- On HEADER reduce production annotationToken -> PLUS_SAT
-- On GE reduce production annotationToken -> PLUS_SAT
-- On FALSE reduce production annotationToken -> PLUS_SAT
-- On EXTERN reduce production annotationToken -> PLUS_SAT
-- On EXIT reduce production annotationToken -> PLUS_SAT
-- On ERROR reduce production annotationToken -> PLUS_SAT
-- On EQ reduce production annotationToken -> PLUS_SAT
-- On ENUM reduce production annotationToken -> PLUS_SAT
-- On ENTRIES reduce production annotationToken -> PLUS_SAT
-- On ELSE reduce production annotationToken -> PLUS_SAT
-- On DOT reduce production annotationToken -> PLUS_SAT
-- On DONTCARE reduce production annotationToken -> PLUS_SAT
-- On DIV reduce production annotationToken -> PLUS_SAT
-- On DEFAULT reduce production annotationToken -> PLUS_SAT
-- On CONTROL reduce production annotationToken -> PLUS_SAT
-- On CONST reduce production annotationToken -> PLUS_SAT
-- On COMPLEMENT reduce production annotationToken -> PLUS_SAT
-- On COMMA reduce production annotationToken -> PLUS_SAT
-- On COLON reduce production annotationToken -> PLUS_SAT
-- On BOOL reduce production annotationToken -> PLUS_SAT
-- On BIT_XOR reduce production annotationToken -> PLUS_SAT
-- On BIT_OR reduce production annotationToken -> PLUS_SAT
-- On BIT_AND reduce production annotationToken -> PLUS_SAT
-- On BIT reduce production annotationToken -> PLUS_SAT
-- On AT reduce production annotationToken -> PLUS_SAT
-- On ASSIGN reduce production annotationToken -> PLUS_SAT
-- On APPLY reduce production annotationToken -> PLUS_SAT
-- On AND reduce production annotationToken -> PLUS_SAT
-- On ACTIONS reduce production annotationToken -> PLUS_SAT
-- On ACTION reduce production annotationToken -> PLUS_SAT
-- On ABSTRACT reduce production annotationToken -> PLUS_SAT

State 236:
annotationToken -> PLUSPLUS . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> PLUSPLUS
-- On VARBIT reduce production annotationToken -> PLUSPLUS
-- On VALUESET reduce production annotationToken -> PLUSPLUS
-- On TYPEDEF reduce production annotationToken -> PLUSPLUS
-- On TYPE reduce production annotationToken -> PLUSPLUS
-- On TUPLE reduce production annotationToken -> PLUSPLUS
-- On TRUE reduce production annotationToken -> PLUSPLUS
-- On TRANSITION reduce production annotationToken -> PLUSPLUS
-- On TABLE reduce production annotationToken -> PLUSPLUS
-- On SWITCH reduce production annotationToken -> PLUSPLUS
-- On STRUCT reduce production annotationToken -> PLUSPLUS
-- On STRING_LITERAL reduce production annotationToken -> PLUSPLUS
-- On STRING reduce production annotationToken -> PLUSPLUS
-- On STATE reduce production annotationToken -> PLUSPLUS
-- On SHL reduce production annotationToken -> PLUSPLUS
-- On SEMICOLON reduce production annotationToken -> PLUSPLUS
-- On SELECT reduce production annotationToken -> PLUSPLUS
-- On R_PAREN reduce production annotationToken -> PLUSPLUS
-- On R_BRACKET reduce production annotationToken -> PLUSPLUS
-- On R_BRACE reduce production annotationToken -> PLUSPLUS
-- On R_ANGLE reduce production annotationToken -> PLUSPLUS
-- On RETURN reduce production annotationToken -> PLUSPLUS
-- On RANGE reduce production annotationToken -> PLUSPLUS
-- On QUESTION reduce production annotationToken -> PLUSPLUS
-- On PRAGMA_END reduce production annotationToken -> PLUSPLUS
-- On PRAGMA reduce production annotationToken -> PLUSPLUS
-- On PLUS_SAT reduce production annotationToken -> PLUSPLUS
-- On PLUSPLUS reduce production annotationToken -> PLUSPLUS
-- On PLUS reduce production annotationToken -> PLUSPLUS
-- On PARSER reduce production annotationToken -> PLUSPLUS
-- On PACKAGE reduce production annotationToken -> PLUSPLUS
-- On OUT reduce production annotationToken -> PLUSPLUS
-- On OR reduce production annotationToken -> PLUSPLUS
-- On NOT reduce production annotationToken -> PLUSPLUS
-- On NE reduce production annotationToken -> PLUSPLUS
-- On NAME reduce production annotationToken -> PLUSPLUS
-- On MUL reduce production annotationToken -> PLUSPLUS
-- On MOD reduce production annotationToken -> PLUSPLUS
-- On MINUS_SAT reduce production annotationToken -> PLUSPLUS
-- On MINUS reduce production annotationToken -> PLUSPLUS
-- On MATCH_KIND reduce production annotationToken -> PLUSPLUS
-- On MASK reduce production annotationToken -> PLUSPLUS
-- On L_PAREN reduce production annotationToken -> PLUSPLUS
-- On L_BRACKET reduce production annotationToken -> PLUSPLUS
-- On L_BRACE reduce production annotationToken -> PLUSPLUS
-- On L_ANGLE reduce production annotationToken -> PLUSPLUS
-- On LE reduce production annotationToken -> PLUSPLUS
-- On KEY reduce production annotationToken -> PLUSPLUS
-- On INTEGER reduce production annotationToken -> PLUSPLUS
-- On INT reduce production annotationToken -> PLUSPLUS
-- On INOUT reduce production annotationToken -> PLUSPLUS
-- On IN reduce production annotationToken -> PLUSPLUS
-- On IF reduce production annotationToken -> PLUSPLUS
-- On HEADER_UNION reduce production annotationToken -> PLUSPLUS
-- On HEADER reduce production annotationToken -> PLUSPLUS
-- On GE reduce production annotationToken -> PLUSPLUS
-- On FALSE reduce production annotationToken -> PLUSPLUS
-- On EXTERN reduce production annotationToken -> PLUSPLUS
-- On EXIT reduce production annotationToken -> PLUSPLUS
-- On ERROR reduce production annotationToken -> PLUSPLUS
-- On EQ reduce production annotationToken -> PLUSPLUS
-- On ENUM reduce production annotationToken -> PLUSPLUS
-- On ENTRIES reduce production annotationToken -> PLUSPLUS
-- On ELSE reduce production annotationToken -> PLUSPLUS
-- On DOT reduce production annotationToken -> PLUSPLUS
-- On DONTCARE reduce production annotationToken -> PLUSPLUS
-- On DIV reduce production annotationToken -> PLUSPLUS
-- On DEFAULT reduce production annotationToken -> PLUSPLUS
-- On CONTROL reduce production annotationToken -> PLUSPLUS
-- On CONST reduce production annotationToken -> PLUSPLUS
-- On COMPLEMENT reduce production annotationToken -> PLUSPLUS
-- On COMMA reduce production annotationToken -> PLUSPLUS
-- On COLON reduce production annotationToken -> PLUSPLUS
-- On BOOL reduce production annotationToken -> PLUSPLUS
-- On BIT_XOR reduce production annotationToken -> PLUSPLUS
-- On BIT_OR reduce production annotationToken -> PLUSPLUS
-- On BIT_AND reduce production annotationToken -> PLUSPLUS
-- On BIT reduce production annotationToken -> PLUSPLUS
-- On AT reduce production annotationToken -> PLUSPLUS
-- On ASSIGN reduce production annotationToken -> PLUSPLUS
-- On APPLY reduce production annotationToken -> PLUSPLUS
-- On AND reduce production annotationToken -> PLUSPLUS
-- On ACTIONS reduce production annotationToken -> PLUSPLUS
-- On ACTION reduce production annotationToken -> PLUSPLUS
-- On ABSTRACT reduce production annotationToken -> PLUSPLUS

State 237:
annotationToken -> PLUS . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> PLUS
-- On VARBIT reduce production annotationToken -> PLUS
-- On VALUESET reduce production annotationToken -> PLUS
-- On TYPEDEF reduce production annotationToken -> PLUS
-- On TYPE reduce production annotationToken -> PLUS
-- On TUPLE reduce production annotationToken -> PLUS
-- On TRUE reduce production annotationToken -> PLUS
-- On TRANSITION reduce production annotationToken -> PLUS
-- On TABLE reduce production annotationToken -> PLUS
-- On SWITCH reduce production annotationToken -> PLUS
-- On STRUCT reduce production annotationToken -> PLUS
-- On STRING_LITERAL reduce production annotationToken -> PLUS
-- On STRING reduce production annotationToken -> PLUS
-- On STATE reduce production annotationToken -> PLUS
-- On SHL reduce production annotationToken -> PLUS
-- On SEMICOLON reduce production annotationToken -> PLUS
-- On SELECT reduce production annotationToken -> PLUS
-- On R_PAREN reduce production annotationToken -> PLUS
-- On R_BRACKET reduce production annotationToken -> PLUS
-- On R_BRACE reduce production annotationToken -> PLUS
-- On R_ANGLE reduce production annotationToken -> PLUS
-- On RETURN reduce production annotationToken -> PLUS
-- On RANGE reduce production annotationToken -> PLUS
-- On QUESTION reduce production annotationToken -> PLUS
-- On PRAGMA_END reduce production annotationToken -> PLUS
-- On PRAGMA reduce production annotationToken -> PLUS
-- On PLUS_SAT reduce production annotationToken -> PLUS
-- On PLUSPLUS reduce production annotationToken -> PLUS
-- On PLUS reduce production annotationToken -> PLUS
-- On PARSER reduce production annotationToken -> PLUS
-- On PACKAGE reduce production annotationToken -> PLUS
-- On OUT reduce production annotationToken -> PLUS
-- On OR reduce production annotationToken -> PLUS
-- On NOT reduce production annotationToken -> PLUS
-- On NE reduce production annotationToken -> PLUS
-- On NAME reduce production annotationToken -> PLUS
-- On MUL reduce production annotationToken -> PLUS
-- On MOD reduce production annotationToken -> PLUS
-- On MINUS_SAT reduce production annotationToken -> PLUS
-- On MINUS reduce production annotationToken -> PLUS
-- On MATCH_KIND reduce production annotationToken -> PLUS
-- On MASK reduce production annotationToken -> PLUS
-- On L_PAREN reduce production annotationToken -> PLUS
-- On L_BRACKET reduce production annotationToken -> PLUS
-- On L_BRACE reduce production annotationToken -> PLUS
-- On L_ANGLE reduce production annotationToken -> PLUS
-- On LE reduce production annotationToken -> PLUS
-- On KEY reduce production annotationToken -> PLUS
-- On INTEGER reduce production annotationToken -> PLUS
-- On INT reduce production annotationToken -> PLUS
-- On INOUT reduce production annotationToken -> PLUS
-- On IN reduce production annotationToken -> PLUS
-- On IF reduce production annotationToken -> PLUS
-- On HEADER_UNION reduce production annotationToken -> PLUS
-- On HEADER reduce production annotationToken -> PLUS
-- On GE reduce production annotationToken -> PLUS
-- On FALSE reduce production annotationToken -> PLUS
-- On EXTERN reduce production annotationToken -> PLUS
-- On EXIT reduce production annotationToken -> PLUS
-- On ERROR reduce production annotationToken -> PLUS
-- On EQ reduce production annotationToken -> PLUS
-- On ENUM reduce production annotationToken -> PLUS
-- On ENTRIES reduce production annotationToken -> PLUS
-- On ELSE reduce production annotationToken -> PLUS
-- On DOT reduce production annotationToken -> PLUS
-- On DONTCARE reduce production annotationToken -> PLUS
-- On DIV reduce production annotationToken -> PLUS
-- On DEFAULT reduce production annotationToken -> PLUS
-- On CONTROL reduce production annotationToken -> PLUS
-- On CONST reduce production annotationToken -> PLUS
-- On COMPLEMENT reduce production annotationToken -> PLUS
-- On COMMA reduce production annotationToken -> PLUS
-- On COLON reduce production annotationToken -> PLUS
-- On BOOL reduce production annotationToken -> PLUS
-- On BIT_XOR reduce production annotationToken -> PLUS
-- On BIT_OR reduce production annotationToken -> PLUS
-- On BIT_AND reduce production annotationToken -> PLUS
-- On BIT reduce production annotationToken -> PLUS
-- On AT reduce production annotationToken -> PLUS
-- On ASSIGN reduce production annotationToken -> PLUS
-- On APPLY reduce production annotationToken -> PLUS
-- On AND reduce production annotationToken -> PLUS
-- On ACTIONS reduce production annotationToken -> PLUS
-- On ACTION reduce production annotationToken -> PLUS
-- On ABSTRACT reduce production annotationToken -> PLUS

State 238:
annotationToken -> PARSER . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> PARSER
-- On VARBIT reduce production annotationToken -> PARSER
-- On VALUESET reduce production annotationToken -> PARSER
-- On TYPEDEF reduce production annotationToken -> PARSER
-- On TYPE reduce production annotationToken -> PARSER
-- On TUPLE reduce production annotationToken -> PARSER
-- On TRUE reduce production annotationToken -> PARSER
-- On TRANSITION reduce production annotationToken -> PARSER
-- On TABLE reduce production annotationToken -> PARSER
-- On SWITCH reduce production annotationToken -> PARSER
-- On STRUCT reduce production annotationToken -> PARSER
-- On STRING_LITERAL reduce production annotationToken -> PARSER
-- On STRING reduce production annotationToken -> PARSER
-- On STATE reduce production annotationToken -> PARSER
-- On SHL reduce production annotationToken -> PARSER
-- On SEMICOLON reduce production annotationToken -> PARSER
-- On SELECT reduce production annotationToken -> PARSER
-- On R_PAREN reduce production annotationToken -> PARSER
-- On R_BRACKET reduce production annotationToken -> PARSER
-- On R_BRACE reduce production annotationToken -> PARSER
-- On R_ANGLE reduce production annotationToken -> PARSER
-- On RETURN reduce production annotationToken -> PARSER
-- On RANGE reduce production annotationToken -> PARSER
-- On QUESTION reduce production annotationToken -> PARSER
-- On PRAGMA_END reduce production annotationToken -> PARSER
-- On PRAGMA reduce production annotationToken -> PARSER
-- On PLUS_SAT reduce production annotationToken -> PARSER
-- On PLUSPLUS reduce production annotationToken -> PARSER
-- On PLUS reduce production annotationToken -> PARSER
-- On PARSER reduce production annotationToken -> PARSER
-- On PACKAGE reduce production annotationToken -> PARSER
-- On OUT reduce production annotationToken -> PARSER
-- On OR reduce production annotationToken -> PARSER
-- On NOT reduce production annotationToken -> PARSER
-- On NE reduce production annotationToken -> PARSER
-- On NAME reduce production annotationToken -> PARSER
-- On MUL reduce production annotationToken -> PARSER
-- On MOD reduce production annotationToken -> PARSER
-- On MINUS_SAT reduce production annotationToken -> PARSER
-- On MINUS reduce production annotationToken -> PARSER
-- On MATCH_KIND reduce production annotationToken -> PARSER
-- On MASK reduce production annotationToken -> PARSER
-- On L_PAREN reduce production annotationToken -> PARSER
-- On L_BRACKET reduce production annotationToken -> PARSER
-- On L_BRACE reduce production annotationToken -> PARSER
-- On L_ANGLE reduce production annotationToken -> PARSER
-- On LE reduce production annotationToken -> PARSER
-- On KEY reduce production annotationToken -> PARSER
-- On INTEGER reduce production annotationToken -> PARSER
-- On INT reduce production annotationToken -> PARSER
-- On INOUT reduce production annotationToken -> PARSER
-- On IN reduce production annotationToken -> PARSER
-- On IF reduce production annotationToken -> PARSER
-- On HEADER_UNION reduce production annotationToken -> PARSER
-- On HEADER reduce production annotationToken -> PARSER
-- On GE reduce production annotationToken -> PARSER
-- On FALSE reduce production annotationToken -> PARSER
-- On EXTERN reduce production annotationToken -> PARSER
-- On EXIT reduce production annotationToken -> PARSER
-- On ERROR reduce production annotationToken -> PARSER
-- On EQ reduce production annotationToken -> PARSER
-- On ENUM reduce production annotationToken -> PARSER
-- On ENTRIES reduce production annotationToken -> PARSER
-- On ELSE reduce production annotationToken -> PARSER
-- On DOT reduce production annotationToken -> PARSER
-- On DONTCARE reduce production annotationToken -> PARSER
-- On DIV reduce production annotationToken -> PARSER
-- On DEFAULT reduce production annotationToken -> PARSER
-- On CONTROL reduce production annotationToken -> PARSER
-- On CONST reduce production annotationToken -> PARSER
-- On COMPLEMENT reduce production annotationToken -> PARSER
-- On COMMA reduce production annotationToken -> PARSER
-- On COLON reduce production annotationToken -> PARSER
-- On BOOL reduce production annotationToken -> PARSER
-- On BIT_XOR reduce production annotationToken -> PARSER
-- On BIT_OR reduce production annotationToken -> PARSER
-- On BIT_AND reduce production annotationToken -> PARSER
-- On BIT reduce production annotationToken -> PARSER
-- On AT reduce production annotationToken -> PARSER
-- On ASSIGN reduce production annotationToken -> PARSER
-- On APPLY reduce production annotationToken -> PARSER
-- On AND reduce production annotationToken -> PARSER
-- On ACTIONS reduce production annotationToken -> PARSER
-- On ACTION reduce production annotationToken -> PARSER
-- On ABSTRACT reduce production annotationToken -> PARSER

State 239:
annotationToken -> PACKAGE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> PACKAGE
-- On VARBIT reduce production annotationToken -> PACKAGE
-- On VALUESET reduce production annotationToken -> PACKAGE
-- On TYPEDEF reduce production annotationToken -> PACKAGE
-- On TYPE reduce production annotationToken -> PACKAGE
-- On TUPLE reduce production annotationToken -> PACKAGE
-- On TRUE reduce production annotationToken -> PACKAGE
-- On TRANSITION reduce production annotationToken -> PACKAGE
-- On TABLE reduce production annotationToken -> PACKAGE
-- On SWITCH reduce production annotationToken -> PACKAGE
-- On STRUCT reduce production annotationToken -> PACKAGE
-- On STRING_LITERAL reduce production annotationToken -> PACKAGE
-- On STRING reduce production annotationToken -> PACKAGE
-- On STATE reduce production annotationToken -> PACKAGE
-- On SHL reduce production annotationToken -> PACKAGE
-- On SEMICOLON reduce production annotationToken -> PACKAGE
-- On SELECT reduce production annotationToken -> PACKAGE
-- On R_PAREN reduce production annotationToken -> PACKAGE
-- On R_BRACKET reduce production annotationToken -> PACKAGE
-- On R_BRACE reduce production annotationToken -> PACKAGE
-- On R_ANGLE reduce production annotationToken -> PACKAGE
-- On RETURN reduce production annotationToken -> PACKAGE
-- On RANGE reduce production annotationToken -> PACKAGE
-- On QUESTION reduce production annotationToken -> PACKAGE
-- On PRAGMA_END reduce production annotationToken -> PACKAGE
-- On PRAGMA reduce production annotationToken -> PACKAGE
-- On PLUS_SAT reduce production annotationToken -> PACKAGE
-- On PLUSPLUS reduce production annotationToken -> PACKAGE
-- On PLUS reduce production annotationToken -> PACKAGE
-- On PARSER reduce production annotationToken -> PACKAGE
-- On PACKAGE reduce production annotationToken -> PACKAGE
-- On OUT reduce production annotationToken -> PACKAGE
-- On OR reduce production annotationToken -> PACKAGE
-- On NOT reduce production annotationToken -> PACKAGE
-- On NE reduce production annotationToken -> PACKAGE
-- On NAME reduce production annotationToken -> PACKAGE
-- On MUL reduce production annotationToken -> PACKAGE
-- On MOD reduce production annotationToken -> PACKAGE
-- On MINUS_SAT reduce production annotationToken -> PACKAGE
-- On MINUS reduce production annotationToken -> PACKAGE
-- On MATCH_KIND reduce production annotationToken -> PACKAGE
-- On MASK reduce production annotationToken -> PACKAGE
-- On L_PAREN reduce production annotationToken -> PACKAGE
-- On L_BRACKET reduce production annotationToken -> PACKAGE
-- On L_BRACE reduce production annotationToken -> PACKAGE
-- On L_ANGLE reduce production annotationToken -> PACKAGE
-- On LE reduce production annotationToken -> PACKAGE
-- On KEY reduce production annotationToken -> PACKAGE
-- On INTEGER reduce production annotationToken -> PACKAGE
-- On INT reduce production annotationToken -> PACKAGE
-- On INOUT reduce production annotationToken -> PACKAGE
-- On IN reduce production annotationToken -> PACKAGE
-- On IF reduce production annotationToken -> PACKAGE
-- On HEADER_UNION reduce production annotationToken -> PACKAGE
-- On HEADER reduce production annotationToken -> PACKAGE
-- On GE reduce production annotationToken -> PACKAGE
-- On FALSE reduce production annotationToken -> PACKAGE
-- On EXTERN reduce production annotationToken -> PACKAGE
-- On EXIT reduce production annotationToken -> PACKAGE
-- On ERROR reduce production annotationToken -> PACKAGE
-- On EQ reduce production annotationToken -> PACKAGE
-- On ENUM reduce production annotationToken -> PACKAGE
-- On ENTRIES reduce production annotationToken -> PACKAGE
-- On ELSE reduce production annotationToken -> PACKAGE
-- On DOT reduce production annotationToken -> PACKAGE
-- On DONTCARE reduce production annotationToken -> PACKAGE
-- On DIV reduce production annotationToken -> PACKAGE
-- On DEFAULT reduce production annotationToken -> PACKAGE
-- On CONTROL reduce production annotationToken -> PACKAGE
-- On CONST reduce production annotationToken -> PACKAGE
-- On COMPLEMENT reduce production annotationToken -> PACKAGE
-- On COMMA reduce production annotationToken -> PACKAGE
-- On COLON reduce production annotationToken -> PACKAGE
-- On BOOL reduce production annotationToken -> PACKAGE
-- On BIT_XOR reduce production annotationToken -> PACKAGE
-- On BIT_OR reduce production annotationToken -> PACKAGE
-- On BIT_AND reduce production annotationToken -> PACKAGE
-- On BIT reduce production annotationToken -> PACKAGE
-- On AT reduce production annotationToken -> PACKAGE
-- On ASSIGN reduce production annotationToken -> PACKAGE
-- On APPLY reduce production annotationToken -> PACKAGE
-- On AND reduce production annotationToken -> PACKAGE
-- On ACTIONS reduce production annotationToken -> PACKAGE
-- On ACTION reduce production annotationToken -> PACKAGE
-- On ABSTRACT reduce production annotationToken -> PACKAGE

State 240:
annotationToken -> OUT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> OUT
-- On VARBIT reduce production annotationToken -> OUT
-- On VALUESET reduce production annotationToken -> OUT
-- On TYPEDEF reduce production annotationToken -> OUT
-- On TYPE reduce production annotationToken -> OUT
-- On TUPLE reduce production annotationToken -> OUT
-- On TRUE reduce production annotationToken -> OUT
-- On TRANSITION reduce production annotationToken -> OUT
-- On TABLE reduce production annotationToken -> OUT
-- On SWITCH reduce production annotationToken -> OUT
-- On STRUCT reduce production annotationToken -> OUT
-- On STRING_LITERAL reduce production annotationToken -> OUT
-- On STRING reduce production annotationToken -> OUT
-- On STATE reduce production annotationToken -> OUT
-- On SHL reduce production annotationToken -> OUT
-- On SEMICOLON reduce production annotationToken -> OUT
-- On SELECT reduce production annotationToken -> OUT
-- On R_PAREN reduce production annotationToken -> OUT
-- On R_BRACKET reduce production annotationToken -> OUT
-- On R_BRACE reduce production annotationToken -> OUT
-- On R_ANGLE reduce production annotationToken -> OUT
-- On RETURN reduce production annotationToken -> OUT
-- On RANGE reduce production annotationToken -> OUT
-- On QUESTION reduce production annotationToken -> OUT
-- On PRAGMA_END reduce production annotationToken -> OUT
-- On PRAGMA reduce production annotationToken -> OUT
-- On PLUS_SAT reduce production annotationToken -> OUT
-- On PLUSPLUS reduce production annotationToken -> OUT
-- On PLUS reduce production annotationToken -> OUT
-- On PARSER reduce production annotationToken -> OUT
-- On PACKAGE reduce production annotationToken -> OUT
-- On OUT reduce production annotationToken -> OUT
-- On OR reduce production annotationToken -> OUT
-- On NOT reduce production annotationToken -> OUT
-- On NE reduce production annotationToken -> OUT
-- On NAME reduce production annotationToken -> OUT
-- On MUL reduce production annotationToken -> OUT
-- On MOD reduce production annotationToken -> OUT
-- On MINUS_SAT reduce production annotationToken -> OUT
-- On MINUS reduce production annotationToken -> OUT
-- On MATCH_KIND reduce production annotationToken -> OUT
-- On MASK reduce production annotationToken -> OUT
-- On L_PAREN reduce production annotationToken -> OUT
-- On L_BRACKET reduce production annotationToken -> OUT
-- On L_BRACE reduce production annotationToken -> OUT
-- On L_ANGLE reduce production annotationToken -> OUT
-- On LE reduce production annotationToken -> OUT
-- On KEY reduce production annotationToken -> OUT
-- On INTEGER reduce production annotationToken -> OUT
-- On INT reduce production annotationToken -> OUT
-- On INOUT reduce production annotationToken -> OUT
-- On IN reduce production annotationToken -> OUT
-- On IF reduce production annotationToken -> OUT
-- On HEADER_UNION reduce production annotationToken -> OUT
-- On HEADER reduce production annotationToken -> OUT
-- On GE reduce production annotationToken -> OUT
-- On FALSE reduce production annotationToken -> OUT
-- On EXTERN reduce production annotationToken -> OUT
-- On EXIT reduce production annotationToken -> OUT
-- On ERROR reduce production annotationToken -> OUT
-- On EQ reduce production annotationToken -> OUT
-- On ENUM reduce production annotationToken -> OUT
-- On ENTRIES reduce production annotationToken -> OUT
-- On ELSE reduce production annotationToken -> OUT
-- On DOT reduce production annotationToken -> OUT
-- On DONTCARE reduce production annotationToken -> OUT
-- On DIV reduce production annotationToken -> OUT
-- On DEFAULT reduce production annotationToken -> OUT
-- On CONTROL reduce production annotationToken -> OUT
-- On CONST reduce production annotationToken -> OUT
-- On COMPLEMENT reduce production annotationToken -> OUT
-- On COMMA reduce production annotationToken -> OUT
-- On COLON reduce production annotationToken -> OUT
-- On BOOL reduce production annotationToken -> OUT
-- On BIT_XOR reduce production annotationToken -> OUT
-- On BIT_OR reduce production annotationToken -> OUT
-- On BIT_AND reduce production annotationToken -> OUT
-- On BIT reduce production annotationToken -> OUT
-- On AT reduce production annotationToken -> OUT
-- On ASSIGN reduce production annotationToken -> OUT
-- On APPLY reduce production annotationToken -> OUT
-- On AND reduce production annotationToken -> OUT
-- On ACTIONS reduce production annotationToken -> OUT
-- On ACTION reduce production annotationToken -> OUT
-- On ABSTRACT reduce production annotationToken -> OUT

State 241:
annotationToken -> OR . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> OR
-- On VARBIT reduce production annotationToken -> OR
-- On VALUESET reduce production annotationToken -> OR
-- On TYPEDEF reduce production annotationToken -> OR
-- On TYPE reduce production annotationToken -> OR
-- On TUPLE reduce production annotationToken -> OR
-- On TRUE reduce production annotationToken -> OR
-- On TRANSITION reduce production annotationToken -> OR
-- On TABLE reduce production annotationToken -> OR
-- On SWITCH reduce production annotationToken -> OR
-- On STRUCT reduce production annotationToken -> OR
-- On STRING_LITERAL reduce production annotationToken -> OR
-- On STRING reduce production annotationToken -> OR
-- On STATE reduce production annotationToken -> OR
-- On SHL reduce production annotationToken -> OR
-- On SEMICOLON reduce production annotationToken -> OR
-- On SELECT reduce production annotationToken -> OR
-- On R_PAREN reduce production annotationToken -> OR
-- On R_BRACKET reduce production annotationToken -> OR
-- On R_BRACE reduce production annotationToken -> OR
-- On R_ANGLE reduce production annotationToken -> OR
-- On RETURN reduce production annotationToken -> OR
-- On RANGE reduce production annotationToken -> OR
-- On QUESTION reduce production annotationToken -> OR
-- On PRAGMA_END reduce production annotationToken -> OR
-- On PRAGMA reduce production annotationToken -> OR
-- On PLUS_SAT reduce production annotationToken -> OR
-- On PLUSPLUS reduce production annotationToken -> OR
-- On PLUS reduce production annotationToken -> OR
-- On PARSER reduce production annotationToken -> OR
-- On PACKAGE reduce production annotationToken -> OR
-- On OUT reduce production annotationToken -> OR
-- On OR reduce production annotationToken -> OR
-- On NOT reduce production annotationToken -> OR
-- On NE reduce production annotationToken -> OR
-- On NAME reduce production annotationToken -> OR
-- On MUL reduce production annotationToken -> OR
-- On MOD reduce production annotationToken -> OR
-- On MINUS_SAT reduce production annotationToken -> OR
-- On MINUS reduce production annotationToken -> OR
-- On MATCH_KIND reduce production annotationToken -> OR
-- On MASK reduce production annotationToken -> OR
-- On L_PAREN reduce production annotationToken -> OR
-- On L_BRACKET reduce production annotationToken -> OR
-- On L_BRACE reduce production annotationToken -> OR
-- On L_ANGLE reduce production annotationToken -> OR
-- On LE reduce production annotationToken -> OR
-- On KEY reduce production annotationToken -> OR
-- On INTEGER reduce production annotationToken -> OR
-- On INT reduce production annotationToken -> OR
-- On INOUT reduce production annotationToken -> OR
-- On IN reduce production annotationToken -> OR
-- On IF reduce production annotationToken -> OR
-- On HEADER_UNION reduce production annotationToken -> OR
-- On HEADER reduce production annotationToken -> OR
-- On GE reduce production annotationToken -> OR
-- On FALSE reduce production annotationToken -> OR
-- On EXTERN reduce production annotationToken -> OR
-- On EXIT reduce production annotationToken -> OR
-- On ERROR reduce production annotationToken -> OR
-- On EQ reduce production annotationToken -> OR
-- On ENUM reduce production annotationToken -> OR
-- On ENTRIES reduce production annotationToken -> OR
-- On ELSE reduce production annotationToken -> OR
-- On DOT reduce production annotationToken -> OR
-- On DONTCARE reduce production annotationToken -> OR
-- On DIV reduce production annotationToken -> OR
-- On DEFAULT reduce production annotationToken -> OR
-- On CONTROL reduce production annotationToken -> OR
-- On CONST reduce production annotationToken -> OR
-- On COMPLEMENT reduce production annotationToken -> OR
-- On COMMA reduce production annotationToken -> OR
-- On COLON reduce production annotationToken -> OR
-- On BOOL reduce production annotationToken -> OR
-- On BIT_XOR reduce production annotationToken -> OR
-- On BIT_OR reduce production annotationToken -> OR
-- On BIT_AND reduce production annotationToken -> OR
-- On BIT reduce production annotationToken -> OR
-- On AT reduce production annotationToken -> OR
-- On ASSIGN reduce production annotationToken -> OR
-- On APPLY reduce production annotationToken -> OR
-- On AND reduce production annotationToken -> OR
-- On ACTIONS reduce production annotationToken -> OR
-- On ACTION reduce production annotationToken -> OR
-- On ABSTRACT reduce production annotationToken -> OR

State 242:
annotationToken -> NOT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> NOT
-- On VARBIT reduce production annotationToken -> NOT
-- On VALUESET reduce production annotationToken -> NOT
-- On TYPEDEF reduce production annotationToken -> NOT
-- On TYPE reduce production annotationToken -> NOT
-- On TUPLE reduce production annotationToken -> NOT
-- On TRUE reduce production annotationToken -> NOT
-- On TRANSITION reduce production annotationToken -> NOT
-- On TABLE reduce production annotationToken -> NOT
-- On SWITCH reduce production annotationToken -> NOT
-- On STRUCT reduce production annotationToken -> NOT
-- On STRING_LITERAL reduce production annotationToken -> NOT
-- On STRING reduce production annotationToken -> NOT
-- On STATE reduce production annotationToken -> NOT
-- On SHL reduce production annotationToken -> NOT
-- On SEMICOLON reduce production annotationToken -> NOT
-- On SELECT reduce production annotationToken -> NOT
-- On R_PAREN reduce production annotationToken -> NOT
-- On R_BRACKET reduce production annotationToken -> NOT
-- On R_BRACE reduce production annotationToken -> NOT
-- On R_ANGLE reduce production annotationToken -> NOT
-- On RETURN reduce production annotationToken -> NOT
-- On RANGE reduce production annotationToken -> NOT
-- On QUESTION reduce production annotationToken -> NOT
-- On PRAGMA_END reduce production annotationToken -> NOT
-- On PRAGMA reduce production annotationToken -> NOT
-- On PLUS_SAT reduce production annotationToken -> NOT
-- On PLUSPLUS reduce production annotationToken -> NOT
-- On PLUS reduce production annotationToken -> NOT
-- On PARSER reduce production annotationToken -> NOT
-- On PACKAGE reduce production annotationToken -> NOT
-- On OUT reduce production annotationToken -> NOT
-- On OR reduce production annotationToken -> NOT
-- On NOT reduce production annotationToken -> NOT
-- On NE reduce production annotationToken -> NOT
-- On NAME reduce production annotationToken -> NOT
-- On MUL reduce production annotationToken -> NOT
-- On MOD reduce production annotationToken -> NOT
-- On MINUS_SAT reduce production annotationToken -> NOT
-- On MINUS reduce production annotationToken -> NOT
-- On MATCH_KIND reduce production annotationToken -> NOT
-- On MASK reduce production annotationToken -> NOT
-- On L_PAREN reduce production annotationToken -> NOT
-- On L_BRACKET reduce production annotationToken -> NOT
-- On L_BRACE reduce production annotationToken -> NOT
-- On L_ANGLE reduce production annotationToken -> NOT
-- On LE reduce production annotationToken -> NOT
-- On KEY reduce production annotationToken -> NOT
-- On INTEGER reduce production annotationToken -> NOT
-- On INT reduce production annotationToken -> NOT
-- On INOUT reduce production annotationToken -> NOT
-- On IN reduce production annotationToken -> NOT
-- On IF reduce production annotationToken -> NOT
-- On HEADER_UNION reduce production annotationToken -> NOT
-- On HEADER reduce production annotationToken -> NOT
-- On GE reduce production annotationToken -> NOT
-- On FALSE reduce production annotationToken -> NOT
-- On EXTERN reduce production annotationToken -> NOT
-- On EXIT reduce production annotationToken -> NOT
-- On ERROR reduce production annotationToken -> NOT
-- On EQ reduce production annotationToken -> NOT
-- On ENUM reduce production annotationToken -> NOT
-- On ENTRIES reduce production annotationToken -> NOT
-- On ELSE reduce production annotationToken -> NOT
-- On DOT reduce production annotationToken -> NOT
-- On DONTCARE reduce production annotationToken -> NOT
-- On DIV reduce production annotationToken -> NOT
-- On DEFAULT reduce production annotationToken -> NOT
-- On CONTROL reduce production annotationToken -> NOT
-- On CONST reduce production annotationToken -> NOT
-- On COMPLEMENT reduce production annotationToken -> NOT
-- On COMMA reduce production annotationToken -> NOT
-- On COLON reduce production annotationToken -> NOT
-- On BOOL reduce production annotationToken -> NOT
-- On BIT_XOR reduce production annotationToken -> NOT
-- On BIT_OR reduce production annotationToken -> NOT
-- On BIT_AND reduce production annotationToken -> NOT
-- On BIT reduce production annotationToken -> NOT
-- On AT reduce production annotationToken -> NOT
-- On ASSIGN reduce production annotationToken -> NOT
-- On APPLY reduce production annotationToken -> NOT
-- On AND reduce production annotationToken -> NOT
-- On ACTIONS reduce production annotationToken -> NOT
-- On ACTION reduce production annotationToken -> NOT
-- On ABSTRACT reduce production annotationToken -> NOT

State 243:
annotationToken -> NE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> NE
-- On VARBIT reduce production annotationToken -> NE
-- On VALUESET reduce production annotationToken -> NE
-- On TYPEDEF reduce production annotationToken -> NE
-- On TYPE reduce production annotationToken -> NE
-- On TUPLE reduce production annotationToken -> NE
-- On TRUE reduce production annotationToken -> NE
-- On TRANSITION reduce production annotationToken -> NE
-- On TABLE reduce production annotationToken -> NE
-- On SWITCH reduce production annotationToken -> NE
-- On STRUCT reduce production annotationToken -> NE
-- On STRING_LITERAL reduce production annotationToken -> NE
-- On STRING reduce production annotationToken -> NE
-- On STATE reduce production annotationToken -> NE
-- On SHL reduce production annotationToken -> NE
-- On SEMICOLON reduce production annotationToken -> NE
-- On SELECT reduce production annotationToken -> NE
-- On R_PAREN reduce production annotationToken -> NE
-- On R_BRACKET reduce production annotationToken -> NE
-- On R_BRACE reduce production annotationToken -> NE
-- On R_ANGLE reduce production annotationToken -> NE
-- On RETURN reduce production annotationToken -> NE
-- On RANGE reduce production annotationToken -> NE
-- On QUESTION reduce production annotationToken -> NE
-- On PRAGMA_END reduce production annotationToken -> NE
-- On PRAGMA reduce production annotationToken -> NE
-- On PLUS_SAT reduce production annotationToken -> NE
-- On PLUSPLUS reduce production annotationToken -> NE
-- On PLUS reduce production annotationToken -> NE
-- On PARSER reduce production annotationToken -> NE
-- On PACKAGE reduce production annotationToken -> NE
-- On OUT reduce production annotationToken -> NE
-- On OR reduce production annotationToken -> NE
-- On NOT reduce production annotationToken -> NE
-- On NE reduce production annotationToken -> NE
-- On NAME reduce production annotationToken -> NE
-- On MUL reduce production annotationToken -> NE
-- On MOD reduce production annotationToken -> NE
-- On MINUS_SAT reduce production annotationToken -> NE
-- On MINUS reduce production annotationToken -> NE
-- On MATCH_KIND reduce production annotationToken -> NE
-- On MASK reduce production annotationToken -> NE
-- On L_PAREN reduce production annotationToken -> NE
-- On L_BRACKET reduce production annotationToken -> NE
-- On L_BRACE reduce production annotationToken -> NE
-- On L_ANGLE reduce production annotationToken -> NE
-- On LE reduce production annotationToken -> NE
-- On KEY reduce production annotationToken -> NE
-- On INTEGER reduce production annotationToken -> NE
-- On INT reduce production annotationToken -> NE
-- On INOUT reduce production annotationToken -> NE
-- On IN reduce production annotationToken -> NE
-- On IF reduce production annotationToken -> NE
-- On HEADER_UNION reduce production annotationToken -> NE
-- On HEADER reduce production annotationToken -> NE
-- On GE reduce production annotationToken -> NE
-- On FALSE reduce production annotationToken -> NE
-- On EXTERN reduce production annotationToken -> NE
-- On EXIT reduce production annotationToken -> NE
-- On ERROR reduce production annotationToken -> NE
-- On EQ reduce production annotationToken -> NE
-- On ENUM reduce production annotationToken -> NE
-- On ENTRIES reduce production annotationToken -> NE
-- On ELSE reduce production annotationToken -> NE
-- On DOT reduce production annotationToken -> NE
-- On DONTCARE reduce production annotationToken -> NE
-- On DIV reduce production annotationToken -> NE
-- On DEFAULT reduce production annotationToken -> NE
-- On CONTROL reduce production annotationToken -> NE
-- On CONST reduce production annotationToken -> NE
-- On COMPLEMENT reduce production annotationToken -> NE
-- On COMMA reduce production annotationToken -> NE
-- On COLON reduce production annotationToken -> NE
-- On BOOL reduce production annotationToken -> NE
-- On BIT_XOR reduce production annotationToken -> NE
-- On BIT_OR reduce production annotationToken -> NE
-- On BIT_AND reduce production annotationToken -> NE
-- On BIT reduce production annotationToken -> NE
-- On AT reduce production annotationToken -> NE
-- On ASSIGN reduce production annotationToken -> NE
-- On APPLY reduce production annotationToken -> NE
-- On AND reduce production annotationToken -> NE
-- On ACTIONS reduce production annotationToken -> NE
-- On ACTION reduce production annotationToken -> NE
-- On ABSTRACT reduce production annotationToken -> NE

State 244:
annotationToken -> NAME . IDENTIFIER [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
annotationToken -> NAME . TYPENAME [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On TYPENAME shift to state 245
-- On IDENTIFIER shift to state 246

State 245:
annotationToken -> NAME TYPENAME . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> NAME TYPENAME
-- On VARBIT reduce production annotationToken -> NAME TYPENAME
-- On VALUESET reduce production annotationToken -> NAME TYPENAME
-- On TYPEDEF reduce production annotationToken -> NAME TYPENAME
-- On TYPE reduce production annotationToken -> NAME TYPENAME
-- On TUPLE reduce production annotationToken -> NAME TYPENAME
-- On TRUE reduce production annotationToken -> NAME TYPENAME
-- On TRANSITION reduce production annotationToken -> NAME TYPENAME
-- On TABLE reduce production annotationToken -> NAME TYPENAME
-- On SWITCH reduce production annotationToken -> NAME TYPENAME
-- On STRUCT reduce production annotationToken -> NAME TYPENAME
-- On STRING_LITERAL reduce production annotationToken -> NAME TYPENAME
-- On STRING reduce production annotationToken -> NAME TYPENAME
-- On STATE reduce production annotationToken -> NAME TYPENAME
-- On SHL reduce production annotationToken -> NAME TYPENAME
-- On SEMICOLON reduce production annotationToken -> NAME TYPENAME
-- On SELECT reduce production annotationToken -> NAME TYPENAME
-- On R_PAREN reduce production annotationToken -> NAME TYPENAME
-- On R_BRACKET reduce production annotationToken -> NAME TYPENAME
-- On R_BRACE reduce production annotationToken -> NAME TYPENAME
-- On R_ANGLE reduce production annotationToken -> NAME TYPENAME
-- On RETURN reduce production annotationToken -> NAME TYPENAME
-- On RANGE reduce production annotationToken -> NAME TYPENAME
-- On QUESTION reduce production annotationToken -> NAME TYPENAME
-- On PRAGMA_END reduce production annotationToken -> NAME TYPENAME
-- On PRAGMA reduce production annotationToken -> NAME TYPENAME
-- On PLUS_SAT reduce production annotationToken -> NAME TYPENAME
-- On PLUSPLUS reduce production annotationToken -> NAME TYPENAME
-- On PLUS reduce production annotationToken -> NAME TYPENAME
-- On PARSER reduce production annotationToken -> NAME TYPENAME
-- On PACKAGE reduce production annotationToken -> NAME TYPENAME
-- On OUT reduce production annotationToken -> NAME TYPENAME
-- On OR reduce production annotationToken -> NAME TYPENAME
-- On NOT reduce production annotationToken -> NAME TYPENAME
-- On NE reduce production annotationToken -> NAME TYPENAME
-- On NAME reduce production annotationToken -> NAME TYPENAME
-- On MUL reduce production annotationToken -> NAME TYPENAME
-- On MOD reduce production annotationToken -> NAME TYPENAME
-- On MINUS_SAT reduce production annotationToken -> NAME TYPENAME
-- On MINUS reduce production annotationToken -> NAME TYPENAME
-- On MATCH_KIND reduce production annotationToken -> NAME TYPENAME
-- On MASK reduce production annotationToken -> NAME TYPENAME
-- On L_PAREN reduce production annotationToken -> NAME TYPENAME
-- On L_BRACKET reduce production annotationToken -> NAME TYPENAME
-- On L_BRACE reduce production annotationToken -> NAME TYPENAME
-- On L_ANGLE reduce production annotationToken -> NAME TYPENAME
-- On LE reduce production annotationToken -> NAME TYPENAME
-- On KEY reduce production annotationToken -> NAME TYPENAME
-- On INTEGER reduce production annotationToken -> NAME TYPENAME
-- On INT reduce production annotationToken -> NAME TYPENAME
-- On INOUT reduce production annotationToken -> NAME TYPENAME
-- On IN reduce production annotationToken -> NAME TYPENAME
-- On IF reduce production annotationToken -> NAME TYPENAME
-- On HEADER_UNION reduce production annotationToken -> NAME TYPENAME
-- On HEADER reduce production annotationToken -> NAME TYPENAME
-- On GE reduce production annotationToken -> NAME TYPENAME
-- On FALSE reduce production annotationToken -> NAME TYPENAME
-- On EXTERN reduce production annotationToken -> NAME TYPENAME
-- On EXIT reduce production annotationToken -> NAME TYPENAME
-- On ERROR reduce production annotationToken -> NAME TYPENAME
-- On EQ reduce production annotationToken -> NAME TYPENAME
-- On ENUM reduce production annotationToken -> NAME TYPENAME
-- On ENTRIES reduce production annotationToken -> NAME TYPENAME
-- On ELSE reduce production annotationToken -> NAME TYPENAME
-- On DOT reduce production annotationToken -> NAME TYPENAME
-- On DONTCARE reduce production annotationToken -> NAME TYPENAME
-- On DIV reduce production annotationToken -> NAME TYPENAME
-- On DEFAULT reduce production annotationToken -> NAME TYPENAME
-- On CONTROL reduce production annotationToken -> NAME TYPENAME
-- On CONST reduce production annotationToken -> NAME TYPENAME
-- On COMPLEMENT reduce production annotationToken -> NAME TYPENAME
-- On COMMA reduce production annotationToken -> NAME TYPENAME
-- On COLON reduce production annotationToken -> NAME TYPENAME
-- On BOOL reduce production annotationToken -> NAME TYPENAME
-- On BIT_XOR reduce production annotationToken -> NAME TYPENAME
-- On BIT_OR reduce production annotationToken -> NAME TYPENAME
-- On BIT_AND reduce production annotationToken -> NAME TYPENAME
-- On BIT reduce production annotationToken -> NAME TYPENAME
-- On AT reduce production annotationToken -> NAME TYPENAME
-- On ASSIGN reduce production annotationToken -> NAME TYPENAME
-- On APPLY reduce production annotationToken -> NAME TYPENAME
-- On AND reduce production annotationToken -> NAME TYPENAME
-- On ACTIONS reduce production annotationToken -> NAME TYPENAME
-- On ACTION reduce production annotationToken -> NAME TYPENAME
-- On ABSTRACT reduce production annotationToken -> NAME TYPENAME

State 246:
annotationToken -> NAME IDENTIFIER . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> NAME IDENTIFIER
-- On VARBIT reduce production annotationToken -> NAME IDENTIFIER
-- On VALUESET reduce production annotationToken -> NAME IDENTIFIER
-- On TYPEDEF reduce production annotationToken -> NAME IDENTIFIER
-- On TYPE reduce production annotationToken -> NAME IDENTIFIER
-- On TUPLE reduce production annotationToken -> NAME IDENTIFIER
-- On TRUE reduce production annotationToken -> NAME IDENTIFIER
-- On TRANSITION reduce production annotationToken -> NAME IDENTIFIER
-- On TABLE reduce production annotationToken -> NAME IDENTIFIER
-- On SWITCH reduce production annotationToken -> NAME IDENTIFIER
-- On STRUCT reduce production annotationToken -> NAME IDENTIFIER
-- On STRING_LITERAL reduce production annotationToken -> NAME IDENTIFIER
-- On STRING reduce production annotationToken -> NAME IDENTIFIER
-- On STATE reduce production annotationToken -> NAME IDENTIFIER
-- On SHL reduce production annotationToken -> NAME IDENTIFIER
-- On SEMICOLON reduce production annotationToken -> NAME IDENTIFIER
-- On SELECT reduce production annotationToken -> NAME IDENTIFIER
-- On R_PAREN reduce production annotationToken -> NAME IDENTIFIER
-- On R_BRACKET reduce production annotationToken -> NAME IDENTIFIER
-- On R_BRACE reduce production annotationToken -> NAME IDENTIFIER
-- On R_ANGLE reduce production annotationToken -> NAME IDENTIFIER
-- On RETURN reduce production annotationToken -> NAME IDENTIFIER
-- On RANGE reduce production annotationToken -> NAME IDENTIFIER
-- On QUESTION reduce production annotationToken -> NAME IDENTIFIER
-- On PRAGMA_END reduce production annotationToken -> NAME IDENTIFIER
-- On PRAGMA reduce production annotationToken -> NAME IDENTIFIER
-- On PLUS_SAT reduce production annotationToken -> NAME IDENTIFIER
-- On PLUSPLUS reduce production annotationToken -> NAME IDENTIFIER
-- On PLUS reduce production annotationToken -> NAME IDENTIFIER
-- On PARSER reduce production annotationToken -> NAME IDENTIFIER
-- On PACKAGE reduce production annotationToken -> NAME IDENTIFIER
-- On OUT reduce production annotationToken -> NAME IDENTIFIER
-- On OR reduce production annotationToken -> NAME IDENTIFIER
-- On NOT reduce production annotationToken -> NAME IDENTIFIER
-- On NE reduce production annotationToken -> NAME IDENTIFIER
-- On NAME reduce production annotationToken -> NAME IDENTIFIER
-- On MUL reduce production annotationToken -> NAME IDENTIFIER
-- On MOD reduce production annotationToken -> NAME IDENTIFIER
-- On MINUS_SAT reduce production annotationToken -> NAME IDENTIFIER
-- On MINUS reduce production annotationToken -> NAME IDENTIFIER
-- On MATCH_KIND reduce production annotationToken -> NAME IDENTIFIER
-- On MASK reduce production annotationToken -> NAME IDENTIFIER
-- On L_PAREN reduce production annotationToken -> NAME IDENTIFIER
-- On L_BRACKET reduce production annotationToken -> NAME IDENTIFIER
-- On L_BRACE reduce production annotationToken -> NAME IDENTIFIER
-- On L_ANGLE reduce production annotationToken -> NAME IDENTIFIER
-- On LE reduce production annotationToken -> NAME IDENTIFIER
-- On KEY reduce production annotationToken -> NAME IDENTIFIER
-- On INTEGER reduce production annotationToken -> NAME IDENTIFIER
-- On INT reduce production annotationToken -> NAME IDENTIFIER
-- On INOUT reduce production annotationToken -> NAME IDENTIFIER
-- On IN reduce production annotationToken -> NAME IDENTIFIER
-- On IF reduce production annotationToken -> NAME IDENTIFIER
-- On HEADER_UNION reduce production annotationToken -> NAME IDENTIFIER
-- On HEADER reduce production annotationToken -> NAME IDENTIFIER
-- On GE reduce production annotationToken -> NAME IDENTIFIER
-- On FALSE reduce production annotationToken -> NAME IDENTIFIER
-- On EXTERN reduce production annotationToken -> NAME IDENTIFIER
-- On EXIT reduce production annotationToken -> NAME IDENTIFIER
-- On ERROR reduce production annotationToken -> NAME IDENTIFIER
-- On EQ reduce production annotationToken -> NAME IDENTIFIER
-- On ENUM reduce production annotationToken -> NAME IDENTIFIER
-- On ENTRIES reduce production annotationToken -> NAME IDENTIFIER
-- On ELSE reduce production annotationToken -> NAME IDENTIFIER
-- On DOT reduce production annotationToken -> NAME IDENTIFIER
-- On DONTCARE reduce production annotationToken -> NAME IDENTIFIER
-- On DIV reduce production annotationToken -> NAME IDENTIFIER
-- On DEFAULT reduce production annotationToken -> NAME IDENTIFIER
-- On CONTROL reduce production annotationToken -> NAME IDENTIFIER
-- On CONST reduce production annotationToken -> NAME IDENTIFIER
-- On COMPLEMENT reduce production annotationToken -> NAME IDENTIFIER
-- On COMMA reduce production annotationToken -> NAME IDENTIFIER
-- On COLON reduce production annotationToken -> NAME IDENTIFIER
-- On BOOL reduce production annotationToken -> NAME IDENTIFIER
-- On BIT_XOR reduce production annotationToken -> NAME IDENTIFIER
-- On BIT_OR reduce production annotationToken -> NAME IDENTIFIER
-- On BIT_AND reduce production annotationToken -> NAME IDENTIFIER
-- On BIT reduce production annotationToken -> NAME IDENTIFIER
-- On AT reduce production annotationToken -> NAME IDENTIFIER
-- On ASSIGN reduce production annotationToken -> NAME IDENTIFIER
-- On APPLY reduce production annotationToken -> NAME IDENTIFIER
-- On AND reduce production annotationToken -> NAME IDENTIFIER
-- On ACTIONS reduce production annotationToken -> NAME IDENTIFIER
-- On ACTION reduce production annotationToken -> NAME IDENTIFIER
-- On ABSTRACT reduce production annotationToken -> NAME IDENTIFIER

State 247:
annotationToken -> MUL . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> MUL
-- On VARBIT reduce production annotationToken -> MUL
-- On VALUESET reduce production annotationToken -> MUL
-- On TYPEDEF reduce production annotationToken -> MUL
-- On TYPE reduce production annotationToken -> MUL
-- On TUPLE reduce production annotationToken -> MUL
-- On TRUE reduce production annotationToken -> MUL
-- On TRANSITION reduce production annotationToken -> MUL
-- On TABLE reduce production annotationToken -> MUL
-- On SWITCH reduce production annotationToken -> MUL
-- On STRUCT reduce production annotationToken -> MUL
-- On STRING_LITERAL reduce production annotationToken -> MUL
-- On STRING reduce production annotationToken -> MUL
-- On STATE reduce production annotationToken -> MUL
-- On SHL reduce production annotationToken -> MUL
-- On SEMICOLON reduce production annotationToken -> MUL
-- On SELECT reduce production annotationToken -> MUL
-- On R_PAREN reduce production annotationToken -> MUL
-- On R_BRACKET reduce production annotationToken -> MUL
-- On R_BRACE reduce production annotationToken -> MUL
-- On R_ANGLE reduce production annotationToken -> MUL
-- On RETURN reduce production annotationToken -> MUL
-- On RANGE reduce production annotationToken -> MUL
-- On QUESTION reduce production annotationToken -> MUL
-- On PRAGMA_END reduce production annotationToken -> MUL
-- On PRAGMA reduce production annotationToken -> MUL
-- On PLUS_SAT reduce production annotationToken -> MUL
-- On PLUSPLUS reduce production annotationToken -> MUL
-- On PLUS reduce production annotationToken -> MUL
-- On PARSER reduce production annotationToken -> MUL
-- On PACKAGE reduce production annotationToken -> MUL
-- On OUT reduce production annotationToken -> MUL
-- On OR reduce production annotationToken -> MUL
-- On NOT reduce production annotationToken -> MUL
-- On NE reduce production annotationToken -> MUL
-- On NAME reduce production annotationToken -> MUL
-- On MUL reduce production annotationToken -> MUL
-- On MOD reduce production annotationToken -> MUL
-- On MINUS_SAT reduce production annotationToken -> MUL
-- On MINUS reduce production annotationToken -> MUL
-- On MATCH_KIND reduce production annotationToken -> MUL
-- On MASK reduce production annotationToken -> MUL
-- On L_PAREN reduce production annotationToken -> MUL
-- On L_BRACKET reduce production annotationToken -> MUL
-- On L_BRACE reduce production annotationToken -> MUL
-- On L_ANGLE reduce production annotationToken -> MUL
-- On LE reduce production annotationToken -> MUL
-- On KEY reduce production annotationToken -> MUL
-- On INTEGER reduce production annotationToken -> MUL
-- On INT reduce production annotationToken -> MUL
-- On INOUT reduce production annotationToken -> MUL
-- On IN reduce production annotationToken -> MUL
-- On IF reduce production annotationToken -> MUL
-- On HEADER_UNION reduce production annotationToken -> MUL
-- On HEADER reduce production annotationToken -> MUL
-- On GE reduce production annotationToken -> MUL
-- On FALSE reduce production annotationToken -> MUL
-- On EXTERN reduce production annotationToken -> MUL
-- On EXIT reduce production annotationToken -> MUL
-- On ERROR reduce production annotationToken -> MUL
-- On EQ reduce production annotationToken -> MUL
-- On ENUM reduce production annotationToken -> MUL
-- On ENTRIES reduce production annotationToken -> MUL
-- On ELSE reduce production annotationToken -> MUL
-- On DOT reduce production annotationToken -> MUL
-- On DONTCARE reduce production annotationToken -> MUL
-- On DIV reduce production annotationToken -> MUL
-- On DEFAULT reduce production annotationToken -> MUL
-- On CONTROL reduce production annotationToken -> MUL
-- On CONST reduce production annotationToken -> MUL
-- On COMPLEMENT reduce production annotationToken -> MUL
-- On COMMA reduce production annotationToken -> MUL
-- On COLON reduce production annotationToken -> MUL
-- On BOOL reduce production annotationToken -> MUL
-- On BIT_XOR reduce production annotationToken -> MUL
-- On BIT_OR reduce production annotationToken -> MUL
-- On BIT_AND reduce production annotationToken -> MUL
-- On BIT reduce production annotationToken -> MUL
-- On AT reduce production annotationToken -> MUL
-- On ASSIGN reduce production annotationToken -> MUL
-- On APPLY reduce production annotationToken -> MUL
-- On AND reduce production annotationToken -> MUL
-- On ACTIONS reduce production annotationToken -> MUL
-- On ACTION reduce production annotationToken -> MUL
-- On ABSTRACT reduce production annotationToken -> MUL

State 248:
annotationToken -> MOD . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> MOD
-- On VARBIT reduce production annotationToken -> MOD
-- On VALUESET reduce production annotationToken -> MOD
-- On TYPEDEF reduce production annotationToken -> MOD
-- On TYPE reduce production annotationToken -> MOD
-- On TUPLE reduce production annotationToken -> MOD
-- On TRUE reduce production annotationToken -> MOD
-- On TRANSITION reduce production annotationToken -> MOD
-- On TABLE reduce production annotationToken -> MOD
-- On SWITCH reduce production annotationToken -> MOD
-- On STRUCT reduce production annotationToken -> MOD
-- On STRING_LITERAL reduce production annotationToken -> MOD
-- On STRING reduce production annotationToken -> MOD
-- On STATE reduce production annotationToken -> MOD
-- On SHL reduce production annotationToken -> MOD
-- On SEMICOLON reduce production annotationToken -> MOD
-- On SELECT reduce production annotationToken -> MOD
-- On R_PAREN reduce production annotationToken -> MOD
-- On R_BRACKET reduce production annotationToken -> MOD
-- On R_BRACE reduce production annotationToken -> MOD
-- On R_ANGLE reduce production annotationToken -> MOD
-- On RETURN reduce production annotationToken -> MOD
-- On RANGE reduce production annotationToken -> MOD
-- On QUESTION reduce production annotationToken -> MOD
-- On PRAGMA_END reduce production annotationToken -> MOD
-- On PRAGMA reduce production annotationToken -> MOD
-- On PLUS_SAT reduce production annotationToken -> MOD
-- On PLUSPLUS reduce production annotationToken -> MOD
-- On PLUS reduce production annotationToken -> MOD
-- On PARSER reduce production annotationToken -> MOD
-- On PACKAGE reduce production annotationToken -> MOD
-- On OUT reduce production annotationToken -> MOD
-- On OR reduce production annotationToken -> MOD
-- On NOT reduce production annotationToken -> MOD
-- On NE reduce production annotationToken -> MOD
-- On NAME reduce production annotationToken -> MOD
-- On MUL reduce production annotationToken -> MOD
-- On MOD reduce production annotationToken -> MOD
-- On MINUS_SAT reduce production annotationToken -> MOD
-- On MINUS reduce production annotationToken -> MOD
-- On MATCH_KIND reduce production annotationToken -> MOD
-- On MASK reduce production annotationToken -> MOD
-- On L_PAREN reduce production annotationToken -> MOD
-- On L_BRACKET reduce production annotationToken -> MOD
-- On L_BRACE reduce production annotationToken -> MOD
-- On L_ANGLE reduce production annotationToken -> MOD
-- On LE reduce production annotationToken -> MOD
-- On KEY reduce production annotationToken -> MOD
-- On INTEGER reduce production annotationToken -> MOD
-- On INT reduce production annotationToken -> MOD
-- On INOUT reduce production annotationToken -> MOD
-- On IN reduce production annotationToken -> MOD
-- On IF reduce production annotationToken -> MOD
-- On HEADER_UNION reduce production annotationToken -> MOD
-- On HEADER reduce production annotationToken -> MOD
-- On GE reduce production annotationToken -> MOD
-- On FALSE reduce production annotationToken -> MOD
-- On EXTERN reduce production annotationToken -> MOD
-- On EXIT reduce production annotationToken -> MOD
-- On ERROR reduce production annotationToken -> MOD
-- On EQ reduce production annotationToken -> MOD
-- On ENUM reduce production annotationToken -> MOD
-- On ENTRIES reduce production annotationToken -> MOD
-- On ELSE reduce production annotationToken -> MOD
-- On DOT reduce production annotationToken -> MOD
-- On DONTCARE reduce production annotationToken -> MOD
-- On DIV reduce production annotationToken -> MOD
-- On DEFAULT reduce production annotationToken -> MOD
-- On CONTROL reduce production annotationToken -> MOD
-- On CONST reduce production annotationToken -> MOD
-- On COMPLEMENT reduce production annotationToken -> MOD
-- On COMMA reduce production annotationToken -> MOD
-- On COLON reduce production annotationToken -> MOD
-- On BOOL reduce production annotationToken -> MOD
-- On BIT_XOR reduce production annotationToken -> MOD
-- On BIT_OR reduce production annotationToken -> MOD
-- On BIT_AND reduce production annotationToken -> MOD
-- On BIT reduce production annotationToken -> MOD
-- On AT reduce production annotationToken -> MOD
-- On ASSIGN reduce production annotationToken -> MOD
-- On APPLY reduce production annotationToken -> MOD
-- On AND reduce production annotationToken -> MOD
-- On ACTIONS reduce production annotationToken -> MOD
-- On ACTION reduce production annotationToken -> MOD
-- On ABSTRACT reduce production annotationToken -> MOD

State 249:
annotationToken -> MINUS_SAT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> MINUS_SAT
-- On VARBIT reduce production annotationToken -> MINUS_SAT
-- On VALUESET reduce production annotationToken -> MINUS_SAT
-- On TYPEDEF reduce production annotationToken -> MINUS_SAT
-- On TYPE reduce production annotationToken -> MINUS_SAT
-- On TUPLE reduce production annotationToken -> MINUS_SAT
-- On TRUE reduce production annotationToken -> MINUS_SAT
-- On TRANSITION reduce production annotationToken -> MINUS_SAT
-- On TABLE reduce production annotationToken -> MINUS_SAT
-- On SWITCH reduce production annotationToken -> MINUS_SAT
-- On STRUCT reduce production annotationToken -> MINUS_SAT
-- On STRING_LITERAL reduce production annotationToken -> MINUS_SAT
-- On STRING reduce production annotationToken -> MINUS_SAT
-- On STATE reduce production annotationToken -> MINUS_SAT
-- On SHL reduce production annotationToken -> MINUS_SAT
-- On SEMICOLON reduce production annotationToken -> MINUS_SAT
-- On SELECT reduce production annotationToken -> MINUS_SAT
-- On R_PAREN reduce production annotationToken -> MINUS_SAT
-- On R_BRACKET reduce production annotationToken -> MINUS_SAT
-- On R_BRACE reduce production annotationToken -> MINUS_SAT
-- On R_ANGLE reduce production annotationToken -> MINUS_SAT
-- On RETURN reduce production annotationToken -> MINUS_SAT
-- On RANGE reduce production annotationToken -> MINUS_SAT
-- On QUESTION reduce production annotationToken -> MINUS_SAT
-- On PRAGMA_END reduce production annotationToken -> MINUS_SAT
-- On PRAGMA reduce production annotationToken -> MINUS_SAT
-- On PLUS_SAT reduce production annotationToken -> MINUS_SAT
-- On PLUSPLUS reduce production annotationToken -> MINUS_SAT
-- On PLUS reduce production annotationToken -> MINUS_SAT
-- On PARSER reduce production annotationToken -> MINUS_SAT
-- On PACKAGE reduce production annotationToken -> MINUS_SAT
-- On OUT reduce production annotationToken -> MINUS_SAT
-- On OR reduce production annotationToken -> MINUS_SAT
-- On NOT reduce production annotationToken -> MINUS_SAT
-- On NE reduce production annotationToken -> MINUS_SAT
-- On NAME reduce production annotationToken -> MINUS_SAT
-- On MUL reduce production annotationToken -> MINUS_SAT
-- On MOD reduce production annotationToken -> MINUS_SAT
-- On MINUS_SAT reduce production annotationToken -> MINUS_SAT
-- On MINUS reduce production annotationToken -> MINUS_SAT
-- On MATCH_KIND reduce production annotationToken -> MINUS_SAT
-- On MASK reduce production annotationToken -> MINUS_SAT
-- On L_PAREN reduce production annotationToken -> MINUS_SAT
-- On L_BRACKET reduce production annotationToken -> MINUS_SAT
-- On L_BRACE reduce production annotationToken -> MINUS_SAT
-- On L_ANGLE reduce production annotationToken -> MINUS_SAT
-- On LE reduce production annotationToken -> MINUS_SAT
-- On KEY reduce production annotationToken -> MINUS_SAT
-- On INTEGER reduce production annotationToken -> MINUS_SAT
-- On INT reduce production annotationToken -> MINUS_SAT
-- On INOUT reduce production annotationToken -> MINUS_SAT
-- On IN reduce production annotationToken -> MINUS_SAT
-- On IF reduce production annotationToken -> MINUS_SAT
-- On HEADER_UNION reduce production annotationToken -> MINUS_SAT
-- On HEADER reduce production annotationToken -> MINUS_SAT
-- On GE reduce production annotationToken -> MINUS_SAT
-- On FALSE reduce production annotationToken -> MINUS_SAT
-- On EXTERN reduce production annotationToken -> MINUS_SAT
-- On EXIT reduce production annotationToken -> MINUS_SAT
-- On ERROR reduce production annotationToken -> MINUS_SAT
-- On EQ reduce production annotationToken -> MINUS_SAT
-- On ENUM reduce production annotationToken -> MINUS_SAT
-- On ENTRIES reduce production annotationToken -> MINUS_SAT
-- On ELSE reduce production annotationToken -> MINUS_SAT
-- On DOT reduce production annotationToken -> MINUS_SAT
-- On DONTCARE reduce production annotationToken -> MINUS_SAT
-- On DIV reduce production annotationToken -> MINUS_SAT
-- On DEFAULT reduce production annotationToken -> MINUS_SAT
-- On CONTROL reduce production annotationToken -> MINUS_SAT
-- On CONST reduce production annotationToken -> MINUS_SAT
-- On COMPLEMENT reduce production annotationToken -> MINUS_SAT
-- On COMMA reduce production annotationToken -> MINUS_SAT
-- On COLON reduce production annotationToken -> MINUS_SAT
-- On BOOL reduce production annotationToken -> MINUS_SAT
-- On BIT_XOR reduce production annotationToken -> MINUS_SAT
-- On BIT_OR reduce production annotationToken -> MINUS_SAT
-- On BIT_AND reduce production annotationToken -> MINUS_SAT
-- On BIT reduce production annotationToken -> MINUS_SAT
-- On AT reduce production annotationToken -> MINUS_SAT
-- On ASSIGN reduce production annotationToken -> MINUS_SAT
-- On APPLY reduce production annotationToken -> MINUS_SAT
-- On AND reduce production annotationToken -> MINUS_SAT
-- On ACTIONS reduce production annotationToken -> MINUS_SAT
-- On ACTION reduce production annotationToken -> MINUS_SAT
-- On ABSTRACT reduce production annotationToken -> MINUS_SAT

State 250:
annotationToken -> MINUS . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> MINUS
-- On VARBIT reduce production annotationToken -> MINUS
-- On VALUESET reduce production annotationToken -> MINUS
-- On TYPEDEF reduce production annotationToken -> MINUS
-- On TYPE reduce production annotationToken -> MINUS
-- On TUPLE reduce production annotationToken -> MINUS
-- On TRUE reduce production annotationToken -> MINUS
-- On TRANSITION reduce production annotationToken -> MINUS
-- On TABLE reduce production annotationToken -> MINUS
-- On SWITCH reduce production annotationToken -> MINUS
-- On STRUCT reduce production annotationToken -> MINUS
-- On STRING_LITERAL reduce production annotationToken -> MINUS
-- On STRING reduce production annotationToken -> MINUS
-- On STATE reduce production annotationToken -> MINUS
-- On SHL reduce production annotationToken -> MINUS
-- On SEMICOLON reduce production annotationToken -> MINUS
-- On SELECT reduce production annotationToken -> MINUS
-- On R_PAREN reduce production annotationToken -> MINUS
-- On R_BRACKET reduce production annotationToken -> MINUS
-- On R_BRACE reduce production annotationToken -> MINUS
-- On R_ANGLE reduce production annotationToken -> MINUS
-- On RETURN reduce production annotationToken -> MINUS
-- On RANGE reduce production annotationToken -> MINUS
-- On QUESTION reduce production annotationToken -> MINUS
-- On PRAGMA_END reduce production annotationToken -> MINUS
-- On PRAGMA reduce production annotationToken -> MINUS
-- On PLUS_SAT reduce production annotationToken -> MINUS
-- On PLUSPLUS reduce production annotationToken -> MINUS
-- On PLUS reduce production annotationToken -> MINUS
-- On PARSER reduce production annotationToken -> MINUS
-- On PACKAGE reduce production annotationToken -> MINUS
-- On OUT reduce production annotationToken -> MINUS
-- On OR reduce production annotationToken -> MINUS
-- On NOT reduce production annotationToken -> MINUS
-- On NE reduce production annotationToken -> MINUS
-- On NAME reduce production annotationToken -> MINUS
-- On MUL reduce production annotationToken -> MINUS
-- On MOD reduce production annotationToken -> MINUS
-- On MINUS_SAT reduce production annotationToken -> MINUS
-- On MINUS reduce production annotationToken -> MINUS
-- On MATCH_KIND reduce production annotationToken -> MINUS
-- On MASK reduce production annotationToken -> MINUS
-- On L_PAREN reduce production annotationToken -> MINUS
-- On L_BRACKET reduce production annotationToken -> MINUS
-- On L_BRACE reduce production annotationToken -> MINUS
-- On L_ANGLE reduce production annotationToken -> MINUS
-- On LE reduce production annotationToken -> MINUS
-- On KEY reduce production annotationToken -> MINUS
-- On INTEGER reduce production annotationToken -> MINUS
-- On INT reduce production annotationToken -> MINUS
-- On INOUT reduce production annotationToken -> MINUS
-- On IN reduce production annotationToken -> MINUS
-- On IF reduce production annotationToken -> MINUS
-- On HEADER_UNION reduce production annotationToken -> MINUS
-- On HEADER reduce production annotationToken -> MINUS
-- On GE reduce production annotationToken -> MINUS
-- On FALSE reduce production annotationToken -> MINUS
-- On EXTERN reduce production annotationToken -> MINUS
-- On EXIT reduce production annotationToken -> MINUS
-- On ERROR reduce production annotationToken -> MINUS
-- On EQ reduce production annotationToken -> MINUS
-- On ENUM reduce production annotationToken -> MINUS
-- On ENTRIES reduce production annotationToken -> MINUS
-- On ELSE reduce production annotationToken -> MINUS
-- On DOT reduce production annotationToken -> MINUS
-- On DONTCARE reduce production annotationToken -> MINUS
-- On DIV reduce production annotationToken -> MINUS
-- On DEFAULT reduce production annotationToken -> MINUS
-- On CONTROL reduce production annotationToken -> MINUS
-- On CONST reduce production annotationToken -> MINUS
-- On COMPLEMENT reduce production annotationToken -> MINUS
-- On COMMA reduce production annotationToken -> MINUS
-- On COLON reduce production annotationToken -> MINUS
-- On BOOL reduce production annotationToken -> MINUS
-- On BIT_XOR reduce production annotationToken -> MINUS
-- On BIT_OR reduce production annotationToken -> MINUS
-- On BIT_AND reduce production annotationToken -> MINUS
-- On BIT reduce production annotationToken -> MINUS
-- On AT reduce production annotationToken -> MINUS
-- On ASSIGN reduce production annotationToken -> MINUS
-- On APPLY reduce production annotationToken -> MINUS
-- On AND reduce production annotationToken -> MINUS
-- On ACTIONS reduce production annotationToken -> MINUS
-- On ACTION reduce production annotationToken -> MINUS
-- On ABSTRACT reduce production annotationToken -> MINUS

State 251:
annotationToken -> MATCH_KIND . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> MATCH_KIND
-- On VARBIT reduce production annotationToken -> MATCH_KIND
-- On VALUESET reduce production annotationToken -> MATCH_KIND
-- On TYPEDEF reduce production annotationToken -> MATCH_KIND
-- On TYPE reduce production annotationToken -> MATCH_KIND
-- On TUPLE reduce production annotationToken -> MATCH_KIND
-- On TRUE reduce production annotationToken -> MATCH_KIND
-- On TRANSITION reduce production annotationToken -> MATCH_KIND
-- On TABLE reduce production annotationToken -> MATCH_KIND
-- On SWITCH reduce production annotationToken -> MATCH_KIND
-- On STRUCT reduce production annotationToken -> MATCH_KIND
-- On STRING_LITERAL reduce production annotationToken -> MATCH_KIND
-- On STRING reduce production annotationToken -> MATCH_KIND
-- On STATE reduce production annotationToken -> MATCH_KIND
-- On SHL reduce production annotationToken -> MATCH_KIND
-- On SEMICOLON reduce production annotationToken -> MATCH_KIND
-- On SELECT reduce production annotationToken -> MATCH_KIND
-- On R_PAREN reduce production annotationToken -> MATCH_KIND
-- On R_BRACKET reduce production annotationToken -> MATCH_KIND
-- On R_BRACE reduce production annotationToken -> MATCH_KIND
-- On R_ANGLE reduce production annotationToken -> MATCH_KIND
-- On RETURN reduce production annotationToken -> MATCH_KIND
-- On RANGE reduce production annotationToken -> MATCH_KIND
-- On QUESTION reduce production annotationToken -> MATCH_KIND
-- On PRAGMA_END reduce production annotationToken -> MATCH_KIND
-- On PRAGMA reduce production annotationToken -> MATCH_KIND
-- On PLUS_SAT reduce production annotationToken -> MATCH_KIND
-- On PLUSPLUS reduce production annotationToken -> MATCH_KIND
-- On PLUS reduce production annotationToken -> MATCH_KIND
-- On PARSER reduce production annotationToken -> MATCH_KIND
-- On PACKAGE reduce production annotationToken -> MATCH_KIND
-- On OUT reduce production annotationToken -> MATCH_KIND
-- On OR reduce production annotationToken -> MATCH_KIND
-- On NOT reduce production annotationToken -> MATCH_KIND
-- On NE reduce production annotationToken -> MATCH_KIND
-- On NAME reduce production annotationToken -> MATCH_KIND
-- On MUL reduce production annotationToken -> MATCH_KIND
-- On MOD reduce production annotationToken -> MATCH_KIND
-- On MINUS_SAT reduce production annotationToken -> MATCH_KIND
-- On MINUS reduce production annotationToken -> MATCH_KIND
-- On MATCH_KIND reduce production annotationToken -> MATCH_KIND
-- On MASK reduce production annotationToken -> MATCH_KIND
-- On L_PAREN reduce production annotationToken -> MATCH_KIND
-- On L_BRACKET reduce production annotationToken -> MATCH_KIND
-- On L_BRACE reduce production annotationToken -> MATCH_KIND
-- On L_ANGLE reduce production annotationToken -> MATCH_KIND
-- On LE reduce production annotationToken -> MATCH_KIND
-- On KEY reduce production annotationToken -> MATCH_KIND
-- On INTEGER reduce production annotationToken -> MATCH_KIND
-- On INT reduce production annotationToken -> MATCH_KIND
-- On INOUT reduce production annotationToken -> MATCH_KIND
-- On IN reduce production annotationToken -> MATCH_KIND
-- On IF reduce production annotationToken -> MATCH_KIND
-- On HEADER_UNION reduce production annotationToken -> MATCH_KIND
-- On HEADER reduce production annotationToken -> MATCH_KIND
-- On GE reduce production annotationToken -> MATCH_KIND
-- On FALSE reduce production annotationToken -> MATCH_KIND
-- On EXTERN reduce production annotationToken -> MATCH_KIND
-- On EXIT reduce production annotationToken -> MATCH_KIND
-- On ERROR reduce production annotationToken -> MATCH_KIND
-- On EQ reduce production annotationToken -> MATCH_KIND
-- On ENUM reduce production annotationToken -> MATCH_KIND
-- On ENTRIES reduce production annotationToken -> MATCH_KIND
-- On ELSE reduce production annotationToken -> MATCH_KIND
-- On DOT reduce production annotationToken -> MATCH_KIND
-- On DONTCARE reduce production annotationToken -> MATCH_KIND
-- On DIV reduce production annotationToken -> MATCH_KIND
-- On DEFAULT reduce production annotationToken -> MATCH_KIND
-- On CONTROL reduce production annotationToken -> MATCH_KIND
-- On CONST reduce production annotationToken -> MATCH_KIND
-- On COMPLEMENT reduce production annotationToken -> MATCH_KIND
-- On COMMA reduce production annotationToken -> MATCH_KIND
-- On COLON reduce production annotationToken -> MATCH_KIND
-- On BOOL reduce production annotationToken -> MATCH_KIND
-- On BIT_XOR reduce production annotationToken -> MATCH_KIND
-- On BIT_OR reduce production annotationToken -> MATCH_KIND
-- On BIT_AND reduce production annotationToken -> MATCH_KIND
-- On BIT reduce production annotationToken -> MATCH_KIND
-- On AT reduce production annotationToken -> MATCH_KIND
-- On ASSIGN reduce production annotationToken -> MATCH_KIND
-- On APPLY reduce production annotationToken -> MATCH_KIND
-- On AND reduce production annotationToken -> MATCH_KIND
-- On ACTIONS reduce production annotationToken -> MATCH_KIND
-- On ACTION reduce production annotationToken -> MATCH_KIND
-- On ABSTRACT reduce production annotationToken -> MATCH_KIND

State 252:
annotationToken -> MASK . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> MASK
-- On VARBIT reduce production annotationToken -> MASK
-- On VALUESET reduce production annotationToken -> MASK
-- On TYPEDEF reduce production annotationToken -> MASK
-- On TYPE reduce production annotationToken -> MASK
-- On TUPLE reduce production annotationToken -> MASK
-- On TRUE reduce production annotationToken -> MASK
-- On TRANSITION reduce production annotationToken -> MASK
-- On TABLE reduce production annotationToken -> MASK
-- On SWITCH reduce production annotationToken -> MASK
-- On STRUCT reduce production annotationToken -> MASK
-- On STRING_LITERAL reduce production annotationToken -> MASK
-- On STRING reduce production annotationToken -> MASK
-- On STATE reduce production annotationToken -> MASK
-- On SHL reduce production annotationToken -> MASK
-- On SEMICOLON reduce production annotationToken -> MASK
-- On SELECT reduce production annotationToken -> MASK
-- On R_PAREN reduce production annotationToken -> MASK
-- On R_BRACKET reduce production annotationToken -> MASK
-- On R_BRACE reduce production annotationToken -> MASK
-- On R_ANGLE reduce production annotationToken -> MASK
-- On RETURN reduce production annotationToken -> MASK
-- On RANGE reduce production annotationToken -> MASK
-- On QUESTION reduce production annotationToken -> MASK
-- On PRAGMA_END reduce production annotationToken -> MASK
-- On PRAGMA reduce production annotationToken -> MASK
-- On PLUS_SAT reduce production annotationToken -> MASK
-- On PLUSPLUS reduce production annotationToken -> MASK
-- On PLUS reduce production annotationToken -> MASK
-- On PARSER reduce production annotationToken -> MASK
-- On PACKAGE reduce production annotationToken -> MASK
-- On OUT reduce production annotationToken -> MASK
-- On OR reduce production annotationToken -> MASK
-- On NOT reduce production annotationToken -> MASK
-- On NE reduce production annotationToken -> MASK
-- On NAME reduce production annotationToken -> MASK
-- On MUL reduce production annotationToken -> MASK
-- On MOD reduce production annotationToken -> MASK
-- On MINUS_SAT reduce production annotationToken -> MASK
-- On MINUS reduce production annotationToken -> MASK
-- On MATCH_KIND reduce production annotationToken -> MASK
-- On MASK reduce production annotationToken -> MASK
-- On L_PAREN reduce production annotationToken -> MASK
-- On L_BRACKET reduce production annotationToken -> MASK
-- On L_BRACE reduce production annotationToken -> MASK
-- On L_ANGLE reduce production annotationToken -> MASK
-- On LE reduce production annotationToken -> MASK
-- On KEY reduce production annotationToken -> MASK
-- On INTEGER reduce production annotationToken -> MASK
-- On INT reduce production annotationToken -> MASK
-- On INOUT reduce production annotationToken -> MASK
-- On IN reduce production annotationToken -> MASK
-- On IF reduce production annotationToken -> MASK
-- On HEADER_UNION reduce production annotationToken -> MASK
-- On HEADER reduce production annotationToken -> MASK
-- On GE reduce production annotationToken -> MASK
-- On FALSE reduce production annotationToken -> MASK
-- On EXTERN reduce production annotationToken -> MASK
-- On EXIT reduce production annotationToken -> MASK
-- On ERROR reduce production annotationToken -> MASK
-- On EQ reduce production annotationToken -> MASK
-- On ENUM reduce production annotationToken -> MASK
-- On ENTRIES reduce production annotationToken -> MASK
-- On ELSE reduce production annotationToken -> MASK
-- On DOT reduce production annotationToken -> MASK
-- On DONTCARE reduce production annotationToken -> MASK
-- On DIV reduce production annotationToken -> MASK
-- On DEFAULT reduce production annotationToken -> MASK
-- On CONTROL reduce production annotationToken -> MASK
-- On CONST reduce production annotationToken -> MASK
-- On COMPLEMENT reduce production annotationToken -> MASK
-- On COMMA reduce production annotationToken -> MASK
-- On COLON reduce production annotationToken -> MASK
-- On BOOL reduce production annotationToken -> MASK
-- On BIT_XOR reduce production annotationToken -> MASK
-- On BIT_OR reduce production annotationToken -> MASK
-- On BIT_AND reduce production annotationToken -> MASK
-- On BIT reduce production annotationToken -> MASK
-- On AT reduce production annotationToken -> MASK
-- On ASSIGN reduce production annotationToken -> MASK
-- On APPLY reduce production annotationToken -> MASK
-- On AND reduce production annotationToken -> MASK
-- On ACTIONS reduce production annotationToken -> MASK
-- On ACTION reduce production annotationToken -> MASK
-- On ABSTRACT reduce production annotationToken -> MASK

State 253:
annotationToken -> L_BRACKET . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> L_BRACKET
-- On VARBIT reduce production annotationToken -> L_BRACKET
-- On VALUESET reduce production annotationToken -> L_BRACKET
-- On TYPEDEF reduce production annotationToken -> L_BRACKET
-- On TYPE reduce production annotationToken -> L_BRACKET
-- On TUPLE reduce production annotationToken -> L_BRACKET
-- On TRUE reduce production annotationToken -> L_BRACKET
-- On TRANSITION reduce production annotationToken -> L_BRACKET
-- On TABLE reduce production annotationToken -> L_BRACKET
-- On SWITCH reduce production annotationToken -> L_BRACKET
-- On STRUCT reduce production annotationToken -> L_BRACKET
-- On STRING_LITERAL reduce production annotationToken -> L_BRACKET
-- On STRING reduce production annotationToken -> L_BRACKET
-- On STATE reduce production annotationToken -> L_BRACKET
-- On SHL reduce production annotationToken -> L_BRACKET
-- On SEMICOLON reduce production annotationToken -> L_BRACKET
-- On SELECT reduce production annotationToken -> L_BRACKET
-- On R_PAREN reduce production annotationToken -> L_BRACKET
-- On R_BRACKET reduce production annotationToken -> L_BRACKET
-- On R_BRACE reduce production annotationToken -> L_BRACKET
-- On R_ANGLE reduce production annotationToken -> L_BRACKET
-- On RETURN reduce production annotationToken -> L_BRACKET
-- On RANGE reduce production annotationToken -> L_BRACKET
-- On QUESTION reduce production annotationToken -> L_BRACKET
-- On PRAGMA_END reduce production annotationToken -> L_BRACKET
-- On PRAGMA reduce production annotationToken -> L_BRACKET
-- On PLUS_SAT reduce production annotationToken -> L_BRACKET
-- On PLUSPLUS reduce production annotationToken -> L_BRACKET
-- On PLUS reduce production annotationToken -> L_BRACKET
-- On PARSER reduce production annotationToken -> L_BRACKET
-- On PACKAGE reduce production annotationToken -> L_BRACKET
-- On OUT reduce production annotationToken -> L_BRACKET
-- On OR reduce production annotationToken -> L_BRACKET
-- On NOT reduce production annotationToken -> L_BRACKET
-- On NE reduce production annotationToken -> L_BRACKET
-- On NAME reduce production annotationToken -> L_BRACKET
-- On MUL reduce production annotationToken -> L_BRACKET
-- On MOD reduce production annotationToken -> L_BRACKET
-- On MINUS_SAT reduce production annotationToken -> L_BRACKET
-- On MINUS reduce production annotationToken -> L_BRACKET
-- On MATCH_KIND reduce production annotationToken -> L_BRACKET
-- On MASK reduce production annotationToken -> L_BRACKET
-- On L_PAREN reduce production annotationToken -> L_BRACKET
-- On L_BRACKET reduce production annotationToken -> L_BRACKET
-- On L_BRACE reduce production annotationToken -> L_BRACKET
-- On L_ANGLE reduce production annotationToken -> L_BRACKET
-- On LE reduce production annotationToken -> L_BRACKET
-- On KEY reduce production annotationToken -> L_BRACKET
-- On INTEGER reduce production annotationToken -> L_BRACKET
-- On INT reduce production annotationToken -> L_BRACKET
-- On INOUT reduce production annotationToken -> L_BRACKET
-- On IN reduce production annotationToken -> L_BRACKET
-- On IF reduce production annotationToken -> L_BRACKET
-- On HEADER_UNION reduce production annotationToken -> L_BRACKET
-- On HEADER reduce production annotationToken -> L_BRACKET
-- On GE reduce production annotationToken -> L_BRACKET
-- On FALSE reduce production annotationToken -> L_BRACKET
-- On EXTERN reduce production annotationToken -> L_BRACKET
-- On EXIT reduce production annotationToken -> L_BRACKET
-- On ERROR reduce production annotationToken -> L_BRACKET
-- On EQ reduce production annotationToken -> L_BRACKET
-- On ENUM reduce production annotationToken -> L_BRACKET
-- On ENTRIES reduce production annotationToken -> L_BRACKET
-- On ELSE reduce production annotationToken -> L_BRACKET
-- On DOT reduce production annotationToken -> L_BRACKET
-- On DONTCARE reduce production annotationToken -> L_BRACKET
-- On DIV reduce production annotationToken -> L_BRACKET
-- On DEFAULT reduce production annotationToken -> L_BRACKET
-- On CONTROL reduce production annotationToken -> L_BRACKET
-- On CONST reduce production annotationToken -> L_BRACKET
-- On COMPLEMENT reduce production annotationToken -> L_BRACKET
-- On COMMA reduce production annotationToken -> L_BRACKET
-- On COLON reduce production annotationToken -> L_BRACKET
-- On BOOL reduce production annotationToken -> L_BRACKET
-- On BIT_XOR reduce production annotationToken -> L_BRACKET
-- On BIT_OR reduce production annotationToken -> L_BRACKET
-- On BIT_AND reduce production annotationToken -> L_BRACKET
-- On BIT reduce production annotationToken -> L_BRACKET
-- On AT reduce production annotationToken -> L_BRACKET
-- On ASSIGN reduce production annotationToken -> L_BRACKET
-- On APPLY reduce production annotationToken -> L_BRACKET
-- On AND reduce production annotationToken -> L_BRACKET
-- On ACTIONS reduce production annotationToken -> L_BRACKET
-- On ACTION reduce production annotationToken -> L_BRACKET
-- On ABSTRACT reduce production annotationToken -> L_BRACKET

State 254:
annotationToken -> L_BRACE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> L_BRACE
-- On VARBIT reduce production annotationToken -> L_BRACE
-- On VALUESET reduce production annotationToken -> L_BRACE
-- On TYPEDEF reduce production annotationToken -> L_BRACE
-- On TYPE reduce production annotationToken -> L_BRACE
-- On TUPLE reduce production annotationToken -> L_BRACE
-- On TRUE reduce production annotationToken -> L_BRACE
-- On TRANSITION reduce production annotationToken -> L_BRACE
-- On TABLE reduce production annotationToken -> L_BRACE
-- On SWITCH reduce production annotationToken -> L_BRACE
-- On STRUCT reduce production annotationToken -> L_BRACE
-- On STRING_LITERAL reduce production annotationToken -> L_BRACE
-- On STRING reduce production annotationToken -> L_BRACE
-- On STATE reduce production annotationToken -> L_BRACE
-- On SHL reduce production annotationToken -> L_BRACE
-- On SEMICOLON reduce production annotationToken -> L_BRACE
-- On SELECT reduce production annotationToken -> L_BRACE
-- On R_PAREN reduce production annotationToken -> L_BRACE
-- On R_BRACKET reduce production annotationToken -> L_BRACE
-- On R_BRACE reduce production annotationToken -> L_BRACE
-- On R_ANGLE reduce production annotationToken -> L_BRACE
-- On RETURN reduce production annotationToken -> L_BRACE
-- On RANGE reduce production annotationToken -> L_BRACE
-- On QUESTION reduce production annotationToken -> L_BRACE
-- On PRAGMA_END reduce production annotationToken -> L_BRACE
-- On PRAGMA reduce production annotationToken -> L_BRACE
-- On PLUS_SAT reduce production annotationToken -> L_BRACE
-- On PLUSPLUS reduce production annotationToken -> L_BRACE
-- On PLUS reduce production annotationToken -> L_BRACE
-- On PARSER reduce production annotationToken -> L_BRACE
-- On PACKAGE reduce production annotationToken -> L_BRACE
-- On OUT reduce production annotationToken -> L_BRACE
-- On OR reduce production annotationToken -> L_BRACE
-- On NOT reduce production annotationToken -> L_BRACE
-- On NE reduce production annotationToken -> L_BRACE
-- On NAME reduce production annotationToken -> L_BRACE
-- On MUL reduce production annotationToken -> L_BRACE
-- On MOD reduce production annotationToken -> L_BRACE
-- On MINUS_SAT reduce production annotationToken -> L_BRACE
-- On MINUS reduce production annotationToken -> L_BRACE
-- On MATCH_KIND reduce production annotationToken -> L_BRACE
-- On MASK reduce production annotationToken -> L_BRACE
-- On L_PAREN reduce production annotationToken -> L_BRACE
-- On L_BRACKET reduce production annotationToken -> L_BRACE
-- On L_BRACE reduce production annotationToken -> L_BRACE
-- On L_ANGLE reduce production annotationToken -> L_BRACE
-- On LE reduce production annotationToken -> L_BRACE
-- On KEY reduce production annotationToken -> L_BRACE
-- On INTEGER reduce production annotationToken -> L_BRACE
-- On INT reduce production annotationToken -> L_BRACE
-- On INOUT reduce production annotationToken -> L_BRACE
-- On IN reduce production annotationToken -> L_BRACE
-- On IF reduce production annotationToken -> L_BRACE
-- On HEADER_UNION reduce production annotationToken -> L_BRACE
-- On HEADER reduce production annotationToken -> L_BRACE
-- On GE reduce production annotationToken -> L_BRACE
-- On FALSE reduce production annotationToken -> L_BRACE
-- On EXTERN reduce production annotationToken -> L_BRACE
-- On EXIT reduce production annotationToken -> L_BRACE
-- On ERROR reduce production annotationToken -> L_BRACE
-- On EQ reduce production annotationToken -> L_BRACE
-- On ENUM reduce production annotationToken -> L_BRACE
-- On ENTRIES reduce production annotationToken -> L_BRACE
-- On ELSE reduce production annotationToken -> L_BRACE
-- On DOT reduce production annotationToken -> L_BRACE
-- On DONTCARE reduce production annotationToken -> L_BRACE
-- On DIV reduce production annotationToken -> L_BRACE
-- On DEFAULT reduce production annotationToken -> L_BRACE
-- On CONTROL reduce production annotationToken -> L_BRACE
-- On CONST reduce production annotationToken -> L_BRACE
-- On COMPLEMENT reduce production annotationToken -> L_BRACE
-- On COMMA reduce production annotationToken -> L_BRACE
-- On COLON reduce production annotationToken -> L_BRACE
-- On BOOL reduce production annotationToken -> L_BRACE
-- On BIT_XOR reduce production annotationToken -> L_BRACE
-- On BIT_OR reduce production annotationToken -> L_BRACE
-- On BIT_AND reduce production annotationToken -> L_BRACE
-- On BIT reduce production annotationToken -> L_BRACE
-- On AT reduce production annotationToken -> L_BRACE
-- On ASSIGN reduce production annotationToken -> L_BRACE
-- On APPLY reduce production annotationToken -> L_BRACE
-- On AND reduce production annotationToken -> L_BRACE
-- On ACTIONS reduce production annotationToken -> L_BRACE
-- On ACTION reduce production annotationToken -> L_BRACE
-- On ABSTRACT reduce production annotationToken -> L_BRACE

State 255:
annotationToken -> L_ANGLE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> L_ANGLE
-- On VARBIT reduce production annotationToken -> L_ANGLE
-- On VALUESET reduce production annotationToken -> L_ANGLE
-- On TYPEDEF reduce production annotationToken -> L_ANGLE
-- On TYPE reduce production annotationToken -> L_ANGLE
-- On TUPLE reduce production annotationToken -> L_ANGLE
-- On TRUE reduce production annotationToken -> L_ANGLE
-- On TRANSITION reduce production annotationToken -> L_ANGLE
-- On TABLE reduce production annotationToken -> L_ANGLE
-- On SWITCH reduce production annotationToken -> L_ANGLE
-- On STRUCT reduce production annotationToken -> L_ANGLE
-- On STRING_LITERAL reduce production annotationToken -> L_ANGLE
-- On STRING reduce production annotationToken -> L_ANGLE
-- On STATE reduce production annotationToken -> L_ANGLE
-- On SHL reduce production annotationToken -> L_ANGLE
-- On SEMICOLON reduce production annotationToken -> L_ANGLE
-- On SELECT reduce production annotationToken -> L_ANGLE
-- On R_PAREN reduce production annotationToken -> L_ANGLE
-- On R_BRACKET reduce production annotationToken -> L_ANGLE
-- On R_BRACE reduce production annotationToken -> L_ANGLE
-- On R_ANGLE reduce production annotationToken -> L_ANGLE
-- On RETURN reduce production annotationToken -> L_ANGLE
-- On RANGE reduce production annotationToken -> L_ANGLE
-- On QUESTION reduce production annotationToken -> L_ANGLE
-- On PRAGMA_END reduce production annotationToken -> L_ANGLE
-- On PRAGMA reduce production annotationToken -> L_ANGLE
-- On PLUS_SAT reduce production annotationToken -> L_ANGLE
-- On PLUSPLUS reduce production annotationToken -> L_ANGLE
-- On PLUS reduce production annotationToken -> L_ANGLE
-- On PARSER reduce production annotationToken -> L_ANGLE
-- On PACKAGE reduce production annotationToken -> L_ANGLE
-- On OUT reduce production annotationToken -> L_ANGLE
-- On OR reduce production annotationToken -> L_ANGLE
-- On NOT reduce production annotationToken -> L_ANGLE
-- On NE reduce production annotationToken -> L_ANGLE
-- On NAME reduce production annotationToken -> L_ANGLE
-- On MUL reduce production annotationToken -> L_ANGLE
-- On MOD reduce production annotationToken -> L_ANGLE
-- On MINUS_SAT reduce production annotationToken -> L_ANGLE
-- On MINUS reduce production annotationToken -> L_ANGLE
-- On MATCH_KIND reduce production annotationToken -> L_ANGLE
-- On MASK reduce production annotationToken -> L_ANGLE
-- On L_PAREN reduce production annotationToken -> L_ANGLE
-- On L_BRACKET reduce production annotationToken -> L_ANGLE
-- On L_BRACE reduce production annotationToken -> L_ANGLE
-- On L_ANGLE reduce production annotationToken -> L_ANGLE
-- On LE reduce production annotationToken -> L_ANGLE
-- On KEY reduce production annotationToken -> L_ANGLE
-- On INTEGER reduce production annotationToken -> L_ANGLE
-- On INT reduce production annotationToken -> L_ANGLE
-- On INOUT reduce production annotationToken -> L_ANGLE
-- On IN reduce production annotationToken -> L_ANGLE
-- On IF reduce production annotationToken -> L_ANGLE
-- On HEADER_UNION reduce production annotationToken -> L_ANGLE
-- On HEADER reduce production annotationToken -> L_ANGLE
-- On GE reduce production annotationToken -> L_ANGLE
-- On FALSE reduce production annotationToken -> L_ANGLE
-- On EXTERN reduce production annotationToken -> L_ANGLE
-- On EXIT reduce production annotationToken -> L_ANGLE
-- On ERROR reduce production annotationToken -> L_ANGLE
-- On EQ reduce production annotationToken -> L_ANGLE
-- On ENUM reduce production annotationToken -> L_ANGLE
-- On ENTRIES reduce production annotationToken -> L_ANGLE
-- On ELSE reduce production annotationToken -> L_ANGLE
-- On DOT reduce production annotationToken -> L_ANGLE
-- On DONTCARE reduce production annotationToken -> L_ANGLE
-- On DIV reduce production annotationToken -> L_ANGLE
-- On DEFAULT reduce production annotationToken -> L_ANGLE
-- On CONTROL reduce production annotationToken -> L_ANGLE
-- On CONST reduce production annotationToken -> L_ANGLE
-- On COMPLEMENT reduce production annotationToken -> L_ANGLE
-- On COMMA reduce production annotationToken -> L_ANGLE
-- On COLON reduce production annotationToken -> L_ANGLE
-- On BOOL reduce production annotationToken -> L_ANGLE
-- On BIT_XOR reduce production annotationToken -> L_ANGLE
-- On BIT_OR reduce production annotationToken -> L_ANGLE
-- On BIT_AND reduce production annotationToken -> L_ANGLE
-- On BIT reduce production annotationToken -> L_ANGLE
-- On AT reduce production annotationToken -> L_ANGLE
-- On ASSIGN reduce production annotationToken -> L_ANGLE
-- On APPLY reduce production annotationToken -> L_ANGLE
-- On AND reduce production annotationToken -> L_ANGLE
-- On ACTIONS reduce production annotationToken -> L_ANGLE
-- On ACTION reduce production annotationToken -> L_ANGLE
-- On ABSTRACT reduce production annotationToken -> L_ANGLE

State 256:
annotationToken -> LE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> LE
-- On VARBIT reduce production annotationToken -> LE
-- On VALUESET reduce production annotationToken -> LE
-- On TYPEDEF reduce production annotationToken -> LE
-- On TYPE reduce production annotationToken -> LE
-- On TUPLE reduce production annotationToken -> LE
-- On TRUE reduce production annotationToken -> LE
-- On TRANSITION reduce production annotationToken -> LE
-- On TABLE reduce production annotationToken -> LE
-- On SWITCH reduce production annotationToken -> LE
-- On STRUCT reduce production annotationToken -> LE
-- On STRING_LITERAL reduce production annotationToken -> LE
-- On STRING reduce production annotationToken -> LE
-- On STATE reduce production annotationToken -> LE
-- On SHL reduce production annotationToken -> LE
-- On SEMICOLON reduce production annotationToken -> LE
-- On SELECT reduce production annotationToken -> LE
-- On R_PAREN reduce production annotationToken -> LE
-- On R_BRACKET reduce production annotationToken -> LE
-- On R_BRACE reduce production annotationToken -> LE
-- On R_ANGLE reduce production annotationToken -> LE
-- On RETURN reduce production annotationToken -> LE
-- On RANGE reduce production annotationToken -> LE
-- On QUESTION reduce production annotationToken -> LE
-- On PRAGMA_END reduce production annotationToken -> LE
-- On PRAGMA reduce production annotationToken -> LE
-- On PLUS_SAT reduce production annotationToken -> LE
-- On PLUSPLUS reduce production annotationToken -> LE
-- On PLUS reduce production annotationToken -> LE
-- On PARSER reduce production annotationToken -> LE
-- On PACKAGE reduce production annotationToken -> LE
-- On OUT reduce production annotationToken -> LE
-- On OR reduce production annotationToken -> LE
-- On NOT reduce production annotationToken -> LE
-- On NE reduce production annotationToken -> LE
-- On NAME reduce production annotationToken -> LE
-- On MUL reduce production annotationToken -> LE
-- On MOD reduce production annotationToken -> LE
-- On MINUS_SAT reduce production annotationToken -> LE
-- On MINUS reduce production annotationToken -> LE
-- On MATCH_KIND reduce production annotationToken -> LE
-- On MASK reduce production annotationToken -> LE
-- On L_PAREN reduce production annotationToken -> LE
-- On L_BRACKET reduce production annotationToken -> LE
-- On L_BRACE reduce production annotationToken -> LE
-- On L_ANGLE reduce production annotationToken -> LE
-- On LE reduce production annotationToken -> LE
-- On KEY reduce production annotationToken -> LE
-- On INTEGER reduce production annotationToken -> LE
-- On INT reduce production annotationToken -> LE
-- On INOUT reduce production annotationToken -> LE
-- On IN reduce production annotationToken -> LE
-- On IF reduce production annotationToken -> LE
-- On HEADER_UNION reduce production annotationToken -> LE
-- On HEADER reduce production annotationToken -> LE
-- On GE reduce production annotationToken -> LE
-- On FALSE reduce production annotationToken -> LE
-- On EXTERN reduce production annotationToken -> LE
-- On EXIT reduce production annotationToken -> LE
-- On ERROR reduce production annotationToken -> LE
-- On EQ reduce production annotationToken -> LE
-- On ENUM reduce production annotationToken -> LE
-- On ENTRIES reduce production annotationToken -> LE
-- On ELSE reduce production annotationToken -> LE
-- On DOT reduce production annotationToken -> LE
-- On DONTCARE reduce production annotationToken -> LE
-- On DIV reduce production annotationToken -> LE
-- On DEFAULT reduce production annotationToken -> LE
-- On CONTROL reduce production annotationToken -> LE
-- On CONST reduce production annotationToken -> LE
-- On COMPLEMENT reduce production annotationToken -> LE
-- On COMMA reduce production annotationToken -> LE
-- On COLON reduce production annotationToken -> LE
-- On BOOL reduce production annotationToken -> LE
-- On BIT_XOR reduce production annotationToken -> LE
-- On BIT_OR reduce production annotationToken -> LE
-- On BIT_AND reduce production annotationToken -> LE
-- On BIT reduce production annotationToken -> LE
-- On AT reduce production annotationToken -> LE
-- On ASSIGN reduce production annotationToken -> LE
-- On APPLY reduce production annotationToken -> LE
-- On AND reduce production annotationToken -> LE
-- On ACTIONS reduce production annotationToken -> LE
-- On ACTION reduce production annotationToken -> LE
-- On ABSTRACT reduce production annotationToken -> LE

State 257:
annotationToken -> KEY . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> KEY
-- On VARBIT reduce production annotationToken -> KEY
-- On VALUESET reduce production annotationToken -> KEY
-- On TYPEDEF reduce production annotationToken -> KEY
-- On TYPE reduce production annotationToken -> KEY
-- On TUPLE reduce production annotationToken -> KEY
-- On TRUE reduce production annotationToken -> KEY
-- On TRANSITION reduce production annotationToken -> KEY
-- On TABLE reduce production annotationToken -> KEY
-- On SWITCH reduce production annotationToken -> KEY
-- On STRUCT reduce production annotationToken -> KEY
-- On STRING_LITERAL reduce production annotationToken -> KEY
-- On STRING reduce production annotationToken -> KEY
-- On STATE reduce production annotationToken -> KEY
-- On SHL reduce production annotationToken -> KEY
-- On SEMICOLON reduce production annotationToken -> KEY
-- On SELECT reduce production annotationToken -> KEY
-- On R_PAREN reduce production annotationToken -> KEY
-- On R_BRACKET reduce production annotationToken -> KEY
-- On R_BRACE reduce production annotationToken -> KEY
-- On R_ANGLE reduce production annotationToken -> KEY
-- On RETURN reduce production annotationToken -> KEY
-- On RANGE reduce production annotationToken -> KEY
-- On QUESTION reduce production annotationToken -> KEY
-- On PRAGMA_END reduce production annotationToken -> KEY
-- On PRAGMA reduce production annotationToken -> KEY
-- On PLUS_SAT reduce production annotationToken -> KEY
-- On PLUSPLUS reduce production annotationToken -> KEY
-- On PLUS reduce production annotationToken -> KEY
-- On PARSER reduce production annotationToken -> KEY
-- On PACKAGE reduce production annotationToken -> KEY
-- On OUT reduce production annotationToken -> KEY
-- On OR reduce production annotationToken -> KEY
-- On NOT reduce production annotationToken -> KEY
-- On NE reduce production annotationToken -> KEY
-- On NAME reduce production annotationToken -> KEY
-- On MUL reduce production annotationToken -> KEY
-- On MOD reduce production annotationToken -> KEY
-- On MINUS_SAT reduce production annotationToken -> KEY
-- On MINUS reduce production annotationToken -> KEY
-- On MATCH_KIND reduce production annotationToken -> KEY
-- On MASK reduce production annotationToken -> KEY
-- On L_PAREN reduce production annotationToken -> KEY
-- On L_BRACKET reduce production annotationToken -> KEY
-- On L_BRACE reduce production annotationToken -> KEY
-- On L_ANGLE reduce production annotationToken -> KEY
-- On LE reduce production annotationToken -> KEY
-- On KEY reduce production annotationToken -> KEY
-- On INTEGER reduce production annotationToken -> KEY
-- On INT reduce production annotationToken -> KEY
-- On INOUT reduce production annotationToken -> KEY
-- On IN reduce production annotationToken -> KEY
-- On IF reduce production annotationToken -> KEY
-- On HEADER_UNION reduce production annotationToken -> KEY
-- On HEADER reduce production annotationToken -> KEY
-- On GE reduce production annotationToken -> KEY
-- On FALSE reduce production annotationToken -> KEY
-- On EXTERN reduce production annotationToken -> KEY
-- On EXIT reduce production annotationToken -> KEY
-- On ERROR reduce production annotationToken -> KEY
-- On EQ reduce production annotationToken -> KEY
-- On ENUM reduce production annotationToken -> KEY
-- On ENTRIES reduce production annotationToken -> KEY
-- On ELSE reduce production annotationToken -> KEY
-- On DOT reduce production annotationToken -> KEY
-- On DONTCARE reduce production annotationToken -> KEY
-- On DIV reduce production annotationToken -> KEY
-- On DEFAULT reduce production annotationToken -> KEY
-- On CONTROL reduce production annotationToken -> KEY
-- On CONST reduce production annotationToken -> KEY
-- On COMPLEMENT reduce production annotationToken -> KEY
-- On COMMA reduce production annotationToken -> KEY
-- On COLON reduce production annotationToken -> KEY
-- On BOOL reduce production annotationToken -> KEY
-- On BIT_XOR reduce production annotationToken -> KEY
-- On BIT_OR reduce production annotationToken -> KEY
-- On BIT_AND reduce production annotationToken -> KEY
-- On BIT reduce production annotationToken -> KEY
-- On AT reduce production annotationToken -> KEY
-- On ASSIGN reduce production annotationToken -> KEY
-- On APPLY reduce production annotationToken -> KEY
-- On AND reduce production annotationToken -> KEY
-- On ACTIONS reduce production annotationToken -> KEY
-- On ACTION reduce production annotationToken -> KEY
-- On ABSTRACT reduce production annotationToken -> KEY

State 258:
annotationToken -> INTEGER . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> INTEGER
-- On VARBIT reduce production annotationToken -> INTEGER
-- On VALUESET reduce production annotationToken -> INTEGER
-- On TYPEDEF reduce production annotationToken -> INTEGER
-- On TYPE reduce production annotationToken -> INTEGER
-- On TUPLE reduce production annotationToken -> INTEGER
-- On TRUE reduce production annotationToken -> INTEGER
-- On TRANSITION reduce production annotationToken -> INTEGER
-- On TABLE reduce production annotationToken -> INTEGER
-- On SWITCH reduce production annotationToken -> INTEGER
-- On STRUCT reduce production annotationToken -> INTEGER
-- On STRING_LITERAL reduce production annotationToken -> INTEGER
-- On STRING reduce production annotationToken -> INTEGER
-- On STATE reduce production annotationToken -> INTEGER
-- On SHL reduce production annotationToken -> INTEGER
-- On SEMICOLON reduce production annotationToken -> INTEGER
-- On SELECT reduce production annotationToken -> INTEGER
-- On R_PAREN reduce production annotationToken -> INTEGER
-- On R_BRACKET reduce production annotationToken -> INTEGER
-- On R_BRACE reduce production annotationToken -> INTEGER
-- On R_ANGLE reduce production annotationToken -> INTEGER
-- On RETURN reduce production annotationToken -> INTEGER
-- On RANGE reduce production annotationToken -> INTEGER
-- On QUESTION reduce production annotationToken -> INTEGER
-- On PRAGMA_END reduce production annotationToken -> INTEGER
-- On PRAGMA reduce production annotationToken -> INTEGER
-- On PLUS_SAT reduce production annotationToken -> INTEGER
-- On PLUSPLUS reduce production annotationToken -> INTEGER
-- On PLUS reduce production annotationToken -> INTEGER
-- On PARSER reduce production annotationToken -> INTEGER
-- On PACKAGE reduce production annotationToken -> INTEGER
-- On OUT reduce production annotationToken -> INTEGER
-- On OR reduce production annotationToken -> INTEGER
-- On NOT reduce production annotationToken -> INTEGER
-- On NE reduce production annotationToken -> INTEGER
-- On NAME reduce production annotationToken -> INTEGER
-- On MUL reduce production annotationToken -> INTEGER
-- On MOD reduce production annotationToken -> INTEGER
-- On MINUS_SAT reduce production annotationToken -> INTEGER
-- On MINUS reduce production annotationToken -> INTEGER
-- On MATCH_KIND reduce production annotationToken -> INTEGER
-- On MASK reduce production annotationToken -> INTEGER
-- On L_PAREN reduce production annotationToken -> INTEGER
-- On L_BRACKET reduce production annotationToken -> INTEGER
-- On L_BRACE reduce production annotationToken -> INTEGER
-- On L_ANGLE reduce production annotationToken -> INTEGER
-- On LE reduce production annotationToken -> INTEGER
-- On KEY reduce production annotationToken -> INTEGER
-- On INTEGER reduce production annotationToken -> INTEGER
-- On INT reduce production annotationToken -> INTEGER
-- On INOUT reduce production annotationToken -> INTEGER
-- On IN reduce production annotationToken -> INTEGER
-- On IF reduce production annotationToken -> INTEGER
-- On HEADER_UNION reduce production annotationToken -> INTEGER
-- On HEADER reduce production annotationToken -> INTEGER
-- On GE reduce production annotationToken -> INTEGER
-- On FALSE reduce production annotationToken -> INTEGER
-- On EXTERN reduce production annotationToken -> INTEGER
-- On EXIT reduce production annotationToken -> INTEGER
-- On ERROR reduce production annotationToken -> INTEGER
-- On EQ reduce production annotationToken -> INTEGER
-- On ENUM reduce production annotationToken -> INTEGER
-- On ENTRIES reduce production annotationToken -> INTEGER
-- On ELSE reduce production annotationToken -> INTEGER
-- On DOT reduce production annotationToken -> INTEGER
-- On DONTCARE reduce production annotationToken -> INTEGER
-- On DIV reduce production annotationToken -> INTEGER
-- On DEFAULT reduce production annotationToken -> INTEGER
-- On CONTROL reduce production annotationToken -> INTEGER
-- On CONST reduce production annotationToken -> INTEGER
-- On COMPLEMENT reduce production annotationToken -> INTEGER
-- On COMMA reduce production annotationToken -> INTEGER
-- On COLON reduce production annotationToken -> INTEGER
-- On BOOL reduce production annotationToken -> INTEGER
-- On BIT_XOR reduce production annotationToken -> INTEGER
-- On BIT_OR reduce production annotationToken -> INTEGER
-- On BIT_AND reduce production annotationToken -> INTEGER
-- On BIT reduce production annotationToken -> INTEGER
-- On AT reduce production annotationToken -> INTEGER
-- On ASSIGN reduce production annotationToken -> INTEGER
-- On APPLY reduce production annotationToken -> INTEGER
-- On AND reduce production annotationToken -> INTEGER
-- On ACTIONS reduce production annotationToken -> INTEGER
-- On ACTION reduce production annotationToken -> INTEGER
-- On ABSTRACT reduce production annotationToken -> INTEGER

State 259:
annotationToken -> INT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> INT
-- On VARBIT reduce production annotationToken -> INT
-- On VALUESET reduce production annotationToken -> INT
-- On TYPEDEF reduce production annotationToken -> INT
-- On TYPE reduce production annotationToken -> INT
-- On TUPLE reduce production annotationToken -> INT
-- On TRUE reduce production annotationToken -> INT
-- On TRANSITION reduce production annotationToken -> INT
-- On TABLE reduce production annotationToken -> INT
-- On SWITCH reduce production annotationToken -> INT
-- On STRUCT reduce production annotationToken -> INT
-- On STRING_LITERAL reduce production annotationToken -> INT
-- On STRING reduce production annotationToken -> INT
-- On STATE reduce production annotationToken -> INT
-- On SHL reduce production annotationToken -> INT
-- On SEMICOLON reduce production annotationToken -> INT
-- On SELECT reduce production annotationToken -> INT
-- On R_PAREN reduce production annotationToken -> INT
-- On R_BRACKET reduce production annotationToken -> INT
-- On R_BRACE reduce production annotationToken -> INT
-- On R_ANGLE reduce production annotationToken -> INT
-- On RETURN reduce production annotationToken -> INT
-- On RANGE reduce production annotationToken -> INT
-- On QUESTION reduce production annotationToken -> INT
-- On PRAGMA_END reduce production annotationToken -> INT
-- On PRAGMA reduce production annotationToken -> INT
-- On PLUS_SAT reduce production annotationToken -> INT
-- On PLUSPLUS reduce production annotationToken -> INT
-- On PLUS reduce production annotationToken -> INT
-- On PARSER reduce production annotationToken -> INT
-- On PACKAGE reduce production annotationToken -> INT
-- On OUT reduce production annotationToken -> INT
-- On OR reduce production annotationToken -> INT
-- On NOT reduce production annotationToken -> INT
-- On NE reduce production annotationToken -> INT
-- On NAME reduce production annotationToken -> INT
-- On MUL reduce production annotationToken -> INT
-- On MOD reduce production annotationToken -> INT
-- On MINUS_SAT reduce production annotationToken -> INT
-- On MINUS reduce production annotationToken -> INT
-- On MATCH_KIND reduce production annotationToken -> INT
-- On MASK reduce production annotationToken -> INT
-- On L_PAREN reduce production annotationToken -> INT
-- On L_BRACKET reduce production annotationToken -> INT
-- On L_BRACE reduce production annotationToken -> INT
-- On L_ANGLE reduce production annotationToken -> INT
-- On LE reduce production annotationToken -> INT
-- On KEY reduce production annotationToken -> INT
-- On INTEGER reduce production annotationToken -> INT
-- On INT reduce production annotationToken -> INT
-- On INOUT reduce production annotationToken -> INT
-- On IN reduce production annotationToken -> INT
-- On IF reduce production annotationToken -> INT
-- On HEADER_UNION reduce production annotationToken -> INT
-- On HEADER reduce production annotationToken -> INT
-- On GE reduce production annotationToken -> INT
-- On FALSE reduce production annotationToken -> INT
-- On EXTERN reduce production annotationToken -> INT
-- On EXIT reduce production annotationToken -> INT
-- On ERROR reduce production annotationToken -> INT
-- On EQ reduce production annotationToken -> INT
-- On ENUM reduce production annotationToken -> INT
-- On ENTRIES reduce production annotationToken -> INT
-- On ELSE reduce production annotationToken -> INT
-- On DOT reduce production annotationToken -> INT
-- On DONTCARE reduce production annotationToken -> INT
-- On DIV reduce production annotationToken -> INT
-- On DEFAULT reduce production annotationToken -> INT
-- On CONTROL reduce production annotationToken -> INT
-- On CONST reduce production annotationToken -> INT
-- On COMPLEMENT reduce production annotationToken -> INT
-- On COMMA reduce production annotationToken -> INT
-- On COLON reduce production annotationToken -> INT
-- On BOOL reduce production annotationToken -> INT
-- On BIT_XOR reduce production annotationToken -> INT
-- On BIT_OR reduce production annotationToken -> INT
-- On BIT_AND reduce production annotationToken -> INT
-- On BIT reduce production annotationToken -> INT
-- On AT reduce production annotationToken -> INT
-- On ASSIGN reduce production annotationToken -> INT
-- On APPLY reduce production annotationToken -> INT
-- On AND reduce production annotationToken -> INT
-- On ACTIONS reduce production annotationToken -> INT
-- On ACTION reduce production annotationToken -> INT
-- On ABSTRACT reduce production annotationToken -> INT

State 260:
annotationToken -> INOUT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> INOUT
-- On VARBIT reduce production annotationToken -> INOUT
-- On VALUESET reduce production annotationToken -> INOUT
-- On TYPEDEF reduce production annotationToken -> INOUT
-- On TYPE reduce production annotationToken -> INOUT
-- On TUPLE reduce production annotationToken -> INOUT
-- On TRUE reduce production annotationToken -> INOUT
-- On TRANSITION reduce production annotationToken -> INOUT
-- On TABLE reduce production annotationToken -> INOUT
-- On SWITCH reduce production annotationToken -> INOUT
-- On STRUCT reduce production annotationToken -> INOUT
-- On STRING_LITERAL reduce production annotationToken -> INOUT
-- On STRING reduce production annotationToken -> INOUT
-- On STATE reduce production annotationToken -> INOUT
-- On SHL reduce production annotationToken -> INOUT
-- On SEMICOLON reduce production annotationToken -> INOUT
-- On SELECT reduce production annotationToken -> INOUT
-- On R_PAREN reduce production annotationToken -> INOUT
-- On R_BRACKET reduce production annotationToken -> INOUT
-- On R_BRACE reduce production annotationToken -> INOUT
-- On R_ANGLE reduce production annotationToken -> INOUT
-- On RETURN reduce production annotationToken -> INOUT
-- On RANGE reduce production annotationToken -> INOUT
-- On QUESTION reduce production annotationToken -> INOUT
-- On PRAGMA_END reduce production annotationToken -> INOUT
-- On PRAGMA reduce production annotationToken -> INOUT
-- On PLUS_SAT reduce production annotationToken -> INOUT
-- On PLUSPLUS reduce production annotationToken -> INOUT
-- On PLUS reduce production annotationToken -> INOUT
-- On PARSER reduce production annotationToken -> INOUT
-- On PACKAGE reduce production annotationToken -> INOUT
-- On OUT reduce production annotationToken -> INOUT
-- On OR reduce production annotationToken -> INOUT
-- On NOT reduce production annotationToken -> INOUT
-- On NE reduce production annotationToken -> INOUT
-- On NAME reduce production annotationToken -> INOUT
-- On MUL reduce production annotationToken -> INOUT
-- On MOD reduce production annotationToken -> INOUT
-- On MINUS_SAT reduce production annotationToken -> INOUT
-- On MINUS reduce production annotationToken -> INOUT
-- On MATCH_KIND reduce production annotationToken -> INOUT
-- On MASK reduce production annotationToken -> INOUT
-- On L_PAREN reduce production annotationToken -> INOUT
-- On L_BRACKET reduce production annotationToken -> INOUT
-- On L_BRACE reduce production annotationToken -> INOUT
-- On L_ANGLE reduce production annotationToken -> INOUT
-- On LE reduce production annotationToken -> INOUT
-- On KEY reduce production annotationToken -> INOUT
-- On INTEGER reduce production annotationToken -> INOUT
-- On INT reduce production annotationToken -> INOUT
-- On INOUT reduce production annotationToken -> INOUT
-- On IN reduce production annotationToken -> INOUT
-- On IF reduce production annotationToken -> INOUT
-- On HEADER_UNION reduce production annotationToken -> INOUT
-- On HEADER reduce production annotationToken -> INOUT
-- On GE reduce production annotationToken -> INOUT
-- On FALSE reduce production annotationToken -> INOUT
-- On EXTERN reduce production annotationToken -> INOUT
-- On EXIT reduce production annotationToken -> INOUT
-- On ERROR reduce production annotationToken -> INOUT
-- On EQ reduce production annotationToken -> INOUT
-- On ENUM reduce production annotationToken -> INOUT
-- On ENTRIES reduce production annotationToken -> INOUT
-- On ELSE reduce production annotationToken -> INOUT
-- On DOT reduce production annotationToken -> INOUT
-- On DONTCARE reduce production annotationToken -> INOUT
-- On DIV reduce production annotationToken -> INOUT
-- On DEFAULT reduce production annotationToken -> INOUT
-- On CONTROL reduce production annotationToken -> INOUT
-- On CONST reduce production annotationToken -> INOUT
-- On COMPLEMENT reduce production annotationToken -> INOUT
-- On COMMA reduce production annotationToken -> INOUT
-- On COLON reduce production annotationToken -> INOUT
-- On BOOL reduce production annotationToken -> INOUT
-- On BIT_XOR reduce production annotationToken -> INOUT
-- On BIT_OR reduce production annotationToken -> INOUT
-- On BIT_AND reduce production annotationToken -> INOUT
-- On BIT reduce production annotationToken -> INOUT
-- On AT reduce production annotationToken -> INOUT
-- On ASSIGN reduce production annotationToken -> INOUT
-- On APPLY reduce production annotationToken -> INOUT
-- On AND reduce production annotationToken -> INOUT
-- On ACTIONS reduce production annotationToken -> INOUT
-- On ACTION reduce production annotationToken -> INOUT
-- On ABSTRACT reduce production annotationToken -> INOUT

State 261:
annotationToken -> IN . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> IN
-- On VARBIT reduce production annotationToken -> IN
-- On VALUESET reduce production annotationToken -> IN
-- On TYPEDEF reduce production annotationToken -> IN
-- On TYPE reduce production annotationToken -> IN
-- On TUPLE reduce production annotationToken -> IN
-- On TRUE reduce production annotationToken -> IN
-- On TRANSITION reduce production annotationToken -> IN
-- On TABLE reduce production annotationToken -> IN
-- On SWITCH reduce production annotationToken -> IN
-- On STRUCT reduce production annotationToken -> IN
-- On STRING_LITERAL reduce production annotationToken -> IN
-- On STRING reduce production annotationToken -> IN
-- On STATE reduce production annotationToken -> IN
-- On SHL reduce production annotationToken -> IN
-- On SEMICOLON reduce production annotationToken -> IN
-- On SELECT reduce production annotationToken -> IN
-- On R_PAREN reduce production annotationToken -> IN
-- On R_BRACKET reduce production annotationToken -> IN
-- On R_BRACE reduce production annotationToken -> IN
-- On R_ANGLE reduce production annotationToken -> IN
-- On RETURN reduce production annotationToken -> IN
-- On RANGE reduce production annotationToken -> IN
-- On QUESTION reduce production annotationToken -> IN
-- On PRAGMA_END reduce production annotationToken -> IN
-- On PRAGMA reduce production annotationToken -> IN
-- On PLUS_SAT reduce production annotationToken -> IN
-- On PLUSPLUS reduce production annotationToken -> IN
-- On PLUS reduce production annotationToken -> IN
-- On PARSER reduce production annotationToken -> IN
-- On PACKAGE reduce production annotationToken -> IN
-- On OUT reduce production annotationToken -> IN
-- On OR reduce production annotationToken -> IN
-- On NOT reduce production annotationToken -> IN
-- On NE reduce production annotationToken -> IN
-- On NAME reduce production annotationToken -> IN
-- On MUL reduce production annotationToken -> IN
-- On MOD reduce production annotationToken -> IN
-- On MINUS_SAT reduce production annotationToken -> IN
-- On MINUS reduce production annotationToken -> IN
-- On MATCH_KIND reduce production annotationToken -> IN
-- On MASK reduce production annotationToken -> IN
-- On L_PAREN reduce production annotationToken -> IN
-- On L_BRACKET reduce production annotationToken -> IN
-- On L_BRACE reduce production annotationToken -> IN
-- On L_ANGLE reduce production annotationToken -> IN
-- On LE reduce production annotationToken -> IN
-- On KEY reduce production annotationToken -> IN
-- On INTEGER reduce production annotationToken -> IN
-- On INT reduce production annotationToken -> IN
-- On INOUT reduce production annotationToken -> IN
-- On IN reduce production annotationToken -> IN
-- On IF reduce production annotationToken -> IN
-- On HEADER_UNION reduce production annotationToken -> IN
-- On HEADER reduce production annotationToken -> IN
-- On GE reduce production annotationToken -> IN
-- On FALSE reduce production annotationToken -> IN
-- On EXTERN reduce production annotationToken -> IN
-- On EXIT reduce production annotationToken -> IN
-- On ERROR reduce production annotationToken -> IN
-- On EQ reduce production annotationToken -> IN
-- On ENUM reduce production annotationToken -> IN
-- On ENTRIES reduce production annotationToken -> IN
-- On ELSE reduce production annotationToken -> IN
-- On DOT reduce production annotationToken -> IN
-- On DONTCARE reduce production annotationToken -> IN
-- On DIV reduce production annotationToken -> IN
-- On DEFAULT reduce production annotationToken -> IN
-- On CONTROL reduce production annotationToken -> IN
-- On CONST reduce production annotationToken -> IN
-- On COMPLEMENT reduce production annotationToken -> IN
-- On COMMA reduce production annotationToken -> IN
-- On COLON reduce production annotationToken -> IN
-- On BOOL reduce production annotationToken -> IN
-- On BIT_XOR reduce production annotationToken -> IN
-- On BIT_OR reduce production annotationToken -> IN
-- On BIT_AND reduce production annotationToken -> IN
-- On BIT reduce production annotationToken -> IN
-- On AT reduce production annotationToken -> IN
-- On ASSIGN reduce production annotationToken -> IN
-- On APPLY reduce production annotationToken -> IN
-- On AND reduce production annotationToken -> IN
-- On ACTIONS reduce production annotationToken -> IN
-- On ACTION reduce production annotationToken -> IN
-- On ABSTRACT reduce production annotationToken -> IN

State 262:
annotationToken -> IF . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> IF
-- On VARBIT reduce production annotationToken -> IF
-- On VALUESET reduce production annotationToken -> IF
-- On TYPEDEF reduce production annotationToken -> IF
-- On TYPE reduce production annotationToken -> IF
-- On TUPLE reduce production annotationToken -> IF
-- On TRUE reduce production annotationToken -> IF
-- On TRANSITION reduce production annotationToken -> IF
-- On TABLE reduce production annotationToken -> IF
-- On SWITCH reduce production annotationToken -> IF
-- On STRUCT reduce production annotationToken -> IF
-- On STRING_LITERAL reduce production annotationToken -> IF
-- On STRING reduce production annotationToken -> IF
-- On STATE reduce production annotationToken -> IF
-- On SHL reduce production annotationToken -> IF
-- On SEMICOLON reduce production annotationToken -> IF
-- On SELECT reduce production annotationToken -> IF
-- On R_PAREN reduce production annotationToken -> IF
-- On R_BRACKET reduce production annotationToken -> IF
-- On R_BRACE reduce production annotationToken -> IF
-- On R_ANGLE reduce production annotationToken -> IF
-- On RETURN reduce production annotationToken -> IF
-- On RANGE reduce production annotationToken -> IF
-- On QUESTION reduce production annotationToken -> IF
-- On PRAGMA_END reduce production annotationToken -> IF
-- On PRAGMA reduce production annotationToken -> IF
-- On PLUS_SAT reduce production annotationToken -> IF
-- On PLUSPLUS reduce production annotationToken -> IF
-- On PLUS reduce production annotationToken -> IF
-- On PARSER reduce production annotationToken -> IF
-- On PACKAGE reduce production annotationToken -> IF
-- On OUT reduce production annotationToken -> IF
-- On OR reduce production annotationToken -> IF
-- On NOT reduce production annotationToken -> IF
-- On NE reduce production annotationToken -> IF
-- On NAME reduce production annotationToken -> IF
-- On MUL reduce production annotationToken -> IF
-- On MOD reduce production annotationToken -> IF
-- On MINUS_SAT reduce production annotationToken -> IF
-- On MINUS reduce production annotationToken -> IF
-- On MATCH_KIND reduce production annotationToken -> IF
-- On MASK reduce production annotationToken -> IF
-- On L_PAREN reduce production annotationToken -> IF
-- On L_BRACKET reduce production annotationToken -> IF
-- On L_BRACE reduce production annotationToken -> IF
-- On L_ANGLE reduce production annotationToken -> IF
-- On LE reduce production annotationToken -> IF
-- On KEY reduce production annotationToken -> IF
-- On INTEGER reduce production annotationToken -> IF
-- On INT reduce production annotationToken -> IF
-- On INOUT reduce production annotationToken -> IF
-- On IN reduce production annotationToken -> IF
-- On IF reduce production annotationToken -> IF
-- On HEADER_UNION reduce production annotationToken -> IF
-- On HEADER reduce production annotationToken -> IF
-- On GE reduce production annotationToken -> IF
-- On FALSE reduce production annotationToken -> IF
-- On EXTERN reduce production annotationToken -> IF
-- On EXIT reduce production annotationToken -> IF
-- On ERROR reduce production annotationToken -> IF
-- On EQ reduce production annotationToken -> IF
-- On ENUM reduce production annotationToken -> IF
-- On ENTRIES reduce production annotationToken -> IF
-- On ELSE reduce production annotationToken -> IF
-- On DOT reduce production annotationToken -> IF
-- On DONTCARE reduce production annotationToken -> IF
-- On DIV reduce production annotationToken -> IF
-- On DEFAULT reduce production annotationToken -> IF
-- On CONTROL reduce production annotationToken -> IF
-- On CONST reduce production annotationToken -> IF
-- On COMPLEMENT reduce production annotationToken -> IF
-- On COMMA reduce production annotationToken -> IF
-- On COLON reduce production annotationToken -> IF
-- On BOOL reduce production annotationToken -> IF
-- On BIT_XOR reduce production annotationToken -> IF
-- On BIT_OR reduce production annotationToken -> IF
-- On BIT_AND reduce production annotationToken -> IF
-- On BIT reduce production annotationToken -> IF
-- On AT reduce production annotationToken -> IF
-- On ASSIGN reduce production annotationToken -> IF
-- On APPLY reduce production annotationToken -> IF
-- On AND reduce production annotationToken -> IF
-- On ACTIONS reduce production annotationToken -> IF
-- On ACTION reduce production annotationToken -> IF
-- On ABSTRACT reduce production annotationToken -> IF

State 263:
annotationToken -> HEADER_UNION . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> HEADER_UNION
-- On VARBIT reduce production annotationToken -> HEADER_UNION
-- On VALUESET reduce production annotationToken -> HEADER_UNION
-- On TYPEDEF reduce production annotationToken -> HEADER_UNION
-- On TYPE reduce production annotationToken -> HEADER_UNION
-- On TUPLE reduce production annotationToken -> HEADER_UNION
-- On TRUE reduce production annotationToken -> HEADER_UNION
-- On TRANSITION reduce production annotationToken -> HEADER_UNION
-- On TABLE reduce production annotationToken -> HEADER_UNION
-- On SWITCH reduce production annotationToken -> HEADER_UNION
-- On STRUCT reduce production annotationToken -> HEADER_UNION
-- On STRING_LITERAL reduce production annotationToken -> HEADER_UNION
-- On STRING reduce production annotationToken -> HEADER_UNION
-- On STATE reduce production annotationToken -> HEADER_UNION
-- On SHL reduce production annotationToken -> HEADER_UNION
-- On SEMICOLON reduce production annotationToken -> HEADER_UNION
-- On SELECT reduce production annotationToken -> HEADER_UNION
-- On R_PAREN reduce production annotationToken -> HEADER_UNION
-- On R_BRACKET reduce production annotationToken -> HEADER_UNION
-- On R_BRACE reduce production annotationToken -> HEADER_UNION
-- On R_ANGLE reduce production annotationToken -> HEADER_UNION
-- On RETURN reduce production annotationToken -> HEADER_UNION
-- On RANGE reduce production annotationToken -> HEADER_UNION
-- On QUESTION reduce production annotationToken -> HEADER_UNION
-- On PRAGMA_END reduce production annotationToken -> HEADER_UNION
-- On PRAGMA reduce production annotationToken -> HEADER_UNION
-- On PLUS_SAT reduce production annotationToken -> HEADER_UNION
-- On PLUSPLUS reduce production annotationToken -> HEADER_UNION
-- On PLUS reduce production annotationToken -> HEADER_UNION
-- On PARSER reduce production annotationToken -> HEADER_UNION
-- On PACKAGE reduce production annotationToken -> HEADER_UNION
-- On OUT reduce production annotationToken -> HEADER_UNION
-- On OR reduce production annotationToken -> HEADER_UNION
-- On NOT reduce production annotationToken -> HEADER_UNION
-- On NE reduce production annotationToken -> HEADER_UNION
-- On NAME reduce production annotationToken -> HEADER_UNION
-- On MUL reduce production annotationToken -> HEADER_UNION
-- On MOD reduce production annotationToken -> HEADER_UNION
-- On MINUS_SAT reduce production annotationToken -> HEADER_UNION
-- On MINUS reduce production annotationToken -> HEADER_UNION
-- On MATCH_KIND reduce production annotationToken -> HEADER_UNION
-- On MASK reduce production annotationToken -> HEADER_UNION
-- On L_PAREN reduce production annotationToken -> HEADER_UNION
-- On L_BRACKET reduce production annotationToken -> HEADER_UNION
-- On L_BRACE reduce production annotationToken -> HEADER_UNION
-- On L_ANGLE reduce production annotationToken -> HEADER_UNION
-- On LE reduce production annotationToken -> HEADER_UNION
-- On KEY reduce production annotationToken -> HEADER_UNION
-- On INTEGER reduce production annotationToken -> HEADER_UNION
-- On INT reduce production annotationToken -> HEADER_UNION
-- On INOUT reduce production annotationToken -> HEADER_UNION
-- On IN reduce production annotationToken -> HEADER_UNION
-- On IF reduce production annotationToken -> HEADER_UNION
-- On HEADER_UNION reduce production annotationToken -> HEADER_UNION
-- On HEADER reduce production annotationToken -> HEADER_UNION
-- On GE reduce production annotationToken -> HEADER_UNION
-- On FALSE reduce production annotationToken -> HEADER_UNION
-- On EXTERN reduce production annotationToken -> HEADER_UNION
-- On EXIT reduce production annotationToken -> HEADER_UNION
-- On ERROR reduce production annotationToken -> HEADER_UNION
-- On EQ reduce production annotationToken -> HEADER_UNION
-- On ENUM reduce production annotationToken -> HEADER_UNION
-- On ENTRIES reduce production annotationToken -> HEADER_UNION
-- On ELSE reduce production annotationToken -> HEADER_UNION
-- On DOT reduce production annotationToken -> HEADER_UNION
-- On DONTCARE reduce production annotationToken -> HEADER_UNION
-- On DIV reduce production annotationToken -> HEADER_UNION
-- On DEFAULT reduce production annotationToken -> HEADER_UNION
-- On CONTROL reduce production annotationToken -> HEADER_UNION
-- On CONST reduce production annotationToken -> HEADER_UNION
-- On COMPLEMENT reduce production annotationToken -> HEADER_UNION
-- On COMMA reduce production annotationToken -> HEADER_UNION
-- On COLON reduce production annotationToken -> HEADER_UNION
-- On BOOL reduce production annotationToken -> HEADER_UNION
-- On BIT_XOR reduce production annotationToken -> HEADER_UNION
-- On BIT_OR reduce production annotationToken -> HEADER_UNION
-- On BIT_AND reduce production annotationToken -> HEADER_UNION
-- On BIT reduce production annotationToken -> HEADER_UNION
-- On AT reduce production annotationToken -> HEADER_UNION
-- On ASSIGN reduce production annotationToken -> HEADER_UNION
-- On APPLY reduce production annotationToken -> HEADER_UNION
-- On AND reduce production annotationToken -> HEADER_UNION
-- On ACTIONS reduce production annotationToken -> HEADER_UNION
-- On ACTION reduce production annotationToken -> HEADER_UNION
-- On ABSTRACT reduce production annotationToken -> HEADER_UNION

State 264:
annotationToken -> HEADER . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> HEADER
-- On VARBIT reduce production annotationToken -> HEADER
-- On VALUESET reduce production annotationToken -> HEADER
-- On TYPEDEF reduce production annotationToken -> HEADER
-- On TYPE reduce production annotationToken -> HEADER
-- On TUPLE reduce production annotationToken -> HEADER
-- On TRUE reduce production annotationToken -> HEADER
-- On TRANSITION reduce production annotationToken -> HEADER
-- On TABLE reduce production annotationToken -> HEADER
-- On SWITCH reduce production annotationToken -> HEADER
-- On STRUCT reduce production annotationToken -> HEADER
-- On STRING_LITERAL reduce production annotationToken -> HEADER
-- On STRING reduce production annotationToken -> HEADER
-- On STATE reduce production annotationToken -> HEADER
-- On SHL reduce production annotationToken -> HEADER
-- On SEMICOLON reduce production annotationToken -> HEADER
-- On SELECT reduce production annotationToken -> HEADER
-- On R_PAREN reduce production annotationToken -> HEADER
-- On R_BRACKET reduce production annotationToken -> HEADER
-- On R_BRACE reduce production annotationToken -> HEADER
-- On R_ANGLE reduce production annotationToken -> HEADER
-- On RETURN reduce production annotationToken -> HEADER
-- On RANGE reduce production annotationToken -> HEADER
-- On QUESTION reduce production annotationToken -> HEADER
-- On PRAGMA_END reduce production annotationToken -> HEADER
-- On PRAGMA reduce production annotationToken -> HEADER
-- On PLUS_SAT reduce production annotationToken -> HEADER
-- On PLUSPLUS reduce production annotationToken -> HEADER
-- On PLUS reduce production annotationToken -> HEADER
-- On PARSER reduce production annotationToken -> HEADER
-- On PACKAGE reduce production annotationToken -> HEADER
-- On OUT reduce production annotationToken -> HEADER
-- On OR reduce production annotationToken -> HEADER
-- On NOT reduce production annotationToken -> HEADER
-- On NE reduce production annotationToken -> HEADER
-- On NAME reduce production annotationToken -> HEADER
-- On MUL reduce production annotationToken -> HEADER
-- On MOD reduce production annotationToken -> HEADER
-- On MINUS_SAT reduce production annotationToken -> HEADER
-- On MINUS reduce production annotationToken -> HEADER
-- On MATCH_KIND reduce production annotationToken -> HEADER
-- On MASK reduce production annotationToken -> HEADER
-- On L_PAREN reduce production annotationToken -> HEADER
-- On L_BRACKET reduce production annotationToken -> HEADER
-- On L_BRACE reduce production annotationToken -> HEADER
-- On L_ANGLE reduce production annotationToken -> HEADER
-- On LE reduce production annotationToken -> HEADER
-- On KEY reduce production annotationToken -> HEADER
-- On INTEGER reduce production annotationToken -> HEADER
-- On INT reduce production annotationToken -> HEADER
-- On INOUT reduce production annotationToken -> HEADER
-- On IN reduce production annotationToken -> HEADER
-- On IF reduce production annotationToken -> HEADER
-- On HEADER_UNION reduce production annotationToken -> HEADER
-- On HEADER reduce production annotationToken -> HEADER
-- On GE reduce production annotationToken -> HEADER
-- On FALSE reduce production annotationToken -> HEADER
-- On EXTERN reduce production annotationToken -> HEADER
-- On EXIT reduce production annotationToken -> HEADER
-- On ERROR reduce production annotationToken -> HEADER
-- On EQ reduce production annotationToken -> HEADER
-- On ENUM reduce production annotationToken -> HEADER
-- On ENTRIES reduce production annotationToken -> HEADER
-- On ELSE reduce production annotationToken -> HEADER
-- On DOT reduce production annotationToken -> HEADER
-- On DONTCARE reduce production annotationToken -> HEADER
-- On DIV reduce production annotationToken -> HEADER
-- On DEFAULT reduce production annotationToken -> HEADER
-- On CONTROL reduce production annotationToken -> HEADER
-- On CONST reduce production annotationToken -> HEADER
-- On COMPLEMENT reduce production annotationToken -> HEADER
-- On COMMA reduce production annotationToken -> HEADER
-- On COLON reduce production annotationToken -> HEADER
-- On BOOL reduce production annotationToken -> HEADER
-- On BIT_XOR reduce production annotationToken -> HEADER
-- On BIT_OR reduce production annotationToken -> HEADER
-- On BIT_AND reduce production annotationToken -> HEADER
-- On BIT reduce production annotationToken -> HEADER
-- On AT reduce production annotationToken -> HEADER
-- On ASSIGN reduce production annotationToken -> HEADER
-- On APPLY reduce production annotationToken -> HEADER
-- On AND reduce production annotationToken -> HEADER
-- On ACTIONS reduce production annotationToken -> HEADER
-- On ACTION reduce production annotationToken -> HEADER
-- On ABSTRACT reduce production annotationToken -> HEADER

State 265:
annotationToken -> GE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> GE
-- On VARBIT reduce production annotationToken -> GE
-- On VALUESET reduce production annotationToken -> GE
-- On TYPEDEF reduce production annotationToken -> GE
-- On TYPE reduce production annotationToken -> GE
-- On TUPLE reduce production annotationToken -> GE
-- On TRUE reduce production annotationToken -> GE
-- On TRANSITION reduce production annotationToken -> GE
-- On TABLE reduce production annotationToken -> GE
-- On SWITCH reduce production annotationToken -> GE
-- On STRUCT reduce production annotationToken -> GE
-- On STRING_LITERAL reduce production annotationToken -> GE
-- On STRING reduce production annotationToken -> GE
-- On STATE reduce production annotationToken -> GE
-- On SHL reduce production annotationToken -> GE
-- On SEMICOLON reduce production annotationToken -> GE
-- On SELECT reduce production annotationToken -> GE
-- On R_PAREN reduce production annotationToken -> GE
-- On R_BRACKET reduce production annotationToken -> GE
-- On R_BRACE reduce production annotationToken -> GE
-- On R_ANGLE reduce production annotationToken -> GE
-- On RETURN reduce production annotationToken -> GE
-- On RANGE reduce production annotationToken -> GE
-- On QUESTION reduce production annotationToken -> GE
-- On PRAGMA_END reduce production annotationToken -> GE
-- On PRAGMA reduce production annotationToken -> GE
-- On PLUS_SAT reduce production annotationToken -> GE
-- On PLUSPLUS reduce production annotationToken -> GE
-- On PLUS reduce production annotationToken -> GE
-- On PARSER reduce production annotationToken -> GE
-- On PACKAGE reduce production annotationToken -> GE
-- On OUT reduce production annotationToken -> GE
-- On OR reduce production annotationToken -> GE
-- On NOT reduce production annotationToken -> GE
-- On NE reduce production annotationToken -> GE
-- On NAME reduce production annotationToken -> GE
-- On MUL reduce production annotationToken -> GE
-- On MOD reduce production annotationToken -> GE
-- On MINUS_SAT reduce production annotationToken -> GE
-- On MINUS reduce production annotationToken -> GE
-- On MATCH_KIND reduce production annotationToken -> GE
-- On MASK reduce production annotationToken -> GE
-- On L_PAREN reduce production annotationToken -> GE
-- On L_BRACKET reduce production annotationToken -> GE
-- On L_BRACE reduce production annotationToken -> GE
-- On L_ANGLE reduce production annotationToken -> GE
-- On LE reduce production annotationToken -> GE
-- On KEY reduce production annotationToken -> GE
-- On INTEGER reduce production annotationToken -> GE
-- On INT reduce production annotationToken -> GE
-- On INOUT reduce production annotationToken -> GE
-- On IN reduce production annotationToken -> GE
-- On IF reduce production annotationToken -> GE
-- On HEADER_UNION reduce production annotationToken -> GE
-- On HEADER reduce production annotationToken -> GE
-- On GE reduce production annotationToken -> GE
-- On FALSE reduce production annotationToken -> GE
-- On EXTERN reduce production annotationToken -> GE
-- On EXIT reduce production annotationToken -> GE
-- On ERROR reduce production annotationToken -> GE
-- On EQ reduce production annotationToken -> GE
-- On ENUM reduce production annotationToken -> GE
-- On ENTRIES reduce production annotationToken -> GE
-- On ELSE reduce production annotationToken -> GE
-- On DOT reduce production annotationToken -> GE
-- On DONTCARE reduce production annotationToken -> GE
-- On DIV reduce production annotationToken -> GE
-- On DEFAULT reduce production annotationToken -> GE
-- On CONTROL reduce production annotationToken -> GE
-- On CONST reduce production annotationToken -> GE
-- On COMPLEMENT reduce production annotationToken -> GE
-- On COMMA reduce production annotationToken -> GE
-- On COLON reduce production annotationToken -> GE
-- On BOOL reduce production annotationToken -> GE
-- On BIT_XOR reduce production annotationToken -> GE
-- On BIT_OR reduce production annotationToken -> GE
-- On BIT_AND reduce production annotationToken -> GE
-- On BIT reduce production annotationToken -> GE
-- On AT reduce production annotationToken -> GE
-- On ASSIGN reduce production annotationToken -> GE
-- On APPLY reduce production annotationToken -> GE
-- On AND reduce production annotationToken -> GE
-- On ACTIONS reduce production annotationToken -> GE
-- On ACTION reduce production annotationToken -> GE
-- On ABSTRACT reduce production annotationToken -> GE

State 266:
annotationToken -> FALSE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> FALSE
-- On VARBIT reduce production annotationToken -> FALSE
-- On VALUESET reduce production annotationToken -> FALSE
-- On TYPEDEF reduce production annotationToken -> FALSE
-- On TYPE reduce production annotationToken -> FALSE
-- On TUPLE reduce production annotationToken -> FALSE
-- On TRUE reduce production annotationToken -> FALSE
-- On TRANSITION reduce production annotationToken -> FALSE
-- On TABLE reduce production annotationToken -> FALSE
-- On SWITCH reduce production annotationToken -> FALSE
-- On STRUCT reduce production annotationToken -> FALSE
-- On STRING_LITERAL reduce production annotationToken -> FALSE
-- On STRING reduce production annotationToken -> FALSE
-- On STATE reduce production annotationToken -> FALSE
-- On SHL reduce production annotationToken -> FALSE
-- On SEMICOLON reduce production annotationToken -> FALSE
-- On SELECT reduce production annotationToken -> FALSE
-- On R_PAREN reduce production annotationToken -> FALSE
-- On R_BRACKET reduce production annotationToken -> FALSE
-- On R_BRACE reduce production annotationToken -> FALSE
-- On R_ANGLE reduce production annotationToken -> FALSE
-- On RETURN reduce production annotationToken -> FALSE
-- On RANGE reduce production annotationToken -> FALSE
-- On QUESTION reduce production annotationToken -> FALSE
-- On PRAGMA_END reduce production annotationToken -> FALSE
-- On PRAGMA reduce production annotationToken -> FALSE
-- On PLUS_SAT reduce production annotationToken -> FALSE
-- On PLUSPLUS reduce production annotationToken -> FALSE
-- On PLUS reduce production annotationToken -> FALSE
-- On PARSER reduce production annotationToken -> FALSE
-- On PACKAGE reduce production annotationToken -> FALSE
-- On OUT reduce production annotationToken -> FALSE
-- On OR reduce production annotationToken -> FALSE
-- On NOT reduce production annotationToken -> FALSE
-- On NE reduce production annotationToken -> FALSE
-- On NAME reduce production annotationToken -> FALSE
-- On MUL reduce production annotationToken -> FALSE
-- On MOD reduce production annotationToken -> FALSE
-- On MINUS_SAT reduce production annotationToken -> FALSE
-- On MINUS reduce production annotationToken -> FALSE
-- On MATCH_KIND reduce production annotationToken -> FALSE
-- On MASK reduce production annotationToken -> FALSE
-- On L_PAREN reduce production annotationToken -> FALSE
-- On L_BRACKET reduce production annotationToken -> FALSE
-- On L_BRACE reduce production annotationToken -> FALSE
-- On L_ANGLE reduce production annotationToken -> FALSE
-- On LE reduce production annotationToken -> FALSE
-- On KEY reduce production annotationToken -> FALSE
-- On INTEGER reduce production annotationToken -> FALSE
-- On INT reduce production annotationToken -> FALSE
-- On INOUT reduce production annotationToken -> FALSE
-- On IN reduce production annotationToken -> FALSE
-- On IF reduce production annotationToken -> FALSE
-- On HEADER_UNION reduce production annotationToken -> FALSE
-- On HEADER reduce production annotationToken -> FALSE
-- On GE reduce production annotationToken -> FALSE
-- On FALSE reduce production annotationToken -> FALSE
-- On EXTERN reduce production annotationToken -> FALSE
-- On EXIT reduce production annotationToken -> FALSE
-- On ERROR reduce production annotationToken -> FALSE
-- On EQ reduce production annotationToken -> FALSE
-- On ENUM reduce production annotationToken -> FALSE
-- On ENTRIES reduce production annotationToken -> FALSE
-- On ELSE reduce production annotationToken -> FALSE
-- On DOT reduce production annotationToken -> FALSE
-- On DONTCARE reduce production annotationToken -> FALSE
-- On DIV reduce production annotationToken -> FALSE
-- On DEFAULT reduce production annotationToken -> FALSE
-- On CONTROL reduce production annotationToken -> FALSE
-- On CONST reduce production annotationToken -> FALSE
-- On COMPLEMENT reduce production annotationToken -> FALSE
-- On COMMA reduce production annotationToken -> FALSE
-- On COLON reduce production annotationToken -> FALSE
-- On BOOL reduce production annotationToken -> FALSE
-- On BIT_XOR reduce production annotationToken -> FALSE
-- On BIT_OR reduce production annotationToken -> FALSE
-- On BIT_AND reduce production annotationToken -> FALSE
-- On BIT reduce production annotationToken -> FALSE
-- On AT reduce production annotationToken -> FALSE
-- On ASSIGN reduce production annotationToken -> FALSE
-- On APPLY reduce production annotationToken -> FALSE
-- On AND reduce production annotationToken -> FALSE
-- On ACTIONS reduce production annotationToken -> FALSE
-- On ACTION reduce production annotationToken -> FALSE
-- On ABSTRACT reduce production annotationToken -> FALSE

State 267:
annotationToken -> EXTERN . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> EXTERN
-- On VARBIT reduce production annotationToken -> EXTERN
-- On VALUESET reduce production annotationToken -> EXTERN
-- On TYPEDEF reduce production annotationToken -> EXTERN
-- On TYPE reduce production annotationToken -> EXTERN
-- On TUPLE reduce production annotationToken -> EXTERN
-- On TRUE reduce production annotationToken -> EXTERN
-- On TRANSITION reduce production annotationToken -> EXTERN
-- On TABLE reduce production annotationToken -> EXTERN
-- On SWITCH reduce production annotationToken -> EXTERN
-- On STRUCT reduce production annotationToken -> EXTERN
-- On STRING_LITERAL reduce production annotationToken -> EXTERN
-- On STRING reduce production annotationToken -> EXTERN
-- On STATE reduce production annotationToken -> EXTERN
-- On SHL reduce production annotationToken -> EXTERN
-- On SEMICOLON reduce production annotationToken -> EXTERN
-- On SELECT reduce production annotationToken -> EXTERN
-- On R_PAREN reduce production annotationToken -> EXTERN
-- On R_BRACKET reduce production annotationToken -> EXTERN
-- On R_BRACE reduce production annotationToken -> EXTERN
-- On R_ANGLE reduce production annotationToken -> EXTERN
-- On RETURN reduce production annotationToken -> EXTERN
-- On RANGE reduce production annotationToken -> EXTERN
-- On QUESTION reduce production annotationToken -> EXTERN
-- On PRAGMA_END reduce production annotationToken -> EXTERN
-- On PRAGMA reduce production annotationToken -> EXTERN
-- On PLUS_SAT reduce production annotationToken -> EXTERN
-- On PLUSPLUS reduce production annotationToken -> EXTERN
-- On PLUS reduce production annotationToken -> EXTERN
-- On PARSER reduce production annotationToken -> EXTERN
-- On PACKAGE reduce production annotationToken -> EXTERN
-- On OUT reduce production annotationToken -> EXTERN
-- On OR reduce production annotationToken -> EXTERN
-- On NOT reduce production annotationToken -> EXTERN
-- On NE reduce production annotationToken -> EXTERN
-- On NAME reduce production annotationToken -> EXTERN
-- On MUL reduce production annotationToken -> EXTERN
-- On MOD reduce production annotationToken -> EXTERN
-- On MINUS_SAT reduce production annotationToken -> EXTERN
-- On MINUS reduce production annotationToken -> EXTERN
-- On MATCH_KIND reduce production annotationToken -> EXTERN
-- On MASK reduce production annotationToken -> EXTERN
-- On L_PAREN reduce production annotationToken -> EXTERN
-- On L_BRACKET reduce production annotationToken -> EXTERN
-- On L_BRACE reduce production annotationToken -> EXTERN
-- On L_ANGLE reduce production annotationToken -> EXTERN
-- On LE reduce production annotationToken -> EXTERN
-- On KEY reduce production annotationToken -> EXTERN
-- On INTEGER reduce production annotationToken -> EXTERN
-- On INT reduce production annotationToken -> EXTERN
-- On INOUT reduce production annotationToken -> EXTERN
-- On IN reduce production annotationToken -> EXTERN
-- On IF reduce production annotationToken -> EXTERN
-- On HEADER_UNION reduce production annotationToken -> EXTERN
-- On HEADER reduce production annotationToken -> EXTERN
-- On GE reduce production annotationToken -> EXTERN
-- On FALSE reduce production annotationToken -> EXTERN
-- On EXTERN reduce production annotationToken -> EXTERN
-- On EXIT reduce production annotationToken -> EXTERN
-- On ERROR reduce production annotationToken -> EXTERN
-- On EQ reduce production annotationToken -> EXTERN
-- On ENUM reduce production annotationToken -> EXTERN
-- On ENTRIES reduce production annotationToken -> EXTERN
-- On ELSE reduce production annotationToken -> EXTERN
-- On DOT reduce production annotationToken -> EXTERN
-- On DONTCARE reduce production annotationToken -> EXTERN
-- On DIV reduce production annotationToken -> EXTERN
-- On DEFAULT reduce production annotationToken -> EXTERN
-- On CONTROL reduce production annotationToken -> EXTERN
-- On CONST reduce production annotationToken -> EXTERN
-- On COMPLEMENT reduce production annotationToken -> EXTERN
-- On COMMA reduce production annotationToken -> EXTERN
-- On COLON reduce production annotationToken -> EXTERN
-- On BOOL reduce production annotationToken -> EXTERN
-- On BIT_XOR reduce production annotationToken -> EXTERN
-- On BIT_OR reduce production annotationToken -> EXTERN
-- On BIT_AND reduce production annotationToken -> EXTERN
-- On BIT reduce production annotationToken -> EXTERN
-- On AT reduce production annotationToken -> EXTERN
-- On ASSIGN reduce production annotationToken -> EXTERN
-- On APPLY reduce production annotationToken -> EXTERN
-- On AND reduce production annotationToken -> EXTERN
-- On ACTIONS reduce production annotationToken -> EXTERN
-- On ACTION reduce production annotationToken -> EXTERN
-- On ABSTRACT reduce production annotationToken -> EXTERN

State 268:
annotationToken -> EXIT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> EXIT
-- On VARBIT reduce production annotationToken -> EXIT
-- On VALUESET reduce production annotationToken -> EXIT
-- On TYPEDEF reduce production annotationToken -> EXIT
-- On TYPE reduce production annotationToken -> EXIT
-- On TUPLE reduce production annotationToken -> EXIT
-- On TRUE reduce production annotationToken -> EXIT
-- On TRANSITION reduce production annotationToken -> EXIT
-- On TABLE reduce production annotationToken -> EXIT
-- On SWITCH reduce production annotationToken -> EXIT
-- On STRUCT reduce production annotationToken -> EXIT
-- On STRING_LITERAL reduce production annotationToken -> EXIT
-- On STRING reduce production annotationToken -> EXIT
-- On STATE reduce production annotationToken -> EXIT
-- On SHL reduce production annotationToken -> EXIT
-- On SEMICOLON reduce production annotationToken -> EXIT
-- On SELECT reduce production annotationToken -> EXIT
-- On R_PAREN reduce production annotationToken -> EXIT
-- On R_BRACKET reduce production annotationToken -> EXIT
-- On R_BRACE reduce production annotationToken -> EXIT
-- On R_ANGLE reduce production annotationToken -> EXIT
-- On RETURN reduce production annotationToken -> EXIT
-- On RANGE reduce production annotationToken -> EXIT
-- On QUESTION reduce production annotationToken -> EXIT
-- On PRAGMA_END reduce production annotationToken -> EXIT
-- On PRAGMA reduce production annotationToken -> EXIT
-- On PLUS_SAT reduce production annotationToken -> EXIT
-- On PLUSPLUS reduce production annotationToken -> EXIT
-- On PLUS reduce production annotationToken -> EXIT
-- On PARSER reduce production annotationToken -> EXIT
-- On PACKAGE reduce production annotationToken -> EXIT
-- On OUT reduce production annotationToken -> EXIT
-- On OR reduce production annotationToken -> EXIT
-- On NOT reduce production annotationToken -> EXIT
-- On NE reduce production annotationToken -> EXIT
-- On NAME reduce production annotationToken -> EXIT
-- On MUL reduce production annotationToken -> EXIT
-- On MOD reduce production annotationToken -> EXIT
-- On MINUS_SAT reduce production annotationToken -> EXIT
-- On MINUS reduce production annotationToken -> EXIT
-- On MATCH_KIND reduce production annotationToken -> EXIT
-- On MASK reduce production annotationToken -> EXIT
-- On L_PAREN reduce production annotationToken -> EXIT
-- On L_BRACKET reduce production annotationToken -> EXIT
-- On L_BRACE reduce production annotationToken -> EXIT
-- On L_ANGLE reduce production annotationToken -> EXIT
-- On LE reduce production annotationToken -> EXIT
-- On KEY reduce production annotationToken -> EXIT
-- On INTEGER reduce production annotationToken -> EXIT
-- On INT reduce production annotationToken -> EXIT
-- On INOUT reduce production annotationToken -> EXIT
-- On IN reduce production annotationToken -> EXIT
-- On IF reduce production annotationToken -> EXIT
-- On HEADER_UNION reduce production annotationToken -> EXIT
-- On HEADER reduce production annotationToken -> EXIT
-- On GE reduce production annotationToken -> EXIT
-- On FALSE reduce production annotationToken -> EXIT
-- On EXTERN reduce production annotationToken -> EXIT
-- On EXIT reduce production annotationToken -> EXIT
-- On ERROR reduce production annotationToken -> EXIT
-- On EQ reduce production annotationToken -> EXIT
-- On ENUM reduce production annotationToken -> EXIT
-- On ENTRIES reduce production annotationToken -> EXIT
-- On ELSE reduce production annotationToken -> EXIT
-- On DOT reduce production annotationToken -> EXIT
-- On DONTCARE reduce production annotationToken -> EXIT
-- On DIV reduce production annotationToken -> EXIT
-- On DEFAULT reduce production annotationToken -> EXIT
-- On CONTROL reduce production annotationToken -> EXIT
-- On CONST reduce production annotationToken -> EXIT
-- On COMPLEMENT reduce production annotationToken -> EXIT
-- On COMMA reduce production annotationToken -> EXIT
-- On COLON reduce production annotationToken -> EXIT
-- On BOOL reduce production annotationToken -> EXIT
-- On BIT_XOR reduce production annotationToken -> EXIT
-- On BIT_OR reduce production annotationToken -> EXIT
-- On BIT_AND reduce production annotationToken -> EXIT
-- On BIT reduce production annotationToken -> EXIT
-- On AT reduce production annotationToken -> EXIT
-- On ASSIGN reduce production annotationToken -> EXIT
-- On APPLY reduce production annotationToken -> EXIT
-- On AND reduce production annotationToken -> EXIT
-- On ACTIONS reduce production annotationToken -> EXIT
-- On ACTION reduce production annotationToken -> EXIT
-- On ABSTRACT reduce production annotationToken -> EXIT

State 269:
annotationToken -> ERROR . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> ERROR
-- On VARBIT reduce production annotationToken -> ERROR
-- On VALUESET reduce production annotationToken -> ERROR
-- On TYPEDEF reduce production annotationToken -> ERROR
-- On TYPE reduce production annotationToken -> ERROR
-- On TUPLE reduce production annotationToken -> ERROR
-- On TRUE reduce production annotationToken -> ERROR
-- On TRANSITION reduce production annotationToken -> ERROR
-- On TABLE reduce production annotationToken -> ERROR
-- On SWITCH reduce production annotationToken -> ERROR
-- On STRUCT reduce production annotationToken -> ERROR
-- On STRING_LITERAL reduce production annotationToken -> ERROR
-- On STRING reduce production annotationToken -> ERROR
-- On STATE reduce production annotationToken -> ERROR
-- On SHL reduce production annotationToken -> ERROR
-- On SEMICOLON reduce production annotationToken -> ERROR
-- On SELECT reduce production annotationToken -> ERROR
-- On R_PAREN reduce production annotationToken -> ERROR
-- On R_BRACKET reduce production annotationToken -> ERROR
-- On R_BRACE reduce production annotationToken -> ERROR
-- On R_ANGLE reduce production annotationToken -> ERROR
-- On RETURN reduce production annotationToken -> ERROR
-- On RANGE reduce production annotationToken -> ERROR
-- On QUESTION reduce production annotationToken -> ERROR
-- On PRAGMA_END reduce production annotationToken -> ERROR
-- On PRAGMA reduce production annotationToken -> ERROR
-- On PLUS_SAT reduce production annotationToken -> ERROR
-- On PLUSPLUS reduce production annotationToken -> ERROR
-- On PLUS reduce production annotationToken -> ERROR
-- On PARSER reduce production annotationToken -> ERROR
-- On PACKAGE reduce production annotationToken -> ERROR
-- On OUT reduce production annotationToken -> ERROR
-- On OR reduce production annotationToken -> ERROR
-- On NOT reduce production annotationToken -> ERROR
-- On NE reduce production annotationToken -> ERROR
-- On NAME reduce production annotationToken -> ERROR
-- On MUL reduce production annotationToken -> ERROR
-- On MOD reduce production annotationToken -> ERROR
-- On MINUS_SAT reduce production annotationToken -> ERROR
-- On MINUS reduce production annotationToken -> ERROR
-- On MATCH_KIND reduce production annotationToken -> ERROR
-- On MASK reduce production annotationToken -> ERROR
-- On L_PAREN reduce production annotationToken -> ERROR
-- On L_BRACKET reduce production annotationToken -> ERROR
-- On L_BRACE reduce production annotationToken -> ERROR
-- On L_ANGLE reduce production annotationToken -> ERROR
-- On LE reduce production annotationToken -> ERROR
-- On KEY reduce production annotationToken -> ERROR
-- On INTEGER reduce production annotationToken -> ERROR
-- On INT reduce production annotationToken -> ERROR
-- On INOUT reduce production annotationToken -> ERROR
-- On IN reduce production annotationToken -> ERROR
-- On IF reduce production annotationToken -> ERROR
-- On HEADER_UNION reduce production annotationToken -> ERROR
-- On HEADER reduce production annotationToken -> ERROR
-- On GE reduce production annotationToken -> ERROR
-- On FALSE reduce production annotationToken -> ERROR
-- On EXTERN reduce production annotationToken -> ERROR
-- On EXIT reduce production annotationToken -> ERROR
-- On ERROR reduce production annotationToken -> ERROR
-- On EQ reduce production annotationToken -> ERROR
-- On ENUM reduce production annotationToken -> ERROR
-- On ENTRIES reduce production annotationToken -> ERROR
-- On ELSE reduce production annotationToken -> ERROR
-- On DOT reduce production annotationToken -> ERROR
-- On DONTCARE reduce production annotationToken -> ERROR
-- On DIV reduce production annotationToken -> ERROR
-- On DEFAULT reduce production annotationToken -> ERROR
-- On CONTROL reduce production annotationToken -> ERROR
-- On CONST reduce production annotationToken -> ERROR
-- On COMPLEMENT reduce production annotationToken -> ERROR
-- On COMMA reduce production annotationToken -> ERROR
-- On COLON reduce production annotationToken -> ERROR
-- On BOOL reduce production annotationToken -> ERROR
-- On BIT_XOR reduce production annotationToken -> ERROR
-- On BIT_OR reduce production annotationToken -> ERROR
-- On BIT_AND reduce production annotationToken -> ERROR
-- On BIT reduce production annotationToken -> ERROR
-- On AT reduce production annotationToken -> ERROR
-- On ASSIGN reduce production annotationToken -> ERROR
-- On APPLY reduce production annotationToken -> ERROR
-- On AND reduce production annotationToken -> ERROR
-- On ACTIONS reduce production annotationToken -> ERROR
-- On ACTION reduce production annotationToken -> ERROR
-- On ABSTRACT reduce production annotationToken -> ERROR

State 270:
annotationToken -> EQ . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> EQ
-- On VARBIT reduce production annotationToken -> EQ
-- On VALUESET reduce production annotationToken -> EQ
-- On TYPEDEF reduce production annotationToken -> EQ
-- On TYPE reduce production annotationToken -> EQ
-- On TUPLE reduce production annotationToken -> EQ
-- On TRUE reduce production annotationToken -> EQ
-- On TRANSITION reduce production annotationToken -> EQ
-- On TABLE reduce production annotationToken -> EQ
-- On SWITCH reduce production annotationToken -> EQ
-- On STRUCT reduce production annotationToken -> EQ
-- On STRING_LITERAL reduce production annotationToken -> EQ
-- On STRING reduce production annotationToken -> EQ
-- On STATE reduce production annotationToken -> EQ
-- On SHL reduce production annotationToken -> EQ
-- On SEMICOLON reduce production annotationToken -> EQ
-- On SELECT reduce production annotationToken -> EQ
-- On R_PAREN reduce production annotationToken -> EQ
-- On R_BRACKET reduce production annotationToken -> EQ
-- On R_BRACE reduce production annotationToken -> EQ
-- On R_ANGLE reduce production annotationToken -> EQ
-- On RETURN reduce production annotationToken -> EQ
-- On RANGE reduce production annotationToken -> EQ
-- On QUESTION reduce production annotationToken -> EQ
-- On PRAGMA_END reduce production annotationToken -> EQ
-- On PRAGMA reduce production annotationToken -> EQ
-- On PLUS_SAT reduce production annotationToken -> EQ
-- On PLUSPLUS reduce production annotationToken -> EQ
-- On PLUS reduce production annotationToken -> EQ
-- On PARSER reduce production annotationToken -> EQ
-- On PACKAGE reduce production annotationToken -> EQ
-- On OUT reduce production annotationToken -> EQ
-- On OR reduce production annotationToken -> EQ
-- On NOT reduce production annotationToken -> EQ
-- On NE reduce production annotationToken -> EQ
-- On NAME reduce production annotationToken -> EQ
-- On MUL reduce production annotationToken -> EQ
-- On MOD reduce production annotationToken -> EQ
-- On MINUS_SAT reduce production annotationToken -> EQ
-- On MINUS reduce production annotationToken -> EQ
-- On MATCH_KIND reduce production annotationToken -> EQ
-- On MASK reduce production annotationToken -> EQ
-- On L_PAREN reduce production annotationToken -> EQ
-- On L_BRACKET reduce production annotationToken -> EQ
-- On L_BRACE reduce production annotationToken -> EQ
-- On L_ANGLE reduce production annotationToken -> EQ
-- On LE reduce production annotationToken -> EQ
-- On KEY reduce production annotationToken -> EQ
-- On INTEGER reduce production annotationToken -> EQ
-- On INT reduce production annotationToken -> EQ
-- On INOUT reduce production annotationToken -> EQ
-- On IN reduce production annotationToken -> EQ
-- On IF reduce production annotationToken -> EQ
-- On HEADER_UNION reduce production annotationToken -> EQ
-- On HEADER reduce production annotationToken -> EQ
-- On GE reduce production annotationToken -> EQ
-- On FALSE reduce production annotationToken -> EQ
-- On EXTERN reduce production annotationToken -> EQ
-- On EXIT reduce production annotationToken -> EQ
-- On ERROR reduce production annotationToken -> EQ
-- On EQ reduce production annotationToken -> EQ
-- On ENUM reduce production annotationToken -> EQ
-- On ENTRIES reduce production annotationToken -> EQ
-- On ELSE reduce production annotationToken -> EQ
-- On DOT reduce production annotationToken -> EQ
-- On DONTCARE reduce production annotationToken -> EQ
-- On DIV reduce production annotationToken -> EQ
-- On DEFAULT reduce production annotationToken -> EQ
-- On CONTROL reduce production annotationToken -> EQ
-- On CONST reduce production annotationToken -> EQ
-- On COMPLEMENT reduce production annotationToken -> EQ
-- On COMMA reduce production annotationToken -> EQ
-- On COLON reduce production annotationToken -> EQ
-- On BOOL reduce production annotationToken -> EQ
-- On BIT_XOR reduce production annotationToken -> EQ
-- On BIT_OR reduce production annotationToken -> EQ
-- On BIT_AND reduce production annotationToken -> EQ
-- On BIT reduce production annotationToken -> EQ
-- On AT reduce production annotationToken -> EQ
-- On ASSIGN reduce production annotationToken -> EQ
-- On APPLY reduce production annotationToken -> EQ
-- On AND reduce production annotationToken -> EQ
-- On ACTIONS reduce production annotationToken -> EQ
-- On ACTION reduce production annotationToken -> EQ
-- On ABSTRACT reduce production annotationToken -> EQ

State 271:
annotationToken -> ENUM . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> ENUM
-- On VARBIT reduce production annotationToken -> ENUM
-- On VALUESET reduce production annotationToken -> ENUM
-- On TYPEDEF reduce production annotationToken -> ENUM
-- On TYPE reduce production annotationToken -> ENUM
-- On TUPLE reduce production annotationToken -> ENUM
-- On TRUE reduce production annotationToken -> ENUM
-- On TRANSITION reduce production annotationToken -> ENUM
-- On TABLE reduce production annotationToken -> ENUM
-- On SWITCH reduce production annotationToken -> ENUM
-- On STRUCT reduce production annotationToken -> ENUM
-- On STRING_LITERAL reduce production annotationToken -> ENUM
-- On STRING reduce production annotationToken -> ENUM
-- On STATE reduce production annotationToken -> ENUM
-- On SHL reduce production annotationToken -> ENUM
-- On SEMICOLON reduce production annotationToken -> ENUM
-- On SELECT reduce production annotationToken -> ENUM
-- On R_PAREN reduce production annotationToken -> ENUM
-- On R_BRACKET reduce production annotationToken -> ENUM
-- On R_BRACE reduce production annotationToken -> ENUM
-- On R_ANGLE reduce production annotationToken -> ENUM
-- On RETURN reduce production annotationToken -> ENUM
-- On RANGE reduce production annotationToken -> ENUM
-- On QUESTION reduce production annotationToken -> ENUM
-- On PRAGMA_END reduce production annotationToken -> ENUM
-- On PRAGMA reduce production annotationToken -> ENUM
-- On PLUS_SAT reduce production annotationToken -> ENUM
-- On PLUSPLUS reduce production annotationToken -> ENUM
-- On PLUS reduce production annotationToken -> ENUM
-- On PARSER reduce production annotationToken -> ENUM
-- On PACKAGE reduce production annotationToken -> ENUM
-- On OUT reduce production annotationToken -> ENUM
-- On OR reduce production annotationToken -> ENUM
-- On NOT reduce production annotationToken -> ENUM
-- On NE reduce production annotationToken -> ENUM
-- On NAME reduce production annotationToken -> ENUM
-- On MUL reduce production annotationToken -> ENUM
-- On MOD reduce production annotationToken -> ENUM
-- On MINUS_SAT reduce production annotationToken -> ENUM
-- On MINUS reduce production annotationToken -> ENUM
-- On MATCH_KIND reduce production annotationToken -> ENUM
-- On MASK reduce production annotationToken -> ENUM
-- On L_PAREN reduce production annotationToken -> ENUM
-- On L_BRACKET reduce production annotationToken -> ENUM
-- On L_BRACE reduce production annotationToken -> ENUM
-- On L_ANGLE reduce production annotationToken -> ENUM
-- On LE reduce production annotationToken -> ENUM
-- On KEY reduce production annotationToken -> ENUM
-- On INTEGER reduce production annotationToken -> ENUM
-- On INT reduce production annotationToken -> ENUM
-- On INOUT reduce production annotationToken -> ENUM
-- On IN reduce production annotationToken -> ENUM
-- On IF reduce production annotationToken -> ENUM
-- On HEADER_UNION reduce production annotationToken -> ENUM
-- On HEADER reduce production annotationToken -> ENUM
-- On GE reduce production annotationToken -> ENUM
-- On FALSE reduce production annotationToken -> ENUM
-- On EXTERN reduce production annotationToken -> ENUM
-- On EXIT reduce production annotationToken -> ENUM
-- On ERROR reduce production annotationToken -> ENUM
-- On EQ reduce production annotationToken -> ENUM
-- On ENUM reduce production annotationToken -> ENUM
-- On ENTRIES reduce production annotationToken -> ENUM
-- On ELSE reduce production annotationToken -> ENUM
-- On DOT reduce production annotationToken -> ENUM
-- On DONTCARE reduce production annotationToken -> ENUM
-- On DIV reduce production annotationToken -> ENUM
-- On DEFAULT reduce production annotationToken -> ENUM
-- On CONTROL reduce production annotationToken -> ENUM
-- On CONST reduce production annotationToken -> ENUM
-- On COMPLEMENT reduce production annotationToken -> ENUM
-- On COMMA reduce production annotationToken -> ENUM
-- On COLON reduce production annotationToken -> ENUM
-- On BOOL reduce production annotationToken -> ENUM
-- On BIT_XOR reduce production annotationToken -> ENUM
-- On BIT_OR reduce production annotationToken -> ENUM
-- On BIT_AND reduce production annotationToken -> ENUM
-- On BIT reduce production annotationToken -> ENUM
-- On AT reduce production annotationToken -> ENUM
-- On ASSIGN reduce production annotationToken -> ENUM
-- On APPLY reduce production annotationToken -> ENUM
-- On AND reduce production annotationToken -> ENUM
-- On ACTIONS reduce production annotationToken -> ENUM
-- On ACTION reduce production annotationToken -> ENUM
-- On ABSTRACT reduce production annotationToken -> ENUM

State 272:
annotationToken -> ENTRIES . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> ENTRIES
-- On VARBIT reduce production annotationToken -> ENTRIES
-- On VALUESET reduce production annotationToken -> ENTRIES
-- On TYPEDEF reduce production annotationToken -> ENTRIES
-- On TYPE reduce production annotationToken -> ENTRIES
-- On TUPLE reduce production annotationToken -> ENTRIES
-- On TRUE reduce production annotationToken -> ENTRIES
-- On TRANSITION reduce production annotationToken -> ENTRIES
-- On TABLE reduce production annotationToken -> ENTRIES
-- On SWITCH reduce production annotationToken -> ENTRIES
-- On STRUCT reduce production annotationToken -> ENTRIES
-- On STRING_LITERAL reduce production annotationToken -> ENTRIES
-- On STRING reduce production annotationToken -> ENTRIES
-- On STATE reduce production annotationToken -> ENTRIES
-- On SHL reduce production annotationToken -> ENTRIES
-- On SEMICOLON reduce production annotationToken -> ENTRIES
-- On SELECT reduce production annotationToken -> ENTRIES
-- On R_PAREN reduce production annotationToken -> ENTRIES
-- On R_BRACKET reduce production annotationToken -> ENTRIES
-- On R_BRACE reduce production annotationToken -> ENTRIES
-- On R_ANGLE reduce production annotationToken -> ENTRIES
-- On RETURN reduce production annotationToken -> ENTRIES
-- On RANGE reduce production annotationToken -> ENTRIES
-- On QUESTION reduce production annotationToken -> ENTRIES
-- On PRAGMA_END reduce production annotationToken -> ENTRIES
-- On PRAGMA reduce production annotationToken -> ENTRIES
-- On PLUS_SAT reduce production annotationToken -> ENTRIES
-- On PLUSPLUS reduce production annotationToken -> ENTRIES
-- On PLUS reduce production annotationToken -> ENTRIES
-- On PARSER reduce production annotationToken -> ENTRIES
-- On PACKAGE reduce production annotationToken -> ENTRIES
-- On OUT reduce production annotationToken -> ENTRIES
-- On OR reduce production annotationToken -> ENTRIES
-- On NOT reduce production annotationToken -> ENTRIES
-- On NE reduce production annotationToken -> ENTRIES
-- On NAME reduce production annotationToken -> ENTRIES
-- On MUL reduce production annotationToken -> ENTRIES
-- On MOD reduce production annotationToken -> ENTRIES
-- On MINUS_SAT reduce production annotationToken -> ENTRIES
-- On MINUS reduce production annotationToken -> ENTRIES
-- On MATCH_KIND reduce production annotationToken -> ENTRIES
-- On MASK reduce production annotationToken -> ENTRIES
-- On L_PAREN reduce production annotationToken -> ENTRIES
-- On L_BRACKET reduce production annotationToken -> ENTRIES
-- On L_BRACE reduce production annotationToken -> ENTRIES
-- On L_ANGLE reduce production annotationToken -> ENTRIES
-- On LE reduce production annotationToken -> ENTRIES
-- On KEY reduce production annotationToken -> ENTRIES
-- On INTEGER reduce production annotationToken -> ENTRIES
-- On INT reduce production annotationToken -> ENTRIES
-- On INOUT reduce production annotationToken -> ENTRIES
-- On IN reduce production annotationToken -> ENTRIES
-- On IF reduce production annotationToken -> ENTRIES
-- On HEADER_UNION reduce production annotationToken -> ENTRIES
-- On HEADER reduce production annotationToken -> ENTRIES
-- On GE reduce production annotationToken -> ENTRIES
-- On FALSE reduce production annotationToken -> ENTRIES
-- On EXTERN reduce production annotationToken -> ENTRIES
-- On EXIT reduce production annotationToken -> ENTRIES
-- On ERROR reduce production annotationToken -> ENTRIES
-- On EQ reduce production annotationToken -> ENTRIES
-- On ENUM reduce production annotationToken -> ENTRIES
-- On ENTRIES reduce production annotationToken -> ENTRIES
-- On ELSE reduce production annotationToken -> ENTRIES
-- On DOT reduce production annotationToken -> ENTRIES
-- On DONTCARE reduce production annotationToken -> ENTRIES
-- On DIV reduce production annotationToken -> ENTRIES
-- On DEFAULT reduce production annotationToken -> ENTRIES
-- On CONTROL reduce production annotationToken -> ENTRIES
-- On CONST reduce production annotationToken -> ENTRIES
-- On COMPLEMENT reduce production annotationToken -> ENTRIES
-- On COMMA reduce production annotationToken -> ENTRIES
-- On COLON reduce production annotationToken -> ENTRIES
-- On BOOL reduce production annotationToken -> ENTRIES
-- On BIT_XOR reduce production annotationToken -> ENTRIES
-- On BIT_OR reduce production annotationToken -> ENTRIES
-- On BIT_AND reduce production annotationToken -> ENTRIES
-- On BIT reduce production annotationToken -> ENTRIES
-- On AT reduce production annotationToken -> ENTRIES
-- On ASSIGN reduce production annotationToken -> ENTRIES
-- On APPLY reduce production annotationToken -> ENTRIES
-- On AND reduce production annotationToken -> ENTRIES
-- On ACTIONS reduce production annotationToken -> ENTRIES
-- On ACTION reduce production annotationToken -> ENTRIES
-- On ABSTRACT reduce production annotationToken -> ENTRIES

State 273:
annotationToken -> ELSE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> ELSE
-- On VARBIT reduce production annotationToken -> ELSE
-- On VALUESET reduce production annotationToken -> ELSE
-- On TYPEDEF reduce production annotationToken -> ELSE
-- On TYPE reduce production annotationToken -> ELSE
-- On TUPLE reduce production annotationToken -> ELSE
-- On TRUE reduce production annotationToken -> ELSE
-- On TRANSITION reduce production annotationToken -> ELSE
-- On TABLE reduce production annotationToken -> ELSE
-- On SWITCH reduce production annotationToken -> ELSE
-- On STRUCT reduce production annotationToken -> ELSE
-- On STRING_LITERAL reduce production annotationToken -> ELSE
-- On STRING reduce production annotationToken -> ELSE
-- On STATE reduce production annotationToken -> ELSE
-- On SHL reduce production annotationToken -> ELSE
-- On SEMICOLON reduce production annotationToken -> ELSE
-- On SELECT reduce production annotationToken -> ELSE
-- On R_PAREN reduce production annotationToken -> ELSE
-- On R_BRACKET reduce production annotationToken -> ELSE
-- On R_BRACE reduce production annotationToken -> ELSE
-- On R_ANGLE reduce production annotationToken -> ELSE
-- On RETURN reduce production annotationToken -> ELSE
-- On RANGE reduce production annotationToken -> ELSE
-- On QUESTION reduce production annotationToken -> ELSE
-- On PRAGMA_END reduce production annotationToken -> ELSE
-- On PRAGMA reduce production annotationToken -> ELSE
-- On PLUS_SAT reduce production annotationToken -> ELSE
-- On PLUSPLUS reduce production annotationToken -> ELSE
-- On PLUS reduce production annotationToken -> ELSE
-- On PARSER reduce production annotationToken -> ELSE
-- On PACKAGE reduce production annotationToken -> ELSE
-- On OUT reduce production annotationToken -> ELSE
-- On OR reduce production annotationToken -> ELSE
-- On NOT reduce production annotationToken -> ELSE
-- On NE reduce production annotationToken -> ELSE
-- On NAME reduce production annotationToken -> ELSE
-- On MUL reduce production annotationToken -> ELSE
-- On MOD reduce production annotationToken -> ELSE
-- On MINUS_SAT reduce production annotationToken -> ELSE
-- On MINUS reduce production annotationToken -> ELSE
-- On MATCH_KIND reduce production annotationToken -> ELSE
-- On MASK reduce production annotationToken -> ELSE
-- On L_PAREN reduce production annotationToken -> ELSE
-- On L_BRACKET reduce production annotationToken -> ELSE
-- On L_BRACE reduce production annotationToken -> ELSE
-- On L_ANGLE reduce production annotationToken -> ELSE
-- On LE reduce production annotationToken -> ELSE
-- On KEY reduce production annotationToken -> ELSE
-- On INTEGER reduce production annotationToken -> ELSE
-- On INT reduce production annotationToken -> ELSE
-- On INOUT reduce production annotationToken -> ELSE
-- On IN reduce production annotationToken -> ELSE
-- On IF reduce production annotationToken -> ELSE
-- On HEADER_UNION reduce production annotationToken -> ELSE
-- On HEADER reduce production annotationToken -> ELSE
-- On GE reduce production annotationToken -> ELSE
-- On FALSE reduce production annotationToken -> ELSE
-- On EXTERN reduce production annotationToken -> ELSE
-- On EXIT reduce production annotationToken -> ELSE
-- On ERROR reduce production annotationToken -> ELSE
-- On EQ reduce production annotationToken -> ELSE
-- On ENUM reduce production annotationToken -> ELSE
-- On ENTRIES reduce production annotationToken -> ELSE
-- On ELSE reduce production annotationToken -> ELSE
-- On DOT reduce production annotationToken -> ELSE
-- On DONTCARE reduce production annotationToken -> ELSE
-- On DIV reduce production annotationToken -> ELSE
-- On DEFAULT reduce production annotationToken -> ELSE
-- On CONTROL reduce production annotationToken -> ELSE
-- On CONST reduce production annotationToken -> ELSE
-- On COMPLEMENT reduce production annotationToken -> ELSE
-- On COMMA reduce production annotationToken -> ELSE
-- On COLON reduce production annotationToken -> ELSE
-- On BOOL reduce production annotationToken -> ELSE
-- On BIT_XOR reduce production annotationToken -> ELSE
-- On BIT_OR reduce production annotationToken -> ELSE
-- On BIT_AND reduce production annotationToken -> ELSE
-- On BIT reduce production annotationToken -> ELSE
-- On AT reduce production annotationToken -> ELSE
-- On ASSIGN reduce production annotationToken -> ELSE
-- On APPLY reduce production annotationToken -> ELSE
-- On AND reduce production annotationToken -> ELSE
-- On ACTIONS reduce production annotationToken -> ELSE
-- On ACTION reduce production annotationToken -> ELSE
-- On ABSTRACT reduce production annotationToken -> ELSE

State 274:
annotationToken -> DOT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> DOT
-- On VARBIT reduce production annotationToken -> DOT
-- On VALUESET reduce production annotationToken -> DOT
-- On TYPEDEF reduce production annotationToken -> DOT
-- On TYPE reduce production annotationToken -> DOT
-- On TUPLE reduce production annotationToken -> DOT
-- On TRUE reduce production annotationToken -> DOT
-- On TRANSITION reduce production annotationToken -> DOT
-- On TABLE reduce production annotationToken -> DOT
-- On SWITCH reduce production annotationToken -> DOT
-- On STRUCT reduce production annotationToken -> DOT
-- On STRING_LITERAL reduce production annotationToken -> DOT
-- On STRING reduce production annotationToken -> DOT
-- On STATE reduce production annotationToken -> DOT
-- On SHL reduce production annotationToken -> DOT
-- On SEMICOLON reduce production annotationToken -> DOT
-- On SELECT reduce production annotationToken -> DOT
-- On R_PAREN reduce production annotationToken -> DOT
-- On R_BRACKET reduce production annotationToken -> DOT
-- On R_BRACE reduce production annotationToken -> DOT
-- On R_ANGLE reduce production annotationToken -> DOT
-- On RETURN reduce production annotationToken -> DOT
-- On RANGE reduce production annotationToken -> DOT
-- On QUESTION reduce production annotationToken -> DOT
-- On PRAGMA_END reduce production annotationToken -> DOT
-- On PRAGMA reduce production annotationToken -> DOT
-- On PLUS_SAT reduce production annotationToken -> DOT
-- On PLUSPLUS reduce production annotationToken -> DOT
-- On PLUS reduce production annotationToken -> DOT
-- On PARSER reduce production annotationToken -> DOT
-- On PACKAGE reduce production annotationToken -> DOT
-- On OUT reduce production annotationToken -> DOT
-- On OR reduce production annotationToken -> DOT
-- On NOT reduce production annotationToken -> DOT
-- On NE reduce production annotationToken -> DOT
-- On NAME reduce production annotationToken -> DOT
-- On MUL reduce production annotationToken -> DOT
-- On MOD reduce production annotationToken -> DOT
-- On MINUS_SAT reduce production annotationToken -> DOT
-- On MINUS reduce production annotationToken -> DOT
-- On MATCH_KIND reduce production annotationToken -> DOT
-- On MASK reduce production annotationToken -> DOT
-- On L_PAREN reduce production annotationToken -> DOT
-- On L_BRACKET reduce production annotationToken -> DOT
-- On L_BRACE reduce production annotationToken -> DOT
-- On L_ANGLE reduce production annotationToken -> DOT
-- On LE reduce production annotationToken -> DOT
-- On KEY reduce production annotationToken -> DOT
-- On INTEGER reduce production annotationToken -> DOT
-- On INT reduce production annotationToken -> DOT
-- On INOUT reduce production annotationToken -> DOT
-- On IN reduce production annotationToken -> DOT
-- On IF reduce production annotationToken -> DOT
-- On HEADER_UNION reduce production annotationToken -> DOT
-- On HEADER reduce production annotationToken -> DOT
-- On GE reduce production annotationToken -> DOT
-- On FALSE reduce production annotationToken -> DOT
-- On EXTERN reduce production annotationToken -> DOT
-- On EXIT reduce production annotationToken -> DOT
-- On ERROR reduce production annotationToken -> DOT
-- On EQ reduce production annotationToken -> DOT
-- On ENUM reduce production annotationToken -> DOT
-- On ENTRIES reduce production annotationToken -> DOT
-- On ELSE reduce production annotationToken -> DOT
-- On DOT reduce production annotationToken -> DOT
-- On DONTCARE reduce production annotationToken -> DOT
-- On DIV reduce production annotationToken -> DOT
-- On DEFAULT reduce production annotationToken -> DOT
-- On CONTROL reduce production annotationToken -> DOT
-- On CONST reduce production annotationToken -> DOT
-- On COMPLEMENT reduce production annotationToken -> DOT
-- On COMMA reduce production annotationToken -> DOT
-- On COLON reduce production annotationToken -> DOT
-- On BOOL reduce production annotationToken -> DOT
-- On BIT_XOR reduce production annotationToken -> DOT
-- On BIT_OR reduce production annotationToken -> DOT
-- On BIT_AND reduce production annotationToken -> DOT
-- On BIT reduce production annotationToken -> DOT
-- On AT reduce production annotationToken -> DOT
-- On ASSIGN reduce production annotationToken -> DOT
-- On APPLY reduce production annotationToken -> DOT
-- On AND reduce production annotationToken -> DOT
-- On ACTIONS reduce production annotationToken -> DOT
-- On ACTION reduce production annotationToken -> DOT
-- On ABSTRACT reduce production annotationToken -> DOT

State 275:
annotationToken -> DONTCARE . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> DONTCARE
-- On VARBIT reduce production annotationToken -> DONTCARE
-- On VALUESET reduce production annotationToken -> DONTCARE
-- On TYPEDEF reduce production annotationToken -> DONTCARE
-- On TYPE reduce production annotationToken -> DONTCARE
-- On TUPLE reduce production annotationToken -> DONTCARE
-- On TRUE reduce production annotationToken -> DONTCARE
-- On TRANSITION reduce production annotationToken -> DONTCARE
-- On TABLE reduce production annotationToken -> DONTCARE
-- On SWITCH reduce production annotationToken -> DONTCARE
-- On STRUCT reduce production annotationToken -> DONTCARE
-- On STRING_LITERAL reduce production annotationToken -> DONTCARE
-- On STRING reduce production annotationToken -> DONTCARE
-- On STATE reduce production annotationToken -> DONTCARE
-- On SHL reduce production annotationToken -> DONTCARE
-- On SEMICOLON reduce production annotationToken -> DONTCARE
-- On SELECT reduce production annotationToken -> DONTCARE
-- On R_PAREN reduce production annotationToken -> DONTCARE
-- On R_BRACKET reduce production annotationToken -> DONTCARE
-- On R_BRACE reduce production annotationToken -> DONTCARE
-- On R_ANGLE reduce production annotationToken -> DONTCARE
-- On RETURN reduce production annotationToken -> DONTCARE
-- On RANGE reduce production annotationToken -> DONTCARE
-- On QUESTION reduce production annotationToken -> DONTCARE
-- On PRAGMA_END reduce production annotationToken -> DONTCARE
-- On PRAGMA reduce production annotationToken -> DONTCARE
-- On PLUS_SAT reduce production annotationToken -> DONTCARE
-- On PLUSPLUS reduce production annotationToken -> DONTCARE
-- On PLUS reduce production annotationToken -> DONTCARE
-- On PARSER reduce production annotationToken -> DONTCARE
-- On PACKAGE reduce production annotationToken -> DONTCARE
-- On OUT reduce production annotationToken -> DONTCARE
-- On OR reduce production annotationToken -> DONTCARE
-- On NOT reduce production annotationToken -> DONTCARE
-- On NE reduce production annotationToken -> DONTCARE
-- On NAME reduce production annotationToken -> DONTCARE
-- On MUL reduce production annotationToken -> DONTCARE
-- On MOD reduce production annotationToken -> DONTCARE
-- On MINUS_SAT reduce production annotationToken -> DONTCARE
-- On MINUS reduce production annotationToken -> DONTCARE
-- On MATCH_KIND reduce production annotationToken -> DONTCARE
-- On MASK reduce production annotationToken -> DONTCARE
-- On L_PAREN reduce production annotationToken -> DONTCARE
-- On L_BRACKET reduce production annotationToken -> DONTCARE
-- On L_BRACE reduce production annotationToken -> DONTCARE
-- On L_ANGLE reduce production annotationToken -> DONTCARE
-- On LE reduce production annotationToken -> DONTCARE
-- On KEY reduce production annotationToken -> DONTCARE
-- On INTEGER reduce production annotationToken -> DONTCARE
-- On INT reduce production annotationToken -> DONTCARE
-- On INOUT reduce production annotationToken -> DONTCARE
-- On IN reduce production annotationToken -> DONTCARE
-- On IF reduce production annotationToken -> DONTCARE
-- On HEADER_UNION reduce production annotationToken -> DONTCARE
-- On HEADER reduce production annotationToken -> DONTCARE
-- On GE reduce production annotationToken -> DONTCARE
-- On FALSE reduce production annotationToken -> DONTCARE
-- On EXTERN reduce production annotationToken -> DONTCARE
-- On EXIT reduce production annotationToken -> DONTCARE
-- On ERROR reduce production annotationToken -> DONTCARE
-- On EQ reduce production annotationToken -> DONTCARE
-- On ENUM reduce production annotationToken -> DONTCARE
-- On ENTRIES reduce production annotationToken -> DONTCARE
-- On ELSE reduce production annotationToken -> DONTCARE
-- On DOT reduce production annotationToken -> DONTCARE
-- On DONTCARE reduce production annotationToken -> DONTCARE
-- On DIV reduce production annotationToken -> DONTCARE
-- On DEFAULT reduce production annotationToken -> DONTCARE
-- On CONTROL reduce production annotationToken -> DONTCARE
-- On CONST reduce production annotationToken -> DONTCARE
-- On COMPLEMENT reduce production annotationToken -> DONTCARE
-- On COMMA reduce production annotationToken -> DONTCARE
-- On COLON reduce production annotationToken -> DONTCARE
-- On BOOL reduce production annotationToken -> DONTCARE
-- On BIT_XOR reduce production annotationToken -> DONTCARE
-- On BIT_OR reduce production annotationToken -> DONTCARE
-- On BIT_AND reduce production annotationToken -> DONTCARE
-- On BIT reduce production annotationToken -> DONTCARE
-- On AT reduce production annotationToken -> DONTCARE
-- On ASSIGN reduce production annotationToken -> DONTCARE
-- On APPLY reduce production annotationToken -> DONTCARE
-- On AND reduce production annotationToken -> DONTCARE
-- On ACTIONS reduce production annotationToken -> DONTCARE
-- On ACTION reduce production annotationToken -> DONTCARE
-- On ABSTRACT reduce production annotationToken -> DONTCARE

State 276:
annotationToken -> DIV . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> DIV
-- On VARBIT reduce production annotationToken -> DIV
-- On VALUESET reduce production annotationToken -> DIV
-- On TYPEDEF reduce production annotationToken -> DIV
-- On TYPE reduce production annotationToken -> DIV
-- On TUPLE reduce production annotationToken -> DIV
-- On TRUE reduce production annotationToken -> DIV
-- On TRANSITION reduce production annotationToken -> DIV
-- On TABLE reduce production annotationToken -> DIV
-- On SWITCH reduce production annotationToken -> DIV
-- On STRUCT reduce production annotationToken -> DIV
-- On STRING_LITERAL reduce production annotationToken -> DIV
-- On STRING reduce production annotationToken -> DIV
-- On STATE reduce production annotationToken -> DIV
-- On SHL reduce production annotationToken -> DIV
-- On SEMICOLON reduce production annotationToken -> DIV
-- On SELECT reduce production annotationToken -> DIV
-- On R_PAREN reduce production annotationToken -> DIV
-- On R_BRACKET reduce production annotationToken -> DIV
-- On R_BRACE reduce production annotationToken -> DIV
-- On R_ANGLE reduce production annotationToken -> DIV
-- On RETURN reduce production annotationToken -> DIV
-- On RANGE reduce production annotationToken -> DIV
-- On QUESTION reduce production annotationToken -> DIV
-- On PRAGMA_END reduce production annotationToken -> DIV
-- On PRAGMA reduce production annotationToken -> DIV
-- On PLUS_SAT reduce production annotationToken -> DIV
-- On PLUSPLUS reduce production annotationToken -> DIV
-- On PLUS reduce production annotationToken -> DIV
-- On PARSER reduce production annotationToken -> DIV
-- On PACKAGE reduce production annotationToken -> DIV
-- On OUT reduce production annotationToken -> DIV
-- On OR reduce production annotationToken -> DIV
-- On NOT reduce production annotationToken -> DIV
-- On NE reduce production annotationToken -> DIV
-- On NAME reduce production annotationToken -> DIV
-- On MUL reduce production annotationToken -> DIV
-- On MOD reduce production annotationToken -> DIV
-- On MINUS_SAT reduce production annotationToken -> DIV
-- On MINUS reduce production annotationToken -> DIV
-- On MATCH_KIND reduce production annotationToken -> DIV
-- On MASK reduce production annotationToken -> DIV
-- On L_PAREN reduce production annotationToken -> DIV
-- On L_BRACKET reduce production annotationToken -> DIV
-- On L_BRACE reduce production annotationToken -> DIV
-- On L_ANGLE reduce production annotationToken -> DIV
-- On LE reduce production annotationToken -> DIV
-- On KEY reduce production annotationToken -> DIV
-- On INTEGER reduce production annotationToken -> DIV
-- On INT reduce production annotationToken -> DIV
-- On INOUT reduce production annotationToken -> DIV
-- On IN reduce production annotationToken -> DIV
-- On IF reduce production annotationToken -> DIV
-- On HEADER_UNION reduce production annotationToken -> DIV
-- On HEADER reduce production annotationToken -> DIV
-- On GE reduce production annotationToken -> DIV
-- On FALSE reduce production annotationToken -> DIV
-- On EXTERN reduce production annotationToken -> DIV
-- On EXIT reduce production annotationToken -> DIV
-- On ERROR reduce production annotationToken -> DIV
-- On EQ reduce production annotationToken -> DIV
-- On ENUM reduce production annotationToken -> DIV
-- On ENTRIES reduce production annotationToken -> DIV
-- On ELSE reduce production annotationToken -> DIV
-- On DOT reduce production annotationToken -> DIV
-- On DONTCARE reduce production annotationToken -> DIV
-- On DIV reduce production annotationToken -> DIV
-- On DEFAULT reduce production annotationToken -> DIV
-- On CONTROL reduce production annotationToken -> DIV
-- On CONST reduce production annotationToken -> DIV
-- On COMPLEMENT reduce production annotationToken -> DIV
-- On COMMA reduce production annotationToken -> DIV
-- On COLON reduce production annotationToken -> DIV
-- On BOOL reduce production annotationToken -> DIV
-- On BIT_XOR reduce production annotationToken -> DIV
-- On BIT_OR reduce production annotationToken -> DIV
-- On BIT_AND reduce production annotationToken -> DIV
-- On BIT reduce production annotationToken -> DIV
-- On AT reduce production annotationToken -> DIV
-- On ASSIGN reduce production annotationToken -> DIV
-- On APPLY reduce production annotationToken -> DIV
-- On AND reduce production annotationToken -> DIV
-- On ACTIONS reduce production annotationToken -> DIV
-- On ACTION reduce production annotationToken -> DIV
-- On ABSTRACT reduce production annotationToken -> DIV

State 277:
annotationToken -> DEFAULT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> DEFAULT
-- On VARBIT reduce production annotationToken -> DEFAULT
-- On VALUESET reduce production annotationToken -> DEFAULT
-- On TYPEDEF reduce production annotationToken -> DEFAULT
-- On TYPE reduce production annotationToken -> DEFAULT
-- On TUPLE reduce production annotationToken -> DEFAULT
-- On TRUE reduce production annotationToken -> DEFAULT
-- On TRANSITION reduce production annotationToken -> DEFAULT
-- On TABLE reduce production annotationToken -> DEFAULT
-- On SWITCH reduce production annotationToken -> DEFAULT
-- On STRUCT reduce production annotationToken -> DEFAULT
-- On STRING_LITERAL reduce production annotationToken -> DEFAULT
-- On STRING reduce production annotationToken -> DEFAULT
-- On STATE reduce production annotationToken -> DEFAULT
-- On SHL reduce production annotationToken -> DEFAULT
-- On SEMICOLON reduce production annotationToken -> DEFAULT
-- On SELECT reduce production annotationToken -> DEFAULT
-- On R_PAREN reduce production annotationToken -> DEFAULT
-- On R_BRACKET reduce production annotationToken -> DEFAULT
-- On R_BRACE reduce production annotationToken -> DEFAULT
-- On R_ANGLE reduce production annotationToken -> DEFAULT
-- On RETURN reduce production annotationToken -> DEFAULT
-- On RANGE reduce production annotationToken -> DEFAULT
-- On QUESTION reduce production annotationToken -> DEFAULT
-- On PRAGMA_END reduce production annotationToken -> DEFAULT
-- On PRAGMA reduce production annotationToken -> DEFAULT
-- On PLUS_SAT reduce production annotationToken -> DEFAULT
-- On PLUSPLUS reduce production annotationToken -> DEFAULT
-- On PLUS reduce production annotationToken -> DEFAULT
-- On PARSER reduce production annotationToken -> DEFAULT
-- On PACKAGE reduce production annotationToken -> DEFAULT
-- On OUT reduce production annotationToken -> DEFAULT
-- On OR reduce production annotationToken -> DEFAULT
-- On NOT reduce production annotationToken -> DEFAULT
-- On NE reduce production annotationToken -> DEFAULT
-- On NAME reduce production annotationToken -> DEFAULT
-- On MUL reduce production annotationToken -> DEFAULT
-- On MOD reduce production annotationToken -> DEFAULT
-- On MINUS_SAT reduce production annotationToken -> DEFAULT
-- On MINUS reduce production annotationToken -> DEFAULT
-- On MATCH_KIND reduce production annotationToken -> DEFAULT
-- On MASK reduce production annotationToken -> DEFAULT
-- On L_PAREN reduce production annotationToken -> DEFAULT
-- On L_BRACKET reduce production annotationToken -> DEFAULT
-- On L_BRACE reduce production annotationToken -> DEFAULT
-- On L_ANGLE reduce production annotationToken -> DEFAULT
-- On LE reduce production annotationToken -> DEFAULT
-- On KEY reduce production annotationToken -> DEFAULT
-- On INTEGER reduce production annotationToken -> DEFAULT
-- On INT reduce production annotationToken -> DEFAULT
-- On INOUT reduce production annotationToken -> DEFAULT
-- On IN reduce production annotationToken -> DEFAULT
-- On IF reduce production annotationToken -> DEFAULT
-- On HEADER_UNION reduce production annotationToken -> DEFAULT
-- On HEADER reduce production annotationToken -> DEFAULT
-- On GE reduce production annotationToken -> DEFAULT
-- On FALSE reduce production annotationToken -> DEFAULT
-- On EXTERN reduce production annotationToken -> DEFAULT
-- On EXIT reduce production annotationToken -> DEFAULT
-- On ERROR reduce production annotationToken -> DEFAULT
-- On EQ reduce production annotationToken -> DEFAULT
-- On ENUM reduce production annotationToken -> DEFAULT
-- On ENTRIES reduce production annotationToken -> DEFAULT
-- On ELSE reduce production annotationToken -> DEFAULT
-- On DOT reduce production annotationToken -> DEFAULT
-- On DONTCARE reduce production annotationToken -> DEFAULT
-- On DIV reduce production annotationToken -> DEFAULT
-- On DEFAULT reduce production annotationToken -> DEFAULT
-- On CONTROL reduce production annotationToken -> DEFAULT
-- On CONST reduce production annotationToken -> DEFAULT
-- On COMPLEMENT reduce production annotationToken -> DEFAULT
-- On COMMA reduce production annotationToken -> DEFAULT
-- On COLON reduce production annotationToken -> DEFAULT
-- On BOOL reduce production annotationToken -> DEFAULT
-- On BIT_XOR reduce production annotationToken -> DEFAULT
-- On BIT_OR reduce production annotationToken -> DEFAULT
-- On BIT_AND reduce production annotationToken -> DEFAULT
-- On BIT reduce production annotationToken -> DEFAULT
-- On AT reduce production annotationToken -> DEFAULT
-- On ASSIGN reduce production annotationToken -> DEFAULT
-- On APPLY reduce production annotationToken -> DEFAULT
-- On AND reduce production annotationToken -> DEFAULT
-- On ACTIONS reduce production annotationToken -> DEFAULT
-- On ACTION reduce production annotationToken -> DEFAULT
-- On ABSTRACT reduce production annotationToken -> DEFAULT

State 278:
annotationToken -> CONTROL . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> CONTROL
-- On VARBIT reduce production annotationToken -> CONTROL
-- On VALUESET reduce production annotationToken -> CONTROL
-- On TYPEDEF reduce production annotationToken -> CONTROL
-- On TYPE reduce production annotationToken -> CONTROL
-- On TUPLE reduce production annotationToken -> CONTROL
-- On TRUE reduce production annotationToken -> CONTROL
-- On TRANSITION reduce production annotationToken -> CONTROL
-- On TABLE reduce production annotationToken -> CONTROL
-- On SWITCH reduce production annotationToken -> CONTROL
-- On STRUCT reduce production annotationToken -> CONTROL
-- On STRING_LITERAL reduce production annotationToken -> CONTROL
-- On STRING reduce production annotationToken -> CONTROL
-- On STATE reduce production annotationToken -> CONTROL
-- On SHL reduce production annotationToken -> CONTROL
-- On SEMICOLON reduce production annotationToken -> CONTROL
-- On SELECT reduce production annotationToken -> CONTROL
-- On R_PAREN reduce production annotationToken -> CONTROL
-- On R_BRACKET reduce production annotationToken -> CONTROL
-- On R_BRACE reduce production annotationToken -> CONTROL
-- On R_ANGLE reduce production annotationToken -> CONTROL
-- On RETURN reduce production annotationToken -> CONTROL
-- On RANGE reduce production annotationToken -> CONTROL
-- On QUESTION reduce production annotationToken -> CONTROL
-- On PRAGMA_END reduce production annotationToken -> CONTROL
-- On PRAGMA reduce production annotationToken -> CONTROL
-- On PLUS_SAT reduce production annotationToken -> CONTROL
-- On PLUSPLUS reduce production annotationToken -> CONTROL
-- On PLUS reduce production annotationToken -> CONTROL
-- On PARSER reduce production annotationToken -> CONTROL
-- On PACKAGE reduce production annotationToken -> CONTROL
-- On OUT reduce production annotationToken -> CONTROL
-- On OR reduce production annotationToken -> CONTROL
-- On NOT reduce production annotationToken -> CONTROL
-- On NE reduce production annotationToken -> CONTROL
-- On NAME reduce production annotationToken -> CONTROL
-- On MUL reduce production annotationToken -> CONTROL
-- On MOD reduce production annotationToken -> CONTROL
-- On MINUS_SAT reduce production annotationToken -> CONTROL
-- On MINUS reduce production annotationToken -> CONTROL
-- On MATCH_KIND reduce production annotationToken -> CONTROL
-- On MASK reduce production annotationToken -> CONTROL
-- On L_PAREN reduce production annotationToken -> CONTROL
-- On L_BRACKET reduce production annotationToken -> CONTROL
-- On L_BRACE reduce production annotationToken -> CONTROL
-- On L_ANGLE reduce production annotationToken -> CONTROL
-- On LE reduce production annotationToken -> CONTROL
-- On KEY reduce production annotationToken -> CONTROL
-- On INTEGER reduce production annotationToken -> CONTROL
-- On INT reduce production annotationToken -> CONTROL
-- On INOUT reduce production annotationToken -> CONTROL
-- On IN reduce production annotationToken -> CONTROL
-- On IF reduce production annotationToken -> CONTROL
-- On HEADER_UNION reduce production annotationToken -> CONTROL
-- On HEADER reduce production annotationToken -> CONTROL
-- On GE reduce production annotationToken -> CONTROL
-- On FALSE reduce production annotationToken -> CONTROL
-- On EXTERN reduce production annotationToken -> CONTROL
-- On EXIT reduce production annotationToken -> CONTROL
-- On ERROR reduce production annotationToken -> CONTROL
-- On EQ reduce production annotationToken -> CONTROL
-- On ENUM reduce production annotationToken -> CONTROL
-- On ENTRIES reduce production annotationToken -> CONTROL
-- On ELSE reduce production annotationToken -> CONTROL
-- On DOT reduce production annotationToken -> CONTROL
-- On DONTCARE reduce production annotationToken -> CONTROL
-- On DIV reduce production annotationToken -> CONTROL
-- On DEFAULT reduce production annotationToken -> CONTROL
-- On CONTROL reduce production annotationToken -> CONTROL
-- On CONST reduce production annotationToken -> CONTROL
-- On COMPLEMENT reduce production annotationToken -> CONTROL
-- On COMMA reduce production annotationToken -> CONTROL
-- On COLON reduce production annotationToken -> CONTROL
-- On BOOL reduce production annotationToken -> CONTROL
-- On BIT_XOR reduce production annotationToken -> CONTROL
-- On BIT_OR reduce production annotationToken -> CONTROL
-- On BIT_AND reduce production annotationToken -> CONTROL
-- On BIT reduce production annotationToken -> CONTROL
-- On AT reduce production annotationToken -> CONTROL
-- On ASSIGN reduce production annotationToken -> CONTROL
-- On APPLY reduce production annotationToken -> CONTROL
-- On AND reduce production annotationToken -> CONTROL
-- On ACTIONS reduce production annotationToken -> CONTROL
-- On ACTION reduce production annotationToken -> CONTROL
-- On ABSTRACT reduce production annotationToken -> CONTROL

State 279:
annotationToken -> CONST . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> CONST
-- On VARBIT reduce production annotationToken -> CONST
-- On VALUESET reduce production annotationToken -> CONST
-- On TYPEDEF reduce production annotationToken -> CONST
-- On TYPE reduce production annotationToken -> CONST
-- On TUPLE reduce production annotationToken -> CONST
-- On TRUE reduce production annotationToken -> CONST
-- On TRANSITION reduce production annotationToken -> CONST
-- On TABLE reduce production annotationToken -> CONST
-- On SWITCH reduce production annotationToken -> CONST
-- On STRUCT reduce production annotationToken -> CONST
-- On STRING_LITERAL reduce production annotationToken -> CONST
-- On STRING reduce production annotationToken -> CONST
-- On STATE reduce production annotationToken -> CONST
-- On SHL reduce production annotationToken -> CONST
-- On SEMICOLON reduce production annotationToken -> CONST
-- On SELECT reduce production annotationToken -> CONST
-- On R_PAREN reduce production annotationToken -> CONST
-- On R_BRACKET reduce production annotationToken -> CONST
-- On R_BRACE reduce production annotationToken -> CONST
-- On R_ANGLE reduce production annotationToken -> CONST
-- On RETURN reduce production annotationToken -> CONST
-- On RANGE reduce production annotationToken -> CONST
-- On QUESTION reduce production annotationToken -> CONST
-- On PRAGMA_END reduce production annotationToken -> CONST
-- On PRAGMA reduce production annotationToken -> CONST
-- On PLUS_SAT reduce production annotationToken -> CONST
-- On PLUSPLUS reduce production annotationToken -> CONST
-- On PLUS reduce production annotationToken -> CONST
-- On PARSER reduce production annotationToken -> CONST
-- On PACKAGE reduce production annotationToken -> CONST
-- On OUT reduce production annotationToken -> CONST
-- On OR reduce production annotationToken -> CONST
-- On NOT reduce production annotationToken -> CONST
-- On NE reduce production annotationToken -> CONST
-- On NAME reduce production annotationToken -> CONST
-- On MUL reduce production annotationToken -> CONST
-- On MOD reduce production annotationToken -> CONST
-- On MINUS_SAT reduce production annotationToken -> CONST
-- On MINUS reduce production annotationToken -> CONST
-- On MATCH_KIND reduce production annotationToken -> CONST
-- On MASK reduce production annotationToken -> CONST
-- On L_PAREN reduce production annotationToken -> CONST
-- On L_BRACKET reduce production annotationToken -> CONST
-- On L_BRACE reduce production annotationToken -> CONST
-- On L_ANGLE reduce production annotationToken -> CONST
-- On LE reduce production annotationToken -> CONST
-- On KEY reduce production annotationToken -> CONST
-- On INTEGER reduce production annotationToken -> CONST
-- On INT reduce production annotationToken -> CONST
-- On INOUT reduce production annotationToken -> CONST
-- On IN reduce production annotationToken -> CONST
-- On IF reduce production annotationToken -> CONST
-- On HEADER_UNION reduce production annotationToken -> CONST
-- On HEADER reduce production annotationToken -> CONST
-- On GE reduce production annotationToken -> CONST
-- On FALSE reduce production annotationToken -> CONST
-- On EXTERN reduce production annotationToken -> CONST
-- On EXIT reduce production annotationToken -> CONST
-- On ERROR reduce production annotationToken -> CONST
-- On EQ reduce production annotationToken -> CONST
-- On ENUM reduce production annotationToken -> CONST
-- On ENTRIES reduce production annotationToken -> CONST
-- On ELSE reduce production annotationToken -> CONST
-- On DOT reduce production annotationToken -> CONST
-- On DONTCARE reduce production annotationToken -> CONST
-- On DIV reduce production annotationToken -> CONST
-- On DEFAULT reduce production annotationToken -> CONST
-- On CONTROL reduce production annotationToken -> CONST
-- On CONST reduce production annotationToken -> CONST
-- On COMPLEMENT reduce production annotationToken -> CONST
-- On COMMA reduce production annotationToken -> CONST
-- On COLON reduce production annotationToken -> CONST
-- On BOOL reduce production annotationToken -> CONST
-- On BIT_XOR reduce production annotationToken -> CONST
-- On BIT_OR reduce production annotationToken -> CONST
-- On BIT_AND reduce production annotationToken -> CONST
-- On BIT reduce production annotationToken -> CONST
-- On AT reduce production annotationToken -> CONST
-- On ASSIGN reduce production annotationToken -> CONST
-- On APPLY reduce production annotationToken -> CONST
-- On AND reduce production annotationToken -> CONST
-- On ACTIONS reduce production annotationToken -> CONST
-- On ACTION reduce production annotationToken -> CONST
-- On ABSTRACT reduce production annotationToken -> CONST

State 280:
annotationToken -> COMPLEMENT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> COMPLEMENT
-- On VARBIT reduce production annotationToken -> COMPLEMENT
-- On VALUESET reduce production annotationToken -> COMPLEMENT
-- On TYPEDEF reduce production annotationToken -> COMPLEMENT
-- On TYPE reduce production annotationToken -> COMPLEMENT
-- On TUPLE reduce production annotationToken -> COMPLEMENT
-- On TRUE reduce production annotationToken -> COMPLEMENT
-- On TRANSITION reduce production annotationToken -> COMPLEMENT
-- On TABLE reduce production annotationToken -> COMPLEMENT
-- On SWITCH reduce production annotationToken -> COMPLEMENT
-- On STRUCT reduce production annotationToken -> COMPLEMENT
-- On STRING_LITERAL reduce production annotationToken -> COMPLEMENT
-- On STRING reduce production annotationToken -> COMPLEMENT
-- On STATE reduce production annotationToken -> COMPLEMENT
-- On SHL reduce production annotationToken -> COMPLEMENT
-- On SEMICOLON reduce production annotationToken -> COMPLEMENT
-- On SELECT reduce production annotationToken -> COMPLEMENT
-- On R_PAREN reduce production annotationToken -> COMPLEMENT
-- On R_BRACKET reduce production annotationToken -> COMPLEMENT
-- On R_BRACE reduce production annotationToken -> COMPLEMENT
-- On R_ANGLE reduce production annotationToken -> COMPLEMENT
-- On RETURN reduce production annotationToken -> COMPLEMENT
-- On RANGE reduce production annotationToken -> COMPLEMENT
-- On QUESTION reduce production annotationToken -> COMPLEMENT
-- On PRAGMA_END reduce production annotationToken -> COMPLEMENT
-- On PRAGMA reduce production annotationToken -> COMPLEMENT
-- On PLUS_SAT reduce production annotationToken -> COMPLEMENT
-- On PLUSPLUS reduce production annotationToken -> COMPLEMENT
-- On PLUS reduce production annotationToken -> COMPLEMENT
-- On PARSER reduce production annotationToken -> COMPLEMENT
-- On PACKAGE reduce production annotationToken -> COMPLEMENT
-- On OUT reduce production annotationToken -> COMPLEMENT
-- On OR reduce production annotationToken -> COMPLEMENT
-- On NOT reduce production annotationToken -> COMPLEMENT
-- On NE reduce production annotationToken -> COMPLEMENT
-- On NAME reduce production annotationToken -> COMPLEMENT
-- On MUL reduce production annotationToken -> COMPLEMENT
-- On MOD reduce production annotationToken -> COMPLEMENT
-- On MINUS_SAT reduce production annotationToken -> COMPLEMENT
-- On MINUS reduce production annotationToken -> COMPLEMENT
-- On MATCH_KIND reduce production annotationToken -> COMPLEMENT
-- On MASK reduce production annotationToken -> COMPLEMENT
-- On L_PAREN reduce production annotationToken -> COMPLEMENT
-- On L_BRACKET reduce production annotationToken -> COMPLEMENT
-- On L_BRACE reduce production annotationToken -> COMPLEMENT
-- On L_ANGLE reduce production annotationToken -> COMPLEMENT
-- On LE reduce production annotationToken -> COMPLEMENT
-- On KEY reduce production annotationToken -> COMPLEMENT
-- On INTEGER reduce production annotationToken -> COMPLEMENT
-- On INT reduce production annotationToken -> COMPLEMENT
-- On INOUT reduce production annotationToken -> COMPLEMENT
-- On IN reduce production annotationToken -> COMPLEMENT
-- On IF reduce production annotationToken -> COMPLEMENT
-- On HEADER_UNION reduce production annotationToken -> COMPLEMENT
-- On HEADER reduce production annotationToken -> COMPLEMENT
-- On GE reduce production annotationToken -> COMPLEMENT
-- On FALSE reduce production annotationToken -> COMPLEMENT
-- On EXTERN reduce production annotationToken -> COMPLEMENT
-- On EXIT reduce production annotationToken -> COMPLEMENT
-- On ERROR reduce production annotationToken -> COMPLEMENT
-- On EQ reduce production annotationToken -> COMPLEMENT
-- On ENUM reduce production annotationToken -> COMPLEMENT
-- On ENTRIES reduce production annotationToken -> COMPLEMENT
-- On ELSE reduce production annotationToken -> COMPLEMENT
-- On DOT reduce production annotationToken -> COMPLEMENT
-- On DONTCARE reduce production annotationToken -> COMPLEMENT
-- On DIV reduce production annotationToken -> COMPLEMENT
-- On DEFAULT reduce production annotationToken -> COMPLEMENT
-- On CONTROL reduce production annotationToken -> COMPLEMENT
-- On CONST reduce production annotationToken -> COMPLEMENT
-- On COMPLEMENT reduce production annotationToken -> COMPLEMENT
-- On COMMA reduce production annotationToken -> COMPLEMENT
-- On COLON reduce production annotationToken -> COMPLEMENT
-- On BOOL reduce production annotationToken -> COMPLEMENT
-- On BIT_XOR reduce production annotationToken -> COMPLEMENT
-- On BIT_OR reduce production annotationToken -> COMPLEMENT
-- On BIT_AND reduce production annotationToken -> COMPLEMENT
-- On BIT reduce production annotationToken -> COMPLEMENT
-- On AT reduce production annotationToken -> COMPLEMENT
-- On ASSIGN reduce production annotationToken -> COMPLEMENT
-- On APPLY reduce production annotationToken -> COMPLEMENT
-- On AND reduce production annotationToken -> COMPLEMENT
-- On ACTIONS reduce production annotationToken -> COMPLEMENT
-- On ACTION reduce production annotationToken -> COMPLEMENT
-- On ABSTRACT reduce production annotationToken -> COMPLEMENT

State 281:
annotationToken -> COMMA . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> COMMA
-- On VARBIT reduce production annotationToken -> COMMA
-- On VALUESET reduce production annotationToken -> COMMA
-- On TYPEDEF reduce production annotationToken -> COMMA
-- On TYPE reduce production annotationToken -> COMMA
-- On TUPLE reduce production annotationToken -> COMMA
-- On TRUE reduce production annotationToken -> COMMA
-- On TRANSITION reduce production annotationToken -> COMMA
-- On TABLE reduce production annotationToken -> COMMA
-- On SWITCH reduce production annotationToken -> COMMA
-- On STRUCT reduce production annotationToken -> COMMA
-- On STRING_LITERAL reduce production annotationToken -> COMMA
-- On STRING reduce production annotationToken -> COMMA
-- On STATE reduce production annotationToken -> COMMA
-- On SHL reduce production annotationToken -> COMMA
-- On SEMICOLON reduce production annotationToken -> COMMA
-- On SELECT reduce production annotationToken -> COMMA
-- On R_PAREN reduce production annotationToken -> COMMA
-- On R_BRACKET reduce production annotationToken -> COMMA
-- On R_BRACE reduce production annotationToken -> COMMA
-- On R_ANGLE reduce production annotationToken -> COMMA
-- On RETURN reduce production annotationToken -> COMMA
-- On RANGE reduce production annotationToken -> COMMA
-- On QUESTION reduce production annotationToken -> COMMA
-- On PRAGMA_END reduce production annotationToken -> COMMA
-- On PRAGMA reduce production annotationToken -> COMMA
-- On PLUS_SAT reduce production annotationToken -> COMMA
-- On PLUSPLUS reduce production annotationToken -> COMMA
-- On PLUS reduce production annotationToken -> COMMA
-- On PARSER reduce production annotationToken -> COMMA
-- On PACKAGE reduce production annotationToken -> COMMA
-- On OUT reduce production annotationToken -> COMMA
-- On OR reduce production annotationToken -> COMMA
-- On NOT reduce production annotationToken -> COMMA
-- On NE reduce production annotationToken -> COMMA
-- On NAME reduce production annotationToken -> COMMA
-- On MUL reduce production annotationToken -> COMMA
-- On MOD reduce production annotationToken -> COMMA
-- On MINUS_SAT reduce production annotationToken -> COMMA
-- On MINUS reduce production annotationToken -> COMMA
-- On MATCH_KIND reduce production annotationToken -> COMMA
-- On MASK reduce production annotationToken -> COMMA
-- On L_PAREN reduce production annotationToken -> COMMA
-- On L_BRACKET reduce production annotationToken -> COMMA
-- On L_BRACE reduce production annotationToken -> COMMA
-- On L_ANGLE reduce production annotationToken -> COMMA
-- On LE reduce production annotationToken -> COMMA
-- On KEY reduce production annotationToken -> COMMA
-- On INTEGER reduce production annotationToken -> COMMA
-- On INT reduce production annotationToken -> COMMA
-- On INOUT reduce production annotationToken -> COMMA
-- On IN reduce production annotationToken -> COMMA
-- On IF reduce production annotationToken -> COMMA
-- On HEADER_UNION reduce production annotationToken -> COMMA
-- On HEADER reduce production annotationToken -> COMMA
-- On GE reduce production annotationToken -> COMMA
-- On FALSE reduce production annotationToken -> COMMA
-- On EXTERN reduce production annotationToken -> COMMA
-- On EXIT reduce production annotationToken -> COMMA
-- On ERROR reduce production annotationToken -> COMMA
-- On EQ reduce production annotationToken -> COMMA
-- On ENUM reduce production annotationToken -> COMMA
-- On ENTRIES reduce production annotationToken -> COMMA
-- On ELSE reduce production annotationToken -> COMMA
-- On DOT reduce production annotationToken -> COMMA
-- On DONTCARE reduce production annotationToken -> COMMA
-- On DIV reduce production annotationToken -> COMMA
-- On DEFAULT reduce production annotationToken -> COMMA
-- On CONTROL reduce production annotationToken -> COMMA
-- On CONST reduce production annotationToken -> COMMA
-- On COMPLEMENT reduce production annotationToken -> COMMA
-- On COMMA reduce production annotationToken -> COMMA
-- On COLON reduce production annotationToken -> COMMA
-- On BOOL reduce production annotationToken -> COMMA
-- On BIT_XOR reduce production annotationToken -> COMMA
-- On BIT_OR reduce production annotationToken -> COMMA
-- On BIT_AND reduce production annotationToken -> COMMA
-- On BIT reduce production annotationToken -> COMMA
-- On AT reduce production annotationToken -> COMMA
-- On ASSIGN reduce production annotationToken -> COMMA
-- On APPLY reduce production annotationToken -> COMMA
-- On AND reduce production annotationToken -> COMMA
-- On ACTIONS reduce production annotationToken -> COMMA
-- On ACTION reduce production annotationToken -> COMMA
-- On ABSTRACT reduce production annotationToken -> COMMA

State 282:
annotationToken -> COLON . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> COLON
-- On VARBIT reduce production annotationToken -> COLON
-- On VALUESET reduce production annotationToken -> COLON
-- On TYPEDEF reduce production annotationToken -> COLON
-- On TYPE reduce production annotationToken -> COLON
-- On TUPLE reduce production annotationToken -> COLON
-- On TRUE reduce production annotationToken -> COLON
-- On TRANSITION reduce production annotationToken -> COLON
-- On TABLE reduce production annotationToken -> COLON
-- On SWITCH reduce production annotationToken -> COLON
-- On STRUCT reduce production annotationToken -> COLON
-- On STRING_LITERAL reduce production annotationToken -> COLON
-- On STRING reduce production annotationToken -> COLON
-- On STATE reduce production annotationToken -> COLON
-- On SHL reduce production annotationToken -> COLON
-- On SEMICOLON reduce production annotationToken -> COLON
-- On SELECT reduce production annotationToken -> COLON
-- On R_PAREN reduce production annotationToken -> COLON
-- On R_BRACKET reduce production annotationToken -> COLON
-- On R_BRACE reduce production annotationToken -> COLON
-- On R_ANGLE reduce production annotationToken -> COLON
-- On RETURN reduce production annotationToken -> COLON
-- On RANGE reduce production annotationToken -> COLON
-- On QUESTION reduce production annotationToken -> COLON
-- On PRAGMA_END reduce production annotationToken -> COLON
-- On PRAGMA reduce production annotationToken -> COLON
-- On PLUS_SAT reduce production annotationToken -> COLON
-- On PLUSPLUS reduce production annotationToken -> COLON
-- On PLUS reduce production annotationToken -> COLON
-- On PARSER reduce production annotationToken -> COLON
-- On PACKAGE reduce production annotationToken -> COLON
-- On OUT reduce production annotationToken -> COLON
-- On OR reduce production annotationToken -> COLON
-- On NOT reduce production annotationToken -> COLON
-- On NE reduce production annotationToken -> COLON
-- On NAME reduce production annotationToken -> COLON
-- On MUL reduce production annotationToken -> COLON
-- On MOD reduce production annotationToken -> COLON
-- On MINUS_SAT reduce production annotationToken -> COLON
-- On MINUS reduce production annotationToken -> COLON
-- On MATCH_KIND reduce production annotationToken -> COLON
-- On MASK reduce production annotationToken -> COLON
-- On L_PAREN reduce production annotationToken -> COLON
-- On L_BRACKET reduce production annotationToken -> COLON
-- On L_BRACE reduce production annotationToken -> COLON
-- On L_ANGLE reduce production annotationToken -> COLON
-- On LE reduce production annotationToken -> COLON
-- On KEY reduce production annotationToken -> COLON
-- On INTEGER reduce production annotationToken -> COLON
-- On INT reduce production annotationToken -> COLON
-- On INOUT reduce production annotationToken -> COLON
-- On IN reduce production annotationToken -> COLON
-- On IF reduce production annotationToken -> COLON
-- On HEADER_UNION reduce production annotationToken -> COLON
-- On HEADER reduce production annotationToken -> COLON
-- On GE reduce production annotationToken -> COLON
-- On FALSE reduce production annotationToken -> COLON
-- On EXTERN reduce production annotationToken -> COLON
-- On EXIT reduce production annotationToken -> COLON
-- On ERROR reduce production annotationToken -> COLON
-- On EQ reduce production annotationToken -> COLON
-- On ENUM reduce production annotationToken -> COLON
-- On ENTRIES reduce production annotationToken -> COLON
-- On ELSE reduce production annotationToken -> COLON
-- On DOT reduce production annotationToken -> COLON
-- On DONTCARE reduce production annotationToken -> COLON
-- On DIV reduce production annotationToken -> COLON
-- On DEFAULT reduce production annotationToken -> COLON
-- On CONTROL reduce production annotationToken -> COLON
-- On CONST reduce production annotationToken -> COLON
-- On COMPLEMENT reduce production annotationToken -> COLON
-- On COMMA reduce production annotationToken -> COLON
-- On COLON reduce production annotationToken -> COLON
-- On BOOL reduce production annotationToken -> COLON
-- On BIT_XOR reduce production annotationToken -> COLON
-- On BIT_OR reduce production annotationToken -> COLON
-- On BIT_AND reduce production annotationToken -> COLON
-- On BIT reduce production annotationToken -> COLON
-- On AT reduce production annotationToken -> COLON
-- On ASSIGN reduce production annotationToken -> COLON
-- On APPLY reduce production annotationToken -> COLON
-- On AND reduce production annotationToken -> COLON
-- On ACTIONS reduce production annotationToken -> COLON
-- On ACTION reduce production annotationToken -> COLON
-- On ABSTRACT reduce production annotationToken -> COLON

State 283:
annotationToken -> BOOL . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> BOOL
-- On VARBIT reduce production annotationToken -> BOOL
-- On VALUESET reduce production annotationToken -> BOOL
-- On TYPEDEF reduce production annotationToken -> BOOL
-- On TYPE reduce production annotationToken -> BOOL
-- On TUPLE reduce production annotationToken -> BOOL
-- On TRUE reduce production annotationToken -> BOOL
-- On TRANSITION reduce production annotationToken -> BOOL
-- On TABLE reduce production annotationToken -> BOOL
-- On SWITCH reduce production annotationToken -> BOOL
-- On STRUCT reduce production annotationToken -> BOOL
-- On STRING_LITERAL reduce production annotationToken -> BOOL
-- On STRING reduce production annotationToken -> BOOL
-- On STATE reduce production annotationToken -> BOOL
-- On SHL reduce production annotationToken -> BOOL
-- On SEMICOLON reduce production annotationToken -> BOOL
-- On SELECT reduce production annotationToken -> BOOL
-- On R_PAREN reduce production annotationToken -> BOOL
-- On R_BRACKET reduce production annotationToken -> BOOL
-- On R_BRACE reduce production annotationToken -> BOOL
-- On R_ANGLE reduce production annotationToken -> BOOL
-- On RETURN reduce production annotationToken -> BOOL
-- On RANGE reduce production annotationToken -> BOOL
-- On QUESTION reduce production annotationToken -> BOOL
-- On PRAGMA_END reduce production annotationToken -> BOOL
-- On PRAGMA reduce production annotationToken -> BOOL
-- On PLUS_SAT reduce production annotationToken -> BOOL
-- On PLUSPLUS reduce production annotationToken -> BOOL
-- On PLUS reduce production annotationToken -> BOOL
-- On PARSER reduce production annotationToken -> BOOL
-- On PACKAGE reduce production annotationToken -> BOOL
-- On OUT reduce production annotationToken -> BOOL
-- On OR reduce production annotationToken -> BOOL
-- On NOT reduce production annotationToken -> BOOL
-- On NE reduce production annotationToken -> BOOL
-- On NAME reduce production annotationToken -> BOOL
-- On MUL reduce production annotationToken -> BOOL
-- On MOD reduce production annotationToken -> BOOL
-- On MINUS_SAT reduce production annotationToken -> BOOL
-- On MINUS reduce production annotationToken -> BOOL
-- On MATCH_KIND reduce production annotationToken -> BOOL
-- On MASK reduce production annotationToken -> BOOL
-- On L_PAREN reduce production annotationToken -> BOOL
-- On L_BRACKET reduce production annotationToken -> BOOL
-- On L_BRACE reduce production annotationToken -> BOOL
-- On L_ANGLE reduce production annotationToken -> BOOL
-- On LE reduce production annotationToken -> BOOL
-- On KEY reduce production annotationToken -> BOOL
-- On INTEGER reduce production annotationToken -> BOOL
-- On INT reduce production annotationToken -> BOOL
-- On INOUT reduce production annotationToken -> BOOL
-- On IN reduce production annotationToken -> BOOL
-- On IF reduce production annotationToken -> BOOL
-- On HEADER_UNION reduce production annotationToken -> BOOL
-- On HEADER reduce production annotationToken -> BOOL
-- On GE reduce production annotationToken -> BOOL
-- On FALSE reduce production annotationToken -> BOOL
-- On EXTERN reduce production annotationToken -> BOOL
-- On EXIT reduce production annotationToken -> BOOL
-- On ERROR reduce production annotationToken -> BOOL
-- On EQ reduce production annotationToken -> BOOL
-- On ENUM reduce production annotationToken -> BOOL
-- On ENTRIES reduce production annotationToken -> BOOL
-- On ELSE reduce production annotationToken -> BOOL
-- On DOT reduce production annotationToken -> BOOL
-- On DONTCARE reduce production annotationToken -> BOOL
-- On DIV reduce production annotationToken -> BOOL
-- On DEFAULT reduce production annotationToken -> BOOL
-- On CONTROL reduce production annotationToken -> BOOL
-- On CONST reduce production annotationToken -> BOOL
-- On COMPLEMENT reduce production annotationToken -> BOOL
-- On COMMA reduce production annotationToken -> BOOL
-- On COLON reduce production annotationToken -> BOOL
-- On BOOL reduce production annotationToken -> BOOL
-- On BIT_XOR reduce production annotationToken -> BOOL
-- On BIT_OR reduce production annotationToken -> BOOL
-- On BIT_AND reduce production annotationToken -> BOOL
-- On BIT reduce production annotationToken -> BOOL
-- On AT reduce production annotationToken -> BOOL
-- On ASSIGN reduce production annotationToken -> BOOL
-- On APPLY reduce production annotationToken -> BOOL
-- On AND reduce production annotationToken -> BOOL
-- On ACTIONS reduce production annotationToken -> BOOL
-- On ACTION reduce production annotationToken -> BOOL
-- On ABSTRACT reduce production annotationToken -> BOOL

State 284:
annotationToken -> BIT_XOR . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> BIT_XOR
-- On VARBIT reduce production annotationToken -> BIT_XOR
-- On VALUESET reduce production annotationToken -> BIT_XOR
-- On TYPEDEF reduce production annotationToken -> BIT_XOR
-- On TYPE reduce production annotationToken -> BIT_XOR
-- On TUPLE reduce production annotationToken -> BIT_XOR
-- On TRUE reduce production annotationToken -> BIT_XOR
-- On TRANSITION reduce production annotationToken -> BIT_XOR
-- On TABLE reduce production annotationToken -> BIT_XOR
-- On SWITCH reduce production annotationToken -> BIT_XOR
-- On STRUCT reduce production annotationToken -> BIT_XOR
-- On STRING_LITERAL reduce production annotationToken -> BIT_XOR
-- On STRING reduce production annotationToken -> BIT_XOR
-- On STATE reduce production annotationToken -> BIT_XOR
-- On SHL reduce production annotationToken -> BIT_XOR
-- On SEMICOLON reduce production annotationToken -> BIT_XOR
-- On SELECT reduce production annotationToken -> BIT_XOR
-- On R_PAREN reduce production annotationToken -> BIT_XOR
-- On R_BRACKET reduce production annotationToken -> BIT_XOR
-- On R_BRACE reduce production annotationToken -> BIT_XOR
-- On R_ANGLE reduce production annotationToken -> BIT_XOR
-- On RETURN reduce production annotationToken -> BIT_XOR
-- On RANGE reduce production annotationToken -> BIT_XOR
-- On QUESTION reduce production annotationToken -> BIT_XOR
-- On PRAGMA_END reduce production annotationToken -> BIT_XOR
-- On PRAGMA reduce production annotationToken -> BIT_XOR
-- On PLUS_SAT reduce production annotationToken -> BIT_XOR
-- On PLUSPLUS reduce production annotationToken -> BIT_XOR
-- On PLUS reduce production annotationToken -> BIT_XOR
-- On PARSER reduce production annotationToken -> BIT_XOR
-- On PACKAGE reduce production annotationToken -> BIT_XOR
-- On OUT reduce production annotationToken -> BIT_XOR
-- On OR reduce production annotationToken -> BIT_XOR
-- On NOT reduce production annotationToken -> BIT_XOR
-- On NE reduce production annotationToken -> BIT_XOR
-- On NAME reduce production annotationToken -> BIT_XOR
-- On MUL reduce production annotationToken -> BIT_XOR
-- On MOD reduce production annotationToken -> BIT_XOR
-- On MINUS_SAT reduce production annotationToken -> BIT_XOR
-- On MINUS reduce production annotationToken -> BIT_XOR
-- On MATCH_KIND reduce production annotationToken -> BIT_XOR
-- On MASK reduce production annotationToken -> BIT_XOR
-- On L_PAREN reduce production annotationToken -> BIT_XOR
-- On L_BRACKET reduce production annotationToken -> BIT_XOR
-- On L_BRACE reduce production annotationToken -> BIT_XOR
-- On L_ANGLE reduce production annotationToken -> BIT_XOR
-- On LE reduce production annotationToken -> BIT_XOR
-- On KEY reduce production annotationToken -> BIT_XOR
-- On INTEGER reduce production annotationToken -> BIT_XOR
-- On INT reduce production annotationToken -> BIT_XOR
-- On INOUT reduce production annotationToken -> BIT_XOR
-- On IN reduce production annotationToken -> BIT_XOR
-- On IF reduce production annotationToken -> BIT_XOR
-- On HEADER_UNION reduce production annotationToken -> BIT_XOR
-- On HEADER reduce production annotationToken -> BIT_XOR
-- On GE reduce production annotationToken -> BIT_XOR
-- On FALSE reduce production annotationToken -> BIT_XOR
-- On EXTERN reduce production annotationToken -> BIT_XOR
-- On EXIT reduce production annotationToken -> BIT_XOR
-- On ERROR reduce production annotationToken -> BIT_XOR
-- On EQ reduce production annotationToken -> BIT_XOR
-- On ENUM reduce production annotationToken -> BIT_XOR
-- On ENTRIES reduce production annotationToken -> BIT_XOR
-- On ELSE reduce production annotationToken -> BIT_XOR
-- On DOT reduce production annotationToken -> BIT_XOR
-- On DONTCARE reduce production annotationToken -> BIT_XOR
-- On DIV reduce production annotationToken -> BIT_XOR
-- On DEFAULT reduce production annotationToken -> BIT_XOR
-- On CONTROL reduce production annotationToken -> BIT_XOR
-- On CONST reduce production annotationToken -> BIT_XOR
-- On COMPLEMENT reduce production annotationToken -> BIT_XOR
-- On COMMA reduce production annotationToken -> BIT_XOR
-- On COLON reduce production annotationToken -> BIT_XOR
-- On BOOL reduce production annotationToken -> BIT_XOR
-- On BIT_XOR reduce production annotationToken -> BIT_XOR
-- On BIT_OR reduce production annotationToken -> BIT_XOR
-- On BIT_AND reduce production annotationToken -> BIT_XOR
-- On BIT reduce production annotationToken -> BIT_XOR
-- On AT reduce production annotationToken -> BIT_XOR
-- On ASSIGN reduce production annotationToken -> BIT_XOR
-- On APPLY reduce production annotationToken -> BIT_XOR
-- On AND reduce production annotationToken -> BIT_XOR
-- On ACTIONS reduce production annotationToken -> BIT_XOR
-- On ACTION reduce production annotationToken -> BIT_XOR
-- On ABSTRACT reduce production annotationToken -> BIT_XOR

State 285:
annotationToken -> BIT_OR . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> BIT_OR
-- On VARBIT reduce production annotationToken -> BIT_OR
-- On VALUESET reduce production annotationToken -> BIT_OR
-- On TYPEDEF reduce production annotationToken -> BIT_OR
-- On TYPE reduce production annotationToken -> BIT_OR
-- On TUPLE reduce production annotationToken -> BIT_OR
-- On TRUE reduce production annotationToken -> BIT_OR
-- On TRANSITION reduce production annotationToken -> BIT_OR
-- On TABLE reduce production annotationToken -> BIT_OR
-- On SWITCH reduce production annotationToken -> BIT_OR
-- On STRUCT reduce production annotationToken -> BIT_OR
-- On STRING_LITERAL reduce production annotationToken -> BIT_OR
-- On STRING reduce production annotationToken -> BIT_OR
-- On STATE reduce production annotationToken -> BIT_OR
-- On SHL reduce production annotationToken -> BIT_OR
-- On SEMICOLON reduce production annotationToken -> BIT_OR
-- On SELECT reduce production annotationToken -> BIT_OR
-- On R_PAREN reduce production annotationToken -> BIT_OR
-- On R_BRACKET reduce production annotationToken -> BIT_OR
-- On R_BRACE reduce production annotationToken -> BIT_OR
-- On R_ANGLE reduce production annotationToken -> BIT_OR
-- On RETURN reduce production annotationToken -> BIT_OR
-- On RANGE reduce production annotationToken -> BIT_OR
-- On QUESTION reduce production annotationToken -> BIT_OR
-- On PRAGMA_END reduce production annotationToken -> BIT_OR
-- On PRAGMA reduce production annotationToken -> BIT_OR
-- On PLUS_SAT reduce production annotationToken -> BIT_OR
-- On PLUSPLUS reduce production annotationToken -> BIT_OR
-- On PLUS reduce production annotationToken -> BIT_OR
-- On PARSER reduce production annotationToken -> BIT_OR
-- On PACKAGE reduce production annotationToken -> BIT_OR
-- On OUT reduce production annotationToken -> BIT_OR
-- On OR reduce production annotationToken -> BIT_OR
-- On NOT reduce production annotationToken -> BIT_OR
-- On NE reduce production annotationToken -> BIT_OR
-- On NAME reduce production annotationToken -> BIT_OR
-- On MUL reduce production annotationToken -> BIT_OR
-- On MOD reduce production annotationToken -> BIT_OR
-- On MINUS_SAT reduce production annotationToken -> BIT_OR
-- On MINUS reduce production annotationToken -> BIT_OR
-- On MATCH_KIND reduce production annotationToken -> BIT_OR
-- On MASK reduce production annotationToken -> BIT_OR
-- On L_PAREN reduce production annotationToken -> BIT_OR
-- On L_BRACKET reduce production annotationToken -> BIT_OR
-- On L_BRACE reduce production annotationToken -> BIT_OR
-- On L_ANGLE reduce production annotationToken -> BIT_OR
-- On LE reduce production annotationToken -> BIT_OR
-- On KEY reduce production annotationToken -> BIT_OR
-- On INTEGER reduce production annotationToken -> BIT_OR
-- On INT reduce production annotationToken -> BIT_OR
-- On INOUT reduce production annotationToken -> BIT_OR
-- On IN reduce production annotationToken -> BIT_OR
-- On IF reduce production annotationToken -> BIT_OR
-- On HEADER_UNION reduce production annotationToken -> BIT_OR
-- On HEADER reduce production annotationToken -> BIT_OR
-- On GE reduce production annotationToken -> BIT_OR
-- On FALSE reduce production annotationToken -> BIT_OR
-- On EXTERN reduce production annotationToken -> BIT_OR
-- On EXIT reduce production annotationToken -> BIT_OR
-- On ERROR reduce production annotationToken -> BIT_OR
-- On EQ reduce production annotationToken -> BIT_OR
-- On ENUM reduce production annotationToken -> BIT_OR
-- On ENTRIES reduce production annotationToken -> BIT_OR
-- On ELSE reduce production annotationToken -> BIT_OR
-- On DOT reduce production annotationToken -> BIT_OR
-- On DONTCARE reduce production annotationToken -> BIT_OR
-- On DIV reduce production annotationToken -> BIT_OR
-- On DEFAULT reduce production annotationToken -> BIT_OR
-- On CONTROL reduce production annotationToken -> BIT_OR
-- On CONST reduce production annotationToken -> BIT_OR
-- On COMPLEMENT reduce production annotationToken -> BIT_OR
-- On COMMA reduce production annotationToken -> BIT_OR
-- On COLON reduce production annotationToken -> BIT_OR
-- On BOOL reduce production annotationToken -> BIT_OR
-- On BIT_XOR reduce production annotationToken -> BIT_OR
-- On BIT_OR reduce production annotationToken -> BIT_OR
-- On BIT_AND reduce production annotationToken -> BIT_OR
-- On BIT reduce production annotationToken -> BIT_OR
-- On AT reduce production annotationToken -> BIT_OR
-- On ASSIGN reduce production annotationToken -> BIT_OR
-- On APPLY reduce production annotationToken -> BIT_OR
-- On AND reduce production annotationToken -> BIT_OR
-- On ACTIONS reduce production annotationToken -> BIT_OR
-- On ACTION reduce production annotationToken -> BIT_OR
-- On ABSTRACT reduce production annotationToken -> BIT_OR

State 286:
annotationToken -> BIT_AND . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> BIT_AND
-- On VARBIT reduce production annotationToken -> BIT_AND
-- On VALUESET reduce production annotationToken -> BIT_AND
-- On TYPEDEF reduce production annotationToken -> BIT_AND
-- On TYPE reduce production annotationToken -> BIT_AND
-- On TUPLE reduce production annotationToken -> BIT_AND
-- On TRUE reduce production annotationToken -> BIT_AND
-- On TRANSITION reduce production annotationToken -> BIT_AND
-- On TABLE reduce production annotationToken -> BIT_AND
-- On SWITCH reduce production annotationToken -> BIT_AND
-- On STRUCT reduce production annotationToken -> BIT_AND
-- On STRING_LITERAL reduce production annotationToken -> BIT_AND
-- On STRING reduce production annotationToken -> BIT_AND
-- On STATE reduce production annotationToken -> BIT_AND
-- On SHL reduce production annotationToken -> BIT_AND
-- On SEMICOLON reduce production annotationToken -> BIT_AND
-- On SELECT reduce production annotationToken -> BIT_AND
-- On R_PAREN reduce production annotationToken -> BIT_AND
-- On R_BRACKET reduce production annotationToken -> BIT_AND
-- On R_BRACE reduce production annotationToken -> BIT_AND
-- On R_ANGLE reduce production annotationToken -> BIT_AND
-- On RETURN reduce production annotationToken -> BIT_AND
-- On RANGE reduce production annotationToken -> BIT_AND
-- On QUESTION reduce production annotationToken -> BIT_AND
-- On PRAGMA_END reduce production annotationToken -> BIT_AND
-- On PRAGMA reduce production annotationToken -> BIT_AND
-- On PLUS_SAT reduce production annotationToken -> BIT_AND
-- On PLUSPLUS reduce production annotationToken -> BIT_AND
-- On PLUS reduce production annotationToken -> BIT_AND
-- On PARSER reduce production annotationToken -> BIT_AND
-- On PACKAGE reduce production annotationToken -> BIT_AND
-- On OUT reduce production annotationToken -> BIT_AND
-- On OR reduce production annotationToken -> BIT_AND
-- On NOT reduce production annotationToken -> BIT_AND
-- On NE reduce production annotationToken -> BIT_AND
-- On NAME reduce production annotationToken -> BIT_AND
-- On MUL reduce production annotationToken -> BIT_AND
-- On MOD reduce production annotationToken -> BIT_AND
-- On MINUS_SAT reduce production annotationToken -> BIT_AND
-- On MINUS reduce production annotationToken -> BIT_AND
-- On MATCH_KIND reduce production annotationToken -> BIT_AND
-- On MASK reduce production annotationToken -> BIT_AND
-- On L_PAREN reduce production annotationToken -> BIT_AND
-- On L_BRACKET reduce production annotationToken -> BIT_AND
-- On L_BRACE reduce production annotationToken -> BIT_AND
-- On L_ANGLE reduce production annotationToken -> BIT_AND
-- On LE reduce production annotationToken -> BIT_AND
-- On KEY reduce production annotationToken -> BIT_AND
-- On INTEGER reduce production annotationToken -> BIT_AND
-- On INT reduce production annotationToken -> BIT_AND
-- On INOUT reduce production annotationToken -> BIT_AND
-- On IN reduce production annotationToken -> BIT_AND
-- On IF reduce production annotationToken -> BIT_AND
-- On HEADER_UNION reduce production annotationToken -> BIT_AND
-- On HEADER reduce production annotationToken -> BIT_AND
-- On GE reduce production annotationToken -> BIT_AND
-- On FALSE reduce production annotationToken -> BIT_AND
-- On EXTERN reduce production annotationToken -> BIT_AND
-- On EXIT reduce production annotationToken -> BIT_AND
-- On ERROR reduce production annotationToken -> BIT_AND
-- On EQ reduce production annotationToken -> BIT_AND
-- On ENUM reduce production annotationToken -> BIT_AND
-- On ENTRIES reduce production annotationToken -> BIT_AND
-- On ELSE reduce production annotationToken -> BIT_AND
-- On DOT reduce production annotationToken -> BIT_AND
-- On DONTCARE reduce production annotationToken -> BIT_AND
-- On DIV reduce production annotationToken -> BIT_AND
-- On DEFAULT reduce production annotationToken -> BIT_AND
-- On CONTROL reduce production annotationToken -> BIT_AND
-- On CONST reduce production annotationToken -> BIT_AND
-- On COMPLEMENT reduce production annotationToken -> BIT_AND
-- On COMMA reduce production annotationToken -> BIT_AND
-- On COLON reduce production annotationToken -> BIT_AND
-- On BOOL reduce production annotationToken -> BIT_AND
-- On BIT_XOR reduce production annotationToken -> BIT_AND
-- On BIT_OR reduce production annotationToken -> BIT_AND
-- On BIT_AND reduce production annotationToken -> BIT_AND
-- On BIT reduce production annotationToken -> BIT_AND
-- On AT reduce production annotationToken -> BIT_AND
-- On ASSIGN reduce production annotationToken -> BIT_AND
-- On APPLY reduce production annotationToken -> BIT_AND
-- On AND reduce production annotationToken -> BIT_AND
-- On ACTIONS reduce production annotationToken -> BIT_AND
-- On ACTION reduce production annotationToken -> BIT_AND
-- On ABSTRACT reduce production annotationToken -> BIT_AND

State 287:
annotationToken -> BIT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> BIT
-- On VARBIT reduce production annotationToken -> BIT
-- On VALUESET reduce production annotationToken -> BIT
-- On TYPEDEF reduce production annotationToken -> BIT
-- On TYPE reduce production annotationToken -> BIT
-- On TUPLE reduce production annotationToken -> BIT
-- On TRUE reduce production annotationToken -> BIT
-- On TRANSITION reduce production annotationToken -> BIT
-- On TABLE reduce production annotationToken -> BIT
-- On SWITCH reduce production annotationToken -> BIT
-- On STRUCT reduce production annotationToken -> BIT
-- On STRING_LITERAL reduce production annotationToken -> BIT
-- On STRING reduce production annotationToken -> BIT
-- On STATE reduce production annotationToken -> BIT
-- On SHL reduce production annotationToken -> BIT
-- On SEMICOLON reduce production annotationToken -> BIT
-- On SELECT reduce production annotationToken -> BIT
-- On R_PAREN reduce production annotationToken -> BIT
-- On R_BRACKET reduce production annotationToken -> BIT
-- On R_BRACE reduce production annotationToken -> BIT
-- On R_ANGLE reduce production annotationToken -> BIT
-- On RETURN reduce production annotationToken -> BIT
-- On RANGE reduce production annotationToken -> BIT
-- On QUESTION reduce production annotationToken -> BIT
-- On PRAGMA_END reduce production annotationToken -> BIT
-- On PRAGMA reduce production annotationToken -> BIT
-- On PLUS_SAT reduce production annotationToken -> BIT
-- On PLUSPLUS reduce production annotationToken -> BIT
-- On PLUS reduce production annotationToken -> BIT
-- On PARSER reduce production annotationToken -> BIT
-- On PACKAGE reduce production annotationToken -> BIT
-- On OUT reduce production annotationToken -> BIT
-- On OR reduce production annotationToken -> BIT
-- On NOT reduce production annotationToken -> BIT
-- On NE reduce production annotationToken -> BIT
-- On NAME reduce production annotationToken -> BIT
-- On MUL reduce production annotationToken -> BIT
-- On MOD reduce production annotationToken -> BIT
-- On MINUS_SAT reduce production annotationToken -> BIT
-- On MINUS reduce production annotationToken -> BIT
-- On MATCH_KIND reduce production annotationToken -> BIT
-- On MASK reduce production annotationToken -> BIT
-- On L_PAREN reduce production annotationToken -> BIT
-- On L_BRACKET reduce production annotationToken -> BIT
-- On L_BRACE reduce production annotationToken -> BIT
-- On L_ANGLE reduce production annotationToken -> BIT
-- On LE reduce production annotationToken -> BIT
-- On KEY reduce production annotationToken -> BIT
-- On INTEGER reduce production annotationToken -> BIT
-- On INT reduce production annotationToken -> BIT
-- On INOUT reduce production annotationToken -> BIT
-- On IN reduce production annotationToken -> BIT
-- On IF reduce production annotationToken -> BIT
-- On HEADER_UNION reduce production annotationToken -> BIT
-- On HEADER reduce production annotationToken -> BIT
-- On GE reduce production annotationToken -> BIT
-- On FALSE reduce production annotationToken -> BIT
-- On EXTERN reduce production annotationToken -> BIT
-- On EXIT reduce production annotationToken -> BIT
-- On ERROR reduce production annotationToken -> BIT
-- On EQ reduce production annotationToken -> BIT
-- On ENUM reduce production annotationToken -> BIT
-- On ENTRIES reduce production annotationToken -> BIT
-- On ELSE reduce production annotationToken -> BIT
-- On DOT reduce production annotationToken -> BIT
-- On DONTCARE reduce production annotationToken -> BIT
-- On DIV reduce production annotationToken -> BIT
-- On DEFAULT reduce production annotationToken -> BIT
-- On CONTROL reduce production annotationToken -> BIT
-- On CONST reduce production annotationToken -> BIT
-- On COMPLEMENT reduce production annotationToken -> BIT
-- On COMMA reduce production annotationToken -> BIT
-- On COLON reduce production annotationToken -> BIT
-- On BOOL reduce production annotationToken -> BIT
-- On BIT_XOR reduce production annotationToken -> BIT
-- On BIT_OR reduce production annotationToken -> BIT
-- On BIT_AND reduce production annotationToken -> BIT
-- On BIT reduce production annotationToken -> BIT
-- On AT reduce production annotationToken -> BIT
-- On ASSIGN reduce production annotationToken -> BIT
-- On APPLY reduce production annotationToken -> BIT
-- On AND reduce production annotationToken -> BIT
-- On ACTIONS reduce production annotationToken -> BIT
-- On ACTION reduce production annotationToken -> BIT
-- On ABSTRACT reduce production annotationToken -> BIT

State 288:
annotationToken -> AT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> AT
-- On VARBIT reduce production annotationToken -> AT
-- On VALUESET reduce production annotationToken -> AT
-- On TYPEDEF reduce production annotationToken -> AT
-- On TYPE reduce production annotationToken -> AT
-- On TUPLE reduce production annotationToken -> AT
-- On TRUE reduce production annotationToken -> AT
-- On TRANSITION reduce production annotationToken -> AT
-- On TABLE reduce production annotationToken -> AT
-- On SWITCH reduce production annotationToken -> AT
-- On STRUCT reduce production annotationToken -> AT
-- On STRING_LITERAL reduce production annotationToken -> AT
-- On STRING reduce production annotationToken -> AT
-- On STATE reduce production annotationToken -> AT
-- On SHL reduce production annotationToken -> AT
-- On SEMICOLON reduce production annotationToken -> AT
-- On SELECT reduce production annotationToken -> AT
-- On R_PAREN reduce production annotationToken -> AT
-- On R_BRACKET reduce production annotationToken -> AT
-- On R_BRACE reduce production annotationToken -> AT
-- On R_ANGLE reduce production annotationToken -> AT
-- On RETURN reduce production annotationToken -> AT
-- On RANGE reduce production annotationToken -> AT
-- On QUESTION reduce production annotationToken -> AT
-- On PRAGMA_END reduce production annotationToken -> AT
-- On PRAGMA reduce production annotationToken -> AT
-- On PLUS_SAT reduce production annotationToken -> AT
-- On PLUSPLUS reduce production annotationToken -> AT
-- On PLUS reduce production annotationToken -> AT
-- On PARSER reduce production annotationToken -> AT
-- On PACKAGE reduce production annotationToken -> AT
-- On OUT reduce production annotationToken -> AT
-- On OR reduce production annotationToken -> AT
-- On NOT reduce production annotationToken -> AT
-- On NE reduce production annotationToken -> AT
-- On NAME reduce production annotationToken -> AT
-- On MUL reduce production annotationToken -> AT
-- On MOD reduce production annotationToken -> AT
-- On MINUS_SAT reduce production annotationToken -> AT
-- On MINUS reduce production annotationToken -> AT
-- On MATCH_KIND reduce production annotationToken -> AT
-- On MASK reduce production annotationToken -> AT
-- On L_PAREN reduce production annotationToken -> AT
-- On L_BRACKET reduce production annotationToken -> AT
-- On L_BRACE reduce production annotationToken -> AT
-- On L_ANGLE reduce production annotationToken -> AT
-- On LE reduce production annotationToken -> AT
-- On KEY reduce production annotationToken -> AT
-- On INTEGER reduce production annotationToken -> AT
-- On INT reduce production annotationToken -> AT
-- On INOUT reduce production annotationToken -> AT
-- On IN reduce production annotationToken -> AT
-- On IF reduce production annotationToken -> AT
-- On HEADER_UNION reduce production annotationToken -> AT
-- On HEADER reduce production annotationToken -> AT
-- On GE reduce production annotationToken -> AT
-- On FALSE reduce production annotationToken -> AT
-- On EXTERN reduce production annotationToken -> AT
-- On EXIT reduce production annotationToken -> AT
-- On ERROR reduce production annotationToken -> AT
-- On EQ reduce production annotationToken -> AT
-- On ENUM reduce production annotationToken -> AT
-- On ENTRIES reduce production annotationToken -> AT
-- On ELSE reduce production annotationToken -> AT
-- On DOT reduce production annotationToken -> AT
-- On DONTCARE reduce production annotationToken -> AT
-- On DIV reduce production annotationToken -> AT
-- On DEFAULT reduce production annotationToken -> AT
-- On CONTROL reduce production annotationToken -> AT
-- On CONST reduce production annotationToken -> AT
-- On COMPLEMENT reduce production annotationToken -> AT
-- On COMMA reduce production annotationToken -> AT
-- On COLON reduce production annotationToken -> AT
-- On BOOL reduce production annotationToken -> AT
-- On BIT_XOR reduce production annotationToken -> AT
-- On BIT_OR reduce production annotationToken -> AT
-- On BIT_AND reduce production annotationToken -> AT
-- On BIT reduce production annotationToken -> AT
-- On AT reduce production annotationToken -> AT
-- On ASSIGN reduce production annotationToken -> AT
-- On APPLY reduce production annotationToken -> AT
-- On AND reduce production annotationToken -> AT
-- On ACTIONS reduce production annotationToken -> AT
-- On ACTION reduce production annotationToken -> AT
-- On ABSTRACT reduce production annotationToken -> AT

State 289:
annotationToken -> ASSIGN . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> ASSIGN
-- On VARBIT reduce production annotationToken -> ASSIGN
-- On VALUESET reduce production annotationToken -> ASSIGN
-- On TYPEDEF reduce production annotationToken -> ASSIGN
-- On TYPE reduce production annotationToken -> ASSIGN
-- On TUPLE reduce production annotationToken -> ASSIGN
-- On TRUE reduce production annotationToken -> ASSIGN
-- On TRANSITION reduce production annotationToken -> ASSIGN
-- On TABLE reduce production annotationToken -> ASSIGN
-- On SWITCH reduce production annotationToken -> ASSIGN
-- On STRUCT reduce production annotationToken -> ASSIGN
-- On STRING_LITERAL reduce production annotationToken -> ASSIGN
-- On STRING reduce production annotationToken -> ASSIGN
-- On STATE reduce production annotationToken -> ASSIGN
-- On SHL reduce production annotationToken -> ASSIGN
-- On SEMICOLON reduce production annotationToken -> ASSIGN
-- On SELECT reduce production annotationToken -> ASSIGN
-- On R_PAREN reduce production annotationToken -> ASSIGN
-- On R_BRACKET reduce production annotationToken -> ASSIGN
-- On R_BRACE reduce production annotationToken -> ASSIGN
-- On R_ANGLE reduce production annotationToken -> ASSIGN
-- On RETURN reduce production annotationToken -> ASSIGN
-- On RANGE reduce production annotationToken -> ASSIGN
-- On QUESTION reduce production annotationToken -> ASSIGN
-- On PRAGMA_END reduce production annotationToken -> ASSIGN
-- On PRAGMA reduce production annotationToken -> ASSIGN
-- On PLUS_SAT reduce production annotationToken -> ASSIGN
-- On PLUSPLUS reduce production annotationToken -> ASSIGN
-- On PLUS reduce production annotationToken -> ASSIGN
-- On PARSER reduce production annotationToken -> ASSIGN
-- On PACKAGE reduce production annotationToken -> ASSIGN
-- On OUT reduce production annotationToken -> ASSIGN
-- On OR reduce production annotationToken -> ASSIGN
-- On NOT reduce production annotationToken -> ASSIGN
-- On NE reduce production annotationToken -> ASSIGN
-- On NAME reduce production annotationToken -> ASSIGN
-- On MUL reduce production annotationToken -> ASSIGN
-- On MOD reduce production annotationToken -> ASSIGN
-- On MINUS_SAT reduce production annotationToken -> ASSIGN
-- On MINUS reduce production annotationToken -> ASSIGN
-- On MATCH_KIND reduce production annotationToken -> ASSIGN
-- On MASK reduce production annotationToken -> ASSIGN
-- On L_PAREN reduce production annotationToken -> ASSIGN
-- On L_BRACKET reduce production annotationToken -> ASSIGN
-- On L_BRACE reduce production annotationToken -> ASSIGN
-- On L_ANGLE reduce production annotationToken -> ASSIGN
-- On LE reduce production annotationToken -> ASSIGN
-- On KEY reduce production annotationToken -> ASSIGN
-- On INTEGER reduce production annotationToken -> ASSIGN
-- On INT reduce production annotationToken -> ASSIGN
-- On INOUT reduce production annotationToken -> ASSIGN
-- On IN reduce production annotationToken -> ASSIGN
-- On IF reduce production annotationToken -> ASSIGN
-- On HEADER_UNION reduce production annotationToken -> ASSIGN
-- On HEADER reduce production annotationToken -> ASSIGN
-- On GE reduce production annotationToken -> ASSIGN
-- On FALSE reduce production annotationToken -> ASSIGN
-- On EXTERN reduce production annotationToken -> ASSIGN
-- On EXIT reduce production annotationToken -> ASSIGN
-- On ERROR reduce production annotationToken -> ASSIGN
-- On EQ reduce production annotationToken -> ASSIGN
-- On ENUM reduce production annotationToken -> ASSIGN
-- On ENTRIES reduce production annotationToken -> ASSIGN
-- On ELSE reduce production annotationToken -> ASSIGN
-- On DOT reduce production annotationToken -> ASSIGN
-- On DONTCARE reduce production annotationToken -> ASSIGN
-- On DIV reduce production annotationToken -> ASSIGN
-- On DEFAULT reduce production annotationToken -> ASSIGN
-- On CONTROL reduce production annotationToken -> ASSIGN
-- On CONST reduce production annotationToken -> ASSIGN
-- On COMPLEMENT reduce production annotationToken -> ASSIGN
-- On COMMA reduce production annotationToken -> ASSIGN
-- On COLON reduce production annotationToken -> ASSIGN
-- On BOOL reduce production annotationToken -> ASSIGN
-- On BIT_XOR reduce production annotationToken -> ASSIGN
-- On BIT_OR reduce production annotationToken -> ASSIGN
-- On BIT_AND reduce production annotationToken -> ASSIGN
-- On BIT reduce production annotationToken -> ASSIGN
-- On AT reduce production annotationToken -> ASSIGN
-- On ASSIGN reduce production annotationToken -> ASSIGN
-- On APPLY reduce production annotationToken -> ASSIGN
-- On AND reduce production annotationToken -> ASSIGN
-- On ACTIONS reduce production annotationToken -> ASSIGN
-- On ACTION reduce production annotationToken -> ASSIGN
-- On ABSTRACT reduce production annotationToken -> ASSIGN

State 290:
annotationToken -> APPLY . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> APPLY
-- On VARBIT reduce production annotationToken -> APPLY
-- On VALUESET reduce production annotationToken -> APPLY
-- On TYPEDEF reduce production annotationToken -> APPLY
-- On TYPE reduce production annotationToken -> APPLY
-- On TUPLE reduce production annotationToken -> APPLY
-- On TRUE reduce production annotationToken -> APPLY
-- On TRANSITION reduce production annotationToken -> APPLY
-- On TABLE reduce production annotationToken -> APPLY
-- On SWITCH reduce production annotationToken -> APPLY
-- On STRUCT reduce production annotationToken -> APPLY
-- On STRING_LITERAL reduce production annotationToken -> APPLY
-- On STRING reduce production annotationToken -> APPLY
-- On STATE reduce production annotationToken -> APPLY
-- On SHL reduce production annotationToken -> APPLY
-- On SEMICOLON reduce production annotationToken -> APPLY
-- On SELECT reduce production annotationToken -> APPLY
-- On R_PAREN reduce production annotationToken -> APPLY
-- On R_BRACKET reduce production annotationToken -> APPLY
-- On R_BRACE reduce production annotationToken -> APPLY
-- On R_ANGLE reduce production annotationToken -> APPLY
-- On RETURN reduce production annotationToken -> APPLY
-- On RANGE reduce production annotationToken -> APPLY
-- On QUESTION reduce production annotationToken -> APPLY
-- On PRAGMA_END reduce production annotationToken -> APPLY
-- On PRAGMA reduce production annotationToken -> APPLY
-- On PLUS_SAT reduce production annotationToken -> APPLY
-- On PLUSPLUS reduce production annotationToken -> APPLY
-- On PLUS reduce production annotationToken -> APPLY
-- On PARSER reduce production annotationToken -> APPLY
-- On PACKAGE reduce production annotationToken -> APPLY
-- On OUT reduce production annotationToken -> APPLY
-- On OR reduce production annotationToken -> APPLY
-- On NOT reduce production annotationToken -> APPLY
-- On NE reduce production annotationToken -> APPLY
-- On NAME reduce production annotationToken -> APPLY
-- On MUL reduce production annotationToken -> APPLY
-- On MOD reduce production annotationToken -> APPLY
-- On MINUS_SAT reduce production annotationToken -> APPLY
-- On MINUS reduce production annotationToken -> APPLY
-- On MATCH_KIND reduce production annotationToken -> APPLY
-- On MASK reduce production annotationToken -> APPLY
-- On L_PAREN reduce production annotationToken -> APPLY
-- On L_BRACKET reduce production annotationToken -> APPLY
-- On L_BRACE reduce production annotationToken -> APPLY
-- On L_ANGLE reduce production annotationToken -> APPLY
-- On LE reduce production annotationToken -> APPLY
-- On KEY reduce production annotationToken -> APPLY
-- On INTEGER reduce production annotationToken -> APPLY
-- On INT reduce production annotationToken -> APPLY
-- On INOUT reduce production annotationToken -> APPLY
-- On IN reduce production annotationToken -> APPLY
-- On IF reduce production annotationToken -> APPLY
-- On HEADER_UNION reduce production annotationToken -> APPLY
-- On HEADER reduce production annotationToken -> APPLY
-- On GE reduce production annotationToken -> APPLY
-- On FALSE reduce production annotationToken -> APPLY
-- On EXTERN reduce production annotationToken -> APPLY
-- On EXIT reduce production annotationToken -> APPLY
-- On ERROR reduce production annotationToken -> APPLY
-- On EQ reduce production annotationToken -> APPLY
-- On ENUM reduce production annotationToken -> APPLY
-- On ENTRIES reduce production annotationToken -> APPLY
-- On ELSE reduce production annotationToken -> APPLY
-- On DOT reduce production annotationToken -> APPLY
-- On DONTCARE reduce production annotationToken -> APPLY
-- On DIV reduce production annotationToken -> APPLY
-- On DEFAULT reduce production annotationToken -> APPLY
-- On CONTROL reduce production annotationToken -> APPLY
-- On CONST reduce production annotationToken -> APPLY
-- On COMPLEMENT reduce production annotationToken -> APPLY
-- On COMMA reduce production annotationToken -> APPLY
-- On COLON reduce production annotationToken -> APPLY
-- On BOOL reduce production annotationToken -> APPLY
-- On BIT_XOR reduce production annotationToken -> APPLY
-- On BIT_OR reduce production annotationToken -> APPLY
-- On BIT_AND reduce production annotationToken -> APPLY
-- On BIT reduce production annotationToken -> APPLY
-- On AT reduce production annotationToken -> APPLY
-- On ASSIGN reduce production annotationToken -> APPLY
-- On APPLY reduce production annotationToken -> APPLY
-- On AND reduce production annotationToken -> APPLY
-- On ACTIONS reduce production annotationToken -> APPLY
-- On ACTION reduce production annotationToken -> APPLY
-- On ABSTRACT reduce production annotationToken -> APPLY

State 291:
annotationToken -> AND . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> AND
-- On VARBIT reduce production annotationToken -> AND
-- On VALUESET reduce production annotationToken -> AND
-- On TYPEDEF reduce production annotationToken -> AND
-- On TYPE reduce production annotationToken -> AND
-- On TUPLE reduce production annotationToken -> AND
-- On TRUE reduce production annotationToken -> AND
-- On TRANSITION reduce production annotationToken -> AND
-- On TABLE reduce production annotationToken -> AND
-- On SWITCH reduce production annotationToken -> AND
-- On STRUCT reduce production annotationToken -> AND
-- On STRING_LITERAL reduce production annotationToken -> AND
-- On STRING reduce production annotationToken -> AND
-- On STATE reduce production annotationToken -> AND
-- On SHL reduce production annotationToken -> AND
-- On SEMICOLON reduce production annotationToken -> AND
-- On SELECT reduce production annotationToken -> AND
-- On R_PAREN reduce production annotationToken -> AND
-- On R_BRACKET reduce production annotationToken -> AND
-- On R_BRACE reduce production annotationToken -> AND
-- On R_ANGLE reduce production annotationToken -> AND
-- On RETURN reduce production annotationToken -> AND
-- On RANGE reduce production annotationToken -> AND
-- On QUESTION reduce production annotationToken -> AND
-- On PRAGMA_END reduce production annotationToken -> AND
-- On PRAGMA reduce production annotationToken -> AND
-- On PLUS_SAT reduce production annotationToken -> AND
-- On PLUSPLUS reduce production annotationToken -> AND
-- On PLUS reduce production annotationToken -> AND
-- On PARSER reduce production annotationToken -> AND
-- On PACKAGE reduce production annotationToken -> AND
-- On OUT reduce production annotationToken -> AND
-- On OR reduce production annotationToken -> AND
-- On NOT reduce production annotationToken -> AND
-- On NE reduce production annotationToken -> AND
-- On NAME reduce production annotationToken -> AND
-- On MUL reduce production annotationToken -> AND
-- On MOD reduce production annotationToken -> AND
-- On MINUS_SAT reduce production annotationToken -> AND
-- On MINUS reduce production annotationToken -> AND
-- On MATCH_KIND reduce production annotationToken -> AND
-- On MASK reduce production annotationToken -> AND
-- On L_PAREN reduce production annotationToken -> AND
-- On L_BRACKET reduce production annotationToken -> AND
-- On L_BRACE reduce production annotationToken -> AND
-- On L_ANGLE reduce production annotationToken -> AND
-- On LE reduce production annotationToken -> AND
-- On KEY reduce production annotationToken -> AND
-- On INTEGER reduce production annotationToken -> AND
-- On INT reduce production annotationToken -> AND
-- On INOUT reduce production annotationToken -> AND
-- On IN reduce production annotationToken -> AND
-- On IF reduce production annotationToken -> AND
-- On HEADER_UNION reduce production annotationToken -> AND
-- On HEADER reduce production annotationToken -> AND
-- On GE reduce production annotationToken -> AND
-- On FALSE reduce production annotationToken -> AND
-- On EXTERN reduce production annotationToken -> AND
-- On EXIT reduce production annotationToken -> AND
-- On ERROR reduce production annotationToken -> AND
-- On EQ reduce production annotationToken -> AND
-- On ENUM reduce production annotationToken -> AND
-- On ENTRIES reduce production annotationToken -> AND
-- On ELSE reduce production annotationToken -> AND
-- On DOT reduce production annotationToken -> AND
-- On DONTCARE reduce production annotationToken -> AND
-- On DIV reduce production annotationToken -> AND
-- On DEFAULT reduce production annotationToken -> AND
-- On CONTROL reduce production annotationToken -> AND
-- On CONST reduce production annotationToken -> AND
-- On COMPLEMENT reduce production annotationToken -> AND
-- On COMMA reduce production annotationToken -> AND
-- On COLON reduce production annotationToken -> AND
-- On BOOL reduce production annotationToken -> AND
-- On BIT_XOR reduce production annotationToken -> AND
-- On BIT_OR reduce production annotationToken -> AND
-- On BIT_AND reduce production annotationToken -> AND
-- On BIT reduce production annotationToken -> AND
-- On AT reduce production annotationToken -> AND
-- On ASSIGN reduce production annotationToken -> AND
-- On APPLY reduce production annotationToken -> AND
-- On AND reduce production annotationToken -> AND
-- On ACTIONS reduce production annotationToken -> AND
-- On ACTION reduce production annotationToken -> AND
-- On ABSTRACT reduce production annotationToken -> AND

State 292:
annotationToken -> ACTIONS . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> ACTIONS
-- On VARBIT reduce production annotationToken -> ACTIONS
-- On VALUESET reduce production annotationToken -> ACTIONS
-- On TYPEDEF reduce production annotationToken -> ACTIONS
-- On TYPE reduce production annotationToken -> ACTIONS
-- On TUPLE reduce production annotationToken -> ACTIONS
-- On TRUE reduce production annotationToken -> ACTIONS
-- On TRANSITION reduce production annotationToken -> ACTIONS
-- On TABLE reduce production annotationToken -> ACTIONS
-- On SWITCH reduce production annotationToken -> ACTIONS
-- On STRUCT reduce production annotationToken -> ACTIONS
-- On STRING_LITERAL reduce production annotationToken -> ACTIONS
-- On STRING reduce production annotationToken -> ACTIONS
-- On STATE reduce production annotationToken -> ACTIONS
-- On SHL reduce production annotationToken -> ACTIONS
-- On SEMICOLON reduce production annotationToken -> ACTIONS
-- On SELECT reduce production annotationToken -> ACTIONS
-- On R_PAREN reduce production annotationToken -> ACTIONS
-- On R_BRACKET reduce production annotationToken -> ACTIONS
-- On R_BRACE reduce production annotationToken -> ACTIONS
-- On R_ANGLE reduce production annotationToken -> ACTIONS
-- On RETURN reduce production annotationToken -> ACTIONS
-- On RANGE reduce production annotationToken -> ACTIONS
-- On QUESTION reduce production annotationToken -> ACTIONS
-- On PRAGMA_END reduce production annotationToken -> ACTIONS
-- On PRAGMA reduce production annotationToken -> ACTIONS
-- On PLUS_SAT reduce production annotationToken -> ACTIONS
-- On PLUSPLUS reduce production annotationToken -> ACTIONS
-- On PLUS reduce production annotationToken -> ACTIONS
-- On PARSER reduce production annotationToken -> ACTIONS
-- On PACKAGE reduce production annotationToken -> ACTIONS
-- On OUT reduce production annotationToken -> ACTIONS
-- On OR reduce production annotationToken -> ACTIONS
-- On NOT reduce production annotationToken -> ACTIONS
-- On NE reduce production annotationToken -> ACTIONS
-- On NAME reduce production annotationToken -> ACTIONS
-- On MUL reduce production annotationToken -> ACTIONS
-- On MOD reduce production annotationToken -> ACTIONS
-- On MINUS_SAT reduce production annotationToken -> ACTIONS
-- On MINUS reduce production annotationToken -> ACTIONS
-- On MATCH_KIND reduce production annotationToken -> ACTIONS
-- On MASK reduce production annotationToken -> ACTIONS
-- On L_PAREN reduce production annotationToken -> ACTIONS
-- On L_BRACKET reduce production annotationToken -> ACTIONS
-- On L_BRACE reduce production annotationToken -> ACTIONS
-- On L_ANGLE reduce production annotationToken -> ACTIONS
-- On LE reduce production annotationToken -> ACTIONS
-- On KEY reduce production annotationToken -> ACTIONS
-- On INTEGER reduce production annotationToken -> ACTIONS
-- On INT reduce production annotationToken -> ACTIONS
-- On INOUT reduce production annotationToken -> ACTIONS
-- On IN reduce production annotationToken -> ACTIONS
-- On IF reduce production annotationToken -> ACTIONS
-- On HEADER_UNION reduce production annotationToken -> ACTIONS
-- On HEADER reduce production annotationToken -> ACTIONS
-- On GE reduce production annotationToken -> ACTIONS
-- On FALSE reduce production annotationToken -> ACTIONS
-- On EXTERN reduce production annotationToken -> ACTIONS
-- On EXIT reduce production annotationToken -> ACTIONS
-- On ERROR reduce production annotationToken -> ACTIONS
-- On EQ reduce production annotationToken -> ACTIONS
-- On ENUM reduce production annotationToken -> ACTIONS
-- On ENTRIES reduce production annotationToken -> ACTIONS
-- On ELSE reduce production annotationToken -> ACTIONS
-- On DOT reduce production annotationToken -> ACTIONS
-- On DONTCARE reduce production annotationToken -> ACTIONS
-- On DIV reduce production annotationToken -> ACTIONS
-- On DEFAULT reduce production annotationToken -> ACTIONS
-- On CONTROL reduce production annotationToken -> ACTIONS
-- On CONST reduce production annotationToken -> ACTIONS
-- On COMPLEMENT reduce production annotationToken -> ACTIONS
-- On COMMA reduce production annotationToken -> ACTIONS
-- On COLON reduce production annotationToken -> ACTIONS
-- On BOOL reduce production annotationToken -> ACTIONS
-- On BIT_XOR reduce production annotationToken -> ACTIONS
-- On BIT_OR reduce production annotationToken -> ACTIONS
-- On BIT_AND reduce production annotationToken -> ACTIONS
-- On BIT reduce production annotationToken -> ACTIONS
-- On AT reduce production annotationToken -> ACTIONS
-- On ASSIGN reduce production annotationToken -> ACTIONS
-- On APPLY reduce production annotationToken -> ACTIONS
-- On AND reduce production annotationToken -> ACTIONS
-- On ACTIONS reduce production annotationToken -> ACTIONS
-- On ACTION reduce production annotationToken -> ACTIONS
-- On ABSTRACT reduce production annotationToken -> ACTIONS

State 293:
annotationToken -> ACTION . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> ACTION
-- On VARBIT reduce production annotationToken -> ACTION
-- On VALUESET reduce production annotationToken -> ACTION
-- On TYPEDEF reduce production annotationToken -> ACTION
-- On TYPE reduce production annotationToken -> ACTION
-- On TUPLE reduce production annotationToken -> ACTION
-- On TRUE reduce production annotationToken -> ACTION
-- On TRANSITION reduce production annotationToken -> ACTION
-- On TABLE reduce production annotationToken -> ACTION
-- On SWITCH reduce production annotationToken -> ACTION
-- On STRUCT reduce production annotationToken -> ACTION
-- On STRING_LITERAL reduce production annotationToken -> ACTION
-- On STRING reduce production annotationToken -> ACTION
-- On STATE reduce production annotationToken -> ACTION
-- On SHL reduce production annotationToken -> ACTION
-- On SEMICOLON reduce production annotationToken -> ACTION
-- On SELECT reduce production annotationToken -> ACTION
-- On R_PAREN reduce production annotationToken -> ACTION
-- On R_BRACKET reduce production annotationToken -> ACTION
-- On R_BRACE reduce production annotationToken -> ACTION
-- On R_ANGLE reduce production annotationToken -> ACTION
-- On RETURN reduce production annotationToken -> ACTION
-- On RANGE reduce production annotationToken -> ACTION
-- On QUESTION reduce production annotationToken -> ACTION
-- On PRAGMA_END reduce production annotationToken -> ACTION
-- On PRAGMA reduce production annotationToken -> ACTION
-- On PLUS_SAT reduce production annotationToken -> ACTION
-- On PLUSPLUS reduce production annotationToken -> ACTION
-- On PLUS reduce production annotationToken -> ACTION
-- On PARSER reduce production annotationToken -> ACTION
-- On PACKAGE reduce production annotationToken -> ACTION
-- On OUT reduce production annotationToken -> ACTION
-- On OR reduce production annotationToken -> ACTION
-- On NOT reduce production annotationToken -> ACTION
-- On NE reduce production annotationToken -> ACTION
-- On NAME reduce production annotationToken -> ACTION
-- On MUL reduce production annotationToken -> ACTION
-- On MOD reduce production annotationToken -> ACTION
-- On MINUS_SAT reduce production annotationToken -> ACTION
-- On MINUS reduce production annotationToken -> ACTION
-- On MATCH_KIND reduce production annotationToken -> ACTION
-- On MASK reduce production annotationToken -> ACTION
-- On L_PAREN reduce production annotationToken -> ACTION
-- On L_BRACKET reduce production annotationToken -> ACTION
-- On L_BRACE reduce production annotationToken -> ACTION
-- On L_ANGLE reduce production annotationToken -> ACTION
-- On LE reduce production annotationToken -> ACTION
-- On KEY reduce production annotationToken -> ACTION
-- On INTEGER reduce production annotationToken -> ACTION
-- On INT reduce production annotationToken -> ACTION
-- On INOUT reduce production annotationToken -> ACTION
-- On IN reduce production annotationToken -> ACTION
-- On IF reduce production annotationToken -> ACTION
-- On HEADER_UNION reduce production annotationToken -> ACTION
-- On HEADER reduce production annotationToken -> ACTION
-- On GE reduce production annotationToken -> ACTION
-- On FALSE reduce production annotationToken -> ACTION
-- On EXTERN reduce production annotationToken -> ACTION
-- On EXIT reduce production annotationToken -> ACTION
-- On ERROR reduce production annotationToken -> ACTION
-- On EQ reduce production annotationToken -> ACTION
-- On ENUM reduce production annotationToken -> ACTION
-- On ENTRIES reduce production annotationToken -> ACTION
-- On ELSE reduce production annotationToken -> ACTION
-- On DOT reduce production annotationToken -> ACTION
-- On DONTCARE reduce production annotationToken -> ACTION
-- On DIV reduce production annotationToken -> ACTION
-- On DEFAULT reduce production annotationToken -> ACTION
-- On CONTROL reduce production annotationToken -> ACTION
-- On CONST reduce production annotationToken -> ACTION
-- On COMPLEMENT reduce production annotationToken -> ACTION
-- On COMMA reduce production annotationToken -> ACTION
-- On COLON reduce production annotationToken -> ACTION
-- On BOOL reduce production annotationToken -> ACTION
-- On BIT_XOR reduce production annotationToken -> ACTION
-- On BIT_OR reduce production annotationToken -> ACTION
-- On BIT_AND reduce production annotationToken -> ACTION
-- On BIT reduce production annotationToken -> ACTION
-- On AT reduce production annotationToken -> ACTION
-- On ASSIGN reduce production annotationToken -> ACTION
-- On APPLY reduce production annotationToken -> ACTION
-- On AND reduce production annotationToken -> ACTION
-- On ACTIONS reduce production annotationToken -> ACTION
-- On ACTION reduce production annotationToken -> ACTION
-- On ABSTRACT reduce production annotationToken -> ACTION

State 294:
annotationToken -> ABSTRACT . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotationToken -> ABSTRACT
-- On VARBIT reduce production annotationToken -> ABSTRACT
-- On VALUESET reduce production annotationToken -> ABSTRACT
-- On TYPEDEF reduce production annotationToken -> ABSTRACT
-- On TYPE reduce production annotationToken -> ABSTRACT
-- On TUPLE reduce production annotationToken -> ABSTRACT
-- On TRUE reduce production annotationToken -> ABSTRACT
-- On TRANSITION reduce production annotationToken -> ABSTRACT
-- On TABLE reduce production annotationToken -> ABSTRACT
-- On SWITCH reduce production annotationToken -> ABSTRACT
-- On STRUCT reduce production annotationToken -> ABSTRACT
-- On STRING_LITERAL reduce production annotationToken -> ABSTRACT
-- On STRING reduce production annotationToken -> ABSTRACT
-- On STATE reduce production annotationToken -> ABSTRACT
-- On SHL reduce production annotationToken -> ABSTRACT
-- On SEMICOLON reduce production annotationToken -> ABSTRACT
-- On SELECT reduce production annotationToken -> ABSTRACT
-- On R_PAREN reduce production annotationToken -> ABSTRACT
-- On R_BRACKET reduce production annotationToken -> ABSTRACT
-- On R_BRACE reduce production annotationToken -> ABSTRACT
-- On R_ANGLE reduce production annotationToken -> ABSTRACT
-- On RETURN reduce production annotationToken -> ABSTRACT
-- On RANGE reduce production annotationToken -> ABSTRACT
-- On QUESTION reduce production annotationToken -> ABSTRACT
-- On PRAGMA_END reduce production annotationToken -> ABSTRACT
-- On PRAGMA reduce production annotationToken -> ABSTRACT
-- On PLUS_SAT reduce production annotationToken -> ABSTRACT
-- On PLUSPLUS reduce production annotationToken -> ABSTRACT
-- On PLUS reduce production annotationToken -> ABSTRACT
-- On PARSER reduce production annotationToken -> ABSTRACT
-- On PACKAGE reduce production annotationToken -> ABSTRACT
-- On OUT reduce production annotationToken -> ABSTRACT
-- On OR reduce production annotationToken -> ABSTRACT
-- On NOT reduce production annotationToken -> ABSTRACT
-- On NE reduce production annotationToken -> ABSTRACT
-- On NAME reduce production annotationToken -> ABSTRACT
-- On MUL reduce production annotationToken -> ABSTRACT
-- On MOD reduce production annotationToken -> ABSTRACT
-- On MINUS_SAT reduce production annotationToken -> ABSTRACT
-- On MINUS reduce production annotationToken -> ABSTRACT
-- On MATCH_KIND reduce production annotationToken -> ABSTRACT
-- On MASK reduce production annotationToken -> ABSTRACT
-- On L_PAREN reduce production annotationToken -> ABSTRACT
-- On L_BRACKET reduce production annotationToken -> ABSTRACT
-- On L_BRACE reduce production annotationToken -> ABSTRACT
-- On L_ANGLE reduce production annotationToken -> ABSTRACT
-- On LE reduce production annotationToken -> ABSTRACT
-- On KEY reduce production annotationToken -> ABSTRACT
-- On INTEGER reduce production annotationToken -> ABSTRACT
-- On INT reduce production annotationToken -> ABSTRACT
-- On INOUT reduce production annotationToken -> ABSTRACT
-- On IN reduce production annotationToken -> ABSTRACT
-- On IF reduce production annotationToken -> ABSTRACT
-- On HEADER_UNION reduce production annotationToken -> ABSTRACT
-- On HEADER reduce production annotationToken -> ABSTRACT
-- On GE reduce production annotationToken -> ABSTRACT
-- On FALSE reduce production annotationToken -> ABSTRACT
-- On EXTERN reduce production annotationToken -> ABSTRACT
-- On EXIT reduce production annotationToken -> ABSTRACT
-- On ERROR reduce production annotationToken -> ABSTRACT
-- On EQ reduce production annotationToken -> ABSTRACT
-- On ENUM reduce production annotationToken -> ABSTRACT
-- On ENTRIES reduce production annotationToken -> ABSTRACT
-- On ELSE reduce production annotationToken -> ABSTRACT
-- On DOT reduce production annotationToken -> ABSTRACT
-- On DONTCARE reduce production annotationToken -> ABSTRACT
-- On DIV reduce production annotationToken -> ABSTRACT
-- On DEFAULT reduce production annotationToken -> ABSTRACT
-- On CONTROL reduce production annotationToken -> ABSTRACT
-- On CONST reduce production annotationToken -> ABSTRACT
-- On COMPLEMENT reduce production annotationToken -> ABSTRACT
-- On COMMA reduce production annotationToken -> ABSTRACT
-- On COLON reduce production annotationToken -> ABSTRACT
-- On BOOL reduce production annotationToken -> ABSTRACT
-- On BIT_XOR reduce production annotationToken -> ABSTRACT
-- On BIT_OR reduce production annotationToken -> ABSTRACT
-- On BIT_AND reduce production annotationToken -> ABSTRACT
-- On BIT reduce production annotationToken -> ABSTRACT
-- On AT reduce production annotationToken -> ABSTRACT
-- On ASSIGN reduce production annotationToken -> ABSTRACT
-- On APPLY reduce production annotationToken -> ABSTRACT
-- On AND reduce production annotationToken -> ABSTRACT
-- On ACTIONS reduce production annotationToken -> ABSTRACT
-- On ACTION reduce production annotationToken -> ABSTRACT
-- On ABSTRACT reduce production annotationToken -> ABSTRACT

State 295:
list_aux(annotationToken) -> list_aux(annotationToken) annotationToken . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRUE TRANSITION TABLE SWITCH STRUCT STRING_LITERAL STRING STATE SHL SEMICOLON SELECT R_PAREN R_BRACKET R_BRACE R_ANGLE RETURN RANGE QUESTION PRAGMA_END PRAGMA PLUS_SAT PLUSPLUS PLUS PARSER PACKAGE OUT OR NOT NE NAME MUL MOD MINUS_SAT MINUS MATCH_KIND MASK L_PAREN L_BRACKET L_BRACE L_ANGLE LE KEY INTEGER INT INOUT IN IF HEADER_UNION HEADER GE FALSE EXTERN EXIT ERROR EQ ENUM ENTRIES ELSE DOT DONTCARE DIV DEFAULT CONTROL CONST COMPLEMENT COMMA COLON BOOL BIT_XOR BIT_OR BIT_AND BIT AT ASSIGN APPLY AND ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On VARBIT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On VALUESET reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On TYPEDEF reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On TYPE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On TUPLE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On TRUE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On TRANSITION reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On TABLE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On SWITCH reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On STRUCT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On STRING_LITERAL reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On STRING reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On STATE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On SHL reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On SEMICOLON reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On SELECT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On R_PAREN reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On R_BRACKET reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On R_BRACE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On R_ANGLE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On RETURN reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On RANGE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On QUESTION reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On PRAGMA_END reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On PRAGMA reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On PLUS_SAT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On PLUSPLUS reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On PLUS reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On PARSER reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On PACKAGE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On OUT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On OR reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On NOT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On NE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On NAME reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On MUL reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On MOD reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On MINUS_SAT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On MINUS reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On MATCH_KIND reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On MASK reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On L_PAREN reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On L_BRACKET reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On L_BRACE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On L_ANGLE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On LE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On KEY reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On INTEGER reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On INT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On INOUT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On IN reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On IF reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On HEADER_UNION reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On HEADER reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On GE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On FALSE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On EXTERN reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On EXIT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On ERROR reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On EQ reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On ENUM reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On ENTRIES reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On ELSE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On DOT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On DONTCARE reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On DIV reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On DEFAULT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On CONTROL reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On CONST reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On COMPLEMENT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On COMMA reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On COLON reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On BOOL reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On BIT_XOR reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On BIT_OR reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On BIT_AND reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On BIT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On AT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On ASSIGN reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On APPLY reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On AND reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On ACTIONS reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On ACTION reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken
-- On ABSTRACT reduce production list_aux(annotationToken) -> list_aux(annotationToken) annotationToken

State 296:
annotation -> PRAGMA name annotationBody . PRAGMA_END [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
annotationBody -> annotationBody . L_PAREN annotationBody R_PAREN [ PRAGMA_END L_PAREN ]
-- On PRAGMA_END shift to state 297
-- On L_PAREN shift to state 298

State 297:
annotation -> PRAGMA name annotationBody PRAGMA_END . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On VARBIT reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On VALUESET reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On TYPEDEF reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On TYPE reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On TUPLE reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On TABLE reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On STRUCT reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On STRING reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On STATE reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On SEMICOLON reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On PRAGMA reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On PARSER reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On PACKAGE reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On OUT reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On NAME reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On L_BRACE reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On KEY reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On INT reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On INOUT reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On IN reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On HEADER_UNION reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On HEADER reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On EXTERN reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On ERROR reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On ENUM reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On ENTRIES reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On DOT reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On CONTROL reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On CONST reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On BOOL reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On BIT reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On AT reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On APPLY reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On ACTIONS reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On ACTION reduce production annotation -> PRAGMA name annotationBody PRAGMA_END
-- On ABSTRACT reduce production annotation -> PRAGMA name annotationBody PRAGMA_END

State 298:
annotationBody -> annotationBody L_PAREN . annotationBody R_PAREN [ R_PAREN PRAGMA_END L_PAREN ]
-- On petr4_list(annotationToken) shift to state 209
-- On list_aux(annotationToken) shift to state 210
-- On annotationBody shift to state 299
-- On VOID reduce production list_aux(annotationToken) ->
-- On VARBIT reduce production list_aux(annotationToken) ->
-- On VALUESET reduce production list_aux(annotationToken) ->
-- On TYPEDEF reduce production list_aux(annotationToken) ->
-- On TYPE reduce production list_aux(annotationToken) ->
-- On TUPLE reduce production list_aux(annotationToken) ->
-- On TRUE reduce production list_aux(annotationToken) ->
-- On TRANSITION reduce production list_aux(annotationToken) ->
-- On TABLE reduce production list_aux(annotationToken) ->
-- On SWITCH reduce production list_aux(annotationToken) ->
-- On STRUCT reduce production list_aux(annotationToken) ->
-- On STRING_LITERAL reduce production list_aux(annotationToken) ->
-- On STRING reduce production list_aux(annotationToken) ->
-- On STATE reduce production list_aux(annotationToken) ->
-- On SHL reduce production list_aux(annotationToken) ->
-- On SEMICOLON reduce production list_aux(annotationToken) ->
-- On SELECT reduce production list_aux(annotationToken) ->
-- On R_PAREN reduce production list_aux(annotationToken) ->
-- On R_BRACKET reduce production list_aux(annotationToken) ->
-- On R_BRACE reduce production list_aux(annotationToken) ->
-- On R_ANGLE reduce production list_aux(annotationToken) ->
-- On RETURN reduce production list_aux(annotationToken) ->
-- On RANGE reduce production list_aux(annotationToken) ->
-- On QUESTION reduce production list_aux(annotationToken) ->
-- On PRAGMA reduce production list_aux(annotationToken) ->
-- On PLUS_SAT reduce production list_aux(annotationToken) ->
-- On PLUSPLUS reduce production list_aux(annotationToken) ->
-- On PLUS reduce production list_aux(annotationToken) ->
-- On PARSER reduce production list_aux(annotationToken) ->
-- On PACKAGE reduce production list_aux(annotationToken) ->
-- On OUT reduce production list_aux(annotationToken) ->
-- On OR reduce production list_aux(annotationToken) ->
-- On NOT reduce production list_aux(annotationToken) ->
-- On NE reduce production list_aux(annotationToken) ->
-- On NAME reduce production list_aux(annotationToken) ->
-- On MUL reduce production list_aux(annotationToken) ->
-- On MOD reduce production list_aux(annotationToken) ->
-- On MINUS_SAT reduce production list_aux(annotationToken) ->
-- On MINUS reduce production list_aux(annotationToken) ->
-- On MATCH_KIND reduce production list_aux(annotationToken) ->
-- On MASK reduce production list_aux(annotationToken) ->
-- On L_PAREN reduce production list_aux(annotationToken) ->
-- On L_BRACKET reduce production list_aux(annotationToken) ->
-- On L_BRACE reduce production list_aux(annotationToken) ->
-- On L_ANGLE reduce production list_aux(annotationToken) ->
-- On LE reduce production list_aux(annotationToken) ->
-- On KEY reduce production list_aux(annotationToken) ->
-- On INTEGER reduce production list_aux(annotationToken) ->
-- On INT reduce production list_aux(annotationToken) ->
-- On INOUT reduce production list_aux(annotationToken) ->
-- On IN reduce production list_aux(annotationToken) ->
-- On IF reduce production list_aux(annotationToken) ->
-- On HEADER_UNION reduce production list_aux(annotationToken) ->
-- On HEADER reduce production list_aux(annotationToken) ->
-- On GE reduce production list_aux(annotationToken) ->
-- On FALSE reduce production list_aux(annotationToken) ->
-- On EXTERN reduce production list_aux(annotationToken) ->
-- On EXIT reduce production list_aux(annotationToken) ->
-- On ERROR reduce production list_aux(annotationToken) ->
-- On EQ reduce production list_aux(annotationToken) ->
-- On ENUM reduce production list_aux(annotationToken) ->
-- On ENTRIES reduce production list_aux(annotationToken) ->
-- On ELSE reduce production list_aux(annotationToken) ->
-- On DOT reduce production list_aux(annotationToken) ->
-- On DONTCARE reduce production list_aux(annotationToken) ->
-- On DIV reduce production list_aux(annotationToken) ->
-- On DEFAULT reduce production list_aux(annotationToken) ->
-- On CONTROL reduce production list_aux(annotationToken) ->
-- On CONST reduce production list_aux(annotationToken) ->
-- On COMPLEMENT reduce production list_aux(annotationToken) ->
-- On COMMA reduce production list_aux(annotationToken) ->
-- On COLON reduce production list_aux(annotationToken) ->
-- On BOOL reduce production list_aux(annotationToken) ->
-- On BIT_XOR reduce production list_aux(annotationToken) ->
-- On BIT_OR reduce production list_aux(annotationToken) ->
-- On BIT_AND reduce production list_aux(annotationToken) ->
-- On BIT reduce production list_aux(annotationToken) ->
-- On AT reduce production list_aux(annotationToken) ->
-- On ASSIGN reduce production list_aux(annotationToken) ->
-- On APPLY reduce production list_aux(annotationToken) ->
-- On AND reduce production list_aux(annotationToken) ->
-- On ACTIONS reduce production list_aux(annotationToken) ->
-- On ACTION reduce production list_aux(annotationToken) ->
-- On ABSTRACT reduce production list_aux(annotationToken) ->

State 299:
annotationBody -> annotationBody . L_PAREN annotationBody R_PAREN [ R_PAREN L_PAREN ]
annotationBody -> annotationBody L_PAREN annotationBody . R_PAREN [ R_PAREN PRAGMA_END L_PAREN ]
-- On R_PAREN shift to state 300
-- On L_PAREN shift to state 298

State 300:
annotationBody -> annotationBody L_PAREN annotationBody R_PAREN . [ R_PAREN PRAGMA_END L_PAREN ]
-- On R_PAREN reduce production annotationBody -> annotationBody L_PAREN annotationBody R_PAREN
-- On PRAGMA_END reduce production annotationBody -> annotationBody L_PAREN annotationBody R_PAREN
-- On L_PAREN reduce production annotationBody -> annotationBody L_PAREN annotationBody R_PAREN

State 301:
prefixedType -> NAME . TYPENAME [ TYPE STATE R_ANGLE NAME L_PAREN L_BRACKET L_ANGLE KEY ENTRIES APPLY ACTIONS ]
-- On TYPENAME shift to state 12

State 302:
annotation -> AT . name [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
annotation -> AT . name L_PAREN annotationBody R_PAREN [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
annotation -> AT . name L_BRACKET expressionList R_BRACKET [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
annotation -> AT . name L_BRACKET kvList R_BRACKET [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 303

State 303:
annotation -> AT name . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
annotation -> AT name . L_PAREN annotationBody R_PAREN [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
annotation -> AT name . L_BRACKET expressionList R_BRACKET [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
annotation -> AT name . L_BRACKET kvList R_BRACKET [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On L_PAREN shift to state 304
-- On L_BRACKET shift to state 307
-- On VOID reduce production annotation -> AT name
-- On VARBIT reduce production annotation -> AT name
-- On VALUESET reduce production annotation -> AT name
-- On TYPEDEF reduce production annotation -> AT name
-- On TYPE reduce production annotation -> AT name
-- On TUPLE reduce production annotation -> AT name
-- On TABLE reduce production annotation -> AT name
-- On STRUCT reduce production annotation -> AT name
-- On STRING reduce production annotation -> AT name
-- On STATE reduce production annotation -> AT name
-- On SEMICOLON reduce production annotation -> AT name
-- On PRAGMA reduce production annotation -> AT name
-- On PARSER reduce production annotation -> AT name
-- On PACKAGE reduce production annotation -> AT name
-- On OUT reduce production annotation -> AT name
-- On NAME reduce production annotation -> AT name
-- On L_BRACE reduce production annotation -> AT name
-- On KEY reduce production annotation -> AT name
-- On INT reduce production annotation -> AT name
-- On INOUT reduce production annotation -> AT name
-- On IN reduce production annotation -> AT name
-- On HEADER_UNION reduce production annotation -> AT name
-- On HEADER reduce production annotation -> AT name
-- On EXTERN reduce production annotation -> AT name
-- On ERROR reduce production annotation -> AT name
-- On ENUM reduce production annotation -> AT name
-- On ENTRIES reduce production annotation -> AT name
-- On DOT reduce production annotation -> AT name
-- On CONTROL reduce production annotation -> AT name
-- On CONST reduce production annotation -> AT name
-- On BOOL reduce production annotation -> AT name
-- On BIT reduce production annotation -> AT name
-- On AT reduce production annotation -> AT name
-- On APPLY reduce production annotation -> AT name
-- On ACTIONS reduce production annotation -> AT name
-- On ACTION reduce production annotation -> AT name
-- On ABSTRACT reduce production annotation -> AT name

State 304:
annotation -> AT name L_PAREN . annotationBody R_PAREN [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On petr4_list(annotationToken) shift to state 209
-- On list_aux(annotationToken) shift to state 210
-- On annotationBody shift to state 305
-- On VOID reduce production list_aux(annotationToken) ->
-- On VARBIT reduce production list_aux(annotationToken) ->
-- On VALUESET reduce production list_aux(annotationToken) ->
-- On TYPEDEF reduce production list_aux(annotationToken) ->
-- On TYPE reduce production list_aux(annotationToken) ->
-- On TUPLE reduce production list_aux(annotationToken) ->
-- On TRUE reduce production list_aux(annotationToken) ->
-- On TRANSITION reduce production list_aux(annotationToken) ->
-- On TABLE reduce production list_aux(annotationToken) ->
-- On SWITCH reduce production list_aux(annotationToken) ->
-- On STRUCT reduce production list_aux(annotationToken) ->
-- On STRING_LITERAL reduce production list_aux(annotationToken) ->
-- On STRING reduce production list_aux(annotationToken) ->
-- On STATE reduce production list_aux(annotationToken) ->
-- On SHL reduce production list_aux(annotationToken) ->
-- On SEMICOLON reduce production list_aux(annotationToken) ->
-- On SELECT reduce production list_aux(annotationToken) ->
-- On R_PAREN reduce production list_aux(annotationToken) ->
-- On R_BRACKET reduce production list_aux(annotationToken) ->
-- On R_BRACE reduce production list_aux(annotationToken) ->
-- On R_ANGLE reduce production list_aux(annotationToken) ->
-- On RETURN reduce production list_aux(annotationToken) ->
-- On RANGE reduce production list_aux(annotationToken) ->
-- On QUESTION reduce production list_aux(annotationToken) ->
-- On PRAGMA reduce production list_aux(annotationToken) ->
-- On PLUS_SAT reduce production list_aux(annotationToken) ->
-- On PLUSPLUS reduce production list_aux(annotationToken) ->
-- On PLUS reduce production list_aux(annotationToken) ->
-- On PARSER reduce production list_aux(annotationToken) ->
-- On PACKAGE reduce production list_aux(annotationToken) ->
-- On OUT reduce production list_aux(annotationToken) ->
-- On OR reduce production list_aux(annotationToken) ->
-- On NOT reduce production list_aux(annotationToken) ->
-- On NE reduce production list_aux(annotationToken) ->
-- On NAME reduce production list_aux(annotationToken) ->
-- On MUL reduce production list_aux(annotationToken) ->
-- On MOD reduce production list_aux(annotationToken) ->
-- On MINUS_SAT reduce production list_aux(annotationToken) ->
-- On MINUS reduce production list_aux(annotationToken) ->
-- On MATCH_KIND reduce production list_aux(annotationToken) ->
-- On MASK reduce production list_aux(annotationToken) ->
-- On L_PAREN reduce production list_aux(annotationToken) ->
-- On L_BRACKET reduce production list_aux(annotationToken) ->
-- On L_BRACE reduce production list_aux(annotationToken) ->
-- On L_ANGLE reduce production list_aux(annotationToken) ->
-- On LE reduce production list_aux(annotationToken) ->
-- On KEY reduce production list_aux(annotationToken) ->
-- On INTEGER reduce production list_aux(annotationToken) ->
-- On INT reduce production list_aux(annotationToken) ->
-- On INOUT reduce production list_aux(annotationToken) ->
-- On IN reduce production list_aux(annotationToken) ->
-- On IF reduce production list_aux(annotationToken) ->
-- On HEADER_UNION reduce production list_aux(annotationToken) ->
-- On HEADER reduce production list_aux(annotationToken) ->
-- On GE reduce production list_aux(annotationToken) ->
-- On FALSE reduce production list_aux(annotationToken) ->
-- On EXTERN reduce production list_aux(annotationToken) ->
-- On EXIT reduce production list_aux(annotationToken) ->
-- On ERROR reduce production list_aux(annotationToken) ->
-- On EQ reduce production list_aux(annotationToken) ->
-- On ENUM reduce production list_aux(annotationToken) ->
-- On ENTRIES reduce production list_aux(annotationToken) ->
-- On ELSE reduce production list_aux(annotationToken) ->
-- On DOT reduce production list_aux(annotationToken) ->
-- On DONTCARE reduce production list_aux(annotationToken) ->
-- On DIV reduce production list_aux(annotationToken) ->
-- On DEFAULT reduce production list_aux(annotationToken) ->
-- On CONTROL reduce production list_aux(annotationToken) ->
-- On CONST reduce production list_aux(annotationToken) ->
-- On COMPLEMENT reduce production list_aux(annotationToken) ->
-- On COMMA reduce production list_aux(annotationToken) ->
-- On COLON reduce production list_aux(annotationToken) ->
-- On BOOL reduce production list_aux(annotationToken) ->
-- On BIT_XOR reduce production list_aux(annotationToken) ->
-- On BIT_OR reduce production list_aux(annotationToken) ->
-- On BIT_AND reduce production list_aux(annotationToken) ->
-- On BIT reduce production list_aux(annotationToken) ->
-- On AT reduce production list_aux(annotationToken) ->
-- On ASSIGN reduce production list_aux(annotationToken) ->
-- On APPLY reduce production list_aux(annotationToken) ->
-- On AND reduce production list_aux(annotationToken) ->
-- On ACTIONS reduce production list_aux(annotationToken) ->
-- On ACTION reduce production list_aux(annotationToken) ->
-- On ABSTRACT reduce production list_aux(annotationToken) ->

State 305:
annotation -> AT name L_PAREN annotationBody . R_PAREN [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
annotationBody -> annotationBody . L_PAREN annotationBody R_PAREN [ R_PAREN L_PAREN ]
-- On R_PAREN shift to state 306
-- On L_PAREN shift to state 298

State 306:
annotation -> AT name L_PAREN annotationBody R_PAREN . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On VARBIT reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On VALUESET reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On TYPEDEF reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On TYPE reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On TUPLE reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On TABLE reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On STRUCT reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On STRING reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On STATE reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On SEMICOLON reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On PRAGMA reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On PARSER reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On PACKAGE reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On OUT reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On NAME reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On L_BRACE reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On KEY reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On INT reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On INOUT reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On IN reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On HEADER_UNION reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On HEADER reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On EXTERN reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On ERROR reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On ENUM reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On ENTRIES reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On DOT reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On CONTROL reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On CONST reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On BOOL reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On BIT reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On AT reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On APPLY reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On ACTIONS reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On ACTION reduce production annotation -> AT name L_PAREN annotationBody R_PAREN
-- On ABSTRACT reduce production annotation -> AT name L_PAREN annotationBody R_PAREN

State 307:
annotation -> AT name L_BRACKET . expressionList R_BRACKET [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
annotation -> AT name L_BRACKET . kvList R_BRACKET [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_nonempty_list_aux(COMMA,kvPair) shift to state 308
-- On separated_list_aux(COMMA,expression) shift to state 173
-- On prefixedType shift to state 44
-- On petr4_separated_nonempty_list(COMMA,kvPair) shift to state 314
-- On petr4_separated_list(COMMA,expression) shift to state 176
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 310
-- On kvPair shift to state 315
-- On kvList shift to state 316
-- On expressionList shift to state 318
-- On expression shift to state 179
-- On dotPrefix shift to state 91
-- On R_BRACKET reduce production separated_list_aux(COMMA,expression) ->
-- On COMMA reduce production separated_list_aux(COMMA,expression) ->

State 308:
petr4_separated_nonempty_list(COMMA,kvPair) -> separated_nonempty_list_aux(COMMA,kvPair) . [ R_BRACKET ]
separated_nonempty_list_aux(COMMA,kvPair) -> separated_nonempty_list_aux(COMMA,kvPair) . COMMA kvPair [ R_BRACKET COMMA ]
-- On COMMA shift to state 309
-- On R_BRACKET reduce production petr4_separated_nonempty_list(COMMA,kvPair) -> separated_nonempty_list_aux(COMMA,kvPair)

State 309:
separated_nonempty_list_aux(COMMA,kvPair) -> separated_nonempty_list_aux(COMMA,kvPair) COMMA . kvPair [ R_BRACKET COMMA ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 310
-- On kvPair shift to state 313

State 310:
kvPair -> name . EQ expression [ R_BRACKET COMMA ]
-- On EQ shift to state 311

State 311:
kvPair -> name EQ . expression [ R_BRACKET COMMA ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 312
-- On dotPrefix shift to state 91

State 312:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
kvPair -> name EQ expression . [ R_BRACKET COMMA ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On R_BRACKET reduce production kvPair -> name EQ expression
-- On COMMA reduce production kvPair -> name EQ expression

State 313:
separated_nonempty_list_aux(COMMA,kvPair) -> separated_nonempty_list_aux(COMMA,kvPair) COMMA kvPair . [ R_BRACKET COMMA ]
-- On R_BRACKET reduce production separated_nonempty_list_aux(COMMA,kvPair) -> separated_nonempty_list_aux(COMMA,kvPair) COMMA kvPair
-- On COMMA reduce production separated_nonempty_list_aux(COMMA,kvPair) -> separated_nonempty_list_aux(COMMA,kvPair) COMMA kvPair

State 314:
kvList -> petr4_separated_nonempty_list(COMMA,kvPair) . [ R_BRACKET ]
-- On R_BRACKET reduce production kvList -> petr4_separated_nonempty_list(COMMA,kvPair)

State 315:
separated_nonempty_list_aux(COMMA,kvPair) -> kvPair . [ R_BRACKET COMMA ]
-- On R_BRACKET reduce production separated_nonempty_list_aux(COMMA,kvPair) -> kvPair
-- On COMMA reduce production separated_nonempty_list_aux(COMMA,kvPair) -> kvPair

State 316:
annotation -> AT name L_BRACKET kvList . R_BRACKET [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On R_BRACKET shift to state 317

State 317:
annotation -> AT name L_BRACKET kvList R_BRACKET . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On VARBIT reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On VALUESET reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On TYPEDEF reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On TYPE reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On TUPLE reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On TABLE reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On STRUCT reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On STRING reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On STATE reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On SEMICOLON reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On PRAGMA reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On PARSER reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On PACKAGE reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On OUT reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On NAME reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On L_BRACE reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On KEY reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On INT reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On INOUT reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On IN reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On HEADER_UNION reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On HEADER reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On EXTERN reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On ERROR reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On ENUM reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On ENTRIES reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On DOT reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On CONTROL reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On CONST reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On BOOL reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On BIT reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On AT reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On APPLY reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On ACTIONS reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On ACTION reduce production annotation -> AT name L_BRACKET kvList R_BRACKET
-- On ABSTRACT reduce production annotation -> AT name L_BRACKET kvList R_BRACKET

State 318:
annotation -> AT name L_BRACKET expressionList . R_BRACKET [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On R_BRACKET shift to state 319

State 319:
annotation -> AT name L_BRACKET expressionList R_BRACKET . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On VARBIT reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On VALUESET reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On TYPEDEF reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On TYPE reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On TUPLE reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On TABLE reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On STRUCT reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On STRING reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On STATE reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On SEMICOLON reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On PRAGMA reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On PARSER reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On PACKAGE reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On OUT reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On NAME reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On L_BRACE reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On KEY reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On INT reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On INOUT reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On IN reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On HEADER_UNION reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On HEADER reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On EXTERN reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On ERROR reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On ENUM reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On ENTRIES reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On DOT reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On CONTROL reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On CONST reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On BOOL reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On BIT reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On AT reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On APPLY reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On ACTIONS reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On ACTION reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET
-- On ABSTRACT reduce production annotation -> AT name L_BRACKET expressionList R_BRACKET

State 320:
structField -> typeRef . name SEMICOLON [ VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 321

State 321:
structField -> typeRef name . SEMICOLON [ VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On SEMICOLON shift to state 322

State 322:
structField -> typeRef name SEMICOLON . [ VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On VARBIT reduce production structField -> typeRef name SEMICOLON
-- On TUPLE reduce production structField -> typeRef name SEMICOLON
-- On STRING reduce production structField -> typeRef name SEMICOLON
-- On R_BRACE reduce production structField -> typeRef name SEMICOLON
-- On PRAGMA reduce production structField -> typeRef name SEMICOLON
-- On NAME reduce production structField -> typeRef name SEMICOLON
-- On INT reduce production structField -> typeRef name SEMICOLON
-- On ERROR reduce production structField -> typeRef name SEMICOLON
-- On DOT reduce production structField -> typeRef name SEMICOLON
-- On BOOL reduce production structField -> typeRef name SEMICOLON
-- On BIT reduce production structField -> typeRef name SEMICOLON
-- On AT reduce production structField -> typeRef name SEMICOLON

State 323:
list_aux(structField) -> list_aux(structField) structField . [ VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On VARBIT reduce production list_aux(structField) -> list_aux(structField) structField
-- On TUPLE reduce production list_aux(structField) -> list_aux(structField) structField
-- On STRING reduce production list_aux(structField) -> list_aux(structField) structField
-- On R_BRACE reduce production list_aux(structField) -> list_aux(structField) structField
-- On PRAGMA reduce production list_aux(structField) -> list_aux(structField) structField
-- On NAME reduce production list_aux(structField) -> list_aux(structField) structField
-- On INT reduce production list_aux(structField) -> list_aux(structField) structField
-- On ERROR reduce production list_aux(structField) -> list_aux(structField) structField
-- On DOT reduce production list_aux(structField) -> list_aux(structField) structField
-- On BOOL reduce production list_aux(structField) -> list_aux(structField) structField
-- On BIT reduce production list_aux(structField) -> list_aux(structField) structField
-- On AT reduce production list_aux(structField) -> list_aux(structField) structField

State 324:
annotations -> petr4_nonempty_list(annotation) . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT APPLY ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production annotations -> petr4_nonempty_list(annotation)
-- On VARBIT reduce production annotations -> petr4_nonempty_list(annotation)
-- On VALUESET reduce production annotations -> petr4_nonempty_list(annotation)
-- On TYPEDEF reduce production annotations -> petr4_nonempty_list(annotation)
-- On TYPE reduce production annotations -> petr4_nonempty_list(annotation)
-- On TUPLE reduce production annotations -> petr4_nonempty_list(annotation)
-- On TABLE reduce production annotations -> petr4_nonempty_list(annotation)
-- On STRUCT reduce production annotations -> petr4_nonempty_list(annotation)
-- On STRING reduce production annotations -> petr4_nonempty_list(annotation)
-- On STATE reduce production annotations -> petr4_nonempty_list(annotation)
-- On SEMICOLON reduce production annotations -> petr4_nonempty_list(annotation)
-- On PARSER reduce production annotations -> petr4_nonempty_list(annotation)
-- On PACKAGE reduce production annotations -> petr4_nonempty_list(annotation)
-- On OUT reduce production annotations -> petr4_nonempty_list(annotation)
-- On NAME reduce production annotations -> petr4_nonempty_list(annotation)
-- On L_BRACE reduce production annotations -> petr4_nonempty_list(annotation)
-- On KEY reduce production annotations -> petr4_nonempty_list(annotation)
-- On INT reduce production annotations -> petr4_nonempty_list(annotation)
-- On INOUT reduce production annotations -> petr4_nonempty_list(annotation)
-- On IN reduce production annotations -> petr4_nonempty_list(annotation)
-- On HEADER_UNION reduce production annotations -> petr4_nonempty_list(annotation)
-- On HEADER reduce production annotations -> petr4_nonempty_list(annotation)
-- On EXTERN reduce production annotations -> petr4_nonempty_list(annotation)
-- On ERROR reduce production annotations -> petr4_nonempty_list(annotation)
-- On ENUM reduce production annotations -> petr4_nonempty_list(annotation)
-- On ENTRIES reduce production annotations -> petr4_nonempty_list(annotation)
-- On DOT reduce production annotations -> petr4_nonempty_list(annotation)
-- On CONTROL reduce production annotations -> petr4_nonempty_list(annotation)
-- On CONST reduce production annotations -> petr4_nonempty_list(annotation)
-- On BOOL reduce production annotations -> petr4_nonempty_list(annotation)
-- On BIT reduce production annotations -> petr4_nonempty_list(annotation)
-- On APPLY reduce production annotations -> petr4_nonempty_list(annotation)
-- On ACTIONS reduce production annotations -> petr4_nonempty_list(annotation)
-- On ACTION reduce production annotations -> petr4_nonempty_list(annotation)
-- On ABSTRACT reduce production annotations -> petr4_nonempty_list(annotation)

State 325:
nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) . annotation [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation) . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT APPLY ACTIONS ACTION ABSTRACT ]
-- On PRAGMA shift to state 207
-- On AT shift to state 302
-- On annotation shift to state 326
-- On VOID reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On VARBIT reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On VALUESET reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On TYPEDEF reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On TYPE reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On TUPLE reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On TABLE reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On STRUCT reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On STRING reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On STATE reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On SEMICOLON reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On PARSER reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On PACKAGE reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On OUT reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On NAME reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On L_BRACE reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On KEY reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On INT reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On INOUT reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On IN reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On HEADER_UNION reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On HEADER reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On EXTERN reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On ERROR reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On ENUM reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On ENTRIES reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On DOT reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On CONTROL reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On CONST reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On BOOL reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On BIT reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On APPLY reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On ACTIONS reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On ACTION reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)
-- On ABSTRACT reduce production petr4_nonempty_list(annotation) -> nonempty_list_aux(annotation)

State 326:
nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On VARBIT reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On VALUESET reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On TYPEDEF reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On TYPE reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On TUPLE reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On TABLE reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On STRUCT reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On STRING reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On STATE reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On SEMICOLON reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On PRAGMA reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On PARSER reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On PACKAGE reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On OUT reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On NAME reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On L_BRACE reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On KEY reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On INT reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On INOUT reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On IN reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On HEADER_UNION reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On HEADER reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On EXTERN reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On ERROR reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On ENUM reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On ENTRIES reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On DOT reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On CONTROL reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On CONST reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On BOOL reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On BIT reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On AT reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On APPLY reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On ACTIONS reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On ACTION reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation
-- On ABSTRACT reduce production nonempty_list_aux(annotation) -> nonempty_list_aux(annotation) annotation

State 327:
structField -> annotations . typeRef name SEMICOLON [ VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeRef shift to state 328
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 328:
structField -> annotations typeRef . name SEMICOLON [ VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 329

State 329:
structField -> annotations typeRef name . SEMICOLON [ VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On SEMICOLON shift to state 330

State 330:
structField -> annotations typeRef name SEMICOLON . [ VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On VARBIT reduce production structField -> annotations typeRef name SEMICOLON
-- On TUPLE reduce production structField -> annotations typeRef name SEMICOLON
-- On STRING reduce production structField -> annotations typeRef name SEMICOLON
-- On R_BRACE reduce production structField -> annotations typeRef name SEMICOLON
-- On PRAGMA reduce production structField -> annotations typeRef name SEMICOLON
-- On NAME reduce production structField -> annotations typeRef name SEMICOLON
-- On INT reduce production structField -> annotations typeRef name SEMICOLON
-- On ERROR reduce production structField -> annotations typeRef name SEMICOLON
-- On DOT reduce production structField -> annotations typeRef name SEMICOLON
-- On BOOL reduce production structField -> annotations typeRef name SEMICOLON
-- On BIT reduce production structField -> annotations typeRef name SEMICOLON
-- On AT reduce production structField -> annotations typeRef name SEMICOLON

State 331:
nonempty_list_aux(annotation) -> annotation . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE OUT NAME L_BRACE KEY INT INOUT IN HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ABSTRACT ]
-- On VOID reduce production nonempty_list_aux(annotation) -> annotation
-- On VARBIT reduce production nonempty_list_aux(annotation) -> annotation
-- On VALUESET reduce production nonempty_list_aux(annotation) -> annotation
-- On TYPEDEF reduce production nonempty_list_aux(annotation) -> annotation
-- On TYPE reduce production nonempty_list_aux(annotation) -> annotation
-- On TUPLE reduce production nonempty_list_aux(annotation) -> annotation
-- On TABLE reduce production nonempty_list_aux(annotation) -> annotation
-- On STRUCT reduce production nonempty_list_aux(annotation) -> annotation
-- On STRING reduce production nonempty_list_aux(annotation) -> annotation
-- On STATE reduce production nonempty_list_aux(annotation) -> annotation
-- On SEMICOLON reduce production nonempty_list_aux(annotation) -> annotation
-- On PRAGMA reduce production nonempty_list_aux(annotation) -> annotation
-- On PARSER reduce production nonempty_list_aux(annotation) -> annotation
-- On PACKAGE reduce production nonempty_list_aux(annotation) -> annotation
-- On OUT reduce production nonempty_list_aux(annotation) -> annotation
-- On NAME reduce production nonempty_list_aux(annotation) -> annotation
-- On L_BRACE reduce production nonempty_list_aux(annotation) -> annotation
-- On KEY reduce production nonempty_list_aux(annotation) -> annotation
-- On INT reduce production nonempty_list_aux(annotation) -> annotation
-- On INOUT reduce production nonempty_list_aux(annotation) -> annotation
-- On IN reduce production nonempty_list_aux(annotation) -> annotation
-- On HEADER_UNION reduce production nonempty_list_aux(annotation) -> annotation
-- On HEADER reduce production nonempty_list_aux(annotation) -> annotation
-- On EXTERN reduce production nonempty_list_aux(annotation) -> annotation
-- On ERROR reduce production nonempty_list_aux(annotation) -> annotation
-- On ENUM reduce production nonempty_list_aux(annotation) -> annotation
-- On ENTRIES reduce production nonempty_list_aux(annotation) -> annotation
-- On DOT reduce production nonempty_list_aux(annotation) -> annotation
-- On CONTROL reduce production nonempty_list_aux(annotation) -> annotation
-- On CONST reduce production nonempty_list_aux(annotation) -> annotation
-- On BOOL reduce production nonempty_list_aux(annotation) -> annotation
-- On BIT reduce production nonempty_list_aux(annotation) -> annotation
-- On AT reduce production nonempty_list_aux(annotation) -> annotation
-- On APPLY reduce production nonempty_list_aux(annotation) -> annotation
-- On ACTIONS reduce production nonempty_list_aux(annotation) -> annotation
-- On ACTION reduce production nonempty_list_aux(annotation) -> annotation
-- On ABSTRACT reduce production nonempty_list_aux(annotation) -> annotation

State 332:
headerUnionDeclaration -> HEADER_UNION . name L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 333

State 333:
headerUnionDeclaration -> HEADER_UNION name . L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 334

State 334:
headerUnionDeclaration -> HEADER_UNION name L_BRACE . petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On petr4_list(structField) shift to state 335
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 335:
headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 336

State 336:
headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On VARBIT reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On TYPEDEF reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On TYPE reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On TUPLE reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On STRUCT reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On STRING reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On STATE reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On SEMICOLON reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On PRAGMA reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On PARSER reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On PACKAGE reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On NAME reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On MATCH_KIND reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On KEY reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On INT reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER_UNION reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On EXTERN reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On ERROR reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On ENUM reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On ENTRIES reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On END reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On DOT reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On CONTROL reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On CONST reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On BOOL reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On BIT reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On AT reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On APPLY reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On ACTIONS reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On ACTION reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE

State 337:
headerTypeDeclaration -> HEADER . name L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 338

State 338:
headerTypeDeclaration -> HEADER name . L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 339

State 339:
headerTypeDeclaration -> HEADER name L_BRACE . petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On petr4_list(structField) shift to state 340
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 340:
headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 341

State 341:
headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On VARBIT reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On TYPEDEF reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On TYPE reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On TUPLE reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On STRUCT reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On STRING reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On STATE reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On SEMICOLON reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On PRAGMA reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On PARSER reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On PACKAGE reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On NAME reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On MATCH_KIND reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On KEY reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On INT reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER_UNION reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On EXTERN reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On ERROR reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On ENUM reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On ENTRIES reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On END reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On DOT reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On CONTROL reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On CONST reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On BOOL reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On BIT reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On AT reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On APPLY reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On ACTIONS reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On ACTION reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE

State 342:
enumDeclaration -> ENUM . name L_BRACE identifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
enumDeclaration -> ENUM . BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On BIT shift to state 343
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 359

State 343:
enumDeclaration -> ENUM BIT . L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_ANGLE shift to state 344

State 344:
enumDeclaration -> ENUM BIT L_ANGLE . INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On INTEGER shift to state 345

State 345:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER . R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_ANGLE shift to state 346

State 346:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE . name L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 347

State 347:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name . L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 348

State 348:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE . specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On specifiedIdentifierList shift to state 349
-- On specifiedIdentifier shift to state 351
-- On separated_nonempty_list_aux(COMMA,__anonymous_1) shift to state 352
-- On petr4_separated_nonempty_list(COMMA,__anonymous_1) shift to state 358
-- On nonTypeName shift to state 35
-- On name shift to state 355

State 349:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 350

State 350:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On VARBIT reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On TYPEDEF reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On TYPE reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On TUPLE reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On STRUCT reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On STRING reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On STATE reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On SEMICOLON reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On PRAGMA reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On PARSER reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On PACKAGE reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On NAME reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On MATCH_KIND reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On KEY reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On INT reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On HEADER_UNION reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On HEADER reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On EXTERN reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On ERROR reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On ENUM reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On ENTRIES reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On END reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On DOT reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On CONTROL reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On CONST reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On BOOL reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On BIT reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On AT reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On APPLY reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On ACTIONS reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On ACTION reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE

State 351:
separated_nonempty_list_aux(COMMA,__anonymous_1) -> specifiedIdentifier . [ R_BRACE COMMA ]
-- On R_BRACE reduce production separated_nonempty_list_aux(COMMA,__anonymous_1) -> specifiedIdentifier
-- On COMMA reduce production separated_nonempty_list_aux(COMMA,__anonymous_1) -> specifiedIdentifier

State 352:
petr4_separated_nonempty_list(COMMA,__anonymous_1) -> separated_nonempty_list_aux(COMMA,__anonymous_1) . [ R_BRACE ]
separated_nonempty_list_aux(COMMA,__anonymous_1) -> separated_nonempty_list_aux(COMMA,__anonymous_1) . COMMA specifiedIdentifier [ R_BRACE COMMA ]
-- On COMMA shift to state 353
-- On R_BRACE reduce production petr4_separated_nonempty_list(COMMA,__anonymous_1) -> separated_nonempty_list_aux(COMMA,__anonymous_1)

State 353:
separated_nonempty_list_aux(COMMA,__anonymous_1) -> separated_nonempty_list_aux(COMMA,__anonymous_1) COMMA . specifiedIdentifier [ R_BRACE COMMA ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On specifiedIdentifier shift to state 354
-- On nonTypeName shift to state 35
-- On name shift to state 355

State 354:
separated_nonempty_list_aux(COMMA,__anonymous_1) -> separated_nonempty_list_aux(COMMA,__anonymous_1) COMMA specifiedIdentifier . [ R_BRACE COMMA ]
-- On R_BRACE reduce production separated_nonempty_list_aux(COMMA,__anonymous_1) -> separated_nonempty_list_aux(COMMA,__anonymous_1) COMMA specifiedIdentifier
-- On COMMA reduce production separated_nonempty_list_aux(COMMA,__anonymous_1) -> separated_nonempty_list_aux(COMMA,__anonymous_1) COMMA specifiedIdentifier

State 355:
specifiedIdentifier -> name . ASSIGN expression [ R_BRACE COMMA ]
-- On ASSIGN shift to state 356

State 356:
specifiedIdentifier -> name ASSIGN . expression [ R_BRACE COMMA ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 357
-- On dotPrefix shift to state 91

State 357:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_BRACE R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
specifiedIdentifier -> name ASSIGN expression . [ R_BRACE COMMA ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On R_BRACE reduce production specifiedIdentifier -> name ASSIGN expression
-- On COMMA reduce production specifiedIdentifier -> name ASSIGN expression

State 358:
specifiedIdentifierList -> petr4_separated_nonempty_list(COMMA,__anonymous_1) . [ R_BRACE ]
-- On R_BRACE reduce production specifiedIdentifierList -> petr4_separated_nonempty_list(COMMA,__anonymous_1)

State 359:
enumDeclaration -> ENUM name . L_BRACE identifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 360

State 360:
enumDeclaration -> ENUM name L_BRACE . identifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On separated_nonempty_list_aux(COMMA,__anonymous_0) shift to state 361
-- On petr4_separated_nonempty_list(COMMA,__anonymous_0) shift to state 364
-- On nonTypeName shift to state 35
-- On name shift to state 365
-- On identifierList shift to state 366

State 361:
petr4_separated_nonempty_list(COMMA,__anonymous_0) -> separated_nonempty_list_aux(COMMA,__anonymous_0) . [ R_BRACE ]
separated_nonempty_list_aux(COMMA,__anonymous_0) -> separated_nonempty_list_aux(COMMA,__anonymous_0) . COMMA name [ R_BRACE COMMA ]
-- On COMMA shift to state 362
-- On R_BRACE reduce production petr4_separated_nonempty_list(COMMA,__anonymous_0) -> separated_nonempty_list_aux(COMMA,__anonymous_0)

State 362:
separated_nonempty_list_aux(COMMA,__anonymous_0) -> separated_nonempty_list_aux(COMMA,__anonymous_0) COMMA . name [ R_BRACE COMMA ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 363

State 363:
separated_nonempty_list_aux(COMMA,__anonymous_0) -> separated_nonempty_list_aux(COMMA,__anonymous_0) COMMA name . [ R_BRACE COMMA ]
-- On R_BRACE reduce production separated_nonempty_list_aux(COMMA,__anonymous_0) -> separated_nonempty_list_aux(COMMA,__anonymous_0) COMMA name
-- On COMMA reduce production separated_nonempty_list_aux(COMMA,__anonymous_0) -> separated_nonempty_list_aux(COMMA,__anonymous_0) COMMA name

State 364:
identifierList -> petr4_separated_nonempty_list(COMMA,__anonymous_0) . [ R_BRACE ]
-- On R_BRACE reduce production identifierList -> petr4_separated_nonempty_list(COMMA,__anonymous_0)

State 365:
separated_nonempty_list_aux(COMMA,__anonymous_0) -> name . [ R_BRACE COMMA ]
-- On R_BRACE reduce production separated_nonempty_list_aux(COMMA,__anonymous_0) -> name
-- On COMMA reduce production separated_nonempty_list_aux(COMMA,__anonymous_0) -> name

State 366:
enumDeclaration -> ENUM name L_BRACE identifierList . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 367

State 367:
enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On VARBIT reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On TYPEDEF reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On TYPE reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On TUPLE reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On STRUCT reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On STRING reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On STATE reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On SEMICOLON reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On PRAGMA reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On PARSER reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On PACKAGE reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On NAME reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On MATCH_KIND reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On KEY reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On INT reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On HEADER_UNION reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On HEADER reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On EXTERN reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On ERROR reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On ENUM reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On ENTRIES reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On END reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On DOT reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On CONTROL reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On CONST reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On BOOL reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On BIT reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On AT reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On APPLY reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On ACTIONS reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE
-- On ACTION reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE

State 368:
typedefDeclaration -> TYPEDEF typeRef . name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 369

State 369:
typedefDeclaration -> TYPEDEF typeRef name . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 370

State 370:
typedefDeclaration -> TYPEDEF typeRef name SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On VARBIT reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On TYPEDEF reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On TYPE reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On TUPLE reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On STRUCT reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On STRING reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On SEMICOLON reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On PRAGMA reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On PARSER reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On PACKAGE reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On NAME reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On MATCH_KIND reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On INT reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On HEADER_UNION reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On HEADER reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On EXTERN reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On ERROR reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On ENUM reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On END reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On DOT reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On CONTROL reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On CONST reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On BOOL reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On BIT reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On AT reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON
-- On ACTION reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON

State 371:
derivedTypeDeclaration -> structTypeDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On VARBIT reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On TYPEDEF reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On TYPE reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On TUPLE reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On STRUCT reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On STRING reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On STATE reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On SEMICOLON reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On PRAGMA reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On PARSER reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On PACKAGE reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On NAME reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On MATCH_KIND reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On KEY reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On INT reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On HEADER_UNION reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On HEADER reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On EXTERN reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On ERROR reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On ENUM reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On ENTRIES reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On END reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On DOT reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On CONTROL reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On CONST reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On BOOL reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On BIT reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On AT reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On APPLY reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On ACTIONS reduce production derivedTypeDeclaration -> structTypeDeclaration
-- On ACTION reduce production derivedTypeDeclaration -> structTypeDeclaration

State 372:
derivedTypeDeclaration -> headerUnionDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On VARBIT reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On TYPEDEF reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On TYPE reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On TUPLE reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On STRUCT reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On STRING reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On STATE reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On SEMICOLON reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On PRAGMA reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On PARSER reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On PACKAGE reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On NAME reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On MATCH_KIND reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On KEY reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On INT reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On HEADER_UNION reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On HEADER reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On EXTERN reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On ERROR reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On ENUM reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On ENTRIES reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On END reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On DOT reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On CONTROL reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On CONST reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On BOOL reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On BIT reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On AT reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On APPLY reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On ACTIONS reduce production derivedTypeDeclaration -> headerUnionDeclaration
-- On ACTION reduce production derivedTypeDeclaration -> headerUnionDeclaration

State 373:
derivedTypeDeclaration -> headerTypeDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On VARBIT reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On TYPEDEF reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On TYPE reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On TUPLE reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On STRUCT reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On STRING reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On STATE reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On SEMICOLON reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On PRAGMA reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On PARSER reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On PACKAGE reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On NAME reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On MATCH_KIND reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On KEY reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On INT reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On HEADER_UNION reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On HEADER reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On EXTERN reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On ERROR reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On ENUM reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On ENTRIES reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On END reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On DOT reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On CONTROL reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On CONST reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On BOOL reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On BIT reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On AT reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On APPLY reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On ACTIONS reduce production derivedTypeDeclaration -> headerTypeDeclaration
-- On ACTION reduce production derivedTypeDeclaration -> headerTypeDeclaration

State 374:
derivedTypeDeclaration -> enumDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production derivedTypeDeclaration -> enumDeclaration
-- On VARBIT reduce production derivedTypeDeclaration -> enumDeclaration
-- On TYPEDEF reduce production derivedTypeDeclaration -> enumDeclaration
-- On TYPE reduce production derivedTypeDeclaration -> enumDeclaration
-- On TUPLE reduce production derivedTypeDeclaration -> enumDeclaration
-- On STRUCT reduce production derivedTypeDeclaration -> enumDeclaration
-- On STRING reduce production derivedTypeDeclaration -> enumDeclaration
-- On STATE reduce production derivedTypeDeclaration -> enumDeclaration
-- On SEMICOLON reduce production derivedTypeDeclaration -> enumDeclaration
-- On PRAGMA reduce production derivedTypeDeclaration -> enumDeclaration
-- On PARSER reduce production derivedTypeDeclaration -> enumDeclaration
-- On PACKAGE reduce production derivedTypeDeclaration -> enumDeclaration
-- On NAME reduce production derivedTypeDeclaration -> enumDeclaration
-- On MATCH_KIND reduce production derivedTypeDeclaration -> enumDeclaration
-- On KEY reduce production derivedTypeDeclaration -> enumDeclaration
-- On INT reduce production derivedTypeDeclaration -> enumDeclaration
-- On HEADER_UNION reduce production derivedTypeDeclaration -> enumDeclaration
-- On HEADER reduce production derivedTypeDeclaration -> enumDeclaration
-- On EXTERN reduce production derivedTypeDeclaration -> enumDeclaration
-- On ERROR reduce production derivedTypeDeclaration -> enumDeclaration
-- On ENUM reduce production derivedTypeDeclaration -> enumDeclaration
-- On ENTRIES reduce production derivedTypeDeclaration -> enumDeclaration
-- On END reduce production derivedTypeDeclaration -> enumDeclaration
-- On DOT reduce production derivedTypeDeclaration -> enumDeclaration
-- On CONTROL reduce production derivedTypeDeclaration -> enumDeclaration
-- On CONST reduce production derivedTypeDeclaration -> enumDeclaration
-- On BOOL reduce production derivedTypeDeclaration -> enumDeclaration
-- On BIT reduce production derivedTypeDeclaration -> enumDeclaration
-- On AT reduce production derivedTypeDeclaration -> enumDeclaration
-- On APPLY reduce production derivedTypeDeclaration -> enumDeclaration
-- On ACTIONS reduce production derivedTypeDeclaration -> enumDeclaration
-- On ACTION reduce production derivedTypeDeclaration -> enumDeclaration

State 375:
typedefDeclaration -> TYPEDEF derivedTypeDeclaration . name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 376

State 376:
typedefDeclaration -> TYPEDEF derivedTypeDeclaration name . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 377

State 377:
typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On VARBIT reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On TYPEDEF reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On TYPE reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On TUPLE reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On STRUCT reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On STRING reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On SEMICOLON reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On PRAGMA reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On PARSER reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On PACKAGE reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On NAME reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On MATCH_KIND reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On INT reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On HEADER_UNION reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On HEADER reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On EXTERN reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On ERROR reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On ENUM reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On END reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On DOT reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On CONTROL reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On CONST reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On BOOL reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On BIT reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On AT reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On ACTION reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON

State 378:
enumDeclaration -> annotations . ENUM name L_BRACE identifierList R_BRACE [ TYPE STATE NAME KEY ENTRIES APPLY ACTIONS ]
enumDeclaration -> annotations . ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ TYPE STATE NAME KEY ENTRIES APPLY ACTIONS ]
headerTypeDeclaration -> annotations . HEADER name L_BRACE petr4_list(structField) R_BRACE [ TYPE STATE NAME KEY ENTRIES APPLY ACTIONS ]
headerUnionDeclaration -> annotations . HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE [ TYPE STATE NAME KEY ENTRIES APPLY ACTIONS ]
structTypeDeclaration -> annotations . STRUCT name L_BRACE petr4_list(structField) R_BRACE [ TYPE STATE NAME KEY ENTRIES APPLY ACTIONS ]
-- On STRUCT shift to state 379
-- On HEADER_UNION shift to state 384
-- On HEADER shift to state 389
-- On ENUM shift to state 394

State 379:
structTypeDeclaration -> annotations STRUCT . name L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 380

State 380:
structTypeDeclaration -> annotations STRUCT name . L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 381

State 381:
structTypeDeclaration -> annotations STRUCT name L_BRACE . petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On petr4_list(structField) shift to state 382
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 382:
structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 383

State 383:
structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On VARBIT reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On TYPEDEF reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On TYPE reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On TUPLE reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On STRUCT reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On STRING reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On STATE reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On SEMICOLON reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On PRAGMA reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On PARSER reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On PACKAGE reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On NAME reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On MATCH_KIND reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On KEY reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On INT reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER_UNION reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On EXTERN reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On ERROR reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On ENUM reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On ENTRIES reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On END reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On DOT reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On CONTROL reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On CONST reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On BOOL reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On BIT reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On AT reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On APPLY reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On ACTIONS reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE
-- On ACTION reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE

State 384:
headerUnionDeclaration -> annotations HEADER_UNION . name L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 385

State 385:
headerUnionDeclaration -> annotations HEADER_UNION name . L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 386

State 386:
headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE . petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On petr4_list(structField) shift to state 387
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 387:
headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 388

State 388:
headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On VARBIT reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On TYPEDEF reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On TYPE reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On TUPLE reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On STRUCT reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On STRING reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On STATE reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On SEMICOLON reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On PRAGMA reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On PARSER reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On PACKAGE reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On NAME reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On MATCH_KIND reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On KEY reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On INT reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER_UNION reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On EXTERN reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On ERROR reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On ENUM reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On ENTRIES reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On END reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On DOT reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On CONTROL reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On CONST reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On BOOL reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On BIT reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On AT reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On APPLY reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On ACTIONS reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE
-- On ACTION reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE

State 389:
headerTypeDeclaration -> annotations HEADER . name L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 390

State 390:
headerTypeDeclaration -> annotations HEADER name . L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 391

State 391:
headerTypeDeclaration -> annotations HEADER name L_BRACE . petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On petr4_list(structField) shift to state 392
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 392:
headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 393

State 393:
headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On VARBIT reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On TYPEDEF reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On TYPE reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On TUPLE reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On STRUCT reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On STRING reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On STATE reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On SEMICOLON reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On PRAGMA reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On PARSER reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On PACKAGE reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On NAME reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On MATCH_KIND reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On KEY reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On INT reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER_UNION reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On HEADER reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On EXTERN reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On ERROR reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On ENUM reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On ENTRIES reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On END reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On DOT reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On CONTROL reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On CONST reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On BOOL reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On BIT reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On AT reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On APPLY reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On ACTIONS reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE
-- On ACTION reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE

State 394:
enumDeclaration -> annotations ENUM . name L_BRACE identifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
enumDeclaration -> annotations ENUM . BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On BIT shift to state 395
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 403

State 395:
enumDeclaration -> annotations ENUM BIT . L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_ANGLE shift to state 396

State 396:
enumDeclaration -> annotations ENUM BIT L_ANGLE . INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On INTEGER shift to state 397

State 397:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER . R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_ANGLE shift to state 398

State 398:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE . name L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 399

State 399:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name . L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 400

State 400:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE . specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On specifiedIdentifierList shift to state 401
-- On specifiedIdentifier shift to state 351
-- On separated_nonempty_list_aux(COMMA,__anonymous_1) shift to state 352
-- On petr4_separated_nonempty_list(COMMA,__anonymous_1) shift to state 358
-- On nonTypeName shift to state 35
-- On name shift to state 355

State 401:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 402

State 402:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On VARBIT reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On TYPEDEF reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On TYPE reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On TUPLE reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On STRUCT reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On STRING reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On STATE reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On SEMICOLON reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On PRAGMA reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On PARSER reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On PACKAGE reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On NAME reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On MATCH_KIND reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On KEY reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On INT reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On HEADER_UNION reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On HEADER reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On EXTERN reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On ERROR reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On ENUM reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On ENTRIES reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On END reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On DOT reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On CONTROL reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On CONST reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On BOOL reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On BIT reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On AT reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On APPLY reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On ACTIONS reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE
-- On ACTION reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE

State 403:
enumDeclaration -> annotations ENUM name . L_BRACE identifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 404

State 404:
enumDeclaration -> annotations ENUM name L_BRACE . identifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On separated_nonempty_list_aux(COMMA,__anonymous_0) shift to state 361
-- On petr4_separated_nonempty_list(COMMA,__anonymous_0) shift to state 364
-- On nonTypeName shift to state 35
-- On name shift to state 365
-- On identifierList shift to state 405

State 405:
enumDeclaration -> annotations ENUM name L_BRACE identifierList . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 406

State 406:
enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING STATE SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND KEY INT HEADER_UNION HEADER EXTERN ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On VARBIT reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On TYPEDEF reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On TYPE reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On TUPLE reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On STRUCT reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On STRING reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On STATE reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On SEMICOLON reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On PRAGMA reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On PARSER reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On PACKAGE reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On NAME reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On MATCH_KIND reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On KEY reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On INT reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On HEADER_UNION reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On HEADER reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On EXTERN reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On ERROR reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On ENUM reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On ENTRIES reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On END reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On DOT reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On CONTROL reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On CONST reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On BOOL reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On BIT reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On AT reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On APPLY reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On ACTIONS reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE
-- On ACTION reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE

State 407:
typedefDeclaration -> TYPE . typeRef name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
typedefDeclaration -> TYPE . derivedTypeDeclaration name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRUCT shift to state 201
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On HEADER_UNION shift to state 332
-- On HEADER shift to state 337
-- On ERROR shift to state 46
-- On ENUM shift to state 342
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On typeRef shift to state 408
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On structTypeDeclaration shift to state 371
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On headerUnionDeclaration shift to state 372
-- On headerTypeDeclaration shift to state 373
-- On headerStackType shift to state 142
-- On enumDeclaration shift to state 374
-- On dotPrefix shift to state 143
-- On derivedTypeDeclaration shift to state 411
-- On baseType shift to state 146
-- On annotations shift to state 378
-- On annotation shift to state 331

State 408:
typedefDeclaration -> TYPE typeRef . name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 409

State 409:
typedefDeclaration -> TYPE typeRef name . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 410

State 410:
typedefDeclaration -> TYPE typeRef name SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On VARBIT reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On TYPEDEF reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On TYPE reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On TUPLE reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On STRUCT reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On STRING reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On SEMICOLON reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On PRAGMA reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On PARSER reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On PACKAGE reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On NAME reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On MATCH_KIND reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On INT reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On HEADER_UNION reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On HEADER reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On EXTERN reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On ERROR reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On ENUM reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On END reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On DOT reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On CONTROL reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On CONST reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On BOOL reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On BIT reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On AT reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON
-- On ACTION reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON

State 411:
typedefDeclaration -> TYPE derivedTypeDeclaration . name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 412

State 412:
typedefDeclaration -> TYPE derivedTypeDeclaration name . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 413

State 413:
typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On VARBIT reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On TYPEDEF reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On TYPE reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On TUPLE reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On STRUCT reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On STRING reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On SEMICOLON reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On PRAGMA reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On PARSER reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On PACKAGE reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On NAME reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On MATCH_KIND reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On INT reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On HEADER_UNION reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On HEADER reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On EXTERN reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On ERROR reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On ENUM reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On END reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On DOT reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On CONTROL reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On CONST reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On BOOL reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On BIT reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On AT reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON
-- On ACTION reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON

State 414:
topDeclarationList -> SEMICOLON . topDeclarationList [ END ]
-- On VOID shift to state 1
-- On VARBIT shift to state 2
-- On TYPEDEF shift to state 200
-- On TYPE shift to state 407
-- On TUPLE shift to state 16
-- On STRUCT shift to state 201
-- On STRING shift to state 18
-- On SEMICOLON shift to state 414
-- On PRAGMA shift to state 207
-- On PARSER shift to state 415
-- On PACKAGE shift to state 449
-- On NAME shift to state 11
-- On MATCH_KIND shift to state 455
-- On INT shift to state 20
-- On HEADER_UNION shift to state 332
-- On HEADER shift to state 337
-- On EXTERN shift to state 459
-- On ERROR shift to state 510
-- On ENUM shift to state 342
-- On DOT shift to state 38
-- On CONTROL shift to state 514
-- On CONST shift to state 520
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On ACTION shift to state 527
-- On varName shift to state 479
-- On typedefDeclaration shift to state 671
-- On typeRef shift to state 630
-- On typeOrVoid shift to state 462
-- On typeName shift to state 138
-- On typeDeclaration shift to state 672
-- On tupleType shift to state 128
-- On topDeclarationList shift to state 673
-- On topDeclaration shift to state 674
-- On structTypeDeclaration shift to state 371
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parserTypeDeclaration shift to state 676
-- On parserDeclaration shift to state 810
-- On packageTypeDeclaration shift to state 811
-- On nonempty_list_aux(annotation) shift to state 325
-- On matchKindDeclaration shift to state 814
-- On instantiation shift to state 815
-- On headerUnionDeclaration shift to state 372
-- On headerTypeDeclaration shift to state 373
-- On headerStackType shift to state 142
-- On functionPrototype shift to state 633
-- On functionDeclaration shift to state 816
-- On externDeclaration shift to state 817
-- On errorDeclaration shift to state 818
-- On enumDeclaration shift to state 374
-- On dotPrefix shift to state 143
-- On derivedTypeDeclaration shift to state 819
-- On controlTypeDeclaration shift to state 820
-- On controlDeclaration shift to state 930
-- On constantDeclaration shift to state 931
-- On baseType shift to state 146
-- On annotations shift to state 932
-- On annotation shift to state 331
-- On actionDeclaration shift to state 975
-- On END reduce production topDeclarationList ->

State 415:
parserTypeDeclaration -> PARSER . push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On push_name shift to state 416
-- On nonTypeName shift to state 35
-- On name shift to state 448

State 416:
parserTypeDeclaration -> PARSER push_name . optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On L_ANGLE shift to state 417
-- On optTypeParameters shift to state 425
-- On L_PAREN reduce production optTypeParameters ->

State 417:
optTypeParameters -> L_ANGLE . petr4_separated_list(COMMA,typeParameter) R_ANGLE [ L_PAREN L_BRACE ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeParameter shift to state 418
-- On tableKwName shift to state 34
-- On separated_list_aux(COMMA,typeParameter) shift to state 419
-- On petr4_separated_list(COMMA,typeParameter) shift to state 423
-- On nonTypeName shift to state 35
-- On name shift to state 422
-- On R_ANGLE reduce production separated_list_aux(COMMA,typeParameter) ->
-- On COMMA reduce production separated_list_aux(COMMA,typeParameter) ->

State 418:
separated_list_aux(COMMA,typeParameter) -> typeParameter . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production separated_list_aux(COMMA,typeParameter) -> typeParameter
-- On COMMA reduce production separated_list_aux(COMMA,typeParameter) -> typeParameter

State 419:
petr4_separated_list(COMMA,typeParameter) -> separated_list_aux(COMMA,typeParameter) . [ R_ANGLE ]
separated_list_aux(COMMA,typeParameter) -> separated_list_aux(COMMA,typeParameter) . COMMA typeParameter [ R_ANGLE COMMA ]
-- On COMMA shift to state 420
-- On R_ANGLE reduce production petr4_separated_list(COMMA,typeParameter) -> separated_list_aux(COMMA,typeParameter)

State 420:
separated_list_aux(COMMA,typeParameter) -> separated_list_aux(COMMA,typeParameter) COMMA . typeParameter [ R_ANGLE COMMA ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeParameter shift to state 421
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 422

State 421:
separated_list_aux(COMMA,typeParameter) -> separated_list_aux(COMMA,typeParameter) COMMA typeParameter . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production separated_list_aux(COMMA,typeParameter) -> separated_list_aux(COMMA,typeParameter) COMMA typeParameter
-- On COMMA reduce production separated_list_aux(COMMA,typeParameter) -> separated_list_aux(COMMA,typeParameter) COMMA typeParameter

State 422:
typeParameter -> name . [ R_ANGLE COMMA ]
-- On R_ANGLE reduce production typeParameter -> name
-- On COMMA reduce production typeParameter -> name

State 423:
optTypeParameters -> L_ANGLE petr4_separated_list(COMMA,typeParameter) . R_ANGLE [ L_PAREN L_BRACE ]
-- On R_ANGLE shift to state 424

State 424:
optTypeParameters -> L_ANGLE petr4_separated_list(COMMA,typeParameter) R_ANGLE . [ L_PAREN L_BRACE ]
-- On L_PAREN reduce production optTypeParameters -> L_ANGLE petr4_separated_list(COMMA,typeParameter) R_ANGLE
-- On L_BRACE reduce production optTypeParameters -> L_ANGLE petr4_separated_list(COMMA,typeParameter) R_ANGLE

State 425:
parserTypeDeclaration -> PARSER push_name optTypeParameters . L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On L_PAREN shift to state 426

State 426:
parserTypeDeclaration -> PARSER push_name optTypeParameters L_PAREN . parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 445
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 427:
direction -> OUT . [ VARBIT TUPLE STRING NAME INT ERROR DOT BOOL BIT ]
-- On VARBIT reduce production direction -> OUT
-- On TUPLE reduce production direction -> OUT
-- On STRING reduce production direction -> OUT
-- On NAME reduce production direction -> OUT
-- On INT reduce production direction -> OUT
-- On ERROR reduce production direction -> OUT
-- On DOT reduce production direction -> OUT
-- On BOOL reduce production direction -> OUT
-- On BIT reduce production direction -> OUT

State 428:
direction -> INOUT . [ VARBIT TUPLE STRING NAME INT ERROR DOT BOOL BIT ]
-- On VARBIT reduce production direction -> INOUT
-- On TUPLE reduce production direction -> INOUT
-- On STRING reduce production direction -> INOUT
-- On NAME reduce production direction -> INOUT
-- On INT reduce production direction -> INOUT
-- On ERROR reduce production direction -> INOUT
-- On DOT reduce production direction -> INOUT
-- On BOOL reduce production direction -> INOUT
-- On BIT reduce production direction -> INOUT

State 429:
direction -> IN . [ VARBIT TUPLE STRING NAME INT ERROR DOT BOOL BIT ]
-- On VARBIT reduce production direction -> IN
-- On TUPLE reduce production direction -> IN
-- On STRING reduce production direction -> IN
-- On NAME reduce production direction -> IN
-- On INT reduce production direction -> IN
-- On ERROR reduce production direction -> IN
-- On DOT reduce production direction -> IN
-- On BOOL reduce production direction -> IN
-- On BIT reduce production direction -> IN

State 430:
petr4_separated_list(COMMA,parameter) -> separated_list_aux(COMMA,parameter) . [ R_PAREN ]
separated_list_aux(COMMA,parameter) -> separated_list_aux(COMMA,parameter) . COMMA parameter [ R_PAREN COMMA ]
-- On COMMA shift to state 431
-- On R_PAREN reduce production petr4_separated_list(COMMA,parameter) -> separated_list_aux(COMMA,parameter)

State 431:
separated_list_aux(COMMA,parameter) -> separated_list_aux(COMMA,parameter) COMMA . parameter [ R_PAREN COMMA ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameter shift to state 432
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 432:
separated_list_aux(COMMA,parameter) -> separated_list_aux(COMMA,parameter) COMMA parameter . [ R_PAREN COMMA ]
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) -> separated_list_aux(COMMA,parameter) COMMA parameter
-- On COMMA reduce production separated_list_aux(COMMA,parameter) -> separated_list_aux(COMMA,parameter) COMMA parameter

State 433:
parameter -> direction . typeRef name [ R_PAREN COMMA ]
parameter -> direction . typeRef name ASSIGN expression [ R_PAREN COMMA ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeRef shift to state 434
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 434:
parameter -> direction typeRef . name [ R_PAREN COMMA ]
parameter -> direction typeRef . name ASSIGN expression [ R_PAREN COMMA ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 435

State 435:
parameter -> direction typeRef name . [ R_PAREN COMMA ]
parameter -> direction typeRef name . ASSIGN expression [ R_PAREN COMMA ]
-- On ASSIGN shift to state 436
-- On R_PAREN reduce production parameter -> direction typeRef name
-- On COMMA reduce production parameter -> direction typeRef name

State 436:
parameter -> direction typeRef name ASSIGN . expression [ R_PAREN COMMA ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 437
-- On dotPrefix shift to state 91

State 437:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
parameter -> direction typeRef name ASSIGN expression . [ R_PAREN COMMA ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On R_PAREN reduce production parameter -> direction typeRef name ASSIGN expression
-- On COMMA reduce production parameter -> direction typeRef name ASSIGN expression

State 438:
parameter -> annotations . direction typeRef name [ R_PAREN COMMA ]
parameter -> annotations . direction typeRef name ASSIGN expression [ R_PAREN COMMA ]
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On direction shift to state 439
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 439:
parameter -> annotations direction . typeRef name [ R_PAREN COMMA ]
parameter -> annotations direction . typeRef name ASSIGN expression [ R_PAREN COMMA ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeRef shift to state 440
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 440:
parameter -> annotations direction typeRef . name [ R_PAREN COMMA ]
parameter -> annotations direction typeRef . name ASSIGN expression [ R_PAREN COMMA ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 441

State 441:
parameter -> annotations direction typeRef name . [ R_PAREN COMMA ]
parameter -> annotations direction typeRef name . ASSIGN expression [ R_PAREN COMMA ]
-- On ASSIGN shift to state 442
-- On R_PAREN reduce production parameter -> annotations direction typeRef name
-- On COMMA reduce production parameter -> annotations direction typeRef name

State 442:
parameter -> annotations direction typeRef name ASSIGN . expression [ R_PAREN COMMA ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 443
-- On dotPrefix shift to state 91

State 443:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
parameter -> annotations direction typeRef name ASSIGN expression . [ R_PAREN COMMA ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On R_PAREN reduce production parameter -> annotations direction typeRef name ASSIGN expression
-- On COMMA reduce production parameter -> annotations direction typeRef name ASSIGN expression

State 444:
parameterList -> petr4_separated_list(COMMA,parameter) . [ R_PAREN ]
-- On R_PAREN reduce production parameterList -> petr4_separated_list(COMMA,parameter)

State 445:
parserTypeDeclaration -> PARSER push_name optTypeParameters L_PAREN parameterList . R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On R_PAREN shift to state 446

State 446:
parserTypeDeclaration -> PARSER push_name optTypeParameters L_PAREN parameterList R_PAREN . [ SEMICOLON L_PAREN L_BRACE ]
-- On SEMICOLON reduce production parserTypeDeclaration -> PARSER push_name optTypeParameters L_PAREN parameterList R_PAREN
-- On L_PAREN reduce production parserTypeDeclaration -> PARSER push_name optTypeParameters L_PAREN parameterList R_PAREN
-- On L_BRACE reduce production parserTypeDeclaration -> PARSER push_name optTypeParameters L_PAREN parameterList R_PAREN

State 447:
separated_list_aux(COMMA,parameter) -> parameter . [ R_PAREN COMMA ]
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) -> parameter
-- On COMMA reduce production separated_list_aux(COMMA,parameter) -> parameter

State 448:
push_name -> name . [ L_PAREN L_BRACE L_ANGLE ]
-- On L_PAREN reduce production push_name -> name
-- On L_BRACE reduce production push_name -> name
-- On L_ANGLE reduce production push_name -> name

State 449:
packageTypeDeclaration -> PACKAGE . push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On push_name shift to state 450
-- On nonTypeName shift to state 35
-- On name shift to state 448

State 450:
packageTypeDeclaration -> PACKAGE push_name . optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON ]
-- On L_ANGLE shift to state 417
-- On optTypeParameters shift to state 451
-- On L_PAREN reduce production optTypeParameters ->

State 451:
packageTypeDeclaration -> PACKAGE push_name optTypeParameters . L_PAREN parameterList R_PAREN [ SEMICOLON ]
-- On L_PAREN shift to state 452

State 452:
packageTypeDeclaration -> PACKAGE push_name optTypeParameters L_PAREN . parameterList R_PAREN [ SEMICOLON ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 453
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 453:
packageTypeDeclaration -> PACKAGE push_name optTypeParameters L_PAREN parameterList . R_PAREN [ SEMICOLON ]
-- On R_PAREN shift to state 454

State 454:
packageTypeDeclaration -> PACKAGE push_name optTypeParameters L_PAREN parameterList R_PAREN . [ SEMICOLON ]
-- On SEMICOLON reduce production packageTypeDeclaration -> PACKAGE push_name optTypeParameters L_PAREN parameterList R_PAREN

State 455:
matchKindDeclaration -> MATCH_KIND . L_BRACE identifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On L_BRACE shift to state 456

State 456:
matchKindDeclaration -> MATCH_KIND L_BRACE . identifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On separated_nonempty_list_aux(COMMA,__anonymous_0) shift to state 361
-- On petr4_separated_nonempty_list(COMMA,__anonymous_0) shift to state 364
-- On nonTypeName shift to state 35
-- On name shift to state 365
-- On identifierList shift to state 457

State 457:
matchKindDeclaration -> MATCH_KIND L_BRACE identifierList . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On R_BRACE shift to state 458

State 458:
matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On VARBIT reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On TYPEDEF reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On TYPE reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On TUPLE reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On STRUCT reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On STRING reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On SEMICOLON reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On PRAGMA reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On PARSER reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On PACKAGE reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On NAME reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On MATCH_KIND reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On INT reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On HEADER_UNION reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On HEADER reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On EXTERN reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On ERROR reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On ENUM reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On END reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On DOT reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On CONTROL reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On CONST reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On BOOL reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On BIT reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On AT reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE
-- On ACTION reduce production matchKindDeclaration -> MATCH_KIND L_BRACE identifierList R_BRACE

State 459:
externDeclaration -> EXTERN . push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
externDeclaration -> EXTERN . functionPrototype pop_scope SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID shift to state 1
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On NAME shift to state 11
-- On KEY shift to state 19
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 460
-- On typeRef shift to state 461
-- On typeOrVoid shift to state 462
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 140
-- On push_externName shift to state 469
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 505
-- On headerStackType shift to state 142
-- On functionPrototype shift to state 506
-- On externName shift to state 509
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 460:
nonTypeName -> varName . [ L_PAREN L_BRACE L_ANGLE ]
typeOrVoid -> varName . [ TYPE STATE NAME KEY ENTRIES APPLY ACTIONS ]
-- On TYPE reduce production typeOrVoid -> varName
-- On STATE reduce production typeOrVoid -> varName
-- On NAME reduce production typeOrVoid -> varName
-- On L_PAREN reduce production nonTypeName -> varName
-- On L_BRACE reduce production nonTypeName -> varName
-- On L_ANGLE reduce production nonTypeName -> varName
-- On KEY reduce production typeOrVoid -> varName
-- On ENTRIES reduce production typeOrVoid -> varName
-- On APPLY reduce production typeOrVoid -> varName
-- On ACTIONS reduce production typeOrVoid -> varName

State 461:
typeOrVoid -> typeRef . [ TYPE STATE NAME KEY ENTRIES APPLY ACTIONS ]
-- On TYPE reduce production typeOrVoid -> typeRef
-- On STATE reduce production typeOrVoid -> typeRef
-- On NAME reduce production typeOrVoid -> typeRef
-- On KEY reduce production typeOrVoid -> typeRef
-- On ENTRIES reduce production typeOrVoid -> typeRef
-- On APPLY reduce production typeOrVoid -> typeRef
-- On ACTIONS reduce production typeOrVoid -> typeRef

State 462:
functionPrototype -> typeOrVoid . name push_scope optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON PRAGMA L_BRACE AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 463

State 463:
functionPrototype -> typeOrVoid name . push_scope optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON PRAGMA L_BRACE AT ]
-- On push_scope shift to state 464
-- On L_PAREN reduce production push_scope ->
-- On L_ANGLE reduce production push_scope ->

State 464:
functionPrototype -> typeOrVoid name push_scope . optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON PRAGMA L_BRACE AT ]
-- On L_ANGLE shift to state 417
-- On optTypeParameters shift to state 465
-- On L_PAREN reduce production optTypeParameters ->

State 465:
functionPrototype -> typeOrVoid name push_scope optTypeParameters . L_PAREN parameterList R_PAREN [ SEMICOLON PRAGMA L_BRACE AT ]
-- On L_PAREN shift to state 466

State 466:
functionPrototype -> typeOrVoid name push_scope optTypeParameters L_PAREN . parameterList R_PAREN [ SEMICOLON PRAGMA L_BRACE AT ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 467
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 467:
functionPrototype -> typeOrVoid name push_scope optTypeParameters L_PAREN parameterList . R_PAREN [ SEMICOLON PRAGMA L_BRACE AT ]
-- On R_PAREN shift to state 468

State 468:
functionPrototype -> typeOrVoid name push_scope optTypeParameters L_PAREN parameterList R_PAREN . [ SEMICOLON PRAGMA L_BRACE AT ]
-- On SEMICOLON reduce production functionPrototype -> typeOrVoid name push_scope optTypeParameters L_PAREN parameterList R_PAREN
-- On PRAGMA reduce production functionPrototype -> typeOrVoid name push_scope optTypeParameters L_PAREN parameterList R_PAREN
-- On L_BRACE reduce production functionPrototype -> typeOrVoid name push_scope optTypeParameters L_PAREN parameterList R_PAREN
-- On AT reduce production functionPrototype -> typeOrVoid name push_scope optTypeParameters L_PAREN parameterList R_PAREN

State 469:
externDeclaration -> EXTERN push_externName . optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On L_ANGLE shift to state 417
-- On optTypeParameters shift to state 470
-- On L_BRACE reduce production optTypeParameters ->

State 470:
externDeclaration -> EXTERN push_externName optTypeParameters . L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On L_BRACE shift to state 471

State 471:
externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE . petr4_list(methodPrototype) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On petr4_list(methodPrototype) shift to state 472
-- On list_aux(methodPrototype) shift to state 475
-- On VOID reduce production list_aux(methodPrototype) ->
-- On VARBIT reduce production list_aux(methodPrototype) ->
-- On TYPE reduce production list_aux(methodPrototype) ->
-- On TUPLE reduce production list_aux(methodPrototype) ->
-- On STRING reduce production list_aux(methodPrototype) ->
-- On STATE reduce production list_aux(methodPrototype) ->
-- On R_BRACE reduce production list_aux(methodPrototype) ->
-- On PRAGMA reduce production list_aux(methodPrototype) ->
-- On NAME reduce production list_aux(methodPrototype) ->
-- On KEY reduce production list_aux(methodPrototype) ->
-- On INT reduce production list_aux(methodPrototype) ->
-- On ERROR reduce production list_aux(methodPrototype) ->
-- On ENTRIES reduce production list_aux(methodPrototype) ->
-- On DOT reduce production list_aux(methodPrototype) ->
-- On BOOL reduce production list_aux(methodPrototype) ->
-- On BIT reduce production list_aux(methodPrototype) ->
-- On AT reduce production list_aux(methodPrototype) ->
-- On APPLY reduce production list_aux(methodPrototype) ->
-- On ACTIONS reduce production list_aux(methodPrototype) ->
-- On ABSTRACT reduce production list_aux(methodPrototype) ->

State 472:
externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) . R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On R_BRACE shift to state 473

State 473:
externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE . pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On pop_scope shift to state 474
-- On VOID reduce production pop_scope ->
-- On VARBIT reduce production pop_scope ->
-- On TYPEDEF reduce production pop_scope ->
-- On TYPE reduce production pop_scope ->
-- On TUPLE reduce production pop_scope ->
-- On STRUCT reduce production pop_scope ->
-- On STRING reduce production pop_scope ->
-- On SEMICOLON reduce production pop_scope ->
-- On PRAGMA reduce production pop_scope ->
-- On PARSER reduce production pop_scope ->
-- On PACKAGE reduce production pop_scope ->
-- On NAME reduce production pop_scope ->
-- On MATCH_KIND reduce production pop_scope ->
-- On INT reduce production pop_scope ->
-- On HEADER_UNION reduce production pop_scope ->
-- On HEADER reduce production pop_scope ->
-- On EXTERN reduce production pop_scope ->
-- On ERROR reduce production pop_scope ->
-- On ENUM reduce production pop_scope ->
-- On END reduce production pop_scope ->
-- On DOT reduce production pop_scope ->
-- On CONTROL reduce production pop_scope ->
-- On CONST reduce production pop_scope ->
-- On BOOL reduce production pop_scope ->
-- On BIT reduce production pop_scope ->
-- On AT reduce production pop_scope ->
-- On ACTION reduce production pop_scope ->

State 474:
externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On VARBIT reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On TYPEDEF reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On TYPE reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On TUPLE reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On STRUCT reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On STRING reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On SEMICOLON reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On PRAGMA reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On PARSER reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On PACKAGE reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On NAME reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On MATCH_KIND reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On INT reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On HEADER_UNION reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On HEADER reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On EXTERN reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On ERROR reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On ENUM reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On END reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On DOT reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On CONTROL reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On CONST reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On BOOL reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On BIT reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On AT reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On ACTION reduce production externDeclaration -> EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope

State 475:
list_aux(methodPrototype) -> list_aux(methodPrototype) . methodPrototype [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
petr4_list(methodPrototype) -> list_aux(methodPrototype) . [ R_BRACE ]
-- On VOID shift to state 1
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On PRAGMA shift to state 207
-- On NAME shift to state 476
-- On KEY shift to state 19
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On ABSTRACT shift to state 478
-- On varName shift to state 460
-- On typeRef shift to state 461
-- On typeOrVoid shift to state 462
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On nonTypeName shift to state 35
-- On name shift to state 483
-- On methodPrototype shift to state 488
-- On headerStackType shift to state 142
-- On functionPrototype shift to state 489
-- On dotPrefix shift to state 143
-- On baseType shift to state 146
-- On annotations shift to state 492
-- On annotation shift to state 331
-- On R_BRACE reduce production petr4_list(methodPrototype) -> list_aux(methodPrototype)

State 476:
name -> NAME . TYPENAME [ L_PAREN ]
prefixedType -> NAME . TYPENAME [ TYPE STATE NAME L_BRACKET L_ANGLE KEY ENTRIES APPLY ACTIONS ]
varName -> NAME . IDENTIFIER [ TYPE STATE NAME L_PAREN KEY ENTRIES APPLY ACTIONS ]
-- On TYPENAME shift to state 477
-- On IDENTIFIER shift to state 13

State 477:
name -> NAME TYPENAME . [ L_PAREN ]
prefixedType -> NAME TYPENAME . [ TYPE STATE NAME L_BRACKET L_ANGLE KEY ENTRIES APPLY ACTIONS ]
-- On TYPE reduce production prefixedType -> NAME TYPENAME
-- On STATE reduce production prefixedType -> NAME TYPENAME
-- On NAME reduce production prefixedType -> NAME TYPENAME
-- On L_PAREN reduce production name -> NAME TYPENAME
-- On L_BRACKET reduce production prefixedType -> NAME TYPENAME
-- On L_ANGLE reduce production prefixedType -> NAME TYPENAME
-- On KEY reduce production prefixedType -> NAME TYPENAME
-- On ENTRIES reduce production prefixedType -> NAME TYPENAME
-- On APPLY reduce production prefixedType -> NAME TYPENAME
-- On ACTIONS reduce production prefixedType -> NAME TYPENAME

State 478:
methodPrototype -> ABSTRACT . functionPrototype pop_scope SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On VOID shift to state 1
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 11
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On varName shift to state 479
-- On typeRef shift to state 461
-- On typeOrVoid shift to state 462
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On functionPrototype shift to state 480
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 479:
typeOrVoid -> varName . [ TYPE STATE NAME KEY ENTRIES APPLY ACTIONS ]
-- On TYPE reduce production typeOrVoid -> varName
-- On STATE reduce production typeOrVoid -> varName
-- On NAME reduce production typeOrVoid -> varName
-- On KEY reduce production typeOrVoid -> varName
-- On ENTRIES reduce production typeOrVoid -> varName
-- On APPLY reduce production typeOrVoid -> varName
-- On ACTIONS reduce production typeOrVoid -> varName

State 480:
methodPrototype -> ABSTRACT functionPrototype . pop_scope SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On pop_scope shift to state 481
-- On SEMICOLON reduce production pop_scope ->

State 481:
methodPrototype -> ABSTRACT functionPrototype pop_scope . SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On SEMICOLON shift to state 482

State 482:
methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON . [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On VOID reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On VARBIT reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On TYPE reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On TUPLE reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On STRING reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On STATE reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On R_BRACE reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On PRAGMA reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On NAME reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On KEY reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On INT reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On ERROR reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On ENTRIES reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On DOT reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On BOOL reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On BIT reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On AT reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On APPLY reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On ACTIONS reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON
-- On ABSTRACT reduce production methodPrototype -> ABSTRACT functionPrototype pop_scope SEMICOLON

State 483:
methodPrototype -> name . L_PAREN parameterList R_PAREN SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On L_PAREN shift to state 484

State 484:
methodPrototype -> name L_PAREN . parameterList R_PAREN SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 485
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 485:
methodPrototype -> name L_PAREN parameterList . R_PAREN SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On R_PAREN shift to state 486

State 486:
methodPrototype -> name L_PAREN parameterList R_PAREN . SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On SEMICOLON shift to state 487

State 487:
methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON . [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On VOID reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On VARBIT reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On TYPE reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On TUPLE reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On STRING reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On STATE reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On R_BRACE reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On PRAGMA reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On NAME reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On KEY reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On INT reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On ERROR reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On ENTRIES reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On DOT reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On BOOL reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On BIT reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On AT reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On APPLY reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On ACTIONS reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON
-- On ABSTRACT reduce production methodPrototype -> name L_PAREN parameterList R_PAREN SEMICOLON

State 488:
list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype . [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On VOID reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On VARBIT reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On TYPE reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On TUPLE reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On STRING reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On STATE reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On R_BRACE reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On PRAGMA reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On NAME reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On KEY reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On INT reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On ERROR reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On ENTRIES reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On DOT reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On BOOL reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On BIT reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On AT reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On APPLY reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On ACTIONS reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype
-- On ABSTRACT reduce production list_aux(methodPrototype) -> list_aux(methodPrototype) methodPrototype

State 489:
methodPrototype -> functionPrototype . pop_scope SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On pop_scope shift to state 490
-- On SEMICOLON reduce production pop_scope ->

State 490:
methodPrototype -> functionPrototype pop_scope . SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On SEMICOLON shift to state 491

State 491:
methodPrototype -> functionPrototype pop_scope SEMICOLON . [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On VOID reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On VARBIT reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On TYPE reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On TUPLE reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On STRING reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On STATE reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On R_BRACE reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On PRAGMA reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On NAME reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On KEY reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On INT reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On ERROR reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On ENTRIES reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On DOT reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On BOOL reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On BIT reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On AT reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On APPLY reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On ACTIONS reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON
-- On ABSTRACT reduce production methodPrototype -> functionPrototype pop_scope SEMICOLON

State 492:
methodPrototype -> annotations . functionPrototype pop_scope SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
methodPrototype -> annotations . ABSTRACT functionPrototype pop_scope SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
methodPrototype -> annotations . name L_PAREN parameterList R_PAREN SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On VOID shift to state 1
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On NAME shift to state 476
-- On KEY shift to state 19
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On ABSTRACT shift to state 493
-- On varName shift to state 460
-- On typeRef shift to state 461
-- On typeOrVoid shift to state 462
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 35
-- On name shift to state 497
-- On headerStackType shift to state 142
-- On functionPrototype shift to state 502
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 493:
methodPrototype -> annotations ABSTRACT . functionPrototype pop_scope SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On VOID shift to state 1
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 11
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On varName shift to state 479
-- On typeRef shift to state 461
-- On typeOrVoid shift to state 462
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On functionPrototype shift to state 494
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 494:
methodPrototype -> annotations ABSTRACT functionPrototype . pop_scope SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On pop_scope shift to state 495
-- On SEMICOLON reduce production pop_scope ->

State 495:
methodPrototype -> annotations ABSTRACT functionPrototype pop_scope . SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On SEMICOLON shift to state 496

State 496:
methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON . [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On VOID reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On VARBIT reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On TYPE reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On TUPLE reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On STRING reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On STATE reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On R_BRACE reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On PRAGMA reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On NAME reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On KEY reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On INT reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On ERROR reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On ENTRIES reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On DOT reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On BOOL reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On BIT reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On AT reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On APPLY reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On ACTIONS reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON
-- On ABSTRACT reduce production methodPrototype -> annotations ABSTRACT functionPrototype pop_scope SEMICOLON

State 497:
methodPrototype -> annotations name . L_PAREN parameterList R_PAREN SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On L_PAREN shift to state 498

State 498:
methodPrototype -> annotations name L_PAREN . parameterList R_PAREN SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 499
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 499:
methodPrototype -> annotations name L_PAREN parameterList . R_PAREN SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On R_PAREN shift to state 500

State 500:
methodPrototype -> annotations name L_PAREN parameterList R_PAREN . SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On SEMICOLON shift to state 501

State 501:
methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON . [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On VOID reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On VARBIT reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On TYPE reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On TUPLE reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On STRING reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On STATE reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On R_BRACE reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On PRAGMA reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On NAME reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On KEY reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On INT reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On ERROR reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On ENTRIES reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On DOT reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On BOOL reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On BIT reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On AT reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On APPLY reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On ACTIONS reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON
-- On ABSTRACT reduce production methodPrototype -> annotations name L_PAREN parameterList R_PAREN SEMICOLON

State 502:
methodPrototype -> annotations functionPrototype . pop_scope SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On pop_scope shift to state 503
-- On SEMICOLON reduce production pop_scope ->

State 503:
methodPrototype -> annotations functionPrototype pop_scope . SEMICOLON [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On SEMICOLON shift to state 504

State 504:
methodPrototype -> annotations functionPrototype pop_scope SEMICOLON . [ VOID VARBIT TYPE TUPLE STRING STATE R_BRACE PRAGMA NAME KEY INT ERROR ENTRIES DOT BOOL BIT AT APPLY ACTIONS ABSTRACT ]
-- On VOID reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On VARBIT reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On TYPE reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On TUPLE reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On STRING reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On STATE reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On R_BRACE reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On PRAGMA reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On NAME reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On KEY reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On INT reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On ERROR reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On ENTRIES reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On DOT reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On BOOL reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On BIT reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On AT reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On APPLY reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On ACTIONS reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON
-- On ABSTRACT reduce production methodPrototype -> annotations functionPrototype pop_scope SEMICOLON

State 505:
externName -> nonTypeName . [ L_BRACE L_ANGLE ]
-- On L_BRACE reduce production externName -> nonTypeName
-- On L_ANGLE reduce production externName -> nonTypeName

State 506:
externDeclaration -> EXTERN functionPrototype . pop_scope SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On pop_scope shift to state 507
-- On SEMICOLON reduce production pop_scope ->

State 507:
externDeclaration -> EXTERN functionPrototype pop_scope . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 508

State 508:
externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On VARBIT reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On TYPEDEF reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On TYPE reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On TUPLE reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On STRUCT reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On STRING reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On SEMICOLON reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On PRAGMA reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On PARSER reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On PACKAGE reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On NAME reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On MATCH_KIND reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On INT reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On HEADER_UNION reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On HEADER reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On EXTERN reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On ERROR reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On ENUM reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On END reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On DOT reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On CONTROL reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On CONST reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On BOOL reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On BIT reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On AT reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON
-- On ACTION reduce production externDeclaration -> EXTERN functionPrototype pop_scope SEMICOLON

State 509:
push_externName -> externName . [ L_BRACE L_ANGLE ]
-- On L_BRACE reduce production push_externName -> externName
-- On L_ANGLE reduce production push_externName -> externName

State 510:
baseType -> ERROR . [ TYPE STATE NAME L_PAREN KEY ENTRIES APPLY ACTIONS ]
errorDeclaration -> ERROR . L_BRACE identifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On L_BRACE shift to state 511
-- On TYPE reduce production baseType -> ERROR
-- On STATE reduce production baseType -> ERROR
-- On NAME reduce production baseType -> ERROR
-- On L_PAREN reduce production baseType -> ERROR
-- On KEY reduce production baseType -> ERROR
-- On ENTRIES reduce production baseType -> ERROR
-- On APPLY reduce production baseType -> ERROR
-- On ACTIONS reduce production baseType -> ERROR

State 511:
errorDeclaration -> ERROR L_BRACE . identifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On separated_nonempty_list_aux(COMMA,__anonymous_0) shift to state 361
-- On petr4_separated_nonempty_list(COMMA,__anonymous_0) shift to state 364
-- On nonTypeName shift to state 35
-- On name shift to state 365
-- On identifierList shift to state 512

State 512:
errorDeclaration -> ERROR L_BRACE identifierList . R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On R_BRACE shift to state 513

State 513:
errorDeclaration -> ERROR L_BRACE identifierList R_BRACE . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On VARBIT reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On TYPEDEF reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On TYPE reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On TUPLE reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On STRUCT reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On STRING reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On SEMICOLON reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On PRAGMA reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On PARSER reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On PACKAGE reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On NAME reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On MATCH_KIND reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On INT reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On HEADER_UNION reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On HEADER reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On EXTERN reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On ERROR reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On ENUM reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On END reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On DOT reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On CONTROL reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On CONST reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On BOOL reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On BIT reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On AT reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE
-- On ACTION reduce production errorDeclaration -> ERROR L_BRACE identifierList R_BRACE

State 514:
controlTypeDeclaration -> CONTROL . push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On push_name shift to state 515
-- On nonTypeName shift to state 35
-- On name shift to state 448

State 515:
controlTypeDeclaration -> CONTROL push_name . optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On L_ANGLE shift to state 417
-- On optTypeParameters shift to state 516
-- On L_PAREN reduce production optTypeParameters ->

State 516:
controlTypeDeclaration -> CONTROL push_name optTypeParameters . L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On L_PAREN shift to state 517

State 517:
controlTypeDeclaration -> CONTROL push_name optTypeParameters L_PAREN . parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 518
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 518:
controlTypeDeclaration -> CONTROL push_name optTypeParameters L_PAREN parameterList . R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On R_PAREN shift to state 519

State 519:
controlTypeDeclaration -> CONTROL push_name optTypeParameters L_PAREN parameterList R_PAREN . [ SEMICOLON L_PAREN L_BRACE ]
-- On SEMICOLON reduce production controlTypeDeclaration -> CONTROL push_name optTypeParameters L_PAREN parameterList R_PAREN
-- On L_PAREN reduce production controlTypeDeclaration -> CONTROL push_name optTypeParameters L_PAREN parameterList R_PAREN
-- On L_BRACE reduce production controlTypeDeclaration -> CONTROL push_name optTypeParameters L_PAREN parameterList R_PAREN

State 520:
constantDeclaration -> CONST . typeRef name ASSIGN initialValue SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeRef shift to state 521
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 521:
constantDeclaration -> CONST typeRef . name ASSIGN initialValue SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 522

State 522:
constantDeclaration -> CONST typeRef name . ASSIGN initialValue SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On ASSIGN shift to state 523

State 523:
constantDeclaration -> CONST typeRef name ASSIGN . initialValue SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On initialValue shift to state 524
-- On expression shift to state 526
-- On dotPrefix shift to state 91

State 524:
constantDeclaration -> CONST typeRef name ASSIGN initialValue . SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On SEMICOLON shift to state 525

State 525:
constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On VARBIT reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On VALUESET reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On TYPEDEF reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On TYPE reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On TUPLE reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On TRANSITION reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On TABLE reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On SWITCH reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On STRUCT reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On STRING reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On STATE reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On SEMICOLON reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On R_BRACE reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On RETURN reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On PRAGMA reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On PARSER reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On PACKAGE reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On NAME reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On MATCH_KIND reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On L_BRACE reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On KEY reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On INT reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On IF reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On HEADER_UNION reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On HEADER reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On EXTERN reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On EXIT reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On ERROR reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On ENUM reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On ENTRIES reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On END reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On DOT reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On CONTROL reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On CONST reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On BOOL reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On BIT reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On AT reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On APPLY reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On ACTIONS reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON
-- On ACTION reduce production constantDeclaration -> CONST typeRef name ASSIGN initialValue SEMICOLON

State 526:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
initialValue -> expression . [ SEMICOLON ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On SEMICOLON reduce production initialValue -> expression

State 527:
actionDeclaration -> ACTION . name L_PAREN parameterList R_PAREN blockStatement [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 528

State 528:
actionDeclaration -> ACTION name . L_PAREN parameterList R_PAREN blockStatement [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On L_PAREN shift to state 529

State 529:
actionDeclaration -> ACTION name L_PAREN . parameterList R_PAREN blockStatement [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 530
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 530:
actionDeclaration -> ACTION name L_PAREN parameterList . R_PAREN blockStatement [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On R_PAREN shift to state 531

State 531:
actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN . blockStatement [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On PRAGMA shift to state 207
-- On L_BRACE shift to state 532
-- On AT shift to state 302
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On blockStatement shift to state 670
-- On annotations shift to state 551
-- On annotation shift to state 331

State 532:
blockStatement -> L_BRACE . push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END ELSE DOT DEFAULT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On push_scope shift to state 533
-- On VARBIT reduce production push_scope ->
-- On TYPE reduce production push_scope ->
-- On TUPLE reduce production push_scope ->
-- On SWITCH reduce production push_scope ->
-- On STRING reduce production push_scope ->
-- On STATE reduce production push_scope ->
-- On SEMICOLON reduce production push_scope ->
-- On R_BRACE reduce production push_scope ->
-- On RETURN reduce production push_scope ->
-- On PRAGMA reduce production push_scope ->
-- On NAME reduce production push_scope ->
-- On L_BRACE reduce production push_scope ->
-- On KEY reduce production push_scope ->
-- On INT reduce production push_scope ->
-- On IF reduce production push_scope ->
-- On EXIT reduce production push_scope ->
-- On ERROR reduce production push_scope ->
-- On ENTRIES reduce production push_scope ->
-- On DOT reduce production push_scope ->
-- On CONST reduce production push_scope ->
-- On BOOL reduce production push_scope ->
-- On BIT reduce production push_scope ->
-- On AT reduce production push_scope ->
-- On APPLY reduce production push_scope ->
-- On ACTIONS reduce production push_scope ->

State 533:
blockStatement -> L_BRACE push_scope . petr4_list(statementOrDeclaration) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END ELSE DOT DEFAULT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On petr4_list(statementOrDeclaration) shift to state 534
-- On list_aux(statementOrDeclaration) shift to state 537
-- On VARBIT reduce production list_aux(statementOrDeclaration) ->
-- On TYPE reduce production list_aux(statementOrDeclaration) ->
-- On TUPLE reduce production list_aux(statementOrDeclaration) ->
-- On SWITCH reduce production list_aux(statementOrDeclaration) ->
-- On STRING reduce production list_aux(statementOrDeclaration) ->
-- On STATE reduce production list_aux(statementOrDeclaration) ->
-- On SEMICOLON reduce production list_aux(statementOrDeclaration) ->
-- On R_BRACE reduce production list_aux(statementOrDeclaration) ->
-- On RETURN reduce production list_aux(statementOrDeclaration) ->
-- On PRAGMA reduce production list_aux(statementOrDeclaration) ->
-- On NAME reduce production list_aux(statementOrDeclaration) ->
-- On L_BRACE reduce production list_aux(statementOrDeclaration) ->
-- On KEY reduce production list_aux(statementOrDeclaration) ->
-- On INT reduce production list_aux(statementOrDeclaration) ->
-- On IF reduce production list_aux(statementOrDeclaration) ->
-- On EXIT reduce production list_aux(statementOrDeclaration) ->
-- On ERROR reduce production list_aux(statementOrDeclaration) ->
-- On ENTRIES reduce production list_aux(statementOrDeclaration) ->
-- On DOT reduce production list_aux(statementOrDeclaration) ->
-- On CONST reduce production list_aux(statementOrDeclaration) ->
-- On BOOL reduce production list_aux(statementOrDeclaration) ->
-- On BIT reduce production list_aux(statementOrDeclaration) ->
-- On AT reduce production list_aux(statementOrDeclaration) ->
-- On APPLY reduce production list_aux(statementOrDeclaration) ->
-- On ACTIONS reduce production list_aux(statementOrDeclaration) ->

State 534:
blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) . R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END ELSE DOT DEFAULT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 535

State 535:
blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE . pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END ELSE DOT DEFAULT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On pop_scope shift to state 536
-- On VOID reduce production pop_scope ->
-- On VARBIT reduce production pop_scope ->
-- On TYPEDEF reduce production pop_scope ->
-- On TYPE reduce production pop_scope ->
-- On TUPLE reduce production pop_scope ->
-- On TABLE reduce production pop_scope ->
-- On SWITCH reduce production pop_scope ->
-- On STRUCT reduce production pop_scope ->
-- On STRING reduce production pop_scope ->
-- On STATE reduce production pop_scope ->
-- On SEMICOLON reduce production pop_scope ->
-- On R_BRACE reduce production pop_scope ->
-- On RETURN reduce production pop_scope ->
-- On PRAGMA reduce production pop_scope ->
-- On PARSER reduce production pop_scope ->
-- On PACKAGE reduce production pop_scope ->
-- On NAME reduce production pop_scope ->
-- On MATCH_KIND reduce production pop_scope ->
-- On L_BRACE reduce production pop_scope ->
-- On KEY reduce production pop_scope ->
-- On INT reduce production pop_scope ->
-- On IF reduce production pop_scope ->
-- On HEADER_UNION reduce production pop_scope ->
-- On HEADER reduce production pop_scope ->
-- On EXTERN reduce production pop_scope ->
-- On EXIT reduce production pop_scope ->
-- On ERROR reduce production pop_scope ->
-- On ENUM reduce production pop_scope ->
-- On ENTRIES reduce production pop_scope ->
-- On END reduce production pop_scope ->
-- On ELSE reduce production pop_scope ->
-- On DOT reduce production pop_scope ->
-- On DEFAULT reduce production pop_scope ->
-- On CONTROL reduce production pop_scope ->
-- On CONST reduce production pop_scope ->
-- On BOOL reduce production pop_scope ->
-- On BIT reduce production pop_scope ->
-- On AT reduce production pop_scope ->
-- On APPLY reduce production pop_scope ->
-- On ACTIONS reduce production pop_scope ->
-- On ACTION reduce production pop_scope ->

State 536:
blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope . [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END ELSE DOT DEFAULT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On VARBIT reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On TYPEDEF reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On TYPE reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On TUPLE reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On TABLE reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On SWITCH reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On STRUCT reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On STRING reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On STATE reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On SEMICOLON reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On R_BRACE reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On RETURN reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On PRAGMA reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On PARSER reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On PACKAGE reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On NAME reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On MATCH_KIND reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On L_BRACE reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On KEY reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On INT reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On IF reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On HEADER_UNION reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On HEADER reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On EXTERN reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On EXIT reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ERROR reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ENUM reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ENTRIES reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On END reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ELSE reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On DOT reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On DEFAULT reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On CONTROL reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On CONST reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On BOOL reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On BIT reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On AT reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On APPLY reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ACTIONS reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ACTION reduce production blockStatement -> L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope

State 537:
list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) . statementOrDeclaration [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
petr4_list(statementOrDeclaration) -> list_aux(statementOrDeclaration) . [ R_BRACE ]
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On SWITCH shift to state 538
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On SEMICOLON shift to state 559
-- On RETURN shift to state 560
-- On PRAGMA shift to state 207
-- On NAME shift to state 11
-- On L_BRACE shift to state 532
-- On KEY shift to state 19
-- On INT shift to state 20
-- On IF shift to state 564
-- On EXIT shift to state 568
-- On ERROR shift to state 46
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On CONST shift to state 520
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On variableDeclaration shift to state 618
-- On varName shift to state 33
-- On typeRef shift to state 619
-- On typeName shift to state 654
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On switchStatement shift to state 577
-- On statementOrDeclaration shift to state 655
-- On statement shift to state 656
-- On specializedType shift to state 140
-- On returnStatement shift to state 581
-- On prefixedType shift to state 44
-- On prefixedNonTypeName shift to state 583
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On nonTypeName shift to state 584
-- On lvalue shift to state 585
-- On instantiation shift to state 657
-- On headerStackType shift to state 142
-- On exitStatement shift to state 608
-- On emptyStatement shift to state 609
-- On dotPrefix shift to state 610
-- On directApplication shift to state 614
-- On constantDeclaration shift to state 658
-- On conditionalStatement shift to state 615
-- On blockStatement shift to state 616
-- On baseType shift to state 146
-- On assignmentOrMethodCallStatement shift to state 617
-- On annotations shift to state 659
-- On annotation shift to state 331
-- On R_BRACE reduce production petr4_list(statementOrDeclaration) -> list_aux(statementOrDeclaration)

State 538:
switchStatement -> SWITCH . L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On L_PAREN shift to state 539

State 539:
switchStatement -> SWITCH L_PAREN . expression R_PAREN L_BRACE switchCases R_BRACE [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 540
-- On dotPrefix shift to state 91

State 540:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
switchStatement -> SWITCH L_PAREN expression . R_PAREN L_BRACE switchCases R_BRACE [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 541
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 541:
switchStatement -> SWITCH L_PAREN expression R_PAREN . L_BRACE switchCases R_BRACE [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On L_BRACE shift to state 542

State 542:
switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE . switchCases R_BRACE [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On switchCases shift to state 543
-- On petr4_list(switchCase) shift to state 545
-- On list_aux(switchCase) shift to state 546
-- On TYPE reduce production list_aux(switchCase) ->
-- On STATE reduce production list_aux(switchCase) ->
-- On R_BRACE reduce production list_aux(switchCase) ->
-- On NAME reduce production list_aux(switchCase) ->
-- On KEY reduce production list_aux(switchCase) ->
-- On ENTRIES reduce production list_aux(switchCase) ->
-- On DEFAULT reduce production list_aux(switchCase) ->
-- On APPLY reduce production list_aux(switchCase) ->
-- On ACTIONS reduce production list_aux(switchCase) ->

State 543:
switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases . R_BRACE [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On R_BRACE shift to state 544

State 544:
switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On TYPE reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On TUPLE reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On SWITCH reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On STRING reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On STATE reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On SEMICOLON reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On R_BRACE reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On RETURN reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On PRAGMA reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On NAME reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On L_BRACE reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On KEY reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On INT reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On IF reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On EXIT reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On ERROR reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On ENTRIES reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On ELSE reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On DOT reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On CONST reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On BOOL reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On BIT reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On AT reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On APPLY reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE
-- On ACTIONS reduce production switchStatement -> SWITCH L_PAREN expression R_PAREN L_BRACE switchCases R_BRACE

State 545:
switchCases -> petr4_list(switchCase) . [ R_BRACE ]
-- On R_BRACE reduce production switchCases -> petr4_list(switchCase)

State 546:
list_aux(switchCase) -> list_aux(switchCase) . switchCase [ TYPE STATE R_BRACE NAME KEY ENTRIES DEFAULT APPLY ACTIONS ]
petr4_list(switchCase) -> list_aux(switchCase) . [ R_BRACE ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On DEFAULT shift to state 547
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On switchLabel shift to state 548
-- On switchCase shift to state 557
-- On nonTypeName shift to state 35
-- On name shift to state 558
-- On R_BRACE reduce production petr4_list(switchCase) -> list_aux(switchCase)

State 547:
switchLabel -> DEFAULT . [ COLON ]
-- On COLON reduce production switchLabel -> DEFAULT

State 548:
switchCase -> switchLabel . COLON blockStatement [ TYPE STATE R_BRACE NAME KEY ENTRIES DEFAULT APPLY ACTIONS ]
switchCase -> switchLabel . COLON [ TYPE STATE R_BRACE NAME KEY ENTRIES DEFAULT APPLY ACTIONS ]
-- On COLON shift to state 549

State 549:
switchCase -> switchLabel COLON . blockStatement [ TYPE STATE R_BRACE NAME KEY ENTRIES DEFAULT APPLY ACTIONS ]
switchCase -> switchLabel COLON . [ TYPE STATE R_BRACE NAME KEY ENTRIES DEFAULT APPLY ACTIONS ]
-- On PRAGMA shift to state 207
-- On L_BRACE shift to state 532
-- On AT shift to state 302
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On blockStatement shift to state 550
-- On annotations shift to state 551
-- On annotation shift to state 331
-- On TYPE reduce production switchCase -> switchLabel COLON
-- On STATE reduce production switchCase -> switchLabel COLON
-- On R_BRACE reduce production switchCase -> switchLabel COLON
-- On NAME reduce production switchCase -> switchLabel COLON
-- On KEY reduce production switchCase -> switchLabel COLON
-- On ENTRIES reduce production switchCase -> switchLabel COLON
-- On DEFAULT reduce production switchCase -> switchLabel COLON
-- On APPLY reduce production switchCase -> switchLabel COLON
-- On ACTIONS reduce production switchCase -> switchLabel COLON

State 550:
switchCase -> switchLabel COLON blockStatement . [ TYPE STATE R_BRACE NAME KEY ENTRIES DEFAULT APPLY ACTIONS ]
-- On TYPE reduce production switchCase -> switchLabel COLON blockStatement
-- On STATE reduce production switchCase -> switchLabel COLON blockStatement
-- On R_BRACE reduce production switchCase -> switchLabel COLON blockStatement
-- On NAME reduce production switchCase -> switchLabel COLON blockStatement
-- On KEY reduce production switchCase -> switchLabel COLON blockStatement
-- On ENTRIES reduce production switchCase -> switchLabel COLON blockStatement
-- On DEFAULT reduce production switchCase -> switchLabel COLON blockStatement
-- On APPLY reduce production switchCase -> switchLabel COLON blockStatement
-- On ACTIONS reduce production switchCase -> switchLabel COLON blockStatement

State 551:
blockStatement -> annotations . L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END ELSE DOT DEFAULT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 552

State 552:
blockStatement -> annotations L_BRACE . push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END ELSE DOT DEFAULT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On push_scope shift to state 553
-- On VARBIT reduce production push_scope ->
-- On TYPE reduce production push_scope ->
-- On TUPLE reduce production push_scope ->
-- On SWITCH reduce production push_scope ->
-- On STRING reduce production push_scope ->
-- On STATE reduce production push_scope ->
-- On SEMICOLON reduce production push_scope ->
-- On R_BRACE reduce production push_scope ->
-- On RETURN reduce production push_scope ->
-- On PRAGMA reduce production push_scope ->
-- On NAME reduce production push_scope ->
-- On L_BRACE reduce production push_scope ->
-- On KEY reduce production push_scope ->
-- On INT reduce production push_scope ->
-- On IF reduce production push_scope ->
-- On EXIT reduce production push_scope ->
-- On ERROR reduce production push_scope ->
-- On ENTRIES reduce production push_scope ->
-- On DOT reduce production push_scope ->
-- On CONST reduce production push_scope ->
-- On BOOL reduce production push_scope ->
-- On BIT reduce production push_scope ->
-- On AT reduce production push_scope ->
-- On APPLY reduce production push_scope ->
-- On ACTIONS reduce production push_scope ->

State 553:
blockStatement -> annotations L_BRACE push_scope . petr4_list(statementOrDeclaration) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END ELSE DOT DEFAULT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On petr4_list(statementOrDeclaration) shift to state 554
-- On list_aux(statementOrDeclaration) shift to state 537
-- On VARBIT reduce production list_aux(statementOrDeclaration) ->
-- On TYPE reduce production list_aux(statementOrDeclaration) ->
-- On TUPLE reduce production list_aux(statementOrDeclaration) ->
-- On SWITCH reduce production list_aux(statementOrDeclaration) ->
-- On STRING reduce production list_aux(statementOrDeclaration) ->
-- On STATE reduce production list_aux(statementOrDeclaration) ->
-- On SEMICOLON reduce production list_aux(statementOrDeclaration) ->
-- On R_BRACE reduce production list_aux(statementOrDeclaration) ->
-- On RETURN reduce production list_aux(statementOrDeclaration) ->
-- On PRAGMA reduce production list_aux(statementOrDeclaration) ->
-- On NAME reduce production list_aux(statementOrDeclaration) ->
-- On L_BRACE reduce production list_aux(statementOrDeclaration) ->
-- On KEY reduce production list_aux(statementOrDeclaration) ->
-- On INT reduce production list_aux(statementOrDeclaration) ->
-- On IF reduce production list_aux(statementOrDeclaration) ->
-- On EXIT reduce production list_aux(statementOrDeclaration) ->
-- On ERROR reduce production list_aux(statementOrDeclaration) ->
-- On ENTRIES reduce production list_aux(statementOrDeclaration) ->
-- On DOT reduce production list_aux(statementOrDeclaration) ->
-- On CONST reduce production list_aux(statementOrDeclaration) ->
-- On BOOL reduce production list_aux(statementOrDeclaration) ->
-- On BIT reduce production list_aux(statementOrDeclaration) ->
-- On AT reduce production list_aux(statementOrDeclaration) ->
-- On APPLY reduce production list_aux(statementOrDeclaration) ->
-- On ACTIONS reduce production list_aux(statementOrDeclaration) ->

State 554:
blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) . R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END ELSE DOT DEFAULT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_BRACE shift to state 555

State 555:
blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE . pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END ELSE DOT DEFAULT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On pop_scope shift to state 556
-- On VOID reduce production pop_scope ->
-- On VARBIT reduce production pop_scope ->
-- On TYPEDEF reduce production pop_scope ->
-- On TYPE reduce production pop_scope ->
-- On TUPLE reduce production pop_scope ->
-- On TABLE reduce production pop_scope ->
-- On SWITCH reduce production pop_scope ->
-- On STRUCT reduce production pop_scope ->
-- On STRING reduce production pop_scope ->
-- On STATE reduce production pop_scope ->
-- On SEMICOLON reduce production pop_scope ->
-- On R_BRACE reduce production pop_scope ->
-- On RETURN reduce production pop_scope ->
-- On PRAGMA reduce production pop_scope ->
-- On PARSER reduce production pop_scope ->
-- On PACKAGE reduce production pop_scope ->
-- On NAME reduce production pop_scope ->
-- On MATCH_KIND reduce production pop_scope ->
-- On L_BRACE reduce production pop_scope ->
-- On KEY reduce production pop_scope ->
-- On INT reduce production pop_scope ->
-- On IF reduce production pop_scope ->
-- On HEADER_UNION reduce production pop_scope ->
-- On HEADER reduce production pop_scope ->
-- On EXTERN reduce production pop_scope ->
-- On EXIT reduce production pop_scope ->
-- On ERROR reduce production pop_scope ->
-- On ENUM reduce production pop_scope ->
-- On ENTRIES reduce production pop_scope ->
-- On END reduce production pop_scope ->
-- On ELSE reduce production pop_scope ->
-- On DOT reduce production pop_scope ->
-- On DEFAULT reduce production pop_scope ->
-- On CONTROL reduce production pop_scope ->
-- On CONST reduce production pop_scope ->
-- On BOOL reduce production pop_scope ->
-- On BIT reduce production pop_scope ->
-- On AT reduce production pop_scope ->
-- On APPLY reduce production pop_scope ->
-- On ACTIONS reduce production pop_scope ->
-- On ACTION reduce production pop_scope ->

State 556:
blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope . [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END ELSE DOT DEFAULT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On VARBIT reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On TYPEDEF reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On TYPE reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On TUPLE reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On TABLE reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On SWITCH reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On STRUCT reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On STRING reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On STATE reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On SEMICOLON reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On R_BRACE reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On RETURN reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On PRAGMA reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On PARSER reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On PACKAGE reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On NAME reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On MATCH_KIND reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On L_BRACE reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On KEY reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On INT reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On IF reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On HEADER_UNION reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On HEADER reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On EXTERN reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On EXIT reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ERROR reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ENUM reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ENTRIES reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On END reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ELSE reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On DOT reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On DEFAULT reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On CONTROL reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On CONST reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On BOOL reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On BIT reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On AT reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On APPLY reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ACTIONS reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope
-- On ACTION reduce production blockStatement -> annotations L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope

State 557:
list_aux(switchCase) -> list_aux(switchCase) switchCase . [ TYPE STATE R_BRACE NAME KEY ENTRIES DEFAULT APPLY ACTIONS ]
-- On TYPE reduce production list_aux(switchCase) -> list_aux(switchCase) switchCase
-- On STATE reduce production list_aux(switchCase) -> list_aux(switchCase) switchCase
-- On R_BRACE reduce production list_aux(switchCase) -> list_aux(switchCase) switchCase
-- On NAME reduce production list_aux(switchCase) -> list_aux(switchCase) switchCase
-- On KEY reduce production list_aux(switchCase) -> list_aux(switchCase) switchCase
-- On ENTRIES reduce production list_aux(switchCase) -> list_aux(switchCase) switchCase
-- On DEFAULT reduce production list_aux(switchCase) -> list_aux(switchCase) switchCase
-- On APPLY reduce production list_aux(switchCase) -> list_aux(switchCase) switchCase
-- On ACTIONS reduce production list_aux(switchCase) -> list_aux(switchCase) switchCase

State 558:
switchLabel -> name . [ COLON ]
-- On COLON reduce production switchLabel -> name

State 559:
emptyStatement -> SEMICOLON . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production emptyStatement -> SEMICOLON
-- On TYPE reduce production emptyStatement -> SEMICOLON
-- On TUPLE reduce production emptyStatement -> SEMICOLON
-- On SWITCH reduce production emptyStatement -> SEMICOLON
-- On STRING reduce production emptyStatement -> SEMICOLON
-- On STATE reduce production emptyStatement -> SEMICOLON
-- On SEMICOLON reduce production emptyStatement -> SEMICOLON
-- On R_BRACE reduce production emptyStatement -> SEMICOLON
-- On RETURN reduce production emptyStatement -> SEMICOLON
-- On PRAGMA reduce production emptyStatement -> SEMICOLON
-- On NAME reduce production emptyStatement -> SEMICOLON
-- On L_BRACE reduce production emptyStatement -> SEMICOLON
-- On KEY reduce production emptyStatement -> SEMICOLON
-- On INT reduce production emptyStatement -> SEMICOLON
-- On IF reduce production emptyStatement -> SEMICOLON
-- On EXIT reduce production emptyStatement -> SEMICOLON
-- On ERROR reduce production emptyStatement -> SEMICOLON
-- On ENTRIES reduce production emptyStatement -> SEMICOLON
-- On ELSE reduce production emptyStatement -> SEMICOLON
-- On DOT reduce production emptyStatement -> SEMICOLON
-- On CONST reduce production emptyStatement -> SEMICOLON
-- On BOOL reduce production emptyStatement -> SEMICOLON
-- On BIT reduce production emptyStatement -> SEMICOLON
-- On AT reduce production emptyStatement -> SEMICOLON
-- On APPLY reduce production emptyStatement -> SEMICOLON
-- On ACTIONS reduce production emptyStatement -> SEMICOLON

State 560:
returnStatement -> RETURN . SEMICOLON [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
returnStatement -> RETURN . expression SEMICOLON [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On SEMICOLON shift to state 561
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 562
-- On dotPrefix shift to state 91

State 561:
returnStatement -> RETURN SEMICOLON . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production returnStatement -> RETURN SEMICOLON
-- On TYPE reduce production returnStatement -> RETURN SEMICOLON
-- On TUPLE reduce production returnStatement -> RETURN SEMICOLON
-- On SWITCH reduce production returnStatement -> RETURN SEMICOLON
-- On STRING reduce production returnStatement -> RETURN SEMICOLON
-- On STATE reduce production returnStatement -> RETURN SEMICOLON
-- On SEMICOLON reduce production returnStatement -> RETURN SEMICOLON
-- On R_BRACE reduce production returnStatement -> RETURN SEMICOLON
-- On RETURN reduce production returnStatement -> RETURN SEMICOLON
-- On PRAGMA reduce production returnStatement -> RETURN SEMICOLON
-- On NAME reduce production returnStatement -> RETURN SEMICOLON
-- On L_BRACE reduce production returnStatement -> RETURN SEMICOLON
-- On KEY reduce production returnStatement -> RETURN SEMICOLON
-- On INT reduce production returnStatement -> RETURN SEMICOLON
-- On IF reduce production returnStatement -> RETURN SEMICOLON
-- On EXIT reduce production returnStatement -> RETURN SEMICOLON
-- On ERROR reduce production returnStatement -> RETURN SEMICOLON
-- On ENTRIES reduce production returnStatement -> RETURN SEMICOLON
-- On ELSE reduce production returnStatement -> RETURN SEMICOLON
-- On DOT reduce production returnStatement -> RETURN SEMICOLON
-- On CONST reduce production returnStatement -> RETURN SEMICOLON
-- On BOOL reduce production returnStatement -> RETURN SEMICOLON
-- On BIT reduce production returnStatement -> RETURN SEMICOLON
-- On AT reduce production returnStatement -> RETURN SEMICOLON
-- On APPLY reduce production returnStatement -> RETURN SEMICOLON
-- On ACTIONS reduce production returnStatement -> RETURN SEMICOLON

State 562:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
returnStatement -> RETURN expression . SEMICOLON [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On SHL shift to state 64
-- On SEMICOLON shift to state 563
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 563:
returnStatement -> RETURN expression SEMICOLON . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production returnStatement -> RETURN expression SEMICOLON
-- On TYPE reduce production returnStatement -> RETURN expression SEMICOLON
-- On TUPLE reduce production returnStatement -> RETURN expression SEMICOLON
-- On SWITCH reduce production returnStatement -> RETURN expression SEMICOLON
-- On STRING reduce production returnStatement -> RETURN expression SEMICOLON
-- On STATE reduce production returnStatement -> RETURN expression SEMICOLON
-- On SEMICOLON reduce production returnStatement -> RETURN expression SEMICOLON
-- On R_BRACE reduce production returnStatement -> RETURN expression SEMICOLON
-- On RETURN reduce production returnStatement -> RETURN expression SEMICOLON
-- On PRAGMA reduce production returnStatement -> RETURN expression SEMICOLON
-- On NAME reduce production returnStatement -> RETURN expression SEMICOLON
-- On L_BRACE reduce production returnStatement -> RETURN expression SEMICOLON
-- On KEY reduce production returnStatement -> RETURN expression SEMICOLON
-- On INT reduce production returnStatement -> RETURN expression SEMICOLON
-- On IF reduce production returnStatement -> RETURN expression SEMICOLON
-- On EXIT reduce production returnStatement -> RETURN expression SEMICOLON
-- On ERROR reduce production returnStatement -> RETURN expression SEMICOLON
-- On ENTRIES reduce production returnStatement -> RETURN expression SEMICOLON
-- On ELSE reduce production returnStatement -> RETURN expression SEMICOLON
-- On DOT reduce production returnStatement -> RETURN expression SEMICOLON
-- On CONST reduce production returnStatement -> RETURN expression SEMICOLON
-- On BOOL reduce production returnStatement -> RETURN expression SEMICOLON
-- On BIT reduce production returnStatement -> RETURN expression SEMICOLON
-- On AT reduce production returnStatement -> RETURN expression SEMICOLON
-- On APPLY reduce production returnStatement -> RETURN expression SEMICOLON
-- On ACTIONS reduce production returnStatement -> RETURN expression SEMICOLON

State 564:
conditionalStatement -> IF . L_PAREN expression R_PAREN statement ELSE statement [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
conditionalStatement -> IF . L_PAREN expression R_PAREN statement [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On L_PAREN shift to state 565

State 565:
conditionalStatement -> IF L_PAREN . expression R_PAREN statement ELSE statement [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
conditionalStatement -> IF L_PAREN . expression R_PAREN statement [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 566
-- On dotPrefix shift to state 91

State 566:
conditionalStatement -> IF L_PAREN expression . R_PAREN statement ELSE statement [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
conditionalStatement -> IF L_PAREN expression . R_PAREN statement [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 567
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 567:
conditionalStatement -> IF L_PAREN expression R_PAREN . statement ELSE statement [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
conditionalStatement -> IF L_PAREN expression R_PAREN . statement [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On SWITCH shift to state 538
-- On STATE shift to state 8
-- On SEMICOLON shift to state 559
-- On RETURN shift to state 560
-- On PRAGMA shift to state 207
-- On NAME shift to state 11
-- On L_BRACE shift to state 532
-- On KEY shift to state 19
-- On IF shift to state 564
-- On EXIT shift to state 568
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On AT shift to state 302
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 570
-- On tableKwName shift to state 34
-- On switchStatement shift to state 577
-- On statement shift to state 578
-- On returnStatement shift to state 581
-- On prefixedType shift to state 582
-- On prefixedNonTypeName shift to state 583
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On nonTypeName shift to state 584
-- On lvalue shift to state 585
-- On exitStatement shift to state 608
-- On emptyStatement shift to state 609
-- On dotPrefix shift to state 610
-- On directApplication shift to state 614
-- On conditionalStatement shift to state 615
-- On blockStatement shift to state 616
-- On assignmentOrMethodCallStatement shift to state 617
-- On annotations shift to state 551
-- On annotation shift to state 331

State 568:
exitStatement -> EXIT . SEMICOLON [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On SEMICOLON shift to state 569

State 569:
exitStatement -> EXIT SEMICOLON . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production exitStatement -> EXIT SEMICOLON
-- On TYPE reduce production exitStatement -> EXIT SEMICOLON
-- On TUPLE reduce production exitStatement -> EXIT SEMICOLON
-- On SWITCH reduce production exitStatement -> EXIT SEMICOLON
-- On STRING reduce production exitStatement -> EXIT SEMICOLON
-- On STATE reduce production exitStatement -> EXIT SEMICOLON
-- On SEMICOLON reduce production exitStatement -> EXIT SEMICOLON
-- On R_BRACE reduce production exitStatement -> EXIT SEMICOLON
-- On RETURN reduce production exitStatement -> EXIT SEMICOLON
-- On PRAGMA reduce production exitStatement -> EXIT SEMICOLON
-- On NAME reduce production exitStatement -> EXIT SEMICOLON
-- On L_BRACE reduce production exitStatement -> EXIT SEMICOLON
-- On KEY reduce production exitStatement -> EXIT SEMICOLON
-- On INT reduce production exitStatement -> EXIT SEMICOLON
-- On IF reduce production exitStatement -> EXIT SEMICOLON
-- On EXIT reduce production exitStatement -> EXIT SEMICOLON
-- On ERROR reduce production exitStatement -> EXIT SEMICOLON
-- On ENTRIES reduce production exitStatement -> EXIT SEMICOLON
-- On ELSE reduce production exitStatement -> EXIT SEMICOLON
-- On DOT reduce production exitStatement -> EXIT SEMICOLON
-- On CONST reduce production exitStatement -> EXIT SEMICOLON
-- On BOOL reduce production exitStatement -> EXIT SEMICOLON
-- On BIT reduce production exitStatement -> EXIT SEMICOLON
-- On AT reduce production exitStatement -> EXIT SEMICOLON
-- On APPLY reduce production exitStatement -> EXIT SEMICOLON
-- On ACTIONS reduce production exitStatement -> EXIT SEMICOLON

State 570:
directApplication -> typeName . DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On DOT shift to state 571

State 571:
directApplication -> typeName DOT . APPLY L_PAREN argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On APPLY shift to state 572

State 572:
directApplication -> typeName DOT APPLY . L_PAREN argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On L_PAREN shift to state 573

State 573:
directApplication -> typeName DOT APPLY L_PAREN . argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 57
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,argument) shift to state 58
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,argument) shift to state 71
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 61
-- On expression shift to state 72
-- On dotPrefix shift to state 91
-- On argumentList shift to state 574
-- On argument shift to state 135
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) ->
-- On COMMA reduce production separated_list_aux(COMMA,argument) ->

State 574:
directApplication -> typeName DOT APPLY L_PAREN argumentList . R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On R_PAREN shift to state 575

State 575:
directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN . SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On SEMICOLON shift to state 576

State 576:
directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON . [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On TYPE reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On TUPLE reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On TRANSITION reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On SWITCH reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On STRING reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On STATE reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On SEMICOLON reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On R_BRACE reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On RETURN reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On PRAGMA reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On NAME reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On L_BRACE reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On KEY reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On INT reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On IF reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On EXIT reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On ERROR reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On ENTRIES reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On ELSE reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On DOT reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On CONST reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On BOOL reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On BIT reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On AT reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On APPLY reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON
-- On ACTIONS reduce production directApplication -> typeName DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON

State 577:
statement -> switchStatement . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statement -> switchStatement
-- On TYPE reduce production statement -> switchStatement
-- On TUPLE reduce production statement -> switchStatement
-- On SWITCH reduce production statement -> switchStatement
-- On STRING reduce production statement -> switchStatement
-- On STATE reduce production statement -> switchStatement
-- On SEMICOLON reduce production statement -> switchStatement
-- On R_BRACE reduce production statement -> switchStatement
-- On RETURN reduce production statement -> switchStatement
-- On PRAGMA reduce production statement -> switchStatement
-- On NAME reduce production statement -> switchStatement
-- On L_BRACE reduce production statement -> switchStatement
-- On KEY reduce production statement -> switchStatement
-- On INT reduce production statement -> switchStatement
-- On IF reduce production statement -> switchStatement
-- On EXIT reduce production statement -> switchStatement
-- On ERROR reduce production statement -> switchStatement
-- On ENTRIES reduce production statement -> switchStatement
-- On ELSE reduce production statement -> switchStatement
-- On DOT reduce production statement -> switchStatement
-- On CONST reduce production statement -> switchStatement
-- On BOOL reduce production statement -> switchStatement
-- On BIT reduce production statement -> switchStatement
-- On AT reduce production statement -> switchStatement
-- On APPLY reduce production statement -> switchStatement
-- On ACTIONS reduce production statement -> switchStatement

State 578:
conditionalStatement -> IF L_PAREN expression R_PAREN statement . ELSE statement [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
conditionalStatement -> IF L_PAREN expression R_PAREN statement . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On ELSE shift to state 579
-- On VARBIT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On TYPE reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On TUPLE reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On SWITCH reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On STRING reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On STATE reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On SEMICOLON reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On R_BRACE reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On RETURN reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On PRAGMA reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On NAME reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On L_BRACE reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On KEY reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On INT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On IF reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On EXIT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On ERROR reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On ENTRIES reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On DOT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On CONST reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On BOOL reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On BIT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On AT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On APPLY reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement
-- On ACTIONS reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement

State 579:
conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE . statement [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On SWITCH shift to state 538
-- On STATE shift to state 8
-- On SEMICOLON shift to state 559
-- On RETURN shift to state 560
-- On PRAGMA shift to state 207
-- On NAME shift to state 11
-- On L_BRACE shift to state 532
-- On KEY shift to state 19
-- On IF shift to state 564
-- On EXIT shift to state 568
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On AT shift to state 302
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 570
-- On tableKwName shift to state 34
-- On switchStatement shift to state 577
-- On statement shift to state 580
-- On returnStatement shift to state 581
-- On prefixedType shift to state 582
-- On prefixedNonTypeName shift to state 583
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On nonTypeName shift to state 584
-- On lvalue shift to state 585
-- On exitStatement shift to state 608
-- On emptyStatement shift to state 609
-- On dotPrefix shift to state 610
-- On directApplication shift to state 614
-- On conditionalStatement shift to state 615
-- On blockStatement shift to state 616
-- On assignmentOrMethodCallStatement shift to state 617
-- On annotations shift to state 551
-- On annotation shift to state 331

State 580:
conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On TYPE reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On TUPLE reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On SWITCH reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On STRING reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On STATE reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On SEMICOLON reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On R_BRACE reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On RETURN reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On PRAGMA reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On NAME reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On L_BRACE reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On KEY reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On INT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On IF reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On EXIT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On ERROR reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On ENTRIES reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On ELSE reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On DOT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On CONST reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On BOOL reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On BIT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On AT reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On APPLY reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement
-- On ACTIONS reduce production conditionalStatement -> IF L_PAREN expression R_PAREN statement ELSE statement

State 581:
statement -> returnStatement . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statement -> returnStatement
-- On TYPE reduce production statement -> returnStatement
-- On TUPLE reduce production statement -> returnStatement
-- On SWITCH reduce production statement -> returnStatement
-- On STRING reduce production statement -> returnStatement
-- On STATE reduce production statement -> returnStatement
-- On SEMICOLON reduce production statement -> returnStatement
-- On R_BRACE reduce production statement -> returnStatement
-- On RETURN reduce production statement -> returnStatement
-- On PRAGMA reduce production statement -> returnStatement
-- On NAME reduce production statement -> returnStatement
-- On L_BRACE reduce production statement -> returnStatement
-- On KEY reduce production statement -> returnStatement
-- On INT reduce production statement -> returnStatement
-- On IF reduce production statement -> returnStatement
-- On EXIT reduce production statement -> returnStatement
-- On ERROR reduce production statement -> returnStatement
-- On ENTRIES reduce production statement -> returnStatement
-- On ELSE reduce production statement -> returnStatement
-- On DOT reduce production statement -> returnStatement
-- On CONST reduce production statement -> returnStatement
-- On BOOL reduce production statement -> returnStatement
-- On BIT reduce production statement -> returnStatement
-- On AT reduce production statement -> returnStatement
-- On APPLY reduce production statement -> returnStatement
-- On ACTIONS reduce production statement -> returnStatement

State 582:
typeName -> prefixedType . [ R_ANGLE DOT ]
-- On R_ANGLE reduce production typeName -> prefixedType
-- On DOT reduce production typeName -> prefixedType

State 583:
lvalue -> prefixedNonTypeName . [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On L_PAREN reduce production lvalue -> prefixedNonTypeName
-- On L_BRACKET reduce production lvalue -> prefixedNonTypeName
-- On L_ANGLE reduce production lvalue -> prefixedNonTypeName
-- On DOT reduce production lvalue -> prefixedNonTypeName
-- On ASSIGN reduce production lvalue -> prefixedNonTypeName

State 584:
prefixedNonTypeName -> nonTypeName . [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On L_PAREN reduce production prefixedNonTypeName -> nonTypeName
-- On L_BRACKET reduce production prefixedNonTypeName -> nonTypeName
-- On L_ANGLE reduce production prefixedNonTypeName -> nonTypeName
-- On DOT reduce production prefixedNonTypeName -> nonTypeName
-- On ASSIGN reduce production prefixedNonTypeName -> nonTypeName

State 585:
assignmentOrMethodCallStatement -> lvalue . L_PAREN argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
assignmentOrMethodCallStatement -> lvalue . L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
assignmentOrMethodCallStatement -> lvalue . ASSIGN expression SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
lvalue -> lvalue . DOT member [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
lvalue -> lvalue . L_BRACKET expression R_BRACKET [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
lvalue -> lvalue . L_BRACKET expression COLON expression R_BRACKET [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On L_PAREN shift to state 586
-- On L_BRACKET shift to state 590
-- On L_ANGLE shift to state 596
-- On DOT shift to state 603
-- On ASSIGN shift to state 605

State 586:
assignmentOrMethodCallStatement -> lvalue L_PAREN . argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 57
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,argument) shift to state 58
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,argument) shift to state 71
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 61
-- On expression shift to state 72
-- On dotPrefix shift to state 91
-- On argumentList shift to state 587
-- On argument shift to state 135
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) ->
-- On COMMA reduce production separated_list_aux(COMMA,argument) ->

State 587:
assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList . R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On R_PAREN shift to state 588

State 588:
assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN . SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On SEMICOLON shift to state 589

State 589:
assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON . [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On TYPE reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On TUPLE reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On TRANSITION reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On SWITCH reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On STRING reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On STATE reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On SEMICOLON reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On R_BRACE reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On RETURN reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On PRAGMA reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On NAME reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On L_BRACE reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On KEY reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On INT reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On IF reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On EXIT reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On ERROR reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On ENTRIES reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On ELSE reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On DOT reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On CONST reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On BOOL reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On BIT reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On AT reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On APPLY reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON
-- On ACTIONS reduce production assignmentOrMethodCallStatement -> lvalue L_PAREN argumentList R_PAREN SEMICOLON

State 590:
lvalue -> lvalue L_BRACKET . expression R_BRACKET [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
lvalue -> lvalue L_BRACKET . expression COLON expression R_BRACKET [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 591
-- On dotPrefix shift to state 91

State 591:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
lvalue -> lvalue L_BRACKET expression . R_BRACKET [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
lvalue -> lvalue L_BRACKET expression . COLON expression R_BRACKET [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On SHL shift to state 64
-- On R_BRACKET shift to state 592
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On COLON shift to state 593
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 592:
lvalue -> lvalue L_BRACKET expression R_BRACKET . [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On L_PAREN reduce production lvalue -> lvalue L_BRACKET expression R_BRACKET
-- On L_BRACKET reduce production lvalue -> lvalue L_BRACKET expression R_BRACKET
-- On L_ANGLE reduce production lvalue -> lvalue L_BRACKET expression R_BRACKET
-- On DOT reduce production lvalue -> lvalue L_BRACKET expression R_BRACKET
-- On ASSIGN reduce production lvalue -> lvalue L_BRACKET expression R_BRACKET

State 593:
lvalue -> lvalue L_BRACKET expression COLON . expression R_BRACKET [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 594
-- On dotPrefix shift to state 91

State 594:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_BRACKET R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
lvalue -> lvalue L_BRACKET expression COLON expression . R_BRACKET [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On SHL shift to state 64
-- On R_BRACKET shift to state 595
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 595:
lvalue -> lvalue L_BRACKET expression COLON expression R_BRACKET . [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On L_PAREN reduce production lvalue -> lvalue L_BRACKET expression COLON expression R_BRACKET
-- On L_BRACKET reduce production lvalue -> lvalue L_BRACKET expression COLON expression R_BRACKET
-- On L_ANGLE reduce production lvalue -> lvalue L_BRACKET expression COLON expression R_BRACKET
-- On DOT reduce production lvalue -> lvalue L_BRACKET expression COLON expression R_BRACKET
-- On ASSIGN reduce production lvalue -> lvalue L_BRACKET expression COLON expression R_BRACKET

State 596:
assignmentOrMethodCallStatement -> lvalue L_ANGLE . typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On NAME shift to state 11
-- On KEY shift to state 19
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 47
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeRef shift to state 137
-- On typeName shift to state 138
-- On typeArgumentList shift to state 597
-- On typeArg shift to state 167
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 140
-- On separated_list_aux(COMMA,typeArg) shift to state 168
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,typeArg) shift to state 171
-- On nonTypeName shift to state 141
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146
-- On R_ANGLE reduce production separated_list_aux(COMMA,typeArg) ->
-- On COMMA reduce production separated_list_aux(COMMA,typeArg) ->

State 597:
assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList . R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On R_ANGLE shift to state 598

State 598:
assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE . L_PAREN argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On L_PAREN shift to state 599

State 599:
assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN . argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 57
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,argument) shift to state 58
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,argument) shift to state 71
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 61
-- On expression shift to state 72
-- On dotPrefix shift to state 91
-- On argumentList shift to state 600
-- On argument shift to state 135
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) ->
-- On COMMA reduce production separated_list_aux(COMMA,argument) ->

State 600:
assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList . R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On R_PAREN shift to state 601

State 601:
assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN . SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On SEMICOLON shift to state 602

State 602:
assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON . [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On TYPE reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On TUPLE reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On TRANSITION reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On SWITCH reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On STRING reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On STATE reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On SEMICOLON reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On R_BRACE reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On RETURN reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On PRAGMA reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On NAME reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On L_BRACE reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On KEY reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On INT reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On IF reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On EXIT reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On ERROR reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On ENTRIES reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On ELSE reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On DOT reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On CONST reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On BOOL reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On BIT reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On AT reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On APPLY reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON
-- On ACTIONS reduce production assignmentOrMethodCallStatement -> lvalue L_ANGLE typeArgumentList R_ANGLE L_PAREN argumentList R_PAREN SEMICOLON

State 603:
lvalue -> lvalue DOT . member [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 36
-- On member shift to state 604

State 604:
lvalue -> lvalue DOT member . [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On L_PAREN reduce production lvalue -> lvalue DOT member
-- On L_BRACKET reduce production lvalue -> lvalue DOT member
-- On L_ANGLE reduce production lvalue -> lvalue DOT member
-- On DOT reduce production lvalue -> lvalue DOT member
-- On ASSIGN reduce production lvalue -> lvalue DOT member

State 605:
assignmentOrMethodCallStatement -> lvalue ASSIGN . expression SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 606
-- On dotPrefix shift to state 91

State 606:
assignmentOrMethodCallStatement -> lvalue ASSIGN expression . SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
expression -> expression . L_BRACKET expression R_BRACKET [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL SEMICOLON R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
-- On SHL shift to state 64
-- On SEMICOLON shift to state 607
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 607:
assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON . [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On TYPE reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On TUPLE reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On TRANSITION reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On SWITCH reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On STRING reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On STATE reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On SEMICOLON reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On R_BRACE reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On RETURN reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On PRAGMA reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On NAME reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On L_BRACE reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On KEY reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On INT reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On IF reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On EXIT reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On ERROR reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On ENTRIES reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On ELSE reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On DOT reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On CONST reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On BOOL reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On BIT reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On AT reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On APPLY reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON
-- On ACTIONS reduce production assignmentOrMethodCallStatement -> lvalue ASSIGN expression SEMICOLON

State 608:
statement -> exitStatement . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statement -> exitStatement
-- On TYPE reduce production statement -> exitStatement
-- On TUPLE reduce production statement -> exitStatement
-- On SWITCH reduce production statement -> exitStatement
-- On STRING reduce production statement -> exitStatement
-- On STATE reduce production statement -> exitStatement
-- On SEMICOLON reduce production statement -> exitStatement
-- On R_BRACE reduce production statement -> exitStatement
-- On RETURN reduce production statement -> exitStatement
-- On PRAGMA reduce production statement -> exitStatement
-- On NAME reduce production statement -> exitStatement
-- On L_BRACE reduce production statement -> exitStatement
-- On KEY reduce production statement -> exitStatement
-- On INT reduce production statement -> exitStatement
-- On IF reduce production statement -> exitStatement
-- On EXIT reduce production statement -> exitStatement
-- On ERROR reduce production statement -> exitStatement
-- On ENTRIES reduce production statement -> exitStatement
-- On ELSE reduce production statement -> exitStatement
-- On DOT reduce production statement -> exitStatement
-- On CONST reduce production statement -> exitStatement
-- On BOOL reduce production statement -> exitStatement
-- On BIT reduce production statement -> exitStatement
-- On AT reduce production statement -> exitStatement
-- On APPLY reduce production statement -> exitStatement
-- On ACTIONS reduce production statement -> exitStatement

State 609:
statement -> emptyStatement . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statement -> emptyStatement
-- On TYPE reduce production statement -> emptyStatement
-- On TUPLE reduce production statement -> emptyStatement
-- On SWITCH reduce production statement -> emptyStatement
-- On STRING reduce production statement -> emptyStatement
-- On STATE reduce production statement -> emptyStatement
-- On SEMICOLON reduce production statement -> emptyStatement
-- On R_BRACE reduce production statement -> emptyStatement
-- On RETURN reduce production statement -> emptyStatement
-- On PRAGMA reduce production statement -> emptyStatement
-- On NAME reduce production statement -> emptyStatement
-- On L_BRACE reduce production statement -> emptyStatement
-- On KEY reduce production statement -> emptyStatement
-- On INT reduce production statement -> emptyStatement
-- On IF reduce production statement -> emptyStatement
-- On EXIT reduce production statement -> emptyStatement
-- On ERROR reduce production statement -> emptyStatement
-- On ENTRIES reduce production statement -> emptyStatement
-- On ELSE reduce production statement -> emptyStatement
-- On DOT reduce production statement -> emptyStatement
-- On CONST reduce production statement -> emptyStatement
-- On BOOL reduce production statement -> emptyStatement
-- On BIT reduce production statement -> emptyStatement
-- On AT reduce production statement -> emptyStatement
-- On APPLY reduce production statement -> emptyStatement
-- On ACTIONS reduce production statement -> emptyStatement

State 610:
prefixedNonTypeName -> dotPrefix . go_toplevel nonTypeName go_local [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
prefixedType -> dotPrefix . go_toplevel NAME TYPENAME go_local [ TYPE STATE NAME L_PAREN L_BRACKET L_ANGLE KEY ENTRIES DOT APPLY ACTIONS ]
-- On go_toplevel shift to state 611
-- On TYPE reduce production go_toplevel ->
-- On STATE reduce production go_toplevel ->
-- On NAME reduce production go_toplevel ->
-- On KEY reduce production go_toplevel ->
-- On ENTRIES reduce production go_toplevel ->
-- On APPLY reduce production go_toplevel ->
-- On ACTIONS reduce production go_toplevel ->

State 611:
prefixedNonTypeName -> dotPrefix go_toplevel . nonTypeName go_local [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
prefixedType -> dotPrefix go_toplevel . NAME TYPENAME go_local [ TYPE STATE NAME L_PAREN L_BRACKET L_ANGLE KEY ENTRIES DOT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 93
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 612

State 612:
prefixedNonTypeName -> dotPrefix go_toplevel nonTypeName . go_local [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On go_local shift to state 613
-- On L_PAREN reduce production go_local ->
-- On L_BRACKET reduce production go_local ->
-- On L_ANGLE reduce production go_local ->
-- On DOT reduce production go_local ->
-- On ASSIGN reduce production go_local ->

State 613:
prefixedNonTypeName -> dotPrefix go_toplevel nonTypeName go_local . [ L_PAREN L_BRACKET L_ANGLE DOT ASSIGN ]
-- On L_PAREN reduce production prefixedNonTypeName -> dotPrefix go_toplevel nonTypeName go_local
-- On L_BRACKET reduce production prefixedNonTypeName -> dotPrefix go_toplevel nonTypeName go_local
-- On L_ANGLE reduce production prefixedNonTypeName -> dotPrefix go_toplevel nonTypeName go_local
-- On DOT reduce production prefixedNonTypeName -> dotPrefix go_toplevel nonTypeName go_local
-- On ASSIGN reduce production prefixedNonTypeName -> dotPrefix go_toplevel nonTypeName go_local

State 614:
statement -> directApplication . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statement -> directApplication
-- On TYPE reduce production statement -> directApplication
-- On TUPLE reduce production statement -> directApplication
-- On SWITCH reduce production statement -> directApplication
-- On STRING reduce production statement -> directApplication
-- On STATE reduce production statement -> directApplication
-- On SEMICOLON reduce production statement -> directApplication
-- On R_BRACE reduce production statement -> directApplication
-- On RETURN reduce production statement -> directApplication
-- On PRAGMA reduce production statement -> directApplication
-- On NAME reduce production statement -> directApplication
-- On L_BRACE reduce production statement -> directApplication
-- On KEY reduce production statement -> directApplication
-- On INT reduce production statement -> directApplication
-- On IF reduce production statement -> directApplication
-- On EXIT reduce production statement -> directApplication
-- On ERROR reduce production statement -> directApplication
-- On ENTRIES reduce production statement -> directApplication
-- On ELSE reduce production statement -> directApplication
-- On DOT reduce production statement -> directApplication
-- On CONST reduce production statement -> directApplication
-- On BOOL reduce production statement -> directApplication
-- On BIT reduce production statement -> directApplication
-- On AT reduce production statement -> directApplication
-- On APPLY reduce production statement -> directApplication
-- On ACTIONS reduce production statement -> directApplication

State 615:
statement -> conditionalStatement . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statement -> conditionalStatement
-- On TYPE reduce production statement -> conditionalStatement
-- On TUPLE reduce production statement -> conditionalStatement
-- On SWITCH reduce production statement -> conditionalStatement
-- On STRING reduce production statement -> conditionalStatement
-- On STATE reduce production statement -> conditionalStatement
-- On SEMICOLON reduce production statement -> conditionalStatement
-- On R_BRACE reduce production statement -> conditionalStatement
-- On RETURN reduce production statement -> conditionalStatement
-- On PRAGMA reduce production statement -> conditionalStatement
-- On NAME reduce production statement -> conditionalStatement
-- On L_BRACE reduce production statement -> conditionalStatement
-- On KEY reduce production statement -> conditionalStatement
-- On INT reduce production statement -> conditionalStatement
-- On IF reduce production statement -> conditionalStatement
-- On EXIT reduce production statement -> conditionalStatement
-- On ERROR reduce production statement -> conditionalStatement
-- On ENTRIES reduce production statement -> conditionalStatement
-- On ELSE reduce production statement -> conditionalStatement
-- On DOT reduce production statement -> conditionalStatement
-- On CONST reduce production statement -> conditionalStatement
-- On BOOL reduce production statement -> conditionalStatement
-- On BIT reduce production statement -> conditionalStatement
-- On AT reduce production statement -> conditionalStatement
-- On APPLY reduce production statement -> conditionalStatement
-- On ACTIONS reduce production statement -> conditionalStatement

State 616:
statement -> blockStatement . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statement -> blockStatement
-- On TYPE reduce production statement -> blockStatement
-- On TUPLE reduce production statement -> blockStatement
-- On SWITCH reduce production statement -> blockStatement
-- On STRING reduce production statement -> blockStatement
-- On STATE reduce production statement -> blockStatement
-- On SEMICOLON reduce production statement -> blockStatement
-- On R_BRACE reduce production statement -> blockStatement
-- On RETURN reduce production statement -> blockStatement
-- On PRAGMA reduce production statement -> blockStatement
-- On NAME reduce production statement -> blockStatement
-- On L_BRACE reduce production statement -> blockStatement
-- On KEY reduce production statement -> blockStatement
-- On INT reduce production statement -> blockStatement
-- On IF reduce production statement -> blockStatement
-- On EXIT reduce production statement -> blockStatement
-- On ERROR reduce production statement -> blockStatement
-- On ENTRIES reduce production statement -> blockStatement
-- On ELSE reduce production statement -> blockStatement
-- On DOT reduce production statement -> blockStatement
-- On CONST reduce production statement -> blockStatement
-- On BOOL reduce production statement -> blockStatement
-- On BIT reduce production statement -> blockStatement
-- On AT reduce production statement -> blockStatement
-- On APPLY reduce production statement -> blockStatement
-- On ACTIONS reduce production statement -> blockStatement

State 617:
statement -> assignmentOrMethodCallStatement . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES ELSE DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statement -> assignmentOrMethodCallStatement
-- On TYPE reduce production statement -> assignmentOrMethodCallStatement
-- On TUPLE reduce production statement -> assignmentOrMethodCallStatement
-- On SWITCH reduce production statement -> assignmentOrMethodCallStatement
-- On STRING reduce production statement -> assignmentOrMethodCallStatement
-- On STATE reduce production statement -> assignmentOrMethodCallStatement
-- On SEMICOLON reduce production statement -> assignmentOrMethodCallStatement
-- On R_BRACE reduce production statement -> assignmentOrMethodCallStatement
-- On RETURN reduce production statement -> assignmentOrMethodCallStatement
-- On PRAGMA reduce production statement -> assignmentOrMethodCallStatement
-- On NAME reduce production statement -> assignmentOrMethodCallStatement
-- On L_BRACE reduce production statement -> assignmentOrMethodCallStatement
-- On KEY reduce production statement -> assignmentOrMethodCallStatement
-- On INT reduce production statement -> assignmentOrMethodCallStatement
-- On IF reduce production statement -> assignmentOrMethodCallStatement
-- On EXIT reduce production statement -> assignmentOrMethodCallStatement
-- On ERROR reduce production statement -> assignmentOrMethodCallStatement
-- On ENTRIES reduce production statement -> assignmentOrMethodCallStatement
-- On ELSE reduce production statement -> assignmentOrMethodCallStatement
-- On DOT reduce production statement -> assignmentOrMethodCallStatement
-- On CONST reduce production statement -> assignmentOrMethodCallStatement
-- On BOOL reduce production statement -> assignmentOrMethodCallStatement
-- On BIT reduce production statement -> assignmentOrMethodCallStatement
-- On AT reduce production statement -> assignmentOrMethodCallStatement
-- On APPLY reduce production statement -> assignmentOrMethodCallStatement
-- On ACTIONS reduce production statement -> assignmentOrMethodCallStatement

State 618:
statementOrDeclaration -> variableDeclaration . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statementOrDeclaration -> variableDeclaration
-- On TYPE reduce production statementOrDeclaration -> variableDeclaration
-- On TUPLE reduce production statementOrDeclaration -> variableDeclaration
-- On SWITCH reduce production statementOrDeclaration -> variableDeclaration
-- On STRING reduce production statementOrDeclaration -> variableDeclaration
-- On STATE reduce production statementOrDeclaration -> variableDeclaration
-- On SEMICOLON reduce production statementOrDeclaration -> variableDeclaration
-- On R_BRACE reduce production statementOrDeclaration -> variableDeclaration
-- On RETURN reduce production statementOrDeclaration -> variableDeclaration
-- On PRAGMA reduce production statementOrDeclaration -> variableDeclaration
-- On NAME reduce production statementOrDeclaration -> variableDeclaration
-- On L_BRACE reduce production statementOrDeclaration -> variableDeclaration
-- On KEY reduce production statementOrDeclaration -> variableDeclaration
-- On INT reduce production statementOrDeclaration -> variableDeclaration
-- On IF reduce production statementOrDeclaration -> variableDeclaration
-- On EXIT reduce production statementOrDeclaration -> variableDeclaration
-- On ERROR reduce production statementOrDeclaration -> variableDeclaration
-- On ENTRIES reduce production statementOrDeclaration -> variableDeclaration
-- On DOT reduce production statementOrDeclaration -> variableDeclaration
-- On CONST reduce production statementOrDeclaration -> variableDeclaration
-- On BOOL reduce production statementOrDeclaration -> variableDeclaration
-- On BIT reduce production statementOrDeclaration -> variableDeclaration
-- On AT reduce production statementOrDeclaration -> variableDeclaration
-- On APPLY reduce production statementOrDeclaration -> variableDeclaration
-- On ACTIONS reduce production statementOrDeclaration -> variableDeclaration

State 619:
instantiation -> typeRef . L_PAREN argumentList R_PAREN name SEMICOLON [ VARBIT VALUESET TYPE TUPLE TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
instantiation -> typeRef . L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON [ VARBIT VALUESET TYPE TUPLE TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
variableDeclaration -> typeRef . name optInitialValue SEMICOLON [ VARBIT VALUESET TYPE TUPLE TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On L_PAREN shift to state 620
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 649

State 620:
instantiation -> typeRef L_PAREN . argumentList R_PAREN name SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
instantiation -> typeRef L_PAREN . argumentList R_PAREN name ASSIGN objInitializer SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 57
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,argument) shift to state 58
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,argument) shift to state 71
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 61
-- On expression shift to state 72
-- On dotPrefix shift to state 91
-- On argumentList shift to state 621
-- On argument shift to state 135
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) ->
-- On COMMA reduce production separated_list_aux(COMMA,argument) ->

State 621:
instantiation -> typeRef L_PAREN argumentList . R_PAREN name SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
instantiation -> typeRef L_PAREN argumentList . R_PAREN name ASSIGN objInitializer SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_PAREN shift to state 622

State 622:
instantiation -> typeRef L_PAREN argumentList R_PAREN . name SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
instantiation -> typeRef L_PAREN argumentList R_PAREN . name ASSIGN objInitializer SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 623

State 623:
instantiation -> typeRef L_PAREN argumentList R_PAREN name . SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
instantiation -> typeRef L_PAREN argumentList R_PAREN name . ASSIGN objInitializer SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On SEMICOLON shift to state 624
-- On ASSIGN shift to state 625

State 624:
instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On VARBIT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On VALUESET reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On TYPEDEF reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On TYPE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On TUPLE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On TABLE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On SWITCH reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On STRUCT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On STRING reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On STATE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On SEMICOLON reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On R_BRACE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On RETURN reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On PRAGMA reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On PARSER reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On PACKAGE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On NAME reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On MATCH_KIND reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On L_BRACE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On KEY reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On INT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On IF reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On HEADER_UNION reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On HEADER reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On EXTERN reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On EXIT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On ERROR reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On ENUM reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On ENTRIES reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On END reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On DOT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On CONTROL reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On CONST reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On BOOL reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On BIT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On AT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On APPLY reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On ACTIONS reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On ACTION reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name SEMICOLON

State 625:
instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN . objInitializer SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 626
-- On objInitializer shift to state 647

State 626:
objInitializer -> L_BRACE . petr4_list(objDeclaration) R_BRACE [ SEMICOLON ]
-- On petr4_list(objDeclaration) shift to state 627
-- On list_aux(objDeclaration) shift to state 629
-- On VOID reduce production list_aux(objDeclaration) ->
-- On VARBIT reduce production list_aux(objDeclaration) ->
-- On TUPLE reduce production list_aux(objDeclaration) ->
-- On STRING reduce production list_aux(objDeclaration) ->
-- On R_BRACE reduce production list_aux(objDeclaration) ->
-- On PRAGMA reduce production list_aux(objDeclaration) ->
-- On NAME reduce production list_aux(objDeclaration) ->
-- On INT reduce production list_aux(objDeclaration) ->
-- On ERROR reduce production list_aux(objDeclaration) ->
-- On DOT reduce production list_aux(objDeclaration) ->
-- On BOOL reduce production list_aux(objDeclaration) ->
-- On BIT reduce production list_aux(objDeclaration) ->
-- On AT reduce production list_aux(objDeclaration) ->

State 627:
objInitializer -> L_BRACE petr4_list(objDeclaration) . R_BRACE [ SEMICOLON ]
-- On R_BRACE shift to state 628

State 628:
objInitializer -> L_BRACE petr4_list(objDeclaration) R_BRACE . [ SEMICOLON ]
-- On SEMICOLON reduce production objInitializer -> L_BRACE petr4_list(objDeclaration) R_BRACE

State 629:
list_aux(objDeclaration) -> list_aux(objDeclaration) . objDeclaration [ VOID VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
petr4_list(objDeclaration) -> list_aux(objDeclaration) . [ R_BRACE ]
-- On VOID shift to state 1
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 11
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On varName shift to state 479
-- On typeRef shift to state 630
-- On typeOrVoid shift to state 462
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On objDeclaration shift to state 631
-- On nonempty_list_aux(annotation) shift to state 325
-- On instantiation shift to state 632
-- On headerStackType shift to state 142
-- On functionPrototype shift to state 633
-- On functionDeclaration shift to state 636
-- On dotPrefix shift to state 143
-- On baseType shift to state 146
-- On annotations shift to state 637
-- On annotation shift to state 331
-- On R_BRACE reduce production petr4_list(objDeclaration) -> list_aux(objDeclaration)

State 630:
instantiation -> typeRef . L_PAREN argumentList R_PAREN name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON R_BRACE PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
instantiation -> typeRef . L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON R_BRACE PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
typeOrVoid -> typeRef . [ TYPE STATE NAME KEY ENTRIES APPLY ACTIONS ]
-- On L_PAREN shift to state 620
-- On TYPE reduce production typeOrVoid -> typeRef
-- On STATE reduce production typeOrVoid -> typeRef
-- On NAME reduce production typeOrVoid -> typeRef
-- On KEY reduce production typeOrVoid -> typeRef
-- On ENTRIES reduce production typeOrVoid -> typeRef
-- On APPLY reduce production typeOrVoid -> typeRef
-- On ACTIONS reduce production typeOrVoid -> typeRef

State 631:
list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration . [ VOID VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On VOID reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On VARBIT reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On TUPLE reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On STRING reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On R_BRACE reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On PRAGMA reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On NAME reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On INT reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On ERROR reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On DOT reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On BOOL reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On BIT reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration
-- On AT reduce production list_aux(objDeclaration) -> list_aux(objDeclaration) objDeclaration

State 632:
objDeclaration -> instantiation . [ VOID VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On VOID reduce production objDeclaration -> instantiation
-- On VARBIT reduce production objDeclaration -> instantiation
-- On TUPLE reduce production objDeclaration -> instantiation
-- On STRING reduce production objDeclaration -> instantiation
-- On R_BRACE reduce production objDeclaration -> instantiation
-- On PRAGMA reduce production objDeclaration -> instantiation
-- On NAME reduce production objDeclaration -> instantiation
-- On INT reduce production objDeclaration -> instantiation
-- On ERROR reduce production objDeclaration -> instantiation
-- On DOT reduce production objDeclaration -> instantiation
-- On BOOL reduce production objDeclaration -> instantiation
-- On BIT reduce production objDeclaration -> instantiation
-- On AT reduce production objDeclaration -> instantiation

State 633:
functionDeclaration -> functionPrototype . blockStatement pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON R_BRACE PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On PRAGMA shift to state 207
-- On L_BRACE shift to state 532
-- On AT shift to state 302
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On blockStatement shift to state 634
-- On annotations shift to state 551
-- On annotation shift to state 331

State 634:
functionDeclaration -> functionPrototype blockStatement . pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON R_BRACE PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On pop_scope shift to state 635
-- On VOID reduce production pop_scope ->
-- On VARBIT reduce production pop_scope ->
-- On TYPEDEF reduce production pop_scope ->
-- On TYPE reduce production pop_scope ->
-- On TUPLE reduce production pop_scope ->
-- On STRUCT reduce production pop_scope ->
-- On STRING reduce production pop_scope ->
-- On SEMICOLON reduce production pop_scope ->
-- On R_BRACE reduce production pop_scope ->
-- On PRAGMA reduce production pop_scope ->
-- On PARSER reduce production pop_scope ->
-- On PACKAGE reduce production pop_scope ->
-- On NAME reduce production pop_scope ->
-- On MATCH_KIND reduce production pop_scope ->
-- On INT reduce production pop_scope ->
-- On HEADER_UNION reduce production pop_scope ->
-- On HEADER reduce production pop_scope ->
-- On EXTERN reduce production pop_scope ->
-- On ERROR reduce production pop_scope ->
-- On ENUM reduce production pop_scope ->
-- On END reduce production pop_scope ->
-- On DOT reduce production pop_scope ->
-- On CONTROL reduce production pop_scope ->
-- On CONST reduce production pop_scope ->
-- On BOOL reduce production pop_scope ->
-- On BIT reduce production pop_scope ->
-- On AT reduce production pop_scope ->
-- On ACTION reduce production pop_scope ->

State 635:
functionDeclaration -> functionPrototype blockStatement pop_scope . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON R_BRACE PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On VARBIT reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On TYPEDEF reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On TYPE reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On TUPLE reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On STRUCT reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On STRING reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On SEMICOLON reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On R_BRACE reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On PRAGMA reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On PARSER reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On PACKAGE reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On NAME reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On MATCH_KIND reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On INT reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On HEADER_UNION reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On HEADER reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On EXTERN reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On ERROR reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On ENUM reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On END reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On DOT reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On CONTROL reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On CONST reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On BOOL reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On BIT reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On AT reduce production functionDeclaration -> functionPrototype blockStatement pop_scope
-- On ACTION reduce production functionDeclaration -> functionPrototype blockStatement pop_scope

State 636:
objDeclaration -> functionDeclaration . [ VOID VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On VOID reduce production objDeclaration -> functionDeclaration
-- On VARBIT reduce production objDeclaration -> functionDeclaration
-- On TUPLE reduce production objDeclaration -> functionDeclaration
-- On STRING reduce production objDeclaration -> functionDeclaration
-- On R_BRACE reduce production objDeclaration -> functionDeclaration
-- On PRAGMA reduce production objDeclaration -> functionDeclaration
-- On NAME reduce production objDeclaration -> functionDeclaration
-- On INT reduce production objDeclaration -> functionDeclaration
-- On ERROR reduce production objDeclaration -> functionDeclaration
-- On DOT reduce production objDeclaration -> functionDeclaration
-- On BOOL reduce production objDeclaration -> functionDeclaration
-- On BIT reduce production objDeclaration -> functionDeclaration
-- On AT reduce production objDeclaration -> functionDeclaration

State 637:
instantiation -> annotations . typeRef L_PAREN argumentList R_PAREN name SEMICOLON [ VOID VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
instantiation -> annotations . typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON [ VOID VARBIT TUPLE STRING R_BRACE PRAGMA NAME INT ERROR DOT BOOL BIT AT ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeRef shift to state 638
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 638:
instantiation -> annotations typeRef . L_PAREN argumentList R_PAREN name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON R_BRACE PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
instantiation -> annotations typeRef . L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON R_BRACE PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On L_PAREN shift to state 639

State 639:
instantiation -> annotations typeRef L_PAREN . argumentList R_PAREN name SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
instantiation -> annotations typeRef L_PAREN . argumentList R_PAREN name ASSIGN objInitializer SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 57
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,argument) shift to state 58
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,argument) shift to state 71
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 61
-- On expression shift to state 72
-- On dotPrefix shift to state 91
-- On argumentList shift to state 640
-- On argument shift to state 135
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) ->
-- On COMMA reduce production separated_list_aux(COMMA,argument) ->

State 640:
instantiation -> annotations typeRef L_PAREN argumentList . R_PAREN name SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
instantiation -> annotations typeRef L_PAREN argumentList . R_PAREN name ASSIGN objInitializer SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On R_PAREN shift to state 641

State 641:
instantiation -> annotations typeRef L_PAREN argumentList R_PAREN . name SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
instantiation -> annotations typeRef L_PAREN argumentList R_PAREN . name ASSIGN objInitializer SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 642

State 642:
instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name . SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name . ASSIGN objInitializer SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On SEMICOLON shift to state 643
-- On ASSIGN shift to state 644

State 643:
instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On VARBIT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On VALUESET reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On TYPEDEF reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On TYPE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On TUPLE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On TABLE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On SWITCH reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On STRUCT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On STRING reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On STATE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On SEMICOLON reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On R_BRACE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On RETURN reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On PRAGMA reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On PARSER reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On PACKAGE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On NAME reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On MATCH_KIND reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On L_BRACE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On KEY reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On INT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On IF reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On HEADER_UNION reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On HEADER reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On EXTERN reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On EXIT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On ERROR reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On ENUM reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On ENTRIES reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On END reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On DOT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On CONTROL reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On CONST reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On BOOL reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On BIT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On AT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On APPLY reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On ACTIONS reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON
-- On ACTION reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name SEMICOLON

State 644:
instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN . objInitializer SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On L_BRACE shift to state 626
-- On objInitializer shift to state 645

State 645:
instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer . SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On SEMICOLON shift to state 646

State 646:
instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On VARBIT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On VALUESET reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On TYPEDEF reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On TYPE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On TUPLE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On TABLE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On SWITCH reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On STRUCT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On STRING reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On STATE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On SEMICOLON reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On R_BRACE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On RETURN reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On PRAGMA reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On PARSER reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On PACKAGE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On NAME reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On MATCH_KIND reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On L_BRACE reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On KEY reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On INT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On IF reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On HEADER_UNION reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On HEADER reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On EXTERN reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On EXIT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On ERROR reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On ENUM reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On ENTRIES reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On END reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On DOT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On CONTROL reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On CONST reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On BOOL reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On BIT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On AT reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On APPLY reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On ACTIONS reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On ACTION reduce production instantiation -> annotations typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON

State 647:
instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer . SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On SEMICOLON shift to state 648

State 648:
instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On VARBIT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On VALUESET reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On TYPEDEF reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On TYPE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On TUPLE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On TABLE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On SWITCH reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On STRUCT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On STRING reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On STATE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On SEMICOLON reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On R_BRACE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On RETURN reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On PRAGMA reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On PARSER reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On PACKAGE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On NAME reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On MATCH_KIND reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On L_BRACE reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On KEY reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On INT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On IF reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On HEADER_UNION reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On HEADER reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On EXTERN reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On EXIT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On ERROR reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On ENUM reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On ENTRIES reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On END reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On DOT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On CONTROL reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On CONST reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On BOOL reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On BIT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On AT reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On APPLY reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On ACTIONS reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON
-- On ACTION reduce production instantiation -> typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON

State 649:
variableDeclaration -> typeRef name . optInitialValue SEMICOLON [ VARBIT VALUESET TYPE TUPLE TRANSITION TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On ASSIGN shift to state 650
-- On optInitialValue shift to state 652
-- On SEMICOLON reduce production optInitialValue ->

State 650:
optInitialValue -> ASSIGN . initialValue [ SEMICOLON ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On initialValue shift to state 651
-- On expression shift to state 526
-- On dotPrefix shift to state 91

State 651:
optInitialValue -> ASSIGN initialValue . [ SEMICOLON ]
-- On SEMICOLON reduce production optInitialValue -> ASSIGN initialValue

State 652:
variableDeclaration -> typeRef name optInitialValue . SEMICOLON [ VARBIT VALUESET TYPE TUPLE TRANSITION TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On SEMICOLON shift to state 653

State 653:
variableDeclaration -> typeRef name optInitialValue SEMICOLON . [ VARBIT VALUESET TYPE TUPLE TRANSITION TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VARBIT reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On VALUESET reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On TYPE reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On TUPLE reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On TRANSITION reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On TABLE reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On SWITCH reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On STRING reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On STATE reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On SEMICOLON reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On R_BRACE reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On RETURN reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On PRAGMA reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On NAME reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On L_BRACE reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On KEY reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On INT reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On IF reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On EXIT reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On ERROR reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On ENTRIES reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On DOT reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On CONST reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On BOOL reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On BIT reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On AT reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On APPLY reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On ACTIONS reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON
-- On ACTION reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON

State 654:
directApplication -> typeName . DOT APPLY L_PAREN argumentList R_PAREN SEMICOLON [ VARBIT TYPE TUPLE TRANSITION SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
headerStackType -> typeName . L_BRACKET expression R_BRACKET [ TYPE STATE NAME L_PAREN KEY ENTRIES APPLY ACTIONS ]
typeRef -> typeName . [ TYPE STATE NAME L_PAREN KEY ENTRIES APPLY ACTIONS ]
-- On L_BRACKET shift to state 111
-- On DOT shift to state 571
-- On TYPE reduce production typeRef -> typeName
-- On STATE reduce production typeRef -> typeName
-- On NAME reduce production typeRef -> typeName
-- On L_PAREN reduce production typeRef -> typeName
-- On KEY reduce production typeRef -> typeName
-- On ENTRIES reduce production typeRef -> typeName
-- On APPLY reduce production typeRef -> typeName
-- On ACTIONS reduce production typeRef -> typeName

State 655:
list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On TYPE reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On TUPLE reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On SWITCH reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On STRING reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On STATE reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On SEMICOLON reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On R_BRACE reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On RETURN reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On PRAGMA reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On NAME reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On L_BRACE reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On KEY reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On INT reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On IF reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On EXIT reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On ERROR reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On ENTRIES reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On DOT reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On CONST reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On BOOL reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On BIT reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On AT reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On APPLY reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration
-- On ACTIONS reduce production list_aux(statementOrDeclaration) -> list_aux(statementOrDeclaration) statementOrDeclaration

State 656:
statementOrDeclaration -> statement . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statementOrDeclaration -> statement
-- On TYPE reduce production statementOrDeclaration -> statement
-- On TUPLE reduce production statementOrDeclaration -> statement
-- On SWITCH reduce production statementOrDeclaration -> statement
-- On STRING reduce production statementOrDeclaration -> statement
-- On STATE reduce production statementOrDeclaration -> statement
-- On SEMICOLON reduce production statementOrDeclaration -> statement
-- On R_BRACE reduce production statementOrDeclaration -> statement
-- On RETURN reduce production statementOrDeclaration -> statement
-- On PRAGMA reduce production statementOrDeclaration -> statement
-- On NAME reduce production statementOrDeclaration -> statement
-- On L_BRACE reduce production statementOrDeclaration -> statement
-- On KEY reduce production statementOrDeclaration -> statement
-- On INT reduce production statementOrDeclaration -> statement
-- On IF reduce production statementOrDeclaration -> statement
-- On EXIT reduce production statementOrDeclaration -> statement
-- On ERROR reduce production statementOrDeclaration -> statement
-- On ENTRIES reduce production statementOrDeclaration -> statement
-- On DOT reduce production statementOrDeclaration -> statement
-- On CONST reduce production statementOrDeclaration -> statement
-- On BOOL reduce production statementOrDeclaration -> statement
-- On BIT reduce production statementOrDeclaration -> statement
-- On AT reduce production statementOrDeclaration -> statement
-- On APPLY reduce production statementOrDeclaration -> statement
-- On ACTIONS reduce production statementOrDeclaration -> statement

State 657:
statementOrDeclaration -> instantiation . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statementOrDeclaration -> instantiation
-- On TYPE reduce production statementOrDeclaration -> instantiation
-- On TUPLE reduce production statementOrDeclaration -> instantiation
-- On SWITCH reduce production statementOrDeclaration -> instantiation
-- On STRING reduce production statementOrDeclaration -> instantiation
-- On STATE reduce production statementOrDeclaration -> instantiation
-- On SEMICOLON reduce production statementOrDeclaration -> instantiation
-- On R_BRACE reduce production statementOrDeclaration -> instantiation
-- On RETURN reduce production statementOrDeclaration -> instantiation
-- On PRAGMA reduce production statementOrDeclaration -> instantiation
-- On NAME reduce production statementOrDeclaration -> instantiation
-- On L_BRACE reduce production statementOrDeclaration -> instantiation
-- On KEY reduce production statementOrDeclaration -> instantiation
-- On INT reduce production statementOrDeclaration -> instantiation
-- On IF reduce production statementOrDeclaration -> instantiation
-- On EXIT reduce production statementOrDeclaration -> instantiation
-- On ERROR reduce production statementOrDeclaration -> instantiation
-- On ENTRIES reduce production statementOrDeclaration -> instantiation
-- On DOT reduce production statementOrDeclaration -> instantiation
-- On CONST reduce production statementOrDeclaration -> instantiation
-- On BOOL reduce production statementOrDeclaration -> instantiation
-- On BIT reduce production statementOrDeclaration -> instantiation
-- On AT reduce production statementOrDeclaration -> instantiation
-- On APPLY reduce production statementOrDeclaration -> instantiation
-- On ACTIONS reduce production statementOrDeclaration -> instantiation

State 658:
statementOrDeclaration -> constantDeclaration . [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production statementOrDeclaration -> constantDeclaration
-- On TYPE reduce production statementOrDeclaration -> constantDeclaration
-- On TUPLE reduce production statementOrDeclaration -> constantDeclaration
-- On SWITCH reduce production statementOrDeclaration -> constantDeclaration
-- On STRING reduce production statementOrDeclaration -> constantDeclaration
-- On STATE reduce production statementOrDeclaration -> constantDeclaration
-- On SEMICOLON reduce production statementOrDeclaration -> constantDeclaration
-- On R_BRACE reduce production statementOrDeclaration -> constantDeclaration
-- On RETURN reduce production statementOrDeclaration -> constantDeclaration
-- On PRAGMA reduce production statementOrDeclaration -> constantDeclaration
-- On NAME reduce production statementOrDeclaration -> constantDeclaration
-- On L_BRACE reduce production statementOrDeclaration -> constantDeclaration
-- On KEY reduce production statementOrDeclaration -> constantDeclaration
-- On INT reduce production statementOrDeclaration -> constantDeclaration
-- On IF reduce production statementOrDeclaration -> constantDeclaration
-- On EXIT reduce production statementOrDeclaration -> constantDeclaration
-- On ERROR reduce production statementOrDeclaration -> constantDeclaration
-- On ENTRIES reduce production statementOrDeclaration -> constantDeclaration
-- On DOT reduce production statementOrDeclaration -> constantDeclaration
-- On CONST reduce production statementOrDeclaration -> constantDeclaration
-- On BOOL reduce production statementOrDeclaration -> constantDeclaration
-- On BIT reduce production statementOrDeclaration -> constantDeclaration
-- On AT reduce production statementOrDeclaration -> constantDeclaration
-- On APPLY reduce production statementOrDeclaration -> constantDeclaration
-- On ACTIONS reduce production statementOrDeclaration -> constantDeclaration

State 659:
blockStatement -> annotations . L_BRACE push_scope petr4_list(statementOrDeclaration) R_BRACE pop_scope [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
constantDeclaration -> annotations . CONST typeRef name ASSIGN initialValue SEMICOLON [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
instantiation -> annotations . typeRef L_PAREN argumentList R_PAREN name SEMICOLON [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
instantiation -> annotations . typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
variableDeclaration -> annotations . typeRef name optInitialValue SEMICOLON [ VARBIT TYPE TUPLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On L_BRACE shift to state 552
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On CONST shift to state 660
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeRef shift to state 666
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 660:
constantDeclaration -> annotations CONST . typeRef name ASSIGN initialValue SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeRef shift to state 661
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 661:
constantDeclaration -> annotations CONST typeRef . name ASSIGN initialValue SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 662

State 662:
constantDeclaration -> annotations CONST typeRef name . ASSIGN initialValue SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On ASSIGN shift to state 663

State 663:
constantDeclaration -> annotations CONST typeRef name ASSIGN . initialValue SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On initialValue shift to state 664
-- On expression shift to state 526
-- On dotPrefix shift to state 91

State 664:
constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue . SEMICOLON [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On SEMICOLON shift to state 665

State 665:
constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON . [ VOID VARBIT VALUESET TYPEDEF TYPE TUPLE TRANSITION TABLE SWITCH STRUCT STRING STATE SEMICOLON R_BRACE RETURN PRAGMA PARSER PACKAGE NAME MATCH_KIND L_BRACE KEY INT IF HEADER_UNION HEADER EXTERN EXIT ERROR ENUM ENTRIES END DOT CONTROL CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VOID reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On VARBIT reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On VALUESET reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On TYPEDEF reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On TYPE reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On TUPLE reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On TRANSITION reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On TABLE reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On SWITCH reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On STRUCT reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On STRING reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On STATE reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On SEMICOLON reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On R_BRACE reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On RETURN reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On PRAGMA reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On PARSER reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On PACKAGE reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On NAME reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On MATCH_KIND reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On L_BRACE reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On KEY reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On INT reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On IF reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On HEADER_UNION reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On HEADER reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On EXTERN reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On EXIT reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On ERROR reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On ENUM reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On ENTRIES reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On END reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On DOT reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On CONTROL reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On CONST reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On BOOL reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On BIT reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On AT reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On APPLY reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On ACTIONS reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON
-- On ACTION reduce production constantDeclaration -> annotations CONST typeRef name ASSIGN initialValue SEMICOLON

State 666:
instantiation -> annotations typeRef . L_PAREN argumentList R_PAREN name SEMICOLON [ VARBIT VALUESET TYPE TUPLE TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
instantiation -> annotations typeRef . L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON [ VARBIT VALUESET TYPE TUPLE TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
variableDeclaration -> annotations typeRef . name optInitialValue SEMICOLON [ VARBIT VALUESET TYPE TUPLE TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On L_PAREN shift to state 639
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 667

State 667:
variableDeclaration -> annotations typeRef name . optInitialValue SEMICOLON [ VARBIT VALUESET TYPE TUPLE TRANSITION TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On ASSIGN shift to state 650
-- On optInitialValue shift to state 668
-- On SEMICOLON reduce production optInitialValue ->

State 668:
variableDeclaration -> annotations typeRef name optInitialValue . SEMICOLON [ VARBIT VALUESET TYPE TUPLE TRANSITION TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On SEMICOLON shift to state 669

State 669:
variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON . [ VARBIT VALUESET TYPE TUPLE TRANSITION TABLE SWITCH STRING STATE SEMICOLON R_BRACE RETURN PRAGMA NAME L_BRACE KEY INT IF EXIT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ACTION ]
-- On VARBIT reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On VALUESET reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On TYPE reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On TUPLE reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On TRANSITION reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On TABLE reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On SWITCH reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On STRING reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On STATE reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On SEMICOLON reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On R_BRACE reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On RETURN reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On PRAGMA reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On NAME reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On L_BRACE reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On KEY reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On INT reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On IF reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On EXIT reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On ERROR reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On ENTRIES reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On DOT reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On CONST reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On BOOL reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On BIT reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On AT reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On APPLY reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On ACTIONS reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON
-- On ACTION reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON

State 670:
actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement . [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On VOID reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On VARBIT reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On TYPEDEF reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On TYPE reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On TUPLE reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On TABLE reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On STRUCT reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On STRING reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On SEMICOLON reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On PRAGMA reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On PARSER reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On PACKAGE reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On NAME reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On MATCH_KIND reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On INT reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On HEADER_UNION reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On HEADER reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On EXTERN reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On ERROR reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On ENUM reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On END reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On DOT reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On CONTROL reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On CONST reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On BOOL reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On BIT reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On AT reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On APPLY reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On ACTION reduce production actionDeclaration -> ACTION name L_PAREN parameterList R_PAREN blockStatement

State 671:
typeDeclaration -> typedefDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typeDeclaration -> typedefDeclaration
-- On VARBIT reduce production typeDeclaration -> typedefDeclaration
-- On TYPEDEF reduce production typeDeclaration -> typedefDeclaration
-- On TYPE reduce production typeDeclaration -> typedefDeclaration
-- On TUPLE reduce production typeDeclaration -> typedefDeclaration
-- On STRUCT reduce production typeDeclaration -> typedefDeclaration
-- On STRING reduce production typeDeclaration -> typedefDeclaration
-- On SEMICOLON reduce production typeDeclaration -> typedefDeclaration
-- On PRAGMA reduce production typeDeclaration -> typedefDeclaration
-- On PARSER reduce production typeDeclaration -> typedefDeclaration
-- On PACKAGE reduce production typeDeclaration -> typedefDeclaration
-- On NAME reduce production typeDeclaration -> typedefDeclaration
-- On MATCH_KIND reduce production typeDeclaration -> typedefDeclaration
-- On INT reduce production typeDeclaration -> typedefDeclaration
-- On HEADER_UNION reduce production typeDeclaration -> typedefDeclaration
-- On HEADER reduce production typeDeclaration -> typedefDeclaration
-- On EXTERN reduce production typeDeclaration -> typedefDeclaration
-- On ERROR reduce production typeDeclaration -> typedefDeclaration
-- On ENUM reduce production typeDeclaration -> typedefDeclaration
-- On END reduce production typeDeclaration -> typedefDeclaration
-- On DOT reduce production typeDeclaration -> typedefDeclaration
-- On CONTROL reduce production typeDeclaration -> typedefDeclaration
-- On CONST reduce production typeDeclaration -> typedefDeclaration
-- On BOOL reduce production typeDeclaration -> typedefDeclaration
-- On BIT reduce production typeDeclaration -> typedefDeclaration
-- On AT reduce production typeDeclaration -> typedefDeclaration
-- On ACTION reduce production typeDeclaration -> typedefDeclaration

State 672:
topDeclaration -> typeDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production topDeclaration -> typeDeclaration
-- On VARBIT reduce production topDeclaration -> typeDeclaration
-- On TYPEDEF reduce production topDeclaration -> typeDeclaration
-- On TYPE reduce production topDeclaration -> typeDeclaration
-- On TUPLE reduce production topDeclaration -> typeDeclaration
-- On STRUCT reduce production topDeclaration -> typeDeclaration
-- On STRING reduce production topDeclaration -> typeDeclaration
-- On SEMICOLON reduce production topDeclaration -> typeDeclaration
-- On PRAGMA reduce production topDeclaration -> typeDeclaration
-- On PARSER reduce production topDeclaration -> typeDeclaration
-- On PACKAGE reduce production topDeclaration -> typeDeclaration
-- On NAME reduce production topDeclaration -> typeDeclaration
-- On MATCH_KIND reduce production topDeclaration -> typeDeclaration
-- On INT reduce production topDeclaration -> typeDeclaration
-- On HEADER_UNION reduce production topDeclaration -> typeDeclaration
-- On HEADER reduce production topDeclaration -> typeDeclaration
-- On EXTERN reduce production topDeclaration -> typeDeclaration
-- On ERROR reduce production topDeclaration -> typeDeclaration
-- On ENUM reduce production topDeclaration -> typeDeclaration
-- On END reduce production topDeclaration -> typeDeclaration
-- On DOT reduce production topDeclaration -> typeDeclaration
-- On CONTROL reduce production topDeclaration -> typeDeclaration
-- On CONST reduce production topDeclaration -> typeDeclaration
-- On BOOL reduce production topDeclaration -> typeDeclaration
-- On BIT reduce production topDeclaration -> typeDeclaration
-- On AT reduce production topDeclaration -> typeDeclaration
-- On ACTION reduce production topDeclaration -> typeDeclaration

State 673:
topDeclarationList -> SEMICOLON topDeclarationList . [ END ]
-- On END reduce production topDeclarationList -> SEMICOLON topDeclarationList

State 674:
topDeclarationList -> topDeclaration . topDeclarationList [ END ]
-- On VOID shift to state 1
-- On VARBIT shift to state 2
-- On TYPEDEF shift to state 200
-- On TYPE shift to state 407
-- On TUPLE shift to state 16
-- On STRUCT shift to state 201
-- On STRING shift to state 18
-- On SEMICOLON shift to state 414
-- On PRAGMA shift to state 207
-- On PARSER shift to state 415
-- On PACKAGE shift to state 449
-- On NAME shift to state 11
-- On MATCH_KIND shift to state 455
-- On INT shift to state 20
-- On HEADER_UNION shift to state 332
-- On HEADER shift to state 337
-- On EXTERN shift to state 459
-- On ERROR shift to state 510
-- On ENUM shift to state 342
-- On DOT shift to state 38
-- On CONTROL shift to state 514
-- On CONST shift to state 520
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On ACTION shift to state 527
-- On varName shift to state 479
-- On typedefDeclaration shift to state 671
-- On typeRef shift to state 630
-- On typeOrVoid shift to state 462
-- On typeName shift to state 138
-- On typeDeclaration shift to state 672
-- On tupleType shift to state 128
-- On topDeclarationList shift to state 675
-- On topDeclaration shift to state 674
-- On structTypeDeclaration shift to state 371
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parserTypeDeclaration shift to state 676
-- On parserDeclaration shift to state 810
-- On packageTypeDeclaration shift to state 811
-- On nonempty_list_aux(annotation) shift to state 325
-- On matchKindDeclaration shift to state 814
-- On instantiation shift to state 815
-- On headerUnionDeclaration shift to state 372
-- On headerTypeDeclaration shift to state 373
-- On headerStackType shift to state 142
-- On functionPrototype shift to state 633
-- On functionDeclaration shift to state 816
-- On externDeclaration shift to state 817
-- On errorDeclaration shift to state 818
-- On enumDeclaration shift to state 374
-- On dotPrefix shift to state 143
-- On derivedTypeDeclaration shift to state 819
-- On controlTypeDeclaration shift to state 820
-- On controlDeclaration shift to state 930
-- On constantDeclaration shift to state 931
-- On baseType shift to state 146
-- On annotations shift to state 932
-- On annotation shift to state 331
-- On actionDeclaration shift to state 975
-- On END reduce production topDeclarationList ->

State 675:
topDeclarationList -> topDeclaration topDeclarationList . [ END ]
-- On END reduce production topDeclarationList -> topDeclaration topDeclarationList

State 676:
parserDeclaration -> parserTypeDeclaration . optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
typeDeclaration -> parserTypeDeclaration . pop_scope SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On L_PAREN shift to state 677
-- On pop_scope shift to state 680
-- On optConstructorParameters shift to state 682
-- On SEMICOLON reduce production pop_scope ->
-- On L_BRACE reduce production optConstructorParameters ->

State 677:
optConstructorParameters -> L_PAREN . parameterList R_PAREN [ L_BRACE ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 678
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 678:
optConstructorParameters -> L_PAREN parameterList . R_PAREN [ L_BRACE ]
-- On R_PAREN shift to state 679

State 679:
optConstructorParameters -> L_PAREN parameterList R_PAREN . [ L_BRACE ]
-- On L_BRACE reduce production optConstructorParameters -> L_PAREN parameterList R_PAREN

State 680:
typeDeclaration -> parserTypeDeclaration pop_scope . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 681

State 681:
typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On VARBIT reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On TYPEDEF reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On TYPE reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On TUPLE reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On STRUCT reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On STRING reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On SEMICOLON reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On PRAGMA reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On PARSER reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On PACKAGE reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On NAME reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On MATCH_KIND reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On INT reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On HEADER_UNION reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On HEADER reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On EXTERN reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On ERROR reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On ENUM reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On END reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On DOT reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On CONTROL reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On CONST reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On BOOL reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On BIT reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On AT reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON
-- On ACTION reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON

State 682:
parserDeclaration -> parserTypeDeclaration optConstructorParameters . L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On L_BRACE shift to state 683

State 683:
parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE . list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On list_aux(parserLocalElement) shift to state 684
-- On VARBIT reduce production list_aux(parserLocalElement) ->
-- On VALUESET reduce production list_aux(parserLocalElement) ->
-- On TUPLE reduce production list_aux(parserLocalElement) ->
-- On STRING reduce production list_aux(parserLocalElement) ->
-- On STATE reduce production list_aux(parserLocalElement) ->
-- On PRAGMA reduce production list_aux(parserLocalElement) ->
-- On NAME reduce production list_aux(parserLocalElement) ->
-- On INT reduce production list_aux(parserLocalElement) ->
-- On ERROR reduce production list_aux(parserLocalElement) ->
-- On DOT reduce production list_aux(parserLocalElement) ->
-- On CONST reduce production list_aux(parserLocalElement) ->
-- On BOOL reduce production list_aux(parserLocalElement) ->
-- On BIT reduce production list_aux(parserLocalElement) ->
-- On AT reduce production list_aux(parserLocalElement) ->

State 684:
list_aux(parserLocalElement) -> list_aux(parserLocalElement) . parserLocalElement [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) . petr4_nonempty_list(parserState) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VARBIT shift to state 2
-- On VALUESET shift to state 685
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 708
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On CONST shift to state 520
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On variableDeclaration shift to state 767
-- On valueSetDeclaration shift to state 768
-- On typeRef shift to state 619
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(parserState) shift to state 769
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parserState shift to state 772
-- On parserLocalElement shift to state 773
-- On nonempty_list_aux(parserState) shift to state 774
-- On nonempty_list_aux(annotation) shift to state 325
-- On instantiation shift to state 784
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On constantDeclaration shift to state 785
-- On baseType shift to state 146
-- On annotations shift to state 786
-- On annotation shift to state 331

State 685:
valueSetDeclaration -> VALUESET . L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
valueSetDeclaration -> VALUESET . L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
valueSetDeclaration -> VALUESET . L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On L_ANGLE shift to state 686

State 686:
valueSetDeclaration -> VALUESET L_ANGLE . baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
valueSetDeclaration -> VALUESET L_ANGLE . tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
valueSetDeclaration -> VALUESET L_ANGLE . typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeName shift to state 687
-- On tupleType shift to state 694
-- On prefixedType shift to state 582
-- On dotPrefix shift to state 143
-- On baseType shift to state 701

State 687:
valueSetDeclaration -> VALUESET L_ANGLE typeName . R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On R_ANGLE shift to state 688

State 688:
valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE . L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On L_PAREN shift to state 689

State 689:
valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN . expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 690
-- On dotPrefix shift to state 91

State 690:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression . R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 691
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 691:
valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN . name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 692

State 692:
valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name . SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SEMICOLON shift to state 693

State 693:
valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON . [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On VALUESET reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On TUPLE reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STRING reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STATE reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On PRAGMA reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On NAME reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On INT reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On ERROR reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On DOT reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On CONST reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BOOL reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BIT reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On AT reduce production valueSetDeclaration -> VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON

State 694:
valueSetDeclaration -> VALUESET L_ANGLE tupleType . R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On R_ANGLE shift to state 695

State 695:
valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE . L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On L_PAREN shift to state 696

State 696:
valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN . expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 697
-- On dotPrefix shift to state 91

State 697:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression . R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 698
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 698:
valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN . name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 699

State 699:
valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name . SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SEMICOLON shift to state 700

State 700:
valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON . [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On VALUESET reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On TUPLE reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STRING reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STATE reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On PRAGMA reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On NAME reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On INT reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On ERROR reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On DOT reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On CONST reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BOOL reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BIT reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On AT reduce production valueSetDeclaration -> VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON

State 701:
valueSetDeclaration -> VALUESET L_ANGLE baseType . R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On R_ANGLE shift to state 702

State 702:
valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE . L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On L_PAREN shift to state 703

State 703:
valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN . expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 704
-- On dotPrefix shift to state 91

State 704:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression . R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 705
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 705:
valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN . name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 706

State 706:
valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name . SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SEMICOLON shift to state 707

State 707:
valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON . [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On VALUESET reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On TUPLE reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STRING reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STATE reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On PRAGMA reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On NAME reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On INT reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On ERROR reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On DOT reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On CONST reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BOOL reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BIT reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On AT reduce production valueSetDeclaration -> VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON

State 708:
parserState -> STATE . push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On push_name shift to state 709
-- On nonTypeName shift to state 35
-- On name shift to state 448

State 709:
parserState -> STATE push_name . L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On L_BRACE shift to state 710

State 710:
parserState -> STATE push_name L_BRACE . petr4_list(parserStatement) transitionStatement R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On petr4_list(parserStatement) shift to state 711
-- On list_aux(parserStatement) shift to state 751
-- On VARBIT reduce production list_aux(parserStatement) ->
-- On TYPE reduce production list_aux(parserStatement) ->
-- On TUPLE reduce production list_aux(parserStatement) ->
-- On TRANSITION reduce production list_aux(parserStatement) ->
-- On STRING reduce production list_aux(parserStatement) ->
-- On STATE reduce production list_aux(parserStatement) ->
-- On R_BRACE reduce production list_aux(parserStatement) ->
-- On PRAGMA reduce production list_aux(parserStatement) ->
-- On NAME reduce production list_aux(parserStatement) ->
-- On L_BRACE reduce production list_aux(parserStatement) ->
-- On KEY reduce production list_aux(parserStatement) ->
-- On INT reduce production list_aux(parserStatement) ->
-- On ERROR reduce production list_aux(parserStatement) ->
-- On ENTRIES reduce production list_aux(parserStatement) ->
-- On DOT reduce production list_aux(parserStatement) ->
-- On CONST reduce production list_aux(parserStatement) ->
-- On BOOL reduce production list_aux(parserStatement) ->
-- On BIT reduce production list_aux(parserStatement) ->
-- On AT reduce production list_aux(parserStatement) ->
-- On APPLY reduce production list_aux(parserStatement) ->
-- On ACTIONS reduce production list_aux(parserStatement) ->

State 711:
parserState -> STATE push_name L_BRACE petr4_list(parserStatement) . transitionStatement R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On TRANSITION shift to state 712
-- On transitionStatement shift to state 748
-- On R_BRACE reduce production transitionStatement ->

State 712:
transitionStatement -> TRANSITION . stateExpression [ R_BRACE ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On SELECT shift to state 713
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On stateExpression shift to state 744
-- On selectExpression shift to state 745
-- On nonTypeName shift to state 35
-- On name shift to state 746

State 713:
selectExpression -> SELECT . L_PAREN expressionList R_PAREN L_BRACE petr4_list(selectCase) R_BRACE [ R_BRACE ]
-- On L_PAREN shift to state 714

State 714:
selectExpression -> SELECT L_PAREN . expressionList R_PAREN L_BRACE petr4_list(selectCase) R_BRACE [ R_BRACE ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,expression) shift to state 173
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,expression) shift to state 176
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expressionList shift to state 715
-- On expression shift to state 179
-- On dotPrefix shift to state 91
-- On R_PAREN reduce production separated_list_aux(COMMA,expression) ->
-- On COMMA reduce production separated_list_aux(COMMA,expression) ->

State 715:
selectExpression -> SELECT L_PAREN expressionList . R_PAREN L_BRACE petr4_list(selectCase) R_BRACE [ R_BRACE ]
-- On R_PAREN shift to state 716

State 716:
selectExpression -> SELECT L_PAREN expressionList R_PAREN . L_BRACE petr4_list(selectCase) R_BRACE [ R_BRACE ]
-- On L_BRACE shift to state 717

State 717:
selectExpression -> SELECT L_PAREN expressionList R_PAREN L_BRACE . petr4_list(selectCase) R_BRACE [ R_BRACE ]
-- On petr4_list(selectCase) shift to state 718
-- On list_aux(selectCase) shift to state 720
-- On TYPE reduce production list_aux(selectCase) ->
-- On TRUE reduce production list_aux(selectCase) ->
-- On STRING_LITERAL reduce production list_aux(selectCase) ->
-- On STATE reduce production list_aux(selectCase) ->
-- On R_BRACE reduce production list_aux(selectCase) ->
-- On PLUS reduce production list_aux(selectCase) ->
-- On NOT reduce production list_aux(selectCase) ->
-- On NAME reduce production list_aux(selectCase) ->
-- On MINUS reduce production list_aux(selectCase) ->
-- On L_PAREN reduce production list_aux(selectCase) ->
-- On L_BRACE reduce production list_aux(selectCase) ->
-- On KEY reduce production list_aux(selectCase) ->
-- On INTEGER reduce production list_aux(selectCase) ->
-- On FALSE reduce production list_aux(selectCase) ->
-- On ERROR reduce production list_aux(selectCase) ->
-- On ENTRIES reduce production list_aux(selectCase) ->
-- On DOT reduce production list_aux(selectCase) ->
-- On DONTCARE reduce production list_aux(selectCase) ->
-- On DEFAULT reduce production list_aux(selectCase) ->
-- On COMPLEMENT reduce production list_aux(selectCase) ->
-- On APPLY reduce production list_aux(selectCase) ->
-- On ACTIONS reduce production list_aux(selectCase) ->

State 718:
selectExpression -> SELECT L_PAREN expressionList R_PAREN L_BRACE petr4_list(selectCase) . R_BRACE [ R_BRACE ]
-- On R_BRACE shift to state 719

State 719:
selectExpression -> SELECT L_PAREN expressionList R_PAREN L_BRACE petr4_list(selectCase) R_BRACE . [ R_BRACE ]
-- On R_BRACE reduce production selectExpression -> SELECT L_PAREN expressionList R_PAREN L_BRACE petr4_list(selectCase) R_BRACE

State 720:
list_aux(selectCase) -> list_aux(selectCase) . selectCase [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
petr4_list(selectCase) -> list_aux(selectCase) . [ R_BRACE ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 721
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 722
-- On DEFAULT shift to state 723
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tupleKeysetExpression shift to state 737
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On simpleKeysetExpression shift to state 738
-- On selectCase shift to state 739
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On keysetExpression shift to state 740
-- On expression shift to state 728
-- On dotPrefix shift to state 91
-- On R_BRACE reduce production petr4_list(selectCase) -> list_aux(selectCase)

State 721:
expression -> L_PAREN . expression R_PAREN [ SHL R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> L_PAREN . typeRef R_PAREN expression [ SHL R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
tupleKeysetExpression -> L_PAREN . separated_atLeastTwo_list(COMMA,simpleKeysetExpression) R_PAREN [ COLON ]
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On INT shift to state 20
-- On FALSE shift to state 25
-- On ERROR shift to state 107
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 722
-- On DEFAULT shift to state 723
-- On COMPLEMENT shift to state 39
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeRef shift to state 187
-- On typeName shift to state 110
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 129
-- On simpleKeysetExpression shift to state 724
-- On separated_nonempty_list_aux(COMMA,simpleKeysetExpression) shift to state 725
-- On separated_atLeastTwo_list_aux(COMMA,simpleKeysetExpression) shift to state 733
-- On separated_atLeastTwo_list(COMMA,simpleKeysetExpression) shift to state 734
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On headerStackType shift to state 142
-- On expression shift to state 736
-- On dotPrefix shift to state 91
-- On baseType shift to state 146

State 722:
simpleKeysetExpression -> DONTCARE . [ R_PAREN COMMA COLON ]
-- On R_PAREN reduce production simpleKeysetExpression -> DONTCARE
-- On COMMA reduce production simpleKeysetExpression -> DONTCARE
-- On COLON reduce production simpleKeysetExpression -> DONTCARE

State 723:
simpleKeysetExpression -> DEFAULT . [ R_PAREN COMMA COLON ]
-- On R_PAREN reduce production simpleKeysetExpression -> DEFAULT
-- On COMMA reduce production simpleKeysetExpression -> DEFAULT
-- On COLON reduce production simpleKeysetExpression -> DEFAULT

State 724:
separated_nonempty_list_aux(COMMA,simpleKeysetExpression) -> simpleKeysetExpression . [ COMMA ]
-- On COMMA reduce production separated_nonempty_list_aux(COMMA,simpleKeysetExpression) -> simpleKeysetExpression

State 725:
separated_atLeastTwo_list_aux(COMMA,simpleKeysetExpression) -> separated_nonempty_list_aux(COMMA,simpleKeysetExpression) . COMMA simpleKeysetExpression [ R_PAREN ]
separated_nonempty_list_aux(COMMA,simpleKeysetExpression) -> separated_nonempty_list_aux(COMMA,simpleKeysetExpression) . COMMA simpleKeysetExpression [ COMMA ]
-- On COMMA shift to state 726

State 726:
separated_atLeastTwo_list_aux(COMMA,simpleKeysetExpression) -> separated_nonempty_list_aux(COMMA,simpleKeysetExpression) COMMA . simpleKeysetExpression [ R_PAREN ]
separated_nonempty_list_aux(COMMA,simpleKeysetExpression) -> separated_nonempty_list_aux(COMMA,simpleKeysetExpression) COMMA . simpleKeysetExpression [ COMMA ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 722
-- On DEFAULT shift to state 723
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On simpleKeysetExpression shift to state 727
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 728
-- On dotPrefix shift to state 91

State 727:
separated_atLeastTwo_list_aux(COMMA,simpleKeysetExpression) -> separated_nonempty_list_aux(COMMA,simpleKeysetExpression) COMMA simpleKeysetExpression . [ R_PAREN ]
separated_nonempty_list_aux(COMMA,simpleKeysetExpression) -> separated_nonempty_list_aux(COMMA,simpleKeysetExpression) COMMA simpleKeysetExpression . [ COMMA ]
-- On R_PAREN reduce production separated_atLeastTwo_list_aux(COMMA,simpleKeysetExpression) -> separated_nonempty_list_aux(COMMA,simpleKeysetExpression) COMMA simpleKeysetExpression
-- On COMMA reduce production separated_nonempty_list_aux(COMMA,simpleKeysetExpression) -> separated_nonempty_list_aux(COMMA,simpleKeysetExpression) COMMA simpleKeysetExpression

State 728:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
simpleKeysetExpression -> expression . [ R_PAREN COMMA COLON ]
simpleKeysetExpression -> expression . MASK expression [ R_PAREN COMMA COLON ]
simpleKeysetExpression -> expression . RANGE expression [ R_PAREN COMMA COLON ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On RANGE shift to state 729
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On MASK shift to state 731
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On R_PAREN reduce production simpleKeysetExpression -> expression
-- On COMMA reduce production simpleKeysetExpression -> expression
-- On COLON reduce production simpleKeysetExpression -> expression

State 729:
simpleKeysetExpression -> expression RANGE . expression [ R_PAREN COMMA COLON ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 730
-- On dotPrefix shift to state 91

State 730:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
simpleKeysetExpression -> expression RANGE expression . [ R_PAREN COMMA COLON ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On R_PAREN reduce production simpleKeysetExpression -> expression RANGE expression
-- On COMMA reduce production simpleKeysetExpression -> expression RANGE expression
-- On COLON reduce production simpleKeysetExpression -> expression RANGE expression

State 731:
simpleKeysetExpression -> expression MASK . expression [ R_PAREN COMMA COLON ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 732
-- On dotPrefix shift to state 91

State 732:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA COLON BIT_XOR BIT_OR BIT_AND AND ]
simpleKeysetExpression -> expression MASK expression . [ R_PAREN COMMA COLON ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On R_PAREN reduce production simpleKeysetExpression -> expression MASK expression
-- On COMMA reduce production simpleKeysetExpression -> expression MASK expression
-- On COLON reduce production simpleKeysetExpression -> expression MASK expression

State 733:
separated_atLeastTwo_list(COMMA,simpleKeysetExpression) -> separated_atLeastTwo_list_aux(COMMA,simpleKeysetExpression) . [ R_PAREN ]
-- On R_PAREN reduce production separated_atLeastTwo_list(COMMA,simpleKeysetExpression) -> separated_atLeastTwo_list_aux(COMMA,simpleKeysetExpression)

State 734:
tupleKeysetExpression -> L_PAREN separated_atLeastTwo_list(COMMA,simpleKeysetExpression) . R_PAREN [ COLON ]
-- On R_PAREN shift to state 735

State 735:
tupleKeysetExpression -> L_PAREN separated_atLeastTwo_list(COMMA,simpleKeysetExpression) R_PAREN . [ COLON ]
-- On COLON reduce production tupleKeysetExpression -> L_PAREN separated_atLeastTwo_list(COMMA,simpleKeysetExpression) R_PAREN

State 736:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> L_PAREN expression . R_PAREN [ SHL R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE RANGE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS MASK L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COMMA BIT_XOR BIT_OR BIT_AND AND ]
simpleKeysetExpression -> expression . [ COMMA ]
simpleKeysetExpression -> expression . MASK expression [ COMMA ]
simpleKeysetExpression -> expression . RANGE expression [ COMMA ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 191
-- On R_ANGLE shift to state 73
-- On RANGE shift to state 729
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On MASK shift to state 731
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126
-- On COMMA reduce production simpleKeysetExpression -> expression

State 737:
keysetExpression -> tupleKeysetExpression . [ COLON ]
-- On COLON reduce production keysetExpression -> tupleKeysetExpression

State 738:
keysetExpression -> simpleKeysetExpression . [ COLON ]
-- On COLON reduce production keysetExpression -> simpleKeysetExpression

State 739:
list_aux(selectCase) -> list_aux(selectCase) selectCase . [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On TYPE reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On TRUE reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On STRING_LITERAL reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On STATE reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On R_BRACE reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On PLUS reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On NOT reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On NAME reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On MINUS reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On L_PAREN reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On L_BRACE reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On KEY reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On INTEGER reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On FALSE reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On ERROR reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On ENTRIES reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On DOT reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On DONTCARE reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On DEFAULT reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On COMPLEMENT reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On APPLY reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase
-- On ACTIONS reduce production list_aux(selectCase) -> list_aux(selectCase) selectCase

State 740:
selectCase -> keysetExpression . COLON name SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On COLON shift to state 741

State 741:
selectCase -> keysetExpression COLON . name SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 742

State 742:
selectCase -> keysetExpression COLON name . SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On SEMICOLON shift to state 743

State 743:
selectCase -> keysetExpression COLON name SEMICOLON . [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On TYPE reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On TRUE reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On STRING_LITERAL reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On STATE reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On R_BRACE reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On PLUS reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On NOT reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On NAME reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On MINUS reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On L_PAREN reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On L_BRACE reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On KEY reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On INTEGER reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On FALSE reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On ERROR reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On ENTRIES reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On DOT reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On DONTCARE reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On DEFAULT reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On COMPLEMENT reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On APPLY reduce production selectCase -> keysetExpression COLON name SEMICOLON
-- On ACTIONS reduce production selectCase -> keysetExpression COLON name SEMICOLON

State 744:
transitionStatement -> TRANSITION stateExpression . [ R_BRACE ]
-- On R_BRACE reduce production transitionStatement -> TRANSITION stateExpression

State 745:
stateExpression -> selectExpression . [ R_BRACE ]
-- On R_BRACE reduce production stateExpression -> selectExpression

State 746:
stateExpression -> name . SEMICOLON [ R_BRACE ]
-- On SEMICOLON shift to state 747

State 747:
stateExpression -> name SEMICOLON . [ R_BRACE ]
-- On R_BRACE reduce production stateExpression -> name SEMICOLON

State 748:
parserState -> STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement . R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On R_BRACE shift to state 749

State 749:
parserState -> STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE . pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On pop_scope shift to state 750
-- On STATE reduce production pop_scope ->
-- On R_BRACE reduce production pop_scope ->
-- On PRAGMA reduce production pop_scope ->
-- On AT reduce production pop_scope ->

State 750:
parserState -> STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope . [ STATE R_BRACE PRAGMA AT ]
-- On STATE reduce production parserState -> STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope
-- On R_BRACE reduce production parserState -> STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope
-- On PRAGMA reduce production parserState -> STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope
-- On AT reduce production parserState -> STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope

State 751:
list_aux(parserStatement) -> list_aux(parserStatement) . parserStatement [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
petr4_list(parserStatement) -> list_aux(parserStatement) . [ TRANSITION R_BRACE ]
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On PRAGMA shift to state 207
-- On NAME shift to state 11
-- On L_BRACE shift to state 752
-- On KEY shift to state 19
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On CONST shift to state 520
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On variableDeclaration shift to state 755
-- On varName shift to state 33
-- On typeRef shift to state 756
-- On typeName shift to state 654
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On prefixedNonTypeName shift to state 583
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parserStatement shift to state 757
-- On parserBlockStatement shift to state 758
-- On nonempty_list_aux(annotation) shift to state 325
-- On nonTypeName shift to state 584
-- On lvalue shift to state 585
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 610
-- On directApplication shift to state 759
-- On constantDeclaration shift to state 760
-- On baseType shift to state 146
-- On assignmentOrMethodCallStatement shift to state 761
-- On annotations shift to state 762
-- On annotation shift to state 331
-- On TRANSITION reduce production petr4_list(parserStatement) -> list_aux(parserStatement)
-- On R_BRACE reduce production petr4_list(parserStatement) -> list_aux(parserStatement)

State 752:
parserBlockStatement -> L_BRACE . petr4_list(parserStatement) R_BRACE [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On petr4_list(parserStatement) shift to state 753
-- On list_aux(parserStatement) shift to state 751
-- On VARBIT reduce production list_aux(parserStatement) ->
-- On TYPE reduce production list_aux(parserStatement) ->
-- On TUPLE reduce production list_aux(parserStatement) ->
-- On STRING reduce production list_aux(parserStatement) ->
-- On STATE reduce production list_aux(parserStatement) ->
-- On R_BRACE reduce production list_aux(parserStatement) ->
-- On PRAGMA reduce production list_aux(parserStatement) ->
-- On NAME reduce production list_aux(parserStatement) ->
-- On L_BRACE reduce production list_aux(parserStatement) ->
-- On KEY reduce production list_aux(parserStatement) ->
-- On INT reduce production list_aux(parserStatement) ->
-- On ERROR reduce production list_aux(parserStatement) ->
-- On ENTRIES reduce production list_aux(parserStatement) ->
-- On DOT reduce production list_aux(parserStatement) ->
-- On CONST reduce production list_aux(parserStatement) ->
-- On BOOL reduce production list_aux(parserStatement) ->
-- On BIT reduce production list_aux(parserStatement) ->
-- On AT reduce production list_aux(parserStatement) ->
-- On APPLY reduce production list_aux(parserStatement) ->
-- On ACTIONS reduce production list_aux(parserStatement) ->

State 753:
parserBlockStatement -> L_BRACE petr4_list(parserStatement) . R_BRACE [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On R_BRACE shift to state 754

State 754:
parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE . [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On TYPE reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On TUPLE reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On TRANSITION reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On STRING reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On STATE reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On R_BRACE reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On PRAGMA reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On NAME reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On L_BRACE reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On KEY reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On INT reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On ERROR reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On ENTRIES reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On DOT reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On CONST reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On BOOL reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On BIT reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On AT reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On APPLY reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE
-- On ACTIONS reduce production parserBlockStatement -> L_BRACE petr4_list(parserStatement) R_BRACE

State 755:
parserStatement -> variableDeclaration . [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production parserStatement -> variableDeclaration
-- On TYPE reduce production parserStatement -> variableDeclaration
-- On TUPLE reduce production parserStatement -> variableDeclaration
-- On TRANSITION reduce production parserStatement -> variableDeclaration
-- On STRING reduce production parserStatement -> variableDeclaration
-- On STATE reduce production parserStatement -> variableDeclaration
-- On R_BRACE reduce production parserStatement -> variableDeclaration
-- On PRAGMA reduce production parserStatement -> variableDeclaration
-- On NAME reduce production parserStatement -> variableDeclaration
-- On L_BRACE reduce production parserStatement -> variableDeclaration
-- On KEY reduce production parserStatement -> variableDeclaration
-- On INT reduce production parserStatement -> variableDeclaration
-- On ERROR reduce production parserStatement -> variableDeclaration
-- On ENTRIES reduce production parserStatement -> variableDeclaration
-- On DOT reduce production parserStatement -> variableDeclaration
-- On CONST reduce production parserStatement -> variableDeclaration
-- On BOOL reduce production parserStatement -> variableDeclaration
-- On BIT reduce production parserStatement -> variableDeclaration
-- On AT reduce production parserStatement -> variableDeclaration
-- On APPLY reduce production parserStatement -> variableDeclaration
-- On ACTIONS reduce production parserStatement -> variableDeclaration

State 756:
variableDeclaration -> typeRef . name optInitialValue SEMICOLON [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 649

State 757:
list_aux(parserStatement) -> list_aux(parserStatement) parserStatement . [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On TYPE reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On TUPLE reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On TRANSITION reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On STRING reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On STATE reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On R_BRACE reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On PRAGMA reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On NAME reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On L_BRACE reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On KEY reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On INT reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On ERROR reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On ENTRIES reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On DOT reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On CONST reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On BOOL reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On BIT reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On AT reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On APPLY reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement
-- On ACTIONS reduce production list_aux(parserStatement) -> list_aux(parserStatement) parserStatement

State 758:
parserStatement -> parserBlockStatement . [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production parserStatement -> parserBlockStatement
-- On TYPE reduce production parserStatement -> parserBlockStatement
-- On TUPLE reduce production parserStatement -> parserBlockStatement
-- On TRANSITION reduce production parserStatement -> parserBlockStatement
-- On STRING reduce production parserStatement -> parserBlockStatement
-- On STATE reduce production parserStatement -> parserBlockStatement
-- On R_BRACE reduce production parserStatement -> parserBlockStatement
-- On PRAGMA reduce production parserStatement -> parserBlockStatement
-- On NAME reduce production parserStatement -> parserBlockStatement
-- On L_BRACE reduce production parserStatement -> parserBlockStatement
-- On KEY reduce production parserStatement -> parserBlockStatement
-- On INT reduce production parserStatement -> parserBlockStatement
-- On ERROR reduce production parserStatement -> parserBlockStatement
-- On ENTRIES reduce production parserStatement -> parserBlockStatement
-- On DOT reduce production parserStatement -> parserBlockStatement
-- On CONST reduce production parserStatement -> parserBlockStatement
-- On BOOL reduce production parserStatement -> parserBlockStatement
-- On BIT reduce production parserStatement -> parserBlockStatement
-- On AT reduce production parserStatement -> parserBlockStatement
-- On APPLY reduce production parserStatement -> parserBlockStatement
-- On ACTIONS reduce production parserStatement -> parserBlockStatement

State 759:
parserStatement -> directApplication . [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production parserStatement -> directApplication
-- On TYPE reduce production parserStatement -> directApplication
-- On TUPLE reduce production parserStatement -> directApplication
-- On TRANSITION reduce production parserStatement -> directApplication
-- On STRING reduce production parserStatement -> directApplication
-- On STATE reduce production parserStatement -> directApplication
-- On R_BRACE reduce production parserStatement -> directApplication
-- On PRAGMA reduce production parserStatement -> directApplication
-- On NAME reduce production parserStatement -> directApplication
-- On L_BRACE reduce production parserStatement -> directApplication
-- On KEY reduce production parserStatement -> directApplication
-- On INT reduce production parserStatement -> directApplication
-- On ERROR reduce production parserStatement -> directApplication
-- On ENTRIES reduce production parserStatement -> directApplication
-- On DOT reduce production parserStatement -> directApplication
-- On CONST reduce production parserStatement -> directApplication
-- On BOOL reduce production parserStatement -> directApplication
-- On BIT reduce production parserStatement -> directApplication
-- On AT reduce production parserStatement -> directApplication
-- On APPLY reduce production parserStatement -> directApplication
-- On ACTIONS reduce production parserStatement -> directApplication

State 760:
parserStatement -> constantDeclaration . [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production parserStatement -> constantDeclaration
-- On TYPE reduce production parserStatement -> constantDeclaration
-- On TUPLE reduce production parserStatement -> constantDeclaration
-- On TRANSITION reduce production parserStatement -> constantDeclaration
-- On STRING reduce production parserStatement -> constantDeclaration
-- On STATE reduce production parserStatement -> constantDeclaration
-- On R_BRACE reduce production parserStatement -> constantDeclaration
-- On PRAGMA reduce production parserStatement -> constantDeclaration
-- On NAME reduce production parserStatement -> constantDeclaration
-- On L_BRACE reduce production parserStatement -> constantDeclaration
-- On KEY reduce production parserStatement -> constantDeclaration
-- On INT reduce production parserStatement -> constantDeclaration
-- On ERROR reduce production parserStatement -> constantDeclaration
-- On ENTRIES reduce production parserStatement -> constantDeclaration
-- On DOT reduce production parserStatement -> constantDeclaration
-- On CONST reduce production parserStatement -> constantDeclaration
-- On BOOL reduce production parserStatement -> constantDeclaration
-- On BIT reduce production parserStatement -> constantDeclaration
-- On AT reduce production parserStatement -> constantDeclaration
-- On APPLY reduce production parserStatement -> constantDeclaration
-- On ACTIONS reduce production parserStatement -> constantDeclaration

State 761:
parserStatement -> assignmentOrMethodCallStatement . [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production parserStatement -> assignmentOrMethodCallStatement
-- On TYPE reduce production parserStatement -> assignmentOrMethodCallStatement
-- On TUPLE reduce production parserStatement -> assignmentOrMethodCallStatement
-- On TRANSITION reduce production parserStatement -> assignmentOrMethodCallStatement
-- On STRING reduce production parserStatement -> assignmentOrMethodCallStatement
-- On STATE reduce production parserStatement -> assignmentOrMethodCallStatement
-- On R_BRACE reduce production parserStatement -> assignmentOrMethodCallStatement
-- On PRAGMA reduce production parserStatement -> assignmentOrMethodCallStatement
-- On NAME reduce production parserStatement -> assignmentOrMethodCallStatement
-- On L_BRACE reduce production parserStatement -> assignmentOrMethodCallStatement
-- On KEY reduce production parserStatement -> assignmentOrMethodCallStatement
-- On INT reduce production parserStatement -> assignmentOrMethodCallStatement
-- On ERROR reduce production parserStatement -> assignmentOrMethodCallStatement
-- On ENTRIES reduce production parserStatement -> assignmentOrMethodCallStatement
-- On DOT reduce production parserStatement -> assignmentOrMethodCallStatement
-- On CONST reduce production parserStatement -> assignmentOrMethodCallStatement
-- On BOOL reduce production parserStatement -> assignmentOrMethodCallStatement
-- On BIT reduce production parserStatement -> assignmentOrMethodCallStatement
-- On AT reduce production parserStatement -> assignmentOrMethodCallStatement
-- On APPLY reduce production parserStatement -> assignmentOrMethodCallStatement
-- On ACTIONS reduce production parserStatement -> assignmentOrMethodCallStatement

State 762:
constantDeclaration -> annotations . CONST typeRef name ASSIGN initialValue SEMICOLON [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
parserBlockStatement -> annotations . L_BRACE petr4_list(parserStatement) R_BRACE [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
variableDeclaration -> annotations . typeRef name optInitialValue SEMICOLON [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On L_BRACE shift to state 763
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On CONST shift to state 660
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeRef shift to state 766
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 763:
parserBlockStatement -> annotations L_BRACE . petr4_list(parserStatement) R_BRACE [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On petr4_list(parserStatement) shift to state 764
-- On list_aux(parserStatement) shift to state 751
-- On VARBIT reduce production list_aux(parserStatement) ->
-- On TYPE reduce production list_aux(parserStatement) ->
-- On TUPLE reduce production list_aux(parserStatement) ->
-- On STRING reduce production list_aux(parserStatement) ->
-- On STATE reduce production list_aux(parserStatement) ->
-- On R_BRACE reduce production list_aux(parserStatement) ->
-- On PRAGMA reduce production list_aux(parserStatement) ->
-- On NAME reduce production list_aux(parserStatement) ->
-- On L_BRACE reduce production list_aux(parserStatement) ->
-- On KEY reduce production list_aux(parserStatement) ->
-- On INT reduce production list_aux(parserStatement) ->
-- On ERROR reduce production list_aux(parserStatement) ->
-- On ENTRIES reduce production list_aux(parserStatement) ->
-- On DOT reduce production list_aux(parserStatement) ->
-- On CONST reduce production list_aux(parserStatement) ->
-- On BOOL reduce production list_aux(parserStatement) ->
-- On BIT reduce production list_aux(parserStatement) ->
-- On AT reduce production list_aux(parserStatement) ->
-- On APPLY reduce production list_aux(parserStatement) ->
-- On ACTIONS reduce production list_aux(parserStatement) ->

State 764:
parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) . R_BRACE [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On R_BRACE shift to state 765

State 765:
parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE . [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On VARBIT reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On TYPE reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On TUPLE reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On TRANSITION reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On STRING reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On STATE reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On R_BRACE reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On PRAGMA reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On NAME reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On L_BRACE reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On KEY reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On INT reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On ERROR reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On ENTRIES reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On DOT reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On CONST reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On BOOL reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On BIT reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On AT reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On APPLY reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE
-- On ACTIONS reduce production parserBlockStatement -> annotations L_BRACE petr4_list(parserStatement) R_BRACE

State 766:
variableDeclaration -> annotations typeRef . name optInitialValue SEMICOLON [ VARBIT TYPE TUPLE TRANSITION STRING STATE R_BRACE PRAGMA NAME L_BRACE KEY INT ERROR ENTRIES DOT CONST BOOL BIT AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 667

State 767:
parserLocalElement -> variableDeclaration . [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT reduce production parserLocalElement -> variableDeclaration
-- On VALUESET reduce production parserLocalElement -> variableDeclaration
-- On TUPLE reduce production parserLocalElement -> variableDeclaration
-- On STRING reduce production parserLocalElement -> variableDeclaration
-- On STATE reduce production parserLocalElement -> variableDeclaration
-- On PRAGMA reduce production parserLocalElement -> variableDeclaration
-- On NAME reduce production parserLocalElement -> variableDeclaration
-- On INT reduce production parserLocalElement -> variableDeclaration
-- On ERROR reduce production parserLocalElement -> variableDeclaration
-- On DOT reduce production parserLocalElement -> variableDeclaration
-- On CONST reduce production parserLocalElement -> variableDeclaration
-- On BOOL reduce production parserLocalElement -> variableDeclaration
-- On BIT reduce production parserLocalElement -> variableDeclaration
-- On AT reduce production parserLocalElement -> variableDeclaration

State 768:
parserLocalElement -> valueSetDeclaration . [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT reduce production parserLocalElement -> valueSetDeclaration
-- On VALUESET reduce production parserLocalElement -> valueSetDeclaration
-- On TUPLE reduce production parserLocalElement -> valueSetDeclaration
-- On STRING reduce production parserLocalElement -> valueSetDeclaration
-- On STATE reduce production parserLocalElement -> valueSetDeclaration
-- On PRAGMA reduce production parserLocalElement -> valueSetDeclaration
-- On NAME reduce production parserLocalElement -> valueSetDeclaration
-- On INT reduce production parserLocalElement -> valueSetDeclaration
-- On ERROR reduce production parserLocalElement -> valueSetDeclaration
-- On DOT reduce production parserLocalElement -> valueSetDeclaration
-- On CONST reduce production parserLocalElement -> valueSetDeclaration
-- On BOOL reduce production parserLocalElement -> valueSetDeclaration
-- On BIT reduce production parserLocalElement -> valueSetDeclaration
-- On AT reduce production parserLocalElement -> valueSetDeclaration

State 769:
parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) . R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On R_BRACE shift to state 770

State 770:
parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE . pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On pop_scope shift to state 771
-- On VOID reduce production pop_scope ->
-- On VARBIT reduce production pop_scope ->
-- On TYPEDEF reduce production pop_scope ->
-- On TYPE reduce production pop_scope ->
-- On TUPLE reduce production pop_scope ->
-- On STRUCT reduce production pop_scope ->
-- On STRING reduce production pop_scope ->
-- On SEMICOLON reduce production pop_scope ->
-- On PRAGMA reduce production pop_scope ->
-- On PARSER reduce production pop_scope ->
-- On PACKAGE reduce production pop_scope ->
-- On NAME reduce production pop_scope ->
-- On MATCH_KIND reduce production pop_scope ->
-- On INT reduce production pop_scope ->
-- On HEADER_UNION reduce production pop_scope ->
-- On HEADER reduce production pop_scope ->
-- On EXTERN reduce production pop_scope ->
-- On ERROR reduce production pop_scope ->
-- On ENUM reduce production pop_scope ->
-- On END reduce production pop_scope ->
-- On DOT reduce production pop_scope ->
-- On CONTROL reduce production pop_scope ->
-- On CONST reduce production pop_scope ->
-- On BOOL reduce production pop_scope ->
-- On BIT reduce production pop_scope ->
-- On AT reduce production pop_scope ->
-- On ACTION reduce production pop_scope ->

State 771:
parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On VARBIT reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On TYPEDEF reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On TYPE reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On TUPLE reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On STRUCT reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On STRING reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On SEMICOLON reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On PRAGMA reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On PARSER reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On PACKAGE reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On NAME reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On MATCH_KIND reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On INT reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On HEADER_UNION reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On HEADER reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On EXTERN reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On ERROR reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On ENUM reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On END reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On DOT reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On CONTROL reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On CONST reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On BOOL reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On BIT reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On AT reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope
-- On ACTION reduce production parserDeclaration -> parserTypeDeclaration optConstructorParameters L_BRACE list_aux(parserLocalElement) petr4_nonempty_list(parserState) R_BRACE pop_scope

State 772:
nonempty_list_aux(parserState) -> parserState . [ STATE R_BRACE PRAGMA AT ]
-- On STATE reduce production nonempty_list_aux(parserState) -> parserState
-- On R_BRACE reduce production nonempty_list_aux(parserState) -> parserState
-- On PRAGMA reduce production nonempty_list_aux(parserState) -> parserState
-- On AT reduce production nonempty_list_aux(parserState) -> parserState

State 773:
list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement . [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On VALUESET reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On TUPLE reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On STRING reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On STATE reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On PRAGMA reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On NAME reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On INT reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On ERROR reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On DOT reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On CONST reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On BOOL reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On BIT reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement
-- On AT reduce production list_aux(parserLocalElement) -> list_aux(parserLocalElement) parserLocalElement

State 774:
nonempty_list_aux(parserState) -> nonempty_list_aux(parserState) . parserState [ STATE R_BRACE PRAGMA AT ]
petr4_nonempty_list(parserState) -> nonempty_list_aux(parserState) . [ R_BRACE ]
-- On STATE shift to state 708
-- On PRAGMA shift to state 207
-- On AT shift to state 302
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parserState shift to state 775
-- On nonempty_list_aux(annotation) shift to state 325
-- On annotations shift to state 776
-- On annotation shift to state 331
-- On R_BRACE reduce production petr4_nonempty_list(parserState) -> nonempty_list_aux(parserState)

State 775:
nonempty_list_aux(parserState) -> nonempty_list_aux(parserState) parserState . [ STATE R_BRACE PRAGMA AT ]
-- On STATE reduce production nonempty_list_aux(parserState) -> nonempty_list_aux(parserState) parserState
-- On R_BRACE reduce production nonempty_list_aux(parserState) -> nonempty_list_aux(parserState) parserState
-- On PRAGMA reduce production nonempty_list_aux(parserState) -> nonempty_list_aux(parserState) parserState
-- On AT reduce production nonempty_list_aux(parserState) -> nonempty_list_aux(parserState) parserState

State 776:
parserState -> annotations . STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On STATE shift to state 777

State 777:
parserState -> annotations STATE . push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On push_name shift to state 778
-- On nonTypeName shift to state 35
-- On name shift to state 448

State 778:
parserState -> annotations STATE push_name . L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On L_BRACE shift to state 779

State 779:
parserState -> annotations STATE push_name L_BRACE . petr4_list(parserStatement) transitionStatement R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On petr4_list(parserStatement) shift to state 780
-- On list_aux(parserStatement) shift to state 751
-- On VARBIT reduce production list_aux(parserStatement) ->
-- On TYPE reduce production list_aux(parserStatement) ->
-- On TUPLE reduce production list_aux(parserStatement) ->
-- On TRANSITION reduce production list_aux(parserStatement) ->
-- On STRING reduce production list_aux(parserStatement) ->
-- On STATE reduce production list_aux(parserStatement) ->
-- On R_BRACE reduce production list_aux(parserStatement) ->
-- On PRAGMA reduce production list_aux(parserStatement) ->
-- On NAME reduce production list_aux(parserStatement) ->
-- On L_BRACE reduce production list_aux(parserStatement) ->
-- On KEY reduce production list_aux(parserStatement) ->
-- On INT reduce production list_aux(parserStatement) ->
-- On ERROR reduce production list_aux(parserStatement) ->
-- On ENTRIES reduce production list_aux(parserStatement) ->
-- On DOT reduce production list_aux(parserStatement) ->
-- On CONST reduce production list_aux(parserStatement) ->
-- On BOOL reduce production list_aux(parserStatement) ->
-- On BIT reduce production list_aux(parserStatement) ->
-- On AT reduce production list_aux(parserStatement) ->
-- On APPLY reduce production list_aux(parserStatement) ->
-- On ACTIONS reduce production list_aux(parserStatement) ->

State 780:
parserState -> annotations STATE push_name L_BRACE petr4_list(parserStatement) . transitionStatement R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On TRANSITION shift to state 712
-- On transitionStatement shift to state 781
-- On R_BRACE reduce production transitionStatement ->

State 781:
parserState -> annotations STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement . R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On R_BRACE shift to state 782

State 782:
parserState -> annotations STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE . pop_scope [ STATE R_BRACE PRAGMA AT ]
-- On pop_scope shift to state 783
-- On STATE reduce production pop_scope ->
-- On R_BRACE reduce production pop_scope ->
-- On PRAGMA reduce production pop_scope ->
-- On AT reduce production pop_scope ->

State 783:
parserState -> annotations STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope . [ STATE R_BRACE PRAGMA AT ]
-- On STATE reduce production parserState -> annotations STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope
-- On R_BRACE reduce production parserState -> annotations STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope
-- On PRAGMA reduce production parserState -> annotations STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope
-- On AT reduce production parserState -> annotations STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope

State 784:
parserLocalElement -> instantiation . [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT reduce production parserLocalElement -> instantiation
-- On VALUESET reduce production parserLocalElement -> instantiation
-- On TUPLE reduce production parserLocalElement -> instantiation
-- On STRING reduce production parserLocalElement -> instantiation
-- On STATE reduce production parserLocalElement -> instantiation
-- On PRAGMA reduce production parserLocalElement -> instantiation
-- On NAME reduce production parserLocalElement -> instantiation
-- On INT reduce production parserLocalElement -> instantiation
-- On ERROR reduce production parserLocalElement -> instantiation
-- On DOT reduce production parserLocalElement -> instantiation
-- On CONST reduce production parserLocalElement -> instantiation
-- On BOOL reduce production parserLocalElement -> instantiation
-- On BIT reduce production parserLocalElement -> instantiation
-- On AT reduce production parserLocalElement -> instantiation

State 785:
parserLocalElement -> constantDeclaration . [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT reduce production parserLocalElement -> constantDeclaration
-- On VALUESET reduce production parserLocalElement -> constantDeclaration
-- On TUPLE reduce production parserLocalElement -> constantDeclaration
-- On STRING reduce production parserLocalElement -> constantDeclaration
-- On STATE reduce production parserLocalElement -> constantDeclaration
-- On PRAGMA reduce production parserLocalElement -> constantDeclaration
-- On NAME reduce production parserLocalElement -> constantDeclaration
-- On INT reduce production parserLocalElement -> constantDeclaration
-- On ERROR reduce production parserLocalElement -> constantDeclaration
-- On DOT reduce production parserLocalElement -> constantDeclaration
-- On CONST reduce production parserLocalElement -> constantDeclaration
-- On BOOL reduce production parserLocalElement -> constantDeclaration
-- On BIT reduce production parserLocalElement -> constantDeclaration
-- On AT reduce production parserLocalElement -> constantDeclaration

State 786:
constantDeclaration -> annotations . CONST typeRef name ASSIGN initialValue SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
instantiation -> annotations . typeRef L_PAREN argumentList R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
instantiation -> annotations . typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
parserState -> annotations . STATE push_name L_BRACE petr4_list(parserStatement) transitionStatement R_BRACE pop_scope [ STATE R_BRACE PRAGMA AT ]
valueSetDeclaration -> annotations . VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
valueSetDeclaration -> annotations . VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
valueSetDeclaration -> annotations . VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
variableDeclaration -> annotations . typeRef name optInitialValue SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT shift to state 2
-- On VALUESET shift to state 787
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 777
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On CONST shift to state 660
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeRef shift to state 666
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 787:
valueSetDeclaration -> annotations VALUESET . L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
valueSetDeclaration -> annotations VALUESET . L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
valueSetDeclaration -> annotations VALUESET . L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On L_ANGLE shift to state 788

State 788:
valueSetDeclaration -> annotations VALUESET L_ANGLE . baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
valueSetDeclaration -> annotations VALUESET L_ANGLE . tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
valueSetDeclaration -> annotations VALUESET L_ANGLE . typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeName shift to state 789
-- On tupleType shift to state 796
-- On prefixedType shift to state 582
-- On dotPrefix shift to state 143
-- On baseType shift to state 803

State 789:
valueSetDeclaration -> annotations VALUESET L_ANGLE typeName . R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On R_ANGLE shift to state 790

State 790:
valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE . L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On L_PAREN shift to state 791

State 791:
valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN . expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 792
-- On dotPrefix shift to state 91

State 792:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression . R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 793
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 793:
valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN . name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 794

State 794:
valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name . SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SEMICOLON shift to state 795

State 795:
valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON . [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On VALUESET reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On TUPLE reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STRING reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STATE reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On PRAGMA reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On NAME reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On INT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On ERROR reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On DOT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On CONST reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BOOL reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BIT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On AT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE typeName R_ANGLE L_PAREN expression R_PAREN name SEMICOLON

State 796:
valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType . R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On R_ANGLE shift to state 797

State 797:
valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE . L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On L_PAREN shift to state 798

State 798:
valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN . expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 799
-- On dotPrefix shift to state 91

State 799:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression . R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 800
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 800:
valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN . name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 801

State 801:
valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name . SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SEMICOLON shift to state 802

State 802:
valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON . [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On VALUESET reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On TUPLE reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STRING reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STATE reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On PRAGMA reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On NAME reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On INT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On ERROR reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On DOT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On CONST reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BOOL reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BIT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On AT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE tupleType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON

State 803:
valueSetDeclaration -> annotations VALUESET L_ANGLE baseType . R_ANGLE L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On R_ANGLE shift to state 804

State 804:
valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE . L_PAREN expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On L_PAREN shift to state 805

State 805:
valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN . expression R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On expression shift to state 806
-- On dotPrefix shift to state 91

State 806:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_PAREN R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV BIT_XOR BIT_OR BIT_AND AND ]
valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression . R_PAREN name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SHL shift to state 64
-- On R_PAREN shift to state 807
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 807:
valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN . name SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 808

State 808:
valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name . SEMICOLON [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On SEMICOLON shift to state 809

State 809:
valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON . [ VARBIT VALUESET TUPLE STRING STATE PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT ]
-- On VARBIT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On VALUESET reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On TUPLE reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STRING reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On STATE reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On PRAGMA reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On NAME reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On INT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On ERROR reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On DOT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On CONST reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BOOL reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On BIT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON
-- On AT reduce production valueSetDeclaration -> annotations VALUESET L_ANGLE baseType R_ANGLE L_PAREN expression R_PAREN name SEMICOLON

State 810:
topDeclaration -> parserDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production topDeclaration -> parserDeclaration
-- On VARBIT reduce production topDeclaration -> parserDeclaration
-- On TYPEDEF reduce production topDeclaration -> parserDeclaration
-- On TYPE reduce production topDeclaration -> parserDeclaration
-- On TUPLE reduce production topDeclaration -> parserDeclaration
-- On STRUCT reduce production topDeclaration -> parserDeclaration
-- On STRING reduce production topDeclaration -> parserDeclaration
-- On SEMICOLON reduce production topDeclaration -> parserDeclaration
-- On PRAGMA reduce production topDeclaration -> parserDeclaration
-- On PARSER reduce production topDeclaration -> parserDeclaration
-- On PACKAGE reduce production topDeclaration -> parserDeclaration
-- On NAME reduce production topDeclaration -> parserDeclaration
-- On MATCH_KIND reduce production topDeclaration -> parserDeclaration
-- On INT reduce production topDeclaration -> parserDeclaration
-- On HEADER_UNION reduce production topDeclaration -> parserDeclaration
-- On HEADER reduce production topDeclaration -> parserDeclaration
-- On EXTERN reduce production topDeclaration -> parserDeclaration
-- On ERROR reduce production topDeclaration -> parserDeclaration
-- On ENUM reduce production topDeclaration -> parserDeclaration
-- On END reduce production topDeclaration -> parserDeclaration
-- On DOT reduce production topDeclaration -> parserDeclaration
-- On CONTROL reduce production topDeclaration -> parserDeclaration
-- On CONST reduce production topDeclaration -> parserDeclaration
-- On BOOL reduce production topDeclaration -> parserDeclaration
-- On BIT reduce production topDeclaration -> parserDeclaration
-- On AT reduce production topDeclaration -> parserDeclaration
-- On ACTION reduce production topDeclaration -> parserDeclaration

State 811:
typeDeclaration -> packageTypeDeclaration . pop_scope SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On pop_scope shift to state 812
-- On SEMICOLON reduce production pop_scope ->

State 812:
typeDeclaration -> packageTypeDeclaration pop_scope . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 813

State 813:
typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On VARBIT reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On TYPEDEF reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On TYPE reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On TUPLE reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On STRUCT reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On STRING reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On SEMICOLON reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On PRAGMA reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On PARSER reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On PACKAGE reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On NAME reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On MATCH_KIND reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On INT reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On HEADER_UNION reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On HEADER reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On EXTERN reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On ERROR reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On ENUM reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On END reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On DOT reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On CONTROL reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On CONST reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On BOOL reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On BIT reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On AT reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON
-- On ACTION reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON

State 814:
topDeclaration -> matchKindDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production topDeclaration -> matchKindDeclaration
-- On VARBIT reduce production topDeclaration -> matchKindDeclaration
-- On TYPEDEF reduce production topDeclaration -> matchKindDeclaration
-- On TYPE reduce production topDeclaration -> matchKindDeclaration
-- On TUPLE reduce production topDeclaration -> matchKindDeclaration
-- On STRUCT reduce production topDeclaration -> matchKindDeclaration
-- On STRING reduce production topDeclaration -> matchKindDeclaration
-- On SEMICOLON reduce production topDeclaration -> matchKindDeclaration
-- On PRAGMA reduce production topDeclaration -> matchKindDeclaration
-- On PARSER reduce production topDeclaration -> matchKindDeclaration
-- On PACKAGE reduce production topDeclaration -> matchKindDeclaration
-- On NAME reduce production topDeclaration -> matchKindDeclaration
-- On MATCH_KIND reduce production topDeclaration -> matchKindDeclaration
-- On INT reduce production topDeclaration -> matchKindDeclaration
-- On HEADER_UNION reduce production topDeclaration -> matchKindDeclaration
-- On HEADER reduce production topDeclaration -> matchKindDeclaration
-- On EXTERN reduce production topDeclaration -> matchKindDeclaration
-- On ERROR reduce production topDeclaration -> matchKindDeclaration
-- On ENUM reduce production topDeclaration -> matchKindDeclaration
-- On END reduce production topDeclaration -> matchKindDeclaration
-- On DOT reduce production topDeclaration -> matchKindDeclaration
-- On CONTROL reduce production topDeclaration -> matchKindDeclaration
-- On CONST reduce production topDeclaration -> matchKindDeclaration
-- On BOOL reduce production topDeclaration -> matchKindDeclaration
-- On BIT reduce production topDeclaration -> matchKindDeclaration
-- On AT reduce production topDeclaration -> matchKindDeclaration
-- On ACTION reduce production topDeclaration -> matchKindDeclaration

State 815:
topDeclaration -> instantiation . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production topDeclaration -> instantiation
-- On VARBIT reduce production topDeclaration -> instantiation
-- On TYPEDEF reduce production topDeclaration -> instantiation
-- On TYPE reduce production topDeclaration -> instantiation
-- On TUPLE reduce production topDeclaration -> instantiation
-- On STRUCT reduce production topDeclaration -> instantiation
-- On STRING reduce production topDeclaration -> instantiation
-- On SEMICOLON reduce production topDeclaration -> instantiation
-- On PRAGMA reduce production topDeclaration -> instantiation
-- On PARSER reduce production topDeclaration -> instantiation
-- On PACKAGE reduce production topDeclaration -> instantiation
-- On NAME reduce production topDeclaration -> instantiation
-- On MATCH_KIND reduce production topDeclaration -> instantiation
-- On INT reduce production topDeclaration -> instantiation
-- On HEADER_UNION reduce production topDeclaration -> instantiation
-- On HEADER reduce production topDeclaration -> instantiation
-- On EXTERN reduce production topDeclaration -> instantiation
-- On ERROR reduce production topDeclaration -> instantiation
-- On ENUM reduce production topDeclaration -> instantiation
-- On END reduce production topDeclaration -> instantiation
-- On DOT reduce production topDeclaration -> instantiation
-- On CONTROL reduce production topDeclaration -> instantiation
-- On CONST reduce production topDeclaration -> instantiation
-- On BOOL reduce production topDeclaration -> instantiation
-- On BIT reduce production topDeclaration -> instantiation
-- On AT reduce production topDeclaration -> instantiation
-- On ACTION reduce production topDeclaration -> instantiation

State 816:
topDeclaration -> functionDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production topDeclaration -> functionDeclaration
-- On VARBIT reduce production topDeclaration -> functionDeclaration
-- On TYPEDEF reduce production topDeclaration -> functionDeclaration
-- On TYPE reduce production topDeclaration -> functionDeclaration
-- On TUPLE reduce production topDeclaration -> functionDeclaration
-- On STRUCT reduce production topDeclaration -> functionDeclaration
-- On STRING reduce production topDeclaration -> functionDeclaration
-- On SEMICOLON reduce production topDeclaration -> functionDeclaration
-- On PRAGMA reduce production topDeclaration -> functionDeclaration
-- On PARSER reduce production topDeclaration -> functionDeclaration
-- On PACKAGE reduce production topDeclaration -> functionDeclaration
-- On NAME reduce production topDeclaration -> functionDeclaration
-- On MATCH_KIND reduce production topDeclaration -> functionDeclaration
-- On INT reduce production topDeclaration -> functionDeclaration
-- On HEADER_UNION reduce production topDeclaration -> functionDeclaration
-- On HEADER reduce production topDeclaration -> functionDeclaration
-- On EXTERN reduce production topDeclaration -> functionDeclaration
-- On ERROR reduce production topDeclaration -> functionDeclaration
-- On ENUM reduce production topDeclaration -> functionDeclaration
-- On END reduce production topDeclaration -> functionDeclaration
-- On DOT reduce production topDeclaration -> functionDeclaration
-- On CONTROL reduce production topDeclaration -> functionDeclaration
-- On CONST reduce production topDeclaration -> functionDeclaration
-- On BOOL reduce production topDeclaration -> functionDeclaration
-- On BIT reduce production topDeclaration -> functionDeclaration
-- On AT reduce production topDeclaration -> functionDeclaration
-- On ACTION reduce production topDeclaration -> functionDeclaration

State 817:
topDeclaration -> externDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production topDeclaration -> externDeclaration
-- On VARBIT reduce production topDeclaration -> externDeclaration
-- On TYPEDEF reduce production topDeclaration -> externDeclaration
-- On TYPE reduce production topDeclaration -> externDeclaration
-- On TUPLE reduce production topDeclaration -> externDeclaration
-- On STRUCT reduce production topDeclaration -> externDeclaration
-- On STRING reduce production topDeclaration -> externDeclaration
-- On SEMICOLON reduce production topDeclaration -> externDeclaration
-- On PRAGMA reduce production topDeclaration -> externDeclaration
-- On PARSER reduce production topDeclaration -> externDeclaration
-- On PACKAGE reduce production topDeclaration -> externDeclaration
-- On NAME reduce production topDeclaration -> externDeclaration
-- On MATCH_KIND reduce production topDeclaration -> externDeclaration
-- On INT reduce production topDeclaration -> externDeclaration
-- On HEADER_UNION reduce production topDeclaration -> externDeclaration
-- On HEADER reduce production topDeclaration -> externDeclaration
-- On EXTERN reduce production topDeclaration -> externDeclaration
-- On ERROR reduce production topDeclaration -> externDeclaration
-- On ENUM reduce production topDeclaration -> externDeclaration
-- On END reduce production topDeclaration -> externDeclaration
-- On DOT reduce production topDeclaration -> externDeclaration
-- On CONTROL reduce production topDeclaration -> externDeclaration
-- On CONST reduce production topDeclaration -> externDeclaration
-- On BOOL reduce production topDeclaration -> externDeclaration
-- On BIT reduce production topDeclaration -> externDeclaration
-- On AT reduce production topDeclaration -> externDeclaration
-- On ACTION reduce production topDeclaration -> externDeclaration

State 818:
topDeclaration -> errorDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production topDeclaration -> errorDeclaration
-- On VARBIT reduce production topDeclaration -> errorDeclaration
-- On TYPEDEF reduce production topDeclaration -> errorDeclaration
-- On TYPE reduce production topDeclaration -> errorDeclaration
-- On TUPLE reduce production topDeclaration -> errorDeclaration
-- On STRUCT reduce production topDeclaration -> errorDeclaration
-- On STRING reduce production topDeclaration -> errorDeclaration
-- On SEMICOLON reduce production topDeclaration -> errorDeclaration
-- On PRAGMA reduce production topDeclaration -> errorDeclaration
-- On PARSER reduce production topDeclaration -> errorDeclaration
-- On PACKAGE reduce production topDeclaration -> errorDeclaration
-- On NAME reduce production topDeclaration -> errorDeclaration
-- On MATCH_KIND reduce production topDeclaration -> errorDeclaration
-- On INT reduce production topDeclaration -> errorDeclaration
-- On HEADER_UNION reduce production topDeclaration -> errorDeclaration
-- On HEADER reduce production topDeclaration -> errorDeclaration
-- On EXTERN reduce production topDeclaration -> errorDeclaration
-- On ERROR reduce production topDeclaration -> errorDeclaration
-- On ENUM reduce production topDeclaration -> errorDeclaration
-- On END reduce production topDeclaration -> errorDeclaration
-- On DOT reduce production topDeclaration -> errorDeclaration
-- On CONTROL reduce production topDeclaration -> errorDeclaration
-- On CONST reduce production topDeclaration -> errorDeclaration
-- On BOOL reduce production topDeclaration -> errorDeclaration
-- On BIT reduce production topDeclaration -> errorDeclaration
-- On AT reduce production topDeclaration -> errorDeclaration
-- On ACTION reduce production topDeclaration -> errorDeclaration

State 819:
typeDeclaration -> derivedTypeDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typeDeclaration -> derivedTypeDeclaration
-- On VARBIT reduce production typeDeclaration -> derivedTypeDeclaration
-- On TYPEDEF reduce production typeDeclaration -> derivedTypeDeclaration
-- On TYPE reduce production typeDeclaration -> derivedTypeDeclaration
-- On TUPLE reduce production typeDeclaration -> derivedTypeDeclaration
-- On STRUCT reduce production typeDeclaration -> derivedTypeDeclaration
-- On STRING reduce production typeDeclaration -> derivedTypeDeclaration
-- On SEMICOLON reduce production typeDeclaration -> derivedTypeDeclaration
-- On PRAGMA reduce production typeDeclaration -> derivedTypeDeclaration
-- On PARSER reduce production typeDeclaration -> derivedTypeDeclaration
-- On PACKAGE reduce production typeDeclaration -> derivedTypeDeclaration
-- On NAME reduce production typeDeclaration -> derivedTypeDeclaration
-- On MATCH_KIND reduce production typeDeclaration -> derivedTypeDeclaration
-- On INT reduce production typeDeclaration -> derivedTypeDeclaration
-- On HEADER_UNION reduce production typeDeclaration -> derivedTypeDeclaration
-- On HEADER reduce production typeDeclaration -> derivedTypeDeclaration
-- On EXTERN reduce production typeDeclaration -> derivedTypeDeclaration
-- On ERROR reduce production typeDeclaration -> derivedTypeDeclaration
-- On ENUM reduce production typeDeclaration -> derivedTypeDeclaration
-- On END reduce production typeDeclaration -> derivedTypeDeclaration
-- On DOT reduce production typeDeclaration -> derivedTypeDeclaration
-- On CONTROL reduce production typeDeclaration -> derivedTypeDeclaration
-- On CONST reduce production typeDeclaration -> derivedTypeDeclaration
-- On BOOL reduce production typeDeclaration -> derivedTypeDeclaration
-- On BIT reduce production typeDeclaration -> derivedTypeDeclaration
-- On AT reduce production typeDeclaration -> derivedTypeDeclaration
-- On ACTION reduce production typeDeclaration -> derivedTypeDeclaration

State 820:
controlDeclaration -> controlTypeDeclaration . optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
typeDeclaration -> controlTypeDeclaration . pop_scope SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On L_PAREN shift to state 677
-- On pop_scope shift to state 821
-- On optConstructorParameters shift to state 823
-- On SEMICOLON reduce production pop_scope ->
-- On L_BRACE reduce production optConstructorParameters ->

State 821:
typeDeclaration -> controlTypeDeclaration pop_scope . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 822

State 822:
typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On VARBIT reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On TYPEDEF reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On TYPE reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On TUPLE reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On STRUCT reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On STRING reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On SEMICOLON reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On PRAGMA reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On PARSER reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On PACKAGE reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On NAME reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On MATCH_KIND reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On INT reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On HEADER_UNION reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On HEADER reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On EXTERN reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On ERROR reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On ENUM reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On END reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On DOT reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On CONTROL reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On CONST reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On BOOL reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On BIT reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On AT reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON
-- On ACTION reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON

State 823:
controlDeclaration -> controlTypeDeclaration optConstructorParameters . L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On L_BRACE shift to state 824

State 824:
controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE . petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On petr4_list(controlLocalDeclaration) shift to state 825
-- On list_aux(controlLocalDeclaration) shift to state 831
-- On VARBIT reduce production list_aux(controlLocalDeclaration) ->
-- On TUPLE reduce production list_aux(controlLocalDeclaration) ->
-- On TABLE reduce production list_aux(controlLocalDeclaration) ->
-- On STRING reduce production list_aux(controlLocalDeclaration) ->
-- On PRAGMA reduce production list_aux(controlLocalDeclaration) ->
-- On NAME reduce production list_aux(controlLocalDeclaration) ->
-- On INT reduce production list_aux(controlLocalDeclaration) ->
-- On ERROR reduce production list_aux(controlLocalDeclaration) ->
-- On DOT reduce production list_aux(controlLocalDeclaration) ->
-- On CONST reduce production list_aux(controlLocalDeclaration) ->
-- On BOOL reduce production list_aux(controlLocalDeclaration) ->
-- On BIT reduce production list_aux(controlLocalDeclaration) ->
-- On AT reduce production list_aux(controlLocalDeclaration) ->
-- On APPLY reduce production list_aux(controlLocalDeclaration) ->
-- On ACTION reduce production list_aux(controlLocalDeclaration) ->

State 825:
controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) . APPLY controlBody R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On APPLY shift to state 826

State 826:
controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY . controlBody R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On PRAGMA shift to state 207
-- On L_BRACE shift to state 532
-- On AT shift to state 302
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On controlBody shift to state 827
-- On blockStatement shift to state 830
-- On annotations shift to state 551
-- On annotation shift to state 331

State 827:
controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody . R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On R_BRACE shift to state 828

State 828:
controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE . pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On pop_scope shift to state 829
-- On VOID reduce production pop_scope ->
-- On VARBIT reduce production pop_scope ->
-- On TYPEDEF reduce production pop_scope ->
-- On TYPE reduce production pop_scope ->
-- On TUPLE reduce production pop_scope ->
-- On STRUCT reduce production pop_scope ->
-- On STRING reduce production pop_scope ->
-- On SEMICOLON reduce production pop_scope ->
-- On PRAGMA reduce production pop_scope ->
-- On PARSER reduce production pop_scope ->
-- On PACKAGE reduce production pop_scope ->
-- On NAME reduce production pop_scope ->
-- On MATCH_KIND reduce production pop_scope ->
-- On INT reduce production pop_scope ->
-- On HEADER_UNION reduce production pop_scope ->
-- On HEADER reduce production pop_scope ->
-- On EXTERN reduce production pop_scope ->
-- On ERROR reduce production pop_scope ->
-- On ENUM reduce production pop_scope ->
-- On END reduce production pop_scope ->
-- On DOT reduce production pop_scope ->
-- On CONTROL reduce production pop_scope ->
-- On CONST reduce production pop_scope ->
-- On BOOL reduce production pop_scope ->
-- On BIT reduce production pop_scope ->
-- On AT reduce production pop_scope ->
-- On ACTION reduce production pop_scope ->

State 829:
controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On VARBIT reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On TYPEDEF reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On TYPE reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On TUPLE reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On STRUCT reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On STRING reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On SEMICOLON reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On PRAGMA reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On PARSER reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On PACKAGE reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On NAME reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On MATCH_KIND reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On INT reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On HEADER_UNION reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On HEADER reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On EXTERN reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On ERROR reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On ENUM reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On END reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On DOT reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On CONTROL reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On CONST reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On BOOL reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On BIT reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On AT reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope
-- On ACTION reduce production controlDeclaration -> controlTypeDeclaration optConstructorParameters L_BRACE petr4_list(controlLocalDeclaration) APPLY controlBody R_BRACE pop_scope

State 830:
controlBody -> blockStatement . [ R_BRACE ]
-- On R_BRACE reduce production controlBody -> blockStatement

State 831:
list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) . controlLocalDeclaration [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
petr4_list(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) . [ APPLY ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On TABLE shift to state 832
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On CONST shift to state 520
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On ACTION shift to state 527
-- On variableDeclaration shift to state 912
-- On typeRef shift to state 619
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On tableDeclaration shift to state 913
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On instantiation shift to state 914
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On controlLocalDeclaration shift to state 915
-- On constantDeclaration shift to state 916
-- On baseType shift to state 146
-- On annotations shift to state 917
-- On annotation shift to state 331
-- On actionDeclaration shift to state 929
-- On APPLY reduce production petr4_list(controlLocalDeclaration) -> list_aux(controlLocalDeclaration)

State 832:
tableDeclaration -> TABLE . name L_BRACE tablePropertyList R_BRACE [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 833

State 833:
tableDeclaration -> TABLE name . L_BRACE tablePropertyList R_BRACE [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On L_BRACE shift to state 834

State 834:
tableDeclaration -> TABLE name L_BRACE . tablePropertyList R_BRACE [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On TYPE shift to state 835
-- On STATE shift to state 836
-- On PRAGMA shift to state 207
-- On NAME shift to state 837
-- On KEY shift to state 839
-- On CONST shift to state 853
-- On AT shift to state 302
-- On APPLY shift to state 877
-- On ACTIONS shift to state 883
-- On varName shift to state 878
-- On tablePropertyList shift to state 892
-- On tableProperty shift to state 894
-- On petr4_nonempty_list(tableProperty) shift to state 895
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(tableProperty) shift to state 896
-- On nonempty_list_aux(annotation) shift to state 325
-- On nonTableKwName shift to state 898
-- On annotations shift to state 902
-- On annotation shift to state 331

State 835:
nonTableKwName -> TYPE . [ ASSIGN ]
-- On ASSIGN reduce production nonTableKwName -> TYPE

State 836:
nonTableKwName -> STATE . [ ASSIGN ]
-- On ASSIGN reduce production nonTableKwName -> STATE

State 837:
nonTableKwName -> NAME . TYPENAME [ ASSIGN ]
varName -> NAME . IDENTIFIER [ ASSIGN ]
-- On TYPENAME shift to state 838
-- On IDENTIFIER shift to state 13

State 838:
nonTableKwName -> NAME TYPENAME . [ ASSIGN ]
-- On ASSIGN reduce production nonTableKwName -> NAME TYPENAME

State 839:
tableProperty -> KEY . ASSIGN L_BRACE keyElementList R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On ASSIGN shift to state 840

State 840:
tableProperty -> KEY ASSIGN . L_BRACE keyElementList R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On L_BRACE shift to state 841

State 841:
tableProperty -> KEY ASSIGN L_BRACE . keyElementList R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On petr4_list(keyElement) shift to state 842
-- On list_aux(keyElement) shift to state 843
-- On keyElementList shift to state 851
-- On TYPE reduce production list_aux(keyElement) ->
-- On TRUE reduce production list_aux(keyElement) ->
-- On STRING_LITERAL reduce production list_aux(keyElement) ->
-- On STATE reduce production list_aux(keyElement) ->
-- On R_BRACE reduce production list_aux(keyElement) ->
-- On PLUS reduce production list_aux(keyElement) ->
-- On NOT reduce production list_aux(keyElement) ->
-- On NAME reduce production list_aux(keyElement) ->
-- On MINUS reduce production list_aux(keyElement) ->
-- On L_PAREN reduce production list_aux(keyElement) ->
-- On L_BRACE reduce production list_aux(keyElement) ->
-- On KEY reduce production list_aux(keyElement) ->
-- On INTEGER reduce production list_aux(keyElement) ->
-- On FALSE reduce production list_aux(keyElement) ->
-- On ERROR reduce production list_aux(keyElement) ->
-- On ENTRIES reduce production list_aux(keyElement) ->
-- On DOT reduce production list_aux(keyElement) ->
-- On COMPLEMENT reduce production list_aux(keyElement) ->
-- On APPLY reduce production list_aux(keyElement) ->
-- On ACTIONS reduce production list_aux(keyElement) ->

State 842:
keyElementList -> petr4_list(keyElement) . [ R_BRACE ]
-- On R_BRACE reduce production keyElementList -> petr4_list(keyElement)

State 843:
list_aux(keyElement) -> list_aux(keyElement) . keyElement [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT COMPLEMENT APPLY ACTIONS ]
petr4_list(keyElement) -> list_aux(keyElement) . [ R_BRACE ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On keyElement shift to state 844
-- On expression shift to state 845
-- On dotPrefix shift to state 91
-- On R_BRACE reduce production petr4_list(keyElement) -> list_aux(keyElement)

State 844:
list_aux(keyElement) -> list_aux(keyElement) keyElement . [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT COMPLEMENT APPLY ACTIONS ]
-- On TYPE reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On TRUE reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On STRING_LITERAL reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On STATE reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On R_BRACE reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On PLUS reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On NOT reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On NAME reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On MINUS reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On L_PAREN reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On L_BRACE reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On KEY reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On INTEGER reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On FALSE reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On ERROR reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On ENTRIES reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On DOT reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On COMPLEMENT reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On APPLY reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement
-- On ACTIONS reduce production list_aux(keyElement) -> list_aux(keyElement) keyElement

State 845:
expression -> expression . L_BRACKET expression R_BRACKET [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_BRACKET expression COLON expression R_BRACKET [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DOT member [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MUL expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . DIV expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MOD expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUS_SAT expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . MINUS_SAT expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . SHL expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE R_ANGLE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . LE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . GE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . R_ANGLE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . NE expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . EQ expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_AND expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_XOR expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . BIT_OR expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . PLUSPLUS expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . AND expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . OR expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . QUESTION expression COLON expression [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_ANGLE realTypeArgumentList R_ANGLE L_PAREN argumentList R_PAREN [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
expression -> expression . L_PAREN argumentList R_PAREN [ SHL R_ANGLE QUESTION PLUS_SAT PLUSPLUS PLUS OR NE MUL MOD MINUS_SAT MINUS L_PAREN L_BRACKET L_ANGLE LE GE EQ DOT DIV COLON BIT_XOR BIT_OR BIT_AND AND ]
keyElement -> expression . COLON name SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT COMPLEMENT APPLY ACTIONS ]
keyElement -> expression . COLON name annotations SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT COMPLEMENT APPLY ACTIONS ]
-- On SHL shift to state 64
-- On R_ANGLE shift to state 73
-- On QUESTION shift to state 83
-- On PLUS_SAT shift to state 66
-- On PLUSPLUS shift to state 76
-- On PLUS shift to state 85
-- On OR shift to state 98
-- On NE shift to state 100
-- On MUL shift to state 68
-- On MOD shift to state 78
-- On MINUS_SAT shift to state 102
-- On MINUS shift to state 104
-- On L_PAREN shift to state 70
-- On L_BRACKET shift to state 80
-- On L_ANGLE shift to state 106
-- On LE shift to state 114
-- On GE shift to state 122
-- On EQ shift to state 124
-- On DOT shift to state 87
-- On DIV shift to state 89
-- On COLON shift to state 846
-- On BIT_XOR shift to state 116
-- On BIT_OR shift to state 120
-- On BIT_AND shift to state 118
-- On AND shift to state 126

State 846:
keyElement -> expression COLON . name SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT COMPLEMENT APPLY ACTIONS ]
keyElement -> expression COLON . name annotations SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT COMPLEMENT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 847

State 847:
keyElement -> expression COLON name . SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT COMPLEMENT APPLY ACTIONS ]
keyElement -> expression COLON name . annotations SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT COMPLEMENT APPLY ACTIONS ]
-- On SEMICOLON shift to state 848
-- On PRAGMA shift to state 207
-- On AT shift to state 302
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On annotations shift to state 849
-- On annotation shift to state 331

State 848:
keyElement -> expression COLON name SEMICOLON . [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT COMPLEMENT APPLY ACTIONS ]
-- On TYPE reduce production keyElement -> expression COLON name SEMICOLON
-- On TRUE reduce production keyElement -> expression COLON name SEMICOLON
-- On STRING_LITERAL reduce production keyElement -> expression COLON name SEMICOLON
-- On STATE reduce production keyElement -> expression COLON name SEMICOLON
-- On R_BRACE reduce production keyElement -> expression COLON name SEMICOLON
-- On PLUS reduce production keyElement -> expression COLON name SEMICOLON
-- On NOT reduce production keyElement -> expression COLON name SEMICOLON
-- On NAME reduce production keyElement -> expression COLON name SEMICOLON
-- On MINUS reduce production keyElement -> expression COLON name SEMICOLON
-- On L_PAREN reduce production keyElement -> expression COLON name SEMICOLON
-- On L_BRACE reduce production keyElement -> expression COLON name SEMICOLON
-- On KEY reduce production keyElement -> expression COLON name SEMICOLON
-- On INTEGER reduce production keyElement -> expression COLON name SEMICOLON
-- On FALSE reduce production keyElement -> expression COLON name SEMICOLON
-- On ERROR reduce production keyElement -> expression COLON name SEMICOLON
-- On ENTRIES reduce production keyElement -> expression COLON name SEMICOLON
-- On DOT reduce production keyElement -> expression COLON name SEMICOLON
-- On COMPLEMENT reduce production keyElement -> expression COLON name SEMICOLON
-- On APPLY reduce production keyElement -> expression COLON name SEMICOLON
-- On ACTIONS reduce production keyElement -> expression COLON name SEMICOLON

State 849:
keyElement -> expression COLON name annotations . SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT COMPLEMENT APPLY ACTIONS ]
-- On SEMICOLON shift to state 850

State 850:
keyElement -> expression COLON name annotations SEMICOLON . [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT COMPLEMENT APPLY ACTIONS ]
-- On TYPE reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On TRUE reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On STRING_LITERAL reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On STATE reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On R_BRACE reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On PLUS reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On NOT reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On NAME reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On MINUS reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On L_PAREN reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On L_BRACE reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On KEY reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On INTEGER reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On FALSE reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On ERROR reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On ENTRIES reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On DOT reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On COMPLEMENT reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On APPLY reduce production keyElement -> expression COLON name annotations SEMICOLON
-- On ACTIONS reduce production keyElement -> expression COLON name annotations SEMICOLON

State 851:
tableProperty -> KEY ASSIGN L_BRACE keyElementList . R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On R_BRACE shift to state 852

State 852:
tableProperty -> KEY ASSIGN L_BRACE keyElementList R_BRACE . [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE reduce production tableProperty -> KEY ASSIGN L_BRACE keyElementList R_BRACE
-- On STATE reduce production tableProperty -> KEY ASSIGN L_BRACE keyElementList R_BRACE
-- On R_BRACE reduce production tableProperty -> KEY ASSIGN L_BRACE keyElementList R_BRACE
-- On PRAGMA reduce production tableProperty -> KEY ASSIGN L_BRACE keyElementList R_BRACE
-- On NAME reduce production tableProperty -> KEY ASSIGN L_BRACE keyElementList R_BRACE
-- On KEY reduce production tableProperty -> KEY ASSIGN L_BRACE keyElementList R_BRACE
-- On CONST reduce production tableProperty -> KEY ASSIGN L_BRACE keyElementList R_BRACE
-- On AT reduce production tableProperty -> KEY ASSIGN L_BRACE keyElementList R_BRACE
-- On APPLY reduce production tableProperty -> KEY ASSIGN L_BRACE keyElementList R_BRACE
-- On ACTIONS reduce production tableProperty -> KEY ASSIGN L_BRACE keyElementList R_BRACE

State 853:
tableProperty -> CONST . ENTRIES ASSIGN L_BRACE entriesList R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
tableProperty -> CONST . nonTableKwName ASSIGN initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE shift to state 835
-- On STATE shift to state 836
-- On NAME shift to state 837
-- On ENTRIES shift to state 854
-- On APPLY shift to state 877
-- On varName shift to state 878
-- On nonTableKwName shift to state 879

State 854:
tableProperty -> CONST ENTRIES . ASSIGN L_BRACE entriesList R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On ASSIGN shift to state 855

State 855:
tableProperty -> CONST ENTRIES ASSIGN . L_BRACE entriesList R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On L_BRACE shift to state 856

State 856:
tableProperty -> CONST ENTRIES ASSIGN L_BRACE . entriesList R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On petr4_list(entry) shift to state 857
-- On list_aux(entry) shift to state 858
-- On entriesList shift to state 875
-- On TYPE reduce production list_aux(entry) ->
-- On TRUE reduce production list_aux(entry) ->
-- On STRING_LITERAL reduce production list_aux(entry) ->
-- On STATE reduce production list_aux(entry) ->
-- On R_BRACE reduce production list_aux(entry) ->
-- On PLUS reduce production list_aux(entry) ->
-- On NOT reduce production list_aux(entry) ->
-- On NAME reduce production list_aux(entry) ->
-- On MINUS reduce production list_aux(entry) ->
-- On L_PAREN reduce production list_aux(entry) ->
-- On L_BRACE reduce production list_aux(entry) ->
-- On KEY reduce production list_aux(entry) ->
-- On INTEGER reduce production list_aux(entry) ->
-- On FALSE reduce production list_aux(entry) ->
-- On ERROR reduce production list_aux(entry) ->
-- On ENTRIES reduce production list_aux(entry) ->
-- On DOT reduce production list_aux(entry) ->
-- On DONTCARE reduce production list_aux(entry) ->
-- On DEFAULT reduce production list_aux(entry) ->
-- On COMPLEMENT reduce production list_aux(entry) ->
-- On APPLY reduce production list_aux(entry) ->
-- On ACTIONS reduce production list_aux(entry) ->

State 857:
entriesList -> petr4_list(entry) . [ R_BRACE ]
-- On R_BRACE reduce production entriesList -> petr4_list(entry)

State 858:
list_aux(entry) -> list_aux(entry) . entry [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
petr4_list(entry) -> list_aux(entry) . [ R_BRACE ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 721
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 722
-- On DEFAULT shift to state 723
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tupleKeysetExpression shift to state 737
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On simpleKeysetExpression shift to state 738
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On keysetExpression shift to state 859
-- On expression shift to state 728
-- On entry shift to state 874
-- On dotPrefix shift to state 91
-- On R_BRACE reduce production petr4_list(entry) -> list_aux(entry)

State 859:
entry -> keysetExpression . COLON actionRef SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
entry -> keysetExpression . COLON actionRef annotations SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On COLON shift to state 860

State 860:
entry -> keysetExpression COLON . actionRef SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
entry -> keysetExpression COLON . actionRef annotations SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On PRAGMA shift to state 207
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On AT shift to state 302
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On nonTypeName shift to state 35
-- On name shift to state 861
-- On annotations shift to state 865
-- On annotation shift to state 331
-- On actionRef shift to state 870

State 861:
actionRef -> name . [ SEMICOLON PRAGMA AT ]
actionRef -> name . L_PAREN argumentList R_PAREN [ SEMICOLON PRAGMA AT ]
-- On L_PAREN shift to state 862
-- On SEMICOLON reduce production actionRef -> name
-- On PRAGMA reduce production actionRef -> name
-- On AT reduce production actionRef -> name

State 862:
actionRef -> name L_PAREN . argumentList R_PAREN [ SEMICOLON PRAGMA AT ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 57
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,argument) shift to state 58
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,argument) shift to state 71
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 61
-- On expression shift to state 72
-- On dotPrefix shift to state 91
-- On argumentList shift to state 863
-- On argument shift to state 135
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) ->
-- On COMMA reduce production separated_list_aux(COMMA,argument) ->

State 863:
actionRef -> name L_PAREN argumentList . R_PAREN [ SEMICOLON PRAGMA AT ]
-- On R_PAREN shift to state 864

State 864:
actionRef -> name L_PAREN argumentList R_PAREN . [ SEMICOLON PRAGMA AT ]
-- On SEMICOLON reduce production actionRef -> name L_PAREN argumentList R_PAREN
-- On PRAGMA reduce production actionRef -> name L_PAREN argumentList R_PAREN
-- On AT reduce production actionRef -> name L_PAREN argumentList R_PAREN

State 865:
actionRef -> annotations . name [ SEMICOLON PRAGMA AT ]
actionRef -> annotations . name L_PAREN argumentList R_PAREN [ SEMICOLON PRAGMA AT ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 866

State 866:
actionRef -> annotations name . [ SEMICOLON PRAGMA AT ]
actionRef -> annotations name . L_PAREN argumentList R_PAREN [ SEMICOLON PRAGMA AT ]
-- On L_PAREN shift to state 867
-- On SEMICOLON reduce production actionRef -> annotations name
-- On PRAGMA reduce production actionRef -> annotations name
-- On AT reduce production actionRef -> annotations name

State 867:
actionRef -> annotations name L_PAREN . argumentList R_PAREN [ SEMICOLON PRAGMA AT ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 55
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On DONTCARE shift to state 57
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On separated_list_aux(COMMA,argument) shift to state 58
-- On prefixedType shift to state 44
-- On petr4_separated_list(COMMA,argument) shift to state 71
-- On nonTypeName shift to state 60
-- On namedType shift to state 53
-- On name shift to state 61
-- On expression shift to state 72
-- On dotPrefix shift to state 91
-- On argumentList shift to state 868
-- On argument shift to state 135
-- On R_PAREN reduce production separated_list_aux(COMMA,argument) ->
-- On COMMA reduce production separated_list_aux(COMMA,argument) ->

State 868:
actionRef -> annotations name L_PAREN argumentList . R_PAREN [ SEMICOLON PRAGMA AT ]
-- On R_PAREN shift to state 869

State 869:
actionRef -> annotations name L_PAREN argumentList R_PAREN . [ SEMICOLON PRAGMA AT ]
-- On SEMICOLON reduce production actionRef -> annotations name L_PAREN argumentList R_PAREN
-- On PRAGMA reduce production actionRef -> annotations name L_PAREN argumentList R_PAREN
-- On AT reduce production actionRef -> annotations name L_PAREN argumentList R_PAREN

State 870:
entry -> keysetExpression COLON actionRef . SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
entry -> keysetExpression COLON actionRef . annotations SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On SEMICOLON shift to state 871
-- On PRAGMA shift to state 207
-- On AT shift to state 302
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On annotations shift to state 872
-- On annotation shift to state 331

State 871:
entry -> keysetExpression COLON actionRef SEMICOLON . [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On TYPE reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On TRUE reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On STRING_LITERAL reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On STATE reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On R_BRACE reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On PLUS reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On NOT reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On NAME reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On MINUS reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On L_PAREN reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On L_BRACE reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On KEY reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On INTEGER reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On FALSE reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On ERROR reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On ENTRIES reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On DOT reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On DONTCARE reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On DEFAULT reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On COMPLEMENT reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On APPLY reduce production entry -> keysetExpression COLON actionRef SEMICOLON
-- On ACTIONS reduce production entry -> keysetExpression COLON actionRef SEMICOLON

State 872:
entry -> keysetExpression COLON actionRef annotations . SEMICOLON [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On SEMICOLON shift to state 873

State 873:
entry -> keysetExpression COLON actionRef annotations SEMICOLON . [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On TYPE reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On TRUE reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On STRING_LITERAL reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On STATE reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On R_BRACE reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On PLUS reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On NOT reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On NAME reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On MINUS reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On L_PAREN reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On L_BRACE reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On KEY reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On INTEGER reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On FALSE reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On ERROR reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On ENTRIES reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On DOT reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On DONTCARE reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On DEFAULT reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On COMPLEMENT reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On APPLY reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON
-- On ACTIONS reduce production entry -> keysetExpression COLON actionRef annotations SEMICOLON

State 874:
list_aux(entry) -> list_aux(entry) entry . [ TYPE TRUE STRING_LITERAL STATE R_BRACE PLUS NOT NAME MINUS L_PAREN L_BRACE KEY INTEGER FALSE ERROR ENTRIES DOT DONTCARE DEFAULT COMPLEMENT APPLY ACTIONS ]
-- On TYPE reduce production list_aux(entry) -> list_aux(entry) entry
-- On TRUE reduce production list_aux(entry) -> list_aux(entry) entry
-- On STRING_LITERAL reduce production list_aux(entry) -> list_aux(entry) entry
-- On STATE reduce production list_aux(entry) -> list_aux(entry) entry
-- On R_BRACE reduce production list_aux(entry) -> list_aux(entry) entry
-- On PLUS reduce production list_aux(entry) -> list_aux(entry) entry
-- On NOT reduce production list_aux(entry) -> list_aux(entry) entry
-- On NAME reduce production list_aux(entry) -> list_aux(entry) entry
-- On MINUS reduce production list_aux(entry) -> list_aux(entry) entry
-- On L_PAREN reduce production list_aux(entry) -> list_aux(entry) entry
-- On L_BRACE reduce production list_aux(entry) -> list_aux(entry) entry
-- On KEY reduce production list_aux(entry) -> list_aux(entry) entry
-- On INTEGER reduce production list_aux(entry) -> list_aux(entry) entry
-- On FALSE reduce production list_aux(entry) -> list_aux(entry) entry
-- On ERROR reduce production list_aux(entry) -> list_aux(entry) entry
-- On ENTRIES reduce production list_aux(entry) -> list_aux(entry) entry
-- On DOT reduce production list_aux(entry) -> list_aux(entry) entry
-- On DONTCARE reduce production list_aux(entry) -> list_aux(entry) entry
-- On DEFAULT reduce production list_aux(entry) -> list_aux(entry) entry
-- On COMPLEMENT reduce production list_aux(entry) -> list_aux(entry) entry
-- On APPLY reduce production list_aux(entry) -> list_aux(entry) entry
-- On ACTIONS reduce production list_aux(entry) -> list_aux(entry) entry

State 875:
tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList . R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On R_BRACE shift to state 876

State 876:
tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList R_BRACE . [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE reduce production tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList R_BRACE
-- On STATE reduce production tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList R_BRACE
-- On R_BRACE reduce production tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList R_BRACE
-- On PRAGMA reduce production tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList R_BRACE
-- On NAME reduce production tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList R_BRACE
-- On KEY reduce production tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList R_BRACE
-- On CONST reduce production tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList R_BRACE
-- On AT reduce production tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList R_BRACE
-- On APPLY reduce production tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList R_BRACE
-- On ACTIONS reduce production tableProperty -> CONST ENTRIES ASSIGN L_BRACE entriesList R_BRACE

State 877:
nonTableKwName -> APPLY . [ ASSIGN ]
-- On ASSIGN reduce production nonTableKwName -> APPLY

State 878:
nonTableKwName -> varName . [ ASSIGN ]
-- On ASSIGN reduce production nonTableKwName -> varName

State 879:
tableProperty -> CONST nonTableKwName . ASSIGN initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On ASSIGN shift to state 880

State 880:
tableProperty -> CONST nonTableKwName ASSIGN . initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On initialValue shift to state 881
-- On expression shift to state 526
-- On dotPrefix shift to state 91

State 881:
tableProperty -> CONST nonTableKwName ASSIGN initialValue . SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On SEMICOLON shift to state 882

State 882:
tableProperty -> CONST nonTableKwName ASSIGN initialValue SEMICOLON . [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE reduce production tableProperty -> CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On STATE reduce production tableProperty -> CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On R_BRACE reduce production tableProperty -> CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On PRAGMA reduce production tableProperty -> CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On NAME reduce production tableProperty -> CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On KEY reduce production tableProperty -> CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On CONST reduce production tableProperty -> CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On AT reduce production tableProperty -> CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On APPLY reduce production tableProperty -> CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On ACTIONS reduce production tableProperty -> CONST nonTableKwName ASSIGN initialValue SEMICOLON

State 883:
tableProperty -> ACTIONS . ASSIGN L_BRACE actionList R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On ASSIGN shift to state 884

State 884:
tableProperty -> ACTIONS ASSIGN . L_BRACE actionList R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On L_BRACE shift to state 885

State 885:
tableProperty -> ACTIONS ASSIGN L_BRACE . actionList R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On PRAGMA shift to state 207
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On AT shift to state 302
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On separated_nonempty_list_aux(SEMICOLON,actionRef) shift to state 886
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On nonTypeName shift to state 35
-- On name shift to state 861
-- On annotations shift to state 865
-- On annotation shift to state 331
-- On actionRef shift to state 889
-- On actionList shift to state 890
-- On R_BRACE reduce production actionList ->

State 886:
actionList -> separated_nonempty_list_aux(SEMICOLON,actionRef) . SEMICOLON [ R_BRACE ]
separated_nonempty_list_aux(SEMICOLON,actionRef) -> separated_nonempty_list_aux(SEMICOLON,actionRef) . SEMICOLON actionRef [ SEMICOLON ]
-- On SEMICOLON shift to state 887

State 887:
actionList -> separated_nonempty_list_aux(SEMICOLON,actionRef) SEMICOLON . [ R_BRACE ]
separated_nonempty_list_aux(SEMICOLON,actionRef) -> separated_nonempty_list_aux(SEMICOLON,actionRef) SEMICOLON . actionRef [ SEMICOLON ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On PRAGMA shift to state 207
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On AT shift to state 302
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On nonTypeName shift to state 35
-- On name shift to state 861
-- On annotations shift to state 865
-- On annotation shift to state 331
-- On actionRef shift to state 888
-- On R_BRACE reduce production actionList -> separated_nonempty_list_aux(SEMICOLON,actionRef) SEMICOLON

State 888:
separated_nonempty_list_aux(SEMICOLON,actionRef) -> separated_nonempty_list_aux(SEMICOLON,actionRef) SEMICOLON actionRef . [ SEMICOLON ]
-- On SEMICOLON reduce production separated_nonempty_list_aux(SEMICOLON,actionRef) -> separated_nonempty_list_aux(SEMICOLON,actionRef) SEMICOLON actionRef

State 889:
separated_nonempty_list_aux(SEMICOLON,actionRef) -> actionRef . [ SEMICOLON ]
-- On SEMICOLON reduce production separated_nonempty_list_aux(SEMICOLON,actionRef) -> actionRef

State 890:
tableProperty -> ACTIONS ASSIGN L_BRACE actionList . R_BRACE [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On R_BRACE shift to state 891

State 891:
tableProperty -> ACTIONS ASSIGN L_BRACE actionList R_BRACE . [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE reduce production tableProperty -> ACTIONS ASSIGN L_BRACE actionList R_BRACE
-- On STATE reduce production tableProperty -> ACTIONS ASSIGN L_BRACE actionList R_BRACE
-- On R_BRACE reduce production tableProperty -> ACTIONS ASSIGN L_BRACE actionList R_BRACE
-- On PRAGMA reduce production tableProperty -> ACTIONS ASSIGN L_BRACE actionList R_BRACE
-- On NAME reduce production tableProperty -> ACTIONS ASSIGN L_BRACE actionList R_BRACE
-- On KEY reduce production tableProperty -> ACTIONS ASSIGN L_BRACE actionList R_BRACE
-- On CONST reduce production tableProperty -> ACTIONS ASSIGN L_BRACE actionList R_BRACE
-- On AT reduce production tableProperty -> ACTIONS ASSIGN L_BRACE actionList R_BRACE
-- On APPLY reduce production tableProperty -> ACTIONS ASSIGN L_BRACE actionList R_BRACE
-- On ACTIONS reduce production tableProperty -> ACTIONS ASSIGN L_BRACE actionList R_BRACE

State 892:
tableDeclaration -> TABLE name L_BRACE tablePropertyList . R_BRACE [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On R_BRACE shift to state 893

State 893:
tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE . [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On VARBIT reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On TUPLE reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On TABLE reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On STRING reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On PRAGMA reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On NAME reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On INT reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On ERROR reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On DOT reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On CONST reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On BOOL reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On BIT reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On AT reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On APPLY reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE
-- On ACTION reduce production tableDeclaration -> TABLE name L_BRACE tablePropertyList R_BRACE

State 894:
nonempty_list_aux(tableProperty) -> tableProperty . [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE reduce production nonempty_list_aux(tableProperty) -> tableProperty
-- On STATE reduce production nonempty_list_aux(tableProperty) -> tableProperty
-- On R_BRACE reduce production nonempty_list_aux(tableProperty) -> tableProperty
-- On PRAGMA reduce production nonempty_list_aux(tableProperty) -> tableProperty
-- On NAME reduce production nonempty_list_aux(tableProperty) -> tableProperty
-- On KEY reduce production nonempty_list_aux(tableProperty) -> tableProperty
-- On CONST reduce production nonempty_list_aux(tableProperty) -> tableProperty
-- On AT reduce production nonempty_list_aux(tableProperty) -> tableProperty
-- On APPLY reduce production nonempty_list_aux(tableProperty) -> tableProperty
-- On ACTIONS reduce production nonempty_list_aux(tableProperty) -> tableProperty

State 895:
tablePropertyList -> petr4_nonempty_list(tableProperty) . [ R_BRACE ]
-- On R_BRACE reduce production tablePropertyList -> petr4_nonempty_list(tableProperty)

State 896:
nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) . tableProperty [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
petr4_nonempty_list(tableProperty) -> nonempty_list_aux(tableProperty) . [ R_BRACE ]
-- On TYPE shift to state 835
-- On STATE shift to state 836
-- On PRAGMA shift to state 207
-- On NAME shift to state 837
-- On KEY shift to state 839
-- On CONST shift to state 853
-- On AT shift to state 302
-- On APPLY shift to state 877
-- On ACTIONS shift to state 883
-- On varName shift to state 878
-- On tableProperty shift to state 897
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On nonTableKwName shift to state 898
-- On annotations shift to state 902
-- On annotation shift to state 331
-- On R_BRACE reduce production petr4_nonempty_list(tableProperty) -> nonempty_list_aux(tableProperty)

State 897:
nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) tableProperty . [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE reduce production nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) tableProperty
-- On STATE reduce production nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) tableProperty
-- On R_BRACE reduce production nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) tableProperty
-- On PRAGMA reduce production nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) tableProperty
-- On NAME reduce production nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) tableProperty
-- On KEY reduce production nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) tableProperty
-- On CONST reduce production nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) tableProperty
-- On AT reduce production nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) tableProperty
-- On APPLY reduce production nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) tableProperty
-- On ACTIONS reduce production nonempty_list_aux(tableProperty) -> nonempty_list_aux(tableProperty) tableProperty

State 898:
tableProperty -> nonTableKwName . ASSIGN initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On ASSIGN shift to state 899

State 899:
tableProperty -> nonTableKwName ASSIGN . initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On initialValue shift to state 900
-- On expression shift to state 526
-- On dotPrefix shift to state 91

State 900:
tableProperty -> nonTableKwName ASSIGN initialValue . SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On SEMICOLON shift to state 901

State 901:
tableProperty -> nonTableKwName ASSIGN initialValue SEMICOLON . [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE reduce production tableProperty -> nonTableKwName ASSIGN initialValue SEMICOLON
-- On STATE reduce production tableProperty -> nonTableKwName ASSIGN initialValue SEMICOLON
-- On R_BRACE reduce production tableProperty -> nonTableKwName ASSIGN initialValue SEMICOLON
-- On PRAGMA reduce production tableProperty -> nonTableKwName ASSIGN initialValue SEMICOLON
-- On NAME reduce production tableProperty -> nonTableKwName ASSIGN initialValue SEMICOLON
-- On KEY reduce production tableProperty -> nonTableKwName ASSIGN initialValue SEMICOLON
-- On CONST reduce production tableProperty -> nonTableKwName ASSIGN initialValue SEMICOLON
-- On AT reduce production tableProperty -> nonTableKwName ASSIGN initialValue SEMICOLON
-- On APPLY reduce production tableProperty -> nonTableKwName ASSIGN initialValue SEMICOLON
-- On ACTIONS reduce production tableProperty -> nonTableKwName ASSIGN initialValue SEMICOLON

State 902:
tableProperty -> annotations . CONST nonTableKwName ASSIGN initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
tableProperty -> annotations . nonTableKwName ASSIGN initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE shift to state 835
-- On STATE shift to state 836
-- On NAME shift to state 837
-- On CONST shift to state 903
-- On APPLY shift to state 877
-- On varName shift to state 878
-- On nonTableKwName shift to state 908

State 903:
tableProperty -> annotations CONST . nonTableKwName ASSIGN initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE shift to state 835
-- On STATE shift to state 836
-- On NAME shift to state 837
-- On APPLY shift to state 877
-- On varName shift to state 878
-- On nonTableKwName shift to state 904

State 904:
tableProperty -> annotations CONST nonTableKwName . ASSIGN initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On ASSIGN shift to state 905

State 905:
tableProperty -> annotations CONST nonTableKwName ASSIGN . initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On initialValue shift to state 906
-- On expression shift to state 526
-- On dotPrefix shift to state 91

State 906:
tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue . SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On SEMICOLON shift to state 907

State 907:
tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue SEMICOLON . [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE reduce production tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On STATE reduce production tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On R_BRACE reduce production tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On PRAGMA reduce production tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On NAME reduce production tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On KEY reduce production tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On CONST reduce production tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On AT reduce production tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On APPLY reduce production tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue SEMICOLON
-- On ACTIONS reduce production tableProperty -> annotations CONST nonTableKwName ASSIGN initialValue SEMICOLON

State 908:
tableProperty -> annotations nonTableKwName . ASSIGN initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On ASSIGN shift to state 909

State 909:
tableProperty -> annotations nonTableKwName ASSIGN . initialValue SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE shift to state 5
-- On TRUE shift to state 6
-- On STRING_LITERAL shift to state 7
-- On STATE shift to state 8
-- On PLUS shift to state 9
-- On NOT shift to state 10
-- On NAME shift to state 11
-- On MINUS shift to state 14
-- On L_PAREN shift to state 15
-- On L_BRACE shift to state 23
-- On KEY shift to state 19
-- On INTEGER shift to state 24
-- On FALSE shift to state 25
-- On ERROR shift to state 26
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On COMPLEMENT shift to state 39
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On typeName shift to state 40
-- On tableKwName shift to state 34
-- On specializedType shift to state 43
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 52
-- On namedType shift to state 53
-- On initialValue shift to state 910
-- On expression shift to state 526
-- On dotPrefix shift to state 91

State 910:
tableProperty -> annotations nonTableKwName ASSIGN initialValue . SEMICOLON [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On SEMICOLON shift to state 911

State 911:
tableProperty -> annotations nonTableKwName ASSIGN initialValue SEMICOLON . [ TYPE STATE R_BRACE PRAGMA NAME KEY CONST AT APPLY ACTIONS ]
-- On TYPE reduce production tableProperty -> annotations nonTableKwName ASSIGN initialValue SEMICOLON
-- On STATE reduce production tableProperty -> annotations nonTableKwName ASSIGN initialValue SEMICOLON
-- On R_BRACE reduce production tableProperty -> annotations nonTableKwName ASSIGN initialValue SEMICOLON
-- On PRAGMA reduce production tableProperty -> annotations nonTableKwName ASSIGN initialValue SEMICOLON
-- On NAME reduce production tableProperty -> annotations nonTableKwName ASSIGN initialValue SEMICOLON
-- On KEY reduce production tableProperty -> annotations nonTableKwName ASSIGN initialValue SEMICOLON
-- On CONST reduce production tableProperty -> annotations nonTableKwName ASSIGN initialValue SEMICOLON
-- On AT reduce production tableProperty -> annotations nonTableKwName ASSIGN initialValue SEMICOLON
-- On APPLY reduce production tableProperty -> annotations nonTableKwName ASSIGN initialValue SEMICOLON
-- On ACTIONS reduce production tableProperty -> annotations nonTableKwName ASSIGN initialValue SEMICOLON

State 912:
controlLocalDeclaration -> variableDeclaration . [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On VARBIT reduce production controlLocalDeclaration -> variableDeclaration
-- On TUPLE reduce production controlLocalDeclaration -> variableDeclaration
-- On TABLE reduce production controlLocalDeclaration -> variableDeclaration
-- On STRING reduce production controlLocalDeclaration -> variableDeclaration
-- On PRAGMA reduce production controlLocalDeclaration -> variableDeclaration
-- On NAME reduce production controlLocalDeclaration -> variableDeclaration
-- On INT reduce production controlLocalDeclaration -> variableDeclaration
-- On ERROR reduce production controlLocalDeclaration -> variableDeclaration
-- On DOT reduce production controlLocalDeclaration -> variableDeclaration
-- On CONST reduce production controlLocalDeclaration -> variableDeclaration
-- On BOOL reduce production controlLocalDeclaration -> variableDeclaration
-- On BIT reduce production controlLocalDeclaration -> variableDeclaration
-- On AT reduce production controlLocalDeclaration -> variableDeclaration
-- On APPLY reduce production controlLocalDeclaration -> variableDeclaration
-- On ACTION reduce production controlLocalDeclaration -> variableDeclaration

State 913:
controlLocalDeclaration -> tableDeclaration . [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On VARBIT reduce production controlLocalDeclaration -> tableDeclaration
-- On TUPLE reduce production controlLocalDeclaration -> tableDeclaration
-- On TABLE reduce production controlLocalDeclaration -> tableDeclaration
-- On STRING reduce production controlLocalDeclaration -> tableDeclaration
-- On PRAGMA reduce production controlLocalDeclaration -> tableDeclaration
-- On NAME reduce production controlLocalDeclaration -> tableDeclaration
-- On INT reduce production controlLocalDeclaration -> tableDeclaration
-- On ERROR reduce production controlLocalDeclaration -> tableDeclaration
-- On DOT reduce production controlLocalDeclaration -> tableDeclaration
-- On CONST reduce production controlLocalDeclaration -> tableDeclaration
-- On BOOL reduce production controlLocalDeclaration -> tableDeclaration
-- On BIT reduce production controlLocalDeclaration -> tableDeclaration
-- On AT reduce production controlLocalDeclaration -> tableDeclaration
-- On APPLY reduce production controlLocalDeclaration -> tableDeclaration
-- On ACTION reduce production controlLocalDeclaration -> tableDeclaration

State 914:
controlLocalDeclaration -> instantiation . [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On VARBIT reduce production controlLocalDeclaration -> instantiation
-- On TUPLE reduce production controlLocalDeclaration -> instantiation
-- On TABLE reduce production controlLocalDeclaration -> instantiation
-- On STRING reduce production controlLocalDeclaration -> instantiation
-- On PRAGMA reduce production controlLocalDeclaration -> instantiation
-- On NAME reduce production controlLocalDeclaration -> instantiation
-- On INT reduce production controlLocalDeclaration -> instantiation
-- On ERROR reduce production controlLocalDeclaration -> instantiation
-- On DOT reduce production controlLocalDeclaration -> instantiation
-- On CONST reduce production controlLocalDeclaration -> instantiation
-- On BOOL reduce production controlLocalDeclaration -> instantiation
-- On BIT reduce production controlLocalDeclaration -> instantiation
-- On AT reduce production controlLocalDeclaration -> instantiation
-- On APPLY reduce production controlLocalDeclaration -> instantiation
-- On ACTION reduce production controlLocalDeclaration -> instantiation

State 915:
list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration . [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On VARBIT reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On TUPLE reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On TABLE reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On STRING reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On PRAGMA reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On NAME reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On INT reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On ERROR reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On DOT reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On CONST reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On BOOL reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On BIT reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On AT reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On APPLY reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration
-- On ACTION reduce production list_aux(controlLocalDeclaration) -> list_aux(controlLocalDeclaration) controlLocalDeclaration

State 916:
controlLocalDeclaration -> constantDeclaration . [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On VARBIT reduce production controlLocalDeclaration -> constantDeclaration
-- On TUPLE reduce production controlLocalDeclaration -> constantDeclaration
-- On TABLE reduce production controlLocalDeclaration -> constantDeclaration
-- On STRING reduce production controlLocalDeclaration -> constantDeclaration
-- On PRAGMA reduce production controlLocalDeclaration -> constantDeclaration
-- On NAME reduce production controlLocalDeclaration -> constantDeclaration
-- On INT reduce production controlLocalDeclaration -> constantDeclaration
-- On ERROR reduce production controlLocalDeclaration -> constantDeclaration
-- On DOT reduce production controlLocalDeclaration -> constantDeclaration
-- On CONST reduce production controlLocalDeclaration -> constantDeclaration
-- On BOOL reduce production controlLocalDeclaration -> constantDeclaration
-- On BIT reduce production controlLocalDeclaration -> constantDeclaration
-- On AT reduce production controlLocalDeclaration -> constantDeclaration
-- On APPLY reduce production controlLocalDeclaration -> constantDeclaration
-- On ACTION reduce production controlLocalDeclaration -> constantDeclaration

State 917:
actionDeclaration -> annotations . ACTION name L_PAREN parameterList R_PAREN blockStatement [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
constantDeclaration -> annotations . CONST typeRef name ASSIGN initialValue SEMICOLON [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
instantiation -> annotations . typeRef L_PAREN argumentList R_PAREN name SEMICOLON [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
instantiation -> annotations . typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
tableDeclaration -> annotations . TABLE name L_BRACE tablePropertyList R_BRACE [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
variableDeclaration -> annotations . typeRef name optInitialValue SEMICOLON [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On TABLE shift to state 918
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On CONST shift to state 660
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On ACTION shift to state 923
-- On typeRef shift to state 666
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 918:
tableDeclaration -> annotations TABLE . name L_BRACE tablePropertyList R_BRACE [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 919

State 919:
tableDeclaration -> annotations TABLE name . L_BRACE tablePropertyList R_BRACE [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On L_BRACE shift to state 920

State 920:
tableDeclaration -> annotations TABLE name L_BRACE . tablePropertyList R_BRACE [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On TYPE shift to state 835
-- On STATE shift to state 836
-- On PRAGMA shift to state 207
-- On NAME shift to state 837
-- On KEY shift to state 839
-- On CONST shift to state 853
-- On AT shift to state 302
-- On APPLY shift to state 877
-- On ACTIONS shift to state 883
-- On varName shift to state 878
-- On tablePropertyList shift to state 921
-- On tableProperty shift to state 894
-- On petr4_nonempty_list(tableProperty) shift to state 895
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(tableProperty) shift to state 896
-- On nonempty_list_aux(annotation) shift to state 325
-- On nonTableKwName shift to state 898
-- On annotations shift to state 902
-- On annotation shift to state 331

State 921:
tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList . R_BRACE [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On R_BRACE shift to state 922

State 922:
tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE . [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On VARBIT reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On TUPLE reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On TABLE reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On STRING reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On PRAGMA reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On NAME reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On INT reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On ERROR reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On DOT reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On CONST reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On BOOL reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On BIT reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On AT reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On APPLY reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE
-- On ACTION reduce production tableDeclaration -> annotations TABLE name L_BRACE tablePropertyList R_BRACE

State 923:
actionDeclaration -> annotations ACTION . name L_PAREN parameterList R_PAREN blockStatement [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 924

State 924:
actionDeclaration -> annotations ACTION name . L_PAREN parameterList R_PAREN blockStatement [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On L_PAREN shift to state 925

State 925:
actionDeclaration -> annotations ACTION name L_PAREN . parameterList R_PAREN blockStatement [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 926
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 926:
actionDeclaration -> annotations ACTION name L_PAREN parameterList . R_PAREN blockStatement [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On R_PAREN shift to state 927

State 927:
actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN . blockStatement [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On PRAGMA shift to state 207
-- On L_BRACE shift to state 532
-- On AT shift to state 302
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On blockStatement shift to state 928
-- On annotations shift to state 551
-- On annotation shift to state 331

State 928:
actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement . [ VOID VARBIT TYPEDEF TYPE TUPLE TABLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT APPLY ACTION ]
-- On VOID reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On VARBIT reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On TYPEDEF reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On TYPE reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On TUPLE reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On TABLE reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On STRUCT reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On STRING reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On SEMICOLON reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On PRAGMA reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On PARSER reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On PACKAGE reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On NAME reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On MATCH_KIND reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On INT reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On HEADER_UNION reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On HEADER reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On EXTERN reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On ERROR reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On ENUM reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On END reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On DOT reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On CONTROL reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On CONST reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On BOOL reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On BIT reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On AT reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On APPLY reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement
-- On ACTION reduce production actionDeclaration -> annotations ACTION name L_PAREN parameterList R_PAREN blockStatement

State 929:
controlLocalDeclaration -> actionDeclaration . [ VARBIT TUPLE TABLE STRING PRAGMA NAME INT ERROR DOT CONST BOOL BIT AT APPLY ACTION ]
-- On VARBIT reduce production controlLocalDeclaration -> actionDeclaration
-- On TUPLE reduce production controlLocalDeclaration -> actionDeclaration
-- On TABLE reduce production controlLocalDeclaration -> actionDeclaration
-- On STRING reduce production controlLocalDeclaration -> actionDeclaration
-- On PRAGMA reduce production controlLocalDeclaration -> actionDeclaration
-- On NAME reduce production controlLocalDeclaration -> actionDeclaration
-- On INT reduce production controlLocalDeclaration -> actionDeclaration
-- On ERROR reduce production controlLocalDeclaration -> actionDeclaration
-- On DOT reduce production controlLocalDeclaration -> actionDeclaration
-- On CONST reduce production controlLocalDeclaration -> actionDeclaration
-- On BOOL reduce production controlLocalDeclaration -> actionDeclaration
-- On BIT reduce production controlLocalDeclaration -> actionDeclaration
-- On AT reduce production controlLocalDeclaration -> actionDeclaration
-- On APPLY reduce production controlLocalDeclaration -> actionDeclaration
-- On ACTION reduce production controlLocalDeclaration -> actionDeclaration

State 930:
topDeclaration -> controlDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production topDeclaration -> controlDeclaration
-- On VARBIT reduce production topDeclaration -> controlDeclaration
-- On TYPEDEF reduce production topDeclaration -> controlDeclaration
-- On TYPE reduce production topDeclaration -> controlDeclaration
-- On TUPLE reduce production topDeclaration -> controlDeclaration
-- On STRUCT reduce production topDeclaration -> controlDeclaration
-- On STRING reduce production topDeclaration -> controlDeclaration
-- On SEMICOLON reduce production topDeclaration -> controlDeclaration
-- On PRAGMA reduce production topDeclaration -> controlDeclaration
-- On PARSER reduce production topDeclaration -> controlDeclaration
-- On PACKAGE reduce production topDeclaration -> controlDeclaration
-- On NAME reduce production topDeclaration -> controlDeclaration
-- On MATCH_KIND reduce production topDeclaration -> controlDeclaration
-- On INT reduce production topDeclaration -> controlDeclaration
-- On HEADER_UNION reduce production topDeclaration -> controlDeclaration
-- On HEADER reduce production topDeclaration -> controlDeclaration
-- On EXTERN reduce production topDeclaration -> controlDeclaration
-- On ERROR reduce production topDeclaration -> controlDeclaration
-- On ENUM reduce production topDeclaration -> controlDeclaration
-- On END reduce production topDeclaration -> controlDeclaration
-- On DOT reduce production topDeclaration -> controlDeclaration
-- On CONTROL reduce production topDeclaration -> controlDeclaration
-- On CONST reduce production topDeclaration -> controlDeclaration
-- On BOOL reduce production topDeclaration -> controlDeclaration
-- On BIT reduce production topDeclaration -> controlDeclaration
-- On AT reduce production topDeclaration -> controlDeclaration
-- On ACTION reduce production topDeclaration -> controlDeclaration

State 931:
topDeclaration -> constantDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production topDeclaration -> constantDeclaration
-- On VARBIT reduce production topDeclaration -> constantDeclaration
-- On TYPEDEF reduce production topDeclaration -> constantDeclaration
-- On TYPE reduce production topDeclaration -> constantDeclaration
-- On TUPLE reduce production topDeclaration -> constantDeclaration
-- On STRUCT reduce production topDeclaration -> constantDeclaration
-- On STRING reduce production topDeclaration -> constantDeclaration
-- On SEMICOLON reduce production topDeclaration -> constantDeclaration
-- On PRAGMA reduce production topDeclaration -> constantDeclaration
-- On PARSER reduce production topDeclaration -> constantDeclaration
-- On PACKAGE reduce production topDeclaration -> constantDeclaration
-- On NAME reduce production topDeclaration -> constantDeclaration
-- On MATCH_KIND reduce production topDeclaration -> constantDeclaration
-- On INT reduce production topDeclaration -> constantDeclaration
-- On HEADER_UNION reduce production topDeclaration -> constantDeclaration
-- On HEADER reduce production topDeclaration -> constantDeclaration
-- On EXTERN reduce production topDeclaration -> constantDeclaration
-- On ERROR reduce production topDeclaration -> constantDeclaration
-- On ENUM reduce production topDeclaration -> constantDeclaration
-- On END reduce production topDeclaration -> constantDeclaration
-- On DOT reduce production topDeclaration -> constantDeclaration
-- On CONTROL reduce production topDeclaration -> constantDeclaration
-- On CONST reduce production topDeclaration -> constantDeclaration
-- On BOOL reduce production topDeclaration -> constantDeclaration
-- On BIT reduce production topDeclaration -> constantDeclaration
-- On AT reduce production topDeclaration -> constantDeclaration
-- On ACTION reduce production topDeclaration -> constantDeclaration

State 932:
actionDeclaration -> annotations . ACTION name L_PAREN parameterList R_PAREN blockStatement [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
constantDeclaration -> annotations . CONST typeRef name ASSIGN initialValue SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
controlTypeDeclaration -> annotations . CONTROL push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
enumDeclaration -> annotations . ENUM name L_BRACE identifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
enumDeclaration -> annotations . ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
externDeclaration -> annotations . EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
externDeclaration -> annotations . EXTERN functionPrototype pop_scope SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
headerTypeDeclaration -> annotations . HEADER name L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
headerUnionDeclaration -> annotations . HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
instantiation -> annotations . typeRef L_PAREN argumentList R_PAREN name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
instantiation -> annotations . typeRef L_PAREN argumentList R_PAREN name ASSIGN objInitializer SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
packageTypeDeclaration -> annotations . PACKAGE push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON ]
parserTypeDeclaration -> annotations . PARSER push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
structTypeDeclaration -> annotations . STRUCT name L_BRACE petr4_list(structField) R_BRACE [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
typedefDeclaration -> annotations . TYPEDEF typeRef name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
typedefDeclaration -> annotations . TYPEDEF derivedTypeDeclaration name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
typedefDeclaration -> annotations . TYPE typeRef name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
typedefDeclaration -> annotations . TYPE derivedTypeDeclaration name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VARBIT shift to state 2
-- On TYPEDEF shift to state 933
-- On TYPE shift to state 940
-- On TUPLE shift to state 16
-- On STRUCT shift to state 379
-- On STRING shift to state 18
-- On PARSER shift to state 947
-- On PACKAGE shift to state 953
-- On NAME shift to state 301
-- On INT shift to state 20
-- On HEADER_UNION shift to state 384
-- On HEADER shift to state 389
-- On EXTERN shift to state 959
-- On ERROR shift to state 46
-- On ENUM shift to state 394
-- On DOT shift to state 38
-- On CONTROL shift to state 969
-- On CONST shift to state 660
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On ACTION shift to state 923
-- On typeRef shift to state 638
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 933:
typedefDeclaration -> annotations TYPEDEF . typeRef name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
typedefDeclaration -> annotations TYPEDEF . derivedTypeDeclaration name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRUCT shift to state 201
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On HEADER_UNION shift to state 332
-- On HEADER shift to state 337
-- On ERROR shift to state 46
-- On ENUM shift to state 342
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On typeRef shift to state 934
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On structTypeDeclaration shift to state 371
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On headerUnionDeclaration shift to state 372
-- On headerTypeDeclaration shift to state 373
-- On headerStackType shift to state 142
-- On enumDeclaration shift to state 374
-- On dotPrefix shift to state 143
-- On derivedTypeDeclaration shift to state 937
-- On baseType shift to state 146
-- On annotations shift to state 378
-- On annotation shift to state 331

State 934:
typedefDeclaration -> annotations TYPEDEF typeRef . name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 935

State 935:
typedefDeclaration -> annotations TYPEDEF typeRef name . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 936

State 936:
typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On VARBIT reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On TYPEDEF reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On TYPE reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On TUPLE reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On STRUCT reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On STRING reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On SEMICOLON reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On PRAGMA reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On PARSER reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On PACKAGE reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On NAME reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On MATCH_KIND reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On INT reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On HEADER_UNION reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On HEADER reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On EXTERN reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On ERROR reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On ENUM reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On END reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On DOT reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On CONTROL reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On CONST reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On BOOL reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On BIT reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On AT reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON
-- On ACTION reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON

State 937:
typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration . name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 938

State 938:
typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 939

State 939:
typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On VARBIT reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On TYPEDEF reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On TYPE reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On TUPLE reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On STRUCT reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On STRING reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On SEMICOLON reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On PRAGMA reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On PARSER reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On PACKAGE reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On NAME reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On MATCH_KIND reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On INT reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On HEADER_UNION reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On HEADER reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On EXTERN reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On ERROR reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On ENUM reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On END reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On DOT reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On CONTROL reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On CONST reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On BOOL reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On BIT reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On AT reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON
-- On ACTION reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON

State 940:
typedefDeclaration -> annotations TYPE . typeRef name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
typedefDeclaration -> annotations TYPE . derivedTypeDeclaration name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRUCT shift to state 201
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On HEADER_UNION shift to state 332
-- On HEADER shift to state 337
-- On ERROR shift to state 46
-- On ENUM shift to state 342
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On typeRef shift to state 941
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On structTypeDeclaration shift to state 371
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On headerUnionDeclaration shift to state 372
-- On headerTypeDeclaration shift to state 373
-- On headerStackType shift to state 142
-- On enumDeclaration shift to state 374
-- On dotPrefix shift to state 143
-- On derivedTypeDeclaration shift to state 944
-- On baseType shift to state 146
-- On annotations shift to state 378
-- On annotation shift to state 331

State 941:
typedefDeclaration -> annotations TYPE typeRef . name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 942

State 942:
typedefDeclaration -> annotations TYPE typeRef name . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 943

State 943:
typedefDeclaration -> annotations TYPE typeRef name SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On VARBIT reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On TYPEDEF reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On TYPE reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On TUPLE reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On STRUCT reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On STRING reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On SEMICOLON reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On PRAGMA reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On PARSER reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On PACKAGE reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On NAME reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On MATCH_KIND reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On INT reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On HEADER_UNION reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On HEADER reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On EXTERN reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On ERROR reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On ENUM reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On END reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On DOT reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On CONTROL reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On CONST reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On BOOL reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On BIT reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On AT reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON
-- On ACTION reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON

State 944:
typedefDeclaration -> annotations TYPE derivedTypeDeclaration . name SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 945

State 945:
typedefDeclaration -> annotations TYPE derivedTypeDeclaration name . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 946

State 946:
typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On VARBIT reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On TYPEDEF reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On TYPE reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On TUPLE reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On STRUCT reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On STRING reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On SEMICOLON reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On PRAGMA reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On PARSER reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On PACKAGE reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On NAME reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On MATCH_KIND reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On INT reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On HEADER_UNION reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On HEADER reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On EXTERN reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On ERROR reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On ENUM reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On END reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On DOT reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On CONTROL reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On CONST reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On BOOL reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On BIT reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On AT reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON
-- On ACTION reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON

State 947:
parserTypeDeclaration -> annotations PARSER . push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On push_name shift to state 948
-- On nonTypeName shift to state 35
-- On name shift to state 448

State 948:
parserTypeDeclaration -> annotations PARSER push_name . optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On L_ANGLE shift to state 417
-- On optTypeParameters shift to state 949
-- On L_PAREN reduce production optTypeParameters ->

State 949:
parserTypeDeclaration -> annotations PARSER push_name optTypeParameters . L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On L_PAREN shift to state 950

State 950:
parserTypeDeclaration -> annotations PARSER push_name optTypeParameters L_PAREN . parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 951
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 951:
parserTypeDeclaration -> annotations PARSER push_name optTypeParameters L_PAREN parameterList . R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On R_PAREN shift to state 952

State 952:
parserTypeDeclaration -> annotations PARSER push_name optTypeParameters L_PAREN parameterList R_PAREN . [ SEMICOLON L_PAREN L_BRACE ]
-- On SEMICOLON reduce production parserTypeDeclaration -> annotations PARSER push_name optTypeParameters L_PAREN parameterList R_PAREN
-- On L_PAREN reduce production parserTypeDeclaration -> annotations PARSER push_name optTypeParameters L_PAREN parameterList R_PAREN
-- On L_BRACE reduce production parserTypeDeclaration -> annotations PARSER push_name optTypeParameters L_PAREN parameterList R_PAREN

State 953:
packageTypeDeclaration -> annotations PACKAGE . push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On push_name shift to state 954
-- On nonTypeName shift to state 35
-- On name shift to state 448

State 954:
packageTypeDeclaration -> annotations PACKAGE push_name . optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON ]
-- On L_ANGLE shift to state 417
-- On optTypeParameters shift to state 955
-- On L_PAREN reduce production optTypeParameters ->

State 955:
packageTypeDeclaration -> annotations PACKAGE push_name optTypeParameters . L_PAREN parameterList R_PAREN [ SEMICOLON ]
-- On L_PAREN shift to state 956

State 956:
packageTypeDeclaration -> annotations PACKAGE push_name optTypeParameters L_PAREN . parameterList R_PAREN [ SEMICOLON ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 957
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 957:
packageTypeDeclaration -> annotations PACKAGE push_name optTypeParameters L_PAREN parameterList . R_PAREN [ SEMICOLON ]
-- On R_PAREN shift to state 958

State 958:
packageTypeDeclaration -> annotations PACKAGE push_name optTypeParameters L_PAREN parameterList R_PAREN . [ SEMICOLON ]
-- On SEMICOLON reduce production packageTypeDeclaration -> annotations PACKAGE push_name optTypeParameters L_PAREN parameterList R_PAREN

State 959:
externDeclaration -> annotations EXTERN . push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
externDeclaration -> annotations EXTERN . functionPrototype pop_scope SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID shift to state 1
-- On VARBIT shift to state 2
-- On TYPE shift to state 5
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On STATE shift to state 8
-- On NAME shift to state 11
-- On KEY shift to state 19
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On ENTRIES shift to state 30
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 460
-- On typeRef shift to state 461
-- On typeOrVoid shift to state 462
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On tableKwName shift to state 34
-- On specializedType shift to state 140
-- On push_externName shift to state 960
-- On prefixedType shift to state 44
-- On nonTypeName shift to state 505
-- On headerStackType shift to state 142
-- On functionPrototype shift to state 966
-- On externName shift to state 509
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 960:
externDeclaration -> annotations EXTERN push_externName . optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On L_ANGLE shift to state 417
-- On optTypeParameters shift to state 961
-- On L_BRACE reduce production optTypeParameters ->

State 961:
externDeclaration -> annotations EXTERN push_externName optTypeParameters . L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On L_BRACE shift to state 962

State 962:
externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE . petr4_list(methodPrototype) R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On petr4_list(methodPrototype) shift to state 963
-- On list_aux(methodPrototype) shift to state 475
-- On VOID reduce production list_aux(methodPrototype) ->
-- On VARBIT reduce production list_aux(methodPrototype) ->
-- On TYPE reduce production list_aux(methodPrototype) ->
-- On TUPLE reduce production list_aux(methodPrototype) ->
-- On STRING reduce production list_aux(methodPrototype) ->
-- On STATE reduce production list_aux(methodPrototype) ->
-- On R_BRACE reduce production list_aux(methodPrototype) ->
-- On PRAGMA reduce production list_aux(methodPrototype) ->
-- On NAME reduce production list_aux(methodPrototype) ->
-- On KEY reduce production list_aux(methodPrototype) ->
-- On INT reduce production list_aux(methodPrototype) ->
-- On ERROR reduce production list_aux(methodPrototype) ->
-- On ENTRIES reduce production list_aux(methodPrototype) ->
-- On DOT reduce production list_aux(methodPrototype) ->
-- On BOOL reduce production list_aux(methodPrototype) ->
-- On BIT reduce production list_aux(methodPrototype) ->
-- On AT reduce production list_aux(methodPrototype) ->
-- On APPLY reduce production list_aux(methodPrototype) ->
-- On ACTIONS reduce production list_aux(methodPrototype) ->
-- On ABSTRACT reduce production list_aux(methodPrototype) ->

State 963:
externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) . R_BRACE pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On R_BRACE shift to state 964

State 964:
externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE . pop_scope [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On pop_scope shift to state 965
-- On VOID reduce production pop_scope ->
-- On VARBIT reduce production pop_scope ->
-- On TYPEDEF reduce production pop_scope ->
-- On TYPE reduce production pop_scope ->
-- On TUPLE reduce production pop_scope ->
-- On STRUCT reduce production pop_scope ->
-- On STRING reduce production pop_scope ->
-- On SEMICOLON reduce production pop_scope ->
-- On PRAGMA reduce production pop_scope ->
-- On PARSER reduce production pop_scope ->
-- On PACKAGE reduce production pop_scope ->
-- On NAME reduce production pop_scope ->
-- On MATCH_KIND reduce production pop_scope ->
-- On INT reduce production pop_scope ->
-- On HEADER_UNION reduce production pop_scope ->
-- On HEADER reduce production pop_scope ->
-- On EXTERN reduce production pop_scope ->
-- On ERROR reduce production pop_scope ->
-- On ENUM reduce production pop_scope ->
-- On END reduce production pop_scope ->
-- On DOT reduce production pop_scope ->
-- On CONTROL reduce production pop_scope ->
-- On CONST reduce production pop_scope ->
-- On BOOL reduce production pop_scope ->
-- On BIT reduce production pop_scope ->
-- On AT reduce production pop_scope ->
-- On ACTION reduce production pop_scope ->

State 965:
externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On VARBIT reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On TYPEDEF reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On TYPE reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On TUPLE reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On STRUCT reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On STRING reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On SEMICOLON reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On PRAGMA reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On PARSER reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On PACKAGE reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On NAME reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On MATCH_KIND reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On INT reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On HEADER_UNION reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On HEADER reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On EXTERN reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On ERROR reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On ENUM reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On END reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On DOT reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On CONTROL reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On CONST reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On BOOL reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On BIT reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On AT reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope
-- On ACTION reduce production externDeclaration -> annotations EXTERN push_externName optTypeParameters L_BRACE petr4_list(methodPrototype) R_BRACE pop_scope

State 966:
externDeclaration -> annotations EXTERN functionPrototype . pop_scope SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On pop_scope shift to state 967
-- On SEMICOLON reduce production pop_scope ->

State 967:
externDeclaration -> annotations EXTERN functionPrototype pop_scope . SEMICOLON [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On SEMICOLON shift to state 968

State 968:
externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On VARBIT reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On TYPEDEF reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On TYPE reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On TUPLE reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On STRUCT reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On STRING reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On SEMICOLON reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On PRAGMA reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On PARSER reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On PACKAGE reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On NAME reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On MATCH_KIND reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On INT reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On HEADER_UNION reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On HEADER reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On EXTERN reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On ERROR reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On ENUM reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On END reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On DOT reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On CONTROL reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On CONST reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On BOOL reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On BIT reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On AT reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON
-- On ACTION reduce production externDeclaration -> annotations EXTERN functionPrototype pop_scope SEMICOLON

State 969:
controlTypeDeclaration -> annotations CONTROL . push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On push_name shift to state 970
-- On nonTypeName shift to state 35
-- On name shift to state 448

State 970:
controlTypeDeclaration -> annotations CONTROL push_name . optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On L_ANGLE shift to state 417
-- On optTypeParameters shift to state 971
-- On L_PAREN reduce production optTypeParameters ->

State 971:
controlTypeDeclaration -> annotations CONTROL push_name optTypeParameters . L_PAREN parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On L_PAREN shift to state 972

State 972:
controlTypeDeclaration -> annotations CONTROL push_name optTypeParameters L_PAREN . parameterList R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On PRAGMA shift to state 207
-- On OUT shift to state 427
-- On INOUT shift to state 428
-- On IN shift to state 429
-- On AT shift to state 302
-- On separated_list_aux(COMMA,parameter) shift to state 430
-- On petr4_separated_list(COMMA,parameter) shift to state 444
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parameterList shift to state 973
-- On parameter shift to state 447
-- On nonempty_list_aux(annotation) shift to state 325
-- On direction shift to state 433
-- On annotations shift to state 438
-- On annotation shift to state 331
-- On VARBIT reduce production direction ->
-- On TUPLE reduce production direction ->
-- On STRING reduce production direction ->
-- On R_PAREN reduce production separated_list_aux(COMMA,parameter) ->
-- On NAME reduce production direction ->
-- On INT reduce production direction ->
-- On ERROR reduce production direction ->
-- On DOT reduce production direction ->
-- On COMMA reduce production separated_list_aux(COMMA,parameter) ->
-- On BOOL reduce production direction ->
-- On BIT reduce production direction ->

State 973:
controlTypeDeclaration -> annotations CONTROL push_name optTypeParameters L_PAREN parameterList . R_PAREN [ SEMICOLON L_PAREN L_BRACE ]
-- On R_PAREN shift to state 974

State 974:
controlTypeDeclaration -> annotations CONTROL push_name optTypeParameters L_PAREN parameterList R_PAREN . [ SEMICOLON L_PAREN L_BRACE ]
-- On SEMICOLON reduce production controlTypeDeclaration -> annotations CONTROL push_name optTypeParameters L_PAREN parameterList R_PAREN
-- On L_PAREN reduce production controlTypeDeclaration -> annotations CONTROL push_name optTypeParameters L_PAREN parameterList R_PAREN
-- On L_BRACE reduce production controlTypeDeclaration -> annotations CONTROL push_name optTypeParameters L_PAREN parameterList R_PAREN

State 975:
topDeclaration -> actionDeclaration . [ VOID VARBIT TYPEDEF TYPE TUPLE STRUCT STRING SEMICOLON PRAGMA PARSER PACKAGE NAME MATCH_KIND INT HEADER_UNION HEADER EXTERN ERROR ENUM END DOT CONTROL CONST BOOL BIT AT ACTION ]
-- On VOID reduce production topDeclaration -> actionDeclaration
-- On VARBIT reduce production topDeclaration -> actionDeclaration
-- On TYPEDEF reduce production topDeclaration -> actionDeclaration
-- On TYPE reduce production topDeclaration -> actionDeclaration
-- On TUPLE reduce production topDeclaration -> actionDeclaration
-- On STRUCT reduce production topDeclaration -> actionDeclaration
-- On STRING reduce production topDeclaration -> actionDeclaration
-- On SEMICOLON reduce production topDeclaration -> actionDeclaration
-- On PRAGMA reduce production topDeclaration -> actionDeclaration
-- On PARSER reduce production topDeclaration -> actionDeclaration
-- On PACKAGE reduce production topDeclaration -> actionDeclaration
-- On NAME reduce production topDeclaration -> actionDeclaration
-- On MATCH_KIND reduce production topDeclaration -> actionDeclaration
-- On INT reduce production topDeclaration -> actionDeclaration
-- On HEADER_UNION reduce production topDeclaration -> actionDeclaration
-- On HEADER reduce production topDeclaration -> actionDeclaration
-- On EXTERN reduce production topDeclaration -> actionDeclaration
-- On ERROR reduce production topDeclaration -> actionDeclaration
-- On ENUM reduce production topDeclaration -> actionDeclaration
-- On END reduce production topDeclaration -> actionDeclaration
-- On DOT reduce production topDeclaration -> actionDeclaration
-- On CONTROL reduce production topDeclaration -> actionDeclaration
-- On CONST reduce production topDeclaration -> actionDeclaration
-- On BOOL reduce production topDeclaration -> actionDeclaration
-- On BIT reduce production topDeclaration -> actionDeclaration
-- On AT reduce production topDeclaration -> actionDeclaration
-- On ACTION reduce production topDeclaration -> actionDeclaration

State 976:
p4program -> topDeclarationList . END [ # ]
-- On END shift to state 977

State 977:
p4program -> topDeclarationList END . [ # ]
-- On # reduce production p4program -> topDeclarationList END

State 978:
p4program' -> p4program . [ # ]
-- On # accept p4program

State 979:
typeDeclaration' -> . typeDeclaration [ # ]
-- On TYPEDEF shift to state 980
-- On TYPE shift to state 987
-- On STRUCT shift to state 994
-- On PRAGMA shift to state 207
-- On PARSER shift to state 415
-- On PACKAGE shift to state 449
-- On HEADER_UNION shift to state 999
-- On HEADER shift to state 1004
-- On ENUM shift to state 1009
-- On CONTROL shift to state 514
-- On AT shift to state 302
-- On typedefDeclaration shift to state 1022
-- On typeDeclaration shift to state 1023
-- On structTypeDeclaration shift to state 1024
-- On petr4_nonempty_list(annotation) shift to state 324
-- On parserTypeDeclaration shift to state 1025
-- On packageTypeDeclaration shift to state 1028
-- On nonempty_list_aux(annotation) shift to state 325
-- On headerUnionDeclaration shift to state 1031
-- On headerTypeDeclaration shift to state 1032
-- On enumDeclaration shift to state 1033
-- On derivedTypeDeclaration shift to state 1034
-- On controlTypeDeclaration shift to state 1035
-- On annotations shift to state 1038
-- On annotation shift to state 331

State 980:
typedefDeclaration -> TYPEDEF . typeRef name SEMICOLON [ # ]
typedefDeclaration -> TYPEDEF . derivedTypeDeclaration name SEMICOLON [ # ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRUCT shift to state 201
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On HEADER_UNION shift to state 332
-- On HEADER shift to state 337
-- On ERROR shift to state 46
-- On ENUM shift to state 342
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On typeRef shift to state 981
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On structTypeDeclaration shift to state 371
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On headerUnionDeclaration shift to state 372
-- On headerTypeDeclaration shift to state 373
-- On headerStackType shift to state 142
-- On enumDeclaration shift to state 374
-- On dotPrefix shift to state 143
-- On derivedTypeDeclaration shift to state 984
-- On baseType shift to state 146
-- On annotations shift to state 378
-- On annotation shift to state 331

State 981:
typedefDeclaration -> TYPEDEF typeRef . name SEMICOLON [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 982

State 982:
typedefDeclaration -> TYPEDEF typeRef name . SEMICOLON [ # ]
-- On SEMICOLON shift to state 983

State 983:
typedefDeclaration -> TYPEDEF typeRef name SEMICOLON . [ # ]
-- On # reduce production typedefDeclaration -> TYPEDEF typeRef name SEMICOLON

State 984:
typedefDeclaration -> TYPEDEF derivedTypeDeclaration . name SEMICOLON [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 985

State 985:
typedefDeclaration -> TYPEDEF derivedTypeDeclaration name . SEMICOLON [ # ]
-- On SEMICOLON shift to state 986

State 986:
typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON . [ # ]
-- On # reduce production typedefDeclaration -> TYPEDEF derivedTypeDeclaration name SEMICOLON

State 987:
typedefDeclaration -> TYPE . typeRef name SEMICOLON [ # ]
typedefDeclaration -> TYPE . derivedTypeDeclaration name SEMICOLON [ # ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRUCT shift to state 201
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On HEADER_UNION shift to state 332
-- On HEADER shift to state 337
-- On ERROR shift to state 46
-- On ENUM shift to state 342
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On typeRef shift to state 988
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On structTypeDeclaration shift to state 371
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On headerUnionDeclaration shift to state 372
-- On headerTypeDeclaration shift to state 373
-- On headerStackType shift to state 142
-- On enumDeclaration shift to state 374
-- On dotPrefix shift to state 143
-- On derivedTypeDeclaration shift to state 991
-- On baseType shift to state 146
-- On annotations shift to state 378
-- On annotation shift to state 331

State 988:
typedefDeclaration -> TYPE typeRef . name SEMICOLON [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 989

State 989:
typedefDeclaration -> TYPE typeRef name . SEMICOLON [ # ]
-- On SEMICOLON shift to state 990

State 990:
typedefDeclaration -> TYPE typeRef name SEMICOLON . [ # ]
-- On # reduce production typedefDeclaration -> TYPE typeRef name SEMICOLON

State 991:
typedefDeclaration -> TYPE derivedTypeDeclaration . name SEMICOLON [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 992

State 992:
typedefDeclaration -> TYPE derivedTypeDeclaration name . SEMICOLON [ # ]
-- On SEMICOLON shift to state 993

State 993:
typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON . [ # ]
-- On # reduce production typedefDeclaration -> TYPE derivedTypeDeclaration name SEMICOLON

State 994:
structTypeDeclaration -> STRUCT . name L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 995

State 995:
structTypeDeclaration -> STRUCT name . L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On L_BRACE shift to state 996

State 996:
structTypeDeclaration -> STRUCT name L_BRACE . petr4_list(structField) R_BRACE [ # ]
-- On petr4_list(structField) shift to state 997
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 997:
structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) . R_BRACE [ # ]
-- On R_BRACE shift to state 998

State 998:
structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE . [ # ]
-- On # reduce production structTypeDeclaration -> STRUCT name L_BRACE petr4_list(structField) R_BRACE

State 999:
headerUnionDeclaration -> HEADER_UNION . name L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1000

State 1000:
headerUnionDeclaration -> HEADER_UNION name . L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On L_BRACE shift to state 1001

State 1001:
headerUnionDeclaration -> HEADER_UNION name L_BRACE . petr4_list(structField) R_BRACE [ # ]
-- On petr4_list(structField) shift to state 1002
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 1002:
headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) . R_BRACE [ # ]
-- On R_BRACE shift to state 1003

State 1003:
headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE . [ # ]
-- On # reduce production headerUnionDeclaration -> HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE

State 1004:
headerTypeDeclaration -> HEADER . name L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1005

State 1005:
headerTypeDeclaration -> HEADER name . L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On L_BRACE shift to state 1006

State 1006:
headerTypeDeclaration -> HEADER name L_BRACE . petr4_list(structField) R_BRACE [ # ]
-- On petr4_list(structField) shift to state 1007
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 1007:
headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) . R_BRACE [ # ]
-- On R_BRACE shift to state 1008

State 1008:
headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE . [ # ]
-- On # reduce production headerTypeDeclaration -> HEADER name L_BRACE petr4_list(structField) R_BRACE

State 1009:
enumDeclaration -> ENUM . name L_BRACE identifierList R_BRACE [ # ]
enumDeclaration -> ENUM . BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On BIT shift to state 1010
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1018

State 1010:
enumDeclaration -> ENUM BIT . L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On L_ANGLE shift to state 1011

State 1011:
enumDeclaration -> ENUM BIT L_ANGLE . INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On INTEGER shift to state 1012

State 1012:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER . R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On R_ANGLE shift to state 1013

State 1013:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE . name L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1014

State 1014:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name . L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On L_BRACE shift to state 1015

State 1015:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE . specifiedIdentifierList R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On specifiedIdentifierList shift to state 1016
-- On specifiedIdentifier shift to state 351
-- On separated_nonempty_list_aux(COMMA,__anonymous_1) shift to state 352
-- On petr4_separated_nonempty_list(COMMA,__anonymous_1) shift to state 358
-- On nonTypeName shift to state 35
-- On name shift to state 355

State 1016:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList . R_BRACE [ # ]
-- On R_BRACE shift to state 1017

State 1017:
enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE . [ # ]
-- On # reduce production enumDeclaration -> ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE

State 1018:
enumDeclaration -> ENUM name . L_BRACE identifierList R_BRACE [ # ]
-- On L_BRACE shift to state 1019

State 1019:
enumDeclaration -> ENUM name L_BRACE . identifierList R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On separated_nonempty_list_aux(COMMA,__anonymous_0) shift to state 361
-- On petr4_separated_nonempty_list(COMMA,__anonymous_0) shift to state 364
-- On nonTypeName shift to state 35
-- On name shift to state 365
-- On identifierList shift to state 1020

State 1020:
enumDeclaration -> ENUM name L_BRACE identifierList . R_BRACE [ # ]
-- On R_BRACE shift to state 1021

State 1021:
enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE . [ # ]
-- On # reduce production enumDeclaration -> ENUM name L_BRACE identifierList R_BRACE

State 1022:
typeDeclaration -> typedefDeclaration . [ # ]
-- On # reduce production typeDeclaration -> typedefDeclaration

State 1023:
typeDeclaration' -> typeDeclaration . [ # ]
-- On # accept typeDeclaration

State 1024:
derivedTypeDeclaration -> structTypeDeclaration . [ # ]
-- On # reduce production derivedTypeDeclaration -> structTypeDeclaration

State 1025:
typeDeclaration -> parserTypeDeclaration . pop_scope SEMICOLON [ # ]
-- On pop_scope shift to state 1026
-- On SEMICOLON reduce production pop_scope ->

State 1026:
typeDeclaration -> parserTypeDeclaration pop_scope . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1027

State 1027:
typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON . [ # ]
-- On # reduce production typeDeclaration -> parserTypeDeclaration pop_scope SEMICOLON

State 1028:
typeDeclaration -> packageTypeDeclaration . pop_scope SEMICOLON [ # ]
-- On pop_scope shift to state 1029
-- On SEMICOLON reduce production pop_scope ->

State 1029:
typeDeclaration -> packageTypeDeclaration pop_scope . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1030

State 1030:
typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON . [ # ]
-- On # reduce production typeDeclaration -> packageTypeDeclaration pop_scope SEMICOLON

State 1031:
derivedTypeDeclaration -> headerUnionDeclaration . [ # ]
-- On # reduce production derivedTypeDeclaration -> headerUnionDeclaration

State 1032:
derivedTypeDeclaration -> headerTypeDeclaration . [ # ]
-- On # reduce production derivedTypeDeclaration -> headerTypeDeclaration

State 1033:
derivedTypeDeclaration -> enumDeclaration . [ # ]
-- On # reduce production derivedTypeDeclaration -> enumDeclaration

State 1034:
typeDeclaration -> derivedTypeDeclaration . [ # ]
-- On # reduce production typeDeclaration -> derivedTypeDeclaration

State 1035:
typeDeclaration -> controlTypeDeclaration . pop_scope SEMICOLON [ # ]
-- On pop_scope shift to state 1036
-- On SEMICOLON reduce production pop_scope ->

State 1036:
typeDeclaration -> controlTypeDeclaration pop_scope . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1037

State 1037:
typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON . [ # ]
-- On # reduce production typeDeclaration -> controlTypeDeclaration pop_scope SEMICOLON

State 1038:
controlTypeDeclaration -> annotations . CONTROL push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON ]
enumDeclaration -> annotations . ENUM name L_BRACE identifierList R_BRACE [ # ]
enumDeclaration -> annotations . ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ # ]
headerTypeDeclaration -> annotations . HEADER name L_BRACE petr4_list(structField) R_BRACE [ # ]
headerUnionDeclaration -> annotations . HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE [ # ]
packageTypeDeclaration -> annotations . PACKAGE push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON ]
parserTypeDeclaration -> annotations . PARSER push_name optTypeParameters L_PAREN parameterList R_PAREN [ SEMICOLON ]
structTypeDeclaration -> annotations . STRUCT name L_BRACE petr4_list(structField) R_BRACE [ # ]
typedefDeclaration -> annotations . TYPEDEF typeRef name SEMICOLON [ # ]
typedefDeclaration -> annotations . TYPEDEF derivedTypeDeclaration name SEMICOLON [ # ]
typedefDeclaration -> annotations . TYPE typeRef name SEMICOLON [ # ]
typedefDeclaration -> annotations . TYPE derivedTypeDeclaration name SEMICOLON [ # ]
-- On TYPEDEF shift to state 1039
-- On TYPE shift to state 1046
-- On STRUCT shift to state 1053
-- On PARSER shift to state 947
-- On PACKAGE shift to state 953
-- On HEADER_UNION shift to state 1058
-- On HEADER shift to state 1063
-- On ENUM shift to state 1068
-- On CONTROL shift to state 969

State 1039:
typedefDeclaration -> annotations TYPEDEF . typeRef name SEMICOLON [ # ]
typedefDeclaration -> annotations TYPEDEF . derivedTypeDeclaration name SEMICOLON [ # ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRUCT shift to state 201
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On HEADER_UNION shift to state 332
-- On HEADER shift to state 337
-- On ERROR shift to state 46
-- On ENUM shift to state 342
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On typeRef shift to state 1040
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On structTypeDeclaration shift to state 371
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On headerUnionDeclaration shift to state 372
-- On headerTypeDeclaration shift to state 373
-- On headerStackType shift to state 142
-- On enumDeclaration shift to state 374
-- On dotPrefix shift to state 143
-- On derivedTypeDeclaration shift to state 1043
-- On baseType shift to state 146
-- On annotations shift to state 378
-- On annotation shift to state 331

State 1040:
typedefDeclaration -> annotations TYPEDEF typeRef . name SEMICOLON [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1041

State 1041:
typedefDeclaration -> annotations TYPEDEF typeRef name . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1042

State 1042:
typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON . [ # ]
-- On # reduce production typedefDeclaration -> annotations TYPEDEF typeRef name SEMICOLON

State 1043:
typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration . name SEMICOLON [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1044

State 1044:
typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1045

State 1045:
typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON . [ # ]
-- On # reduce production typedefDeclaration -> annotations TYPEDEF derivedTypeDeclaration name SEMICOLON

State 1046:
typedefDeclaration -> annotations TYPE . typeRef name SEMICOLON [ # ]
typedefDeclaration -> annotations TYPE . derivedTypeDeclaration name SEMICOLON [ # ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRUCT shift to state 201
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On HEADER_UNION shift to state 332
-- On HEADER shift to state 337
-- On ERROR shift to state 46
-- On ENUM shift to state 342
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On typeRef shift to state 1047
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On structTypeDeclaration shift to state 371
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On headerUnionDeclaration shift to state 372
-- On headerTypeDeclaration shift to state 373
-- On headerStackType shift to state 142
-- On enumDeclaration shift to state 374
-- On dotPrefix shift to state 143
-- On derivedTypeDeclaration shift to state 1050
-- On baseType shift to state 146
-- On annotations shift to state 378
-- On annotation shift to state 331

State 1047:
typedefDeclaration -> annotations TYPE typeRef . name SEMICOLON [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1048

State 1048:
typedefDeclaration -> annotations TYPE typeRef name . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1049

State 1049:
typedefDeclaration -> annotations TYPE typeRef name SEMICOLON . [ # ]
-- On # reduce production typedefDeclaration -> annotations TYPE typeRef name SEMICOLON

State 1050:
typedefDeclaration -> annotations TYPE derivedTypeDeclaration . name SEMICOLON [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1051

State 1051:
typedefDeclaration -> annotations TYPE derivedTypeDeclaration name . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1052

State 1052:
typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON . [ # ]
-- On # reduce production typedefDeclaration -> annotations TYPE derivedTypeDeclaration name SEMICOLON

State 1053:
structTypeDeclaration -> annotations STRUCT . name L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1054

State 1054:
structTypeDeclaration -> annotations STRUCT name . L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On L_BRACE shift to state 1055

State 1055:
structTypeDeclaration -> annotations STRUCT name L_BRACE . petr4_list(structField) R_BRACE [ # ]
-- On petr4_list(structField) shift to state 1056
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 1056:
structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) . R_BRACE [ # ]
-- On R_BRACE shift to state 1057

State 1057:
structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE . [ # ]
-- On # reduce production structTypeDeclaration -> annotations STRUCT name L_BRACE petr4_list(structField) R_BRACE

State 1058:
headerUnionDeclaration -> annotations HEADER_UNION . name L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1059

State 1059:
headerUnionDeclaration -> annotations HEADER_UNION name . L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On L_BRACE shift to state 1060

State 1060:
headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE . petr4_list(structField) R_BRACE [ # ]
-- On petr4_list(structField) shift to state 1061
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 1061:
headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) . R_BRACE [ # ]
-- On R_BRACE shift to state 1062

State 1062:
headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE . [ # ]
-- On # reduce production headerUnionDeclaration -> annotations HEADER_UNION name L_BRACE petr4_list(structField) R_BRACE

State 1063:
headerTypeDeclaration -> annotations HEADER . name L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1064

State 1064:
headerTypeDeclaration -> annotations HEADER name . L_BRACE petr4_list(structField) R_BRACE [ # ]
-- On L_BRACE shift to state 1065

State 1065:
headerTypeDeclaration -> annotations HEADER name L_BRACE . petr4_list(structField) R_BRACE [ # ]
-- On petr4_list(structField) shift to state 1066
-- On list_aux(structField) shift to state 206
-- On VARBIT reduce production list_aux(structField) ->
-- On TUPLE reduce production list_aux(structField) ->
-- On STRING reduce production list_aux(structField) ->
-- On R_BRACE reduce production list_aux(structField) ->
-- On PRAGMA reduce production list_aux(structField) ->
-- On NAME reduce production list_aux(structField) ->
-- On INT reduce production list_aux(structField) ->
-- On ERROR reduce production list_aux(structField) ->
-- On DOT reduce production list_aux(structField) ->
-- On BOOL reduce production list_aux(structField) ->
-- On BIT reduce production list_aux(structField) ->
-- On AT reduce production list_aux(structField) ->

State 1066:
headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) . R_BRACE [ # ]
-- On R_BRACE shift to state 1067

State 1067:
headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE . [ # ]
-- On # reduce production headerTypeDeclaration -> annotations HEADER name L_BRACE petr4_list(structField) R_BRACE

State 1068:
enumDeclaration -> annotations ENUM . name L_BRACE identifierList R_BRACE [ # ]
enumDeclaration -> annotations ENUM . BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On BIT shift to state 1069
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1077

State 1069:
enumDeclaration -> annotations ENUM BIT . L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On L_ANGLE shift to state 1070

State 1070:
enumDeclaration -> annotations ENUM BIT L_ANGLE . INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On INTEGER shift to state 1071

State 1071:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER . R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On R_ANGLE shift to state 1072

State 1072:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE . name L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1073

State 1073:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name . L_BRACE specifiedIdentifierList R_BRACE [ # ]
-- On L_BRACE shift to state 1074

State 1074:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE . specifiedIdentifierList R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On specifiedIdentifierList shift to state 1075
-- On specifiedIdentifier shift to state 351
-- On separated_nonempty_list_aux(COMMA,__anonymous_1) shift to state 352
-- On petr4_separated_nonempty_list(COMMA,__anonymous_1) shift to state 358
-- On nonTypeName shift to state 35
-- On name shift to state 355

State 1075:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList . R_BRACE [ # ]
-- On R_BRACE shift to state 1076

State 1076:
enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE . [ # ]
-- On # reduce production enumDeclaration -> annotations ENUM BIT L_ANGLE INTEGER R_ANGLE name L_BRACE specifiedIdentifierList R_BRACE

State 1077:
enumDeclaration -> annotations ENUM name . L_BRACE identifierList R_BRACE [ # ]
-- On L_BRACE shift to state 1078

State 1078:
enumDeclaration -> annotations ENUM name L_BRACE . identifierList R_BRACE [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On separated_nonempty_list_aux(COMMA,__anonymous_0) shift to state 361
-- On petr4_separated_nonempty_list(COMMA,__anonymous_0) shift to state 364
-- On nonTypeName shift to state 35
-- On name shift to state 365
-- On identifierList shift to state 1079

State 1079:
enumDeclaration -> annotations ENUM name L_BRACE identifierList . R_BRACE [ # ]
-- On R_BRACE shift to state 1080

State 1080:
enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE . [ # ]
-- On # reduce production enumDeclaration -> annotations ENUM name L_BRACE identifierList R_BRACE

State 1081:
variableDeclaration' -> . variableDeclaration [ # ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On PRAGMA shift to state 207
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On AT shift to state 302
-- On variableDeclaration shift to state 1082
-- On typeRef shift to state 1083
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On petr4_nonempty_list(annotation) shift to state 324
-- On nonempty_list_aux(annotation) shift to state 325
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146
-- On annotations shift to state 1087
-- On annotation shift to state 331

State 1082:
variableDeclaration' -> variableDeclaration . [ # ]
-- On # accept variableDeclaration

State 1083:
variableDeclaration -> typeRef . name optInitialValue SEMICOLON [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1084

State 1084:
variableDeclaration -> typeRef name . optInitialValue SEMICOLON [ # ]
-- On ASSIGN shift to state 650
-- On optInitialValue shift to state 1085
-- On SEMICOLON reduce production optInitialValue ->

State 1085:
variableDeclaration -> typeRef name optInitialValue . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1086

State 1086:
variableDeclaration -> typeRef name optInitialValue SEMICOLON . [ # ]
-- On # reduce production variableDeclaration -> typeRef name optInitialValue SEMICOLON

State 1087:
variableDeclaration -> annotations . typeRef name optInitialValue SEMICOLON [ # ]
-- On VARBIT shift to state 2
-- On TUPLE shift to state 16
-- On STRING shift to state 18
-- On NAME shift to state 301
-- On INT shift to state 20
-- On ERROR shift to state 46
-- On DOT shift to state 38
-- On BOOL shift to state 48
-- On BIT shift to state 49
-- On typeRef shift to state 1088
-- On typeName shift to state 138
-- On tupleType shift to state 128
-- On specializedType shift to state 140
-- On prefixedType shift to state 44
-- On headerStackType shift to state 142
-- On dotPrefix shift to state 143
-- On baseType shift to state 146

State 1088:
variableDeclaration -> annotations typeRef . name optInitialValue SEMICOLON [ # ]
-- On TYPE shift to state 5
-- On STATE shift to state 8
-- On NAME shift to state 28
-- On KEY shift to state 19
-- On ENTRIES shift to state 30
-- On APPLY shift to state 31
-- On ACTIONS shift to state 32
-- On varName shift to state 33
-- On tableKwName shift to state 34
-- On nonTypeName shift to state 35
-- On name shift to state 1089

State 1089:
variableDeclaration -> annotations typeRef name . optInitialValue SEMICOLON [ # ]
-- On ASSIGN shift to state 650
-- On optInitialValue shift to state 1090
-- On SEMICOLON reduce production optInitialValue ->

State 1090:
variableDeclaration -> annotations typeRef name optInitialValue . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1091

State 1091:
variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON . [ # ]
-- On # reduce production variableDeclaration -> annotations typeRef name optInitialValue SEMICOLON

